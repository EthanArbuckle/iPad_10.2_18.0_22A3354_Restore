uint64_t type metadata accessor for StringTextRange()
{
  return objc_opt_self(_TtC12NowPlayingUI15StringTextRange);
}

void sub_10C574()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_10C5BC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7372657470616863, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  return Hasher._finalize()();
}

void sub_10C63C()
{
  __asm { BR              X10 }
}

uint64_t sub_10C674(uint64_t a1)
{
  String.hash(into:)(a1, 0x7372657470616863, 0xE800000000000000);
  return swift_bridgeObjectRelease(0xE800000000000000);
}

void sub_10C6E0(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_10C724()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7372657470616863, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  return Hasher._finalize()();
}

unint64_t sub_10C7A4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10CD70(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10C7D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10C7FC + 4 * byte_173F8C[*v0]))();
}

void sub_10C7FC(_QWORD *a1@<X8>)
{
  *a1 = 0x7372657470616863;
  a1[1] = 0xE800000000000000;
}

void sub_10C818(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "episodeNotes");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_10C83C(_QWORD *a1@<X8>)
{
  *a1 = 0x697263736E617274;
  a1[1] = 0xEB00000000737470;
}

void sub_10C860(char *a1)
{
  sub_15D624(*a1);
}

void sub_10C86C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10C89C()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0x800000000018C560;
  v1._countAndFlagsBits = 0x49545F4555455551;
  v1._object = (void *)0xEF454C5449545F50;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0xD00000000000001DLL;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_10CA68(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10CA98()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD000000000000012;
  v5._object = (void *)0x800000000018C450;
  v1._object = (void *)0x800000000018C480;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0xD000000000000020;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t storeEnumTagSinglePayload for NowPlayingTipVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10CCA8 + 4 * byte_173F95[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10CCDC + 4 * byte_173F90[v4]))();
}

uint64_t sub_10CCDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10CCE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10CCECLL);
  return result;
}

uint64_t sub_10CCF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10CD00);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10CD04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10CD0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingTipVariant()
{
  return &type metadata for NowPlayingTipVariant;
}

unint64_t sub_10CD2C()
{
  unint64_t result;

  result = qword_202E78;
  if (!qword_202E78)
  {
    result = swift_getWitnessTable(&unk_173FC8, &type metadata for NowPlayingTipVariant);
    atomic_store(result, (unint64_t *)&qword_202E78);
  }
  return result;
}

unint64_t sub_10CD70(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1C65B8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.$transcriptRequestInformation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

void NowPlayingStoreTranscriptIdentifierProvider.updateForEpisode(_:shouldForce:completion:)(void *a1, char a2, void (*a3)(__n128), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55[2];
  uint64_t v56;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v53 - v15;
  v17 = MPModelObject.adamID.getter(v14);
  if ((v18 & 1) != 0 || (v19 = v17, v20 = MPModelObject.uuid.getter(), !v21))
  {
LABEL_11:
    v49 = type metadata accessor for TranscriptRequestInformation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v16, 1, 1, v49);
    KeyPath = swift_getKeyPath(&unk_174070);
    v51 = swift_getKeyPath(&unk_174098);
    sub_2808C((uint64_t)v16, (uint64_t)v13, &qword_1FE0C0);
    swift_retain(v5);
    static Published.subscript.setter(v13, v5, KeyPath, v51);
    sub_9944((uint64_t)v16, &qword_1FE0C0);
    v52 = v5 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
    *(_QWORD *)v52 = 0;
    *(_BYTE *)(v52 + 8) = 1;
    if (!a3)
      return;
    goto LABEL_12;
  }
  v22 = v20;
  v23 = v21;
  v24 = objc_msgSend(a1, "transcriptIdentifier");
  if (v24)
  {

    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRelease(v23);
      goto LABEL_11;
    }
  }
  v25 = v5 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
  if ((*(_BYTE *)(v5
                 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                 + 8) & 1) != 0
    || *(_QWORD *)v25 != v19)
  {
    *(_QWORD *)v25 = v19;
    *(_BYTE *)(v25 + 8) = 0;
    v27 = type metadata accessor for TranscriptRequestInformation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 1, 1, v27);
    v28 = swift_getKeyPath(&unk_174070);
    v29 = swift_getKeyPath(&unk_174098);
    v54 = v22;
    sub_2808C((uint64_t)v16, (uint64_t)v13, &qword_1FE0C0);
    swift_retain(v5);
    static Published.subscript.setter(v13, v5, v28, v29);
    sub_9944((uint64_t)v16, &qword_1FE0C0);
    v30 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
    v31 = objc_msgSend(v30, "privateQueueContext");

    v32 = (_QWORD *)swift_allocObject(&unk_1D20D8, 40, 7);
    v33 = v54;
    v32[2] = v31;
    v32[3] = v33;
    v32[4] = v23;
    sub_7748();
    v34 = v31;
    swift_bridgeObjectRetain(v23);
    v36 = (void *)static OS_dispatch_queue.main.getter(v35);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF88);
    v38 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v36, sub_10DA6C, v32, v37);
    swift_release(v32);

    v56 = v38;
    v39 = swift_allocObject(&unk_1D2100, 24, 7);
    swift_weakInit(v39 + 16, v5);
    v40 = *(_QWORD *)(v5 + 56);
    sub_DF78(v5 + 16, (uint64_t)v55);
    v41 = (_QWORD *)swift_allocObject(&unk_1D2128, 120, 7);
    v41[2] = a3;
    v41[3] = a4;
    sub_27890(v55, (uint64_t)(v41 + 4));
    v41[9] = v40;
    v41[10] = v19;
    v41[11] = v39;
    v41[12] = v34;
    v41[13] = v33;
    v41[14] = v23;
    v42 = v34;
    swift_retain(v40);
    sub_2BE00((uint64_t)a3, a4);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_202E90);
    v44 = sub_27A8C(&qword_202E98, &qword_202E90, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v45 = Publisher<>.sink(receiveValue:)(sub_10DEA4, v41, v43, v44);
    swift_release(v41);
    swift_release(v56);
    v46 = v5 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_subscriptions;
    swift_beginAccess(v46, v55, 33, 0);
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
    v48 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v46, v47, v48);
    swift_endAccess(v55);

    swift_release(v45);
    return;
  }
  v26 = swift_bridgeObjectRelease(v23);
  if (a3)
LABEL_12:
    a3(v26);
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_174070);
  v4 = swift_getKeyPath(&unk_174098);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_10D2EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = v1 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  v14 = type metadata accessor for TranscriptRequestInformation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  sub_2808C((uint64_t)v12, (uint64_t)v10, &qword_1FE0C0);
  Published.init(initialValue:)(v10, v7);
  sub_9944((uint64_t)v12, &qword_1FE0C0);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v15 = v1 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_subscriptions) = _swiftEmptyArrayStorage;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_202FD0);
  v17 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v20, v16, a1, v16, v17);
  sub_27890(v20, v1 + 16);
  *(_QWORD *)(v1 + 56) = a1;
  return v1;
}

uint64_t property wrapper backing initializer of NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2808C(a1, (uint64_t)v4, &qword_1FE0C0);
  Published.init(initialValue:)(v4, v2);
  return sub_9944(a1, &qword_1FE0C0);
}

uint64_t sub_10D548@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_174070);
  v5 = swift_getKeyPath(&unk_174098);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_10D5B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_2808C(a1, (uint64_t)&v14 - v8, &qword_1FE0C0);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_174070);
  v12 = swift_getKeyPath(&unk_174098);
  sub_2808C((uint64_t)v9, (uint64_t)v6, &qword_1FE0C0);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_9944((uint64_t)v9, &qword_1FE0C0);
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_174070);
  v7 = swift_getKeyPath(&unk_174098);
  sub_2808C(a1, (uint64_t)v5, &qword_1FE0C0);
  swift_retain();
  static Published.subscript.setter(v5, v1, KeyPath, v7);
  return sub_9944(a1, &qword_1FE0C0);
}

void (*NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_174070);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_174098);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_5BEAC;
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.$transcriptRequestInformation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBC98);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation, v11, 33, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*NowPlayingStoreTranscriptIdentifierProvider.$transcriptRequestInformation.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBC98);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_5C12C;
}

void sub_10D988(void *a1@<X0>, uint64_t *a2@<X8>)
{
  NSString v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "episodeForUuid:", v4);

  if (v5)
  {
    v6 = objc_msgSend(v5, "priceType");
    if (v6)
    {
      v7 = v6;
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;

    }
    else
    {

      v8 = 0;
      v10 = 0;
    }
    *a2 = v8;
    a2[1] = v10;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

uint64_t sub_10DA40()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10DA6C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10D988(*(void **)(v1 + 16), a1);
}

uint64_t sub_10DA78()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10DA9C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t Strong;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  __int128 v62[2];
  __int128 v63;
  unint64_t v64;
  void *v65;

  v58 = a5;
  v59 = a8;
  v56 = a4;
  v57 = a6;
  v60 = a3;
  v61 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_202F80);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PriceType(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = __chkstk_darwin(v18);
  v22 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v21);
  v25 = (char *)&v53 - v24;
  v26 = a1[1];
  if (v26)
  {
    v27 = *a1;
    swift_bridgeObjectRetain(v26);
    PriceType.init(rawValue:)(v27, v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      v54 = a9;
      v55 = a10;
      v53 = a7 + 16;
      v28 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v28(v25, v17, v18);
      sub_DF78(v56, (uint64_t)&v63);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v25, v18);
      sub_27890(&v63, (uint64_t)v62);
      v29 = *(unsigned __int8 *)(v19 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = (v20 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = swift_allocObject(&unk_1D2150, v31 + 40, v29 | 7);
      v33 = v57;
      v34 = v58;
      *(_QWORD *)(v32 + 16) = v58;
      *(_QWORD *)(v32 + 24) = v33;
      v28((char *)(v32 + v30), v22, v18);
      sub_27890(v62, v32 + v31);
      __swift_instantiateConcreteTypeFromMangledName(&qword_202F98);
      v35 = swift_retain(v34);
      v36 = Promise.__allocating_init()(v35);
      v37 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v14, 1, 1, v37);
      v38 = (_QWORD *)swift_allocObject(&unk_1D2178, 56, 7);
      v38[2] = 0;
      v38[3] = 0;
      v38[4] = &unk_202F90;
      v38[5] = v32;
      v38[6] = v36;
      swift_retain(v36);
      v39 = sub_10F528((uint64_t)v14, (uint64_t)&unk_202FA8, (uint64_t)v38);
      swift_release(v39);
      v40 = swift_allocObject(&unk_1D2100, 24, 7);
      v41 = v53;
      swift_beginAccess(v53, v62, 0, 0);
      Strong = swift_weakLoadStrong(v41);
      swift_weakInit(v40 + 16, Strong);
      swift_release(Strong);
      v43 = (_QWORD *)swift_allocObject(&unk_1D21A0, 64, 7);
      v44 = v60;
      v45 = (uint64_t)v61;
      v43[2] = v61;
      v43[3] = v44;
      v43[4] = v40;
      v46 = v59;
      v47 = v54;
      v48 = v55;
      v43[5] = v59;
      v43[6] = v47;
      v43[7] = v48;
      v49 = sub_7748();
      sub_2BE00(v45, v44);
      v50 = v46;
      swift_bridgeObjectRetain(v48);
      v52 = static OS_dispatch_queue.main.getter(v51);
      v64 = v49;
      v65 = &protocol witness table for OS_dispatch_queue;
      *(_QWORD *)&v63 = v52;
      Promise.then(getResult:on:)(sub_10F6B8, v43, &v63);
      swift_release(v36);
      swift_release(v43);
      __swift_destroy_boxed_opaque_existential_0(&v63);
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    }
    result = sub_9944((uint64_t)v17, &qword_202F80);
  }
  if (v61)
    return v61(result);
  return result;
}

uint64_t sub_10DE50()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10DEA4(uint64_t *a1)
{
  uint64_t v1;

  return sub_10DA9C(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(void **)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_10DED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TranscriptRequestInformationIntent;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for PriceType(0);
  v5[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[8] = v7;
  v5[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  TranscriptRequestInformationIntent = type metadata accessor for FetchTranscriptRequestInformationIntent(0);
  v5[10] = TranscriptRequestInformationIntent;
  v9 = *(_QWORD *)(TranscriptRequestInformationIntent - 8);
  v5[11] = v9;
  v5[12] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v5[13] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[14] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[15] = swift_task_alloc(v12);
  v5[16] = swift_task_alloc(v12);
  return swift_task_switch(sub_10DFA0, 0, 0);
}

uint64_t sub_10DFA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v6 = v0[8];
  v5 = v0[9];
  v7 = (_QWORD *)v0[6];
  v20 = v0[7];
  v8 = v0[5];
  v21 = v0[4];
  v9 = JSONContext.init()();
  JSONContext.withActionKinds()(v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[17] = v10;
  v10(v1, v3);
  type metadata accessor for IntentDispatchOptions(0);
  v11 = swift_retain();
  v12 = BaseObjectGraph.__allocating_init(_:)(v11);
  v13 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[18] = v13;
  v14 = swift_release(v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16))(v5, v8, v20, v14);
  FetchTranscriptRequestInformationIntent.init(adamID:priceType:)(v21, v5);
  v15 = v7[3];
  v16 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v15);
  v17 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[19] = v17;
  v18 = sub_10F824();
  *v17 = v0;
  v17[1] = sub_10E0DC;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[2], v0[12], v13, v0[10], v18, v15, v16);
}

uint64_t sub_10E0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10E1D8;
  else
    v3 = sub_10E140;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10E140()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 144));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v1(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10E1D8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 144));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v1(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10E270(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  _QWORD *v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  __n128 v77;
  void (*v78)(char *, uint64_t, __n128);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  __n128 v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char *v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void *v108;
  _QWORD *v109;
  id v110;
  char *v111;
  id v112;
  __n128 v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  void *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t (*v120)(void);
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t aBlock[5];
  _QWORD *v130;
  uint64_t v131;
  _BYTE v132[32];

  v117 = a7;
  v119 = a6;
  v116 = a5;
  v127 = a3;
  v10 = type metadata accessor for Logger(0);
  v125 = *(_QWORD *)(v10 - 8);
  v126 = v10;
  v11 = __chkstk_darwin(v10);
  v123 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v114 - v14;
  __chkstk_darwin(v13);
  v121 = (char *)&v114 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v114 - v21;
  v122 = type metadata accessor for TranscriptRequestInformation(0);
  v128 = *(_QWORD **)(v122 - 8);
  v23 = v128[8];
  v24 = __chkstk_darwin(v122);
  v25 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v118 = (char *)&v114 - v27;
  __chkstk_darwin(v26);
  v124 = (char *)&v114 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_202FB0);
  __chkstk_darwin(v29);
  v31 = (uint64_t *)((char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  a4 += 16;
  swift_beginAccess(a4, v132, 0, 0);
  result = swift_weakLoadStrong(a4);
  if (!result)
  {
    v46 = a2;
    if (!a2)
      return result;
    return v46();
  }
  v33 = result;
  v120 = a2;
  sub_2808C(a1, (uint64_t)v31, &qword_202FB0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v31, v29);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v35 = *v31;
    v36 = v123;
    static Logger.transcripts.getter(EnumCaseMultiPayload);
    swift_retain(v33);
    swift_errorRetain(v35);
    swift_retain(v33);
    v37 = swift_errorRetain(v35);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc(22, -1);
      v41 = (uint64_t *)swift_slowAlloc(8, -1);
      v42 = swift_slowAlloc(32, -1);
      aBlock[0] = v42;
      *(_DWORD *)v40 = 136315394;
      v43 = *(_BYTE *)(v33
                     + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                     + 8);
      v128 = (_QWORD *)v42;
      if ((v43 & 1) != 0)
      {
        v44 = 0;
        v45 = 0;
      }
      else
      {
        v131 = *(_QWORD *)(v33
                         + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID);
        v82 = sub_40324();
        v44 = BinaryInteger.description.getter(&type metadata for UInt64, v82);
        v45 = v83;
      }
      v84 = Optional<A>.description.getter(v44, v45);
      v86 = v85;
      swift_bridgeObjectRelease(v45);
      v131 = sub_C6F4(v84, v86, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v40 + 4, v40 + 12);
      swift_release_n(v33, 2);
      swift_bridgeObjectRelease(v86);
      *(_WORD *)(v40 + 12) = 2112;
      swift_errorRetain(v35);
      v87 = _swift_stdlib_bridgeErrorToNSError(v35);
      v131 = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v40 + 14, v40 + 22);
      *v41 = v87;
      swift_errorRelease(v35);
      swift_errorRelease(v35);
      _os_log_impl(&dword_0, v38, v39, "Unable to fetch transcript identifier for local episode with AdamID %s with error: %@", (uint8_t *)v40, 0x16u);
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
      swift_arrayDestroy(v41, 1, v88);
      swift_slowDealloc(v41, -1, -1);
      v89 = v128;
      swift_arrayDestroy(v128, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v89, -1, -1);
      swift_slowDealloc(v40, -1, -1);

      swift_errorRelease(v35);
      swift_release(v33);
      result = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v123, v126);
    }
    else
    {
      swift_release(v33);
      swift_errorRelease(v35);
      swift_release_n(v33, 2);
      swift_errorRelease(v35);
      swift_errorRelease(v35);

      result = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v36, v126);
    }
    v46 = v120;
    if (v120)
      return v46();
    return result;
  }
  v47 = v124;
  v48 = v122;
  v123 = (char *)v128[4];
  v49 = ((uint64_t (*)(char *, uint64_t *, uint64_t))v123)(v124, v31, v122);
  v50 = TranscriptRequestInformation.episodeAdamId.getter(v49);
  v51 = AdamID.init(_:)(v50);
  v52 = v33 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
  v53 = *(_BYTE *)(v33
                 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                 + 8);
  if ((v54 & 1) != 0)
  {
    if (*(_BYTE *)(v33
                  + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                  + 8))
      goto LABEL_12;
  }
  else
  {
    if (v51 != *(_QWORD *)v52)
      v53 = 1;
    if ((v53 & 1) == 0)
    {
LABEL_12:
      v55 = v128;
      v115 = (void (*)(char *, char *, uint64_t))v128[2];
      v115(v22, v47, v48);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v55[7])(v22, 0, 1, v48);
      KeyPath = swift_getKeyPath(&unk_174070);
      v57 = swift_getKeyPath(&unk_174098);
      sub_2808C((uint64_t)v22, (uint64_t)v20, &qword_1FE0C0);
      swift_retain(v33);
      static Published.subscript.setter(v20, v33, KeyPath, v57);
      v58 = sub_9944((uint64_t)v22, &qword_1FE0C0);
      v59 = v121;
      static Logger.transcripts.getter(v58);
      v60 = swift_retain_n(v33, 2);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc(12, -1);
        v64 = swift_slowAlloc(32, -1);
        aBlock[0] = v64;
        *(_DWORD *)v63 = 136315138;
        if ((*(_BYTE *)(v52 + 8) & 1) != 0)
        {
          v65 = 0;
          v66 = 0;
        }
        else
        {
          v131 = *(_QWORD *)v52;
          v91 = sub_40324();
          v65 = BinaryInteger.description.getter(&type metadata for UInt64, v91);
          v66 = v92;
        }
        v93 = Optional<A>.description.getter(v65, v66);
        v95 = v94;
        swift_bridgeObjectRelease(v66);
        v131 = sub_C6F4(v93, v95, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v63 + 4, v63 + 12);
        swift_release_n(v33, 2);
        v96 = v95;
        v48 = v122;
        swift_bridgeObjectRelease(v96);
        _os_log_impl(&dword_0, v61, v62, "Successfully fetched transcript identifier from MAPI for local episode with AdamId %s", v63, 0xCu);
        swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v64, -1, -1);
        swift_slowDealloc(v63, -1, -1);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v121, v126);
      }
      else
      {

        swift_release_n(v33, 2);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v59, v126);
      }
      v46 = v120;
      v97 = v124;
      v98 = v128;
      v99 = v117;
      v100 = v116;
      v101 = v118;
      v115(v118, v124, v48);
      v102 = *((unsigned __int8 *)v98 + 80);
      v103 = (v102 + 40) & ~v102;
      v104 = (_QWORD *)swift_allocObject(&unk_1D21C8, v103 + v23, v102 | 7);
      v105 = v98;
      v106 = v104;
      v107 = v119;
      v104[2] = v100;
      v104[3] = v107;
      v104[4] = v99;
      ((void (*)(char *, char *, uint64_t))v123)((char *)v104 + v103, v101, v48);
      aBlock[4] = (uint64_t)sub_10F744;
      v130 = v106;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_F528;
      aBlock[3] = (uint64_t)&block_descriptor_29;
      v108 = _Block_copy(aBlock);
      v109 = v130;
      v110 = v100;
      v111 = v97;
      v112 = v110;
      swift_bridgeObjectRetain(v99);
      objc_msgSend(v112, "performBlock:", v108, swift_release(v109).n128_f64[0]);
      _Block_release(v108);
      v113 = swift_release(v33);
      result = ((uint64_t (*)(char *, uint64_t, __n128))v105[1])(v111, v48, v113);
      if (v46)
        return v46();
      return result;
    }
  }
  static Logger.transcripts.getter(v51);
  v67 = v128;
  v68 = ((uint64_t (*)(char *, char *, uint64_t))v128[2])(v25, v47, v48);
  v69 = v47;
  v70 = Logger.logObject.getter(v68);
  v71 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(12, -1);
    v73 = swift_slowAlloc(32, -1);
    aBlock[0] = v73;
    *(_DWORD *)v72 = 136315138;
    v74 = TranscriptRequestInformation.episodeAdamId.getter(v73);
    v76 = v75;
    v131 = sub_C6F4(v74, v75, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v72 + 4, v72 + 12);
    v77 = swift_bridgeObjectRelease(v76);
    v78 = (void (*)(char *, uint64_t, __n128))v128[1];
    v79 = v122;
    v78((char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v122, v77);
    _os_log_impl(&dword_0, v70, v71, "Fetched transcript identifier from MAPI for local episode with AdamId %s, but this is no longer playing episode", v72, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1, -1);
    swift_slowDealloc(v72, -1, -1);
    swift_release(v33);

    (*(void (**)(char *, uint64_t))(v125 + 8))(v15, v126);
    v80 = v124;
    v81 = v79;
  }
  else
  {

    v78 = (void (*)(char *, uint64_t, __n128))v67[1];
    ((void (*)(char *, uint64_t))v78)(v25, v48);
    v90 = swift_release(v33);
    (*(void (**)(char *, uint64_t, __n128))(v125 + 8))(v15, v126, v90);
    v80 = v69;
    v81 = v48;
  }
  result = ((uint64_t (*)(char *, uint64_t))v78)(v80, v81);
  v46 = v120;
  if (v120)
    return v46();
  return result;
}

void sub_10EC7C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v33 - v6;
  v8 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(a1, "episodeForUuid:", v8);

  if (v34)
  {
    v9 = (uint64_t)objc_msgSend(v34, "storeTrackId");
    v10 = AdamID.init(rawValue:)(v9 & ~(v9 >> 63));
    v11 = TranscriptRequestInformation.episodeAdamId.getter();
    v12 = AdamID.init(_:)(v11);
    if ((v13 & 1) != 0 || v10 != v12)
    {

      return;
    }
    v14 = objc_msgSend(v34, "podcast");
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, "channel");

      if (v16)
      {
        if (objc_msgSend(v16, "subscriptionActive"))
        {
          TranscriptRequestInformation.source.getter();
          v17 = type metadata accessor for TranscriptSource(0);
          v18 = *(_QWORD *)(v17 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
          {
            sub_9944((uint64_t)v7, &qword_1FDE18);
            v20 = 0;
          }
          else
          {
            TranscriptSource.rawValue.getter();
            v32 = v31;
            (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
            v20 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v19 = swift_bridgeObjectRelease(v32).n128_u64[0];
          }
          objc_msgSend(v34, "setEntitledTranscriptProvider:", v20, v19);

LABEL_15:
          TranscriptRequestInformation.ttmlIdentifier.getter(v26);
          v28 = v27;
          v29 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v30 = swift_bridgeObjectRelease(v28).n128_u64[0];
          objc_msgSend(v34, "setTranscriptIdentifier:", v29, v30);

          return;
        }

      }
    }
    TranscriptRequestInformation.source.getter();
    v21 = type metadata accessor for TranscriptSource(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v5, 1, v21) == 1)
    {
      sub_9944((uint64_t)v5, &qword_1FDE18);
      v20 = 0;
    }
    else
    {
      TranscriptSource.rawValue.getter();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
      v20 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v23 = swift_bridgeObjectRelease(v25).n128_u64[0];
    }
    objc_msgSend(v34, "setFreeTranscriptProvider:", v20, v23);
    goto LABEL_15;
  }
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_subscriptions));
  return v0;
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.__deallocating_deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 2);
  swift_release(v0[7]);
  v1 = (char *)v0
     + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider_subscriptions));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10F058()
{
  return type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider(0);
}

uint64_t type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_202ED0;
  if (!qword_202ED0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingStoreTranscriptIdentifierProvider);
  return result;
}

void sub_10F09C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10F138(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_174128;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_10F138(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_202EE0)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE0C0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_202EE0);
  }
}

uint64_t sub_10F190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for PriceType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_10F220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for PriceType(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_202F8C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_27CA8;
  return sub_10DED8(a1, v6, v7, v8, v9);
}

uint64_t sub_10F2C4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v6[2] = a6;
  v8 = type metadata accessor for TranscriptRequestInformation(0);
  v6[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[4] = v9;
  v10 = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[5] = v10;
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc(a4[1]);
  v6[6] = v11;
  *v11 = v6;
  v11[1] = sub_10F35C;
  return v13(v10);
}

uint64_t sub_10F35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10F418;
  else
    v3 = sub_10F3C0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10F3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  Promise.resolve(_:)(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10F418()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10F460()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10F494(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_202FA4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_27CA8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_202FA0
                                                                                     + dword_202FA0))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10F528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_9944(a1, (uint64_t *)&unk_1FB3C0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      v12 = swift_unknownObjectRetain(v9);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
      v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1D2218, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_202FC0, v17);
}

uint64_t sub_10F674()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10F6B8(uint64_t a1)
{
  uint64_t v1;

  return sub_10E270(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10F6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TranscriptRequestInformation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10F744()
{
  uint64_t v0;

  type metadata accessor for TranscriptRequestInformation(0);
  sub_10EC7C(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_29(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10F790()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10F7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_202FBC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_281D8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_202FB8 + dword_202FB8))(a1, v4);
}

unint64_t sub_10F824()
{
  unint64_t result;
  uint64_t TranscriptRequestInformationIntent;

  result = qword_202FC8;
  if (!qword_202FC8)
  {
    TranscriptRequestInformationIntent = type metadata accessor for FetchTranscriptRequestInformationIntent(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for FetchTranscriptRequestInformationIntent, TranscriptRequestInformationIntent);
    atomic_store(result, (unint64_t *)&qword_202FC8);
  }
  return result;
}

void sub_10F86C()
{
  __asm { BR              X11 }
}

_QWORD *sub_10F8A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = a1[2];
  v1 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (_QWORD *)swift_allocObject(&unk_1D2348, 48, 7);
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v3;
  v5[5] = v4;
  swift_bridgeObjectRetain(v1);
  return v5;
}

void sub_10F96C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10F9A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  BOOL v9;
  BOOL v10;

  if (a2 >> 62)
    return 0;
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(double *)(a1 + 32);
  v3 = *(double *)(a1 + 40);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(double *)(a2 + 32);
  v7 = *(double *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 16) == v5 && v2 == v6;
  if ((v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(a1 + 16), v2, v5, v6, 0) & 1) != 0)
    && (v4 == v8 ? (v10 = v3 == v7) : (v10 = 0), v10))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

void sub_10FAD0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  Swift::String v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  char *v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  _QWORD *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  _QWORD v124[2];
  uint64_t v125;
  uint64_t v126;

  v12 = type metadata accessor for Logger(0);
  v110 = *(_QWORD *)(v12 - 8);
  v111 = v12;
  __chkstk_darwin(v12);
  v114 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = a6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE220);
  v15 = sub_AD604(&qword_1FE228, &qword_1FE220);
  v104 = v14;
  v117 = v15;
  if ((Collection.isNotEmpty.getter(v14, v15) & 1) == 0)
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v51 = swift_allocObject(v50, 40, 7);
    *(_OWORD *)(v51 + 16) = xmmword_16B2D0;
    *(double *)&v52 = (double)Duration.components.getter(a2, a3);
    *(double *)&v53 = (double)Duration.components.getter(a4, a5);
    v54 = type metadata accessor for SilentContent(0);
    swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
    v55 = sub_1462C(0, 0, v52, 0, 0, 0, v53, 0, 0xF000000000000007) | 0x4000000000000000;
    v56 = type metadata accessor for TranscriptContentViewModel();
    v57 = swift_allocObject(v56, 24, 7);
    *(_QWORD *)(v57 + 16) = v55;
    *(_QWORD *)(v51 + 32) = v57;
    v118 = v51;
    specialized Array._endMutation()(v57);
    return;
  }
  v16 = sub_112258(a4, a5);
  v17 = a1[3];
  v18 = a1[4];
  v103 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = dispatch thunk of TimelineAlignment.nonMatchingRangesInReference(with:)(a2, a3, v17, v18);
  v21 = *(_QWORD *)(v19 + 16);
  v112 = a4;
  v113 = a5;
  if (v21)
  {
    v22 = 0;
    v108 = v21;
    v102 = v21 - 1;
    v23 = v19 + 56;
    v115 = _swiftEmptyArrayStorage;
    *(_QWORD *)&v20 = 136315138;
    v106 = v20;
    v105 = (char *)&type metadata for Any + 8;
    v109 = v19;
    v101 = v19 + 56;
    do
    {
      v24 = (uint64_t *)(v23 + 32 * v22);
      while (1)
      {
        if (v22 >= *(_QWORD *)(v19 + 16))
          goto LABEL_86;
        v25 = *(v24 - 3);
        v26 = *(v24 - 2);
        v27 = *(v24 - 1);
        v28 = *v24;
        v116 = v22 + 1;
        v29 = static Duration.- infix(_:_:)(v27, v28, v25, v26);
        v31 = v30;
        v32 = static Duration.seconds(_:)(v16);
        v34 = static Duration.< infix(_:_:)(v29, v31, v32, v33);
        if ((v34 & 1) != 0)
          break;
        v35 = v114;
        v36 = static Logger.transcripts.getter(v34);
        v37 = Logger.logObject.getter(v36);
        v38 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = swift_slowAlloc(12, -1);
          v107 = swift_slowAlloc(32, -1);
          v124[1] = v28;
          v125 = v107;
          *(_DWORD *)v39 = v106;
          v118 = v25;
          v119 = v26;
          v122 = 0;
          v123 = 0xE000000000000000;
          v124[0] = v27;
          _print_unlocked<A, B>(_:_:)(&v118, &v122, &type metadata for Duration, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v40._countAndFlagsBits = 3026478;
          v40._object = (void *)0xE300000000000000;
          String.append(_:)(v40);
          _print_unlocked<A, B>(_:_:)(v124, &v122, &type metadata for Duration, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v41 = v123;
          *(_QWORD *)(v39 + 4) = sub_C6F4(v122, v123, &v125);
          swift_bridgeObjectRelease(v41);
          _os_log_impl(&dword_0, v37, v38, "Discarded a reference dynamic ad range that exceeded the max duration. %s", (uint8_t *)v39, 0xCu);
          v42 = v107;
          swift_arrayDestroy(v107, 1, v105);
          swift_slowDealloc(v42, -1, -1);
          swift_slowDealloc(v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v110 + 8))(v114, v111);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v110 + 8))(v35, v111);
        }
        v24 += 4;
        v22 = v116;
        a4 = v112;
        a5 = v113;
        v19 = v109;
        if (v108 == v116)
          goto LABEL_20;
      }
      v43 = v115;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v115);
      v126 = (uint64_t)v43;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_A9BEC(0, v43[2] + 1, 1);
        v43 = (_QWORD *)v126;
      }
      v45 = v43;
      v47 = v43[2];
      v46 = v43[3];
      if (v47 >= v46 >> 1)
      {
        sub_A9BEC(v46 > 1, v47 + 1, 1);
        v45 = (_QWORD *)v126;
      }
      v45[2] = v47 + 1;
      v115 = v45;
      v48 = &v45[4 * v47];
      v48[4] = v25;
      v48[5] = v26;
      v48[6] = v27;
      v48[7] = v28;
      v49 = v102 == v22;
      a4 = v112;
      a5 = v113;
      v19 = v109;
      v23 = v101;
      v22 = v116;
    }
    while (!v49);
  }
  else
  {
    v115 = _swiftEmptyArrayStorage;
  }
LABEL_20:
  swift_bridgeObjectRelease(v19);
  v58 = v103[3];
  v59 = v103[4];
  __swift_project_boxed_opaque_existential_1(v103, v58);
  v60 = dispatch thunk of TimelineAlignment.nonMatchingRangesInPlayer(with:)(a4, a5, v58, v59);
  v61 = v60;
  v62 = _swiftEmptyArrayStorage;
  v116 = *(_QWORD *)(v60 + 16);
  if (v116)
  {
    v63 = 0;
    v64 = 0;
    v65 = (uint64_t *)(v60 + 56);
    v111 = v60;
    do
    {
      if (v63 >= *(_QWORD *)(v61 + 16))
        goto LABEL_87;
      v70 = *(v65 - 3);
      v69 = *(v65 - 2);
      v71 = *(v65 - 1);
      v72 = *v65;
      v118 = v70;
      v119 = v69;
      v120 = v71;
      v121 = v72;
      if ((sub_1116F8(&v118, v16) & 1) != 0)
      {
        v73 = swift_isUniquelyReferenced_nonNull_native(v62);
        v124[0] = v62;
        v114 = v64;
        if ((v73 & 1) == 0)
        {
          sub_A9BEC(0, v62[2] + 1, 1);
          v62 = (_QWORD *)v124[0];
        }
        v67 = v62[2];
        v66 = v62[3];
        if (v67 >= v66 >> 1)
        {
          sub_A9BEC(v66 > 1, v67 + 1, 1);
          v62 = (_QWORD *)v124[0];
        }
        v62[2] = v67 + 1;
        v68 = &v62[4 * v67];
        v68[4] = v70;
        v68[5] = v69;
        v68[6] = v71;
        v68[7] = v72;
        v64 = v114;
        v61 = v111;
      }
      ++v63;
      v65 += 4;
    }
    while (v116 != v63);
  }
  else
  {
    v64 = 0;
  }
  v114 = v64;
  swift_bridgeObjectRelease(v61);
  v118 = a6;
  v124[0] = v62;
  v122 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a6);
  v75 = v112;
  v74 = v113;
  v76 = v103;
  v77 = v104;
  while (1)
  {
    v126 = a6;
    if ((Collection.isNotEmpty.getter(v77, v117) & 1) == 0)
    {
      v78 = v124[0];
      v126 = v124[0];
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_203080);
      v80 = sub_AD604(&qword_203088, &qword_203080);
      if ((Collection.isNotEmpty.getter(v79, v80) & 1) == 0)
      {
        swift_release(v115);
        swift_bridgeObjectRelease(a6);
        sub_114DD4(&v122);
        sub_1152F0(&v122, v75, v74);
        swift_bridgeObjectRelease(v78);
        return;
      }
    }
    v81 = (unint64_t)a6 >> 62;
    if ((unint64_t)a6 >> 62)
    {
      if (a6 < 0)
        v92 = a6;
      else
        v92 = a6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a6);
      if (!_CocoaArrayWrapper.endIndex.getter(v92))
      {
LABEL_64:
        swift_bridgeObjectRelease(a6);
LABEL_65:
        v89 = sub_112300((unint64_t)v124, &v118, (uint64_t)v76, 0);
        v126 = v89;
        sub_112AF4((uint64_t)&v126);
        v93 = v122;
        if ((unint64_t)v122 >> 62)
        {
          if (v122 < 0)
            v99 = v122;
          else
            v99 = v122 & 0xFFFFFFFFFFFFFF8;
          swift_retain();
          swift_bridgeObjectRetain(v93);
          v94 = _CocoaArrayWrapper.endIndex.getter(v99);
          if (v94)
          {
LABEL_67:
            v95 = v94 - 1;
            if (__OFSUB__(v94, 1))
              goto LABEL_83;
            if ((v93 & 0xC000000000000001) != 0)
            {
              v94 = specialized _ArrayBuffer._getElementSlowPath(_:)(v95, v93);
            }
            else
            {
              if ((v95 & 0x8000000000000000) != 0)
                goto LABEL_84;
              if (v95 >= *(_QWORD *)((char *)&dword_10 + (v93 & 0xFFFFFFFFFFFFF8)))
                goto LABEL_85;
              v94 = *(_QWORD *)(v93 + 8 * v95 + 32);
              swift_retain();
            }
          }
        }
        else
        {
          v94 = *(_QWORD *)((char *)&dword_10 + (v122 & 0xFFFFFFFFFFFFF8));
          swift_retain();
          swift_bridgeObjectRetain(v93);
          if (v94)
            goto LABEL_67;
        }
        swift_bridgeObjectRelease(v93);
        sub_1135A0(v89);
        v97 = v96;
        swift_release(v89);
        swift_release(v94);
        if ((v97 & 1) != 0)
        {
          v98 = swift_retain();
          sub_113C00(v98, &v122);
          swift_release(v89);
          sub_1146BC(&v122);
        }
        goto LABEL_32;
      }
    }
    else
    {
      v82 = *(_QWORD *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(a6);
      if (!v82)
        goto LABEL_64;
    }
    if ((a6 & 0xC000000000000001) == 0)
      break;
    v83 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a6);
LABEL_40:
    swift_bridgeObjectRelease(a6);
    sub_111998();
    v85 = v84;
    swift_release(v83);
    if ((v85 & 1) == 0)
      goto LABEL_65;
    if (v81)
    {
      if (a6 < 0)
        v86 = a6;
      else
        v86 = a6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a6);
      v87 = _CocoaArrayWrapper.endIndex.getter(v86);
      swift_bridgeObjectRelease(a6);
      if (!v87)
        goto LABEL_90;
      swift_bridgeObjectRetain(a6);
      v88 = _CocoaArrayWrapper.endIndex.getter(v86);
      swift_bridgeObjectRelease(a6);
      if (!v88)
        goto LABEL_88;
    }
    else if (!*(_QWORD *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFF8)))
    {
      goto LABEL_89;
    }
    if ((a6 & 0xC000000000000001) != 0)
    {
      v89 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a6);
      if (v81)
        goto LABEL_54;
    }
    else
    {
      if (!*(_QWORD *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_92;
      v89 = *(_QWORD *)(a6 + 32);
      swift_retain();
      if (v81)
      {
LABEL_54:
        if (a6 < 0)
          v91 = a6;
        else
          v91 = a6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a6);
        v90 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease(a6);
        goto LABEL_58;
      }
    }
    v90 = *(_QWORD *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFF8));
LABEL_58:
    if (!v90)
      goto LABEL_91;
    sub_E2550(0, 1);
LABEL_32:
    swift_release(v89);
    a6 = v118;
  }
  if (*(_QWORD *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFF8)))
  {
    v83 = *(_QWORD *)(a6 + 32);
    swift_retain();
    goto LABEL_40;
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
}

_QWORD *sub_110488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(a2, 2);
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v6))
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain(a1);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      JUMPOUT(0x110E50);
    }
    v5 = *(_QWORD *)(a2 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease(a2);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X9 }
  swift_bridgeObjectRelease(a1);
  sub_A5950(a2);
  swift_release(v5);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_110EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _swiftEmptyArrayStorage;
  v7 = type metadata accessor for TranscriptModel.Speaker(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v15 = a2;
    else
      v15 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    result = _CocoaArrayWrapper.endIndex.getter(v15);
    v8 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(a2);
    if (!v8)
    {
LABEL_10:
      swift_bridgeObjectRelease(a2);
      v14 = v18;
      swift_bridgeObjectRetain(v18);
      sub_1121D0((uint64_t)v6);
      swift_bridgeObjectRelease(v14);
      return (uint64_t)v14;
    }
  }
  if (v8 >= 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v10 = 0;
      do
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10++, a2);
        v17 = v11;
        sub_111C2C(&v17, (uint64_t)v6, a1, &v18);
        swift_unknownObjectRelease(v11);
      }
      while (v8 != v10);
    }
    else
    {
      v12 = 0;
      do
      {
        v13 = *(_QWORD *)(a2 + 8 * v12++ + 32);
        v17 = v13;
        swift_retain();
        sub_111C2C(&v17, (uint64_t)v6, a1, &v18);
        swift_release(v13);
      }
      while (v8 != v12);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_11107C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1110B4(double *a1)
{
  unint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  void *v28;
  Swift::String v29;
  _QWORD v31[16];

  v2 = *((_QWORD *)a1 + 2);
  v1 = *((_QWORD *)a1 + 3);
  v3 = a1[4];
  v4 = a1[5];
  v31[0] = 0;
  v31[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  v5._countAndFlagsBits = 0x746E6F4374786554;
  v5._object = (void *)0xEF2844492E746E65;
  String.append(_:)(v5);
  Double.write<A>(to:)(v31, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v3);
  v6._countAndFlagsBits = 0x202E2E2E20;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  Double.write<A>(to:)(v31, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v4);
  v7._countAndFlagsBits = 44;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRetain(v1);
  v8 = sub_1120A0(20, v2, v1);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = swift_bridgeObjectRelease(v1);
  v16._countAndFlagsBits = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))static String._fromSubstring(_:))(v8, v10, v12, v14, v15);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(object);
  v18._countAndFlagsBits = 0x202E2E2E20;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRetain(v1);
  v19 = sub_112128(0x14uLL, v2, v1);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = swift_bridgeObjectRelease(v1);
  v27._countAndFlagsBits = ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, __n128))static String._fromSubstring(_:))(v19, v21, v23, v25, v26);
  v28 = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  v29._countAndFlagsBits = 41;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  return v31[0];
}

void sub_11141C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_111450(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;

  v3 = a2[2];
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[5];
  Hasher._combine(_:)(0);
  String.hash(into:)(v2, v3, v4);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v5;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v6;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
}

uint64_t sub_1114D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(1uLL);
  if ((~v3 & 0xF000000000000007) == 0)
  {
    Hasher._combine(_:)(0);
    JUMPOUT(0x1114C4);
  }
  Hasher._combine(_:)(1uLL);
  swift_retain();
  sub_11141C(v2, v3);
  return sub_CDF8(v3);
}

Swift::Int sub_111530()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  sub_11141C((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_111574(uint64_t a1)
{
  uint64_t *v1;

  sub_11141C(a1, *v1);
}

Swift::Int sub_11157C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  sub_11141C((uint64_t)v4, v2);
  return Hasher._finalize()();
}

void sub_1115BC()
{
  uint64_t *v0;

  sub_11107C(*v0);
}

void sub_1115C4(uint64_t *a1)
{
  sub_10F96C(*a1);
}

uint64_t sub_1115D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16) & 0x3FFFFFFFFFFFFFFFLL);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for TranscriptContentViewModel()
{
  return objc_opt_self(_TtC12NowPlayingUI26TranscriptContentViewModel);
}

ValueMetadata *type metadata accessor for TranscriptContentViewModel.ID()
{
  return &type metadata for TranscriptContentViewModel.ID;
}

unint64_t sub_11162C()
{
  unint64_t result;

  result = qword_203078;
  if (!qword_203078)
  {
    result = swift_getWitnessTable(&unk_1741E0, &type metadata for TranscriptContentViewModel.ID);
    atomic_store(result, (unint64_t *)&qword_203078);
  }
  return result;
}

void sub_111670(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_10F86C();
  *a1 = v2;
}

uint64_t sub_111698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  sub_10F86C();
  v1 = v0;
  sub_10F86C();
  v3 = v2;
  sub_10F96C(v1);
  v5 = v4;
  swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
  swift_release(v1 & 0x3FFFFFFFFFFFFFFFLL);
  return v5 & 1;
}

uint64_t sub_1116F8(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint8_t *v30;
  Swift::String v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = static Duration.- infix(_:_:)(v11, v10, *a1, v8);
  v14 = v13;
  v15 = static Duration.seconds(_:)(a2);
  v17 = static Duration.< infix(_:_:)(v12, v14, v15, v16);
  if ((v17 & 1) != 0)
  {
    v18 = static Duration.- infix(_:_:)(v11, v10, v9, v8);
    v20 = v19;
    static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter();
    v22 = static Duration.seconds(_:)(v21);
    return static Duration.< infix(_:_:)(v22, v23, v18, v20) & 1;
  }
  else
  {
    v25 = static Logger.transcripts.getter(v17);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc(12, -1);
      v38 = v28;
      v30 = (uint8_t *)v29;
      v39 = swift_slowAlloc(32, -1);
      v46 = v8;
      v47 = v39;
      v40 = v2;
      *(_DWORD *)v30 = 136315138;
      v36 = v30 + 4;
      v37 = v30;
      v44[1] = v10;
      v45 = v9;
      v42 = 0;
      v43 = 0xE000000000000000;
      v44[0] = v11;
      _print_unlocked<A, B>(_:_:)(&v45, &v42, &type metadata for Duration, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v31._countAndFlagsBits = 3026478;
      v31._object = (void *)0xE300000000000000;
      String.append(_:)(v31);
      _print_unlocked<A, B>(_:_:)(v44, &v42, &type metadata for Duration, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v32 = v43;
      v45 = sub_C6F4(v42, v43, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v36, v30 + 12);
      swift_bridgeObjectRelease(v32);
      v33 = v37;
      _os_log_impl(&dword_0, v26, (os_log_type_t)v38, "Discarded a player dynamic ad range that exceeded the max duration. %s", v37, 0xCu);
      v34 = v39;
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v41);
    return 0;
  }
}

void sub_111998()
{
  __asm { BR              X9 }
}

uint64_t sub_1119D8()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  char v5;

  v2 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  ObjectType = swift_getObjectType(v0);
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  swift_retain();
  v4(ObjectType, v2);
  LOBYTE(v2) = v5;
  swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_111C2C(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE v53[4];
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;

  v57 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  __chkstk_darwin(v7);
  v9 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for TranscriptModel.Speaker(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v16 = *a1;
  v17 = *(_QWORD *)(*a1 + 16);
  if (!((unint64_t)v17 >> 62))
  {
    v58 = &v53[-v15];
    v59 = (_BYTE *)a2;
    v18 = v17 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_speaker;
    sub_C9A60(v17 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_speaker, (uint64_t)v9);
    v19 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
    if (v19(v9, 1, v10) == 1)
    {
      swift_retain();
      sub_1121D0((uint64_t)v9);
LABEL_15:
      sub_112210(v18, (uint64_t)v59);
      swift_release(v17);
      goto LABEL_16;
    }
    v56 = v18;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v58, v9, v10);
    v20 = swift_retain();
    v55 = TranscriptModel.Speaker.id.getter(v20);
    v22 = v21;
    v23 = (uint64_t)v59;
    if (v19(v59, 1, v10))
    {
      swift_bridgeObjectRelease(v22);
      v24 = 1;
    }
    else
    {
      v25 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v14, v23, v10);
      v26 = TranscriptModel.Speaker.id.getter(v25);
      v28 = v27;
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
      if (v55 == v26 && v22 == v28)
      {
        swift_bridgeObjectRelease_n(v22, 2);
        v54 = 0;
        goto LABEL_12;
      }
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v22, v26, v28, 0);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v28);
      v24 = v30 ^ 1;
    }
    v54 = v24;
LABEL_12:
    v31 = *(_QWORD *)(v17 + 24);
    v55 = *(_QWORD *)(v17 + 16);
    v32 = *(double *)(v17 + 32);
    v33 = *(double *)(v17 + 40);
    v34 = swift_bridgeObjectRetain(v31);
    v35 = TranscriptModel.Speaker.name.getter(v34);
    v37 = v36;
    v38 = type metadata accessor for SpeakerContent(0);
    swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    v39 = v57;
    swift_retain();
    v40 = sub_C2870(v55, v31, v35, v37, v54 & 1, v39, v32, v33);
    swift_release(v39);
    v41 = type metadata accessor for TranscriptContentViewModel();
    v42 = swift_allocObject(v41, 24, 7);
    *(_QWORD *)(v42 + 16) = v40 | 0x8000000000000000;
    v43 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
    v45 = *(_QWORD *)((char *)&dword_10 + (*a4 & 0xFFFFFFFFFFFFFF8));
    v44 = *(_QWORD *)((char *)&dword_18 + (*a4 & 0xFFFFFFFFFFFFFF8));
    if (v45 >= v44 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
    v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v42);
    specialized Array._endMutation()(v46);
    v47 = swift_release(v40);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v11 + 8))(v58, v10, v47);
    v18 = v56;
    goto LABEL_15;
  }
LABEL_16:
  v48 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
  v50 = *(_QWORD *)((char *)&dword_10 + (*a4 & 0xFFFFFFFFFFFFFF8));
  v49 = *(_QWORD *)((char *)&dword_18 + (*a4 & 0xFFFFFFFFFFFFFF8));
  if (v50 >= v49 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
  v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v16);
  return specialized Array._endMutation()(v51);
}

uint64_t sub_111FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = v1 & 0x3FFFFFFFFFFFFFFFLL;
  swift_retain();
  sub_D81E4(v1);
  v4 = v3;
  swift_release(v2);
  return v4;
}

uint64_t sub_112024()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_112048()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_11206C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((~v1 & 0xF000000000000007) != 0)
    swift_release(v1 & 0x3FFFFFFFFFFFFFFFLL);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1120A0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

unint64_t sub_112128(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v5 = HIBYTE(a3) & 0xF;
    else
      v5 = a2 & 0xFFFFFFFFFFFFLL;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    result = String.index(_:offsetBy:limitedBy:)(v7, -(uint64_t)result, 15, a2, a3);
    if ((v8 & 1) != 0)
      result = 15;
    if (4 * v5 >= result >> 14)
      return String.subscript.getter(result, v7, a2, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1121D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_112210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_112258(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;

  if (((uint64_t (*)(void))Duration.components.getter)() < 720)
    return 240.0;
  v5 = Duration.components.getter(a1, a2);
  v6 = Duration.components.getter(a1, a2);
  v7 = v6;
  if (v5 > 1799)
  {
    v8 = (double)Duration.components.getter(a1, a2);
    if (v7 > 3599)
      v9 = 0.2;
    else
      v9 = 0.27;
  }
  else
  {
    v8 = (double)v6;
    v9 = 0.33;
  }
  return v8 * v9;
}

uint64_t sub_112300(unint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD **)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v6 = a1;
    v7 = *a2;
    if ((unint64_t)*a2 >> 62)
    {
      if (v7 < 0)
        v12 = *a2;
      else
        v12 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*a2);
      v8 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (v8)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(*a2);
      if (v8)
      {
LABEL_4:
        if ((v7 & 0xC000000000000001) != 0)
        {
          v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_7:
          swift_bridgeObjectRelease(v7);
          __asm { BR              X10 }
        }
        if (*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
        {
          v9 = *(_QWORD *)(v7 + 32);
          swift_retain();
          goto LABEL_7;
        }
        __break(1u);
LABEL_25:
        if (v8 < 0)
          v24 = v8;
        else
          v24 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v25 = _CocoaArrayWrapper.endIndex.getter(v24);
        swift_bridgeObjectRelease(v8);
        if (!v25)
        {
          __break(1u);
          JUMPOUT(0x112AC4);
        }
        swift_bridgeObjectRetain(v8);
        v26 = _CocoaArrayWrapper.endIndex.getter(v24);
        swift_bridgeObjectRelease(v8);
        if (!v26)
        {
          __break(1u);
          goto LABEL_31;
        }
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease(v7);
    if (v4[2])
    {
      v13 = v4[4];
      v14 = v4[5];
      v15 = v4[6];
      v16 = v4[7];
      sub_E255C(0, 1);
      if (a4)
      {
        sub_10F86C();
        v18 = v17;
      }
      else
      {
        v18 = 0xF000000000000007;
      }
      *(double *)&v19 = (double)Duration.components.getter(v13, v14);
      *(double *)&v20 = (double)Duration.components.getter(v15, v16);
      v21 = type metadata accessor for SilentContent(0);
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      v22 = sub_1462C(0, 1, 0, 1, v19, 0, v20, 0, v18) | 0x4000000000000000;
      v23 = type metadata accessor for TranscriptContentViewModel();
      v10 = swift_allocObject(v23, 24, 7);
      *(_QWORD *)(v10 + 16) = v22;
      return v10;
    }
LABEL_41:
    __break(1u);
    JUMPOUT(0x112AA8);
  }
  v8 = *a2;
  v6 = (unint64_t)*a2 >> 62;
  if (v6)
    goto LABEL_25;
  if (!*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
    if (v6)
      goto LABEL_33;
LABEL_13:
    v11 = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
    goto LABEL_37;
  }
LABEL_10:
  if ((v8 & 0xC000000000000001) != 0)
    goto LABEL_32;
  if (!*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
  {
    __break(1u);
    goto LABEL_41;
  }
  v10 = *(_QWORD *)(v8 + 32);
  swift_retain();
  if (!v6)
    goto LABEL_13;
LABEL_33:
  if (v8 < 0)
    v27 = v8;
  else
    v27 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v11 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v8);
LABEL_37:
  if (!v11)
  {
    __break(1u);
    JUMPOUT(0x112AB4);
  }
  sub_E2550(0, 1);
  return v10;
}

void sub_112AF4(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_112B3C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  char v5;

  v2 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  ObjectType = swift_getObjectType(v0);
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  swift_retain();
  v4(ObjectType, v2);
  LOBYTE(v2) = v5;
  swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
}

void sub_1134E0()
{
  sub_8330(&qword_1FDF50, type metadata accessor for SpeakerContent, (uint64_t)&unk_171260);
  JUMPOUT(0x113548);
}

void sub_1135A0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1135F0()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  char v5;

  v2 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  ObjectType = swift_getObjectType(v0);
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 32);
  swift_retain();
  v4(ObjectType, v2);
  LOBYTE(v2) = v5;
  swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
  if ((v2 & 1) == 0)
    __asm { BR              X9 }
  return 1;
}

double sub_113C00(uint64_t a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  uint64_t v17;

  v5 = *a2;
  if ((unint64_t)*a2 >> 62)
  {
    if (v5 < 0)
      v10 = *a2;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (v6)
    {
LABEL_3:
      v8 = v6 - 1;
      if (__OFSUB__(v6, 1))
      {
        __break(1u);
      }
      else if ((v5 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v7 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
          if (v8 < v7)
          {
            v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
            swift_retain();
            goto LABEL_8;
          }
        }
        __break(1u);
        goto LABEL_23;
      }
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
LABEL_8:
      swift_bridgeObjectRelease(v5);
      __asm { BR              X10 }
    }
  }
  else
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*a2);
    if (v6)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v5);
  if (*(_QWORD *)(a1 + 16) >> 62 != 1)
  {
    v6 = 0;
    v16 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    v2 = *(_QWORD *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8));
    v7 = *(_QWORD *)((char *)&dword_18 + (*a2 & 0xFFFFFFFFFFFFFF8));
    if (v2 < v7 >> 1)
    {
LABEL_18:
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, a1);
      specialized Array._endMutation()(v17);
      *(_QWORD *)&result = swift_release(v6).n128_u64[0];
      return result;
    }
LABEL_23:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v2 + 1, 1);
    goto LABEL_18;
  }
  v11 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
  v13 = *(_QWORD *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8));
  v12 = *(_QWORD *)((char *)&dword_18 + (*a2 & 0xFFFFFFFFFFFFFF8));
  if (v13 >= v12 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
  v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, a1);
  specialized Array._endMutation()(v14);
  return result;
}

double sub_1146BC(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  double result;
  uint64_t v17;
  uint64_t v18;

  v2 = *a1;
  v3 = (unint64_t)*a1 >> 62;
  if (v3)
  {
    if (v2 < 0)
      v17 = *a1;
    else
      v17 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a1);
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
    if (v18 < 2)
      return result;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v4)
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
      return result;
    }
  }
  else
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    if (v4 < 2)
      return result;
    swift_bridgeObjectRetain(*a1);
  }
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    v1 = v2 & 0xC000000000000001;
    if ((v2 & 0xC000000000000001) == 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v5 < *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
      {
        v6 = *(_QWORD *)(v2 + 8 * v5 + 32);
        swift_retain();
        goto LABEL_10;
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
  }
  v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
LABEL_10:
  swift_bridgeObjectRelease(v2);
  if (v3)
  {
    if (v2 < 0)
      v8 = v2;
    else
      v8 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
  }
  v9 = v7 - 2;
  if (__OFSUB__(v7, 2))
    goto LABEL_37;
  if (v1)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v2);
    goto LABEL_22;
  }
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_38;
  if (v9 >= *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_39:
    __break(1u);
    JUMPOUT(0x114D8CLL);
  }
  v10 = *(_QWORD *)(v2 + 8 * v9 + 32);
  swift_retain();
LABEL_22:
  v11 = *(_QWORD *)(v6 + 16);
  if (!(v11 >> 62) && !(*(_QWORD *)(v10 + 16) >> 62))
  {
    v12 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 32);
    v14 = type metadata accessor for TextContent(0);
    swift_retain();
    v13(v14, v12);
    LOBYTE(v13) = v15;
    swift_release(v11);
    if ((v13 & 1) == 0)
      __asm { BR              X10 }
  }
  swift_release(v6);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_114DD4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v2 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_31;
  v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(*a1);
  if (!v3)
  {
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    v4 = 0;
    while (1)
    {
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      v6 = v5;
      if ((*(_QWORD *)(v5 + 16) & 0x8000000000000000) == 0)
      {
        swift_bridgeObjectRelease(v2);
        swift_unknownObjectRelease(v6);
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
        goto LABEL_18;
      }
      swift_unknownObjectRelease(v5);
      v7 = v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      ++v4;
      if (v7 == v3)
        goto LABEL_13;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    if (v2 < 0)
      v17 = v2;
    else
      v17 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v3)
      goto LABEL_13;
  }
  v4 = 0;
  while (1)
  {
    v8 = v2 + 8 * v4;
    if ((*(_QWORD *)(*(_QWORD *)(v8 + 32) + 16) & 0x8000000000000000) == 0)
      break;
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_30;
    ++v4;
    if (v9 == v3)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease(v2);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v4 >= *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v10 = *(_QWORD *)(v8 + 32);
  swift_retain();
LABEL_18:
  v11 = *(_QWORD *)(v10 + 16);
  if (!(v11 >> 62))
  {
    KeyPath = swift_getKeyPath(&unk_174348);
    v18 = v11;
    v13 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v18, KeyPath, v13);
    swift_release(KeyPath);
    v14 = *(_BYTE *)(v11 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime + 8);
    swift_release(v11);
    if ((v14 & 1) != 0)
    {
      swift_release(v10);
      return;
    }
    v15 = *(_QWORD *)(v10 + 16);
    if (v15 >> 62)
      __asm { BR              X10 }
    v3 = *a1;
    if ((*a1 & 0xC000000000000001) == 0)
    {
      if ((v4 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v4 < *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
      {
        v16 = *(_QWORD *)(v3 + 8 * v4 + 32);
        swift_retain();
        swift_retain();
        goto LABEL_27;
      }
      __break(1u);
      JUMPOUT(0x1152D0);
    }
LABEL_38:
    swift_retain();
    v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
LABEL_27:
    __asm { BR              X10 }
  }
  swift_release(v10);
}

void sub_1152F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v7 = *a1;
  v8 = (unint64_t)*a1 >> 62;
  if (!v8)
  {
    v9 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*a1);
    if (v9)
      goto LABEL_3;
LABEL_37:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v35 = *a1;
  else
    v35 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v35);
  if (!v9)
    goto LABEL_37;
LABEL_3:
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = v7 & 0xC000000000000001;
    if ((v7 & 0xC000000000000001) == 0)
    {
      if ((v10 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v10 < *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_42;
    }
  }
  v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
LABEL_8:
  swift_bridgeObjectRelease(v7);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12 >> 62 == 1)
  {
    v27 = v12 & 0x3FFFFFFFFFFFFFFFLL;
    if (v8)
    {
      if (v7 < 0)
        v32 = v7;
      else
        v32 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain(v7);
      v28 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (v28)
      {
LABEL_16:
        v29 = v28 - 1;
        if (!__OFSUB__(v28, 1))
        {
          if (v3)
          {
            v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v7);
LABEL_28:
            swift_bridgeObjectRelease(v7);
            v33 = *(_QWORD *)(v30 + 16);
            if (v33 >> 62 == 1)
            {
              swift_retain();
              swift_release(v30);
              v34 = Duration.components.getter(a2, a3);
              swift_release(v11);
              swift_release(v27);
              *(double *)(v33 + 72) = (double)v34;
              *(_BYTE *)(v33 + 80) = 0;
              v31 = v33 & 0x3FFFFFFFFFFFFFFFLL;
              goto LABEL_32;
            }
            swift_release(v11);
            swift_release(v30);
LABEL_31:
            v31 = v27;
            goto LABEL_32;
          }
          if ((v29 & 0x8000000000000000) == 0)
          {
            if (v29 < *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
            {
              v30 = *(_QWORD *)(v7 + 8 * v29 + 32);
              swift_retain();
              goto LABEL_28;
            }
LABEL_44:
            __break(1u);
            return;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      v28 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
      swift_retain();
      swift_bridgeObjectRetain(v7);
      if (v28)
        goto LABEL_16;
    }
    swift_release(v11);
    swift_bridgeObjectRelease(v7);
    goto LABEL_31;
  }
  if (v12 >> 62)
  {
    v31 = v11;
LABEL_32:
    swift_release(v31);
    return;
  }
  KeyPath = swift_getKeyPath(&unk_174320);
  v36 = v12;
  v14 = v12 & 0x3FFFFFFFFFFFFFFFLL;
  v15 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  swift_retain();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v36, KeyPath, v15);
  swift_release(KeyPath);
  v16 = (uint64_t *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime);
  if ((*(_BYTE *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime + 8) & 1) == 0)
  {
    v17 = *v16;
    v18 = *(double *)v16;
    v19 = (double)Duration.components.getter(a2, a3) - v18;
    if (static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter() < v19)
    {
      *(double *)&v20 = (double)Duration.components.getter(a2, a3);
      sub_10F86C();
      v22 = v21;
      v23 = type metadata accessor for SilentContent(0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v24 = sub_1462C(0, 1, 0, 1, v17, 0, v20, 0, v22);
      v25 = type metadata accessor for TranscriptContentViewModel();
      v26 = swift_allocObject(v25, 24, 7);
      *(_QWORD *)(v26 + 16) = v24 | 0x4000000000000000;
      v36 = v26;
      swift_retain();
      static Array.+= infix(_:_:)(a1, &v36, v25);
      swift_release(v26);
      swift_release(v24);
    }
  }
  swift_release(v11);
  swift_release_n(v14, 2);
}

uint64_t sub_1156F8()
{
  return sub_9024C();
}

uint64_t *sub_11570C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = a2[3];
    v3[2] = a2[2];
    v3[3] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (uint64_t *)((char *)v3 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return v3;
}

double sub_1157F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 24));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_115868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    *v6 = *v7;
    swift_retain();
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

_QWORD *sub_115918(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_1159F4((uint64_t)a1 + v8);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t sub_1159F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_115A34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_115ADC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v7;
  swift_release(v6);
  if ((_OWORD *)a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    sub_1159F4(a1 + v8);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_115BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_115BB0);
}

uint64_t sub_115BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_115C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_115C3C);
}

uint64_t sub_115C3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TappablePaddingView(uint64_t a1)
{
  uint64_t result;

  result = qword_2030E8;
  if (!qword_2030E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TappablePaddingView);
  return result;
}

void sub_115CF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1743A8;
  v4[1] = (char *)&value witness table for () + 64;
  sub_9D9E0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_115D70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A3B10, 1);
}

uint64_t sub_115D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;

  v23 = a1;
  v2 = type metadata accessor for TappablePaddingView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_203128);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static Color.clear.getter(v9);
  v11 = *v1;
  v12 = v1[1];
  v13 = static Alignment.trailing.getter(v10);
  if ((static Alignment.== infix(_:_:)(v13) & 1) != 0)
    v14 = 0x4048000000000000;
  else
    v14 = 0x4040000000000000;
  _FrameLayout.init(width:height:alignment:)(&v31, v14, 0, 0, 1, v11, v12);
  v24 = v10;
  v25 = 0;
  v26 = v31;
  v27 = v32;
  v28 = v33;
  v29 = v34;
  v30 = v35;
  sub_7AD68((uint64_t)v1, (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(unsigned __int8 *)(v3 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_1D23D8, v16 + v4, v15 | 7);
  sub_7AD1C((uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_203130);
  v19 = sub_116038();
  View.onTapGesture(count:perform:)(1, sub_115FFC, v17, v18, v19);
  swift_release(v17);
  v20 = swift_release(v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v6 + 32))(v23, v8, v5, v20);
}

uint64_t sub_115F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for TappablePaddingView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_115FFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TappablePaddingView(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 16))();
}

unint64_t sub_116038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_203138;
  if (!qword_203138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_203130);
    sub_1160A4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_203138);
  }
  return result;
}

unint64_t sub_1160A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_203140;
  if (!qword_203140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_203148);
    sub_116110();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_203140);
  }
  return result;
}

unint64_t sub_116110()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEE48;
  if (!qword_1FEE48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE50);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ContentShapeModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEE48);
  }
  return result;
}

uint64_t sub_11615C()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_203130);
  v1[1] = sub_116038();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

id sub_1161A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition____lazy_storage___mirroredDismissalTransition;
  v3 = *(char **)(v0
                + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition____lazy_storage___mirroredDismissalTransition);
  v4 = v3;
  if (v3 == (_BYTE *)&dword_0 + 1)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal) & 1) != 0)
    {
      v4 = 0;
      v5 = &dword_0 + 1;
    }
    else
    {
      v6 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_viewController);
      v7 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_sourceView);
      v8 = objc_allocWithZone((Class)type metadata accessor for ContextActionsPresentationTransition());
      v4 = sub_11626C((uint64_t)v6, (uint64_t)v7, 1);
      v5 = *(void **)(v1 + v2);
    }
    *(_QWORD *)(v1 + v2) = v4;
    v9 = v4;
    sub_4375C(v5);
  }
  sub_15450(v3);
  return v4;
}

id sub_11626C(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  _QWORD *v4;
  objc_super v6;

  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition____lazy_storage___mirroredDismissalTransition] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_highlighterView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_presentedView] = 0;
  v4 = &v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_finalTransform];
  *v4 = 0x3FF0000000000000;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = 0x3FF0000000000000;
  v4[4] = 0;
  v4[5] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_viewController] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_sourceView] = a2;
  v3[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for ContextActionsPresentationTransition();
  return objc_msgSendSuper2(&v6, "init");
}

void sub_116310(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  CGFloat v13;
  CGFloat v14;
  double Width;
  CGFloat v16;
  double Height;
  CGFloat v18;
  CGFloat b;
  CGFloat a;
  CGFloat d;
  CGFloat c;
  CGFloat ty;
  CGFloat tx;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  CGFloat *v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  _QWORD *v55;
  __int128 v56;
  __int128 v57;
  CGFloat v58;
  int v59;
  CGFloat v60;
  CGAffineTransform v62;
  CGAffineTransform t2;
  CGAffineTransform t1;
  __int128 v65[2];
  double v66;
  double v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v5 = a1;
  v59 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal);
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal))
    v6 = a1;
  else
    v6 = a2;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal))
    v7 = a2;
  else
    v7 = a1;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_highlighterView);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_highlighterView) = v7;
  v9 = v7;
  v10 = v6;

  v11 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_presentedView);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_presentedView) = v10;
  v12 = v10;

  sub_1175E8(a3, v65);
  v56 = v65[1];
  v57 = v65[0];
  v13 = v66;
  v14 = v67;
  objc_msgSend(v9, "frame");
  Width = CGRectGetWidth(v68);
  objc_msgSend(a3, "frame");
  v16 = Width / CGRectGetWidth(v69);
  objc_msgSend(v9, "frame");
  Height = CGRectGetHeight(v70);
  objc_msgSend(a3, "frame");
  v18 = CGRectGetHeight(v71);
  CGAffineTransformMakeScale(&t1, v16, Height / v18);
  *(_OWORD *)&t2.a = v57;
  *(_OWORD *)&t2.c = v56;
  t2.tx = v13;
  t2.ty = v14;
  CGAffineTransformConcat(&v62, &t1, &t2);
  a = v62.a;
  b = v62.b;
  c = v62.c;
  d = v62.d;
  tx = v62.tx;
  ty = v62.ty;
  v25 = OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView;
  v26 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView);
  if (v26)
  {
    v27 = *(id *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView);
  }
  else
  {
    v28 = sub_116E78();
    v29 = *(void **)(v3 + v25);
    *(_QWORD *)(v3 + v25) = v28;
    v27 = v28;

    v30 = (char *)sub_1161A8();
    if (v30)
    {
      v31 = v30;
      v32 = *(void **)&v30[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView];
      *(_QWORD *)&v30[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView] = v28;
      v27 = v27;

    }
  }
  v33 = v26;
  objc_msgSend(v27, "setClipsToBounds:", 1);
  v34 = objc_msgSend(v27, "layer");
  objc_msgSend(v34, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(a3, "addSubview:", v27);
  objc_msgSend(v9, "setHidden:", 1);
  if (v59)
  {
    objc_msgSend(v27, "setFrame:", sub_117464(v5, a3));
    t1.a = 1.0;
    t1.b = 0.0;
    t1.c = 0.0;
    t1.d = 1.0;
    t1.tx = 0.0;
    t1.ty = 0.0;
    objc_msgSend(v5, "setTransform:", &t1);
    v35 = (CGFloat *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_finalTransform);
    *v35 = a;
    v35[1] = b;
    v35[2] = c;
    v35[3] = d;
    v35[4] = tx;
    v35[5] = ty;
    objc_msgSend(v27, "setAlpha:", 0.0);
    v36 = objc_msgSend(v27, "layer");
    objc_msgSend(v36, "setCornerRadius:", 16.0);
    v37 = a2;
  }
  else
  {
    objc_msgSend(v5, "frame");
    v60 = ty;
    v39 = v38;
    v58 = tx;
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v46 = objc_msgSend(v5, "superview");
    objc_msgSend(a3, "convertRect:fromView:", v46, v39, v41, v43, v45);
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v54 = v53;

    objc_msgSend(v27, "setFrame:", v48, v50, v52, v54);
    objc_msgSend(a2, "setNeedsLayout");
    objc_msgSend(a2, "layoutIfNeeded");
    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = v58;
    t1.ty = v60;
    objc_msgSend(a2, "setTransform:", &t1);
    v55 = (_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_finalTransform);
    *v55 = 0x3FF0000000000000;
    v55[1] = 0;
    v55[2] = 0;
    v55[3] = 0x3FF0000000000000;
    v55[4] = 0;
    v55[5] = 0;
    objc_msgSend(*(id *)(v3 + v25), "setAlpha:", 1.0);
    v36 = objc_msgSend(v27, "layer");
    objc_msgSend(v36, "setCornerRadius:", 4.0);
    v37 = v5;
    v5 = a2;
  }

}

void sub_1167E4(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  void *v5;
  int v7;
  void *v8;
  void *v9;
  _OWORD *v10;
  id v11;
  id v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  _OWORD v39[3];

  v5 = a2;
  v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal);
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal))
    v8 = a1;
  else
    v8 = a2;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal))
    v9 = a2;
  else
    v9 = a1;
  v10 = (_OWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_finalTransform);
  v11 = v8;
  v12 = v9;
  v13 = v10[1];
  v39[0] = *v10;
  v39[1] = v13;
  v39[2] = v10[2];
  objc_msgSend(v11, "setTransform:", v39);
  v14 = OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView;
  v15 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView);
  if (v7)
  {
    if (!v15)
      goto LABEL_15;
    v16 = v15;
    objc_msgSend(v5, "frame");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v25 = objc_msgSend(v5, "superview");
    objc_msgSend(a3, "convertRect:fromView:", v25, v18, v20, v22, v24);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    objc_msgSend(v16, "setFrame:", v27, v29, v31, v33);
    v34 = *(void **)(v3 + v14);
    if (!v34)
    {
LABEL_15:
      v36 = v5;
      v5 = a1;
      goto LABEL_17;
    }
    v35 = objc_msgSend(v34, "layer");
    objc_msgSend(v35, "setCornerRadius:", 4.0);
    v36 = v5;
    v5 = a1;
  }
  else
  {
    if (!v15
      || (v37 = v15,
          objc_msgSend(v37, "setFrame:", sub_117464(v5, a3)),
          v37,
          (v38 = *(void **)(v3 + v14)) == 0))
    {
      v36 = a1;
      goto LABEL_17;
    }
    v35 = objc_msgSend(v38, "layer");
    objc_msgSend(v35, "setCornerRadius:", 16.0);
    v36 = a1;
  }

LABEL_17:
}

void sub_116A84(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  double v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  _BYTE *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  _BYTE *v20;
  void **v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD *v26;

  if (v4[OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal])
    v9 = 0.05;
  else
    v9 = 0.0;
  v10 = (_QWORD *)swift_allocObject(&unk_1D2438, 40, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = v4;
  v11 = (void *)objc_opt_self(UIView);
  v25 = a1;
  v26 = a2;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_F528;
  v24 = &block_descriptor_30;
  v12 = _Block_copy(&v21);
  v13 = v26;
  swift_retain();
  v14 = v4;
  swift_retain();
  swift_release(v13);
  v25 = sub_1178D4;
  v26 = v10;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_153D78;
  v24 = &block_descriptor_4;
  v15 = _Block_copy(&v21);
  v16 = v26;
  swift_retain();
  swift_release(v16);
  objc_msgSend(v11, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 3, v12, v15, 0.35, 0.0, 1.0, 750.0, 50.0, 0.0);
  _Block_release(v15);
  _Block_release(v12);
  v17 = swift_allocObject(&unk_1D24B0, 24, 7);
  *(_QWORD *)(v17 + 16) = v14;
  v25 = sub_11791C;
  v26 = (_QWORD *)v17;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_F528;
  v24 = &block_descriptor_10_1;
  v18 = _Block_copy(&v21);
  v19 = v26;
  v20 = v14;
  swift_release(v19);
  objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 196608, v18, 0, 0.05, v9);
  swift_release(v10);
  _Block_release(v18);
}

id sub_116CBC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  void *v5;

  a2();
  v5 = *(void **)(a4 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_highlighterView);
  if (v5)
    objc_msgSend(v5, "setHidden:", (*(_BYTE *)(a4 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal) & 1) == 0);
  return objc_msgSend(*(id *)(a4 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView), "removeFromSuperview");
}

id sub_116D28(uint64_t a1)
{
  int v2;
  void *v3;
  id result;
  double v5;

  v2 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_isDismissal);
  v3 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_snapshotView);
  if (v2 == 1)
  {
    if (v3)
      objc_msgSend(v3, "setAlpha:", 1.0);
    result = *(id *)(a1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_presentedView);
    if (result)
    {
      v5 = 0.0;
      return objc_msgSend(result, "setAlpha:", v5);
    }
  }
  else
  {
    if (v3)
      objc_msgSend(v3, "setAlpha:", 0.0);
    result = *(id *)(a1 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_presentedView);
    if (result)
    {
      v5 = 1.0;
      return objc_msgSend(result, "setAlpha:", v5);
    }
  }
  return result;
}

id sub_116E78()
{
  uint64_t v0;
  void *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  id v10;
  double x;
  double width;
  double height;
  double v14;
  double left;
  double bottom;
  double right;
  objc_class *v18;
  Class v19;
  id v20;
  void *v21;
  uint64_t v22;
  CGFloat v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  double v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  CGFloat v51;
  Class isa;
  double v54;
  double v55;
  double v56;
  double y;
  id v58;
  CGRect remainder;
  CGRect slice;
  CGRect v61;
  CGRect v62;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_sourceView);
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v2, v4, v6, v8);
  memset(&slice, 0, sizeof(slice));
  memset(&remainder, 0, sizeof(remainder));
  v61.origin.x = v3;
  v61.origin.y = v5;
  v61.size.width = v7;
  v61.size.height = v9;
  CGRectDivide(v61, &slice, &remainder, 1.0, CGRectMaxYEdge);
  x = remainder.origin.x;
  y = remainder.origin.y;
  width = remainder.size.width;
  height = remainder.size.height;
  v62 = CGRectInset(slice, v7 * 0.5 + -0.5, 0.0);
  v14 = v62.origin.x;
  v54 = v62.origin.y;
  v55 = v62.size.height;
  v56 = v62.size.width;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v18 = (objc_class *)objc_msgSend(v1, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 0, x, y, width, height, UIEdgeInsetsZero.top, left, bottom, right);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v1, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 0, v14, v54, v56, v55, UIEdgeInsetsZero.top, left, bottom, right);
    if (v20)
    {
      v21 = v20;
      -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v10, "addSubview:", v21);
      objc_msgSend(v10, "addSubview:", v19);
      v58 = (id)objc_opt_self(NSLayoutConstraint);
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
      v23 = COERCE_DOUBLE(swift_allocObject(v22, 96, 7));
      *(_OWORD *)(*(_QWORD *)&v23 + 16) = xmmword_1744B0;
      v24 = objc_msgSend(v10, "topAnchor");
      v25 = -[objc_class topAnchor](v19, "topAnchor");
      v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

      *(_QWORD *)(*(_QWORD *)&v23 + 32) = v26;
      v27 = objc_msgSend(v10, "leftAnchor");
      v28 = -[objc_class leftAnchor](v19, "leftAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

      *(_QWORD *)(*(_QWORD *)&v23 + 40) = v29;
      v30 = objc_msgSend(v10, "rightAnchor");
      v31 = -[objc_class rightAnchor](v19, "rightAnchor");
      v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

      *(_QWORD *)(*(_QWORD *)&v23 + 48) = v32;
      v33 = objc_msgSend(v10, "bottomAnchor");
      v34 = objc_msgSend(v21, "bottomAnchor");
      v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

      *(_QWORD *)(*(_QWORD *)&v23 + 56) = v35;
      v36 = -[objc_class bottomAnchor](v19, "bottomAnchor");
      v37 = objc_msgSend(v21, "topAnchor");
      v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

      LODWORD(v39) = 1148829696;
      v40 = objc_msgSend(v38, "withPriority:", v39);

      *(_QWORD *)(*(_QWORD *)&v23 + 64) = v40;
      v41 = -[objc_class heightAnchor](v19, "heightAnchor");
      v42 = -[objc_class widthAnchor](v19, "widthAnchor");
      v43 = objc_msgSend(v41, "constraintEqualToAnchor:multiplier:", v42, height / width);

      *(_QWORD *)(*(_QWORD *)&v23 + 72) = v43;
      v44 = objc_msgSend(v10, "leftAnchor");
      v45 = objc_msgSend(v21, "leftAnchor");
      v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

      *(_QWORD *)(*(_QWORD *)&v23 + 80) = v46;
      v47 = objc_msgSend(v10, "rightAnchor");
      v48 = objc_msgSend(v21, "rightAnchor");
      v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

      *(_QWORD *)(*(_QWORD *)&v23 + 88) = v49;
      slice.origin.x = v23;
      specialized Array._endMutation()(v50);
      v51 = slice.origin.x;
      sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v58, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v51).n128_f64[0]);

      v19 = isa;
    }

  }
  return v10;
}

double sub_117464(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  __int128 v25[2];
  uint64_t v26;
  id v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v27 = *(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_viewController);
  v5 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
  v6 = v27;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_203220);
  if (swift_dynamicCast(v25, &v27, v5, v7, 6))
  {
    sub_27890(v25, (uint64_t)v28);
    v8 = v29;
    v9 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v10 = (*(double (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    __swift_destroy_boxed_opaque_existential_0(v28);
  }
  else
  {
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    sub_117868((uint64_t)v25);
    objc_msgSend(a1, "frame");
    v10 = v17;
    v12 = v18;
    v14 = v19;
    v16 = v20;
  }
  v21 = objc_msgSend(a1, "superview");
  objc_msgSend(a2, "convertRect:fromView:", v21, v10, v12, v14, v16);
  v23 = v22;

  return v23;
}

void sub_1175E8(void *a1@<X0>, __int128 *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  CGAffineTransform v24;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI36ContextActionsPresentationTransition_sourceView);
  v6 = objc_msgSend(v5, "window");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(a1, "superview");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v5, "superview");
      if (v10)
      {
        v11 = v10;
        objc_msgSend(a1, "center");
        objc_msgSend(v7, "convertPoint:fromCoordinateSpace:", v9);
        v13 = v12;
        v15 = v14;
        objc_msgSend(v5, "center");
        objc_msgSend(v7, "convertPoint:fromCoordinateSpace:", v11);
        CGAffineTransformMakeTranslation(&v24, v16 - v13, v17 - v15);
        v22 = *(_OWORD *)&v24.a;
        v23 = *(_OWORD *)&v24.c;
        v21 = *(_OWORD *)&v24.tx;

        v7 = v9;
        v9 = v11;
      }
      else
      {
        v23 = xmmword_1744C0;
        v21 = 0u;
        v22 = xmmword_1744D0;
      }

      v7 = v9;
    }
    else
    {
      v23 = xmmword_1744C0;
      v21 = 0u;
      v22 = xmmword_1744D0;
    }

    v19 = v22;
    v18 = v23;
    v20 = v21;
  }
  else
  {
    v18 = xmmword_1744C0;
    v19 = xmmword_1744D0;
    v20 = 0uLL;
  }
  *a2 = v19;
  a2[1] = v18;
  a2[2] = v20;
}

id sub_1177A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionsPresentationTransition();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextActionsPresentationTransition()
{
  return objc_opt_self(_TtC12NowPlayingUI36ContextActionsPresentationTransition);
}

uint64_t sub_117868(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_203228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1178A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

id sub_1178D4(uint64_t a1)
{
  uint64_t v1;

  return sub_116CBC(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1178F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_11791C()
{
  uint64_t v0;

  return sub_116D28(*(_QWORD *)(v0 + 16));
}

uint64_t sub_117924()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void *sub_117960(uint64_t a1)
{
  void *result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;

  result = &_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v3; ++i)
    {
      v6 = *(void **)(a1 + 8 * i + 32);
      if (v6)
      {
        v7 = v6;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v9 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v8 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v9 >= v8 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
        v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized Array._endMutation()(v5);
      }
    }
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void sub_117A3C(void *a1)
{
  char *v1;
  void *v3;
  _BYTE *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;

  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView] = a1;

  v4 = a1;
  v5 = objc_msgSend(v1, "view");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "addSubview:", v4);

    v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates] = 0;
    sub_117D08(v4);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = (void *)objc_opt_self(NSLayoutConstraint);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_16D2B0;
    v10 = objc_msgSend(v4, "topAnchor");
    v11 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide;
    v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide], "topAnchor");
    v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v9 + 32) = v13;
    v14 = objc_msgSend(v4, "bottomAnchor");
    v15 = objc_msgSend(*(id *)&v1[v11], "bottomAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v9 + 40) = v16;
    v17 = objc_msgSend(v4, "leadingAnchor");
    v18 = objc_msgSend(*(id *)&v1[v11], "leadingAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v9 + 48) = v19;
    v20 = objc_msgSend(v4, "trailingAnchor");
    v21 = objc_msgSend(*(id *)&v1[v11], "trailingAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    *(_QWORD *)(v9 + 56) = v22;
    specialized Array._endMutation()(v23);
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "activateConstraints:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

void sub_117D08(_BYTE *a1)
{
  uint64_t v1;
  void *v3;
  _BOOL4 v4;
  uint64_t v5;
  int v6;
  id v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  int v16;
  id v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates) & 1) != 0)
    return;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse);
  v4 = v3
     ? objc_msgSend(v3, "state") == (char *)&dword_0 + 2
     : *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder) != 0;
  v5 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode;
  v6 = a1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode];
  if (v6 != 2 && ((v4 ^ v6) & 1) == 0)
    return;
  v7 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 500.0, 1000.0, 0.0, 0.0);
  if (v6 == 2)
  {
    v8 = a1[v5];
    if (v8 == 2 || ((v4 ^ ((v8 & 1) == 0)) & 1) == 0)
    {
      a1[v5] = v4;
      v17 = v7;
      sub_F5D6C();
      v7 = v17;
    }

    return;
  }
  v18 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.1878, 0.0023, 0.5399, 0.9629);
  if ((v6 & 1) != 0)
  {
    if (!v4)
    {
      v10 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 5.0, 500.0, 1000.0, 0.0, 0.0);

      objc_msgSend(v10, "setSpringCubicTimingParameters:", v9);
      v18 = v10;
    }
  }
  else if (!v4)
  {
    goto LABEL_17;
  }
  v11 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 300.0, 28.0, 0.0, 0.0);

  v18 = v11;
LABEL_17:
  v12 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringAnimator), "initWithDuration:timingParameters:", v18, 0.0);
  v13 = swift_allocObject(&unk_1D2558, 25, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = v4;
  aBlock[4] = sub_124DF8;
  v20 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_31;
  v14 = _Block_copy(aBlock);
  v15 = v20;
  a1;
  objc_msgSend(v12, "addAnimations:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  objc_msgSend(v12, "setInterruptible:", 0);
  objc_msgSend(v12, "startAnimation");

  v16 = a1[v5];
  if (v16 == 2 || ((v4 ^ ((v16 & 1) == 0)) & 1) == 0)
  {
    a1[v5] = v4;
    sub_F5D6C();
  }

}

id sub_118034(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "buttonWithType:", a1);
}

uint64_t sub_11806C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203580);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_1180C4()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203580);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_118108(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_B2648();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_11812C()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_118144(void *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = type metadata accessor for MiniPlayerViewController.HighlightGestureRecognizer();
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = v5;
    v7 = a1;
    a2(v6);

  }
}

void sub_1181BC(void *a1, void (*a2)(uint64_t), uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = objc_opt_self(*a4);
  v7 = swift_dynamicCastObjCClass(a1, v6);
  if (v7)
  {
    v8 = v7;
    v9 = a1;
    a2(v8);

  }
}

uint64_t sub_118234(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  _QWORD *v23;
  _OWORD v24[2];
  _BYTE v25[24];
  uint64_t v26;

  v3 = v2;
  swift_beginAccess(&unk_1FF848, v24, 32, 0);
  v6 = objc_getAssociatedObject(v3, &unk_1FF848);
  swift_endAccess(v24);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v24, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_982C((uint64_t)v24, (uint64_t)v25, &qword_1FD880);
  if (v26)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_203558);
    if ((swift_dynamicCast(&v23, v25, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
    {
      v8 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    sub_9944((uint64_t)v25, &qword_1FD880);
  }
  v8 = _swiftEmptyArrayStorage;
LABEL_9:
  *(_QWORD *)&v24[0] = v8;
  v9 = swift_allocObject(&unk_1D2AF0, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = type metadata accessor for GestureRecognizerHandler();
  v11 = swift_allocObject(v10, 40, 7);
  v12 = swift_unknownObjectWeakInit(v11 + 16, 0);
  swift_unknownObjectWeakAssign(v12, v3);
  v13 = swift_allocObject(&unk_1D2B18, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1262C4;
  *(_QWORD *)(v13 + 24) = v9;
  *(_QWORD *)(v11 + 24) = sub_126404;
  *(_QWORD *)(v11 + 32) = v13;
  Strong = swift_unknownObjectWeakLoadStrong(v11 + 16);
  if (Strong)
  {
    v15 = (void *)Strong;
    swift_retain();
    objc_msgSend(v15, "addTarget:action:", v11, "handleActionFromGestureRecognizer:");

  }
  else
  {
    swift_retain();
  }
  v16 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v24[0] & 0xFFFFFFFFFFFFFF8));
  v17 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)&v24[0] & 0xFFFFFFFFFFFFFF8));
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v11);
  specialized Array._endMutation()(v19);
  v20 = *(_QWORD *)&v24[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  swift_beginAccess(&unk_1FF848, v25, 32, 0);
  objc_setAssociatedObject(v3, &unk_1FF848, isa, (char *)&dword_0 + 1);
  swift_endAccess(v25);

  return v11;
}

uint64_t sub_1184B8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  _QWORD *v23;
  _OWORD v24[2];
  _BYTE v25[24];
  uint64_t v26;

  v3 = v2;
  swift_beginAccess(&unk_1FF848, v24, 32, 0);
  v6 = objc_getAssociatedObject(v3, &unk_1FF848);
  swift_endAccess(v24);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v24, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_982C((uint64_t)v24, (uint64_t)v25, &qword_1FD880);
  if (v26)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_203558);
    if ((swift_dynamicCast(&v23, v25, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
    {
      v8 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    sub_9944((uint64_t)v25, &qword_1FD880);
  }
  v8 = _swiftEmptyArrayStorage;
LABEL_9:
  *(_QWORD *)&v24[0] = v8;
  v9 = swift_allocObject(&unk_1D2A30, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = type metadata accessor for GestureRecognizerHandler();
  v11 = swift_allocObject(v10, 40, 7);
  v12 = swift_unknownObjectWeakInit(v11 + 16, 0);
  swift_unknownObjectWeakAssign(v12, v3);
  v13 = swift_allocObject(&unk_1D2A58, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1262C4;
  *(_QWORD *)(v13 + 24) = v9;
  *(_QWORD *)(v11 + 24) = sub_1262E8;
  *(_QWORD *)(v11 + 32) = v13;
  Strong = swift_unknownObjectWeakLoadStrong(v11 + 16);
  if (Strong)
  {
    v15 = (void *)Strong;
    swift_retain();
    objc_msgSend(v15, "addTarget:action:", v11, "handleActionFromGestureRecognizer:");

  }
  else
  {
    swift_retain();
  }
  v16 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v24[0] & 0xFFFFFFFFFFFFFF8));
  v17 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)&v24[0] & 0xFFFFFFFFFFFFFF8));
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v11);
  specialized Array._endMutation()(v19);
  v20 = *(_QWORD *)&v24[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  swift_beginAccess(&unk_1FF848, v25, 32, 0);
  objc_setAssociatedObject(v3, &unk_1FF848, isa, (char *)&dword_0 + 1);
  swift_endAccess(v25);

  return v11;
}

uint64_t sub_11873C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  _QWORD *v23;
  _OWORD v24[2];
  _BYTE v25[24];
  uint64_t v26;

  v3 = v2;
  swift_beginAccess(&unk_1FF848, v24, 32, 0);
  v6 = objc_getAssociatedObject(v3, &unk_1FF848);
  swift_endAccess(v24);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v24, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_982C((uint64_t)v24, (uint64_t)v25, &qword_1FD880);
  if (v26)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_203558);
    if ((swift_dynamicCast(&v23, v25, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
    {
      v8 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    sub_9944((uint64_t)v25, &qword_1FD880);
  }
  v8 = _swiftEmptyArrayStorage;
LABEL_9:
  *(_QWORD *)&v24[0] = v8;
  v9 = swift_allocObject(&unk_1D29E0, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = type metadata accessor for GestureRecognizerHandler();
  v11 = swift_allocObject(v10, 40, 7);
  v12 = swift_unknownObjectWeakInit(v11 + 16, 0);
  swift_unknownObjectWeakAssign(v12, v3);
  v13 = swift_allocObject(&unk_1D2A08, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1262C4;
  *(_QWORD *)(v13 + 24) = v9;
  *(_QWORD *)(v11 + 24) = sub_1262C8;
  *(_QWORD *)(v11 + 32) = v13;
  Strong = swift_unknownObjectWeakLoadStrong(v11 + 16);
  if (Strong)
  {
    v15 = (void *)Strong;
    swift_retain();
    objc_msgSend(v15, "addTarget:action:", v11, "handleActionFromGestureRecognizer:");

  }
  else
  {
    swift_retain();
  }
  v16 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v24[0] & 0xFFFFFFFFFFFFFF8));
  v17 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)&v24[0] & 0xFFFFFFFFFFFFFF8));
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v11);
  specialized Array._endMutation()(v19);
  v20 = *(_QWORD *)&v24[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  swift_beginAccess(&unk_1FF848, v25, 32, 0);
  objc_setAssociatedObject(v3, &unk_1FF848, isa, (char *)&dword_0 + 1);
  swift_endAccess(v25);

  return v11;
}

id sub_1189C0(uint64_t a1)
{
  id v2;
  Class isa;
  id v4;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v2, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v4;
}

id sub_118B00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImagelessMPButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ImagelessMPButton()
{
  return objc_opt_self(_TtC12NowPlayingUIP33_20B7ED5F4C86462350B4C8940E4EFBD517ImagelessMPButton);
}

double sub_118C14()
{
  uint64_t v0;
  void *v1;
  SEL *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  double result;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  NSString v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  NSString v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  id v28;
  NSString v29;
  id v30;
  NSString v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = (SEL *)&selRef_boundingRectWithSize_options_attributes_context_;
  v3 = objc_msgSend(v1, "mainBundle");
  v32._object = (void *)0xE000000000000000;
  v4._object = (void *)0x800000000018D080;
  v4._countAndFlagsBits = 0xD000000000000012;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v32)._object;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlScrubSpeed + 8) & 1) != 0)
  {
    swift_bridgeObjectRelease(object);
    sub_119068();
    return result;
  }
  switch(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlScrubSpeed))
  {
    case 0:
      v8 = objc_msgSend(v1, "mainBundle");
      v33._object = (void *)0xE000000000000000;
      v9._object = (void *)0x800000000018D0E0;
      v9._countAndFlagsBits = 0xD000000000000012;
      v10._countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v33._countAndFlagsBits = 0;
      v1 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v33)._object;

      v11 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
      if (!v11)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      v2 = v11;
      v12 = String._bridgeToObjectiveC()();
      -[SEL setText:](v2, "setText:", v12);

      v13 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
      if (v13)
        goto LABEL_15;
      __break(1u);
LABEL_7:
      v14 = objc_msgSend(v1, v2[113]);
      v15._countAndFlagsBits = 0xD000000000000014;
      v34._object = (void *)0xE000000000000000;
      v15._object = (void *)0x800000000018D0C0;
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      v34._countAndFlagsBits = 0;
      v1 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v34)._object;

      v17 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
      if (!v17)
        goto LABEL_18;
      v2 = v17;
      v18 = String._bridgeToObjectiveC()();
      -[SEL setText:](v2, "setText:", v18);

      v13 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
      if (v13)
        goto LABEL_15;
      __break(1u);
LABEL_10:
      v19 = objc_msgSend(v1, v2[113]);
      v20._countAndFlagsBits = 0xD000000000000017;
      v35._object = (void *)0xE000000000000000;
      v20._object = (void *)0x800000000018D0A0;
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      v35._countAndFlagsBits = 0;
      v1 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v35)._object;

      v22 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
      if (!v22)
        goto LABEL_19;
      v2 = v22;
      v23 = String._bridgeToObjectiveC()();
      -[SEL setText:](v2, "setText:", v23);

      v13 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
      if (v13)
        goto LABEL_15;
      __break(1u);
LABEL_13:
      v24 = objc_msgSend(v1, v2[113]);
      v36._object = (void *)0xE000000000000000;
      v25._countAndFlagsBits = 0x72635320656E6946;
      v25._object = (void *)0xEE00676E69626275;
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      v36._countAndFlagsBits = 0;
      v1 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v36)._object;

      v27 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
      if (!v27)
        goto LABEL_20;
      v28 = v27;
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v28, "setText:", v29);

      v13 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
      if (!v13)
      {
LABEL_21:
        __break(1u);
        JUMPOUT(0x119058);
      }
LABEL_15:
      v30 = v13;
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v30, "setTitle:forState:", v31, 0);

      sub_124BE4();
      swift_bridgeObjectRelease(v1);
LABEL_16:
      *(_QWORD *)&result = swift_bridgeObjectRelease(object).n128_u64[0];
      return result;
    case 1:
      goto LABEL_7;
    case 2:
      goto LABEL_10;
    case 3:
      goto LABEL_13;
    default:
      goto LABEL_16;
  }
}

void sub_119068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  Swift::String v40;
  Swift::String v41;
  void *object;
  NSString v43;
  void *v44;
  id v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  NSString v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t ObjectType;
  void *v66;
  id v67;
  id v68;
  double v69;
  void *v70;
  NSString v71;
  void *v72;
  unint64_t v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  Swift::String v80;
  Swift::String v81;
  NSString v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  NSString v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  double v97;
  void *v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  NSString v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  id v110;
  void *v111;
  unsigned int v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  void *v117;
  id v118;
  void *v119;
  double v120;
  double v121;
  double v122;
  double v123;
  void *v124;
  id v125;
  double v126;
  double v127;
  void *v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  void *v140;
  void *v141;
  id v142;
  id v143;
  _QWORD v144[14];
  _BYTE v145[24];
  Swift::String v146;
  Swift::String v147;
  Swift::String v148;

  v1 = v0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse);
  if (!v3)
    goto LABEL_11;
  v4 = objc_msgSend(v3, "tracklist");
  v5 = sub_B61B8();

  if (!v5
    || (v6 = objc_msgSend(v5, "metadataObject"), v5, !v6)
    || (v7 = objc_msgSend(v6, "flattenedGenericObject"),
        v8 = objc_msgSend(v7, "anyObject"),
        v6,
        v7,
        !v8))
  {
LABEL_11:
    v17 = *(_QWORD **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder);
    if (!v17)
    {
      v31 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel;
      v32 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
      if (!v32)
      {
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      v33 = qword_1F95B0;
      v34 = v32;
      if (v33 != -1)
        swift_once(&qword_1F95B0, sub_FDF98);
      objc_msgSend(v34, "setTextColor:", qword_210338);

      v35 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl);
      if (!v35)
        goto LABEL_98;
      objc_msgSend(v35, "setHidden:", 0);
      v36 = *(void **)(v1 + v31);
      if (!v36)
      {
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      v37 = (void *)objc_opt_self(NSBundle);
      v38 = v36;
      v39 = objc_msgSend(v37, "mainBundle");
      v40._countAndFlagsBits = 0xD000000000000020;
      v147._object = (void *)0xE000000000000000;
      v40._object = (void *)0x800000000018A8D0;
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      v147._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v147)._object;

      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v38, "setText:", v43, swift_bridgeObjectRelease(object).n128_f64[0]);

      v44 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
      if (!v44)
      {
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      v45 = v44;
      v46 = String._bridgeToObjectiveC()();
      objc_msgSend(v45, "setTitle:forState:", v46, 0);

      v47 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView;
      v48 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
      if (v48)
      {
        v49 = *(_QWORD *)(v48 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
        v50 = *(void **)(v49 + 80);
        *(_QWORD *)(v49 + 80) = 0;
        swift_retain();
        sub_FFC90(v50);
        swift_release(v49);

      }
      v51 = *(void **)(v1 + v2);
      if (v51)
      {
        v52 = *(void **)(v1 + v47);
        if (v52)
        {
          v53 = v51;
          v54 = v52;
          sub_F5C70(objc_msgSend(v53, "playerPath"));

        }
      }
      v55 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel);
      if (!v55)
        goto LABEL_101;
      v56 = v55;
      v57 = String._bridgeToObjectiveC()();
      objc_msgSend(v56, "setText:", v57);

      *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) = 0;
      sub_119BC4();
      v58 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider) = 0;
      swift_release(v58);
      v59 = (_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView);
      v60 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView
                      + 8);
      *v59 = 0;
      v59[1] = 0;
LABEL_45:
      *(_QWORD *)&v97 = swift_bridgeObjectRelease(v60).n128_u64[0];
      goto LABEL_46;
    }
    v18 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel;
    v19 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
    if (!v19)
    {
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    v20 = (void *)objc_opt_self(UIColor);
    swift_retain();
    v21 = v19;
    v22 = objc_msgSend(v20, "systemGrayColor");
    objc_msgSend(v21, "setTextColor:", v22);

    v23 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl);
    if (!v23)
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    objc_msgSend(v23, "setHidden:", 1);
    v24 = *(void **)(v1 + v18);
    if (!v24)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    if (v17[4])
    {
      v25 = (void *)objc_opt_self(NSBundle);
      v26 = v24;
      v27 = objc_msgSend(v25, "mainBundle");
      v28._countAndFlagsBits = 0xD000000000000023;
      v146._object = (void *)0xE000000000000000;
      v28._object = (void *)0x800000000018CFD0;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v146._countAndFlagsBits = 0;
      v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v146)._object;
    }
    else
    {
      v61 = qword_1F96B8;
      v62 = v24;
      if (v61 != -1)
        swift_once(&qword_1F96B8, sub_15D030);
      swift_beginAccess(&static NowPlayingDataProvider.shared, v145, 0, 0);
      sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v144, (uint64_t *)&unk_1FC7F0);
      v63 = v144[0];
      if (!v144[0])
        goto LABEL_102;
      v64 = v144[1];
      swift_unknownObjectRetain(v144[0]);
      sub_4AE24((uint64_t)v144);
      ObjectType = swift_getObjectType(v63);
      v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(ObjectType, v64);
      swift_unknownObjectRelease(v63);
      v67 = objc_msgSend(v66, "metadataPlayerPath");

      v68 = objc_msgSend(v67, "route");
      if (!v68)
      {
        v71 = 0;
        goto LABEL_36;
      }
      v27 = objc_msgSend(v68, "routeName");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    }
    v70 = v30;

    v71 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v69 = swift_bridgeObjectRelease(v70).n128_u64[0];
LABEL_36:
    objc_msgSend(v24, "setText:", v71, v69);

    v72 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
    if (!v72)
    {
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    v73 = v17[3];
    v74 = (void *)v17[4];
    if (v74)
    {
      v75 = v72;
      v76 = v74;
    }
    else
    {
      v77 = (void *)objc_opt_self(NSBundle);
      v78 = v72;
      v79 = objc_msgSend(v77, "mainBundle");
      v148._object = (void *)0xE000000000000000;
      v80._object = (void *)0x800000000018CFB0;
      v80._countAndFlagsBits = 0xD000000000000019;
      v81._countAndFlagsBits = 0;
      v81._object = (void *)0xE000000000000000;
      v148._countAndFlagsBits = 0;
      v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)v73, (NSBundle)v79, v81, v148)._object;

      v74 = 0;
    }
    swift_bridgeObjectRetain(v74);
    v82 = String._bridgeToObjectiveC()();
    objc_msgSend(v72, "setTitle:forState:", v82, 0, swift_bridgeObjectRelease(v76).n128_f64[0]);

    v83 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView;
    v84 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
    if (v84)
    {
      v85 = *(_QWORD *)(v84 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
      v86 = (void *)v17[2];
      v87 = *(void **)(v85 + 80);
      *(_QWORD *)(v85 + 80) = v86;
      v88 = v86;
      swift_retain();
      sub_FFC90(v87);
      swift_release(v85);

      v89 = *(void **)(v1 + v83);
      if (v89)
      {
        v90 = v89;
        sub_F5C70(0);

      }
    }
    v91 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel);
    if (!v91)
      goto LABEL_94;
    v92 = v91;
    v93 = String._bridgeToObjectiveC()();
    objc_msgSend(v92, "setText:", v93);

    *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) = 0;
    sub_119BC4();
    v94 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider) = 0;
    swift_release(v94);
    v95 = (_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView);
    v96 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView + 8);
    *v95 = 0;
    v95[1] = 0;
    swift_release(v17);
    v60 = v96;
    goto LABEL_45;
  }
  v9 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  if (!v9)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    return;
  }
  v10 = qword_1F95B0;
  v11 = v9;
  if (v10 != -1)
    swift_once(&qword_1F95B0, sub_FDF98);
  objc_msgSend(v11, "setTextColor:", qword_210338);

  v12 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl);
  if (!v12)
    goto LABEL_104;
  objc_msgSend(v12, "setHidden:", 0);
  v13 = objc_opt_self(MPModelPodcastEpisode);
  v14 = swift_dynamicCastObjCClass(v8, v13);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = v8;
    sub_122764(v15);
  }
  else
  {
    v131 = objc_opt_self(MPModelSong);
    v132 = swift_dynamicCastObjCClass(v8, v131);
    if (v132)
    {
      v133 = (void *)v132;
      v134 = v8;
      sub_123604(v133);
    }
    else
    {
      v135 = objc_opt_self(MPModelTVEpisode);
      v136 = swift_dynamicCastObjCClass(v8, v135);
      if (!v136)
      {
        v137 = objc_opt_self(MPModelMovie);
        v136 = swift_dynamicCastObjCClass(v8, v137);
        if (!v136)
          goto LABEL_105;
      }
      v138 = (void *)v136;
      v139 = v8;
      sub_123AF0(v138);
    }
  }

  v140 = *(void **)(v1 + v2);
  if (v140
    && (v141 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView)) != 0)
  {
    v142 = v140;
    v143 = v141;
    sub_F5C70(objc_msgSend(v142, "playerPath"));

  }
  else
  {

  }
LABEL_46:
  v98 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  if (!v98)
  {
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v99 = objc_msgSend(v98, "text", v97);
  v100 = v99;
  if (v99)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
    v102 = v101;

    v103 = String._bridgeToObjectiveC()();
    LODWORD(v100) = objc_msgSend(v103, "_isNaturallyRTL", swift_bridgeObjectRelease(v102).n128_f64[0]);

  }
  v104 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView;
  v105 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView);
  if (!v105)
    goto LABEL_82;
  objc_msgSend(v105, "setAnimationDirection:", v100);
  v106 = *(void **)(v1 + v104);
  if (!v106)
  {
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if ((_DWORD)v100)
    v107 = 4;
  else
    v107 = 3;
  objc_msgSend(v106, "setSemanticContentAttribute:", v107);
  v108 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton;
  v109 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
  if (!v109)
    goto LABEL_84;
  v110 = objc_msgSend(v109, "titleForState:", 0);
  if (v110)
  {
    v111 = v110;
    v112 = objc_msgSend(v110, "_isNaturallyRTL");

  }
  else
  {
    v112 = 0;
  }
  v113 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView;
  v114 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView);
  if (!v114)
    goto LABEL_85;
  objc_msgSend(v114, "setAnimationDirection:", v112);
  v115 = *(void **)(v1 + v113);
  if (!v115)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (v112)
    v116 = 4;
  else
    v116 = 3;
  objc_msgSend(v115, "setSemanticContentAttribute:", v116);
  v117 = *(void **)(v1 + v113);
  if (!v117)
    goto LABEL_87;
  v118 = objc_msgSend(v117, "contentView");
  if (!v118)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v119 = v118;
  objc_msgSend(v118, "intrinsicContentSize");
  v121 = v120;
  v123 = v122;

  v124 = *(void **)(v1 + v108);
  if (!v124)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v125 = objc_msgSend(v124, "intrinsicContentSize");
  if ((static CGSize.==~ infix(_:_:)(v125, v121, v123, v126, v127) & 1) != 0)
    return;
  v128 = *(void **)(v1 + v113);
  if (!v128)
    goto LABEL_95;
  v129 = objc_msgSend(v128, "contentView");
  if (!v129)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  v130 = v129;
  objc_msgSend(v129, "invalidateIntrinsicContentSize");

}

void sub_119BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) == 1)
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v26 = v3;
    v24 = static OS_dispatch_queue.main.getter(v16);
    static DispatchTime.now()(v24);
    + infix(_:_:)(v13, 1.0);
    v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v13, v9);
    v17 = swift_allocObject(&unk_1D2620, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v1);
    aBlock[4] = sub_1250BC;
    v29 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_38_0;
    v18 = _Block_copy(aBlock);
    swift_release(v29);
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = _swiftEmptyArrayStorage;
    v20 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v22 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v2, v20);
    v23 = (void *)v24;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v27);
    v25(v15, v9);
  }
  else
  {
    sub_119F2C(0);
  }
}

void sub_119EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE *v4;
  char v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    swift_beginAccess(v1, &v6, 0, 0);
    v4 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
    if (v4)
    {
      v5 = v4[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible];

    }
    else
    {
      v5 = 1;
    }
    sub_119F2C(v5);

  }
}

void sub_119F2C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  Class isa;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  Class v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  char v57;
  _QWORD aBlock[5];
  uint64_t v59;

  v2 = v1;
  v3 = a1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerView);
  if (objc_msgSend(v4, "isUserInteractionEnabled") != (a1 & 1))
  {
    v5 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverTopConstraint;
    v6 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverTopConstraint);
    v7 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlTopAnchor;
    v8 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlTopAnchor);
    aBlock[0] = _swiftEmptyArrayStorage;
    v57 = v3;
    if (v6)
    {
      v9 = v8;
      v10 = v6;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = *(_QWORD *)((char *)&dword_10 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
      v11 = *(_QWORD *)((char *)&dword_18 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized Array._endMutation()(v13);
      v3 = v57;
      if (!v8)
      {
LABEL_11:
        v19 = (void *)objc_opt_self(NSLayoutConstraint);

        sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v19, "deactivateConstraints:", isa, swift_bridgeObjectRelease(aBlock[0]).n128_f64[0]);

        if ((v3 & 1) != 0)
        {
          v21 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverView), "topAnchor");
          v22 = objc_msgSend(v4, "bottomAnchor");
          v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 20.0);

          v24 = *(void **)(v2 + v5);
          *(_QWORD *)(v2 + v5) = v23;

          v25 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl);
          if (v25)
          {
            v26 = objc_msgSend(v25, "topAnchor");
            v27 = objc_msgSend(v4, "bottomAnchor");
            v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, 8.0);
            v3 = v57;
            goto LABEL_17;
          }
          __break(1u);
        }
        else
        {
          v29 = objc_msgSend(v4, "topAnchor");
          v30 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverView), "topAnchor");
          v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

          v32 = *(void **)(v2 + v5);
          *(_QWORD *)(v2 + v5) = v31;

          v33 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl);
          if (v33)
          {
            v26 = objc_msgSend(v33, "topAnchor");
            v34 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesStackView);
            if (v34)
            {
              v27 = objc_msgSend(v34, "lastBaselineAnchor");
              v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, 10.0);
LABEL_17:
              v35 = v28;

              v36 = *(void **)(v2 + v7);
              *(_QWORD *)(v2 + v7) = v35;

              v37 = *(void **)(v2 + v5);
              v38 = *(void **)(v2 + v7);
              aBlock[0] = _swiftEmptyArrayStorage;
              if (v37)
              {
                v39 = v38;
                v40 = v37;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
                v42 = *(_QWORD *)((char *)&dword_10 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
                v41 = *(_QWORD *)((char *)&dword_18 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
                v43 = v19;
                if (v42 >= v41 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
                v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
                specialized Array._endMutation()(v44);
                if (!v38)
                  goto LABEL_26;
              }
              else
              {
                v45 = v38;
                v43 = v19;
                if (!v38)
                {
LABEL_26:

                  v50 = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v43, "activateConstraints:", v50, swift_bridgeObjectRelease(aBlock[0]).n128_f64[0]);

                  v51 = swift_allocObject(&unk_1D2620, 24, 7);
                  swift_unknownObjectWeakInit(v51 + 16, v2);
                  v52 = swift_allocObject(&unk_1D2760, 25, 7);
                  *(_QWORD *)(v52 + 16) = v51;
                  *(_BYTE *)(v52 + 24) = v3 & 1;
                  v53 = objc_allocWithZone((Class)UIViewPropertyAnimator);
                  aBlock[4] = sub_1250E8;
                  v59 = v52;
                  aBlock[0] = _NSConcreteStackBlock;
                  aBlock[1] = 1107296256;
                  aBlock[2] = sub_F528;
                  aBlock[3] = &block_descriptor_45_0;
                  v54 = _Block_copy(aBlock);
                  v55 = v59;
                  swift_retain();
                  swift_release(v55);
                  v56 = objc_msgSend(v53, "initWithDuration:curve:animations:", 0, v54, 0.3);
                  _Block_release(v54);
                  objc_msgSend(v56, "startAnimation", swift_release(v51).n128_f64[0]);

                  return;
                }
              }
              v46 = v38;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
              v48 = *(_QWORD *)((char *)&dword_10 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
              v47 = *(_QWORD *)((char *)&dword_18 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
              if (v48 >= v47 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
              v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
              specialized Array._endMutation()(v49);
              goto LABEL_26;
            }
LABEL_30:
            __break(1u);
            return;
          }
        }
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      v14 = v8;
      if (!v8)
        goto LABEL_11;
    }
    v15 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)((char *)&dword_10 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
    v16 = *(_QWORD *)((char *)&dword_18 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18);
    v3 = v57;
    goto LABEL_11;
  }
}

id sub_11A4F8()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___shazamHostingController;
  v2 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___shazamHostingController];
  v3 = v2;
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v3 = sub_11A564(v0);
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    v5 = v3;
    sub_4375C(v4);
  }
  sub_15450(v2);
  return v3;
}

id sub_11A564(void *a1)
{
  uint64_t v2;
  _QWORD *boxed_opaque_existential_1;
  char v4;
  void *v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  void *v17;
  _QWORD v18[5];

  v2 = type metadata accessor for Podcasts(0);
  v18[3] = v2;
  v18[4] = sub_8330(&qword_1FB510, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(boxed_opaque_existential_1, enum case for Podcasts.shazam(_:), v2);
  v4 = isFeatureEnabled(_:)(v18);
  __swift_destroy_boxed_opaque_existential_0(v18);
  v5 = 0;
  if ((v4 & 1) == 0)
    return v5;
  v6 = (char *)objc_allocWithZone((Class)type metadata accessor for ShazamHostingController(0));
  v7 = qword_204A70;
  v8 = (objc_class *)type metadata accessor for ShazamState(0);
  v9 = objc_allocWithZone(v8);
  v10 = v6;
  v11 = objc_msgSend(v9, "init");
  *(_QWORD *)&v6[v7] = v11;
  v12 = sub_8330(&qword_203590, type metadata accessor for ShazamState, (uint64_t)&unk_16F78C);
  v13 = ObservedObject.init(wrappedValue:)(v11, v8, v12);
  v15 = v14;

  v18[0] = v13;
  v18[1] = v15;
  v5 = (void *)UIHostingController.init(rootView:)(v18);
  objc_msgSend(a1, "addChildViewController:", v5);
  objc_msgSend(v5, "didMoveToParentViewController:", a1);
  result = objc_msgSend(v5, "view");
  if (result)
  {
    v17 = result;
    objc_msgSend(result, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    return v5;
  }
  __break(1u);
  return result;
}

void sub_11A718()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *ObjectType;
  uint64_t v3;
  void (**v4)(_QWORD, _QWORD);
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  NSString v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  objc_class *ObjCClassFromMetadata;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  double v47;
  void *v48;
  void *v49;
  char *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  double v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  double Width;
  uint64_t v80;
  id v81;
  void *v82;
  double v83;
  CGFloat v84;
  double v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  double v91;
  double v92;
  objc_class *v93;
  id v94;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  void *v102;
  void *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  void *v107;
  void *v108;
  id v109;
  void *v110;
  void *v111;
  double v112;
  void *v113;
  void *v114;
  uint64_t v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  void *v120;
  void *v121;
  uint64_t v122;
  id v123;
  id v124;
  uint64_t v125;
  void *v126;
  void *v127;
  void *v128;
  uint64_t v129;
  char *v130;
  void *v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t inited;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  void *v145;
  void *v146;
  id v147;
  id v148;
  id v149;
  void *v150;
  id v151;
  uint64_t v152;
  void *v153;
  id v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  id v160;
  void *v161;
  void *v162;
  id v163;
  uint64_t v164;
  void *v165;
  void *v166;
  void *v167;
  id v168;
  Swift::String v169;
  Class isa;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  void *v181;
  void *v182;
  uint64_t v183;
  id v184;
  void *v185;
  uint64_t v186;
  id v187;
  void *v188;
  uint64_t v189;
  id v190;
  id v191;
  uint64_t v192;
  void *v193;
  void *v194;
  void *v195;
  id v196;
  Swift::String v197;
  Class v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  char **v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  id v207;
  void *v208;
  void *v209;
  void *v210;
  uint64_t v211;
  id v212;
  void *v213;
  uint64_t v214;
  id v215;
  void *v216;
  uint64_t v217;
  id v218;
  id v219;
  uint64_t v220;
  void *v221;
  void *v222;
  id v223;
  uint64_t v224;
  void *v225;
  void *v226;
  void *v227;
  uint64_t v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  void *v234;
  _QWORD *v235;
  void *v236;
  void *v237;
  uint64_t v238;
  id v239;
  id v240;
  id v241;
  id v242;
  uint64_t v243;
  void *v244;
  void *v245;
  id v246;
  id v247;
  void *v248;
  void *v249;
  void *v250;
  void *v251;
  void *v252;
  void *v253;
  id v254;
  void *v255;
  _QWORD *v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  uint64_t v260;
  void *v261;
  uint64_t v262;
  void *v263;
  void *v264;
  void *v265;
  uint64_t v266;
  id v267;
  void *v268;
  uint64_t v269;
  id v270;
  id v271;
  void *v272;
  objc_class *v273;
  id v274;
  char *v275;
  void *v276;
  void *v277;
  id v278;
  NSString v279;
  id v280;
  void *v281;
  id v282;
  uint64_t v283;
  void *v284;
  void *v285;
  id v286;
  void **v287;
  void *v288;
  void *v289;
  double v290;
  void *v291;
  double v292;
  void *v293;
  void *v294;
  id v295;
  void *v296;
  id v297;
  void *v298;
  void *v299;
  void *v300;
  __int128 *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  __n128 v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  double v316;
  void *v317;
  id v318;
  void *v319;
  id v320;
  char *v321;
  void *v322;
  void *v323;
  char *v324;
  id v325;
  id v326;
  void *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  void *v332;
  void *v333;
  double v334;
  void *v335;
  double v336;
  void *v337;
  void *v338;
  void *v339;
  uint64_t v340;
  uint64_t v341;
  id v342;
  Class v343;
  id v344;
  void *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  void *v355;
  void *v356;
  id v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  _QWORD *v363;
  uint64_t v364;
  id v365;
  uint64_t v366;
  void *v367;
  void *v368;
  void *v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  void *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  uint64_t v381;
  void *v382;
  void *v383;
  char *v384;
  id v385;
  id v386;
  void *v387;
  id v388;
  double v389;
  void *v390;
  void *v391;
  void *v392;
  void *v393;
  id v394;
  Class v395;
  id v396;
  void *v397;
  double v398;
  id v399;
  void *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  NSString v405;
  NSString v406;
  NSString v407;
  uint64_t v408;
  uint64_t v409;
  _QWORD *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  void (*v417)(uint64_t);
  uint64_t v418;
  uint64_t v419;
  id v420;
  uint64_t v421;
  void *v422;
  void *v423;
  id v424;
  void *v425;
  void *v426;
  uint64_t v427;
  char *v428;
  id v429;
  uint64_t v430;
  id v431;
  uint64_t v432;
  void *v433;
  void *v434;
  id v435;
  void *v436;
  void *v437;
  uint64_t v438;
  char *v439;
  id v440;
  uint64_t v441;
  double v442;
  void *v443;
  uint64_t v444;
  id v445;
  id v446;
  void *v447;
  id v448;
  id v449;
  id v450;
  uint64_t v451;
  void *v452;
  uint64_t v453;
  id v454;
  void *v455;
  id v456;
  id v457;
  void *v458;
  void *v459;
  id v460;
  id v461;
  id v462;
  void *v463;
  id v464;
  id v465;
  void *v466;
  void *v467;
  id v468;
  id v469;
  void *v470;
  void *v471;
  uint64_t v472;
  id v473;
  id v474;
  uint64_t v475;
  void *v476;
  void *v477;
  id v478;
  id v479;
  void *v480;
  void *v481;
  id v482;
  id v483;
  uint64_t v484;
  void *v485;
  double v486;
  void *v487;
  uint64_t v488;
  id v489;
  id v490;
  void *v491;
  id v492;
  id v493;
  void *v494;
  id v495;
  id v496;
  void *v497;
  id v498;
  id v499;
  uint64_t v500;
  void *v501;
  id v502;
  id v503;
  void *v504;
  id v505;
  id v506;
  uint64_t v507;
  uint64_t v508;
  id v509;
  uint64_t v510;
  void *v511;
  id v512;
  id v513;
  void *v514;
  uint64_t v515;
  _QWORD *v516;
  _QWORD *v517;
  void (**v518)(_QWORD, _QWORD);
  id v519;
  void *v520;
  id v521;
  id v522;
  id v523;
  id v524;
  id v525;
  void *v526;
  void *v527;
  void *v528;
  uint64_t v529;
  void *v530;
  id v531;
  id v532;
  id v533;
  id v534;
  id v535;
  void *v536;
  id v537;
  id v538;
  id v539;
  void *v540;
  id v541;
  id v542;
  void *v543;
  id v544;
  id v545;
  void *v546;
  uint64_t v547;
  void *v548;
  id v549;
  id v550;
  id v551;
  id v552;
  double v553;
  id v554;
  void *v555;
  id v556;
  id v557;
  void *v558;
  id v559;
  id v560;
  id v561;
  void *v562;
  id v563;
  id v564;
  void *v565;
  id v566;
  id v567;
  void *v568;
  id v569;
  void *v570;
  id v571;
  id v572;
  void *v573;
  id v574;
  uint64_t v575;
  void *v576;
  id v577;
  id v578;
  void *v579;
  id v580;
  void *v581;
  id v582;
  id v583;
  void *v584;
  id v585;
  id v586;
  void *v587;
  id v588;
  id v589;
  id v590;
  void *v591;
  id v592;
  void *v593;
  id v594;
  id v595;
  void *v596;
  id v597;
  id v598;
  void *v599;
  id v600;
  id v601;
  id v602;
  void *v603;
  id v604;
  id v605;
  void *v606;
  void *v607;
  id v608;
  id v609;
  void *v610;
  id v611;
  void *v612;
  id v613;
  id v614;
  void *v615;
  id v616;
  id v617;
  id v618;
  id v619;
  id v620;
  void *v621;
  id v622;
  id v623;
  id v624;
  id v625;
  void *v626;
  id v627;
  id v628;
  id v629;
  id v630;
  void *v631;
  id v632;
  id v633;
  id v634;
  id v635;
  void *v636;
  uint64_t v637;
  id v638;
  id v639;
  id v640;
  void *v641;
  id v642;
  id v643;
  id v644;
  void *v645;
  id v646;
  id v647;
  uint64_t v648;
  uint64_t v649;
  void *v650;
  id v651;
  id v652;
  void *v653;
  id v654;
  id v655;
  void *v656;
  id v657;
  void *v658;
  id v659;
  id v660;
  void *v661;
  id v662;
  id v663;
  id v664;
  char *v665;
  void *v666;
  void *v667;
  uint64_t v668;
  void *v669;
  void *v670;
  id v671;
  id v672;
  id v673;
  id v674;
  void *v675;
  id v676;
  id v677;
  uint64_t v678;
  void *v679;
  id v680;
  void *v681;
  id v682;
  id v683;
  uint64_t v684;
  void *v685;
  id v686;
  void *v687;
  id v688;
  id v689;
  void *v690;
  uint64_t v691;
  id v692;
  uint64_t v693;
  void *v694;
  id v695;
  id v696;
  void *v697;
  id v698;
  void *v699;
  void *v700;
  id v701;
  id v702;
  id v703;
  id v704;
  void *v705;
  id v706;
  char *v707;
  id v708;
  void *v709;
  id v710;
  id v711;
  void *v712;
  char *v713;
  void *v714;
  void *v715;
  id v716;
  id v717;
  id v718;
  void *v719;
  id v720;
  id v721;
  void *v722;
  id *v723;
  id v724;
  void *v725;
  id v726;
  id v727;
  void *v728;
  id v729;
  void *v730;
  id v731;
  id v732;
  void *v733;
  id v734;
  void *v735;
  id v736;
  id v737;
  void *v738;
  id v739;
  id v740;
  void *v741;
  void *v742;
  id v743;
  id v744;
  void *v745;
  id v746;
  id v747;
  void *v748;
  id v749;
  void *v750;
  id v751;
  id v752;
  void *v753;
  id v754;
  void *v755;
  id v756;
  id v757;
  void *v758;
  id v759;
  void *v760;
  id v761;
  id v762;
  id v763;
  void *v764;
  id v765;
  id v766;
  id v767;
  void *v768;
  id v769;
  id v770;
  id v771;
  void *v772;
  id v773;
  id v774;
  id v775;
  void *v776;
  id v777;
  id v778;
  uint64_t v779;
  id v780;
  uint64_t v781;
  id v782;
  id v783;
  id v784;
  id v785;
  id v786;
  id v787;
  id v788;
  id v789;
  id v790;
  id v791;
  id v792;
  id v793;
  id v794;
  double v795;
  id v796;
  id v797;
  id v798;
  id v799;
  id v800;
  id v801;
  id v802;
  uint64_t v803;
  uint64_t v804;
  void *v805;
  Class v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  id v813;
  uint64_t v814;
  Class v815;
  _QWORD *v816;
  uint64_t v817;
  id v818;
  void *v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  void (**v823)(_QWORD, _QWORD);
  uint64_t v824;
  id *v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  char *v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  char *v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  char v847[32];
  char v848[56];
  objc_super v849;
  CGRect v850;
  CGRect v851;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = type metadata accessor for Glyph(0);
  v4 = *(void (***)(_QWORD, _QWORD))(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v807 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0, v5);
  __chkstk_darwin(v8);
  v830 = (char *)&v807 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v840 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2034E8);
  v836 = *(_QWORD *)(v840 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v840).n128_u64[0];
  v834 = (char *)&v807 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v849.receiver = (id)v1;
  v849.super_class = ObjectType;
  objc_msgSendSuper2(&v849, "viewDidLoad", v10);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerView);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = objc_msgSend((id)v1, "view");
  if (!v13)
  {
    __break(1u);
    goto LABEL_275;
  }
  v14 = v13;
  v822 = (uint64_t)v7;
  v823 = v4;
  v818 = v12;
  objc_msgSend(v13, "addSubview:", v12);

  v15 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverView);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = objc_msgSend((id)v1, "view");
  if (!v16)
  {
LABEL_275:
    __break(1u);
    goto LABEL_276;
  }
  v17 = v16;
  v819 = v15;
  objc_msgSend(v16, "addSubview:", v15);

  sub_F174(0, &qword_1FDEB0, UIAction_ptr);
  v18 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v19 = sub_7B768();
  v21 = v20;
  v22 = variable initialization expression of Window.overrideTraitCollection();
  v23 = variable initialization expression of Window.overrideTraitCollection();
  v24 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v19, v21, 0, 0, 0, 0, 0, 0, 0, v22, v23, sub_C7EC0, v18);
  sub_F174(0, &qword_2034F8, _UIGrabber_ptr);
  v25 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v26 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView;
  v27 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView) = v25;

  v28 = *(void **)(v1 + v26);
  if (!v28)
  {
LABEL_276:
    __break(1u);
    goto LABEL_277;
  }
  objc_msgSend(v28, "addAction:forControlEvents:", v24, 64);
  v29 = *(void **)(v1 + v26);
  if (!v29)
  {
LABEL_277:
    __break(1u);
    goto LABEL_278;
  }
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v30 = *(void **)(v1 + v26);
  if (!v30)
  {
LABEL_278:
    __break(1u);
    goto LABEL_279;
  }
  v31 = v30;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "_setLayoutDebuggingIdentifier:", v32);

  v33 = objc_msgSend((id)v1, "view");
  if (!v33)
  {
LABEL_279:
    __break(1u);
    goto LABEL_280;
  }
  v820 = v26;
  if (!*(_QWORD *)(v1 + v26))
  {
LABEL_280:
    __break(1u);
    goto LABEL_281;
  }
  v34 = v33;
  objc_msgSend(v33, "addSubview:");

  v35 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide;
  v36 = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide);
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "setIdentifier:", v37);

  v38 = objc_msgSend((id)v1, "view");
  if (!v38)
  {
LABEL_281:
    __break(1u);
    goto LABEL_282;
  }
  v39 = v38;
  v821 = v3;
  objc_msgSend(v38, "addLayoutGuide:", *(_QWORD *)(v1 + v35));

  v40 = objc_msgSend((id)v1, "view");
  if (!v40)
  {
LABEL_282:
    __break(1u);
    goto LABEL_283;
  }
  v41 = v40;
  v837 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLayoutGuide;
  objc_msgSend(v40, "addLayoutGuide:", *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLayoutGuide));

  sub_F174(0, (unint64_t *)&unk_203500, UILabel_ptr);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v43 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v44 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel;
  v45 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel) = v43;

  v46 = *(void **)(v1 + v44);
  if (!v46)
  {
LABEL_283:
    __break(1u);
    goto LABEL_284;
  }
  objc_msgSend(v46, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v48 = *(void **)(v1 + v44);
  if (!v48)
  {
LABEL_284:
    __break(1u);
    goto LABEL_285;
  }
  LODWORD(v47) = 1148846080;
  objc_msgSend(v48, "setContentCompressionResistancePriority:forAxis:", 0, v47);
  v49 = *(void **)(v1 + v44);
  if (!v49)
  {
LABEL_285:
    __break(1u);
    goto LABEL_286;
  }
  v50 = (char *)objc_opt_self(UIColor);
  v51 = v49;
  v842 = v50;
  v52 = objc_msgSend(v50, "secondaryLabelColor");
  objc_msgSend(v51, "setTextColor:", v52);

  v53 = *(void **)(v1 + v44);
  if (!v53)
  {
LABEL_286:
    __break(1u);
    goto LABEL_287;
  }
  sub_F174(0, (unint64_t *)&qword_200C60, UIFont_ptr);
  v54 = v53;
  v55 = (void *)static UIFont.preferredFont(forTextStyle:traits:)(UIFontTextStyleCaption2, 2);
  objc_msgSend(v54, "setFont:", v55);

  v56 = *(void **)(v1 + v44);
  if (!v56)
  {
LABEL_287:
    __break(1u);
    goto LABEL_288;
  }
  objc_msgSend(v56, "setNumberOfLines:", 1);
  v57 = objc_msgSend((id)v1, "view");
  if (!v57)
  {
LABEL_288:
    __break(1u);
    goto LABEL_289;
  }
  if (!*(_QWORD *)(v1 + v44))
  {
LABEL_289:
    __break(1u);
    goto LABEL_290;
  }
  v58 = v57;
  objc_msgSend(v57, "addSubview:");

  v59 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v60 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel;
  v61 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel) = v59;

  v62 = *(void **)(v1 + v60);
  if (!v62)
  {
LABEL_290:
    __break(1u);
    goto LABEL_291;
  }
  objc_msgSend(v62, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v64 = *(void **)(v1 + v60);
  if (!v64)
  {
LABEL_291:
    __break(1u);
    goto LABEL_292;
  }
  LODWORD(v63) = 1148846080;
  objc_msgSend(v64, "setContentCompressionResistancePriority:forAxis:", 0, v63);
  v65 = *(void **)(v1 + v60);
  if (!v65)
  {
LABEL_292:
    __break(1u);
    goto LABEL_293;
  }
  v66 = v65;
  objc_msgSend(v66, "setTextColor:", *sub_FDD24());

  v67 = *(void **)(v1 + v60);
  if (!v67)
  {
LABEL_293:
    __break(1u);
    goto LABEL_294;
  }
  objc_msgSend(v67, "setTextAlignment:", 4);
  v68 = *(void **)(v1 + v60);
  if (!v68)
  {
LABEL_294:
    __break(1u);
    goto LABEL_295;
  }
  objc_msgSend(v68, "setNumberOfLines:", 1);
  v69 = objc_msgSend((id)v1, "view");
  if (!v69)
  {
LABEL_295:
    __break(1u);
    goto LABEL_296;
  }
  v70 = v69;
  objc_msgSend(v69, "bounds");
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v77;

  v850.origin.x = v72;
  v850.origin.y = v74;
  v850.size.width = v76;
  v850.size.height = v78;
  Width = j__CGRectGetWidth(v850);
  v80 = SizeClass.init(width:)(Width);
  v81 = objc_msgSend((id)v1, "view");
  if (!v81)
  {
LABEL_296:
    __break(1u);
    goto LABEL_297;
  }
  v82 = v81;
  objc_msgSend(v81, "bounds");
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v89;

  v851.origin.x = v84;
  v851.origin.y = v86;
  v851.size.width = v88;
  v851.size.height = v90;
  v91 = j__CGRectGetWidth(v851);
  v92 = SizeClass.margins(width:)(v80, v91);
  sub_F174(0, &qword_203510, MTMPUMarqueeView_ptr);
  v93 = (objc_class *)swift_getObjCClassFromMetadata();
  v94 = objc_msgSend(objc_allocWithZone(v93), "init");
  v95 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView;
  v96 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView) = v94;

  v97 = *(void **)(v1 + v95);
  if (!v97)
  {
LABEL_297:
    __break(1u);
    goto LABEL_298;
  }
  v827 = v44;
  v814 = v35;
  objc_msgSend(v97, "setContentGap:", 32.0);
  v98 = *(void **)(v1 + v95);
  if (!v98)
  {
LABEL_298:
    __break(1u);
    goto LABEL_299;
  }
  v813 = v24;
  v841 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesStackView;
  objc_msgSend(v98, "setAnimationReferenceView:", *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesStackView));
  v99 = *(void **)(v1 + v95);
  if (!v99)
  {
LABEL_299:
    __break(1u);
    goto LABEL_300;
  }
  objc_msgSend(v99, "setFadeEdgeInsets:", 0.0, v92, 0.0, v92);
  v100 = *(void **)(v1 + v95);
  if (!v100)
  {
LABEL_300:
    __break(1u);
    goto LABEL_301;
  }
  v101 = objc_msgSend(v100, "contentView");
  if (!v101)
  {
LABEL_301:
    __break(1u);
    goto LABEL_302;
  }
  if (!*(_QWORD *)(v1 + v60))
  {
LABEL_302:
    __break(1u);
    goto LABEL_303;
  }
  v102 = v101;
  objc_msgSend(v101, "addSubview:");

  v828 = v95;
  v103 = *(void **)(v1 + v95);
  if (!v103)
  {
LABEL_303:
    __break(1u);
    goto LABEL_304;
  }
  v831 = v60;
  objc_msgSend(v103, "setViewForContentSize:", *(_QWORD *)(v1 + v60));
  v104 = sub_F174(0, &qword_203518, UIButton_ptr);
  v105 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 1);
  v106 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton;
  v107 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton) = v105;

  v108 = *(void **)(v1 + v106);
  if (!v108)
  {
LABEL_304:
    __break(1u);
    goto LABEL_305;
  }
  v109 = v108;
  objc_msgSend(v109, "setTintColor:", *sub_FE500());

  v110 = *(void **)(v1 + v106);
  if (!v110)
  {
LABEL_305:
    __break(1u);
    goto LABEL_306;
  }
  objc_msgSend(v110, "setExclusiveTouch:", 1);
  v111 = *(void **)(v1 + v106);
  if (!v111)
  {
LABEL_306:
    __break(1u);
    goto LABEL_307;
  }
  v829 = v104;
  objc_msgSend(v111, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v113 = *(void **)(v1 + v106);
  if (!v113)
  {
LABEL_307:
    __break(1u);
    goto LABEL_308;
  }
  LODWORD(v112) = 1148846080;
  objc_msgSend(v113, "setContentCompressionResistancePriority:forAxis:", 0, v112);
  v114 = *(void **)(v1 + v106);
  if (!v114)
  {
LABEL_308:
    __break(1u);
    goto LABEL_309;
  }
  v115 = v106;
  v116 = v114;
  v117 = objc_msgSend(v842, "systemGrayColor");
  objc_msgSend(v116, "setTitleColor:forState:", v117, 2);

  v118 = *(void **)(v1 + v115);
  if (!v118)
  {
LABEL_309:
    __break(1u);
    goto LABEL_310;
  }
  v119 = objc_msgSend(v118, "titleLabel");
  objc_msgSend(v119, "setNumberOfLines:", 1);

  v120 = *(void **)(v1 + v115);
  if (!v120)
  {
LABEL_310:
    __break(1u);
    goto LABEL_311;
  }
  objc_msgSend(v120, "setContentHorizontalAlignment:", 4);
  v832 = v115;
  v121 = *(void **)(v1 + v115);
  if (!v121)
  {
LABEL_311:
    __break(1u);
    goto LABEL_312;
  }
  v122 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v122 + 16, v1);
  swift_retain();
  v123 = v121;
  sub_1480B0(64, (uint64_t)sub_1260E8, v122);

  swift_release_n(v122, 2);
  v124 = objc_msgSend(objc_allocWithZone(v93), "init");
  v125 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView;
  v126 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView) = v124;

  v127 = *(void **)(v1 + v125);
  if (!v127)
  {
LABEL_312:
    __break(1u);
    goto LABEL_313;
  }
  objc_msgSend(v127, "setContentGap:", 32.0);
  v128 = *(void **)(v1 + v125);
  v129 = v828;
  if (!v128)
  {
LABEL_313:
    __break(1u);
    goto LABEL_314;
  }
  v130 = (char *)v841;
  objc_msgSend(v128, "setAnimationReferenceView:", *(_QWORD *)(v1 + v841));
  v131 = *(void **)(v1 + v125);
  v132 = v832;
  if (!v131)
  {
LABEL_314:
    __break(1u);
    goto LABEL_315;
  }
  objc_msgSend(v131, "setFadeEdgeInsets:", 0.0, v92, 0.0, v92);
  v833 = v125;
  v133 = *(void **)(v1 + v125);
  if (!v133)
  {
LABEL_315:
    __break(1u);
    goto LABEL_316;
  }
  v134 = objc_msgSend(v133, "contentView");
  if (!v134)
  {
LABEL_316:
    __break(1u);
    goto LABEL_317;
  }
  if (!*(_QWORD *)(v1 + v132))
  {
LABEL_317:
    __break(1u);
    goto LABEL_318;
  }
  v135 = v134;
  objc_msgSend(v134, "addSubview:");

  v136 = *(void **)(v1 + v833);
  if (!v136)
  {
LABEL_318:
    __break(1u);
    goto LABEL_319;
  }
  objc_msgSend(v136, "setViewForContentSize:", *(_QWORD *)(v1 + v132));
  v137 = *(void **)(v1 + v129);
  if (!v137)
  {
LABEL_319:
    __break(1u);
LABEL_320:
    __break(1u);
    goto LABEL_321;
  }
  v138 = v129;
  v139 = v833;
  objc_msgSend(v137, "addCoordinatedMarqueeView:", *(_QWORD *)(v1 + v833));
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_203520);
  inited = swift_initStackObject(v140, v848);
  v142 = sub_B1D44(inited, 3);
  v144 = v143;
  v145 = *(void **)(v1 + v138);
  *v143 = v145;
  v146 = *(void **)(v1 + v139);
  v143[1] = v146;
  v147 = v146;
  v148 = v145;
  v149 = sub_11A4F8();
  if (v149)
  {
    v150 = v149;
    v151 = objc_msgSend(v149, "view");

  }
  else
  {
    v151 = 0;
  }
  v144[2] = v151;
  sub_B1D40(v142);
  v152 = v142;
  v153 = sub_117960(v142);
  swift_bridgeObjectRelease(v152);
  sub_F174(0, &qword_203528, UIStackView_ptr);
  v154 = sub_1189C0((uint64_t)v153);
  v155 = *(void **)&v130[v1];
  *(_QWORD *)&v130[v1] = v154;

  v156 = *(void **)&v130[v1];
  if (!v156)
    goto LABEL_320;
  objc_msgSend(v156, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v157 = *(void **)&v130[v1];
  if (!v157)
  {
LABEL_321:
    __break(1u);
    goto LABEL_322;
  }
  objc_msgSend(v157, "setAxis:", 1);
  v158 = *(void **)&v130[v1];
  if (!v158)
  {
LABEL_322:
    __break(1u);
    goto LABEL_323;
  }
  objc_msgSend(v158, "setAlignment:", 1);
  v159 = *(void **)&v130[v1];
  if (!v159)
  {
LABEL_323:
    __break(1u);
    goto LABEL_324;
  }
  objc_msgSend(v159, "setBaselineRelativeArrangement:", 1);
  v160 = objc_msgSend((id)v1, "view");
  if (!v160)
  {
LABEL_324:
    __break(1u);
    goto LABEL_325;
  }
  if (!*(_QWORD *)&v130[v1])
  {
LABEL_325:
    __break(1u);
    goto LABEL_326;
  }
  v161 = v160;
  objc_msgSend(v160, "addSubview:");

  type metadata accessor for NowPlayingTransportButton();
  v162 = (void *)swift_getObjCClassFromMetadata();
  v163 = objc_msgSend(v162, "buttonWithType:", 0);
  v164 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton;
  v165 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton) = v163;

  v166 = *(void **)(v1 + v164);
  if (!v166)
  {
LABEL_326:
    __break(1u);
    goto LABEL_327;
  }
  objc_msgSend(v166, "setExclusiveTouch:", 1);
  v838 = v164;
  v167 = *(void **)(v1 + v164);
  if (!v167)
  {
LABEL_327:
    __break(1u);
LABEL_328:
    __break(1u);
LABEL_329:
    __break(1u);
    goto LABEL_330;
  }
  sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
  v168 = v167;
  v169._countAndFlagsBits = 0xD00000000000001DLL;
  v169._object = (void *)0x8000000000182DF0;
  isa = UIImage.init(imageLiteralResourceName:)(v169).super.isa;
  v171 = -[objc_class imageWithRenderingMode:](isa, "imageWithRenderingMode:", 2);

  v172 = _swiftEmptyArrayStorage[2];
  if (v172)
  {
    v173 = 0;
    v174 = &_swiftEmptyArrayStorage[4];
    do
    {
      v176 = *v174++;
      v175 = v176;
      if ((v176 & ~v173) == 0)
        v175 = 0;
      v173 |= v175;
      --v172;
    }
    while (v172);
  }
  else
  {
    v173 = 0;
  }
  objc_msgSend(v168, "setImage:forState:", v171, v173, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  v177 = v838;
  v178 = *(void **)(v1 + v838);
  if (!v178)
    goto LABEL_328;
  v179 = objc_msgSend(v178, "imageView");
  if (v179)
  {
    v180 = v179;
    objc_msgSend(v179, "setTintColor:", *sub_FDD90());

  }
  v181 = *(void **)(v1 + v177);
  if (!v181)
    goto LABEL_329;
  objc_msgSend(v181, "setHitRectInsets:", -25.0, -30.0, -25.0, 0.0);
  v182 = *(void **)(v1 + v177);
  if (!v182)
  {
LABEL_330:
    __break(1u);
    goto LABEL_331;
  }
  v183 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v183 + 16, v1);
  swift_retain();
  v184 = v182;
  sub_148370(64, (uint64_t)sub_1260F0, v183);

  swift_release_n(v183, 2);
  v185 = *(void **)(v1 + v177);
  if (!v185)
  {
LABEL_331:
    __break(1u);
    goto LABEL_332;
  }
  v186 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v186 + 16, v1);
  swift_retain();
  v187 = v185;
  sub_148370(0x1000000, (uint64_t)sub_126118, v186);

  swift_release_n(v186, 2);
  v188 = *(void **)(v1 + v177);
  if (!v188)
  {
LABEL_332:
    __break(1u);
    goto LABEL_333;
  }
  v189 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v189 + 16, v1);
  swift_retain();
  v190 = v188;
  sub_148370(0x2000000, (uint64_t)sub_12613C, v189);

  swift_release_n(v189, 2);
  v191 = objc_msgSend(v162, "buttonWithType:", 0);
  v192 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton;
  v193 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton) = v191;

  v194 = *(void **)(v1 + v192);
  if (!v194)
  {
LABEL_333:
    __break(1u);
    goto LABEL_334;
  }
  objc_msgSend(v194, "setExclusiveTouch:", 1);
  v195 = *(void **)(v1 + v192);
  if (!v195)
  {
LABEL_334:
    __break(1u);
LABEL_335:
    __break(1u);
LABEL_336:
    __break(1u);
    goto LABEL_337;
  }
  v196 = v195;
  v197._countAndFlagsBits = 0xD000000000000019;
  v197._object = (void *)0x8000000000182D90;
  v198 = UIImage.init(imageLiteralResourceName:)(v197).super.isa;
  v199 = -[objc_class imageWithRenderingMode:](v198, "imageWithRenderingMode:", 2);

  v200 = _swiftEmptyArrayStorage[2];
  if (v200)
  {
    v201 = 0;
    v202 = &_swiftEmptyArrayStorage[4];
    v203 = &selRef_boundingRectWithSize_options_attributes_context_;
    do
    {
      v205 = *v202++;
      v204 = v205;
      if ((v205 & ~v201) == 0)
        v204 = 0;
      v201 |= v204;
      --v200;
    }
    while (v200);
  }
  else
  {
    v201 = 0;
    v203 = &selRef_boundingRectWithSize_options_attributes_context_;
  }
  objc_msgSend(v196, "setImage:forState:", v199, v201, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  v206 = *(void **)(v1 + v192);
  if (!v206)
    goto LABEL_335;
  v207 = objc_msgSend(v206, "imageView");
  if (v207)
  {
    v208 = v207;
    objc_msgSend(v207, "setTintColor:", *sub_FDD90());

  }
  v209 = *(void **)(v1 + v192);
  if (!v209)
    goto LABEL_336;
  objc_msgSend(v209, "setHitRectInsets:", -25.0, 0.0, -25.0, -30.0);
  v210 = *(void **)(v1 + v192);
  if (!v210)
  {
LABEL_337:
    __break(1u);
    goto LABEL_338;
  }
  v211 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v211 + 16, v1);
  swift_retain();
  v212 = v210;
  sub_148370(64, (uint64_t)sub_126160, v211);

  swift_release_n(v211, 2);
  v213 = *(void **)(v1 + v192);
  if (!v213)
  {
LABEL_338:
    __break(1u);
    goto LABEL_339;
  }
  v214 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v214 + 16, v1);
  swift_retain();
  v215 = v213;
  sub_148370(0x1000000, (uint64_t)sub_126188, v214);

  swift_release_n(v214, 2);
  v216 = *(void **)(v1 + v192);
  if (!v216)
  {
LABEL_339:
    __break(1u);
    goto LABEL_340;
  }
  v217 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v217 + 16, v1);
  swift_retain();
  v218 = v216;
  sub_148370(0x2000000, (uint64_t)sub_1261AC, v217);

  swift_release_n(v217, 2);
  v219 = objc_msgSend(v162, "buttonWithType:", 0);
  v220 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton;
  v221 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton) = v219;

  v222 = *(void **)(v1 + v220);
  if (!v222)
  {
LABEL_340:
    __break(1u);
LABEL_341:
    __break(1u);
    goto LABEL_342;
  }
  v223 = objc_msgSend(v222, "imageView");
  v224 = v838;
  if (v223)
  {
    v225 = v223;
    objc_msgSend(v223, "setTintColor:", *sub_FDD90());

  }
  v226 = *(void **)(v1 + v220);
  if (!v226)
    goto LABEL_341;
  objc_msgSend(v226, "setExclusiveTouch:", 1);
  v227 = *(void **)(v1 + v220);
  if (!v227)
  {
LABEL_342:
    __break(1u);
    goto LABEL_343;
  }
  v228 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v228 + 16, v1);
  swift_retain();
  v229 = v227;
  sub_148370(64, (uint64_t)sub_1261D0, v228);

  swift_release_n(v228, 2);
  v230 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v231 = swift_allocObject(v230, 56, 7);
  v232 = sub_B1D4C(v231, 3);
  v234 = *(void **)(v1 + v224);
  if (!v234)
  {
LABEL_343:
    __break(1u);
    goto LABEL_344;
  }
  v235 = v233;
  v817 = v230;
  *v233 = v234;
  v826 = v220;
  v236 = *(void **)(v1 + v220);
  if (!v236)
  {
LABEL_344:
    __break(1u);
    goto LABEL_345;
  }
  v233[1] = v236;
  v237 = *(void **)(v1 + v192);
  if (!v237)
  {
LABEL_345:
    __break(1u);
    goto LABEL_346;
  }
  v238 = v232;
  type metadata accessor for NowPlayingTransportControlStackView();
  v235[2] = v237;
  sub_B1D40(v238);
  v239 = v234;
  v240 = v236;
  v241 = v237;
  v242 = sub_1189C0(v238);
  v243 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsStackView;
  v244 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsStackView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsStackView) = v242;

  v245 = *(void **)(v1 + v243);
  if (!v245)
  {
LABEL_346:
    __break(1u);
    goto LABEL_347;
  }
  v246 = v245;
  v247 = objc_msgSend(v842, "blackColor");
  objc_msgSend(v246, "setTintColor:", v247);

  v248 = *(void **)(v1 + v243);
  if (!v248)
  {
LABEL_347:
    __break(1u);
    goto LABEL_348;
  }
  objc_msgSend(v248, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v249 = *(void **)(v1 + v243);
  if (!v249)
  {
LABEL_348:
    __break(1u);
    goto LABEL_349;
  }
  objc_msgSend(v249, "setSemanticContentAttribute:", 1);
  v250 = *(void **)(v1 + v243);
  if (!v250)
  {
LABEL_349:
    __break(1u);
    goto LABEL_350;
  }
  objc_msgSend(v250, "setAxis:", 0);
  v251 = *(void **)(v1 + v243);
  if (!v251)
  {
LABEL_350:
    __break(1u);
    goto LABEL_351;
  }
  objc_msgSend(v251, "setDistribution:", 3);
  v252 = *(void **)(v1 + v243);
  if (!v252)
  {
LABEL_351:
    __break(1u);
    goto LABEL_352;
  }
  objc_msgSend(v252, "setAlignment:", 3);
  v253 = *(void **)(v1 + v243);
  if (!v253)
  {
LABEL_352:
    __break(1u);
    goto LABEL_353;
  }
  objc_msgSend(v253, "setSpacing:", 62.0);
  v254 = objc_msgSend((id)v1, "view");
  if (!v254)
  {
LABEL_353:
    __break(1u);
    goto LABEL_354;
  }
  if (!*(_QWORD *)(v1 + v243))
  {
LABEL_354:
    __break(1u);
    goto LABEL_355;
  }
  v255 = v254;
  objc_msgSend(v254, v203[35]);

  v256 = (_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics);
  v257 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics + 24);
  v258 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics), v257);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v258 + 120))(&v845, v257, v258);
  v259 = objc_allocWithZone((Class)type metadata accessor for PlayerTimeControl());
  sub_44228(&v845);
  v260 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl;
  v261 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl) = v262;

  v263 = *(void **)(v1 + v260);
  if (!v263)
  {
LABEL_355:
    __break(1u);
    goto LABEL_356;
  }
  objc_msgSend(v263, "setExclusiveTouch:", 1);
  v264 = *(void **)(v1 + v260);
  if (!v264)
  {
LABEL_356:
    __break(1u);
    goto LABEL_357;
  }
  objc_msgSend(v264, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v265 = *(void **)(v1 + v260);
  if (!v265)
  {
LABEL_357:
    __break(1u);
    goto LABEL_358;
  }
  v266 = swift_allocObject(&unk_1D2940, 24, 7);
  swift_unknownObjectUnownedInit(v266 + 16, v1);
  swift_retain();
  v267 = v265;
  sub_148384(4096, (uint64_t)sub_126218, v266);

  swift_release_n(v266, 2);
  v839 = v260;
  v268 = *(void **)(v1 + v260);
  if (!v268)
  {
LABEL_358:
    __break(1u);
    goto LABEL_359;
  }
  v269 = swift_allocObject(&unk_1D2940, 24, 7);
  swift_unknownObjectUnownedInit(v269 + 16, v1);
  swift_retain();
  v270 = v268;
  sub_47CE4((uint64_t)sub_126220, v269);

  v271 = objc_msgSend((id)v1, "view", swift_release(v269).n128_f64[0]);
  if (!v271)
  {
LABEL_359:
    __break(1u);
    goto LABEL_360;
  }
  if (!*(_QWORD *)(v1 + v839))
  {
LABEL_360:
    __break(1u);
    goto LABEL_361;
  }
  v272 = v271;
  objc_msgSend(v271, v203[35]);

  sub_F174(0, &qword_1FDE88, UILayoutGuide_ptr);
  v273 = (objc_class *)swift_getObjCClassFromMetadata();
  v274 = objc_msgSend(objc_allocWithZone(v273), "init");
  v275 = (char *)OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryTransportControlsGuide;
  v276 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryTransportControlsGuide);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryTransportControlsGuide) = v274;

  v277 = *(void **)&v275[v1];
  if (!v277)
  {
LABEL_361:
    __break(1u);
    goto LABEL_362;
  }
  v278 = v277;
  v279 = String._bridgeToObjectiveC()();
  objc_msgSend(v278, "setIdentifier:", v279);

  v280 = objc_msgSend((id)v1, "view");
  if (!v280)
  {
LABEL_362:
    __break(1u);
    goto LABEL_363;
  }
  v816 = v256;
  if (!*(_QWORD *)&v275[v1])
  {
LABEL_363:
    __break(1u);
    goto LABEL_364;
  }
  v281 = v280;
  objc_msgSend(v280, "addLayoutGuide:");

  type metadata accessor for ImagelessMPButton();
  v282 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 1);
  v283 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton;
  v284 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton) = v282;

  v285 = *(void **)(v1 + v283);
  if (!v285)
  {
LABEL_364:
    __break(1u);
    goto LABEL_365;
  }
  v286 = v285;
  v287 = sub_FE5A8();
  objc_msgSend(v286, "setTintColor:", *v287);

  v288 = *(void **)(v1 + v283);
  if (!v288)
  {
LABEL_365:
    __break(1u);
    goto LABEL_366;
  }
  objc_msgSend(v288, "setExclusiveTouch:", 1);
  v289 = *(void **)(v1 + v283);
  if (!v289)
  {
LABEL_366:
    __break(1u);
    goto LABEL_367;
  }
  v824 = v192;
  v842 = v275;
  objc_msgSend(v289, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v291 = *(void **)(v1 + v283);
  if (!v291)
  {
LABEL_367:
    __break(1u);
    goto LABEL_368;
  }
  LODWORD(v290) = 1148846080;
  objc_msgSend(v291, "setContentHuggingPriority:forAxis:", 0, v290);
  v293 = *(void **)(v1 + v283);
  if (!v293)
  {
LABEL_368:
    __break(1u);
    goto LABEL_369;
  }
  LODWORD(v292) = 1148846080;
  objc_msgSend(v293, "setContentCompressionResistancePriority:forAxis:", 0, v292);
  v294 = *(void **)(v1 + v283);
  if (!v294)
  {
LABEL_369:
    __break(1u);
LABEL_370:
    __break(1u);
    goto LABEL_371;
  }
  v295 = objc_msgSend(v294, "titleLabel");
  if (v295)
  {
    v296 = v295;
    v297 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 20.0, UIFontWeightRegular);
    objc_msgSend(v296, "setFont:", v297);

  }
  v298 = *(void **)(v1 + v283);
  if (!v298)
    goto LABEL_370;
  objc_msgSend(v298, "_setDisableAutomaticTitleAnimations:", 1);
  v299 = *(void **)(v1 + v283);
  if (!v299)
  {
LABEL_371:
    __break(1u);
    goto LABEL_372;
  }
  v815 = v273;
  objc_msgSend(v299, "setHitRectInsets:", -10.0, -28.0, -20.0, -28.0);
  v300 = *(void **)(v1 + v283);
  if (!v300)
  {
LABEL_372:
    __break(1u);
    goto LABEL_373;
  }
  v835 = v243;
  objc_msgSend(v300, "_setLineBreakMode:", 2);
  v301 = NowPlayingDataProvider.shared.unsafeMutableAddressor();
  swift_beginAccess(v301, v847, 0, 0);
  sub_2808C((uint64_t)v301, (uint64_t)&v845, (uint64_t *)&unk_1FC7F0);
  v302 = v845;
  if (!v845)
  {
LABEL_373:
    __break(1u);
    goto LABEL_374;
  }
  v303 = v846;
  swift_unknownObjectRetain(v845);
  sub_4AE24((uint64_t)&v845);
  v304 = swift_getObjectType(v302);
  v305 = v834;
  (*(void (**)(uint64_t, uint64_t))(v303 + 288))(v304, v303);
  swift_unknownObjectRelease(v302);
  v306 = *(void **)(v1 + v283);
  v307 = swift_allocObject(&unk_1D2968, 24, 7);
  *(_QWORD *)(v307 + 16) = v306;
  v308 = sub_27A8C((unint64_t *)&unk_203530, (uint64_t *)&unk_2034E8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v309 = v306;
  v310 = v840;
  v311 = Publisher<>.sink(receiveValue:)(sub_12622C, v307, v840, v308);
  v312 = swift_release(v307);
  (*(void (**)(char *, uint64_t, __n128))(v836 + 8))(v305, v310, v312);
  v313 = (char *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subscriptions);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subscriptions, &v845, 33, 0);
  v314 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v315 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v313, v314, v315);
  swift_endAccess(&v845);
  *(_QWORD *)&v316 = swift_release(v311).n128_u64[0];
  v317 = *(void **)(v1 + v283);
  if (!v317)
  {
LABEL_374:
    __break(1u);
    goto LABEL_375;
  }
  objc_msgSend(v317, "setShowsMenuAsPrimaryAction:", 1, v316);
  v318 = objc_msgSend((id)v1, "view");
  if (!v318)
  {
LABEL_375:
    __break(1u);
    goto LABEL_376;
  }
  if (!*(_QWORD *)(v1 + v283))
  {
LABEL_376:
    __break(1u);
    goto LABEL_377;
  }
  v319 = v318;
  objc_msgSend(v318, "addSubview:");

  v320 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RouteButton_iOS()), "init");
  v321 = (char *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton);
  v322 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton);
  *(_QWORD *)v321 = v320;
  *((_QWORD *)v321 + 1) = &off_1CD4E8;

  v323 = *(void **)v321;
  if (!*(_QWORD *)v321)
  {
LABEL_377:
    __break(1u);
    goto LABEL_378;
  }
  v324 = (char *)(id)v1;
  v325 = v323;
  sub_9D288(v1, (uint64_t)&off_1D2540);

  if (!*(_QWORD *)v321)
  {
LABEL_378:
    __break(1u);
    goto LABEL_379;
  }
  objc_msgSend(*(id *)v321, "setTintColor:", *v287);
  v825 = (id *)v321;
  if (!*(_QWORD *)v321)
  {
LABEL_379:
    __break(1u);
    goto LABEL_380;
  }
  objc_msgSend(*(id *)v321, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v326 = objc_msgSend(v324, "view");
  if (!v326)
  {
LABEL_380:
    __break(1u);
    goto LABEL_381;
  }
  if (!*v825)
  {
LABEL_381:
    __break(1u);
    goto LABEL_382;
  }
  v327 = v326;
  objc_msgSend(v326, "addSubview:");

  v328 = v830;
  sub_11F6C8();
  v329 = UIButton.init(configuration:primaryAction:)(v328, 0);
  v330 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton;
  v331 = *(void **)&v324[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton];
  *(_QWORD *)&v324[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton] = v329;

  v332 = *(void **)&v324[v330];
  if (!v332)
  {
LABEL_382:
    __break(1u);
    goto LABEL_383;
  }
  objc_msgSend(v332, "setExclusiveTouch:", 1);
  v333 = *(void **)&v324[v330];
  if (!v333)
  {
LABEL_383:
    __break(1u);
    goto LABEL_384;
  }
  objc_msgSend(v333, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v335 = *(void **)&v324[v330];
  if (!v335)
  {
LABEL_384:
    __break(1u);
    goto LABEL_385;
  }
  LODWORD(v334) = 1148846080;
  objc_msgSend(v335, "setContentCompressionResistancePriority:forAxis:", 0, v334);
  v337 = *(void **)&v324[v330];
  if (!v337)
  {
LABEL_385:
    __break(1u);
    goto LABEL_386;
  }
  LODWORD(v336) = 1148846080;
  objc_msgSend(v337, "setContentHuggingPriority:forAxis:", 0, v336);
  v338 = *(void **)&v324[v330];
  if (!v338)
  {
LABEL_386:
    __break(1u);
    goto LABEL_387;
  }
  objc_msgSend(v338, "setShowsMenuAsPrimaryAction:", 1);
  v339 = *(void **)&v324[v330];
  if (!v339)
  {
LABEL_387:
    __break(1u);
    goto LABEL_388;
  }
  v834 = (char *)v330;
  v340 = *(_QWORD *)&v324[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepTimerController];
  if (!v340)
  {
LABEL_388:
    __break(1u);
    goto LABEL_389;
  }
  v341 = (uint64_t)v324;
  v342 = v339;
  swift_retain();
  v343 = SleepTimerController.menuForSleepTimer()().super.super.isa;
  objc_msgSend(v342, "setMenu:", v343, swift_release(v340).n128_f64[0]);

  v344 = objc_msgSend((id)v341, "view");
  if (!v344)
  {
LABEL_389:
    __break(1u);
    goto LABEL_390;
  }
  v829 = v283;
  if (!*(_QWORD *)&v834[v341])
  {
LABEL_390:
    __break(1u);
    goto LABEL_391;
  }
  v345 = v344;
  v840 = v341;
  objc_msgSend(v344, "addSubview:");

  v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD948);
  v347 = swift_initStackObject(v346, &v844);
  v348 = sub_B1D30(v347, 2);
  v350 = v349;
  sub_2808C((uint64_t)v301, (uint64_t)&v845, (uint64_t *)&unk_1FC7F0);
  v351 = v845;
  if (!v845)
  {
LABEL_391:
    __break(1u);
    goto LABEL_392;
  }
  v352 = v846;
  swift_unknownObjectRetain(v845);
  sub_4AE24((uint64_t)&v845);
  v353 = swift_getObjectType(v351);
  v354 = (*(uint64_t (**)(uint64_t, uint64_t))(v352 + 8))(v353, v352);
  swift_unknownObjectRelease(v351);
  *(_QWORD *)v350 = v354;
  *(_QWORD *)(v350 + 8) = 0xD000000000000018;
  *(_QWORD *)(v350 + 16) = 0x800000000018D030;
  *(_BYTE *)(v350 + 24) = 0;
  v355 = (void *)MPAVRouteDidChangeNotification;
  v356 = (void *)objc_opt_self(MPAVRoutingController);
  v357 = v355;
  v358 = objc_msgSend(v356, "systemRoute");
  *(_QWORD *)(v350 + 32) = v357;
  *(_QWORD *)(v350 + 40) = v358;
  *(_QWORD *)(v350 + 48) = 0;
  *(_BYTE *)(v350 + 56) = 1;
  v359 = UIScreen.Dimensions.size.getter(v348);
  v360 = swift_allocObject(&unk_1D2620, 24, 7);
  v361 = v840;
  swift_unknownObjectWeakInit(v360 + 16, v840);
  v362 = type metadata accessor for DeprecatedBinding();
  swift_allocObject(v362, 40, 7);
  v363 = DeprecatedBinding.init(_:configurationBlock:)(v359, (uint64_t)sub_12624C, v360);
  v364 = v361 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_bindings;
  swift_beginAccess(v361 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_bindings, &v845, 33, 0);
  sub_14586C((uint64_t)v363);
  swift_endAccess(&v845);
  sub_F174(0, &qword_203540, MTMPButton_ptr);
  v365 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 1);
  v366 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton;
  v367 = *(void **)(v361 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton);
  *(_QWORD *)(v361 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton) = v365;

  v368 = *(void **)(v361 + v366);
  if (!v368)
  {
LABEL_392:
    __break(1u);
    goto LABEL_393;
  }
  objc_msgSend(v368, "setExclusiveTouch:", 1);
  v369 = *(void **)(v361 + v366);
  if (!v369)
  {
LABEL_393:
    __break(1u);
    goto LABEL_394;
  }
  objc_msgSend(v369, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v836 = v366;
  v370 = *(void **)(v361 + v366);
  if (!v370)
  {
LABEL_394:
    __break(1u);
LABEL_395:
    __break(1u);
    goto LABEL_396;
  }
  v371 = v370;
  v372 = v822;
  v373 = static Glyph.NowPlaying.context.getter();
  v374 = (void *)Glyph.image.getter(v373);
  v823[1](v372, v821);
  v375 = _swiftEmptyArrayStorage[2];
  if (v375)
  {
    v376 = 0;
    v377 = &_swiftEmptyArrayStorage[4];
    do
    {
      v379 = *v377++;
      v378 = v379;
      if ((v379 & ~v376) == 0)
        v378 = 0;
      v376 |= v378;
      --v375;
    }
    while (v375);
  }
  else
  {
    v376 = 0;
  }
  objc_msgSend(v371, "setImage:forStates:", v374, v376, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  v380 = (char *)v840;
  v381 = v836;
  v382 = *(void **)(v840 + v836);
  if (!v382)
    goto LABEL_395;
  objc_msgSend(v382, "setTintColor:", *v287);
  v383 = *(void **)&v380[v381];
  if (!v383)
  {
LABEL_396:
    __break(1u);
    goto LABEL_397;
  }
  v384 = v380;
  sub_F174(0, (unint64_t *)&qword_2034A0, UIColor_ptr);
  v385 = v383;
  v386 = sub_11FA4C((uint64_t)sub_11F9D0, 0);
  objc_msgSend(v385, "setBackgroundColor:", v386);

  v387 = *(void **)&v384[v381];
  if (!v387)
  {
LABEL_397:
    __break(1u);
    goto LABEL_398;
  }
  v388 = objc_msgSend(v387, "layer");
  objc_msgSend(v388, "setCornerRadius:", 14.0);

  v390 = *(void **)&v384[v381];
  if (!v390)
  {
LABEL_398:
    __break(1u);
    goto LABEL_399;
  }
  LODWORD(v389) = 1148846080;
  objc_msgSend(v390, "setContentCompressionResistancePriority:forAxis:", 0, v389);
  v391 = *(void **)&v384[v381];
  if (!v391)
  {
LABEL_399:
    __break(1u);
    goto LABEL_400;
  }
  objc_msgSend(v391, "setHitRectInsets:", -20.0, -20.0, -20.0, -20.0);
  v392 = *(void **)&v384[v381];
  if (!v392)
  {
LABEL_400:
    __break(1u);
    goto LABEL_401;
  }
  objc_msgSend(v392, "setShowsMenuAsPrimaryAction:", 1);
  v393 = *(void **)&v384[v381];
  if (!v393)
  {
LABEL_401:
    __break(1u);
    goto LABEL_402;
  }
  v394 = v393;
  v395 = sub_11FAF4().super.super.isa;
  objc_msgSend(v394, "setMenu:", v395);

  v396 = objc_msgSend(v384, "view");
  if (!v396)
  {
LABEL_402:
    __break(1u);
    goto LABEL_403;
  }
  if (!*(_QWORD *)&v384[v381])
  {
LABEL_403:
    __break(1u);
LABEL_404:
    __break(1u);
    goto LABEL_405;
  }
  v397 = v396;
  objc_msgSend(v396, "addSubview:");

  type metadata accessor for NowPlayingQueueControlsView();
  v398 = sub_3F11C(0);
  v399 = Window.__allocating_init(frame:)(v398, v398, v398, v398);
  v400 = *(void **)&v384[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_queueControlsView];
  *(_QWORD *)&v384[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_queueControlsView] = v399;

  v401 = swift_initStackObject(v346, &v843);
  v402 = sub_B1D30(v401, 3);
  v404 = v403;
  v405 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v404 + 8) = 0;
  *(_QWORD *)(v404 + 16) = 0;
  *(_QWORD *)v404 = v405;
  *(_BYTE *)(v404 + 24) = 1;
  v406 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v404 + 40) = 0;
  *(_QWORD *)(v404 + 48) = 0;
  *(_QWORD *)(v404 + 32) = v406;
  *(_BYTE *)(v404 + 56) = 1;
  v407 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v404 + 72) = 0;
  *(_QWORD *)(v404 + 80) = 0;
  *(_QWORD *)(v404 + 64) = v407;
  *(_BYTE *)(v404 + 88) = 1;
  v408 = UIScreen.Dimensions.size.getter(v402);
  v409 = swift_allocObject(&unk_1D2940, 24, 7);
  swift_unknownObjectUnownedInit(v409 + 16, v384);
  swift_allocObject(v362, 40, 7);
  v410 = DeprecatedBinding.init(_:configurationBlock:)(v408, (uint64_t)sub_126254, v409);
  swift_beginAccess(v364, &v845, 33, 0);
  sub_14586C((uint64_t)v410);
  swift_endAccess(&v845);
  v411 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController;
  v412 = *(_QWORD *)&v384[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController];
  v413 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v413 + 16, v384);
  v414 = *(_QWORD *)(v412 + 136);
  v415 = *(_QWORD *)(v412 + 144);
  *(_QWORD *)(v412 + 136) = sub_12625C;
  *(_QWORD *)(v412 + 144) = v413;
  sub_145A0(v414, v415);
  v416 = *(_QWORD *)&v384[v411];
  v417 = *(void (**)(uint64_t))(v416 + 136);
  if (v417)
  {
    v418 = *(_QWORD *)(v416 + 144);
    v419 = swift_retain();
    v417(v419);
    sub_145A0((uint64_t)v417, v418);
  }
  sub_F174(0, &qword_203548, UITapGestureRecognizer_ptr);
  v420 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v421 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoTapGestureRecognizer;
  v422 = *(void **)&v384[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoTapGestureRecognizer];
  *(_QWORD *)&v384[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoTapGestureRecognizer] = v420;

  v423 = *(void **)&v384[v421];
  if (!v423)
    goto LABEL_404;
  objc_msgSend(v423, "setDelegate:", v384);
  v424 = objc_msgSend(v384, "view");
  if (!v424)
  {
LABEL_405:
    __break(1u);
    goto LABEL_406;
  }
  if (!*(_QWORD *)&v384[v421])
  {
LABEL_406:
    __break(1u);
    goto LABEL_407;
  }
  v425 = v424;
  objc_msgSend(v424, "addGestureRecognizer:");

  v426 = *(void **)&v384[v421];
  if (!v426)
  {
LABEL_407:
    __break(1u);
    goto LABEL_408;
  }
  v427 = swift_allocObject(&unk_1D2990, 24, 7);
  *(_QWORD *)(v427 + 16) = v384;
  v428 = v384;
  v429 = v426;
  v430 = sub_1184B8((uint64_t)sub_126264, v427);
  swift_release(v430);

  swift_release(v427);
  sub_F174(0, &qword_203550, UIPinchGestureRecognizer_ptr);
  v431 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v432 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoPinchGestureRecognizer;
  v433 = *(void **)&v428[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoPinchGestureRecognizer];
  *(_QWORD *)&v428[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoPinchGestureRecognizer] = v431;

  v434 = *(void **)&v428[v432];
  if (!v434)
  {
LABEL_408:
    __break(1u);
    goto LABEL_409;
  }
  objc_msgSend(v434, "setDelegate:", v428);
  v435 = objc_msgSend(v428, "view");
  if (!v435)
  {
LABEL_409:
    __break(1u);
    goto LABEL_410;
  }
  if (!*(_QWORD *)&v428[v432])
  {
LABEL_410:
    __break(1u);
    goto LABEL_411;
  }
  v436 = v435;
  objc_msgSend(v435, "addGestureRecognizer:");

  v437 = *(void **)&v428[v432];
  if (!v437)
  {
LABEL_411:
    __break(1u);
    goto LABEL_412;
  }
  v438 = swift_allocObject(&unk_1D29B8, 24, 7);
  *(_QWORD *)(v438 + 16) = v428;
  v439 = v428;
  v440 = v437;
  v441 = sub_11873C((uint64_t)sub_126424, v438);
  swift_release(v441);

  *(_QWORD *)&v442 = swift_release(v438).n128_u64[0];
  v443 = *(void **)&v842[v1];
  v444 = v826;
  if (!v443)
  {
LABEL_412:
    __break(1u);
    goto LABEL_413;
  }
  v445 = objc_msgSend(v443, "bottomAnchor", v442);
  v446 = objc_msgSend(v439, "view");
  if (!v446)
  {
LABEL_413:
    __break(1u);
    goto LABEL_414;
  }
  v447 = v446;
  v448 = objc_msgSend(v446, "safeAreaLayoutGuide");

  v449 = objc_msgSend(v448, "bottomAnchor");
  v450 = objc_msgSend(v445, "constraintEqualToAnchor:", v449);

  v451 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryControlsBottomMargin;
  v452 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryControlsBottomMargin];
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryControlsBottomMargin] = v450;

  v453 = *(_QWORD *)(v1 + v839);
  if (!v453)
  {
LABEL_414:
    __break(1u);
    goto LABEL_415;
  }
  v454 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v453
                                                               + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide), "topAnchor"));
  v455 = *(void **)(v1 + v841);
  if (!v455)
  {
LABEL_415:
    __break(1u);
    goto LABEL_416;
  }
  v456 = objc_msgSend(v455, "lastBaselineAnchor");
  v457 = objc_msgSend(v454, "constraintGreaterThanOrEqualToAnchor:", v456);

  v458 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlLayoutGuideTopAnchor];
  v822 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlLayoutGuideTopAnchor;
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlLayoutGuideTopAnchor] = v457;

  v830 = (char *)OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSlider;
  v459 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSlider];
  if (!v459)
  {
LABEL_416:
    __break(1u);
    goto LABEL_417;
  }
  v460 = v459;
  v461 = objc_msgSend(v460, "trackLayoutGuide");

  v462 = objc_msgSend(v461, "bottomAnchor");
  v463 = *(void **)&v842[v1];
  if (!v463)
  {
LABEL_417:
    __break(1u);
    goto LABEL_418;
  }
  v807 = v451;
  v464 = objc_msgSend(v463, "topAnchor");
  v465 = objc_msgSend(v462, "constraintEqualToAnchor:", v464);

  v466 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSliderBottomConstraint];
  v809 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSliderBottomConstraint;
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSliderBottomConstraint] = v465;

  v467 = *(void **)(v1 + v838);
  if (!v467)
  {
LABEL_418:
    __break(1u);
    goto LABEL_419;
  }
  v468 = objc_msgSend(v467, "widthAnchor");
  v469 = objc_msgSend(v468, "constraintEqualToConstant:", 40.0);

  v470 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonWidthConstraint];
  v812 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonWidthConstraint;
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonWidthConstraint] = v469;

  v471 = *(void **)(v1 + v444);
  v472 = v835;
  if (!v471)
  {
LABEL_419:
    __break(1u);
    goto LABEL_420;
  }
  v473 = objc_msgSend(v471, "widthAnchor");
  v474 = objc_msgSend(v473, "constraintEqualToConstant:", 40.0);

  v475 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonWidthConstraint;
  v476 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonWidthConstraint];
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonWidthConstraint] = v474;

  v477 = *(void **)(v1 + v824);
  if (!v477)
  {
LABEL_420:
    __break(1u);
    goto LABEL_421;
  }
  v478 = objc_msgSend(v477, "widthAnchor");
  v479 = objc_msgSend(v478, "constraintEqualToConstant:", 40.0);

  v480 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonWidthConstraint];
  v811 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonWidthConstraint;
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonWidthConstraint] = v479;

  v481 = *(void **)(v1 + v472);
  if (!v481)
  {
LABEL_421:
    __break(1u);
    goto LABEL_422;
  }
  v482 = objc_msgSend(v481, "heightAnchor");
  v483 = objc_msgSend(v482, "constraintEqualToConstant:", 171.0);

  v484 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsHeightConstraint;
  v485 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsHeightConstraint];
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsHeightConstraint] = v483;

  v487 = *(void **)(v1 + v841);
  if (!v487)
  {
LABEL_422:
    __break(1u);
    goto LABEL_423;
  }
  v810 = v475;
  LODWORD(v486) = 1148846080;
  objc_msgSend(v487, "setContentCompressionResistancePriority:forAxis:", 1, v486);
  v488 = v837;
  v489 = objc_msgSend(*(id *)(v1 + v837), "leadingAnchor");
  v490 = objc_msgSend(v439, "view");
  if (!v490)
  {
LABEL_423:
    __break(1u);
    goto LABEL_424;
  }
  v491 = v490;
  v492 = objc_msgSend(v490, "leadingAnchor");

  v493 = objc_msgSend(v489, "constraintEqualToAnchor:", v492);
  v494 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLeadingConstraint];
  v821 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLeadingConstraint;
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLeadingConstraint] = v493;

  v495 = objc_msgSend(*(id *)(v1 + v488), "trailingAnchor");
  v496 = objc_msgSend(v439, "view");
  if (!v496)
  {
LABEL_424:
    __break(1u);
    goto LABEL_425;
  }
  v497 = v496;
  v808 = v484;
  v498 = objc_msgSend(v496, "trailingAnchor");

  v499 = objc_msgSend(v495, "constraintEqualToAnchor:", v498);
  v500 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTrailingConstraint;
  v501 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTrailingConstraint];
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTrailingConstraint] = v499;

  v502 = objc_msgSend(*(id *)(v1 + v488), "topAnchor");
  v503 = objc_msgSend(v439, "view");
  if (!v503)
  {
LABEL_425:
    __break(1u);
    goto LABEL_426;
  }
  v504 = v503;
  v505 = objc_msgSend(v503, "safeAreaLayoutGuide");

  v506 = objc_msgSend(v505, "topAnchor");
  v507 = v816[3];
  v508 = v816[4];
  __swift_project_boxed_opaque_existential_1(v816, v507);
  (*(void (**)(uint64_t, uint64_t))(v508 + 16))(v507, v508);
  v509 = objc_msgSend(v502, "constraintEqualToAnchor:constant:", v506);

  v510 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTopMarginConstraint;
  v511 = *(void **)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTopMarginConstraint];
  *(_QWORD *)&v439[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTopMarginConstraint] = v509;

  v512 = objc_msgSend(objc_allocWithZone(v815), "init");
  v513 = objc_msgSend(v439, "view");
  if (!v513)
  {
LABEL_426:
    __break(1u);
    goto LABEL_427;
  }
  v514 = v513;
  objc_msgSend(v513, "addLayoutGuide:", v512);

  v515 = swift_allocObject(v817, 528, 7);
  v817 = sub_B1ACC(v515, 62);
  v517 = v516;
  v518 = (void (**)(_QWORD, _QWORD))v512;
  v519 = objc_msgSend(v512, "centerYAnchor");
  v520 = *(void **)(v1 + v831);
  if (!v520)
  {
LABEL_427:
    __break(1u);
    goto LABEL_428;
  }
  v521 = objc_msgSend(v520, "lastBaselineAnchor");
  v522 = objc_msgSend(v519, "constraintEqualToAnchor:", v521);

  *v517 = v522;
  v823 = v518;
  v523 = objc_msgSend(v518, "topAnchor");
  v524 = objc_msgSend(*(id *)(v1 + v837), "bottomAnchor");
  v525 = objc_msgSend(v523, "constraintEqualToAnchor:constant:", v524, 66.0);

  v517[1] = v525;
  v526 = *(void **)&v439[v821];
  if (!v526)
  {
LABEL_428:
    __break(1u);
    goto LABEL_429;
  }
  v517[2] = v526;
  v527 = *(void **)&v439[v500];
  if (!v527)
  {
LABEL_429:
    __break(1u);
    goto LABEL_430;
  }
  v517[3] = v527;
  v528 = *(void **)&v439[v510];
  if (!v528)
  {
LABEL_430:
    __break(1u);
    goto LABEL_431;
  }
  v517[4] = v528;
  v529 = v820;
  v530 = *(void **)(v1 + v820);
  if (!v530)
  {
LABEL_431:
    __break(1u);
    goto LABEL_432;
  }
  v531 = v526;
  v532 = v527;
  v533 = v528;
  v534 = objc_msgSend(v530, "topAnchor");
  v535 = objc_msgSend(v439, "view");
  if (!v535)
  {
LABEL_432:
    __break(1u);
    goto LABEL_433;
  }
  v536 = v535;
  v537 = objc_msgSend(v535, "safeAreaLayoutGuide");

  v538 = objc_msgSend(v537, "topAnchor");
  v539 = objc_msgSend(v534, "constraintEqualToAnchor:constant:", v538, _UISheetGrabberTopSpacing);

  v517[5] = v539;
  v540 = *(void **)(v1 + v529);
  if (!v540)
  {
LABEL_433:
    __break(1u);
    goto LABEL_434;
  }
  v541 = objc_msgSend(v540, "centerXAnchor");
  v542 = objc_msgSend(v439, "view");
  if (!v542)
  {
LABEL_434:
    __break(1u);
    goto LABEL_435;
  }
  v543 = v542;
  v544 = objc_msgSend(v542, "centerXAnchor");

  v545 = objc_msgSend(v541, "constraintEqualToAnchor:", v544);
  v517[6] = v545;
  v546 = *(void **)&v439[v822];
  if (!v546)
  {
LABEL_435:
    __break(1u);
    goto LABEL_436;
  }
  v517[7] = v546;
  v547 = v839;
  v548 = *(void **)(v1 + v839);
  if (!v548)
  {
LABEL_436:
    __break(1u);
    goto LABEL_437;
  }
  v549 = v546;
  v550 = objc_msgSend(v548, "widthAnchor");
  v551 = objc_msgSend(*(id *)(v1 + v837), "widthAnchor");
  v552 = objc_msgSend(v550, "constraintLessThanOrEqualToAnchor:", v551);

  LODWORD(v553) = 1144750080;
  v554 = objc_msgSend(v552, "withPriority:", v553);

  v517[8] = v554;
  v555 = *(void **)(v1 + v547);
  if (!v555)
  {
LABEL_437:
    __break(1u);
    goto LABEL_438;
  }
  v556 = objc_msgSend(v555, "widthAnchor");
  v557 = objc_msgSend(v439, "view");
  if (!v557)
  {
LABEL_438:
    __break(1u);
    goto LABEL_439;
  }
  v558 = v557;
  v559 = objc_msgSend(v557, "layoutMarginsGuide");

  v560 = objc_msgSend(v559, "widthAnchor");
  v561 = objc_msgSend(v556, "constraintEqualToAnchor:", v560);

  v517[9] = v561;
  v562 = *(void **)(v1 + v839);
  if (!v562)
  {
LABEL_439:
    __break(1u);
    goto LABEL_440;
  }
  v563 = objc_msgSend(v562, "centerXAnchor");
  v564 = objc_msgSend(v439, "view");
  if (!v564)
  {
LABEL_440:
    __break(1u);
    goto LABEL_441;
  }
  v565 = v564;
  v566 = objc_msgSend(v564, "centerXAnchor");

  v567 = objc_msgSend(v563, "constraintEqualToAnchor:", v566);
  v517[10] = v567;
  v568 = *(void **)(v1 + v827);
  if (!v568)
  {
LABEL_441:
    __break(1u);
    goto LABEL_442;
  }
  v569 = objc_msgSend(v568, "lastBaselineAnchor");
  v570 = *(void **)(v1 + v841);
  if (!v570)
  {
LABEL_442:
    __break(1u);
    goto LABEL_443;
  }
  v571 = objc_msgSend(v570, "firstBaselineAnchor");
  v572 = objc_msgSend(v569, "constraintEqualToAnchor:constant:", v571, -24.0);

  v517[11] = v572;
  v573 = *(void **)(v1 + v827);
  if (!v573)
  {
LABEL_443:
    __break(1u);
    goto LABEL_444;
  }
  v574 = objc_msgSend(v573, "leadingAnchor");
  v575 = v831;
  v576 = *(void **)(v1 + v831);
  if (!v576)
  {
LABEL_444:
    __break(1u);
    goto LABEL_445;
  }
  v577 = objc_msgSend(v576, "leadingAnchor");
  v578 = objc_msgSend(v574, "constraintEqualToAnchor:", v577);

  v517[12] = v578;
  v579 = *(void **)(v1 + v575);
  if (!v579)
  {
LABEL_445:
    __break(1u);
    goto LABEL_446;
  }
  v580 = objc_msgSend(v579, "topAnchor");
  v581 = *(void **)(v1 + v828);
  if (!v581)
  {
LABEL_446:
    __break(1u);
    goto LABEL_447;
  }
  v582 = objc_msgSend(v581, "topAnchor");
  v583 = objc_msgSend(v580, "constraintEqualToAnchor:", v582);

  v517[13] = v583;
  v584 = *(void **)(v1 + v831);
  if (!v584)
  {
LABEL_447:
    __break(1u);
    goto LABEL_448;
  }
  v585 = objc_msgSend(v584, "leadingAnchor");
  v586 = objc_msgSend(v439, "view");
  if (!v586)
  {
LABEL_448:
    __break(1u);
    goto LABEL_449;
  }
  v587 = v586;
  v588 = objc_msgSend(v586, "layoutMarginsGuide");

  v589 = objc_msgSend(v588, "leadingAnchor");
  v590 = objc_msgSend(v585, "constraintGreaterThanOrEqualToAnchor:", v589);

  v517[14] = v590;
  v591 = *(void **)(v1 + v832);
  if (!v591)
  {
LABEL_449:
    __break(1u);
    goto LABEL_450;
  }
  v592 = objc_msgSend(v591, "topAnchor");
  v593 = *(void **)(v1 + v833);
  if (!v593)
  {
LABEL_450:
    __break(1u);
    goto LABEL_451;
  }
  v594 = objc_msgSend(v593, "topAnchor");
  v595 = objc_msgSend(v592, "constraintEqualToAnchor:", v594);

  v517[15] = v595;
  v596 = *(void **)(v1 + v832);
  if (!v596)
  {
LABEL_451:
    __break(1u);
    goto LABEL_452;
  }
  v597 = objc_msgSend(v596, "leadingAnchor");
  v598 = objc_msgSend(v439, "view");
  if (!v598)
  {
LABEL_452:
    __break(1u);
    goto LABEL_453;
  }
  v599 = v598;
  v600 = objc_msgSend(v598, "layoutMarginsGuide");

  v601 = objc_msgSend(v600, "leadingAnchor");
  v602 = objc_msgSend(v597, "constraintGreaterThanOrEqualToAnchor:", v601);

  v517[16] = v602;
  v603 = *(void **)(v1 + v841);
  if (!v603)
  {
LABEL_453:
    __break(1u);
    goto LABEL_454;
  }
  v604 = objc_msgSend(v603, "leadingAnchor");
  v605 = objc_msgSend(v439, "view");
  v606 = v819;
  if (!v605)
  {
LABEL_454:
    __break(1u);
    goto LABEL_455;
  }
  v607 = v605;
  v608 = objc_msgSend(v605, "leadingAnchor");

  v609 = objc_msgSend(v604, "constraintEqualToAnchor:", v608);
  v517[17] = v609;
  v610 = *(void **)(v1 + v841);
  if (!v610)
  {
LABEL_455:
    __break(1u);
    goto LABEL_456;
  }
  v611 = objc_msgSend(v610, "trailingAnchor");
  v612 = *(void **)(v840 + v836);
  if (!v612)
  {
LABEL_456:
    __break(1u);
    goto LABEL_457;
  }
  v613 = objc_msgSend(v612, "leadingAnchor");
  v614 = objc_msgSend(v611, "constraintEqualToAnchor:constant:", v613, -8.0);

  v517[18] = v614;
  v615 = *(void **)(v1 + v841);
  if (!v615)
  {
LABEL_457:
    __break(1u);
    goto LABEL_458;
  }
  v616 = objc_msgSend(v615, "lastBaselineAnchor");
  v617 = objc_msgSend(v606, "topAnchor");
  v618 = objc_msgSend(v616, "constraintLessThanOrEqualToAnchor:", v617);

  v517[19] = v618;
  v619 = objc_msgSend(v606, "leadingAnchor");
  v620 = objc_msgSend(v439, "view");
  if (!v620)
  {
LABEL_458:
    __break(1u);
    goto LABEL_459;
  }
  v621 = v620;
  v622 = objc_msgSend(v620, "leadingAnchor");

  v623 = objc_msgSend(v619, "constraintEqualToAnchor:", v622);
  v517[20] = v623;
  v624 = objc_msgSend(v606, "trailingAnchor");
  v625 = objc_msgSend(v439, "view");
  if (!v625)
  {
LABEL_459:
    __break(1u);
    goto LABEL_460;
  }
  v626 = v625;
  v627 = objc_msgSend(v625, "trailingAnchor");

  v628 = objc_msgSend(v624, "constraintEqualToAnchor:", v627);
  v517[21] = v628;
  v629 = objc_msgSend(v606, "bottomAnchor");
  v630 = objc_msgSend(v439, "view");
  if (!v630)
  {
LABEL_460:
    __break(1u);
    goto LABEL_461;
  }
  v631 = v630;
  v632 = objc_msgSend(v630, "bottomAnchor");

  v633 = objc_msgSend(v629, "constraintEqualToAnchor:", v632);
  v517[22] = v633;
  v634 = v818;
  v635 = objc_msgSend(v818, "topAnchor");
  v636 = *(void **)(v1 + v841);
  v637 = v839;
  if (!v636)
  {
LABEL_461:
    __break(1u);
    goto LABEL_462;
  }
  v638 = objc_msgSend(v636, "lastBaselineAnchor");
  v639 = objc_msgSend(v635, "constraintEqualToAnchor:constant:", v638, 20.0);

  v517[23] = v639;
  v640 = objc_msgSend(v634, "leadingAnchor");
  v641 = *(void **)(v1 + v637);
  if (!v641)
  {
LABEL_462:
    __break(1u);
    goto LABEL_463;
  }
  v642 = objc_msgSend(v641, "leadingAnchor");
  v643 = objc_msgSend(v640, "constraintEqualToAnchor:", v642);

  v517[24] = v643;
  v644 = objc_msgSend(v634, "trailingAnchor");
  v645 = *(void **)(v1 + v637);
  if (!v645)
  {
LABEL_463:
    __break(1u);
    goto LABEL_464;
  }
  v841 = (uint64_t)v439;
  v646 = objc_msgSend(v645, "trailingAnchor");
  v647 = objc_msgSend(v644, "constraintEqualToAnchor:", v646);

  v517[25] = v647;
  v648 = v840;
  v649 = v836;
  v650 = *(void **)(v840 + v836);
  if (!v650)
  {
LABEL_464:
    __break(1u);
    goto LABEL_465;
  }
  v651 = objc_msgSend(v650, "widthAnchor");
  v652 = objc_msgSend(v651, "constraintEqualToConstant:", 28.0);

  v517[26] = v652;
  v653 = *(void **)(v648 + v649);
  if (!v653)
  {
LABEL_465:
    __break(1u);
    goto LABEL_466;
  }
  v654 = objc_msgSend(v653, "heightAnchor");
  v655 = objc_msgSend(v654, "constraintEqualToConstant:", 28.0);

  v517[27] = v655;
  v656 = *(void **)(v648 + v649);
  if (!v656)
  {
LABEL_466:
    __break(1u);
    goto LABEL_467;
  }
  v657 = objc_msgSend(v656, "trailingAnchor");
  v658 = *(void **)(v1 + v637);
  if (!v658)
  {
LABEL_467:
    __break(1u);
    goto LABEL_468;
  }
  v659 = objc_msgSend(v658, "trailingAnchor");
  v660 = objc_msgSend(v657, "constraintEqualToAnchor:", v659);

  v517[28] = v660;
  v661 = *(void **)(v840 + v836);
  if (!v661)
  {
LABEL_468:
    __break(1u);
    goto LABEL_469;
  }
  v662 = objc_msgSend(v661, "centerYAnchor");
  v663 = objc_msgSend(v823, "centerYAnchor");
  v664 = objc_msgSend(v662, "constraintEqualToAnchor:", v663);

  v517[29] = v664;
  v665 = (char *)v841;
  v666 = *(void **)(v841 + v812);
  if (!v666)
  {
LABEL_469:
    __break(1u);
    goto LABEL_470;
  }
  v517[30] = v666;
  v667 = *(void **)&v665[v810];
  v668 = v838;
  if (!v667)
  {
LABEL_470:
    __break(1u);
    goto LABEL_471;
  }
  v517[31] = v667;
  v669 = *(void **)&v665[v811];
  if (!v669)
  {
LABEL_471:
    __break(1u);
    goto LABEL_472;
  }
  v517[32] = v669;
  v670 = *(void **)(v1 + v668);
  if (!v670)
  {
LABEL_472:
    __break(1u);
    goto LABEL_473;
  }
  v671 = v666;
  v672 = v667;
  v673 = v669;
  v674 = objc_msgSend(v670, "heightAnchor");
  v675 = *(void **)(v1 + v668);
  if (!v675)
  {
LABEL_473:
    __break(1u);
    goto LABEL_474;
  }
  v676 = objc_msgSend(v675, "widthAnchor");
  v677 = objc_msgSend(v674, "constraintEqualToAnchor:", v676);

  v517[33] = v677;
  v678 = v826;
  v679 = *(void **)(v1 + v826);
  if (!v679)
  {
LABEL_474:
    __break(1u);
    goto LABEL_475;
  }
  v680 = objc_msgSend(v679, "heightAnchor");
  v681 = *(void **)(v1 + v678);
  if (!v681)
  {
LABEL_475:
    __break(1u);
    goto LABEL_476;
  }
  v682 = objc_msgSend(v681, "widthAnchor");
  v683 = objc_msgSend(v680, "constraintEqualToAnchor:", v682);

  v517[34] = v683;
  v684 = v824;
  v685 = *(void **)(v1 + v824);
  if (!v685)
  {
LABEL_476:
    __break(1u);
    goto LABEL_477;
  }
  v686 = objc_msgSend(v685, "heightAnchor");
  v687 = *(void **)(v1 + v684);
  if (!v687)
  {
LABEL_477:
    __break(1u);
    goto LABEL_478;
  }
  v688 = objc_msgSend(v687, "widthAnchor");
  v689 = objc_msgSend(v686, "constraintEqualToAnchor:", v688);

  v517[35] = v689;
  v690 = *(void **)(v1 + v835);
  v691 = v839;
  if (!v690)
  {
LABEL_478:
    __break(1u);
    goto LABEL_479;
  }
  v692 = objc_msgSend(v690, "topAnchor");
  v693 = *(_QWORD *)(v1 + v691);
  if (!v693)
  {
LABEL_479:
    __break(1u);
    goto LABEL_480;
  }
  v694 = v692;
  v695 = objc_msgSend(*(id *)(v693 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide), "bottomAnchor");
  v696 = objc_msgSend(v694, "constraintEqualToAnchor:", v695);

  v517[36] = v696;
  v697 = *(void **)(v1 + v835);
  if (!v697)
  {
LABEL_480:
    __break(1u);
    goto LABEL_481;
  }
  v698 = objc_msgSend(v697, "bottomAnchor");
  v699 = *(void **)&v830[v841];
  if (!v699)
  {
LABEL_481:
    __break(1u);
    goto LABEL_482;
  }
  v700 = v698;
  v701 = v699;
  v702 = objc_msgSend(v701, "trackLayoutGuide");

  v703 = objc_msgSend(v702, "topAnchor");
  v704 = objc_msgSend(v700, "constraintEqualToAnchor:", v703);

  v517[37] = v704;
  v705 = *(void **)(v1 + v835);
  if (!v705)
  {
LABEL_482:
    __break(1u);
    goto LABEL_483;
  }
  v706 = objc_msgSend(v705, "centerXAnchor");
  v707 = (char *)v841;
  v708 = objc_msgSend((id)v841, "view");
  if (!v708)
  {
LABEL_483:
    __break(1u);
    goto LABEL_484;
  }
  v709 = v708;
  v710 = objc_msgSend(v708, "centerXAnchor");

  v711 = objc_msgSend(v706, "constraintEqualToAnchor:", v710);
  v517[38] = v711;
  v712 = *(void **)&v707[v808];
  if (!v712)
  {
LABEL_484:
    __break(1u);
    goto LABEL_485;
  }
  v713 = v707;
  v517[39] = v712;
  v714 = *(void **)&v707[v809];
  if (!v714)
  {
LABEL_485:
    __break(1u);
    goto LABEL_486;
  }
  v517[40] = v714;
  v715 = *(void **)&v830[(_QWORD)v713];
  if (!v715)
  {
LABEL_486:
    __break(1u);
    goto LABEL_487;
  }
  v716 = v712;
  v717 = v714;
  v718 = objc_msgSend(v715, "leadingAnchor");
  v719 = *(void **)(v1 + v691);
  if (!v719)
  {
LABEL_487:
    __break(1u);
    goto LABEL_488;
  }
  v720 = objc_msgSend(v719, "leadingAnchor");
  v721 = objc_msgSend(v718, "constraintEqualToAnchor:", v720);

  v517[41] = v721;
  v722 = *(void **)&v830[v841];
  v723 = v825;
  if (!v722)
  {
LABEL_488:
    __break(1u);
    goto LABEL_489;
  }
  v724 = objc_msgSend(v722, "trailingAnchor");
  v725 = *(void **)(v1 + v691);
  if (!v725)
  {
LABEL_489:
    __break(1u);
    goto LABEL_490;
  }
  v726 = objc_msgSend(v725, "trailingAnchor");
  v727 = objc_msgSend(v724, "constraintEqualToAnchor:", v726);

  v517[42] = v727;
  v728 = *(void **)&v842[v1];
  if (!v728)
  {
LABEL_490:
    __break(1u);
    goto LABEL_491;
  }
  v729 = objc_msgSend(v728, "leadingAnchor");
  v730 = *(void **)(v1 + v691);
  if (!v730)
  {
LABEL_491:
    __break(1u);
    goto LABEL_492;
  }
  v731 = objc_msgSend(v730, "leadingAnchor");
  v732 = objc_msgSend(v729, "constraintEqualToAnchor:", v731);

  v517[43] = v732;
  v733 = *(void **)&v842[v1];
  if (!v733)
  {
LABEL_492:
    __break(1u);
    goto LABEL_493;
  }
  v734 = objc_msgSend(v733, "trailingAnchor");
  v735 = *(void **)(v1 + v691);
  if (!v735)
  {
LABEL_493:
    __break(1u);
    goto LABEL_494;
  }
  v736 = objc_msgSend(v735, "trailingAnchor");
  v737 = objc_msgSend(v734, "constraintEqualToAnchor:", v736);

  v517[44] = v737;
  v738 = *(void **)&v842[v1];
  if (!v738)
  {
LABEL_494:
    __break(1u);
    goto LABEL_495;
  }
  v739 = objc_msgSend(v738, "heightAnchor");
  v740 = objc_msgSend(v739, "constraintEqualToConstant:", 28.0);

  v517[45] = v740;
  v741 = *(void **)(v841 + v807);
  if (!v741)
  {
LABEL_495:
    __break(1u);
    goto LABEL_496;
  }
  v517[46] = v741;
  v742 = *(void **)(v1 + v829);
  if (!v742)
  {
LABEL_496:
    __break(1u);
    goto LABEL_497;
  }
  v743 = v741;
  v744 = objc_msgSend(v742, "centerYAnchor");
  v745 = *(void **)&v842[v1];
  if (!v745)
  {
LABEL_497:
    __break(1u);
    goto LABEL_498;
  }
  v746 = objc_msgSend(v745, "centerYAnchor");
  v747 = objc_msgSend(v744, "constraintEqualToAnchor:", v746);

  v517[47] = v747;
  v748 = *(void **)(v1 + v829);
  if (!v748)
  {
LABEL_498:
    __break(1u);
    goto LABEL_499;
  }
  v749 = objc_msgSend(v748, "leadingAnchor");
  v750 = *(void **)&v842[v1];
  if (!v750)
  {
LABEL_499:
    __break(1u);
    goto LABEL_500;
  }
  v751 = objc_msgSend(v750, "leadingAnchor");
  v752 = objc_msgSend(v749, "constraintEqualToAnchor:", v751);

  v517[48] = v752;
  v753 = *(void **)&v834[v840];
  if (!v753)
  {
LABEL_500:
    __break(1u);
    goto LABEL_501;
  }
  v754 = objc_msgSend(v753, "trailingAnchor");
  v755 = *(void **)&v842[v1];
  if (!v755)
  {
LABEL_501:
    __break(1u);
    goto LABEL_502;
  }
  v756 = objc_msgSend(v755, "trailingAnchor");
  v757 = objc_msgSend(v754, "constraintEqualToAnchor:", v756);

  v517[49] = v757;
  v758 = *(void **)&v834[v840];
  if (!v758)
  {
LABEL_502:
    __break(1u);
    goto LABEL_503;
  }
  v759 = objc_msgSend(v758, "centerYAnchor");
  v760 = *(void **)&v842[v1];
  if (!v760)
  {
LABEL_503:
    __break(1u);
    goto LABEL_504;
  }
  v761 = objc_msgSend(v760, "centerYAnchor");
  v762 = objc_msgSend(v759, "constraintEqualToAnchor:", v761);

  v517[50] = v762;
  if (!*v723)
  {
LABEL_504:
    __break(1u);
    goto LABEL_505;
  }
  v763 = objc_msgSend(*v723, "leadingAnchor");
  v764 = *(void **)(v1 + v829);
  if (!v764)
  {
LABEL_505:
    __break(1u);
    goto LABEL_506;
  }
  v765 = objc_msgSend(v764, "trailingAnchor");
  v766 = objc_msgSend(v763, "constraintGreaterThanOrEqualToAnchor:constant:", v765, 4.0);

  v517[51] = v766;
  if (!*v723)
  {
LABEL_506:
    __break(1u);
    goto LABEL_507;
  }
  v767 = objc_msgSend(*v723, "trailingAnchor");
  v768 = *(void **)&v834[v840];
  if (!v768)
  {
LABEL_507:
    __break(1u);
    goto LABEL_508;
  }
  v769 = objc_msgSend(v768, "leadingAnchor");
  v770 = objc_msgSend(v767, "constraintLessThanOrEqualToAnchor:constant:", v769, -4.0);

  v517[52] = v770;
  if (!*v723)
  {
LABEL_508:
    __break(1u);
    goto LABEL_509;
  }
  v771 = objc_msgSend(*v723, "centerYAnchor");
  v772 = *(void **)&v842[v1];
  if (!v772)
  {
LABEL_509:
    __break(1u);
    goto LABEL_510;
  }
  v773 = objc_msgSend(v772, "centerYAnchor");
  v774 = objc_msgSend(v771, "constraintEqualToAnchor:", v773);

  v517[53] = v774;
  if (!*v723)
  {
LABEL_510:
    __break(1u);
    goto LABEL_511;
  }
  v775 = objc_msgSend(*v723, "centerXAnchor");
  v776 = *(void **)&v842[v1];
  if (v776)
  {
    v777 = objc_msgSend(v776, "centerXAnchor");
    v778 = objc_msgSend(v775, "constraintEqualToAnchor:", v777);

    v517[54] = v778;
    v779 = v814;
    v780 = objc_msgSend(*(id *)(v1 + v814), "topAnchor");
    v781 = v837;
    v782 = objc_msgSend(*(id *)(v1 + v837), "topAnchor");
    v783 = objc_msgSend(v780, "constraintGreaterThanOrEqualToAnchor:", v782);

    v517[55] = v783;
    v784 = objc_msgSend(*(id *)(v1 + v779), "bottomAnchor");
    v785 = objc_msgSend(*(id *)(v1 + v781), "bottomAnchor");
    v786 = objc_msgSend(v784, "constraintLessThanOrEqualToAnchor:", v785);

    v517[56] = v786;
    v787 = objc_msgSend(*(id *)(v1 + v779), "widthAnchor");
    v788 = objc_msgSend(*(id *)(v1 + v781), "widthAnchor");
    v789 = objc_msgSend(v787, "constraintLessThanOrEqualToAnchor:", v788);

    v517[57] = v789;
    v790 = objc_msgSend(*(id *)(v1 + v779), "heightAnchor");
    v791 = objc_msgSend(*(id *)(v1 + v779), "widthAnchor");
    v792 = objc_msgSend(v790, "constraintEqualToAnchor:", v791);

    v517[58] = v792;
    v793 = objc_msgSend(*(id *)(v1 + v779), "heightAnchor");
    v794 = objc_msgSend(v793, "constraintEqualToConstant:", 449.0);

    LODWORD(v795) = 1132068864;
    v796 = objc_msgSend(v794, "withPriority:", v795);

    v517[59] = v796;
    v797 = objc_msgSend(*(id *)(v1 + v779), "centerXAnchor");
    v798 = objc_msgSend(*(id *)(v1 + v781), "centerXAnchor");
    v799 = objc_msgSend(v797, "constraintEqualToAnchor:", v798);

    v517[60] = v799;
    v800 = objc_msgSend(*(id *)(v1 + v779), "centerYAnchor");
    v801 = objc_msgSend(*(id *)(v1 + v781), "centerYAnchor");
    v802 = objc_msgSend(v800, "constraintEqualToAnchor:", v801);

    v517[61] = v802;
    v803 = v817;
    sub_AD9B0(v817);
    v804 = v803;
    v805 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    v806 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v805, "activateConstraints:", v806, swift_bridgeObjectRelease(v804).n128_f64[0]);

    *(_BYTE *)(v841 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) = 0;
    sub_119BC4();
    sub_1204B0();

    return;
  }
LABEL_511:
  __break(1u);
}

void sub_11ED24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char v41[24];
  char v42[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD978);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for PresentationSource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v17 = (char *)Strong;
    v18 = sub_11F050();
    if (v18)
    {
      v35 = v18;
      v19 = *(void **)&v17[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton];
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v20, "frame");
        *v11 = v20;
        v11[1] = v21;
        v11[2] = v22;
        v11[3] = v23;
        v11[4] = v24;
        v25 = enum case for PresentationSource.Position.view(_:);
        v26 = type metadata accessor for PresentationSource.Position(0);
        v27 = *(_QWORD *)(v26 - 8);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v27 + 104))(v11, v25, v26);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v26);
        v28 = v17;
        PresentationSource.init(viewController:position:)(v28, v11);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
        sub_982C((uint64_t)v8, (uint64_t)v5, &qword_1FD4B0);
        v29 = v35;
        v30 = v35 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
        swift_beginAccess(v35 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v39, 33, 0);
        sub_73D08((uint64_t)v5, v30);
        swift_endAccess(v39);
        if (qword_1F96B8 != -1)
          swift_once(&qword_1F96B8, sub_15D030);
        swift_beginAccess(&static NowPlayingDataProvider.shared, v41, 0, 0);
        sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v39, (uint64_t *)&unk_1FC7F0);
        if (v39[0])
        {
          sub_DF78((uint64_t)&v40, (uint64_t)v36);
          sub_4AE24((uint64_t)v39);
          v31 = v37;
          v32 = v38;
          __swift_project_boxed_opaque_existential_1(v36, v37);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 64))(1, v29, v31, v32);

          v33 = swift_release(v29);
          (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v33);
          __swift_destroy_boxed_opaque_existential_0(v36);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {

    }
  }
}

uint64_t sub_11F050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for InteractionContext.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse);
  if (!v16)
    return 0;
  v17 = objc_msgSend(v16, "tracklist", v13);
  v18 = sub_B61B8();

  if (!v18)
    return 0;
  v19 = objc_msgSend(v18, "metadataObject");

  if (!v19)
    return 0;
  v31 = v2;
  v20 = objc_msgSend(v19, "flattenedGenericObject");
  v21 = objc_msgSend(v20, "anyObject");

  if (!v21)
    return 0;
  v22 = objc_opt_self(MPModelPodcastEpisode);
  v23 = swift_dynamicCastObjCClass(v21, v22);
  if (!v23)
  {

    return 0;
  }
  v24 = (void *)v23;
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_objectGraph);
  v26 = type metadata accessor for PresentationSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 1, 1, v26);
  swift_storeEnumTagMultiPayload(v8, v6, 13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for InteractionContext.Origin.none(_:), v31);
  swift_retain();
  InteractionContext.init(page:view:origin:)(v8, 7, v5);
  v27 = type metadata accessor for NowPlayingContextActionConfiguration(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = sub_AC0BC(v25, 0, v24, (uint64_t)v15, 0, 0, (uint64_t)v11);

  return v28;
}

void sub_11F2FC(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *);
  uint64_t v17;
  _BYTE v18[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = *(void **)(Strong + *a3);
    if (v10)
    {
      if ((objc_msgSend(v10, "isHolding") & 1) == 0
        && (v11 = *(_QWORD *)&v9[*a4 + 16]) != 0
        && *(_QWORD *)(v11 + 16)
        && (v12 = sub_13A0FC(0), (v13 & 1) != 0))
      {
        v14 = *(_QWORD *)(v11 + 56) + 16 * v12;
        v16 = *(void (**)(uint64_t *))v14;
        v15 = *(_QWORD *)(v14 + 8);
        v17 = a1;
        swift_retain();
        v16(&v17);

        swift_release(v15);
      }
      else
      {

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_11F3D0(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned __int8 a4)
{
  uint64_t v7;
  char *Strong;
  void *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, __n128);
  __n128 v17;
  uint64_t v18;
  char v19[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    v10 = &Strong[*a3];
    v11 = *((_QWORD *)v10 + 2);
    if (v11)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v10 + 2));

      if (*(_QWORD *)(v11 + 16) && (v12 = sub_13A0FC(a4), (v13 & 1) != 0))
      {
        v14 = *(_QWORD *)(v11 + 56) + 16 * v12;
        v16 = *(void (**)(uint64_t *, __n128))v14;
        v15 = *(_QWORD *)(v14 + 8);
        swift_retain();
        v17 = swift_bridgeObjectRelease(v11);
        v18 = a1;
        v16(&v18, v17);
        swift_release(v15);
      }
      else
      {
        swift_bridgeObjectRelease(v11);
      }
    }
    else
    {

    }
  }
}

void sub_11F4A4(void *a1, uint64_t a2)
{
  char *Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = *(void **)&Strong[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse];
  v16 = v4;

  if (v4)
  {
    v5 = type metadata accessor for PlayerTimeControl();
    v6 = swift_dynamicCastClass(a1, v5);
    if (v6)
    {
      v7 = v6;
      v8 = a1;
      v9 = objc_msgSend(v16, "tracklist");
      v10 = sub_B61B8();

      v11 = objc_msgSend(v10, "seekCommand");
      if (v11)
      {
        v12 = objc_msgSend(v11, "changePositionToElapsedInterval:", *(double *)(v7 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_selectedElapsedTime));
        if (v12)
        {
          v13 = v12;
          v14 = (void *)objc_opt_self(MPCPlayerChangeRequest);
          v15 = v13;
          objc_msgSend(v14, "performRequest:completion:", v15, 0);

          swift_unknownObjectRelease(v11);
          goto LABEL_9;
        }
        swift_unknownObjectRelease(v11);
      }

    }
LABEL_9:

  }
}

void sub_11F604(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char *Strong;
  char *v8;
  char *v9;
  void *v10;
  _BYTE *v11;
  id v12;

  v6 = a4 + 16;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a4 + 16);
  v8 = &Strong[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlScrubSpeed];
  *(_QWORD *)v8 = a2;
  v8[8] = a3 & 1;
  sub_118C14();

  v9 = (char *)swift_unknownObjectUnownedLoadStrong(v6);
  v10 = *(void **)&v9[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
  v11 = v10;

  if (v10)
  {
    v12 = (id)swift_unknownObjectUnownedLoadStrong(v6);
    sub_117D08(v11);

  }
}

uint64_t sub_11F6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.Size(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.plain()(v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.Size.small(_:), v4);
  v9 = UIButton.Configuration.buttonSize.setter(v8);
  v10 = static Glyph.NowPlaying.sleep.getter(v9);
  v11 = Glyph.image.getter(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return UIButton.Configuration.image.setter(v11);
}

void sub_11F7D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_11F820();

  }
}

void sub_11F820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[14];
  _BYTE v13[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v13, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v12, (uint64_t *)&unk_1FC7F0);
  v0 = v12[0];
  if (v12[0])
  {
    v1 = v12[1];
    swift_unknownObjectRetain(v12[0]);
    sub_4AE24((uint64_t)v12);
    ObjectType = swift_getObjectType(v0);
    v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
    swift_unknownObjectRelease(v0);
    v4 = objc_msgSend(v3, "metadataPlayerPath");

    v5 = objc_msgSend(v4, "route");
    if (v5)
    {
      v6 = objc_opt_self(MPAVEndpointRoute);
      v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
      v8 = v5;
      if (v7 && (objc_msgSend(v7, "isDeviceRoute") & 1) == 0)
      {
        sub_123CD0(v7);
        v9 = v8;
      }
      else
      {
        v9 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
        v10 = objc_opt_self(MPAVEndpointRoute);
        v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
        if (v11)
          sub_123CD0(v11);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_11F9D0(void *a1)
{
  char *v1;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  return objc_msgSend((id)qword_210330, "colorWithAlphaComponent:", dbl_174550[v1 == (_BYTE *)&dword_0 + 2]);
}

id sub_11FA4C(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v8[4] = a1;
  v9 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_124D84;
  v8[3] = &block_descriptor_124;
  v5 = _Block_copy(v8);
  v6 = objc_msgSend(v4, "initWithDynamicProvider:", v5);
  _Block_release(v5);
  swift_release(v9);
  return v6;
}

UIMenu sub_11FAF4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  UIMenuElementSize v6;
  Swift::String v7;
  Swift::OpaquePointer v9;
  UIMenuElementSize aBlock[5];
  uint64_t v11;
  UIImage_optional v12;

  v1 = (void *)objc_opt_self(UIDeferredMenuElement);
  v2 = swift_allocObject(&unk_1D2620, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  aBlock[4] = (UIMenuElementSize)sub_1263BC;
  v11 = v2;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_926F8;
  aBlock[3] = (UIMenuElementSize)&block_descriptor_121;
  v3 = _Block_copy(aBlock);
  v4 = objc_msgSend(v1, "elementWithUncachedProvider:", v3, swift_release(v11).n128_f64[0]);
  _Block_release(v3);
  sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_16B2D0;
  *(_QWORD *)(v6 + 32) = v4;
  aBlock[0] = v6;
  specialized Array._endMutation()(v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v12.value.super.isa = 0;
  v12.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v7, (Swift::String_optional)0, v12, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v9);
}

uint64_t sub_11FC44(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *Strong;
  uint64_t v8;
  char v9;
  unsigned __int8 *v10;
  int v11;
  _QWORD v12[14];
  _BYTE v13[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v13, 0, 0);
  result = sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v12, (uint64_t *)&unk_1FC7F0);
  v3 = v12[0];
  if (v12[0])
  {
    v4 = a1 + 16;
    v5 = v12[1];
    swift_unknownObjectRetain(v12[0]);
    sub_4AE24((uint64_t)v12);
    ObjectType = swift_getObjectType(v3);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 304))(ObjectType, v5) & 1) != 0
      && ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(ObjectType, v5) & 1) != 0)
    {
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4);
      v8 = (*(double (**)(uint64_t, uint64_t))(v5 + 296))(ObjectType, v5);
      v9 = 0;
    }
    else
    {
      v10 = (unsigned __int8 *)swift_unknownObjectUnownedLoadStrong(v4);
      v11 = v10[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_isShowingSleepTimer];

      if (v11 != 1)
        return swift_unknownObjectRelease(v3);
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4);
      v8 = 0;
      v9 = 1;
    }
    sub_11FDA0(v8, v9);

    return swift_unknownObjectRelease(v3);
  }
  __break(1u);
  return result;
}

void sub_11FDA0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  __n128 v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration.Size(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF6D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 || *(double *)&a1 <= 0.0)
  {
    v26 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton);
    if (v26)
    {
      v23 = v26;
      static UIButton.Configuration.plain()(v23);
      (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for UIButton.Configuration.Size.small(_:), v10);
      v27 = UIButton.Configuration.buttonSize.setter(v13);
      v28 = static Glyph.NowPlaying.sleep.getter(v27);
      v29 = Glyph.image.getter(v28);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      UIButton.Configuration.image.setter(v29);
      v25 = 0;
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v17 = sub_120CA4();
    v18 = objc_msgSend(v17, "stringFromSeconds:", *(double *)&a1);

    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton);
    if (v22)
    {
      v23 = v22;
      sub_120D28(v19, v21);
      v24 = swift_bridgeObjectRelease(v21);
      v25 = 1;
LABEL_7:
      v30 = type metadata accessor for UIButton.Configuration(0, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v16, 0, 1, v30);
      UIButton.configuration.setter(v16);

      *(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_isShowingSleepTimer) = v25;
      return;
    }
  }
  __break(1u);
}

double sub_11FFE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  _BOOL8 v22;
  _BYTE *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _BYTE v51[32];
  _QWORD v52[3];
  id v53[2];
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char v66;
  char v67[32];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v67, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(_QWORD **)(Strong
                    + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController);
    v6 = v5[8];
    v8 = v5[9];
    v7 = v5[10];
    v9 = v5[11];
    v10 = v5[12];
    v11 = v5[13];
    v43 = v5[7];
    v44 = v5[6];
    v45 = v5[5];
    v52[0] = v45;
    v52[1] = v44;
    v52[2] = v43;
    v53[0] = *(id *)(Strong + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton);
    v12 = qword_1F9670;
    swift_bridgeObjectRetain_n(v43, 2);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v11);
    v13 = v53[0];
    if (v12 != -1)
      swift_once(&qword_1F9670, sub_1392BC);
    v53[1] = (id)qword_210420;
    v54 = 0;
    v55 = v6;
    v56 = v8;
    v57 = v7;
    v58 = *(id *)&v4[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton];
    v59 = 0;
    v60 = 3;
    v46 = v9;
    v61 = v9;
    v62 = v10;
    v63 = v11;
    v64 = *(id *)&v4[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton];
    v65 = 0x10000000000000;
    v66 = 0;
    v48 = v4;
    v49 = &v4[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics];
    swift_bridgeObjectRetain(v7);
    v47 = v11;
    swift_bridgeObjectRetain(v11);
    v14 = v58;
    v15 = v64;
    v16 = 0;
    v50 = v8;
    do
    {
      v23 = &v51[v16 * 8];
      v24 = v53[v16];
      if (v24)
      {
        v25 = v6;
        v26 = v7;
        v27 = *((_QWORD *)v23 + 6);
        if (v27)
        {
          v28 = *((_QWORD *)v23 + 4);
          v29 = *((_QWORD *)v23 + 5);
          v30 = v10;
          v31 = *((_QWORD *)v49 + 8);
          v32 = v24;
          swift_bridgeObjectRetain(v27);
          v33 = v31;
          v10 = v30;
          v34 = (void *)sub_138790(v33, 0, v28, v29);
          objc_msgSend(v32, "setImage:forState:", v34, 0);

          v35 = *(_QWORD *)(v27 + 16);
          swift_bridgeObjectRelease(v27);
          v22 = v35 != 0;
        }
        else
        {
          v17 = *((_QWORD *)v23 + 8);
          v18 = v23[72];
          v19 = *((_QWORD *)v49 + 8);
          v20 = v24;
          v21 = (void *)sub_138790(v19, 0, v17, v18);
          objc_msgSend(v20, "setImage:forState:", v21, 0);

          v22 = 0;
        }
        objc_msgSend(v24, "setEnabled:", v22);

        v7 = v26;
        v6 = v25;
        v8 = v50;
      }
      v16 += 6;
    }
    while (v16 != 18);
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203560);
    swift_arrayDestroy(v52, 3, v36);
    v37 = &v48[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration];
    v38 = *(_QWORD *)&v48[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration + 16];
    *(_QWORD *)v37 = v45;
    *((_QWORD *)v37 + 1) = v44;
    *((_QWORD *)v37 + 2) = v43;
    swift_bridgeObjectRelease(v38);
    v39 = &v48[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonConfiguration];
    v40 = *(_QWORD *)&v48[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonConfiguration
                        + 16];
    *(_QWORD *)v39 = v6;
    *((_QWORD *)v39 + 1) = v8;
    *((_QWORD *)v39 + 2) = v7;
    swift_bridgeObjectRelease(v40);
    v41 = &v48[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration];
    v42 = *(_QWORD *)&v48[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration + 16];
    *(_QWORD *)v41 = v46;
    *((_QWORD *)v41 + 1) = v10;
    *((_QWORD *)v41 + 2) = v47;

    *(_QWORD *)&result = swift_bridgeObjectRelease(v42).n128_u64[0];
  }
  return result;
}

id sub_120310()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

void sub_120334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if ((static Podcasts.isBlueMoonEnabled()(a1) & 1) != 0)
  {
    v4 = *(_QWORD *)(a3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
    if (v4)
    {
      v5 = *(void **)(v4 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput);
      if (v5)
        objc_msgSend(v5, "enterFullScreenWithCompletion:", 0);
    }
    return;
  }
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v15, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v13, (uint64_t *)&unk_1FC7F0);
  v6 = v13;
  if (!v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  v7 = v14;
  swift_unknownObjectRetain(v13);
  sub_4AE24((uint64_t)&v13);
  ObjectType = swift_getObjectType(v6);
  LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 240))(ObjectType, v7);
  swift_unknownObjectRelease(v6);
  if ((v7 & 1) == 0)
    return;
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v13, (uint64_t *)&unk_1FC7F0);
  v9 = v13;
  if (!v13)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v10 = v14;
  swift_unknownObjectRetain(v13);
  sub_4AE24((uint64_t)&v13);
  v11 = swift_getObjectType(v9);
  v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 248))(v11, v10);
  swift_unknownObjectRelease(v9);
  if (v12)
  {
    objc_msgSend(v12, "enterFullScreenWithCompletion:", 0);

  }
}

void sub_1204B0()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  double v15;
  NSString *v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[6];

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v2 = objc_msgSend(v0, "view");
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics + 24];
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics + 32];
    __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics], v4);
    (*(void (**)(_OWORD *__return_ptr, id, id, uint64_t, uint64_t))(v5 + 160))(v22, v2, v3, v4, v5);

    v6 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics];
    v7 = v22[3];
    *((_OWORD *)v6 + 2) = v22[2];
    *((_OWORD *)v6 + 3) = v7;
    v8 = v22[5];
    *((_OWORD *)v6 + 4) = v22[4];
    *((_OWORD *)v6 + 5) = v8;
    v9 = v22[1];
    *(_OWORD *)v6 = v22[0];
    *((_OWORD *)v6 + 1) = v9;
    sub_122324();
    v10 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton];
    if (v10)
    {
      v11 = (void *)objc_opt_self(UIApplication);
      v12 = v10;
      v13 = objc_msgSend(v11, "sharedApplication");
      v14 = objc_msgSend(v13, "preferredContentSizeCategory");

      LODWORD(v13) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v14);
      v15 = 13.0;
      if ((_DWORD)v13)
      {
        v16 = UIFontTextStyleBody;
        v15 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v16, 13.0);

      }
      v17 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", v15, UIFontWeightSemibold);
      objc_msgSend(v12, "setFont:", v17);

      v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController];
      v19 = *(void (**)(uint64_t))(v18 + 136);
      if (v19)
      {
        v20 = *(_QWORD *)(v18 + 144);
        v21 = swift_retain();
        v19(v21);
        sub_145A0((uint64_t)v19, v20);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_120724(char a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  void *v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  char *v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v11, "viewWillAppear:", a1 & 1);
  v3 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController])
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NPUIMediaControlsStandaloneViewController), "init");
    v5 = *(void **)&v1[v3];
    *(_QWORD *)&v1[v3] = v4;

    v6 = *(char **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton];
    if (v6)
    {
      v7 = *(void **)&v1[v3];
      v8 = *(void **)&v6[OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController];
      *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController] = v7;
      v9 = v7;
      v10 = v6;

      sub_9CC20();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1207F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  char *v4;
  void *v5;
  void *v6;
  char *v7;
  id v8;

  v1 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController))
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)NPUIMediaControlsStandaloneViewController), "init");
    v3 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;

    v4 = *(char **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton);
    if (v4)
    {
      v5 = *(void **)(v0 + v1);
      v6 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController];
      *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController] = v5;
      v8 = v5;
      v7 = v4;

      sub_9CC20();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1208F4(char a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2);
  v4 = objc_msgSendSuper2(&v10, "viewWillDisappear:", a1 & 1);
  v5 = EpisodeUpsellBannerDataProvider.metricsController.getter(v4);
  if (v5)
  {
    v6 = v5;
    MetricsController.observe(lifecycleEvent:)(2);
    swift_release(v6);
  }
  v7 = (void *)objc_opt_self(NSNotificationCenter);
  v8 = objc_msgSend(v7, "defaultCenter");
  objc_msgSend(v8, "removeObserver:name:object:", v2, MTApplicationDidBecomeActiveNotification, 0);

  v9 = objc_msgSend(v7, "defaultCenter");
  objc_msgSend(v9, "removeObserver:name:object:", v2, MTApplicationDidEnterBackgroundNotification, 0);

}

void sub_120A38(char a1)
{
  char *v1;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v13, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend((id)objc_opt_self(MPVolumeHUDController), "sharedInstance");
  objc_msgSend(v3, "setNeedsUpdate");

  sub_1207F4();
  v4 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v4, "setMarqueeEnabled:withOptions:", 1, 0);
  v5 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    return;
  }
  objc_msgSend(v5, "setMarqueeEnabled:withOptions:", 1, 0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController];
  if (v6)
    objc_msgSend(v6, "prepareRemoteViewController");
  v7 = (void *)objc_opt_self(NSNotificationCenter);
  v8 = objc_msgSend(v7, "defaultCenter");
  objc_msgSend(v8, "addObserver:selector:name:object:", v1, "appExitedWhileAppeared", MTApplicationDidEnterBackgroundNotification, 0);

  v9 = objc_msgSend(v7, "defaultCenter");
  objc_msgSend(v9, "addObserver:selector:name:object:", v1, "appEnteredWhileAppeared", MTApplicationDidBecomeActiveNotification, 0);

  v11 = EpisodeUpsellBannerDataProvider.metricsController.getter(v10);
  if (v11)
  {
    v12 = v11;
    MetricsController.observe(lifecycleEvent:)(1);
    swift_release(v12);
  }
}

void sub_120C38(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  v4 = EpisodeUpsellBannerDataProvider.metricsController.getter(v6);
  if (v4)
  {
    v5 = v4;
    MetricsController.observe(lifecycleEvent:)(a3);

    swift_release(v5);
  }
  else
  {

  }
}

id sub_120CA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___timeFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___timeFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___timeFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
    objc_msgSend(v4, "setStyle:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_120D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;

  v50 = a1;
  v51 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203570);
  __chkstk_darwin(v2);
  v54 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v4);
  v48 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributedString(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  __chkstk_darwin(v6);
  v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration.Size(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Glyph(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIBackgroundConfiguration(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v44 - v22;
  v24 = static UIButton.Configuration.filled()(v21);
  v25 = UIButton.Configuration.background.getter(v24);
  UIBackgroundConfiguration.cornerRadius.setter(v25, 6.0);
  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  v26 = qword_210330;
  v27 = (id)qword_210330;
  UIBackgroundConfiguration.backgroundColor.setter(v26);
  v47 = v17;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v23, v16);
  v28 = UIButton.Configuration.background.setter(v19);
  v29 = static Glyph.NowPlaying.sleep.getter(v28);
  v30 = Glyph.image.getter(v29);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v31 = UIButton.Configuration.image.setter(v30);
  UIButton.Configuration.imagePadding.setter(v31, 3.0);
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v10, enum case for UIButton.Configuration.Size.small(_:), v46);
  UIButton.Configuration.buttonSize.setter(v10);
  v32 = v51;
  v33 = swift_bridgeObjectRetain(v51);
  v34 = v48;
  AttributeContainer.init()(v33);
  v35 = v49;
  AttributedString.init(_:attributes:)(v50, v32, v34);
  KeyPath = swift_getKeyPath(&unk_1745E8);
  __chkstk_darwin(KeyPath);
  *(&v44 - 2) = v37;
  v38 = swift_getKeyPath(&unk_174618);
  v55 = objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 13.0, UIFontWeightBold);
  v39 = sub_B2648();
  AttributedString.subscript.setter(&v55, v38, v39);
  v41 = v52;
  v40 = v53;
  v42 = v54;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v54, v35, v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  UIButton.Configuration.attributedTitle.setter(v42);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v23, v16);
}

void sub_12126C()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v17, "viewWillLayoutSubviews");
  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contentViewSize];
  v2 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contentViewSize];
  v3 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contentViewSize + 8];
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, "bounds");
  v7 = v6;
  v9 = v8;

  if (v2 != v7 || v3 != v9)
  {
    sub_1204B0();
    v11 = objc_msgSend(v0, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "bounds");
      v14 = v13;
      v16 = v15;

      *(_QWORD *)v1 = v14;
      *((_QWORD *)v1 + 1) = v16;
      return;
    }
LABEL_10:
    __break(1u);
  }
}

id sub_121390()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id result;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Width;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  objc_super v25;
  CGRect v26;

  v25.receiver = v0;
  v25.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v25, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "presentingViewController");
  if (!v1 || (v2 = v1, v3 = objc_msgSend(v1, "view"), v2, !v3))
  {
    result = objc_msgSend(v0, "view");
    v3 = result;
    if (!result)
      goto LABEL_25;
  }
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v26.origin.x = v6;
  v26.origin.y = v8;
  v26.size.width = v10;
  v26.size.height = v12;
  Width = CGRectGetWidth(v26);
  v14 = SizeClass.init(width:)();
  v15 = SizeClass.margins(width:)(v14, Width);
  if (*(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics + 80] > v15)
    v16 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics + 80];
  else
    v16 = v15;
  if (v15 > *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics + 88])
    v17 = v15;
  else
    v17 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics + 88];
  result = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLeadingConstraint];
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(result, "setConstant:", v16);
  result = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTrailingConstraint];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(result, "setConstant:", -v16);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v18 = result;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v19 = result;
  objc_msgSend(result, "layoutMargins");
  v21 = v20;

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v22 = result;
  objc_msgSend(result, "layoutMargins");
  v24 = v23;

  objc_msgSend(v18, "setLayoutMargins:", v21, v17, v24, v17);
  result = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView];
  if (result)
  {
    objc_msgSend(result, "setFadeEdgeInsets:", 0.0, v17, 0.0, v17);
    result = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView];
    if (result)
      return objc_msgSend(result, "setFadeEdgeInsets:", 0.0, v17, 0.0, v17);
    goto LABEL_24;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_121630(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return;

    goto LABEL_7;
  }
  if (!v4
    || (sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr),
        v6 = a1,
        v7 = static NSObject.== infix(_:_:)(v6, v5),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    sub_1204B0();
  }
}

void sub_1218A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char **v4;
  char **isEscapingClosureAtFileLocation;
  char **v6;
  _QWORD *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  char **v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  id v57;
  void *v58;
  _BYTE *v59;
  uint64_t v60;
  _QWORD aBlock[5];
  char **v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v1 = v0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse;
  v3 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse];
  v4 = &selRef_boundingRectWithSize_options_attributes_context_;
  isEscapingClosureAtFileLocation = &selRef_boundingRectWithSize_options_attributes_context_;
  v6 = &selRef_boundingRectWithSize_options_attributes_context_;
  v7 = &unk_203000;
  if (v3
    && (v8 = objc_msgSend(v3, "tracklist"), v9 = sub_B61B8(), v8, v9))
  {
    objc_msgSend(v9, "duration");
    if (BYTE1(v66))
      v10 = 256;
    else
      v10 = 0;
    if (BYTE2(v66))
      v11 = 0x10000;
    else
      v11 = 0;
    v12 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl];
    if (!v12)
      goto LABEL_64;
    objc_msgSend(v12, "setEnabled:", 1);
    v13 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton];
    if (!v13)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v14 = v10 | v66 | v11;
    v6 = &selRef_boundingRectWithSize_options_attributes_context_;
    objc_msgSend(v13, "setHidden:", 0);

    v7 = &unk_203000;
    isEscapingClosureAtFileLocation = &selRef_boundingRectWithSize_options_attributes_context_;
    v4 = &selRef_boundingRectWithSize_options_attributes_context_;
    v16 = v64;
    v15 = v63;
    v17 = v65;
  }
  else
  {
    v18 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl];
    if (!v18)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    objc_msgSend(v18, "setEnabled:", 0);
    v19 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton];
    if (!v19)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    objc_msgSend(v19, "setHidden:", 1);
    v15 = 0uLL;
    v14 = 2;
    v16 = 0uLL;
    v17 = 0uLL;
  }
  v63 = v15;
  v64 = v16;
  v65 = v17;
  v66 = v14;
  v20 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl];
  if (!v20)
  {
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v21 = v20;
  sub_490E4((uint64_t)&v63);

  v22 = *(void **)&v1[v2];
  if (v22)
  {
    v23 = objc_msgSend(v22, v4[149]);
    v24 = sub_B61B8();

  }
  else
  {
    v24 = 0;
  }
  sub_121F20(v24);

  v25 = *(void **)&v1[v2];
  if (!v25)
    goto LABEL_25;
  v26 = objc_msgSend(v25, v4[149]);
  v27 = sub_B61B8();

  if (!v27)
    goto LABEL_26;
  v28 = objc_msgSend(v27, "metadataObject");

  if (!v28
    || (v29 = objc_msgSend(v28, "flattenedGenericObject"),
        v30 = objc_msgSend(v29, "anyObject"),
        v28,
        v29,
        !v30))
  {
LABEL_25:
    v27 = 0;
    goto LABEL_26;
  }
  v31 = objc_opt_self(MPModelPodcastEpisode);
  v27 = (id)swift_dynamicCastObjCClass(v30, v31);
  if (!v27)

LABEL_26:
  v32 = objc_msgSend(v27, "podcast");
  v33 = v32;
  if (!v32 || (objc_msgSend(v32, "supportsSubscription") & 1) == 0)
  {
    v37 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton];
    if (!v37)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    objc_msgSend(v37, "setHidden:", 1);
    v35 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton];
    if (!v35)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v36 = 0;
    goto LABEL_34;
  }
  v34 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton];
  if (!v34)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  objc_msgSend(v34, "setHidden:", 0);
  v35 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton];
  if (v35)
  {
    v36 = 1;
LABEL_34:
    objc_msgSend(v35, "setEnabled:", v36);
    v38 = *(void **)&v1[v2];
    if (!v38
      || (v39 = objc_msgSend(v38, v4[149]),
          v40 = sub_B61B8(),
          v39,
          !v40))
    {
      v41 = 0;
      goto LABEL_41;
    }
    v41 = objc_msgSend(v40, "playbackRateCommand");

    if (!v41)
      goto LABEL_41;
    v42 = &selRef_boundingRectWithSize_options_attributes_context_;
    v43 = objc_msgSend(v41, "supportedPlaybackRates");
    swift_unknownObjectRelease(v41);
    v44 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
    v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);

    if ((unint64_t)v45 >> 62)
      goto LABEL_53;
    v41 = *(id *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFF8));
    while (1)
    {
      v6 = v42;
      swift_bridgeObjectRelease(v45);
LABEL_41:
      v46 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton];
      if (!v46)
        goto LABEL_58;
      objc_msgSend(v46, v6[29], (uint64_t)v41 < 2);
      v47 = *(void **)&v1[v2];
      if (v47
        && (v48 = objc_msgSend(v47, "playerPath"),
            v49 = objc_msgSend(v48, "route"),
            v48,
            v49))
      {
        v50 = objc_msgSend(v49, "isDeviceRoute");

      }
      else
      {
        v50 = 0;
      }
      v51 = *(void **)&v1[v7[119]];
      if (!v51)
        goto LABEL_59;
      objc_msgSend(v51, isEscapingClosureAtFileLocation[49], v50);
      v52 = (void *)objc_opt_self(MPModelObject);
      v53 = swift_allocObject(&unk_1D25A8, 24, 7);
      *(_QWORD *)(v53 + 16) = v1;
      v45 = swift_allocObject(&unk_1D25D0, 32, 7);
      *(_QWORD *)(v45 + 16) = sub_124E54;
      *(_QWORD *)(v45 + 24) = v53;
      aBlock[4] = sub_ECE4;
      v62 = (char **)v45;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F318;
      aBlock[3] = &block_descriptor_10_2;
      v7 = _Block_copy(aBlock);
      v42 = v62;
      v54 = v1;
      swift_retain();
      objc_msgSend(v52, "performWithoutEnforcement:", v7, swift_release(v42).n128_f64[0]);
      _Block_release(v7);
      isEscapingClosureAtFileLocation = (char **)swift_isEscapingClosureAtFileLocation(v45, "", 127, 884, 53, 1);
      swift_release(v45);
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
        v55 = *(_QWORD *)&v54[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController];
        v56 = *(void **)&v1[v2];
        v57 = v56;
        swift_retain();
        sub_138D3C(v56);
        swift_release(v55);

        v58 = *(void **)&v54[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
        if (v58)
        {
          v59 = v58;
          sub_117D08(v59);
          swift_release(v53);

        }
        else
        {
          swift_release(v53);
        }

        return;
      }
      __break(1u);
LABEL_53:
      if (v45 < 0)
        v60 = v45;
      else
        v60 = v45 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v45);
      v41 = (id)_CocoaArrayWrapper.endIndex.getter(v60);
      swift_bridgeObjectRelease(v45);
    }
  }
LABEL_67:
  __break(1u);
}

void sub_121F20(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  float v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  NSString v18;
  void *v19;
  _QWORD v20[14];
  _BYTE v21[24];

  if (a1)
  {
    v2 = v1;
    v3 = objc_msgSend(a1, "playbackRateCommand");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "preferredPlaybackRate");
      v6 = v5;
      swift_unknownObjectRelease(v4);
      if (v6 > 0.00000011921)
      {
        if (qword_1F96B8 != -1)
          swift_once(&qword_1F96B8, sub_15D030);
        swift_beginAccess(&static NowPlayingDataProvider.shared, v21, 0, 0);
        sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v20, (uint64_t *)&unk_1FC7F0);
        v7 = v20[0];
        if (v20[0])
        {
          v8 = v20[1];
          swift_unknownObjectRetain(v20[0]);
          sub_4AE24((uint64_t)v20);
          ObjectType = swift_getObjectType(v7);
          (*(void (**)(uint64_t, uint64_t, float))(v8 + 264))(ObjectType, v8, v6);
          PlayerPlaybackSpeed.localizedName.getter();
          v11 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton;
          v12 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton);
          if (v12)
          {
            v13 = v10;
            v14 = v12;
            v15 = String._bridgeToObjectiveC()();
            objc_msgSend(v14, "setTitle:forState:", v15, 0);

            v16 = *(void **)(v2 + v11);
            if (v16)
            {
              v17 = v16;
              v18 = String._bridgeToObjectiveC()();
              objc_msgSend(v17, "setAccessibilityValue:", v18, swift_bridgeObjectRelease(v13).n128_f64[0]);

              v19 = *(void **)(v2 + v11);
              if (v19)
              {
                objc_msgSend(v19, "setNeedsLayout");
                swift_unknownObjectRelease(v7);
                return;
              }
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_14;
      }
    }
  }
}

double sub_1220F8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  double result;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  char v33[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v5);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v32[-v9];
  a3 += 16;
  swift_beginAccess(a3, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v13 = (char *)Strong;
    v14 = sub_11F050();
    if (v14)
    {
      v15 = v14;
      v16 = *(void **)&v13[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton];
      if (v16)
      {
        v17 = v16;
        v18 = v13;
        v19 = objc_msgSend(v17, "bounds");
        v24 = CGRect.center.getter(v19, v20, v21, v22, v23);
        PresentationSource.init(viewController:view:location:)(v18, v16, *(_QWORD *)&v24, v25, 0);
        v26 = type metadata accessor for PresentationSource(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 0, 1, v26);
        sub_982C((uint64_t)v10, (uint64_t)v7, &qword_1FD4B0);
        v27 = v15 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
        swift_beginAccess(v15 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v32, 33, 0);
        sub_73D08((uint64_t)v7, v27);
        swift_endAccess(v32);
        isa = ContextActionsConfiguration.menu(extraContextMenuElements:)((Swift::OpaquePointer)_swiftEmptyArrayStorage).super.super.isa;
        v29 = -[objc_class children](isa, "children");
        v30 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
        v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

        a1(v31);
        swift_release(v15);

        *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
      }
      else
      {

        *(_QWORD *)&result = swift_release(v15).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

void sub_122324()
{
  char *v0;
  void *v1;
  void *v2;
  double *v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char *v21;
  double v22;
  void *v23;
  char *v24;
  char *v25;
  double v26;
  void *v27;
  char *v28;
  char *v29;
  double v30;
  void *v31;
  char *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;

  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel];
    if (v1)
    {
      v2 = (void *)objc_opt_self(UIFont);
      v3 = (double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics];
      v4 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics];
      v5 = v1;
      v6 = objc_msgSend(v2, "systemFontOfSize:weight:", v4, UIFontWeightSemibold);
      objc_msgSend(v5, "setFont:", v6);

      v7 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton];
      if (v7)
      {
        v8 = objc_msgSend(v7, "titleLabel");
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v2, "systemFontOfSize:weight:", *v3, UIFontWeightRegular);
          objc_msgSend(v9, "setFont:", v10);

        }
        v11 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton];
        if (v11)
        {
          v12 = v3[1];
          v13 = v11;
          v14 = objc_msgSend(v2, "systemFontOfSize:weight:", v12, UIFontWeightSemibold);
          objc_msgSend(v13, "setFont:", v14);

          v15 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesStackView];
          if (v15)
          {
            objc_msgSend(v15, "setSpacing:", v3[4]);
            v16 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryControlsBottomMargin];
            if (v16)
            {
              objc_msgSend(v16, "setConstant:", v3[5]);
              v17 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSliderBottomConstraint];
              if (v17)
              {
                objc_msgSend(v17, "setConstant:", v3[6]);
                v18 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonWidthConstraint];
                if (v18)
                {
                  objc_msgSend(v18, "setConstant:", v3[2]);
                  v19 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonWidthConstraint];
                  if (v19)
                  {
                    objc_msgSend(v19, "setConstant:", v3[2]);
                    v20 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonWidthConstraint];
                    if (v20)
                    {
                      objc_msgSend(v20, "setConstant:", v3[2]);
                      v21 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton];
                      if (v21)
                      {
                        v22 = v3[2] + 8.0;
                        *(double *)&v21[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidth] = v22;
                        v23 = *(void **)&v21[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
                        if (v23)
                        {
                          v24 = v21;
                          objc_msgSend(v23, "setConstant:", v22);
                          objc_msgSend(v24, "invalidateIntrinsicContentSize");

                          v25 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton];
                          if (v25)
                          {
                            v26 = v3[2] + 8.0;
                            *(double *)&v25[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidth] = v26;
                            v27 = *(void **)&v25[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
                            if (v27)
                            {
                              v28 = v25;
                              objc_msgSend(v27, "setConstant:", v26);
                              objc_msgSend(v28, "invalidateIntrinsicContentSize");

                              v29 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton];
                              if (v29)
                              {
                                v30 = v3[2] + 8.0;
                                *(double *)&v29[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidth] = v30;
                                v31 = *(void **)&v29[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
                                if (v31)
                                {
                                  v32 = v29;
                                  objc_msgSend(v31, "setConstant:", v30);
                                  objc_msgSend(v32, "invalidateIntrinsicContentSize");

                                  v33 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsHeightConstraint];
                                  if (v33)
                                  {
                                    objc_msgSend(v33, "setConstant:", v3[9]);
                                    v34 = objc_msgSend(v0, "view");
                                    if (v34)
                                    {
                                      v35 = v34;
                                      objc_msgSend(v34, "setNeedsUpdateConstraints");

                                      v36 = objc_msgSend(v0, "view");
                                      if (v36)
                                      {
                                        v37 = v36;
                                        objc_msgSend(v36, "setNeedsLayout");

                                        return;
                                      }
                                      goto LABEL_41;
                                    }
LABEL_40:
                                    __break(1u);
LABEL_41:
                                    __break(1u);
                                    return;
                                  }
LABEL_39:
                                  __break(1u);
                                  goto LABEL_40;
                                }
LABEL_38:
                                __break(1u);
                                goto LABEL_39;
                              }
LABEL_37:
                              __break(1u);
                              goto LABEL_38;
                            }
LABEL_36:
                            __break(1u);
                            goto LABEL_37;
                          }
LABEL_35:
                          __break(1u);
                          goto LABEL_36;
                        }
LABEL_34:
                        __break(1u);
                        goto LABEL_35;
                      }
LABEL_33:
                      __break(1u);
                      goto LABEL_34;
                    }
LABEL_32:
                    __break(1u);
                    goto LABEL_33;
                  }
LABEL_31:
                  __break(1u);
                  goto LABEL_32;
                }
LABEL_30:
                __break(1u);
                goto LABEL_31;
              }
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
}

void sub_122764(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *object;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t inited;
  NSString *v30;
  uint64_t *v31;
  void *v32;
  id v33;
  unint64_t v34;
  id v35;
  NSString v36;
  Class isa;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  void *v53;
  id v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void **v80;
  unint64_t v81;
  uint64_t (*v82)(uint64_t);
  void *v83;
  void (*v84)();
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88[32];
  Swift::String v89;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "title");
  if (v10)
  {
    v11 = v10;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v89._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v13._object = (void *)0xED0000454C544954;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v89._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v11, v14, v89)._object;
  }
  v15 = object;

  v16 = objc_allocWithZone((Class)NSMutableAttributedString);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "initWithString:", v17, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v19 = objc_msgSend(a1, "isExplicitEpisode");
  v76 = v18;
  if (v19)
  {
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, &v78, 0, 0);
    sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v86, (uint64_t *)&unk_1FC7F0);
    v20 = v86;
    if (!v86)
      goto LABEL_33;
    v72 = v4;
    v21 = v87;
    swift_unknownObjectRetain(v86);
    sub_4AE24((uint64_t)&v86);
    ObjectType = swift_getObjectType(v20);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 232))(ObjectType, v21);
    v25 = v24;
    swift_unknownObjectRelease(v20);
    v80 = (void **)&stru_20;
    v81 = 0xE100000000000000;
    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v25);
    v27 = v81;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
    inited = swift_initStackObject(v28, &v77);
    *(_OWORD *)(inited + 16) = xmmword_16B3D0;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    v30 = NSForegroundColorAttributeName;
    if (UIAccessibilityDarkerSystemColorsEnabled())
    {
      if (qword_1F95C8 != -1)
        swift_once(&qword_1F95C8, sub_FE0E0);
      v31 = &qword_210350;
    }
    else
    {
      if (qword_1F95C0 != -1)
        swift_once(&qword_1F95C0, sub_FE034);
      v31 = &qword_210348;
    }
    v32 = (void *)*v31;
    *(_QWORD *)(inited + 64) = sub_F174(0, (unint64_t *)&qword_2034A0, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v32;
    v33 = v32;
    v34 = sub_CA4A4(inited);
    v35 = objc_allocWithZone((Class)NSAttributedString);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    type metadata accessor for Key(0);
    sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v38 = objc_msgSend(v35, "initWithString:attributes:", v36, isa, swift_bridgeObjectRelease(v34).n128_f64[0]);

    v18 = v76;
    objc_msgSend(v76, "appendAttributedString:", v38);

    v4 = v72;
  }
  v39 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  if (!v39)
  {
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v39, "setAttributedText:", v18);
  v40 = objc_msgSend(a1, "podcast");
  if (!v40
    || (v41 = v40, v42 = objc_msgSend(v40, "author"), v41, !v42)
    || (v43 = objc_msgSend(v42, "name"), v42, !v43))
  {
LABEL_22:
    v53 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
    if (v53)
    {
      v54 = v53;
      MPModelPodcastEpisode.artistSubtitle.getter();
      if (v55)
      {
        v57 = v55;
        v58 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v56 = swift_bridgeObjectRelease(v57).n128_u64[0];
      }
      else
      {
        v58 = 0;
      }
      objc_msgSend(v54, "setTitle:forState:", v58, 0, v56);

      sub_122F24(a1);
      if (qword_1F96B8 != -1)
        swift_once(&qword_1F96B8, sub_15D030);
      swift_beginAccess(&static NowPlayingDataProvider.shared, v88, 0, 0);
      sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v86, (uint64_t *)&unk_1FC7F0);
      v59 = v86;
      if (v86)
      {
        v60 = v87;
        swift_unknownObjectRetain(v86);
        sub_4AE24((uint64_t)&v86);
        v61 = swift_getObjectType(v59);
        v62 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 216))(v61, v60);
        swift_unknownObjectRelease(v59);
        v63 = swift_allocObject(&unk_1D2620, 24, 7);
        swift_unknownObjectWeakInit(v63 + 16, v2);
        v64 = swift_allocObject(&unk_1D2648, 32, 7);
        *(_QWORD *)(v64 + 16) = a1;
        *(_QWORD *)(v64 + 24) = v63;
        v84 = sub_124ED4;
        v85 = v64;
        v80 = _NSConcreteStackBlock;
        v81 = 1107296256;
        v82 = sub_F528;
        v83 = &block_descriptor_19_2;
        v65 = _Block_copy(&v80);
        v66 = a1;
        v67 = swift_retain();
        static DispatchQoS.unspecified.getter(v67);
        v79 = _swiftEmptyArrayStorage;
        v68 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
        v70 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)(&v79, v69, v70, v4, v68);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v65);
        _Block_release(v65);

        (*(void (**)(char *, uint64_t))(v75 + 8))(v6, v4);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v9, v74);
        v71 = v85;
        swift_release(v63);
        swift_release(v71);
        return;
      }
      goto LABEL_32;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v72 = v4;
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v46 = v45;

  v47 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel);
  if (v47)
  {
    v86 = v44;
    v87 = v46;
    v48 = sub_11CEC();
    v49 = v47;
    StringProtocol.localizedUppercase.getter(&type metadata for String, v48);
    v51 = v50;
    swift_bridgeObjectRelease(v46);
    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v49, "setText:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

    v4 = v72;
    goto LABEL_22;
  }
LABEL_34:
  __break(1u);
}

void sub_122F24(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[24];

  v2 = v1;
  v3 = (uint64_t)a1;
  v4 = objc_msgSend(a1, "podcast");
  if (!v4)
    goto LABEL_16;
  v5 = v4;
  v6 = MPModelObject.adamID.getter(v4);
  v8 = v7;

  if ((v8 & 1) != 0)
    goto LABEL_16;
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = MPModelObject.adamID.getter(v9);
    if ((v11 & 1) != 0)
    {
LABEL_16:
      *(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) = 0;
      sub_119BC4();
      v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider) = 0;
      swift_release(v22);
      v23 = (_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView);
      v21 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView
                      + 8);
      *v23 = 0;
      v23[1] = 0;
      goto LABEL_17;
    }
    v3 = v10;
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (qword_1F96B8 == -1)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_23:
  swift_once(&qword_1F96B8, sub_15D030);
LABEL_7:
  swift_beginAccess(&static NowPlayingDataProvider.shared, v32, 0, 0);
  if (!(_QWORD)static NowPlayingDataProvider.shared)
  {
    __break(1u);
    goto LABEL_25;
  }
  v12 = qword_210548;
  if (!qword_210548)
  {
LABEL_25:
    __break(1u);
    return;
  }
  v13 = swift_retain();
  v14 = EpisodeUpsellBannerDataProvider.metricsController.getter(v13);
  swift_release(v12);
  if (!v14)
    goto LABEL_16;
  v15 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  v17 = v15;
  v18 = v16;
  v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView + 8);
  if (v20
    && (v15 == *v19 && v20 == v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v19, v20, 0) & 1) != 0)
    && *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider))
  {
    swift_release(v14);
    v21 = v18;
LABEL_17:
    swift_bridgeObjectRelease(v21);
    return;
  }
  v24 = v19[1];
  *v19 = v17;
  v19[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v24);
  v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerDataProvider);
  v26 = type metadata accessor for NowPlayingEpisodeUpsellBannerProvider(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  swift_retain();
  swift_retain();
  v27 = NowPlayingEpisodeUpsellBannerProvider.init(dataProvider:metricsController:episodeAdamId:presentationType:)(v25, v14, v17, v18, 0);
  v28 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider;
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider) = v27;
  swift_release(v29);
  v30 = *(_QWORD *)(v2 + v28);
  if (v30)
  {
    v31 = swift_allocObject(&unk_1D2620, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16, v2);
    swift_retain();
    swift_retain();
    dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.nowPlayingEpisodeUpsellBannerPublisher(episodeStoreTrackId:podcastStoreTrackId:imageFetchCompletion:)(v3, v6, sub_124F10, v31);
    swift_release(v30);
    swift_release_n(v31, 2);
  }
  swift_release(v14);
}

void sub_1231E4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  __n128 v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "artworkCatalog");
  v12 = swift_allocObject(&unk_1D2698, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (void *)objc_opt_self(NSThread);
  swift_retain_n(a2, 2);
  v14 = v11;
  if (objc_msgSend(v13, "isMainThread"))
  {
    swift_beginAccess(a2 + 16, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v16 = (void *)Strong;
      v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
        v19 = *(void **)(v18 + 80);
        *(_QWORD *)(v18 + 80) = v11;
        v20 = v14;
        swift_retain();
        sub_FFC90(v19);
        swift_release(a2);
        swift_release(v12);

        swift_release(v18);
      }
      else
      {
        swift_release(a2);
        swift_release(v12);

      }
    }
    else
    {
      swift_release(a2);
      swift_release(v12);
    }

  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v34 = static OS_dispatch_queue.main.getter(v21);
    aBlock[4] = sub_124F08;
    v38 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_25_0;
    v22 = _Block_copy(aBlock);
    v35 = v8;
    v23 = v22;
    v24 = v38;
    swift_retain();
    swift_release(v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = a2;
    v27 = v5;
    v28 = v26;
    v29 = v14;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v31 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v4, v28);
    v32 = (void *)v34;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v35);

    swift_release(v33);
    swift_release(v12);
  }
}

void sub_123548(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
      v8 = *(void **)(v7 + 80);
      *(_QWORD *)(v7 + 80) = a2;
      v9 = a2;
      swift_retain();
      sub_FFC90(v8);

      swift_release(v7);
      v5 = v9;
    }

  }
}

void sub_123604(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  void *object;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t inited;
  NSString *v15;
  uint64_t *v16;
  void *v17;
  id v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class isa;
  id v23;
  id v24;
  double v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  _BYTE v49[72];
  _QWORD *v50;
  Swift::String v51;

  v2 = v1;
  v4 = objc_msgSend(a1, "title");
  if (v4)
  {
    v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v51._object = (void *)0xE000000000000000;
    v7._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v7._object = (void *)0xED0000454C544954;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v5, v8, v51)._object;
  }
  v9 = object;

  v10 = objc_allocWithZone((Class)NSMutableAttributedString);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "initWithString:", v11, swift_bridgeObjectRelease(v9).n128_f64[0]);

  if (objc_msgSend(a1, "isExplicitSong"))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
    inited = swift_initStackObject(v13, v49);
    *(_OWORD *)(inited + 16) = xmmword_16B3D0;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    v15 = NSForegroundColorAttributeName;
    if (UIAccessibilityDarkerSystemColorsEnabled())
    {
      if (qword_1F95C8 != -1)
        swift_once(&qword_1F95C8, sub_FE0E0);
      v16 = &qword_210350;
    }
    else
    {
      if (qword_1F95C0 != -1)
        swift_once(&qword_1F95C0, sub_FE034);
      v16 = &qword_210348;
    }
    v17 = (void *)*v16;
    *(_QWORD *)(inited + 64) = sub_F174(0, (unint64_t *)&qword_2034A0, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v17;
    v18 = v17;
    v19 = sub_CA4A4(inited);
    v20 = objc_allocWithZone((Class)NSAttributedString);
    v21 = String._bridgeToObjectiveC()();
    type metadata accessor for Key(0);
    sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v20, "initWithString:attributes:", v21, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

    objc_msgSend(v12, "appendAttributedString:", v23);
  }
  v24 = objc_msgSend(a1, "album");
  if (v24 && (v26 = v24, v27 = objc_msgSend(v24, "title"), v26, v27))
  {
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = sub_135B74(0, 1, 1, _swiftEmptyArrayStorage);
    v33 = v31[2];
    v32 = v31[3];
    if (v33 >= v32 >> 1)
      v31 = sub_135B74((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
    v31[2] = v33 + 1;
    v34 = &v31[2 * v33];
    v34[4] = v28;
    v34[5] = v30;
    if (!v31[2])
      goto LABEL_18;
  }
  else
  {
    v31 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2])
    {
LABEL_18:
      v35 = 0xE100000000000000;
      goto LABEL_21;
    }
  }
  v50 = v31;
  swift_bridgeObjectRetain(v31);
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2034D0);
  v37 = sub_27A8C(&qword_200738, (uint64_t *)&unk_2034D0, (uint64_t)&protocol conformance descriptor for [A]);
  BidirectionalCollection<>.joined(separator:)(0x209480E220, 0xA500000000000000, v36, v37);
  v35 = v38;
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v31).n128_u64[0];
LABEL_21:
  v39 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  if (!v39)
  {
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend(v39, "setAttributedText:", v12, v25);
  v40 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
  if (!v40)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v41 = v40;
  swift_bridgeObjectRelease(v31);
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setTitle:forState:", v42, 0, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v43 = objc_msgSend(a1, "artworkCatalog");
  v44 = v43;
  v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
  if (v45)
  {
    v46 = *(_QWORD *)(v45 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
    v47 = *(void **)(v46 + 80);
    *(_QWORD *)(v46 + 80) = v43;
    v48 = v43;
    swift_retain();
    sub_FFC90(v47);

    swift_release(v46);
    v12 = v48;
  }

}

void sub_123AF0(void *a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  void *object;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  Swift::String v21;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  if (!v2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v4 = v2;
  v5 = objc_msgSend(a1, "title");
  if (v5)
  {
    v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21._object = (void *)0xE000000000000000;
    v8._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v8._object = (void *)0xED0000454C544954;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v6, v9, v21)._object;
  }
  v10 = object;

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
  if (!v12)
    goto LABEL_10;
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setTitle:forState:", v14, 0);

  v15 = objc_msgSend(a1, "artworkCatalog");
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
  if (v16)
  {
    v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
    v18 = *(void **)(v17 + 80);
    *(_QWORD *)(v17 + 80) = v15;
    v20 = v15;
    v19 = v15;
    swift_retain();
    sub_FFC90(v18);
    swift_release(v17);

    v15 = v20;
  }

}

void sub_123CD0(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSlider);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v3, "setGroupRoute:", a1);
  v4 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton);
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v5, "setRoute:", a1);
  v6 = *(void **)(v1 + v4);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v7, "setRouteLabelHidden:", objc_msgSend(a1, "isRoutingToWirelessDevice") ^ 1);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for NowPlayingControlsViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI32NowPlayingControlsViewController);
}

void sub_124228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  void *v46;
  unint64_t v47;
  char v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  _QWORD v63[3];
  char v64[24];
  char v65[24];
  _BYTE v66[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - v12;
  v14 = a2 + 16;
  sub_2808C(a1, (uint64_t)v6, &qword_1FCF58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_9944((uint64_t)v6, &qword_1FCF58);
    swift_beginAccess(v14, v66, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v14);
    if (Strong)
    {
      v16 = (void *)Strong;
      *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) = 0;
      sub_119BC4();

    }
  }
  else
  {
    v61 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v61(v13, v6, v7);
    swift_beginAccess(v14, v66, 0, 0);
    v17 = swift_unknownObjectWeakLoadStrong(v14);
    if (v17)
    {
      v18 = (void *)v17;
      *(_BYTE *)(v17 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible) = 1;
      sub_119BC4();

    }
    v19 = swift_allocObject(&unk_1D2620, 24, 7);
    swift_beginAccess(v14, v65, 0, 0);
    v20 = (void *)swift_unknownObjectWeakLoadStrong(v14);
    swift_unknownObjectWeakInit(v19 + 16, v20);

    v60 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v60(v11, v13, v7);
    v57 = v8;
    v21 = *(unsigned __int8 *)(v8 + 80);
    v22 = v7;
    v23 = (v21 + 24) & ~v21;
    v58 = v21 | 7;
    v59 = v23 + v9;
    v24 = swift_allocObject(&unk_1D26E8, v23 + v9, v21 | 7);
    *(_QWORD *)(v24 + 16) = v19;
    v25 = (void (*)(uint64_t, char *, uint64_t))v61;
    v61((char *)(v24 + v23), v11, v22);
    v26 = swift_allocObject(&unk_1D2620, 24, 7);
    v27 = swift_unknownObjectWeakLoadStrong(v14);
    v62 = v13;
    v28 = (void *)v27;
    swift_unknownObjectWeakInit(v26 + 16, v27);

    v29 = v62;
    v60(v11, v62, v22);
    v30 = swift_allocObject(&unk_1D2710, v59, v58);
    *(_QWORD *)(v30 + 16) = v26;
    v31 = v30 + v23;
    v32 = (void (*)(char *, char *, uint64_t))v22;
    v25(v31, v11, v22);
    swift_beginAccess(v14, v64, 0, 0);
    v33 = swift_unknownObjectWeakLoadStrong(v14);
    if (v33)
    {
      v34 = (void *)v33;
      v60 = v32;
      v35 = v24;
      v36 = (char *)objc_retain(*(id *)(v33
                                      + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerView));

      v38 = NowPlayingEpisodeUpsellBannerModel.subscriptionTitle.getter(v37);
      v40 = v39;
      v41 = NowPlayingEpisodeUpsellBannerModel.showSpecificUpsellCopy.getter();
      v43 = v42;
      v44 = NowPlayingEpisodeUpsellBannerModel.genericUpsellCopy.getter();
      v61 = v45;
      v46 = (void *)NowPlayingEpisodeUpsellBannerModel.channelImage.getter();
      if (v43)
      {
        v63[0] = v41;
        v63[1] = v43;
        v47 = sub_5DAB0();
        v48 = Collection.isNotEmpty.getter(&type metadata for String, v47);
        if ((v48 & 1) != 0)
        {
          v44 = 0;
          v49 = 0;
        }
        else
        {
          v49 = v61;
        }
        if ((v48 & 1) != 0)
          v38 = v41;
        v50 = v40;
        if ((v48 & 1) != 0)
          v51 = v43;
        else
          v51 = v40;
      }
      else
      {
        v49 = v61;
        v50 = v40;
        v51 = v40;
      }
      v53 = v57;
      dispatch thunk of EpisodeUpsellBannerView.apply(primaryText:secondaryText:tapBannerBlock:tapCloseButtonBlock:)(v38, v51, v44, v49, sub_124F1C, v35, sub_124F2C, v30);
      objc_msgSend(*(id *)&v36[qword_1FD218], "setImage:", v46);
      v54 = (uint64_t *)&v36[direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock];
      swift_beginAccess(&v36[direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock], v63, 1, 0);
      v55 = *v54;
      v56 = v54[1];
      *v54 = 0;
      v54[1] = 0;
      sub_145A0(v55, v56);

      swift_bridgeObjectRelease(v43);
      swift_release(v35);
      swift_release(v30);
      swift_bridgeObjectRelease(v61);
      v52 = swift_bridgeObjectRelease(v50);
      v29 = v62;
      v32 = v60;
    }
    else
    {
      swift_release(v24);
      v52 = swift_release(v30);
      v53 = v57;
    }
    (*(void (**)(char *, void (*)(char *, char *, uint64_t), __n128))(v53 + 8))(v29, v32, v52);
  }
}

void sub_124694(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  _BYTE v16[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = NowPlayingEpisodeUpsellBannerModel.primaryAction.getter();
    if (v4)
    {
      v5 = v4;
      v6 = NowPlayingEpisodeUpsellBannerModel.dismissBannerAction.getter();
      if (v6)
      {
        v7 = v6;
        v8 = type metadata accessor for NowPlayingControlsViewController();
        v15 = v8;
        v14[0] = v3;
        swift_retain();
        v9 = v3;
        v10 = sub_124F38(v5, (uint64_t)v14, 0);
        swift_release(v10);
        sub_9944((uint64_t)v14, &qword_1FD880);
        swift_release(v5);
        v15 = v8;
        v14[0] = v9;
        v11 = v9;
        v12 = swift_retain();
        v13 = sub_124F38(v12, (uint64_t)v14, 0);
        swift_release(v13);
        sub_9944((uint64_t)v14, &qword_1FD880);
        swift_release(v7);
        v11[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible] = 0;
        sub_119BC4();
        swift_release(v5);
        v5 = v7;
      }
      swift_release(v5);
    }

  }
}

void sub_1247C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _QWORD v8[4];
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = NowPlayingEpisodeUpsellBannerModel.instrumentedDismissBannerAction.getter();
    if (v4)
    {
      v5 = v4;
      v8[3] = type metadata accessor for NowPlayingControlsViewController();
      v8[0] = v3;
      swift_retain();
      v6 = v3;
      v7 = sub_124F38(v5, (uint64_t)v8, 0);
      swift_release(v7);
      sub_9944((uint64_t)v8, &qword_1FD880);
      swift_release(v5);
      v6[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible] = 0;
      sub_119BC4();
      swift_release(v5);
    }

  }
}

void sub_12488C(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  double v7;
  void *v8;
  double v9;
  id v10;
  void *v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerView);
    if ((a2 & 1) != 0)
      v7 = 1.0;
    else
      v7 = 0.0;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerView), "setAlpha:", v7);
    objc_msgSend(v6, "setUserInteractionEnabled:", a2 & 1);
    v8 = *(void **)&v5[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel];
    if (v8)
    {
      if ((a2 & 1) != 0)
        v9 = 0.0;
      else
        v9 = 1.0;
      objc_msgSend(v8, "setAlpha:", v9);
      v10 = objc_msgSend(v5, "view");
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "layoutIfNeeded");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_12498C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _BYTE *v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD aBlock[5];
  uint64_t v16;
  _QWORD v17[14];
  char v18[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v18, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v17, (uint64_t *)&unk_1FC7F0);
  v2 = v17[0];
  if (v17[0])
  {
    v3 = v17[1];
    swift_unknownObjectRetain(v17[0]);
    sub_4AE24((uint64_t)v17);
    ObjectType = swift_getObjectType(v2);
    v5 = (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    swift_unknownObjectRelease(v2);
    v6 = v5[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating];
    v5[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating] = 1;
    v7 = swift_allocObject(&unk_1D2878, 25, 7);
    *(_QWORD *)(v7 + 16) = v5;
    *(_BYTE *)(v7 + 24) = v6;
    if (a1)
    {
      v8 = v5;
      v9 = a1;
      sub_CC374(v9, v8, v6);

      swift_release(v7);
    }
    else
    {
      v10 = (void *)objc_opt_self(MPAVRoutingController);
      v11 = swift_allocObject(&unk_1D28A0, 32, 7);
      *(_QWORD *)(v11 + 16) = sub_CE4A4;
      *(_QWORD *)(v11 + 24) = v7;
      aBlock[4] = sub_CE4A8;
      v16 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_6BDB4;
      aBlock[3] = &block_descriptor_71;
      v12 = _Block_copy(aBlock);
      v13 = v16;
      v14 = v5;
      swift_retain();
      swift_release(v13);
      objc_msgSend(v10, "getActiveRouteWithTimeout:completion:", v12, 1.0);
      swift_release(v7);
      _Block_release(v12);

    }
  }
  else
  {
    __break(1u);
  }
}

id sub_124BE4()
{
  uint64_t v0;
  id result;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  result = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel);
  if (!result)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v2 = objc_msgSend(result, "text");
  v3 = v2;
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    LODWORD(v3) = objc_msgSend(v6, "_isNaturallyRTL");

  }
  v7 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView;
  result = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView);
  if (!result)
    goto LABEL_22;
  objc_msgSend(result, "setAnimationDirection:", v3);
  result = *(id *)(v0 + v7);
  if (!result)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((_DWORD)v3)
    v8 = 4;
  else
    v8 = 3;
  objc_msgSend(result, "setSemanticContentAttribute:", v8);
  result = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton);
  if (!result)
    goto LABEL_24;
  v9 = objc_msgSend(result, "titleForState:", 0);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "_isNaturallyRTL");

  }
  else
  {
    v11 = 0;
  }
  v12 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView;
  result = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView);
  if (!result)
    goto LABEL_25;
  objc_msgSend(result, "setAnimationDirection:", v11);
  result = *(id *)(v0 + v12);
  if (!result)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11)
    v13 = 4;
  else
    v13 = 3;
  objc_msgSend(result, "setSemanticContentAttribute:", v13);
  result = *(id *)(v0 + v7);
  if (!result)
    goto LABEL_27;
  objc_msgSend(result, "invalidateIntrinsicContentSize");
  result = *(id *)(v0 + v12);
  if (result)
    return objc_msgSend(result, "invalidateIntrinsicContentSize");
LABEL_28:
  __break(1u);
  return result;
}

id sub_124D84(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

uint64_t sub_124DD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_124DF8()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = *(_BYTE **)(v0 + 16);
  v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode] = *(_BYTE *)(v0 + 24);
  sub_F5D6C();
  return objc_msgSend(v1, "layoutIfNeeded");
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_31(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_124E54()
{
  sub_119068();
}

uint64_t sub_124E74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_124E84()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_124EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_124ED4()
{
  uint64_t v0;

  sub_1231E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_124EDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_124F08()
{
  uint64_t v0;

  sub_123548(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_124F10(uint64_t a1)
{
  uint64_t v1;

  sub_124228(a1, v1);
}

uint64_t sub_124F1C()
{
  return sub_5B1CC((uint64_t (*)(_QWORD, uint64_t))sub_124694);
}

uint64_t sub_124F2C()
{
  return sub_5B1CC((uint64_t (*)(_QWORD, uint64_t))sub_1247C4);
}

uint64_t sub_124F38(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v18[32];
  _QWORD v19[5];
  _QWORD v20[5];

  v6 = type metadata accessor for ActionPerformer(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[3] = type metadata accessor for Action(0);
  v20[4] = sub_8330((unint64_t *)&unk_2034C0, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  v20[0] = a1;
  type metadata accessor for ActionRunnerOptions(0);
  swift_retain();
  v10 = swift_retain();
  v11 = BaseObjectGraph.__allocating_init(_:)(v10);
  sub_2808C(a2, (uint64_t)v18, &qword_1FD880);
  v12 = a3;
  ActionOrigin.init(sender:view:)(v19, v18, a3);
  v13 = ActionRunnerOptions.withActionOrigin(_:)(v19);
  sub_9944((uint64_t)v19, &qword_1FCF68);
  swift_release(v11);
  sub_DF78((uint64_t)v20, (uint64_t)v19);
  swift_retain();
  v14 = ActionPerformer.init(_:asPartOf:)(v19, v13);
  v15 = ActionPerformer.callAsFunction()(v14);
  v16 = swift_release(v13);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
  __swift_destroy_boxed_opaque_existential_0(v20);
  return v15;
}

void sub_1250BC()
{
  uint64_t v0;

  sub_119EA0(v0);
}

uint64_t sub_1250C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1250E8()
{
  uint64_t v0;

  sub_12488C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1250F4(uint64_t a1, _QWORD *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(__int128 *__return_ptr, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  objc_super v30;
  char v31[24];
  __int128 v32[6];

  ObjectType = (objc_class *)swift_getObjectType(v2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_bindings] = _swiftEmptyArrayStorage;
  v6 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide;
  v7 = objc_allocWithZone((Class)UILayoutGuide);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLayoutGuide;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLeadingConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTrailingConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoTapGestureRecognizer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoPinchGestureRecognizer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepTimerController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView] = 0;
  v10 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contentViewSize];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl] = 0;
  v11 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlScrubSpeed];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesStackView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider] = 0;
  v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible] = 0;
  v12 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1F9580 != -1)
    swift_once(&qword_1F9580, sub_FDE14);
  objc_msgSend(v14, "setBackgroundColor:", qword_210308);
  objc_msgSend(v14, "setUserInteractionEnabled:", 0);
  *(_QWORD *)&v8[v13] = v14;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextActionsHandler] = 0;
  v15 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController;
  v16 = type metadata accessor for TransportControlsController();
  v17 = swift_allocObject(v16, 152, 7);
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)(v17 + 48) = 0u;
  *(_OWORD *)(v17 + 64) = 0u;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_OWORD *)(v17 + 112) = 0u;
  *(_OWORD *)(v17 + 128) = 0u;
  *(_QWORD *)(v17 + 144) = 0;
  *(_QWORD *)&v8[v15] = v17;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsStackView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton] = 0;
  v18 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration];
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton] = 0;
  v19 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonConfiguration];
  *((_QWORD *)v19 + 1) = 0;
  *((_QWORD *)v19 + 2) = 0;
  *(_QWORD *)v19 = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton] = 0;
  v20 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration];
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = 0;
  v21 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSlider];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryTransportControlsGuide] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton] = 0;
  v22 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton] = 0;
  v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_isShowingSleepTimer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_queueControlsView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_preferredContentSizeDidChangeObserver] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsHeightConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___shazamHostingController] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___timeFormatter] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesYConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryControlsBottomMargin] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTopMarginConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlLayoutGuideTopAnchor] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverTopConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlTopAnchor] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSliderBottomConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkMaxWidthConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonWidthConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonWidthConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonWidthConstraint] = 0;
  v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_objectGraph] = a1;
  sub_DF78((uint64_t)a2, (uint64_t)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_configuration]);
  v23 = a2[3];
  v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v23);
  v25 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 8);
  swift_retain();
  v25(v32, v23, v24);
  v26 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics];
  sub_27890(v32, (uint64_t)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_metrics]);
  v27 = *((_QWORD *)v26 + 3);
  v28 = *((_QWORD *)v26 + 4);
  __swift_project_boxed_opaque_existential_1(v26, v27);
  (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(v28 + 160))(v32, 0, 0, v27, v28);
  v29 = &v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_controlsMetrics];
  *((_OWORD *)v29 + 1) = v32[1];
  *(_OWORD *)v29 = v32[0];
  *((_OWORD *)v29 + 5) = v32[5];
  *((_OWORD *)v29 + 4) = v32[4];
  *((_OWORD *)v29 + 3) = v32[3];
  *((_OWORD *)v29 + 2) = v32[2];
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v31, 0, 0);
  if ((_QWORD)static NowPlayingDataProvider.shared)
  {
    if (qword_210548)
    {
      *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerDataProvider] = qword_210548;
      objc_allocWithZone((Class)type metadata accessor for NowPlayingEpisodeUpsellBannerView(0));
      swift_retain();
      swift_retain();
      *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerView] = NowPlayingEpisodeUpsellBannerView.init(asPartOf:)(a1);

      v30.receiver = v8;
      v30.super_class = ObjectType;
      objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
      __swift_destroy_boxed_opaque_existential_0(a2);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1256D8(id a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;

  v2 = v1;
  v3 = a1;
  if (a1)
  {
    v4 = objc_msgSend(a1, "playerPath");
    v5 = type metadata accessor for NowPlayingMetadataPlaceholder();
    swift_allocObject(v5, 40, 7);
    v6 = sub_1092B8(v4);
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder) = v6;
    swift_release(v7);
    v8 = v3;
    v9 = objc_msgSend(v8, "playerPath");
    v10 = objc_msgSend(v9, "isSystemPodcastsPath");

    if ((v10 & 1) == 0)
    {

      v3 = 0;
    }
  }
  else
  {
    v11 = type metadata accessor for NowPlayingMetadataPlaceholder();
    swift_allocObject(v11, 40, 7);
    v12 = sub_1092B8(0);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder) = v12;
    swift_release(v13);
  }
  v14 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse) = v3;
  v15 = v3;

  sub_1218A8();
}

void sub_12580C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_bindings] = _swiftEmptyArrayStorage;
  v1 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v2 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLayoutGuide;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTrailingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoTapGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_videoPinchGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepTimerController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView] = 0;
  v3 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contentViewSize];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControl] = 0;
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlScrubSpeed];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_releaseDateLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titleMarqueeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_subtitleMarqueeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_episodeUpsellBannerProvider] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellBannerViewVisible] = 0;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_adamIdForUpsellBannerView];
  *v5 = 0;
  v5[1] = 0;
  v6 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1F9580 != -1)
    swift_once(&qword_1F9580, sub_FDE14);
  objc_msgSend(v7, "setBackgroundColor:", qword_210308);
  objc_msgSend(v7, "setUserInteractionEnabled:", 0);
  *(_QWORD *)&v0[v6] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextActionsHandler] = 0;
  v8 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsController;
  v9 = type metadata accessor for TransportControlsController();
  v10 = swift_allocObject(v9, 152, 7);
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 112) = 0u;
  *(_OWORD *)(v10 + 128) = 0u;
  *(_QWORD *)&v0[v8] = v10;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton] = 0;
  v11 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration];
  v11[1] = 0;
  v11[2] = 0;
  *v11 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButton] = 0;
  v12 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonConfiguration];
  v12[1] = 0;
  v12[2] = 0;
  *v12 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton] = 0;
  v13 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration];
  v13[1] = 0;
  v13[2] = 0;
  *v13 = 0;
  v14 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSlider];
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryTransportControlsGuide] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playbackSpeedButton] = 0;
  v15 = &v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_routeButton];
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_contextButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_sleepButton] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_isShowingSleepTimer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_queueControlsView] = 0;
  *(_QWORD *)(v10 + 144) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_preferredContentSizeDidChangeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_transportControlsHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___shazamHostingController] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController____lazy_storage___timeFormatter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_titlesYConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_secondaryControlsBottomMargin] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkAreaTopMarginConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlLayoutGuideTopAnchor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_upsellCoverTopConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_timeControlTopAnchor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_volumeSliderBottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkMaxWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonWidthConstraint] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_mediaControlsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingControlsViewController.swift", 51, 2, 50, 0);
  __break(1u);
}

void sub_125C68(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t ObjectType;
  _BYTE *v16;
  char v17;
  uint64_t v18;
  id v19;
  _BYTE *v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  void *v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD v43[5];
  uint64_t v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void (*v49)();
  uint64_t v50;
  char v51[32];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1D27B0, 24, 7);
  *(_QWORD *)(v10 + 16) = a1;
  v11 = (void *)objc_opt_self(NSThread);
  v12 = a1;
  if (!objc_msgSend(v11, "isMainThread"))
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v23 = (void *)static OS_dispatch_queue.main.getter(v22);
    v49 = sub_1260C0;
    v50 = v10;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_F528;
    v48 = &block_descriptor_51;
    v24 = _Block_copy(&aBlock);
    v42 = v6;
    v25 = v10;
    v26 = v24;
    v27 = v50;
    swift_retain();
    swift_release(v27);
    static DispatchQoS.unspecified.getter(v28);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v29 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v40 = v7;
    v30 = v29;
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v41 = v12;
    v32 = v31;
    v33 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v2, v30);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v42);

    v21 = v25;
    goto LABEL_8;
  }
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v51, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&aBlock, (uint64_t *)&unk_1FC7F0);
  v13 = aBlock;
  if (aBlock)
  {
    v14 = v46;
    swift_unknownObjectRetain(aBlock);
    sub_4AE24((uint64_t)&aBlock);
    ObjectType = swift_getObjectType(v13);
    v16 = (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14);
    swift_unknownObjectRelease(v13);
    v17 = v16[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating];
    v16[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating] = 1;
    v18 = swift_allocObject(&unk_1D2800, 25, 7);
    *(_QWORD *)(v18 + 16) = v16;
    *(_BYTE *)(v18 + 24) = v17;
    if (a1)
    {
      v19 = v12;
      v20 = v16;
      sub_CC374(v19, v20, v17);
      swift_release(v10);

      v21 = v18;
LABEL_8:
      swift_release(v21);
      return;
    }
    v34 = (void *)objc_opt_self(MPAVRoutingController);
    v35 = swift_allocObject(&unk_1D2828, 32, 7);
    *(_QWORD *)(v35 + 16) = sub_CD9C0;
    *(_QWORD *)(v35 + 24) = v18;
    v43[4] = sub_CD9CC;
    v44 = v35;
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 1107296256;
    v43[2] = sub_6BDB4;
    v43[3] = &block_descriptor_60;
    v36 = _Block_copy(v43);
    v37 = v44;
    v38 = v16;
    swift_retain();
    swift_release(v37);
    objc_msgSend(v34, "getActiveRouteWithTimeout:completion:", v36, 1.0);
    swift_release(v18);
    _Block_release(v36);
    swift_release(v10);

  }
  else
  {
    __break(1u);
  }
}

void sub_1260C0()
{
  uint64_t v0;

  sub_12498C(*(void **)(v0 + 16));
}

void sub_1260C8()
{
  sub_1204B0();
}

void sub_1260E8(uint64_t a1)
{
  uint64_t v1;

  sub_11ED24(a1, v1);
}

void sub_1260F0(uint64_t a1)
{
  uint64_t v1;

  sub_11F2FC(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButton, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration);
}

void sub_126118(uint64_t a1)
{
  uint64_t v1;

  sub_11F3D0(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration, 1u);
}

void sub_12613C(uint64_t a1)
{
  uint64_t v1;

  sub_11F3D0(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_leftButtonConfiguration, 2u);
}

void sub_126160(uint64_t a1)
{
  uint64_t v1;

  sub_11F2FC(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButton, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration);
}

void sub_126188(uint64_t a1)
{
  uint64_t v1;

  sub_11F3D0(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration, 1u);
}

void sub_1261AC(uint64_t a1)
{
  uint64_t v1;

  sub_11F3D0(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_rightButtonConfiguration, 2u);
}

void sub_1261D0(uint64_t a1)
{
  uint64_t v1;

  sub_11F3D0(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_playPauseStopButtonConfiguration, 0);
}

uint64_t sub_1261F4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_126218(void *a1)
{
  uint64_t v1;

  sub_11F4A4(a1, v1);
}

void sub_126220(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_11F604(a1, a2, a3 & 1, v3);
}

id sub_12622C(_QWORD *a1)
{
  uint64_t v1;
  id result;

  result = *(id *)(v1 + 16);
  if (result)
    return objc_msgSend(result, "setMenu:", *a1);
  return result;
}

void sub_12624C()
{
  uint64_t v0;

  sub_11F7D0(v0);
}

uint64_t sub_126254()
{
  uint64_t v0;

  return sub_11FC44(v0);
}

double sub_12625C()
{
  uint64_t v0;

  return sub_11FFE4(v0);
}

void sub_126264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_120334(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_12627C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1262A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1262C8(void *a1)
{
  uint64_t v1;

  sub_1181BC(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), UIPinchGestureRecognizer_ptr);
}

void sub_1262E8(void *a1)
{
  uint64_t v1;

  sub_1181BC(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), UITapGestureRecognizer_ptr);
}

void sub_126308()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_126324(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_B2648();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_126348()
{
  return 8;
}

uint64_t sub_126354(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_12635C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_12636C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203580);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1263B0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

double sub_1263BC(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_1220F8(a1, a2, v2);
}

uint64_t sub_1263C4(void *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(void *, id))(v1 + 16))(a1, objc_msgSend(a1, "state"));
}

void sub_126404(void *a1)
{
  uint64_t v1;

  sub_1181BC(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), UILongPressGestureRecognizer_ptr);
}

uint64_t sub_1264BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain_n(a1, 2);
    if (v2)
      goto LABEL_3;
LABEL_26:
    v5 = (char *)&_swiftEmptyArrayStorage;
LABEL_27:
    swift_bridgeObjectRelease_n(a1, 2);
    return (uint64_t)v5;
  }
  if (a1 < 0)
    v18 = a1;
  else
    v18 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(a1, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v18);
  v2 = result;
  if (!result)
    goto LABEL_26;
LABEL_3:
  if (v2 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      v5 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        v7 = v6;
        v8 = *(_QWORD *)(v6 + 16);
        if (v8 >> 62)
        {
          swift_unknownObjectRelease(v6);
        }
        else
        {
          swift_retain(*(_QWORD *)(v6 + 16));
          if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
            v5 = sub_1342A8(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
          v10 = *((_QWORD *)v5 + 2);
          v9 = *((_QWORD *)v5 + 3);
          if (v10 >= v9 >> 1)
            v5 = sub_1342A8((char *)(v9 > 1), v10 + 1, 1, v5);
          *((_QWORD *)v5 + 2) = v10 + 1;
          v11 = &v5[16 * v10];
          *((_QWORD *)v11 + 4) = v7;
          *((_QWORD *)v11 + 5) = v8;
        }
        ++v4;
      }
      while (v2 != v4);
    }
    else
    {
      v12 = (_QWORD *)(a1 + 32);
      v5 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        v14 = *v12;
        v15 = *(_QWORD *)(*v12 + 16);
        if (!(v15 >> 62))
        {
          swift_retain(*v12);
          swift_retain(v15);
          if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
            v5 = sub_1342A8(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
          v17 = *((_QWORD *)v5 + 2);
          v16 = *((_QWORD *)v5 + 3);
          if (v17 >= v16 >> 1)
            v5 = sub_1342A8((char *)(v16 > 1), v17 + 1, 1, v5);
          *((_QWORD *)v5 + 2) = v17 + 1;
          v13 = &v5[16 * v17];
          *((_QWORD *)v13 + 4) = v14;
          *((_QWORD *)v13 + 5) = v15;
        }
        ++v12;
        --v2;
      }
      while (v2);
    }
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

void sub_1266BC(char *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  unint64_t v17;
  char *v18;
  unint64_t v19;

  v3 = v2;
  if (a2 == 2)
  {
    KeyPath = swift_getKeyPath(&unk_174938);
    __chkstk_darwin(KeyPath);
    v17 = v2;
    v18 = a1;
    v19 = v2;
    v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
    v7 = a1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v19, KeyPath, sub_12E698, v16, (char *)&type metadata for () + 8, v6);
    swift_release(KeyPath);

    v8 = *(_QWORD *)(*(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition]
                   + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
    v9 = *(_QWORD *)(*(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition]
                   + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
    if (v9 >> 14 >= v8 >> 14)
    {
      v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
      v11 = swift_getKeyPath(&off_1748C0);
      __chkstk_darwin(v11);
      v16[0] = v10;
      v16[1] = v8;
      v17 = v9;
      LOBYTE(v18) = 0;
      v19 = v10;
      v12 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v19, v11, sub_12E6AC, &v15, (char *)&type metadata for () + 8, v12);
      swift_release(v11);
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition]
                  + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
  v14 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition]
                  + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
  if (v14 >> 14 < v13 >> 14)
  {
LABEL_8:
    __break(1u);
    return;
  }
  sub_129674(v13, v14);
}

unint64_t sub_1268EC(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  char *v15;
  uint64_t v16;

  if (a2 == 2)
  {
    KeyPath = swift_getKeyPath(&unk_174938);
    __chkstk_darwin(KeyPath);
    v14 = v2;
    v15 = a1;
    v16 = v2;
    v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
    v6 = a1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v16, KeyPath, sub_12E698, v13, (char *)&type metadata for () + 8, v5);
    swift_release(KeyPath);

    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
    v8 = swift_getKeyPath(&off_1748C0);
    __chkstk_darwin(v8);
    v13[1] = 0;
    v14 = 0;
    v13[0] = v7;
    LOBYTE(v15) = 1;
    v16 = v7;
    v9 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v16, v8, sub_12E6AC, &v12, (char *)&type metadata for () + 8, v9);
    return swift_release(v8);
  }
  else
  {
    result = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition]
                       + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
    v11 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition]
                    + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
    if (v11 >> 14 < result >> 14)
      __break(1u);
    else
      return sub_1297B4(result, v11);
  }
  return result;
}

void *sub_126ADC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_174938);
  v6 = v0;
  v2 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v2);
  swift_release(KeyPath);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange);
  v4 = v3;
  return v3;
}

uint64_t sub_126B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t result;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  int64_t v100;
  uint64_t v101;

  v91 = a2;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A58);
  v3 = __chkstk_darwin(v81);
  v80 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v79 = (char *)&v74 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A60);
  v7 = __chkstk_darwin(v6);
  v90 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v98 = (char *)&v74 - v9;
  v101 = type metadata accessor for AttributedString.Index(0);
  v95 = *(_QWORD *)(v101 - 8);
  v10 = __chkstk_darwin(v101);
  v85 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v86 = (char *)&v74 - v12;
  v13 = type metadata accessor for AttributedString(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v97 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v74 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2039F8);
  __chkstk_darwin(v19);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A00);
  v93 = *(_QWORD *)(v22 - 8);
  v94 = v22;
  v23 = __chkstk_darwin(v22);
  v76 = (uint64_t)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v78 = (char *)&v74 - v26;
  __chkstk_darwin(v25);
  v75 = (uint64_t)&v74 - v27;
  v28 = *(_QWORD *)(a1 + 56);
  v88 = a1 + 56;
  v29 = 1 << *(_BYTE *)(a1 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v89 = (unint64_t)(v29 + 63) >> 6;
  v92 = a1;
  result = swift_bridgeObjectRetain(a1);
  v33 = 0;
  v77 = &_swiftEmptyArrayStorage;
  v87 = v21;
  v83 = v14;
  v84 = v13;
  v82 = v18;
  while (1)
  {
    if (v31)
    {
      v99 = (v31 - 1) & v31;
      v100 = v33;
      v38 = __clz(__rbit64(v31)) | (v33 << 6);
      goto LABEL_27;
    }
    v39 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v39 >= v89)
      goto LABEL_36;
    v40 = *(_QWORD *)(v88 + 8 * v39);
    v41 = v33 + 1;
    if (!v40)
    {
      v41 = v33 + 2;
      if (v33 + 2 >= v89)
        goto LABEL_36;
      v40 = *(_QWORD *)(v88 + 8 * v41);
      if (!v40)
      {
        v41 = v33 + 3;
        if (v33 + 3 >= v89)
          goto LABEL_36;
        v40 = *(_QWORD *)(v88 + 8 * v41);
        if (!v40)
        {
          v41 = v33 + 4;
          if (v33 + 4 >= v89)
            goto LABEL_36;
          v40 = *(_QWORD *)(v88 + 8 * v41);
          if (!v40)
            break;
        }
      }
    }
LABEL_26:
    v99 = (v40 - 1) & v40;
    v100 = v41;
    v38 = __clz(__rbit64(v40)) + (v41 << 6);
LABEL_27:
    v43 = (uint64_t *)(*(_QWORD *)(v92 + 48) + 16 * v38);
    v44 = *v43;
    v96 = v43[1];
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v45(v18, v91, v13);
    v46 = v97;
    v45(v97, (uint64_t)v18, v13);
    v47 = sub_8330(&qword_203A68, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    v34 = (uint64_t)v98;
    AttributedString.Index.init<A>(_:within:)(v44, v46, v13, v47);
    v48 = v95;
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
    if (v49(v34, 1, v101) == 1)
      goto LABEL_5;
    v50 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v51 = v86;
    v52 = v101;
    v50(v86, v98, v101);
    v53 = v18;
    v54 = v97;
    v45(v97, (uint64_t)v53, v13);
    v55 = v90;
    AttributedString.Index.init<A>(_:within:)(v96, v54, v13, v47);
    if (v49((uint64_t)v55, 1, v52) == 1)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v101);
      v34 = (uint64_t)v90;
      v14 = v83;
      v13 = v84;
      v18 = v82;
      v21 = v87;
LABEL_5:
      sub_9944(v34, &qword_203A60);
      v35 = 1;
      goto LABEL_6;
    }
    v56 = v85;
    v57 = v101;
    v50(v85, v90, v101);
    v58 = sub_8330(&qword_203A70, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
    result = dispatch thunk of static Comparable.<= infix(_:_:)(v51, v56, v57, v58);
    if ((result & 1) == 0)
      goto LABEL_38;
    v59 = v51;
    v60 = v81;
    v61 = v79;
    v62 = &v79[*(int *)(v81 + 48)];
    v50(v79, v59, v57);
    v50(v62, v85, v57);
    v63 = v80;
    v64 = &v80[*(int *)(v60 + 48)];
    v65 = v95;
    v66 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    v66(v80, v61, v57);
    v66(v64, v62, v57);
    v67 = (uint64_t)v78;
    v50(v78, v63, v57);
    v68 = *(void (**)(char *, uint64_t))(v65 + 8);
    v68(v64, v57);
    v69 = &v63[*(int *)(v60 + 48)];
    v50(v63, v61, v57);
    v50(v69, v62, v57);
    v50((char *)(v67 + *(int *)(v94 + 36)), v69, v57);
    v68(v63, v57);
    v21 = v87;
    sub_982C(v67, (uint64_t)v87, &qword_203A00);
    v35 = 0;
    v14 = v83;
    v13 = v84;
    v18 = v82;
LABEL_6:
    v37 = v93;
    v36 = v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v21, v35, 1, v94);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v21, 1, v36) == 1)
    {
      result = sub_9944((uint64_t)v21, &qword_2039F8);
    }
    else
    {
      v70 = v75;
      sub_982C((uint64_t)v21, v75, &qword_203A00);
      sub_982C(v70, v76, &qword_203A00);
      if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
        v77 = (_QWORD *)sub_1344C0(0, v77[2] + 1, 1, (unint64_t)v77);
      v72 = v77[2];
      v71 = v77[3];
      if (v72 >= v71 >> 1)
        v77 = (_QWORD *)sub_1344C0(v71 > 1, v72 + 1, 1, (unint64_t)v77);
      v73 = v77;
      v77[2] = v72 + 1;
      result = sub_982C(v76, (uint64_t)v73+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(_QWORD *)(v93 + 72) * v72, &qword_203A00);
      v21 = v87;
    }
    v31 = v99;
    v33 = v100;
  }
  v42 = v33 + 5;
  if (v33 + 5 >= v89)
  {
LABEL_36:
    swift_release(v92);
    return (uint64_t)v77;
  }
  v40 = *(_QWORD *)(v88 + 8 * v42);
  if (v40)
  {
    v41 = v33 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    v41 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v41 >= v89)
      goto LABEL_36;
    v40 = *(_QWORD *)(v88 + 8 * v41);
    ++v42;
    if (v40)
      goto LABEL_26;
  }
LABEL_39:
  __break(1u);
  return result;
}

double sub_127348()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_174B80);
  v4 = v0;
  v2 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__durationFromPlayerStartTimeToFirstWordTime);
}

id sub_1273D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char **v10;
  char **v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  id v20;
  NSString v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  Class v30;
  id v31;
  _QWORD v33[2];
  uint64_t v34;
  _BYTE v35[72];
  _BYTE v36[80];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  __chkstk_darwin(v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptModel.Speaker(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  sub_2808C(v1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_speaker, (uint64_t)v4, &qword_2001B8);
  v10 = &selRef_boundingRectWithSize_options_attributes_context_;
  v11 = &selRef_layoutDirection;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_9944((uint64_t)v4, &qword_2001B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
    inited = swift_initStackObject(v12, v35);
    *(_OWORD *)(inited + 16) = xmmword_16B3D0;
    *(_QWORD *)(inited + 32) = static NSAttributedStringKey.contentType.getter();
    *(_QWORD *)(inited + 64) = &type metadata for TranscriptSelectionContentType;
    *(_BYTE *)(inited + 40) = 0;
    v14 = sub_CA4A4(inited);
    v15 = TranscriptModel.Speaker.name.getter(v14);
    v17 = v16;
    v33[1] = v15;
    v34 = v16;
    swift_bridgeObjectRetain(v16);
    v18._countAndFlagsBits = 10;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    swift_bridgeObjectRelease(v17);
    v19 = v34;
    v20 = objc_allocWithZone((Class)NSAttributedString);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    type metadata accessor for Key(0);
    sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v20, "initWithString:attributes:", v21, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v11 = &selRef_layoutDirection;
    objc_msgSend(v9, "appendAttributedString:", v23);

    v10 = &selRef_boundingRectWithSize_options_attributes_context_;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
  v25 = swift_initStackObject(v24, v36);
  *(_OWORD *)(v25 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v25 + 32) = static NSAttributedStringKey.contentType.getter();
  *(_QWORD *)(v25 + 64) = &type metadata for TranscriptSelectionContentType;
  *(_BYTE *)(v25 + 40) = 1;
  v26 = sub_CA4A4(v25);
  v27 = *(_QWORD *)(v1 + 56);
  v28 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(v27);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  type metadata accessor for Key(0);
  sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
  v30 = Dictionary._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v28, v10[411], v29, v30, swift_bridgeObjectRelease(v26).n128_f64[0]);

  objc_msgSend(v9, v11[184], v31);
  return v9;
}

uint64_t sub_127758()
{
  return sub_127780((uint64_t)&unk_1748E8, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
}

uint64_t sub_12776C()
{
  return sub_127780((uint64_t)&unk_174910, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime);
}

uint64_t sub_127780(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(_QWORD *)(v2 + *a2);
}

uint64_t sub_12780C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_174B58);
  v4 = v0;
  v2 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__isSelected);
}

double sub_127898()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t KeyPath;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v8;

  v1 = *(_BYTE **)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
  KeyPath = swift_getKeyPath(&unk_174988);
  v8 = v1;
  v3 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v3);
  swift_release(KeyPath);
  if (v1[OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive] == 1
    && (v4 = *(_BYTE **)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_presentationContext),
        v5 = swift_getKeyPath(&unk_174BA8),
        v8 = v4,
        v6 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30), ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, v5, v6), swift_release(v5), v4[16] == 1)&& !v4[48]&& v4[40] != 128)
  {
    return 1.05;
  }
  else
  {
    return 1.0;
  }
}

uint64_t sub_1279C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, double a9, double a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v13 = v12;
  v21 = v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime;
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  v22 = v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime;
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__durationFromPlayerStartTimeToFirstWordTime) = 0;
  *(_BYTE *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__isSelected) = 0;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange) = 0;
  *(_OWORD *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState) = xmmword_16B100;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__subscriptions) = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()(a1);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(double *)(v12 + 32) = a9;
  *(double *)(v12 + 40) = a10;
  *(_QWORD *)(v12 + 48) = a1;
  *(_QWORD *)(v12 + 56) = a2;
  v23 = type metadata accessor for TextContent.LiveText(0);
  v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  swift_bridgeObjectRetain_n(a2, 2);
  sub_12A034(a1, a2);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText) = v24;
  *(_QWORD *)(v13 + 64) = a3;
  sub_982C(a4, v13 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_speaker, &qword_2001B8);
  v25 = v13 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime;
  *(double *)v25 = a9;
  *(_BYTE *)(v25 + 8) = 0;
  v26 = v13 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime;
  *(double *)v26 = a10;
  *(_BYTE *)(v26 + 8) = 0;
  *(_QWORD *)v21 = a5;
  *(_BYTE *)(v21 + 8) = a6 & 1;
  *(_QWORD *)v22 = a7;
  *(_BYTE *)(v22 + 8) = a8 & 1;
  v27 = v13 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_splitStyle;
  v28 = type metadata accessor for TranscriptModel.Sentence.SplitStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a11, v28);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_presentationContext) = a12;
  return v13;
}

uint64_t sub_127BC4(uint64_t a1, unint64_t a2, double a3, double a4)
{
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  void *object;
  Swift::String v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  void *v31;
  Swift::String v32;
  _QWORD v34[2];

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  v8._countAndFlagsBits = 0x746E6F4374786554;
  v8._object = (void *)0xEF2844492E746E65;
  String.append(_:)(v8);
  Double.write<A>(to:)(v34, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a3);
  v9._countAndFlagsBits = 0x202E2E2E20;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  Double.write<A>(to:)(v34, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a4);
  v10._countAndFlagsBits = 44;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRetain(a2);
  v11 = sub_1120A0(20, a1, a2);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(a2);
  v19._countAndFlagsBits = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  object = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(object);
  v21._countAndFlagsBits = 0x202E2E2E20;
  v21._object = (void *)0xE500000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRetain(a2);
  v22 = sub_112128(0x14uLL, a1, a2);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = swift_bridgeObjectRelease(a2);
  v30._countAndFlagsBits = static String._fromSubstring(_:)(v22, v24, v26, v28, v29);
  v31 = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v31);
  v32._countAndFlagsBits = 41;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  return v34[0];
}

uint64_t sub_127D9C()
{
  uint64_t v0;

  return sub_127BC4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24));
}

BOOL sub_127DA8(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  char v12;
  _BOOL8 result;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v7 = a1[2];
  v6 = a1[3];
  v8 = *(_QWORD *)(a2 + 8);
  v10 = *(double *)(a2 + 16);
  v9 = *(double *)(a2 + 24);
  if (*(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v8)
  {
    if (v7 != v10)
      return 0;
    return v6 == v9;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v8, 0);
  result = 0;
  if ((v12 & 1) != 0 && v7 == v10)
    return v6 == v9;
  return result;
}

void sub_127E28(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_127EFC(a1, (uint64_t)&unk_1748E8, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime, a2);
}

double sub_127E3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1748E8);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_12E674, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_127EE8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_127EFC(a1, (uint64_t)&unk_174910, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime, a2);
}

void sub_127EFC(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v11 = v6;
  v8 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v8);
  swift_release(KeyPath);
  v9 = (uint64_t *)(v6 + *a3);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  *(_QWORD *)a4 = v10;
  *(_BYTE *)(a4 + 8) = (_BYTE)v9;
}

double sub_127FA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_174910);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_12E658, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_12804C(uint64_t result, double a2)
{
  *(double *)(result + OBJC_IVAR____TtC12NowPlayingUI11TextContent__durationFromPlayerStartTimeToFirstWordTime) = a2;
  return result;
}

void sub_12805C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_174B58);
  v6 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__isSelected);
}

double sub_1280F0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_174B58);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_12EB00, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_128198(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange) = a2;
  v3 = a2;

}

void sub_1281D0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  char v22;
  uint64_t v23;

  KeyPath = swift_getKeyPath(&unk_174960);
  v23 = v0;
  v2 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v23, KeyPath, v2);
  swift_release(KeyPath);
  v3 = *(char **)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState + 8);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
  v6 = swift_getKeyPath(&unk_174988);
  v21 = v5;
  if (v3 == (_BYTE *)&dword_0 + 1)
  {
    v22 = 0;
    v23 = v5;
    v7 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v23, v6, sub_12EAC4, v20, (char *)&type metadata for () + 8, v7);
    swift_release(v6);
    v8 = swift_getKeyPath(&unk_1749B0);
    __chkstk_darwin(v8);
    v16 = 0;
    v17 = 0;
    v15 = v5;
    v18 = 1;
    v23 = v5;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v23, v8, sub_12E7BC, v14, (char *)&type metadata for () + 8, v7);
    swift_release(v8);
    return;
  }
  v22 = 1;
  v23 = v5;
  v9 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  v10 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v23, v6, sub_12E798, v20, (char *)&type metadata for () + 8, v9);
  swift_release(v6);
  v19 = v4;
  if (!v3)
    goto LABEL_6;
  v11 = *(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition]
                  + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
  v12 = *(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition]
                  + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
  if (v12 >> 14 < v11 >> 14)
  {
    __break(1u);
LABEL_6:
    v11 = 0;
    v12 = 0;
  }
  v13 = swift_getKeyPath(&unk_1749B0);
  __chkstk_darwin(v13);
  v15 = v5;
  v16 = v11;
  v17 = v12;
  v18 = v3 == 0;
  v23 = v5;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v23, v13, sub_12E7BC, v14, (char *)&type metadata for () + 8, v9);
  swift_release(v13);
  sub_4375C(v3);
}

void *sub_1284C0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_174960);
  v5 = v0;
  v2 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v5, KeyPath, v2);
  swift_release(KeyPath);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState);
  sub_15450(v3);
  return v3;
}

id sub_128564@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_174960);
  v9 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState + 8);
  *a2 = v6;
  a2[1] = v7;
  return sub_15450(v6);
}

double sub_128600(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[7];
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_174960);
  v8[2] = v4;
  v8[3] = v2;
  v8[4] = v3;
  v9 = v4;
  sub_15450(v2);
  v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_12EB14, v8, (char *)&type metadata for () + 8, v6);
  sub_4375C(v2);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_1286C8(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v4;
  void *v5;

  v4 = (_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState);
  v5 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState);
  *v4 = a2;
  v4[1] = a3;
  sub_15450(a2);
  sub_15450(a2);
  sub_4375C(v5);
  sub_1281D0();
  sub_4375C(a2);
}

uint64_t sub_12874C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  char v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v28 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  KeyPath = swift_getKeyPath(&unk_174B58);
  v33 = v0;
  v34 = 1;
  aBlock[0] = v0;
  v14 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, KeyPath, sub_12EA70, v32, (char *)&type metadata for () + 8, v14);
  swift_release(KeyPath);
  sub_7748();
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v10, 0.3);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  aBlock[4] = sub_12EA88;
  v36 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_32;
  v18 = _Block_copy(aBlock);
  v19 = v36;
  swift_retain();
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v23 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
  v24 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v28, v21);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v5, v2, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v2, v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  return ((uint64_t (*)(char *, uint64_t))v17)(v12, v27);
}

double sub_128A4C(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  double result;
  _QWORD v5[3];
  char v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_174B58);
  v5[2] = a1;
  v6 = 0;
  v7 = a1;
  v3 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_12EB00, v5, (char *)&type metadata for () + 8, v3);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

_QWORD *sub_128AF0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_speaker, &qword_2001B8);
  v1 = (char *)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_splitStyle;
  v2 = type metadata accessor for TranscriptModel.Sentence.SplitStyle(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_presentationContext));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText));

  sub_4375C(*(id *)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__viewState));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__subscriptions));
  v3 = (char *)v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent___observationRegistrar;
  v4 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_128BE0()
{
  uint64_t v0;

  sub_128AF0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_128C04()
{
  return type metadata accessor for TextContent(0);
}

uint64_t type metadata accessor for TextContent(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_203600, (uint64_t)&nominal type descriptor for TextContent);
}

void sub_128C20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[17];

  v8[0] = " ";
  v8[1] = &unk_1746B0;
  v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_128D34(319);
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    v8[4] = &unk_1746C8;
    v8[5] = &unk_1746C8;
    v8[6] = &unk_1746C8;
    v8[7] = &unk_1746C8;
    v4 = type metadata accessor for TranscriptModel.Sentence.SplitStyle(319);
    if (v5 <= 0x3F)
    {
      v8[8] = *(_QWORD *)(v4 - 8) + 64;
      v8[9] = (char *)&value witness table for Builtin.NativeObject + 64;
      v8[10] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[11] = &unk_1746E0;
      v8[12] = (char *)&value witness table for Builtin.NativeObject + 64;
      v8[13] = &unk_1746F8;
      v8[14] = &unk_174710;
      v8[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6 = type metadata accessor for ObservationRegistrar(319);
      if (v7 <= 0x3F)
      {
        v8[16] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 17, v8, a1 + 80);
      }
    }
  }
}

void sub_128D34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_203610)
  {
    v2 = type metadata accessor for TranscriptModel.Speaker(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_203610);
  }
}

uint64_t sub_128D88()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime);
}

uint64_t sub_128DA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime);
}

uint64_t sub_128DB8(uint64_t a1, uint64_t a2)
{
  return sub_128E90(a1, a2, (uint64_t)&unk_1748E8, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
}

double sub_128DCC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_1748E8);
  v9 = v2;
  v10 = a1;
  v11 = a2 & 1;
  v12 = v2;
  v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_12E674, &v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_128E7C(uint64_t a1, uint64_t a2)
{
  return sub_128E90(a1, a2, (uint64_t)&unk_174910, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime);
}

uint64_t sub_128E90(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a3);
  v9 = v4;
  v7 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v7);
  swift_release(KeyPath);
  return *(_QWORD *)(v4 + *a4);
}

double sub_128F20(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_174910);
  v9 = v2;
  v10 = a1;
  v11 = a2 & 1;
  v12 = v2;
  v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_12E658, &v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_128FD0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_174960);
  v9 = v2;
  v10 = a1;
  v11 = a2;
  v12 = v2;
  v6 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_12E754, &v8, (char *)&type metadata for () + 8, v6);
  sub_4375C(a1);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_129090@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(*v1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 32);
  return swift_bridgeObjectRetain(v3);
}

uint64_t sub_1290A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_174A50);
  v8[0] = v1;
  v4 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v4);
  swift_release(KeyPath);
  v5 = v1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent, v8, 0, 0);
  v6 = type metadata accessor for AttributedString(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v5, v6);
}

uint64_t sub_12916C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_174A50);
  v9[0] = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent;
  swift_beginAccess(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent, v9, 0, 0);
  v7 = type metadata accessor for AttributedString(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v6, v7);
}

uint64_t sub_129230(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = type metadata accessor for AttributedString(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  KeyPath = swift_getKeyPath(&unk_174A50);
  v15 = v9;
  v16 = v8;
  v17 = v9;
  v11 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v17, KeyPath, sub_12EAD8, v14, (char *)&type metadata for () + 8, v11);
  v12 = swift_release(KeyPath);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v8, v4, v12);
}

uint64_t sub_12933C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent;
  swift_beginAccess(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent, v6, 33, 0);
  v4 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess(v6);
}

uint64_t sub_1293B8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_174A28);
  v4 = v0;
  v2 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isBeingDisplayed);
}

void sub_129444(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_174A28);
  v6 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isBeingDisplayed);
}

double sub_1294D8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_174A28);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_90130, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_129580(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isBeingDisplayed;
  *(_BYTE *)(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isBeingDisplayed) = a2;
  KeyPath = swift_getKeyPath(&unk_174A28);
  v7 = a1;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  if (*(_BYTE *)(a1 + v3) == 1)
  {
    v6 = swift_getKeyPath(&unk_1749D8);
    v7 = a1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, v6, v5);
    swift_release(v6);
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__dirtyString) == 1)
      sub_12A1E4();
  }
}

uint64_t sub_129674(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[3];
  __int128 v11;

  KeyPath = swift_getKeyPath(&unk_174A00);
  v10[0] = v2;
  v6 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v10, KeyPath, v6);
  swift_release(KeyPath);
  v10[0] = v2;
  v7 = swift_getKeyPath(&unk_174A00);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v10, v7, v6);
  swift_release(v7);
  swift_beginAccess(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v10, 33, 0);
  LOBYTE(a2) = sub_12C028(&v11, a1, a2);
  swift_endAccess(v10);
  v10[0] = v2;
  v8 = swift_getKeyPath(&unk_174A00);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v10, v8, v6);
  result = swift_release(v8);
  if ((a2 & 1) != 0)
    return sub_12A1E4();
  return result;
}

uint64_t sub_1297B4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[3];

  KeyPath = swift_getKeyPath(&unk_174A00);
  v11[0] = v2;
  v6 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v11, KeyPath, v6);
  swift_release(KeyPath);
  v11[0] = v2;
  v7 = swift_getKeyPath(&unk_174A00);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v11, v7, v6);
  swift_release(v7);
  swift_beginAccess(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v11, 33, 0);
  sub_12DFB8(a1, a2);
  LOBYTE(a2) = v8;
  swift_endAccess(v11);
  v11[0] = v2;
  v9 = swift_getKeyPath(&unk_174A00);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v11, v9, v6);
  result = swift_release(v9);
  if ((a2 & 1) == 0)
    return sub_12A1E4();
  return result;
}

uint64_t sub_1298F0(unint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[2];
  char v14;

  KeyPath = swift_getKeyPath(&off_1748C0);
  *(_QWORD *)&v13[0] = v3;
  v8 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v13, KeyPath, v8);
  result = swift_release(KeyPath);
  v10 = v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange + 16) & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return result;
    goto LABEL_7;
  }
  if ((a3 & 1) != 0 || (*(_QWORD *)v10 ^ a1) >> 14 || (*(_QWORD *)(v10 + 8) ^ a2) >= 0x4000)
  {
LABEL_7:
    sub_12A1E4();
    v11 = swift_getKeyPath(&off_1748C0);
    *(_QWORD *)&v13[0] = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v13, v11, v8);
    result = swift_release(v11);
    if (*(_BYTE *)(v10 + 16) == 1)
    {
      v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText_activeSearchResultFrame);
      memset(v13, 0, sizeof(v13));
      v14 = 1;
      swift_retain(v12);
      CurrentValueSubject.send(_:)(v13);
      return swift_release(v12);
    }
  }
  return result;
}

uint64_t sub_129A4C()
{
  return sub_129BB0((uint64_t)&off_1748C0, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange);
}

uint64_t sub_129A60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v4 = a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange);
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(_BYTE *)(v4 + 16);
  *(_QWORD *)v4 = a2;
  *(_QWORD *)(v4 + 8) = a3;
  *(_BYTE *)(v4 + 16) = a4 & 1;
  return sub_1298F0(v5, v6, v7);
}

void sub_129AB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;

  v4 = v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange + 8);
  v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange + 16);
  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  KeyPath = swift_getKeyPath(&unk_1749B0);
  v10 = v3;
  v9 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v9);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
  {
    if (v7)
      return;
LABEL_7:
    sub_12A1E4();
    return;
  }
  if ((v7 & 1) != 0 || (*(_QWORD *)v4 ^ v6) >> 14 || (*(_QWORD *)(v4 + 8) ^ v5) >= 0x4000)
    goto LABEL_7;
}

uint64_t sub_129B9C()
{
  return sub_129BB0((uint64_t)&unk_1749B0, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange);
}

uint64_t sub_129BB0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(_QWORD *)(v2 + *a2);
}

__n128 sub_129C3C@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  unsigned __int8 v6;
  __n128 result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1749B0);
  v8 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange + 16);
  result = *(__n128 *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange);
  *a2 = result;
  a2[1].n128_u8[0] = v6;
  return result;
}

double sub_129CDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  double result;
  _QWORD v9[5];
  char v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_1749B0);
  v9[2] = v5;
  v9[3] = v2;
  v9[4] = v3;
  v10 = v4;
  v11 = v5;
  v7 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_12E7BC, v9, (char *)&type metadata for () + 8, v7);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_129D94()
{
  return sub_129DA8((uint64_t)&unk_174988, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive);
}

uint64_t sub_129DA8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v2 + *a2);
}

void sub_129E2C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_129E40(a1, (uint64_t)&unk_174988, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive, a2);
}

void sub_129E40(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v9 = v6;
  v8 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v8);
  swift_release(KeyPath);
  *a4 = *(_BYTE *)(v6 + *a3);
}

double sub_129ED8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_174988);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_12EAC4, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_129F80(uint64_t a1, char a2)
{
  uint64_t v3;
  int v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v3 = OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive;
  v4 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive);
  *(_BYTE *)(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive) = a2;
  KeyPath = swift_getKeyPath(&unk_174988);
  v7 = a1;
  v6 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v6);
  swift_release(KeyPath);
  if (v4 != *(unsigned __int8 *)(a1 + v3))
    sub_12A1E4();
}

uint64_t sub_12A034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v19[2];
  char v20;

  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributedString(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isBeingDisplayed) = 0;
  v12 = v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange;
  *(_QWORD *)v12 = 0;
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = 1;
  v13 = v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange;
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 1;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive) = 0;
  v14 = OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText_activeSearchResultFrame;
  memset(v19, 0, sizeof(v19));
  v20 = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE270);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = CurrentValueSubject.init(_:)(v19);
  *(_QWORD *)(v2 + v14) = v16;
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__dirtyString) = 0;
  ObservationRegistrar.init()(v16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v17 = swift_bridgeObjectRetain(a2);
  AttributeContainer.init()(v17);
  AttributedString.init(_:attributes:)(a1, a2, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v2 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent, v11, v8);
  return v2;
}

uint64_t sub_12A1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD *, _QWORD);
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD v108[4];
  uint64_t v109;
  char v110[40];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2039F8);
  v3 = __chkstk_darwin(v2);
  v100 = (uint64_t)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v94 - v6;
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v94 - v9;
  __chkstk_darwin(v8);
  v99 = (uint64_t)&v94 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A00);
  v106 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v97 = (uint64_t)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v94 - v16;
  __chkstk_darwin(v15);
  v96 = (uint64_t)&v94 - v18;
  v19 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v19);
  v103 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for AttributedString(0);
  v21 = *(_QWORD *)(v104 - 8);
  v22 = __chkstk_darwin(v104);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v107 = (char *)&v94 - v25;
  KeyPath = swift_getKeyPath(&unk_174A28);
  v27 = v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText___observationRegistrar;
  v108[0] = v1;
  v28 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  v105 = v27;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v108, KeyPath, v28);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isBeingDisplayed) & 1) != 0)
  {
    v98 = v24;
    v101 = v21;
    v29 = *(_QWORD *)(v1 + 16);
    v30 = *(_QWORD *)(v1 + 24);
    v31 = swift_bridgeObjectRetain(v30);
    v32 = v103;
    AttributeContainer.init()(v31);
    v33 = (uint64_t)v107;
    AttributedString.init(_:attributes:)(v29, v30, v32);
    v34 = swift_getKeyPath(&unk_1749B0);
    v108[0] = v1;
    v103 = (char *)v28;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v108, v34, v28);
    swift_release(v34);
    v35 = (uint64_t *)(v1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange);
    v36 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange + 16);
    v37 = v104;
    v38 = v1;
    v102 = v1;
    if ((v36 & 1) == 0)
    {
      v39 = *v35;
      v95 = v35[1];
      v40 = v101;
      v41 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v98, v33, v104);
      v42 = v33;
      v43 = v99;
      sub_12AB24(v41, v39, v95, v99);
      v44 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v38 = v102;
      v45 = v41;
      v46 = v43;
      v33 = v42;
      v44(v45, v37);
      v47 = v106;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v46, 1, v12) == 1)
      {
        v48 = &qword_2039F8;
        v49 = v46;
      }
      else
      {
        v52 = v46;
        v53 = v96;
        sub_982C(v52, v96, &qword_203A00);
        sub_2808C(v53, (uint64_t)v10, &qword_203A00);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v10, 0, 1, v12);
        sub_12AF40((uint64_t)v10, (uint64_t (*)(uint64_t))sub_9980, (uint64_t)&type metadata for TranscriptTextContentRenderer.Read);
        sub_9944((uint64_t)v10, &qword_2039F8);
        v49 = v53;
        v48 = &qword_203A00;
      }
      sub_9944(v49, v48);
    }
    v54 = swift_getKeyPath(&unk_174A00);
    v108[0] = v38;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v108, v54, v103);
    swift_release(v54);
    v55 = (uint64_t *)(v38 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges);
    swift_beginAccess(v38 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v110, 0, 0);
    v56 = *v55;
    v57 = swift_bridgeObjectRetain(v56);
    v58 = sub_126B70(v57, v33);
    swift_bridgeObjectRelease(v56);
    v59 = v58;
    v60 = *(_QWORD *)(v58 + 16);
    v99 = 0;
    v96 = v58;
    if (v60)
    {
      v61 = v106;
      v62 = v59 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
      v63 = *(_QWORD *)(v106 + 72);
      swift_bridgeObjectRetain(v59);
      while (1)
      {
        sub_2808C(v62, (uint64_t)v7, &qword_203A00);
        v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v64(v7, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v7, 1, v12) == 1)
          break;
        sub_982C((uint64_t)v7, (uint64_t)v17, &qword_203A00);
        sub_2808C((uint64_t)v17, (uint64_t)v10, &qword_203A00);
        v64(v10, 0, 1, v12);
        sub_12AF40((uint64_t)v10, (uint64_t (*)(uint64_t))sub_98B4, (uint64_t)&type metadata for TranscriptTextContentRenderer.SecondaryHighlight);
        v61 = v106;
        sub_9944((uint64_t)v10, &qword_2039F8);
        sub_9944((uint64_t)v17, &qword_203A00);
        v62 += v63;
        if (!--v60)
          goto LABEL_14;
      }
    }
    else
    {
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
      swift_bridgeObjectRetain(v58);
LABEL_14:
      v64(v7, 1, 1, v12);
    }
    swift_bridgeObjectRelease_n(v96, 2);
    v65 = swift_getKeyPath(&off_1748C0);
    v66 = v102;
    v108[0] = v102;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v108, v65, v103);
    swift_release(v65);
    v67 = (uint64_t *)(v66 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange);
    v68 = v104;
    if (*(_BYTE *)(v66 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange + 16) == 1)
    {
      v69 = v101;
      v70 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v98, v107, v104);
    }
    else
    {
      v72 = *v67;
      v71 = v67[1];
      v73 = v104;
      v74 = v101;
      v75 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
      v70 = (uint64_t)v98;
      v75(v98, v107, v104);
      v76 = v71;
      v77 = v100;
      sub_12AB24(v70, v72, v76, v100);
      v78 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
      v68 = v73;
      v66 = v102;
      v78(v70, v68);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v77, 1, v12) == 1)
      {
        v79 = &qword_2039F8;
        v80 = v77;
      }
      else
      {
        v81 = v77;
        v82 = v97;
        sub_982C(v81, v97, &qword_203A00);
        sub_2808C(v82, (uint64_t)v10, &qword_203A00);
        v64(v10, 0, 1, v12);
        sub_12AF40((uint64_t)v10, (uint64_t (*)(uint64_t))sub_9870, (uint64_t)&type metadata for TranscriptTextContentRenderer.PrimaryHighlight);
        sub_9944((uint64_t)v10, &qword_2039F8);
        sub_2808C(v82, (uint64_t)v17, &qword_203A00);
        v83 = swift_getKeyPath(&unk_174A78);
        *(&v94 - 2) = __chkstk_darwin(v83);
        v84 = swift_getKeyPath(&unk_174AA8);
        v109 = static Color.black.getter();
        v85 = sub_27A8C(&qword_203A10, &qword_203A00, (uint64_t)&protocol conformance descriptor for Range<A>);
        v86 = (void (*)(_QWORD *, _QWORD))AttributedString.subscript.modify(v108, v17, v12, v85);
        v87 = sub_12E8AC();
        AttributedSubstring.subscript.setter(&v109, v84, v87);
        v86(v108, 0);
        sub_9944((uint64_t)v17, &qword_203A00);
        v80 = v82;
        v79 = &qword_203A00;
      }
      sub_9944(v80, v79);
      v69 = v101;
      v75((char *)v70, v107, v68);
    }
    v88 = swift_getKeyPath(&unk_174A50);
    __chkstk_darwin(v88);
    *(&v94 - 2) = v66;
    *(&v94 - 1) = v70;
    v108[0] = v66;
    v89 = v68;
    v90 = v103;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v108, v88, sub_12E878, &v94 - 4, (char *)&type metadata for () + 8, v103);
    swift_release(v88);
    v91 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v91(v70, v89);
    v92 = swift_getKeyPath(&unk_1749D8);
    __chkstk_darwin(v92);
    *(&v94 - 2) = v93;
    *((_BYTE *)&v94 - 8) = 0;
    v108[0] = v93;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v108, v92, sub_12EAEC, &v94 - 4, (char *)&type metadata for () + 8, v90);
    swift_release(v92);
    return ((uint64_t (*)(char *, uint64_t))v91)(v107, v89);
  }
  else
  {
    v50 = swift_getKeyPath(&unk_1749D8);
    __chkstk_darwin(v50);
    *(&v94 - 2) = v1;
    *((_BYTE *)&v94 - 8) = 1;
    v108[0] = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v108, v50, sub_12EAEC, &v94 - 4, (char *)&type metadata for () + 8, v28);
    return swift_release(v50);
  }
}

uint64_t sub_12AB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v54 = a3;
  v57 = a4;
  v58 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A58);
  v5 = __chkstk_darwin(v50);
  v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v48 = (char *)&v47 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A00);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  __chkstk_darwin(v8);
  v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A60);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v47 - v18;
  v20 = type metadata accessor for AttributedString.Index(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v52 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v47 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v53 = a1;
  v26(v13, a1, v10);
  v27 = sub_8330(&qword_203A68, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  AttributedString.Index.init<A>(_:within:)(v58, v13, v10, v27);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v28(v19, 1, v20) == 1)
  {
    v17 = v19;
LABEL_5:
    sub_9944((uint64_t)v17, &qword_203A60);
    v31 = 1;
    v33 = v56;
    v32 = v57;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v32, v31, 1, v33);
  }
  v29 = v19;
  v30 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v30(v25, v29, v20);
  v26(v13, v53, v10);
  AttributedString.Index.init<A>(_:within:)(v54, v13, v10, v27);
  if (v28(v17, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    goto LABEL_5;
  }
  v34 = v52;
  v35 = v30;
  v30(v52, v17, v20);
  v36 = sub_8330(&qword_203A70, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v25, v34, v20, v36);
  if ((result & 1) != 0)
  {
    v38 = v50;
    v39 = v48;
    v40 = &v48[*(int *)(v50 + 48)];
    v35(v48, v25, v20);
    v35(v40, v34, v20);
    v41 = v51;
    v42 = &v51[*(int *)(v38 + 48)];
    v43 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v43(v51, v39, v20);
    v43(v42, v40, v20);
    v44 = (uint64_t)v49;
    v35(v49, v41, v20);
    v45 = *(void (**)(char *, uint64_t))(v21 + 8);
    v45(v42, v20);
    v46 = &v41[*(int *)(v38 + 48)];
    v35(v41, v39, v20);
    v35(v46, v40, v20);
    v33 = v56;
    v35((char *)(v44 + *(int *)(v56 + 36)), v46, v20);
    v45(v41, v20);
    v32 = v57;
    sub_982C(v44, v57, &qword_203A00);
    v31 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v32, v31, 1, v33);
  }
  __break(1u);
  return result;
}

uint64_t sub_12AF40(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(_BYTE *, _QWORD);
  uint64_t v64;
  char v65;
  void (*v66)(_QWORD *, uint64_t);
  void (*v67)(_BYTE *, _QWORD);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t KeyPath;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _BYTE v109[32];

  v99 = a2;
  v100 = a3;
  v94 = (char *)a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A18);
  v4 = __chkstk_darwin(v3);
  v98 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v97 = (char *)&v81 - v6;
  v93 = type metadata accessor for Text.CustomAttributes(0);
  v96 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v95 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for AttributedString.Runs.Run(0);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v92 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A20);
  __chkstk_darwin(v9);
  v107 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AttributedString.Runs.Index(0);
  v104 = *(_QWORD *)(v11 - 8);
  v105 = v11;
  v12 = __chkstk_darwin(v11);
  v103 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v102 = (uint64_t *)((char *)&v81 - v14);
  v101 = type metadata accessor for AttributedString.Runs(0);
  v91 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for AttributedSubstring(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A28);
  v19 = __chkstk_darwin(v87);
  v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v81 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2039F8);
  __chkstk_darwin(v24);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A00);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v81 - v32;
  sub_2808C((uint64_t)v94, (uint64_t)v26, &qword_2039F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    v34 = &qword_2039F8;
    v35 = (uint64_t)v26;
  }
  else
  {
    v85 = v31;
    sub_982C((uint64_t)v26, (uint64_t)v33, &qword_203A00);
    v36 = sub_27A8C(&qword_203A10, &qword_203A00, (uint64_t)&protocol conformance descriptor for Range<A>);
    v94 = v33;
    v86 = v27;
    v84 = v36;
    v37 = AttributedString.subscript.getter(v33, v27);
    AttributedSubstring.runs.getter(v37);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v18, v90);
    v38 = v91;
    v39 = v101;
    v89 = *(_QWORD *)(v91 + 16);
    ((void (*)(char *, char *, uint64_t))v89)(v21, v16, v101);
    v40 = sub_8330(&qword_203A30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Runs, (uint64_t)&protocol conformance descriptor for AttributedString.Runs);
    v41 = v102;
    dispatch thunk of Collection.startIndex.getter(v102, v39, v40);
    v42 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v90 = (uint64_t)v16;
    v88 = v42;
    v42((uint64_t)v16, v39);
    v43 = v87;
    v44 = v104;
    v45 = v105;
    (*(void (**)(char *, _QWORD *, uint64_t))(v104 + 32))(&v21[*(int *)(v87 + 36)], v41, v105);
    sub_982C((uint64_t)v21, (uint64_t)v23, &qword_203A28);
    v46 = &v23[*(int *)(v43 + 36)];
    v91 = *(_QWORD *)(v44 + 16);
    v47 = v106;
    v48 = v44;
    v49 = v103;
    v50 = v41;
    v51 = v39;
    v52 = (uint64_t)v23;
    v53 = v48;
    v87 = v52;
    v83 = v40;
    v82 = v46;
    ((void (*)(_QWORD *, char *, uint64_t))v91)(v50, v46, v45);
    while (1)
    {
      dispatch thunk of Collection.endIndex.getter(v49, v51, v40);
      v64 = sub_8330(&qword_203A38, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Runs.Index);
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v50, v49, v45, v64);
      v66 = *(void (**)(_QWORD *, uint64_t))(v53 + 8);
      v66(v49, v45);
      v66(v50, v45);
      if ((v65 & 1) != 0)
        break;
      v67 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v109, v46, v51, v40);
      v69 = v107;
      v68 = v108;
      (*(void (**)(char *))(v47 + 16))(v107);
      v67(v109, 0);
      v70 = v90;
      ((void (*)(uint64_t, uint64_t, uint64_t))v89)(v90, v52, v51);
      dispatch thunk of Collection.formIndex(after:)(v46, v51, v40);
      v88(v70, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v69, 0, 1, v68);
      v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v69, 1, v68);
      v72 = (uint64_t)v94;
      if (v71 == 1)
        goto LABEL_11;
      v73 = v92;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v92, v69, v68);
      KeyPath = swift_getKeyPath(&off_174AE8);
      *(&v81 - 2) = __chkstk_darwin(KeyPath);
      v75 = swift_getKeyPath(&unk_174B18);
      v76 = sub_12E988();
      v77 = (uint64_t)v97;
      AttributedString.Runs.Run.subscript.getter(v75, v76);
      swift_release(v75);
      v78 = v96;
      v79 = v93;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v77, 1, v93) == 1)
      {
        v54 = v95;
        Text.CustomAttributes.init()();
        v55 = sub_9944(v77, &qword_203A18);
      }
      else
      {
        v54 = v95;
        v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 32))(v95, v77, v79);
      }
      v56 = v100;
      v57 = (uint64_t)v85;
      v58 = v99(v55);
      v59 = Text.CustomAttributes.add<A>(_:)(v58, v56, v58);
      AttributedString.Runs.Run.range.getter(v59);
      v60 = swift_getKeyPath(&off_174AE8);
      *(&v81 - 2) = __chkstk_darwin(v60);
      v61 = swift_getKeyPath(&unk_174B18);
      v62 = v98;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v98, v54, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v62, 0, 1, v79);
      v63 = (void (*)(_BYTE *, _QWORD))AttributedString.subscript.modify(v109, v57, v86, v84);
      AttributedSubstring.subscript.setter(v62, v61, v76);
      v63(v109, 0);
      sub_9944(v57, &qword_203A00);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v54, v79);
      v47 = v106;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v73, v108);
      v53 = v104;
      v45 = v105;
      v50 = v102;
      v49 = v103;
      v51 = v101;
      v52 = v87;
      v40 = v83;
      v46 = v82;
      ((void (*)(_QWORD *, char *, uint64_t))v91)(v102, v82, v105);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v107, 1, 1, v108);
    v72 = (uint64_t)v94;
LABEL_11:
    sub_9944(v52, &qword_203A28);
    v34 = &qword_203A00;
    v35 = v72;
  }
  return sub_9944(v35, v34);
}

uint64_t sub_12B7D8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v5[3];

  KeyPath = swift_getKeyPath(&unk_174A00);
  v5[0] = v0;
  v2 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v5, KeyPath, v2);
  swift_release(KeyPath);
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges);
  swift_beginAccess(v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v5, 0, 0);
  return swift_bridgeObjectRetain(*v3);
}

uint64_t sub_12B880(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges);
  swift_beginAccess(a1 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v6, 1, 0);
  v4 = *v3;
  *v3 = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_12B8EC()
{
  return sub_129DA8((uint64_t)&unk_1749D8, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__dirtyString);
}

double sub_12B900(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1749D8);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_12E848, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_12B9A8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent;
  v2 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText_activeSearchResultFrame));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges));
  v3 = (char *)v0 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText___observationRegistrar;
  v4 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_12BA48()
{
  return type metadata accessor for TextContent.LiveText(0);
}

uint64_t type metadata accessor for TextContent.LiveText(uint64_t a1)
{
  return sub_256F8(a1, qword_203778, (uint64_t)&nominal type descriptor for TextContent.LiveText);
}

uint64_t sub_12BA64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[10];

  v5[0] = &unk_1746B0;
  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = &unk_1746E0;
    v5[3] = &unk_174740;
    v5[4] = &unk_174740;
    v5[5] = &unk_1746E0;
    v5[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[8] = &unk_1746E0;
    result = type metadata accessor for ObservationRegistrar(319);
    if (v4 <= 0x3F)
    {
      v5[9] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 10, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContent.ID()
{
  return &type metadata for TextContent.ID;
}

unint64_t sub_12BB40()
{
  unint64_t result;

  result = qword_2039E0;
  if (!qword_2039E0)
  {
    result = swift_getWitnessTable(&unk_17475C, &type metadata for TextContent.ID);
    atomic_store(result, (unint64_t *)&qword_2039E0);
  }
  return result;
}

uint64_t sub_12BB84()
{
  uint64_t v0;
  Swift::String v1;
  char v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  char v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  char v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  char v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  void *v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  void *v44;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;

  v48 = 0;
  v49 = 0xE000000000000000;
  _StringGuts.grow(_:)(104);
  v1._object = (void *)0x800000000018D2F0;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  v2 = *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime + 8);
  v46 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime);
  v47 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
  v4._countAndFlagsBits = String.init<A>(describing:)(&v46, v3);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._object = (void *)0x8000000000184210;
  v6._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v6);
  v7 = *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime + 8);
  v46 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime);
  v47 = v7;
  v8._countAndFlagsBits = String.init<A>(describing:)(&v46, v3);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x8000000000184230;
  String.append(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_1748E8);
  v46 = v0;
  v12 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, KeyPath, v12);
  swift_release(KeyPath);
  v13 = *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime + 8);
  v46 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
  v47 = v13;
  v14._countAndFlagsBits = String.init<A>(describing:)(&v46, v3);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0xD000000000000011;
  v16._object = (void *)0x8000000000184250;
  String.append(_:)(v16);
  v17 = swift_getKeyPath(&unk_174910);
  v46 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, v17, v12);
  swift_release(v17);
  v18 = *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime + 8);
  v46 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime);
  v47 = v18;
  v19._countAndFlagsBits = String.init<A>(describing:)(&v46, v3);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 0x6E65746E6F43202CLL;
  v21._object = (void *)0xEB00000000203A74;
  String.append(_:)(v21);
  v23 = *(_QWORD *)(v0 + 48);
  v22 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain(v22);
  v24 = sub_1120A0(20, v23, v22);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = swift_bridgeObjectRelease(v22);
  v32._countAndFlagsBits = static String._fromSubstring(_:)(v24, v26, v28, v30, v31);
  v33 = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v33);
  v34._countAndFlagsBits = 0x202E2E2E20;
  v34._object = (void *)0xE500000000000000;
  String.append(_:)(v34);
  swift_bridgeObjectRetain(v22);
  v35 = sub_112128(0x14uLL, v23, v22);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = swift_bridgeObjectRelease(v22);
  v43._countAndFlagsBits = static String._fromSubstring(_:)(v35, v37, v39, v41, v42);
  v44 = v43._object;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v44);
  return v48;
}

uint64_t sub_12BEEC()
{
  return sub_12BB84();
}

unint64_t sub_12BF10()
{
  unint64_t result;

  result = qword_2039E8;
  if (!qword_2039E8)
  {
    result = swift_getWitnessTable(&unk_1747AC, &type metadata for TextContent.ID);
    atomic_store(result, (unint64_t *)&qword_2039E8);
  }
  return result;
}

uint64_t sub_12BF54(uint64_t a1)
{
  uint64_t result;

  result = sub_8330(&qword_2039F0, type metadata accessor for TextContent, (uint64_t)&unk_17484C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_12BF90(uint64_t a1)
{
  uint64_t result;

  result = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_12BFD4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v7 = *a1;
  v8 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v8, &v7, v5, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_12C028(_OWORD *a1, unint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  __int128 v18;
  uint64_t result;
  _QWORD v20[9];

  v7 = *v3;
  Hasher.init(_seed:)(v20, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(a2 >> 14);
  Hasher._combine(_:)(a3 >> 14);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = (unint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v10);
      v13 = *v12;
      v14 = v12[1] >> 14;
      if (a2 >> 14 == v13 >> 14 && v14 == a3 >> 14)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_8;
    }
    result = 0;
    v18 = *(_OWORD *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_12CDC4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v20[0];
    swift_bridgeObjectRelease(v17);
    *(_QWORD *)&v18 = a2;
    *((_QWORD *)&v18 + 1) = a3;
    result = 1;
  }
  *a1 = v18;
  return result;
}

uint64_t sub_12C178(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_12CF38(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_12C324(unsigned __int8 *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[9];

  v3 = v2;
  v6 = *v2;
  Hasher.init(_seed:)(v32, *(_QWORD *)(*v2 + 40));
  v7 = ContextActionType.rawValue.getter(a2);
  v9 = v8;
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v32, v7, v9);
  swift_bridgeObjectRelease(v9);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(v6 + 48) + v12));
    v15 = v14;
    v16 = ContextActionType.rawValue.getter(a2);
    if (v13 == v16 && v15 == v17)
    {
LABEL_17:
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease_n(v15, 2);
      goto LABEL_18;
    }
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(v6);
LABEL_18:
      result = 0;
      a2 = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v12);
      goto LABEL_19;
    }
    v21 = ~v11;
    while (1)
    {
      v12 = (v12 + 1) & v21;
      if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        break;
      v22 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(v6 + 48) + v12));
      v15 = v23;
      v24 = ContextActionType.rawValue.getter(a2);
      if (v22 == v24 && v15 == v25)
        goto LABEL_17;
      v27 = v25;
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v15, v24, v25, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v27);
      if ((v28 & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v32[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_12D0D0(a2, v12, isUniquelyReferenced_nonNull_native);
  v30 = *v3;
  *v3 = v32[0];
  swift_bridgeObjectRelease(v30);
  result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

Swift::Int sub_12C53C(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  Swift::Int result;
  Swift::Int v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int *v31;
  _QWORD *v32;
  uint64_t v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A78);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = result;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 0;
    v32 = (_QWORD *)(v3 + 56);
    v8 = 1 << *(_BYTE *)(v3 + 32);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v32[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v32[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v32[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                v2 = v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v32[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v11)
                    goto LABEL_36;
                  v18 = v32[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = (unint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v22 = *v20;
      v21 = v20[1];
      Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v22 >> 14);
      Hasher._combine(_:)(v21 >> 14);
      result = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v25);
        }
        while (v29 == -1);
        v13 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (unint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v22;
      v14[1] = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

void sub_12C814(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A88);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_12CAF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A90);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v33 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v33;
                v32 = 1 << *(_BYTE *)(v3 + 32);
                if (v32 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v32;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      v21 = ContextActionType.rawValue.getter(v20);
      v23 = v22;
      String.hash(into:)(v34, v21, v22);
      swift_bridgeObjectRelease(v23);
      v24 = Hasher._finalize()();
      v25 = -1 << *(_BYTE *)(v6 + 32);
      v26 = v24 & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

uint64_t sub_12CDC4(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[9];

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_15;
  v10 = v8 + 1;
  if ((a4 & 1) != 0)
  {
    sub_12C53C(v10);
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_12D2F4();
      goto LABEL_15;
    }
    sub_12D7C8(v10);
  }
  v11 = *v4;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v4 + 40));
  Hasher._combine(_:)(v7 >> 14);
  Hasher._combine(_:)(a2 >> 14);
  result = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v14 = (unint64_t *)(*(_QWORD *)(v11 + 48) + 16 * a3);
      v15 = *v14;
      v16 = v14[1] >> 14;
      if (v7 >> 14 == v15 >> 14 && v16 == a2 >> 14)
        goto LABEL_18;
      a3 = (a3 + 1) & v13;
    }
    while (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v19 = (unint64_t *)(*(_QWORD *)(v18 + 48) + 16 * a3);
  *v19 = v7;
  v19[1] = a2;
  v20 = *(_QWORD *)(v18 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (!v21)
  {
    *(_QWORD *)(v18 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_18:
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_203A80);
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v23);
  __break(1u);
  return result;
}

void sub_12CF38(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_12C814(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_12D488();
      goto LABEL_22;
    }
    sub_12DA6C(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_12D0D0(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  _QWORD v35[9];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_12CAF0(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_12D638();
LABEL_22:
      v31 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_BYTE *)(*(_QWORD *)(v31 + 48) + a2) = a1;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (!v33)
      {
        *(_QWORD *)(v31 + 16) = v34;
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_12DD18(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v35, *(_QWORD *)(*v3 + 40));
  v11 = ContextActionType.rawValue.getter(a1);
  v13 = v12;
  String.hash(into:)(v35, v11, v12);
  swift_bridgeObjectRelease(v13);
  v3 = v35;
  v14 = Hasher._finalize()();
  v15 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v16 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(v10 + 48) + a2));
  v3 = v17;
  v18 = ContextActionType.rawValue.getter(a1);
  if (v16 == v18 && v3 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_26;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v3, v18, v19, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
    v23 = ~v15;
    do
    {
      a2 = (a2 + 1) & v23;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v24 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(v10 + 48) + a2));
      v3 = v25;
      v26 = ContextActionType.rawValue.getter(a1);
      if (v24 == v26 && v3 == v27)
        goto LABEL_25;
      v29 = v27;
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v3, v26, v27, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v29);
    }
    while ((v30 & 1) == 0);
  }
LABEL_26:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ContextActionType);
  __break(1u);
}

void *sub_12D2F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A78);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_12D488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A88);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_12D638()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A90);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

Swift::Int sub_12D7C8(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  Swift::Int result;
  Swift::Int v6;
  int64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  Swift::Int *v30;
  int64_t v31;
  uint64_t v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A78);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = result;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v30 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v31 = (unint64_t)(v9 + 63) >> 6;
  v12 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v31)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v31)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v31)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = (unint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v32, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v21 >> 14);
    Hasher._combine(_:)(v22 >> 14);
    result = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v13 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (unint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v31)
  {
LABEL_36:
    result = swift_release(v3);
    v2 = v30;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v31)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_12DA6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A88);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_12DD18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203A90);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v32 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    v21 = ContextActionType.rawValue.getter(v20);
    v23 = v22;
    String.hash(into:)(v33, v21, v22);
    swift_bridgeObjectRelease(v23);
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v32;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_12DFB8(unint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[9];

  v3 = v2;
  v6 = *v3;
  Hasher.init(_seed:)(v21, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(a1 >> 14);
  v7 = a2 >> 14;
  Hasher._combine(_:)(a2 >> 14);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    return 0;
  v11 = ~v9;
  while (1)
  {
    v12 = (unint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v10);
    v13 = *v12;
    v14 = v12[1] >> 14;
    if (a1 >> 14 == v13 >> 14 && v14 == v7)
      break;
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      return 0;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v18 = *v3;
  v21[0] = *v3;
  *v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_12D2F4();
    v18 = v21[0];
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 16 * v10);
  sub_12E28C(v10);
  v19 = *v3;
  *v3 = v21[0];
  swift_bridgeObjectRelease(v19);
  return v16;
}

uint64_t sub_12E100(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v22, a1, a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_12D488();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_12E444(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

unint64_t sub_12E28C(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (unint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v20, *(_QWORD *)(v3 + 40));
        Hasher._combine(_:)(v11 >> 14);
        Hasher._combine(_:)(v12 >> 14);
        v13 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9)
            goto LABEL_5;
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(v3 + 48);
          v15 = (_OWORD *)(v14 + 16 * v2);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_12E444(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v21, *(_QWORD *)(v3 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v21, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_12E608(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_127EFC(a1, (uint64_t)&unk_1748E8, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime, a2);
}

void sub_12E630(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_127EFC(a1, (uint64_t)&unk_174910, &OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime, a2);
}

_QWORD *sub_12E658()
{
  return sub_12E804(&OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime);
}

_QWORD *sub_12E674()
{
  return sub_12E804(&OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
}

void sub_12E698()
{
  sub_12E6C0();
}

uint64_t sub_12E6AC()
{
  return sub_12E6FC();
}

void sub_12E6C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange) = v2;
  v4 = v2;

}

uint64_t sub_12E6FC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;

  v1 = *(_BYTE *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange;
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 16) = v1;
  return sub_1298F0(v3, v4, v5);
}

void sub_12E754()
{
  uint64_t v0;

  sub_1286C8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_12E770(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_129E40(a1, (uint64_t)&unk_174988, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive, a2);
}

void sub_12E798()
{
  uint64_t v0;

  sub_129F80(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_12E7BC()
{
  sub_12E7D0();
}

void sub_12E7D0()
{
  uint64_t v0;

  sub_129AB0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

_QWORD *sub_12E804(_QWORD *result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 16) + *result;
  *(_QWORD *)v3 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(v3 + 8) = v2;
  return result;
}

void sub_12E820(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_129E40(a1, (uint64_t)&unk_1749D8, &OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__dirtyString, a2);
}

void sub_12E848()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__dirtyString) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_12E878()
{
  uint64_t v0;

  return sub_12933C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_12E890()
{
  AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_12E8AC()
{
  unint64_t result;

  result = qword_203A08;
  if (!qword_203A08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_203A08);
  }
  return result;
}

void sub_12E8F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_12E8AC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_12E914()
{
  return 8;
}

uint64_t sub_12E920(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_12E928(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_12E934(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_12BFD4(a1, a2, a3, &qword_203A50) & 1;
}

uint64_t sub_12E954(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_203A50);
}

_QWORD *sub_12E960(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_12E96C()
{
  AttributeScopes.SwiftUIAttributes.customAttributes.getter();
  __break(1u);
}

unint64_t sub_12E988()
{
  unint64_t result;

  result = qword_203A40;
  if (!qword_203A40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.CustomContainerAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.CustomContainerAttribute);
    atomic_store(result, (unint64_t *)&qword_203A40);
  }
  return result;
}

void sub_12E9CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_12E988();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_12E9F0()
{
  return 8;
}

uint64_t sub_12E9FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_12BFD4(a1, a2, a3, &qword_203A48) & 1;
}

uint64_t sub_12EA1C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_203A48);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  return dispatch thunk of Hashable.hashValue.getter(v3, &protocol witness table for AnyKeyPath);
}

void sub_12EA70()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12NowPlayingUI11TextContent__isSelected) = *(_BYTE *)(v0 + 24);
}

double sub_12EA88()
{
  uint64_t v0;

  return sub_128A4C(v0);
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_32(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_12EAC4()
{
  sub_12E798();
}

uint64_t sub_12EAD8()
{
  return sub_12E878();
}

void sub_12EAEC()
{
  sub_12E848();
}

void sub_12EB00()
{
  sub_12EA70();
}

void sub_12EB14()
{
  sub_12E754();
}

uint64_t sub_12EB28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_12EB78()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  void **v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void *v18;
  void *v19;
  uint64_t v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for ContextActionPresentationController();
  objc_msgSendSuper2(&v21, "presentationTransitionWillBegin");
  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v2 = v1;
    v3 = OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView;
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView]);
    v4 = *(id *)&v0[v3];
    objc_msgSend(v2, "bounds");
    objc_msgSend(v4, "setFrame:");

    objc_msgSend(*(id *)&v0[v3], "setAlpha:", 0.0);
    v5 = objc_msgSend(v0, "presentedViewController");
    v6 = objc_msgSend(v5, "transitionCoordinator");

    if (v6)
    {
      v7 = swift_allocObject(&unk_1D2DB0, 24, 7);
      *(_QWORD *)(v7 + 16) = v0;
      v19 = sub_12F28C;
      v20 = v7;
      v15 = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_12EB28;
      v18 = &block_descriptor_6_2;
      v8 = _Block_copy(&v15);
      v9 = v20;
      v10 = v0;
      swift_release(v9);
      v11 = swift_allocObject(&unk_1D2E00, 24, 7);
      *(_QWORD *)(v11 + 16) = v10;
      v19 = sub_12F294;
      v20 = v11;
      v15 = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_12EB28;
      v18 = &block_descriptor_12_0;
      v12 = _Block_copy(&v15);
      v13 = v20;
      v14 = v10;
      objc_msgSend(v6, "animateAlongsideTransition:completion:", v8, v12, swift_release(v13).n128_f64[0]);

      _Block_release(v12);
      _Block_release(v8);
      swift_unknownObjectRelease(v6);
    }
    else
    {

    }
  }
}

void sub_12ED88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  char v8;

  v3 = OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView;
  v4 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView), "backgroundColor");
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v6 = v5;
  if (!v4)
  {
    if (!v5)
      return;
LABEL_8:

LABEL_9:
    objc_msgSend(*(id *)(a2 + v3), "setAlpha:", 1.0);
    return;
  }
  if (!v5)
  {
    v6 = v4;
    goto LABEL_8;
  }
  sub_12F2E4();
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
    goto LABEL_9;
}

void sub_12EEA0()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ContextActionPresentationController();
  objc_msgSendSuper2(&v9, "dismissalTransitionWillBegin");
  v1 = objc_msgSend(v0, "presentedViewController");
  v2 = objc_msgSend(v1, "transitionCoordinator");

  if (v2)
  {
    v3 = swift_allocObject(&unk_1D2D60, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v7[4] = sub_12F26C;
    v8 = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_12EB28;
    v7[3] = &block_descriptor_33;
    v4 = _Block_copy(v7);
    v5 = v8;
    v6 = v0;
    objc_msgSend(v2, "animateAlongsideTransition:completion:", v4, 0, swift_release(v5).n128_f64[0]);
    _Block_release(v4);
    swift_unknownObjectRelease(v2);
  }
}

id sub_12EFB0(uint64_t a1, uint64_t a2)
{
  id result;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView), "setAlpha:", 0.0);
  v4 = a2 + OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_dismissalAnimations;
  v5 = *(void (**)(uint64_t))(a2
                                      + OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_dismissalAnimations);
  if (v5)
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = swift_retain();
    v5(v7);
    return (id)sub_145A0((uint64_t)v5, v6);
  }
  return result;
}

id sub_12F0A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionPresentationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextActionPresentationController()
{
  return objc_opt_self(_TtC12NowPlayingUI35ContextActionPresentationController);
}

id sub_12F134(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  objc_super v14;

  v5 = OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView;
  v6 = objc_allocWithZone((Class)UIVisualEffectView);
  v7 = v2;
  v8 = objc_msgSend(v6, "initWithEffect:", 0);
  objc_msgSend(v8, "setAutoresizingMask:", 18);
  v9 = objc_allocWithZone((Class)UIColor);
  v10 = v8;
  v11 = objc_msgSend(v9, "initWithWhite:alpha:", 0.0, 0.4);
  objc_msgSend(v10, "setBackgroundColor:", v11);

  *(_QWORD *)&v2[v5] = v10;
  v12 = &v7[OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_dismissalAnimations];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;

  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for ContextActionPresentationController();
  return objc_msgSendSuper2(&v14, "initWithPresentedViewController:presentingViewController:", a1, a2);
}

uint64_t sub_12F248()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_12F26C(uint64_t a1)
{
  uint64_t v1;

  return sub_12EFB0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_33(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_12F28C(uint64_t a1)
{
  uint64_t v1;

  sub_12ED88(a1, *(_QWORD *)(v1 + 16));
}

id sub_12F294(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;

  v2 = *(_QWORD *)(v1 + 16);
  result = objc_msgSend(a1, "isCancelled");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI35ContextActionPresentationController_backgroundView), "setAlpha:", 0.0);
  return result;
}

unint64_t sub_12F2E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2034A0;
  if (!qword_2034A0)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_2034A0);
  }
  return result;
}

id sub_12F338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _BYTE v13[24];
  objc_super v14;

  v5 = (objc_class *)type metadata accessor for DisplayLinkHandler();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC12NowPlayingUIP33_D101EDA0648CD2CFE5435C114DF7055118DisplayLinkHandler__handler];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v14.receiver = v6;
  v14.super_class = v5;
  swift_retain();
  v8 = objc_msgSendSuper2(&v14, "init");
  v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "displayLinkWithTarget:selector:", v8, "handleDisplayLinkFired:");
  swift_beginAccess(&unk_203AD0, v13, 32, 0);
  v10 = v9;
  v11 = v8;
  objc_setAssociatedObject(v10, &unk_203AD0, v11, (char *)&dword_0 + 1);
  swift_endAccess(v13);

  swift_release(a2);
  return v10;
}

id sub_12F4EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayLinkHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DisplayLinkHandler()
{
  return objc_opt_self(_TtC12NowPlayingUIP33_D101EDA0648CD2CFE5435C114DF7055118DisplayLinkHandler);
}

void destroy for NowPlayingItemState(uint64_t a1)
{
  int v2;

  v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 != 255)
    sub_2F6A4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v2 & 1);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 48));

}

uint64_t initializeWithCopy for NowPlayingItemState(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  int v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = *(unsigned __int8 *)(a2 + 24);
  v7 = v4;
  if (v6 == 255)
  {
    *(_OWORD *)v5 = *(_OWORD *)(a2 + 8);
    *(_BYTE *)(v5 + 16) = *(_BYTE *)(a2 + 24);
  }
  else
  {
    v8 = v6 & 1;
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    sub_2FE40(v9, v10, v8);
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_BYTE *)(a1 + 24) = v8;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  swift_unknownObjectRetain(v11);
  v13 = v12;
  return a1;
}

uint64_t assignWithCopy for NowPlayingItemState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 *v7;
  __int128 *v8;
  int v9;
  char v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = (__int128 *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v9 == 255)
    {
      v11 = *v8;
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *v7 = v11;
    }
    else
    {
      v18 = v9 & 1;
      v19 = *(_QWORD *)(a2 + 8);
      v20 = *(_QWORD *)(a2 + 16);
      sub_2FE40(v19, v20, v9 & 1);
      *(_QWORD *)(a1 + 8) = v19;
      *(_QWORD *)(a1 + 16) = v20;
      *(_BYTE *)(a1 + 24) = v18;
    }
  }
  else if (v9 == 255)
  {
    sub_12F770(a1 + 8);
    v10 = *(_BYTE *)(a2 + 24);
    *v7 = *v8;
    *(_BYTE *)(a1 + 24) = v10;
  }
  else
  {
    v12 = v9 & 1;
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(_QWORD *)(a2 + 16);
    sub_2FE40(v13, v14, v9 & 1);
    v15 = *(_QWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a1 + 16);
    v17 = *(_BYTE *)(a1 + 24);
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_BYTE *)(a1 + 24) = v12;
    sub_2F6A4(v15, v16, v17);
  }
  v21 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v21;
  v22 = *(_QWORD *)(a1 + 48);
  v23 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v23;
  swift_unknownObjectRetain(v23);
  swift_unknownObjectRelease(v22);
  v24 = *(void **)(a1 + 56);
  v25 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v25;
  v26 = v25;

  return a1;
}

uint64_t sub_12F770(uint64_t a1)
{
  sub_2F6A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t assignWithTake for NowPlayingItemState(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = (_OWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a1 + 24);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(_QWORD *)(a1 + 16);
      *(_OWORD *)(a1 + 8) = *v5;
      *(_BYTE *)(a1 + 24) = v7 & 1;
      sub_2F6A4(v8, v9, v6 & 1);
      goto LABEL_6;
    }
    sub_12F770(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease(v10);
  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingItemState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingItemState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingItemState()
{
  return &type metadata for NowPlayingItemState;
}

uint64_t destroy for NowPlayingItemState.ID(uint64_t a1)
{
  return sub_2F6A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12NowPlayingUI19NowPlayingItemStateV2IDOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2FE40(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NowPlayingItemState.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2FE40(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2F6A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NowPlayingItemState.ID(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2F6A4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingItemState.ID()
{
  return &type metadata for NowPlayingItemState.ID;
}

uint64_t sub_12FA38()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  void *v25;
  uint64_t v26;
  _QWORD v27[2];
  _BYTE v28[24];
  uint64_t v29;
  unint64_t v30;
  id v31;
  _BYTE v32[8];
  _QWORD v33[3];
  _QWORD v34[3];
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v1 = v0;
  memset(v34, 0, sizeof(v34));
  v35 = -1;
  v36 = 0;
  v37 = 1;
  v38 = 0;
  v39 = 0;
  if ((sub_131180(v0, (uint64_t)v34) & 1) != 0)
    return 0x3E4C494E3CLL;
  v3 = (void *)0xE000000000000000;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(55);
  v29 = 0;
  v30 = 0xE000000000000000;
  v4._countAndFlagsBits = 4015177;
  v4._object = (void *)0xE300000000000000;
  String.append(_:)(v4);
  sub_982C(v0 + 8, (uint64_t)v33, (uint64_t *)&unk_1FC010);
  sub_982C((uint64_t)v33, (uint64_t)v28, (uint64_t *)&unk_1FC010);
  sub_40368((uint64_t)v33);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
  v6._countAndFlagsBits = String.init<A>(describing:)(v28, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 0x65646F736970650ALL;
  v8._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v8);
  sub_982C(v0, (uint64_t)v32, (uint64_t *)&unk_203B20);
  sub_982C((uint64_t)v32, (uint64_t)&v40, (uint64_t *)&unk_203B20);
  if (v40 && (v9 = objc_msgSend(v40, "title")) != 0)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v3 = v12;

  }
  else
  {
    v11 = 0;
  }
  v13._countAndFlagsBits = v11;
  v13._object = v3;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v3);
  v14._countAndFlagsBits = 0x64657370616C650ALL;
  v14._object = (void *)0xED00003D656D6954;
  String.append(_:)(v14);
  sub_982C(v1 + 32, (uint64_t)v28, &qword_1FB3B0);
  sub_982C((uint64_t)v28, (uint64_t)v27, &qword_1FB3B0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
  v16._countAndFlagsBits = String.init<A>(describing:)(v27, v15);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 0x754F6F656469760ALL;
  v18._object = (void *)0xED00003D74757074;
  String.append(_:)(v18);
  sub_982C(v1 + 48, (uint64_t)v27, &qword_203B30);
  sub_982C((uint64_t)v27, (uint64_t)&v31, &qword_203B30);
  sub_30974(v27);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_203B30);
  v20._countAndFlagsBits = String.init<A>(describing:)(&v31, v19);
  v21 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v21);
  v22._countAndFlagsBits = 0x3D6574756F720ALL;
  v22._object = (void *)0xE700000000000000;
  String.append(_:)(v22);
  sub_982C(v1 + 56, (uint64_t)&v31, &qword_1FB3D0);
  sub_982C((uint64_t)&v31, (uint64_t)&v26, &qword_1FB3D0);
  sub_30508(&v31);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3D0);
  v24._countAndFlagsBits = String.init<A>(describing:)(&v26, v23);
  v25 = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v25);
  return v29;
}

uint64_t sub_12FD3C()
{
  return sub_12FA38();
}

uint64_t sub_12FD74(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_131180((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_12FDBC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  Swift::String v4;
  void *object;
  uint64_t v7;

  if ((a3 & 1) != 0)
  {
    v7 = 0x3D44496D616441;
    v3 = sub_40324();
    v4._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v3);
    object = v4._object;
    String.append(_:)(v4);
    swift_bridgeObjectRelease(object);
  }
  else
  {
    v7 = 0x3D44495555;
    String.append(_:)(*(Swift::String *)&a1);
  }
  return v7;
}

Swift::Int sub_12FE4C()
{
  uint64_t v0;
  Swift::UInt64 v1;
  uint64_t v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5, 0);
  if ((v3 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(v5, v1, v2);
  }
  return Hasher._finalize()();
}

void sub_12FECC(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v3;
  uint64_t v4;

  v3 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v3);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 8);
    Hasher._combine(_:)(0);
    String.hash(into:)(a1, v3, v4);
  }
}

Swift::Int sub_12FF3C(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  uint64_t v3;
  char v4;
  _QWORD v6[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  Hasher.init(_seed:)(v6, a1);
  if ((v4 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v2);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(v6, v2, v3);
  }
  return Hasher._finalize()();
}

uint64_t sub_12FFB8()
{
  uint64_t v0;

  return sub_12FDBC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_12FFC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *a2;
  if ((a1[2] & 1) != 0)
  {
    if (v3 == v4)
      return *((unsigned __int8 *)a2 + 16);
    else
      return 0;
  }
  else if ((a2[2] & 1) != 0)
  {
    return 0;
  }
  else
  {
    v6 = a1[1];
    v7 = a2[1];
    if (v3 == v4 && v6 == v7)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v6, v4, v7, 0);
  }
}

unint64_t sub_130020()
{
  unint64_t result;

  result = qword_203B10;
  if (!qword_203B10)
  {
    result = swift_getWitnessTable(&unk_174C80, &type metadata for NowPlayingItemState.ID);
    atomic_store(result, (unint64_t *)&qword_203B10);
  }
  return result;
}

unint64_t sub_130064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t result;
  int64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  _BYTE v30[40];
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_203B38);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v28 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v7 = (char *)v35 + 8;
  v27 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain(v1);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v15 = (v6 - 1) & v6;
      v16 = __clz(__rbit64(v6)) | (v9 << 6);
      v17 = v9;
    }
    else
    {
      v18 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v18 >= v27)
      {
LABEL_36:
        sub_ECB8(v1);
        return (unint64_t)v3;
      }
      v19 = *(_QWORD *)(v28 + 8 * v18);
      v17 = v9 + 1;
      if (!v19)
      {
        v17 = v9 + 2;
        if (v9 + 2 >= v27)
          goto LABEL_36;
        v19 = *(_QWORD *)(v28 + 8 * v17);
        if (!v19)
        {
          v17 = v9 + 3;
          if (v9 + 3 >= v27)
            goto LABEL_36;
          v19 = *(_QWORD *)(v28 + 8 * v17);
          if (!v19)
          {
            v17 = v9 + 4;
            if (v9 + 4 >= v27)
              goto LABEL_36;
            v19 = *(_QWORD *)(v28 + 8 * v17);
            if (!v19)
            {
              v20 = v9 + 5;
              if (v9 + 5 >= v27)
                goto LABEL_36;
              v19 = *(_QWORD *)(v28 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  v17 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_41;
                  if (v17 >= v27)
                    goto LABEL_36;
                  v19 = *(_QWORD *)(v28 + 8 * v17);
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v17 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v15 = (v19 - 1) & v19;
      v16 = __clz(__rbit64(v19)) + (v17 << 6);
    }
    sub_13166C(*(_QWORD *)(v1 + 48) + 40 * v16, (uint64_t)v34);
    sub_CD54(*(_QWORD *)(v1 + 56) + 32 * v16, (uint64_t)v7);
    v32[0] = v35[0];
    v32[1] = v35[1];
    v33 = v36;
    v31[0] = v34[0];
    v31[1] = v34[1];
    sub_13166C((uint64_t)v31, (uint64_t)v30);
    if (!swift_dynamicCast(&v29, v30, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v29 = 0uLL;
      sub_1316A8((uint64_t)v31);
      swift_bridgeObjectRelease(*((_QWORD *)&v29 + 1));
LABEL_35:
      sub_ECB8(v1);
      swift_release(v3);
      return 0;
    }
    v21 = v29;
    sub_CD54((uint64_t)v32 + 8, (uint64_t)v30);
    sub_1316A8((uint64_t)v31);
    if ((swift_dynamicCast(&v29, v30, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
    {
      v29 = xmmword_174C40;
      swift_bridgeObjectRelease(*((_QWORD *)&v21 + 1));
      sub_1316E8(v29, *((unint64_t *)&v29 + 1));
      goto LABEL_35;
    }
    v22 = v29;
    result = sub_139E60(v21, *((uint64_t *)&v21 + 1));
    if ((v23 & 1) != 0)
    {
      v10 = v1;
      v11 = v7;
      v12 = 16 * result;
      v13 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8));
      *(_OWORD *)v13 = v21;
      v14 = v3[7] + v12;
      v7 = v11;
      v1 = v10;
      result = sub_1316FC(*(_QWORD *)v14, *(_QWORD *)(v14 + 8));
      *(_OWORD *)v14 = v22;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v21;
    *(_OWORD *)(v3[7] + 16 * result) = v22;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_39;
    v3[2] = v26;
LABEL_8:
    v9 = v17;
    v6 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_130438(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  int64_t v21;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 64);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v21 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
LABEL_22:
      v10 = 16 * v6;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v10);
      v12 = *v11;
      v13 = v11[1];
      v14 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v10);
      v16 = *v14;
      v15 = v14[1];
      swift_bridgeObjectRetain(v13);
      sub_131740(v16, v15);
      v17 = sub_139E60(v12, v13);
      v19 = v18;
      swift_bridgeObjectRelease(v13);
      if ((v19 & 1) != 0)
        __asm { BR              X8 }
      sub_1316FC(v16, v15);
      return 0;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_21;
      v8 = 2;
      if (v21 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_21;
      v8 = 3;
      if (v21 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
        goto LABEL_21;
      v8 = 4;
      if (v21 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 96);
      if (v7)
      {
LABEL_21:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_22;
      }
      v9 = 5;
      if (v21 > 5)
      {
        v7 = *(_QWORD *)(a1 + 104);
        if (v7)
        {
          v8 = 5;
          goto LABEL_21;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x130E48);
          }
          if (v8 >= v21)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_21;
        }
      }
    }
    return 1;
  }
  return 0;
}

void sub_130EFC(uint64_t a1, char a2)
{
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  if ((a2 & 1) == 0)
  {
    v4 = objc_msgSend(v2, "chapters");
    if (v4)
    {
      v5 = sub_F174(0, (unint64_t *)&qword_203B50, MPModelPodcastChapter_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_203B58);
      v8 = sub_131784();
      if ((Collection.isNotEmpty.getter(v7, v8) & 1) == 0)
      {
        swift_bridgeObjectRelease(v6);
        return;
      }
      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v21 = v6;
        else
          v21 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        v9 = _CocoaArrayWrapper.endIndex.getter(v21);
        swift_bridgeObjectRelease(v6);
        if (v9)
        {
LABEL_6:
          if (v9 < 1)
          {
            __break(1u);
            goto LABEL_34;
          }
          v10 = 0;
          v11 = *(double *)&a1;
          do
          {
            if ((v6 & 0xC000000000000001) != 0)
              v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v6);
            else
              v12 = *(id *)(v6 + 8 * v10 + 32);
            v13 = v12;
            objc_msgSend(v12, "startTime");
            if (v14 > v11
              || (objc_msgSend(v13, "startTime"), v16 = v15, v17 = objc_msgSend(v13, "duration"), v16 + v18 <= v11))
            {

            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
              v19 = _swiftEmptyArrayStorage[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
              v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v13);
              specialized ContiguousArray._endMutation()(v20);
            }
            ++v10;
          }
          while (v9 != v10);
          swift_bridgeObjectRelease(v6);
          v6 = (uint64_t)_swiftEmptyArrayStorage;
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
            goto LABEL_30;
LABEL_24:
          if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
          {
            if (!_swiftEmptyArrayStorage[2])
            {
LABEL_31:
              swift_release(_swiftEmptyArrayStorage);
              return;
            }
LABEL_26:
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0)
            {
              if (!_swiftEmptyArrayStorage[2])
              {
                __break(1u);
                return;
              }
              v22 = (id)_swiftEmptyArrayStorage[4];
LABEL_29:
              swift_release(v6);
              return;
            }
LABEL_34:
            specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
            goto LABEL_29;
          }
LABEL_30:
          v23 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
          v24 = _CocoaArrayWrapper.endIndex.getter(v23);
          swift_release(_swiftEmptyArrayStorage);
          if (!v24)
            goto LABEL_31;
          goto LABEL_26;
        }
      }
      else
      {
        v9 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
        if (v9)
          goto LABEL_6;
      }
      swift_bridgeObjectRelease(v6);
      v6 = (uint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_30;
      goto LABEL_24;
    }
  }
}

uint64_t sub_131180(uint64_t a1, uint64_t a2)
{
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  int v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  char v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  _BYTE v44[8];
  _BYTE v45[8];
  _BYTE v46[8];
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;

  sub_982C(a1 + 48, (uint64_t)v46, &qword_203B30);
  sub_982C(a2 + 48, (uint64_t)v45, &qword_203B30);
  sub_982C((uint64_t)v46, (uint64_t)&v47, &qword_203B30);
  v4 = v47;
  if (v47)
  {
    sub_982C((uint64_t)v45, (uint64_t)&v48, &qword_203B30);
    if (v48)
      v5 = objc_msgSend(v4, "isEqual:");
    else
      v5 = 0;
  }
  else
  {
    sub_982C((uint64_t)v45, (uint64_t)&v48, &qword_203B30);
    v5 = v48 == 0;
  }
  sub_982C(a1, (uint64_t)v44, (uint64_t *)&unk_203B20);
  sub_982C((uint64_t)v44, (uint64_t)&v51, (uint64_t *)&unk_203B20);
  if (v51 && (v6 = objc_msgSend(v51, "artworkInfo")) != 0)
  {
    v7 = v6;
    v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v9 = sub_130064(v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = 0;
  }
  sub_982C(a2, (uint64_t)&v43, (uint64_t *)&unk_203B20);
  sub_982C((uint64_t)&v43, (uint64_t)&v54, (uint64_t *)&unk_203B20);
  if (v54)
  {
    v10 = objc_msgSend(v54, "artworkInfo");
    if (v10)
    {
      v11 = v10;
      v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v13 = sub_130064(v12);
      swift_bridgeObjectRelease(v12);
      if (!v9)
        goto LABEL_13;
LABEL_16:
      if (v13)
      {
        v14 = sub_130438(v9, v13);
        swift_bridgeObjectRelease(v13);
      }
      else
      {
        v14 = 0;
      }
      goto LABEL_19;
    }
  }
  v13 = 0;
  if (v9)
    goto LABEL_16;
LABEL_13:
  if (v13)
  {
    v14 = 0;
    v9 = v13;
LABEL_19:
    swift_bridgeObjectRelease(v9);
    goto LABEL_20;
  }
  v14 = 1;
LABEL_20:
  sub_982C((uint64_t)v44, (uint64_t)&v50, (uint64_t *)&unk_203B20);
  if (v50)
    v15 = objc_msgSend(v50, "shouldShowChapterArtwork");
  else
    v15 = 2;
  sub_982C((uint64_t)&v43, (uint64_t)&v53, (uint64_t *)&unk_203B20);
  v16 = v53 == 0;
  if (v53)
  {
    v17 = objc_msgSend(v53, "shouldShowChapterArtwork");
    if (v15 != 2)
      v16 = (v15 == 0) ^ v17;
  }
  else if (v15 != 2)
  {
    v16 = 0;
  }
  v18 = *(unsigned __int8 *)(a1 + 24);
  v19 = *(unsigned __int8 *)(a2 + 24);
  if (v18 == 255)
  {
    if (v19 == 255)
      goto LABEL_30;
    return 0;
  }
  if (v19 == 255)
    return 0;
  v25 = *(_QWORD *)(a1 + 8);
  v26 = *(_QWORD *)(a2 + 8);
  if ((v18 & 1) != 0)
  {
    if ((v19 & 1) == 0 || v25 != v26)
      return 0;
  }
  else
  {
    if ((v19 & 1) != 0)
      return 0;
    v27 = *(_QWORD *)(a1 + 16);
    v28 = *(_QWORD *)(a2 + 16);
    if ((v25 != v26 || v27 != v28) && (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v26, v28, 0) & 1) == 0)
      return 0;
  }
LABEL_30:
  sub_982C((uint64_t)v44, (uint64_t)&v49, (uint64_t *)&unk_203B20);
  if (v49 && (v20 = objc_msgSend(v49, "title")) != 0)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  sub_982C((uint64_t)&v43, (uint64_t)&v52, (uint64_t *)&unk_203B20);
  if (v52)
  {
    v29 = objc_msgSend(v52, "title");
    if (v29)
    {
      v30 = v29;
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v33 = v32;

      if (!v24)
        goto LABEL_44;
LABEL_47:
      if (!v33)
        goto LABEL_51;
      if (v22 == v31 && v24 == v33)
      {
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v33);
      }
      else
      {
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v31, v33, 0);
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v33);
        if ((v35 & 1) == 0)
          return 0;
      }
      goto LABEL_59;
    }
  }
  v31 = 0;
  v33 = 0;
  if (v24)
    goto LABEL_47;
LABEL_44:
  if (v33)
  {
    v24 = v33;
LABEL_51:
    swift_bridgeObjectRelease(v24);
    return 0;
  }
LABEL_59:
  v36 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
      v36 = 1;
    if ((v36 & 1) != 0)
      return 0;
  }
  v37 = *(void **)(a1 + 56);
  v38 = *(void **)(a2 + 56);
  if (v37)
  {
    if (!v38)
      return 0;
    sub_F174(0, &qword_1FBD80, MPAVRoute_ptr);
    v39 = v38;
    v40 = v37;
    v41 = static NSObject.== infix(_:_:)(v40, v39);

    if ((v41 & v5 & v14 & 1) == 0)
      return 0;
  }
  else
  {
    if (v38)
      v42 = 0;
    else
      v42 = v5;
    if ((v42 & v14 & 1) == 0)
      return 0;
  }
  return v16;
}

uint64_t sub_13166C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1316A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203B40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1316E8(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1316FC(result, a2);
  return result;
}

uint64_t sub_1316FC(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_131740(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

unint64_t sub_131784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_203B60;
  if (!qword_203B60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_203B58);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_203B60);
  }
  return result;
}

uint64_t sub_1317D0(id a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, char a6, unint64_t a7, id a8, double a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, char a14, uint64_t a15)
{
  unsigned int v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unsigned int v45;
  id v46;
  void *v47;
  void *v48;
  int v50;
  unsigned int v53;

  v20 = (a7 | a15) == 0;
  if (a7 && a15)
    v20 = objc_msgSend((id)a7, "isEqual:");
  v53 = v20;
  if (a1 && (v21 = objc_msgSend(a1, "artworkInfo")) != 0)
  {
    v22 = v21;
    v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v24 = sub_130064(v23);
    *(_QWORD *)&a9 = swift_bridgeObjectRelease(v23).n128_u64[0];
    v25 = a14;
    if (!a8)
      goto LABEL_11;
  }
  else
  {
    v24 = 0;
    v25 = a14;
    if (!a8)
      goto LABEL_11;
  }
  v26 = objc_msgSend(a8, "artworkInfo", a9);
  if (v26)
  {
    v27 = v26;
    v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v29 = sub_130064(v28);
    swift_bridgeObjectRelease(v28);
    goto LABEL_12;
  }
LABEL_11:
  v29 = 0;
LABEL_12:
  v30 = v25 & 1;
  if (v24)
  {
    if (v29)
    {
      v31 = sub_130438(v24, v29);
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v31 = 0;
    }
LABEL_18:
    swift_bridgeObjectRelease(v24);
    v32 = a4;
    if (a1)
      goto LABEL_19;
LABEL_27:
    if (!a8)
    {
      v37 = 1;
      v34 = 1;
      goto LABEL_37;
    }
    sub_130EFC(a13, v30);
    goto LABEL_29;
  }
  if (v29)
  {
    v31 = 0;
    v24 = v29;
    goto LABEL_18;
  }
  v31 = 1;
  v32 = a4;
  if (!a1)
    goto LABEL_27;
LABEL_19:
  sub_130EFC(a5, a6 & 1);
  v34 = v33;
  if (a8)
  {
    sub_130EFC(a13, v30);
    if (v34)
    {
      if (v35)
      {
        v36 = v35;
        v37 = objc_msgSend((id)v34, "isEqual:", v36);

        v38 = objc_msgSend(a1, "shouldShowChapterArtwork");
LABEL_33:
        v34 = v38 ^ objc_msgSend(a8, "shouldShowChapterArtwork") ^ 1;
        goto LABEL_37;
      }
LABEL_24:

      v38 = objc_msgSend(a1, "shouldShowChapterArtwork");
      v37 = 0;
      if (!a8)
      {
        v34 = 0;
        goto LABEL_37;
      }
      goto LABEL_33;
    }
LABEL_29:
    v37 = v35 == 0;
    if (v35)

    if (a1)
    {
      v38 = objc_msgSend(a1, "shouldShowChapterArtwork");
      goto LABEL_33;
    }
    objc_msgSend(a8, "shouldShowChapterArtwork");
    v34 = 0;
    goto LABEL_37;
  }
  if (v33)
    goto LABEL_24;
  objc_msgSend(a1, "shouldShowChapterArtwork");
  v37 = 1;
LABEL_37:
  if (v32 == 255)
  {
    if (a12 == 255)
      goto LABEL_39;
    return 0;
  }
  if (a12 == 255)
    return 0;
  if ((v32 & 1) != 0)
  {
    if ((a12 & 1) == 0 || a2 != a10)
      return 0;
  }
  else if ((a12 & 1) != 0
         || (a2 != a10 || a3 != a11) && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a10, a11, 0) & 1) == 0)
  {
    return 0;
  }
LABEL_39:
  v39 = v31;
  if (!a1)
  {
    v42 = 0;
    if (a8)
      goto LABEL_55;
    goto LABEL_42;
  }
  v40 = objc_msgSend(a1, "title");
  if (!v40)
  {
    v42 = 0;
    a1 = 0;
    if (a8)
      goto LABEL_55;
LABEL_42:
    v44 = 0;
    v45 = v53;
    if (a1)
      goto LABEL_43;
LABEL_57:
    if (!a8)
      goto LABEL_63;
    a1 = a8;
    goto LABEL_59;
  }
  v41 = v40;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  a1 = v43;

  if (!a8)
    goto LABEL_42;
LABEL_55:
  v46 = objc_msgSend(a8, "title");
  if (v46)
  {
    v47 = v46;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    a8 = v48;

    v45 = v53;
    if (!a1)
      goto LABEL_57;
  }
  else
  {
    v44 = 0;
    a8 = 0;
    v45 = v53;
    if (!a1)
      goto LABEL_57;
  }
LABEL_43:
  if (!a8)
  {
LABEL_59:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
  if (v42 != v44 || a1 != a8)
  {
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, a1, v44, a8, 0);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(a8);
    if ((v50 & v39 & v37 & v45 & 1) != 0)
      return v34;
    return 0;
  }
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a8);
LABEL_63:
  if ((v37 & v45 & v39 & 1) == 0)
    return 0;
  return v34;
}

BOOL sub_131C48(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  objc_super v18;
  CGPoint v19;
  CGRect v20;

  if (*((_BYTE *)v3 + OBJC_IVAR____TtC12NowPlayingUI35NowPlayingTransportControlStackView_useBoundsAsPointInside) == 1)
  {
    objc_msgSend(v3, "bounds");
    v19.x = a2;
    v19.y = a3;
    return CGRectContainsPoint(v20, v19);
  }
  else
  {
    v18.receiver = v3;
    v18.super_class = (Class)type metadata accessor for NowPlayingTransportControlStackView();
    if ((objc_msgSendSuper2(&v18, "pointInside:withEvent:", a1, a2, a3) & 1) != 0)
    {
      return 1;
    }
    else
    {
      v8 = objc_msgSend(v3, "arrangedSubviews");
      v9 = sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

      if ((unint64_t)v10 >> 62)
        goto LABEL_17;
      v11 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
      while (v11)
      {
        v12 = 4;
        while (1)
        {
          v13 = (v10 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v10)
              : *(id *)(v10 + 8 * v12);
          v14 = v13;
          v15 = v12 - 3;
          if (__OFADD__(v12 - 4, 1))
            break;
          objc_msgSend(v13, "convertPoint:fromCoordinateSpace:", v3, a2, a3);
          v16 = objc_msgSend(v14, "pointInside:withEvent:", a1);

          if (v16)
          {
            swift_bridgeObjectRelease(v10);
            return 1;
          }
          ++v12;
          if (v15 == v11)
            goto LABEL_13;
        }
        __break(1u);
LABEL_17:
        if (v10 < 0)
          v17 = v10;
        else
          v17 = v10 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v10);
        v11 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v10);
      }
LABEL_13:
      swift_bridgeObjectRelease(v10);
      return 0;
    }
  }
}

id sub_131F50()
{
  return sub_606B0(type metadata accessor for NowPlayingTransportControlStackView);
}

uint64_t type metadata accessor for NowPlayingTransportControlStackView()
{
  return objc_opt_self(_TtC12NowPlayingUI35NowPlayingTransportControlStackView);
}

void sub_131F7C(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  CGFloat a;
  Class isa;
  id v51;
  void *v52;
  id v53;
  CGAffineTransform v54;
  objc_super v55;

  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidth] = 0x4046000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_glyphColor] = 0;
  v55.receiver = v4;
  v55.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  v9 = objc_msgSendSuper2(&v55, "initWithFrame:", a1, a2, a3, a4);
  v10 = objc_allocWithZone((Class)UIView);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "init");
  v13 = OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView;
  v14 = *(void **)&v11[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView];
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView] = v12;

  v15 = *(void **)&v11[v13];
  if (!v15)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = *(void **)&v11[v13];
  if (!v16)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "blackColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  v20 = *(void **)&v11[v13];
  if (!v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v20, "setAlpha:", 0.0);
  v21 = *(void **)&v11[v13];
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  CGAffineTransformMakeScale(&v54, 1.4, 1.4);
  objc_msgSend(v21, "setTransform:", &v54);
  v22 = *(_QWORD *)&v11[v13];
  if (!v22)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v11, "insertSubview:atIndex:", v22, 0);
  v23 = *(void **)&v11[v13];
  if (!v23)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v24 = objc_msgSend(v23, "widthAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", 44.0);

  v26 = OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint;
  v27 = *(void **)&v11[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = v25;

  v28 = (char *)objc_msgSend(v11, "imageView");
  if (!v28)
    v28 = v11;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v30 = swift_allocObject(v29, 64, 7);
  *(_OWORD *)(v30 + 16) = xmmword_16D2B0;
  v31 = *(void **)&v11[v26];
  if (!v31)
    goto LABEL_23;
  v32 = (_QWORD *)v30;
  *(_QWORD *)(v30 + 32) = v31;
  v33 = *(void **)&v11[v13];
  if (!v33)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v34 = v31;
  v35 = objc_msgSend(v33, "heightAnchor");
  v36 = *(void **)&v11[v13];
  if (!v36)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v37 = objc_msgSend(v36, "widthAnchor");
  v38 = objc_msgSend(v35, "constraintEqualToAnchor:", v37);

  v32[5] = v38;
  v39 = *(void **)&v11[v13];
  if (!v39)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v40 = objc_msgSend(v39, "centerXAnchor");
  v41 = objc_msgSend(v28, "centerXAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  v32[6] = v42;
  v43 = *(void **)&v11[v13];
  if (!v43)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v44 = (void *)objc_opt_self(NSLayoutConstraint);
  v45 = objc_msgSend(v43, "centerYAnchor");
  v46 = objc_msgSend(v28, "centerYAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  v32[7] = v47;
  *(_QWORD *)&v54.a = v32;
  specialized Array._endMutation()(v48);
  a = v54.a;
  sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v44, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&a).n128_f64[0]);

  v51 = objc_msgSend(v11, "imageView");
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v51, "setContentMode:", 4);

  }
  v53 = objc_msgSend(v11, "traitCollection");

}

void sub_1324EC()
{
  id v0;
  unsigned int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = objc_msgSend(v0, "isHighlighted");
  v2 = (void *)objc_opt_self(UIView);
  if (v1)
  {
    v3 = swift_allocObject(&unk_1D3058, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v15 = sub_132C5C;
    v16 = v3;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_F528;
    v14 = &block_descriptor_12_1;
  }
  else
  {
    v4 = swift_allocObject(&unk_1D2FB8, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v15 = sub_132C34;
    v16 = v4;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_F528;
    v14 = &block_descriptor_34;
    v5 = _Block_copy(&v11);
    v6 = v16;
    v0 = v0;
    swift_release(v6);
    objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 2, v5, 0, 0.47, 0.0);
    _Block_release(v5);
    v7 = swift_allocObject(&unk_1D3008, 24, 7);
    *(_QWORD *)(v7 + 16) = v0;
    v15 = sub_132C54;
    v16 = v7;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_F528;
    v14 = &block_descriptor_6_3;
  }
  v8 = _Block_copy(&v11);
  v9 = v16;
  v10 = v0;
  swift_release(v9);
  objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 2, v8, 0, 0.2, 0.0, v11, v12, v13, v14, v15);
  _Block_release(v8);
}

id sub_1326E4(char *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id result;
  void *v6;
  CGAffineTransform v7;

  v2 = objc_msgSend(a1, "imageView");
  if (v2)
  {
    v3 = v2;
    CGAffineTransformMakeScale(&v7, 0.8, 0.8);
    objc_msgSend(v3, "setTransform:", &v7);

  }
  v4 = OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView;
  result = *(id *)&a1[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView];
  if (result)
  {
    result = objc_msgSend(result, "setAlpha:", 0.1);
    v6 = *(void **)&a1[v4];
    if (v6)
    {
      CGAffineTransformMakeScale(&v7, 1.2, 1.2);
      return objc_msgSend(v6, "setTransform:", &v7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1327D4(char *a1)
{
  id v2;
  void *v3;
  id result;
  _QWORD v5[6];

  v2 = objc_msgSend(a1, "imageView");
  if (v2)
  {
    v3 = v2;
    v5[0] = 0x3FF0000000000000;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0x3FF0000000000000;
    v5[4] = 0;
    v5[5] = 0;
    objc_msgSend(v2, "setTransform:", v5);

  }
  result = *(id *)&a1[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView];
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  __break(1u);
  return result;
}

char *sub_13285C(char *result)
{
  void *v1;
  CGAffineTransform v2;

  v1 = *(void **)&result[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView];
  if (v1)
  {
    CGAffineTransformMakeScale(&v2, 1.4, 1.4);
    return (char *)objc_msgSend(v1, "setTransform:", &v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1328D8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_132A54()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  objc_super v7;
  CGRect v8;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = objc_msgSend(v2, "layer");
  v4 = *(void **)&v0[v1];
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v4, "bounds");
  objc_msgSend(v3, "setCornerRadius:", CGRectGetWidth(v8) * 0.5);

  v5 = objc_msgSend(v0, "imageView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v0, "contentRectForBounds:");
    objc_msgSend(v0, "imageRectForContentRect:");
    objc_msgSend(v6, "setUntransformedFrame:");

  }
}

id sub_132B8C()
{
  return sub_606B0(type metadata accessor for NowPlayingTransportButton);
}

uint64_t type metadata accessor for NowPlayingTransportButton()
{
  return objc_opt_self(_TtC12NowPlayingUI25NowPlayingTransportButton);
}

uint64_t sub_132C10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_132C34()
{
  uint64_t v0;

  return sub_1327D4(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_132C54()
{
  uint64_t v0;

  return sub_13285C(*(char **)(v0 + 16));
}

id sub_132C5C()
{
  uint64_t v0;

  return sub_1326E4(*(char **)(v0 + 16));
}

void sub_132C64()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidth] = 0x4046000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_glyphColor] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingTransportButton.swift", 44, 2, 72, 0);
  __break(1u);
}

uint64_t Array.item(where:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v14;
  char v15;

  v10 = type metadata accessor for Array(0, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v10);
  Collection.firstIndex(where:)(&v14, a1, a2, v10, WitnessTable);
  if ((v15 & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
    Array.subscript.getter(v14, a3, a4);
    v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, v12, 1, a4);
}

Swift::Void __swiftcall Array.moveItem(at:to:)(Swift::Int at, Swift::Int to)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(at);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v14 - v11;
  Array.remove(at:)(v10, v13);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  Array.insert(_:at:)(v9, to, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v8 = type metadata accessor for Array(0, a3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  RandomAccessCollection<>.indices.getter(&v15, v8, WitnessTable, &protocol witness table for Int);
  v14 = v15;
  v13 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE98);
  if ((Range.contains(_:)(&v13, v10) & 1) != 0)
  {
    Array.subscript.getter(a1, a2, a3);
    v11 = 0;
  }
  else
  {
    v11 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v11, 1, a3);
}

uint64_t Array<A>.union()(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  _QWORD v7[5];
  id v8[2];
  uint64_t v9;

  v8[1] = a1;
  v8[0] = objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
  v7[2] = a2;
  v3 = type metadata accessor for Array(0, a2);
  v4 = sub_F174(0, (unint64_t *)&qword_1FF048, MPPropertySet_ptr);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  Sequence.reduce<A>(_:_:)(&v9, v8, sub_133060, v7, v3, v4, WitnessTable);

  return v9;
}

id sub_133060@<X0>(id *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "propertySetByCombiningWithPropertySet:", *a2);
  *a3 = result;
  return result;
}

uint64_t Dictionary.filterIncludingPairsWithStringValues()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;

  v77 = a3;
  v7 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v76 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v10);
  v71 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v79 = (char *)v64 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13);
  v16 = type metadata accessor for Optional(0, TupleTypeMetadata2);
  v73 = *(_QWORD *)(v16 - 8);
  v74 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v64 - v21;
  v23 = swift_getTupleTypeMetadata2(0, v20);
  v24 = static Array._allocateUninitialized(_:)(0, v23);
  v72 = a4;
  v83 = Dictionary.init(dictionaryLiteral:)(v24, a2, &type metadata for String, a4);
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    v26 = __CocoaDictionary.makeIterator()(v25);
    v65 = 0;
    v27 = 0;
    v28 = 0;
    v29 = v26 | 0x8000000000000000;
  }
  else
  {
    v30 = -1 << *(_BYTE *)(a1 + 32);
    v27 = ~v30;
    v31 = *(_QWORD *)(a1 + 64);
    v65 = a1 + 64;
    v32 = -v30;
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v28 = v33 & v31;
    v29 = a1;
  }
  v75 = v29;
  v66 = (unint64_t)(v27 + 64) >> 6;
  v67 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  v64[0] = v66 - 1;
  v64[1] = v27;
  result = swift_bridgeObjectRetain(a1);
  v35 = v75;
  v36 = 0;
  v37 = v7;
  v69 = v7;
  v70 = v18;
  v68 = v22;
  if ((v75 & 0x8000000000000000) == 0)
    goto LABEL_16;
LABEL_11:
  v38 = __CocoaDictionary.Iterator.next()(result);
  if (v38)
  {
    v40 = v38;
    v41 = v39;
    _forceBridgeFromObjectiveC<A>(_:_:)(v38, a2, a2);
    swift_unknownObjectRelease(v40);
    v42 = v77;
    _forceBridgeFromObjectiveC<A>(_:_:)(v41, v77, v77);
    swift_unknownObjectRelease(v41);
    v43 = 0;
    v44 = v36;
    v78 = v28;
    v45 = v69;
    goto LABEL_25;
  }
  v43 = 1;
  v44 = v36;
  v78 = v28;
  v45 = v69;
LABEL_24:
  v42 = v77;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_25:
        v55 = *(_QWORD *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v18, v43, 1, TupleTypeMetadata2);
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v22, v18, v74);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v22, 1, TupleTypeMetadata2) == 1)
        {
          sub_ECB8(v75);
          return v83;
        }
        v56 = &v22[*(int *)(TupleTypeMetadata2 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v22, a2);
        v57 = v76;
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v76, v56, v42);
        if (swift_dynamicCast(&v81, v57, v42, &type metadata for String, 0))
        {
          v46 = v81;
          v47 = v82;
          goto LABEL_15;
        }
        v58 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
        if (swift_dynamicCast(&v81, v57, v42, v58, 0))
        {
          v59 = v81;
          v60 = objc_msgSend(v81, "description");
          v46 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
          v47 = v61;

          v45 = v69;
          v57 = v76;
LABEL_15:
          v37 = v45;
          (*(void (**)(char *, uint64_t))(v45 + 8))(v57, v77);
          v48 = v79;
          v49 = v80;
          v50 = v71;
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v71, v79, a2);
          v81 = v46;
          v82 = v47;
          v51 = type metadata accessor for Dictionary(0, a2, &type metadata for String, v72);
          Dictionary.subscript.setter(&v81, v50, v51);
          result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v48, a2);
          v36 = v44;
          v28 = v78;
          v18 = v70;
          v35 = v75;
          if ((v75 & 0x8000000000000000) != 0)
            goto LABEL_11;
          goto LABEL_16;
        }
        v62 = v42;
        v37 = v45;
        (*(void (**)(char *, uint64_t))(v45 + 8))(v57, v62);
        result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v79, a2);
        v36 = v44;
        v28 = v78;
        v35 = v75;
        if ((v75 & 0x8000000000000000) != 0)
          goto LABEL_11;
LABEL_16:
        if (v28)
        {
          v78 = (v28 - 1) & v28;
          v52 = __clz(__rbit64(v28)) | (v36 << 6);
          v44 = v36;
          v45 = v37;
          v42 = v77;
          goto LABEL_18;
        }
        v44 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        v45 = v37;
        if (v44 >= v66)
        {
          v78 = 0;
          v43 = 1;
          v44 = v36;
          goto LABEL_24;
        }
        v54 = *(_QWORD *)(v65 + 8 * v44);
        v42 = v77;
        if (!v54)
          break;
LABEL_22:
        v78 = (v54 - 1) & v54;
        v52 = __clz(__rbit64(v54)) + (v44 << 6);
LABEL_18:
        v53 = v35;
        (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v18, *(_QWORD *)(v35 + 48) + *(_QWORD *)(v80 + 72) * v52, a2);
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(&v18[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v53 + 56) + *(_QWORD *)(v45 + 72) * v52, v42);
        v43 = 0;
        v22 = v68;
      }
      if (v36 + 2 < v66)
        break;
      v78 = 0;
      v43 = 1;
    }
    v54 = *(_QWORD *)(v65 + 8 * (v36 + 2));
    if (v54)
    {
      v44 = v36 + 2;
      goto LABEL_22;
    }
    v63 = v36 + 3;
    if (v36 + 3 < v66)
      break;
    v78 = 0;
    v43 = 1;
    v44 = v36 + 2;
  }
  v54 = *(_QWORD *)(v65 + 8 * v63);
  if (v54)
  {
    v44 = v36 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    v44 = v63 + 1;
    if (__OFADD__(v63, 1))
      break;
    if (v44 >= v66)
    {
      v78 = 0;
      v43 = 1;
      v44 = v64[0];
      goto LABEL_25;
    }
    v54 = *(_QWORD *)(v65 + 8 * v44);
    ++v63;
    if (v54)
      goto LABEL_22;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t Dictionary.filteredDictionary(_:)(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  int64_t v39;
  char *v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t (*v73)(char *, char *);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;

  v79 = a4;
  v73 = a1;
  v74 = a2;
  v10 = type metadata accessor for Optional(0, a5);
  __chkstk_darwin(v10);
  v68 = (char *)v63 - v11;
  v77 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(v12);
  v81 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v14);
  v67 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v63 - v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v17);
  v21 = type metadata accessor for Optional(0, TupleTypeMetadata2);
  v75 = *(_QWORD *)(v21 - 8);
  v76 = v21;
  __chkstk_darwin(v21);
  v70 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)v63 - v25;
  v27 = swift_getTupleTypeMetadata2(0, v24);
  v28 = static Array._allocateUninitialized(_:)(0, v27);
  v69 = a6;
  v82 = Dictionary.init(dictionaryLiteral:)(v28, a4, a5, a6);
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v29 = a3;
    else
      v29 = a3 & 0xFFFFFFFFFFFFFF8;
    v30 = __CocoaDictionary.makeIterator()(v29);
    v64 = 0;
    v31 = 0;
    v32 = 0;
    v33 = v30 | 0x8000000000000000;
  }
  else
  {
    v34 = -1 << *(_BYTE *)(a3 + 32);
    v31 = ~v34;
    v35 = *(_QWORD *)(a3 + 64);
    v64 = a3 + 64;
    v36 = -v34;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    else
      v37 = -1;
    v32 = v37 & v35;
    v33 = a3;
  }
  v65 = (unint64_t)(v31 + 64) >> 6;
  v66 = v33 & 0x7FFFFFFFFFFFFFFFLL;
  v63[0] = v65 - 1;
  v63[1] = v31;
  result = swift_bridgeObjectRetain(a3);
  v39 = 0;
  v40 = v70;
  v71 = TupleTypeMetadata2;
  v72 = v33;
  while ((v33 & 0x8000000000000000) != 0)
  {
    v44 = __CocoaDictionary.Iterator.next()(result);
    if (v44)
    {
      v46 = v44;
      v47 = v45;
      _forceBridgeFromObjectiveC<A>(_:_:)(v44, v79, v79);
      swift_unknownObjectRelease(v46);
      _forceBridgeFromObjectiveC<A>(_:_:)(v47, a5, a5);
      swift_unknownObjectRelease(v47);
      v43 = 0;
    }
    else
    {
      v43 = 1;
    }
    v42 = v39;
    v80 = v32;
LABEL_25:
    v49 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v40, v43, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v26, v40, v76);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v26, 1, TupleTypeMetadata2) == 1)
    {
      sub_ECB8(v33);
      return v82;
    }
    v50 = &v26[*(int *)(TupleTypeMetadata2 + 48)];
    v52 = v78;
    v51 = v79;
    v53 = v26;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v19, v26, v79);
    v54 = v77;
    v55 = v81;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v81, v50, a5);
    if ((v73(v19, v55) & 1) != 0)
    {
      v56 = v19;
      v57 = v67;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v67, v56, v51);
      v58 = v68;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v68, v81, a5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v58, 0, 1, a5);
      v59 = type metadata accessor for Dictionary(0, v51, a5, v69);
      v60 = v58;
      v55 = v81;
      v61 = v57;
      v19 = v56;
      v40 = v70;
      Dictionary.subscript.setter(v60, v61, v59);
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, a5);
    result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v19, v51);
    v39 = v42;
    v32 = v80;
    v26 = v53;
    TupleTypeMetadata2 = v71;
    v33 = v72;
  }
  if (v32)
  {
    v80 = (v32 - 1) & v32;
    v41 = __clz(__rbit64(v32)) | (v39 << 6);
    v42 = v39;
    goto LABEL_15;
  }
  v42 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v42 >= v65)
  {
    v80 = 0;
    v43 = 1;
    v42 = v39;
    goto LABEL_25;
  }
  v48 = *(_QWORD *)(v64 + 8 * v42);
  if (v48)
    goto LABEL_21;
  if (v39 + 2 >= v65)
  {
    v80 = 0;
    v43 = 1;
    goto LABEL_25;
  }
  v48 = *(_QWORD *)(v64 + 8 * (v39 + 2));
  if (v48)
  {
    v42 = v39 + 2;
    goto LABEL_21;
  }
  v62 = v39 + 3;
  if (v39 + 3 >= v65)
  {
    v80 = 0;
    v43 = 1;
    v42 = v39 + 2;
    goto LABEL_25;
  }
  v48 = *(_QWORD *)(v64 + 8 * v62);
  if (v48)
  {
    v42 = v39 + 3;
LABEL_21:
    v80 = (v48 - 1) & v48;
    v41 = __clz(__rbit64(v48)) + (v42 << 6);
LABEL_15:
    (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v40, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v78 + 72) * v41, v79);
    (*(void (**)(char *, unint64_t, uint64_t))(v77 + 16))(&v40[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v33 + 56) + *(_QWORD *)(v77 + 72) * v41, a5);
    v43 = 0;
    goto LABEL_25;
  }
  while (1)
  {
    v42 = v62 + 1;
    if (__OFADD__(v62, 1))
      break;
    if (v42 >= v65)
    {
      v80 = 0;
      v43 = 1;
      v42 = v63[0];
      goto LABEL_25;
    }
    v48 = *(_QWORD *)(v64 + 8 * v42);
    ++v62;
    if (v48)
      goto LABEL_21;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_133C58()
{
  qword_210418 = 0x3E80000000000000;
}

uint64_t URL.parametrize(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  char *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, char *, uint64_t);
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __n128 v59;
  __n128 v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  __n128 v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  int64_t v83;
  uint64_t v84;
  char *v85;
  int64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  v6 = __chkstk_darwin(v5);
  v79 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for URLQueryItem(0, v6);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v85 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v89 = (char *)&v73 - v10;
  __chkstk_darwin(v11);
  v82 = (char *)&v73 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_203BF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URLComponents(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v80 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  v76 = a2;
  v77 = v21;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
  v78 = v20;
  result = v22(a2, v2);
  v84 = a1;
  if (!*(_QWORD *)(a1 + 16))
    return result;
  URLComponents.init(url:resolvingAgainstBaseURL:)(v2, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v24 = &qword_203BF0;
    return sub_9944((uint64_t)v16, v24);
  }
  v74 = v18;
  v75 = v17;
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v80, v16, v17);
  v26 = URLComponents.queryItems.getter(v25);
  if (v26)
    v27 = (_QWORD *)v26;
  else
    v27 = _swiftEmptyArrayStorage;
  v28 = *(_QWORD *)(v84 + 64);
  v81 = v84 + 64;
  v29 = 1 << *(_BYTE *)(v84 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v83 = (unint64_t)(v29 + 63) >> 6;
  result = swift_bridgeObjectRetain(v84);
  v32 = 0;
  v33 = v82;
  while (1)
  {
    if (v31)
    {
      v34 = v27;
      v35 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v36 = v35 | (v32 << 6);
      goto LABEL_26;
    }
    v37 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_50;
    if (v37 >= v83)
      break;
    v38 = *(_QWORD *)(v81 + 8 * v37);
    ++v32;
    if (!v38)
    {
      v32 = v37 + 1;
      if (v37 + 1 >= v83)
        break;
      v38 = *(_QWORD *)(v81 + 8 * v32);
      if (!v38)
      {
        v32 = v37 + 2;
        if (v37 + 2 >= v83)
          break;
        v38 = *(_QWORD *)(v81 + 8 * v32);
        if (!v38)
        {
          v39 = v37 + 3;
          if (v39 >= v83)
            break;
          v38 = *(_QWORD *)(v81 + 8 * v39);
          if (!v38)
          {
            while (1)
            {
              v32 = v39 + 1;
              if (__OFADD__(v39, 1))
                goto LABEL_51;
              if (v32 >= v83)
                goto LABEL_44;
              v38 = *(_QWORD *)(v81 + 8 * v32);
              ++v39;
              if (v38)
                goto LABEL_25;
            }
          }
          v32 = v39;
        }
      }
    }
LABEL_25:
    v34 = v27;
    v31 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v32 << 6);
LABEL_26:
    v40 = 16 * v36;
    v41 = (uint64_t *)(*(_QWORD *)(v84 + 48) + v40);
    v42 = *v41;
    v43 = v41[1];
    v44 = (uint64_t *)(*(_QWORD *)(v84 + 56) + v40);
    v45 = *v44;
    v46 = v44[1];
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v46);
    URLQueryItem.init(name:value:)(v42, v43, v45, v46);
    swift_bridgeObjectRelease(v46);
    v27 = v34;
    v47 = v34[2];
    if (v47)
    {
      v86 = v32;
      v87 = v31;
      v48 = v88;
      v49 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      swift_bridgeObjectRetain(v34);
      v50 = 0;
      v51 = *(_QWORD *)(v48 + 72);
      v52 = *(uint64_t (**)(char *, char *, uint64_t))(v48 + 16);
      while (1)
      {
        v53 = (unint64_t)v27;
        v54 = v52(v89, (char *)v27 + v49, v90);
        v55 = URLQueryItem.name.getter(v54);
        v57 = v56;
        if (v55 == v42 && v56 == v43)
          break;
        v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, v42, v43, 0);
        v59 = swift_bridgeObjectRelease(v57);
        (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v89, v90, v59);
        if ((v58 & 1) != 0)
          goto LABEL_40;
        ++v50;
        v49 += v51;
        v27 = (_QWORD *)v53;
        if (v47 == v50)
        {
          swift_bridgeObjectRelease(v43);
          v60 = swift_bridgeObjectRelease(v53);
          v33 = v82;
          v32 = v86;
          v31 = v87;
          goto LABEL_34;
        }
      }
      v66 = swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v89, v90, v66);
LABEL_40:
      swift_bridgeObjectRelease(v43);
      v27 = (_QWORD *)v53;
      swift_bridgeObjectRelease(v53);
      result = swift_isUniquelyReferenced_nonNull_native(v53);
      if ((result & 1) == 0)
      {
        result = sub_135E90(v53);
        v27 = (_QWORD *)result;
      }
      v31 = v87;
      if (v50 >= v27[2])
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        return result;
      }
      v33 = v82;
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 40))((char *)v27 + v49, v82, v90);
      v32 = v86;
    }
    else
    {
      v60 = swift_bridgeObjectRelease(v43);
      v52 = *(uint64_t (**)(char *, char *, uint64_t))(v88 + 16);
LABEL_34:
      ((void (*)(char *, char *, uint64_t, __n128))v52)(v85, v33, v90, v60);
      if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
        v27 = (_QWORD *)sub_134F08(0, v27[2] + 1, 1, (unint64_t)v27, &qword_203CA0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
      v62 = v27[2];
      v61 = v27[3];
      if (v62 >= v61 >> 1)
        v27 = (_QWORD *)sub_134F08(v61 > 1, v62 + 1, 1, (unint64_t)v27, &qword_203CA0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
      v27[2] = v62 + 1;
      v63 = v88;
      v64 = (unint64_t)v27
          + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))
          + *(_QWORD *)(v88 + 72) * v62;
      v65 = v90;
      (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))(v64, v85, v90);
      result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v33, v65);
    }
  }
LABEL_44:
  v67 = swift_release(v84);
  v68 = v78;
  v16 = v79;
  v69 = v77;
  v70 = v80;
  v71 = URLComponents.queryItems.setter(v27, v67);
  URLComponents.url.getter(v71);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v75);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v16, 1, v68) == 1)
  {
    v24 = (uint64_t *)&unk_1FB990;
    return sub_9944((uint64_t)v16, v24);
  }
  v72 = v76;
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v76, v68);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v69 + 32))(v72, v16, v68);
}

char *sub_1342A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203BF8);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_135F2C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_1343B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C08);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_136034(0, v8, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1344C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_134BB4(a1, a2, a3, a4, &qword_203C38, &qword_203A00);
}

char *sub_1344D4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_134620(a1, a2, a3, a4, &qword_203C58, &qword_1F9F28);
}

_QWORD *sub_1344E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C98);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_13611C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_13460C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_134620(a1, a2, a3, a4, &qword_203C10, &qword_1F9F28);
}

char *sub_134620(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  char *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = *((_QWORD *)a4 + 3);
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = *((_QWORD *)a4 + 2);
    if (v10 <= v11)
      v12 = *((_QWORD *)a4 + 2);
    else
      v12 = v10;
    if (v12)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v14 = (char *)swift_allocObject(v13, 16 * v12 + 32, 7);
      v15 = _swift_stdlib_malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      *((_QWORD *)v14 + 2) = v11;
      *((_QWORD *)v14 + 3) = 2 * (v16 >> 4);
      v17 = v14 + 32;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = (char *)&_swiftEmptyArrayStorage;
      v17 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[16 * v11 + 32])
          memmove(v17, a4 + 32, 16 * v11);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_136A00(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_134738(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C50);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_13631C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_134844(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C70);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_13640C(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_134950(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C80);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136210(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_134A74(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
      v15 = _swift_stdlib_malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 3);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v11 + 4])
          memmove(v17, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_13660C(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_134B8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_134F08(a1, a2, a3, a4, &qword_1FD898, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_134BA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_134BB4(a1, a2, a3, a4, &qword_203C68, &qword_1FA940);
}

uint64_t sub_134BB4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = _swift_stdlib_malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1364F4(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_134DC0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE28);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136804(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_134EE0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_134620(a1, a2, a3, a4, &qword_1FA5A8, &qword_1FF588);
}

uint64_t sub_134EF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_134F08(a1, a2, a3, a4, &qword_203CC0, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingButtonID);
}

uint64_t sub_134F08(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = _swift_stdlib_malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_13718C(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_135114(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C30);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_136034(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_135220(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C60);
      v11 = (_QWORD *)swift_allocObject(v10, 176 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 176);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[22 * v8 + 4])
          memmove(v13, a4 + 4, 176 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136910(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_135348(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_134620(a1, a2, a3, a4, &qword_1FF590, &qword_1FF570);
}

_QWORD *sub_13535C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_135388(a1, a2, a3, a4, &qword_1FD870);
}

_QWORD *sub_135368(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_134A74(a1, a2, a3, a4, &qword_203CA8, &qword_1FF0A0);
}

_QWORD *sub_13537C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_135388(a1, a2, a3, a4, &qword_1FF5F0);
}

_QWORD *sub_135388(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136BF8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_13547C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_134A74(a1, a2, a3, a4, &qword_203CB0, &qword_1FF5C8);
}

char *sub_135490(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_134620(a1, a2, a3, a4, &qword_1FF630, &qword_1FF620);
}

_QWORD *sub_1354A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFA38);
      v11 = (_QWORD *)swift_allocObject(v10, 112 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 112);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[14 * v8 + 4])
          memmove(v13, a4 + 4, 112 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136CDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1355CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C18);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136710(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1356EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203CB8);
      v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[11 * v8 + 4])
          memmove(v13, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136DD0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_135814(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_134F08(a1, a2, a3, a4, &qword_1FF560, (uint64_t (*)(_QWORD))&type metadata accessor for TranscriptModel.Word);
}

_QWORD *sub_135828(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C48);
      v11 = (_QWORD *)swift_allocObject(v10, 136 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 136);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[17 * v8 + 4])
          memmove(v13, a4 + 4, 136 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136EC0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_135948(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF568);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_136FB4(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_135A54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C40);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_136B04(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_135B74(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF040);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_13709C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_135C80(char *result, int64_t a2, char a3, unint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(a4 + 24);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *(_QWORD *)(a4 + 16);
    if (v7 <= v8)
      v9 = *(_QWORD *)(a4 + 16);
    else
      v9 = v7;
    if (v9)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C20);
      v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if ((unint64_t)v11 < a4 || (unint64_t)v14 >= a4 + 32 + 8 * v8)
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C28);
          swift_arrayInitWithTakeFrontToBack(v14, a4 + 32, v8, v16);
        }
        else if (v11 != (char *)a4)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_203C28);
          swift_arrayInitWithTakeBackToFront(v14);
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_1372A4(0, v8, (unint64_t)v14, a4);
LABEL_26:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_135DD4(_QWORD *a1)
{
  return sub_1344E8(0, a1[2], 0, a1);
}

_QWORD *sub_135DE8(_QWORD *a1)
{
  return sub_134950(0, a1[2], 0, a1);
}

_QWORD *sub_135DFC(_QWORD *a1)
{
  return sub_134A74(0, a1[2], 0, a1, &qword_203C78, (uint64_t *)&unk_1FA980);
}

_QWORD *sub_135E30(_QWORD *a1)
{
  return sub_134A74(0, a1[2], 0, a1, &qword_203C90, &qword_1FA978);
}

_QWORD *sub_135E64(_QWORD *a1)
{
  return sub_134738(0, a1[2], 0, a1);
}

_QWORD *sub_135E7C(_QWORD *a1)
{
  return sub_1355CC(0, a1[2], 0, a1);
}

uint64_t sub_135E90(unint64_t a1)
{
  return sub_134F08(0, *(_QWORD *)(a1 + 16), 0, a1, &qword_203CA0, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

uint64_t sub_135EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_135F2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_203C00);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_136034(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_13611C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_136210(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 56 * a1 + 32;
  v7 = a3 + 56 * v4;
  if (v6 >= v7 || v6 + 56 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_203C88);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_13631C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_13640C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1364F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_13660C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 8 * a1 + 32;
    v8 = a3 + 8 * v5;
    if (v7 >= v8 || v7 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_136710(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_136804(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  v7 = a3 + 40 * v4;
  if (v6 >= v7 || v6 + 40 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_203CC8);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_136910(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 176 * a1 + 32;
  v6 = a3 + 176 * v4;
  if (v5 >= v6 || v5 + 176 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_136A00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 16 * a1 + 32;
    v8 = a3 + 16 * v5;
    if (v7 >= v8 || v7 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_136B04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_136BF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_136CDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 112 * a1 + 32;
  v6 = a3 + 112 * v4;
  if (v5 >= v6 || v5 + 112 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_136DD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 88 * a1 + 32;
  v6 = a3 + 88 * v4;
  if (v5 >= v6 || v5 + 88 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_136EC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 136 * a1 + 32;
  v6 = a3 + 136 * v4;
  if (v5 >= v6 || v5 + 136 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_136FB4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_13709C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_13718C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1372A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_203C28);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_1373AC(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textContent] = 0;
  v3 = OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textView;
  v4 = objc_allocWithZone((Class)UITextView);
  v5 = v1;
  v6 = objc_msgSend(v4, "init");
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v8, "setEditable:", 0);
  objc_msgSend(v8, "setScrollEnabled:", 0);
  objc_msgSend(v8, "setSelectable:", 1);
  objc_msgSend(v8, "setDataDetectorTypes:", 2);
  *(_QWORD *)&v1[v3] = v8;
  v10 = OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText;
  v11 = (objc_class *)type metadata accessor for LanguageAwareString(0);
  LOBYTE(v8) = static LanguageAwareString.alwaysGenerateAttributedString.getter();
  v12 = objc_allocWithZone(v11);
  *(_QWORD *)&v5[v10] = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(0, 0xE000000000000000, 0, v8 & 1);
  sub_DF78((uint64_t)a1, (uint64_t)&v5[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics]);

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for LyricsTextViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", 0, 0);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v13;
}

id sub_137570()
{
  char *v0;
  char *v1;
  void *v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  void *v38;
  char *v39;
  double v40;
  uint64_t v41;
  _QWORD v42[4];
  objc_super v43;

  v1 = v0;
  v43.receiver = v0;
  v43.super_class = (Class)type metadata accessor for LyricsTextViewController();
  objc_msgSendSuper2(&v43, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v4 = result;
  objc_msgSend(result, "addSubview:", v2);

  v5 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textContent];
  if (v5)
  {
    v6 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText];
    *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText] = v5;
    v7 = v5;
    sub_137ABC((uint64_t)v6);

  }
  objc_msgSend(v2, "setDelegate:", v1);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_16D2B0;
  v10 = objc_msgSend(v2, "leadingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_18;
  v11 = result;
  v12 = objc_msgSend(result, "leadingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v9 + 32) = v13;
  v14 = objc_msgSend(v2, "trailingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v15 = result;
  v16 = objc_msgSend(result, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v9 + 40) = v17;
  v18 = objc_msgSend(v2, "topAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v19 = result;
  v20 = objc_msgSend(result, "topAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v9 + 48) = v21;
  v22 = objc_msgSend(v2, "bottomAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v23 = result;
  v24 = (void *)objc_opt_self(NSLayoutConstraint);
  v25 = objc_msgSend(v23, "bottomAnchor");

  v26 = objc_msgSend(v22, "constraintEqualToAnchor:", v25);
  *(_QWORD *)(v9 + 56) = v26;
  v42[0] = v9;
  specialized Array._endMutation()(v27);
  sub_137D64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v24, "activateConstraints:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics + 24];
  v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics + 32];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics], v29);
  v31 = (*(double (**)(uint64_t, uint64_t))(v30 + 96))(v29, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  v38 = result;
  v39 = (char *)objc_msgSend(result, "effectiveUserInterfaceLayoutDirection");

  if (!v39)
  {
LABEL_13:
    v40 = v37;
    goto LABEL_14;
  }
  if (v39 != (_BYTE *)&dword_0 + 1)
  {
    type metadata accessor for UIUserInterfaceLayoutDirection(0);
    v42[3] = v41;
    v42[0] = v39;
    unrecognizedEnumValueEncountered(_:)(v42);
    __swift_destroy_boxed_opaque_existential_0(v42);
    goto LABEL_13;
  }
  v40 = v33;
  v33 = v37;
LABEL_14:
  objc_msgSend(v2, "setTextContainerInset:", v31, v33, v35, v40, v42[0]);
  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  return objc_msgSend(v2, "setTintColor:", qword_210330);
}

void sub_137ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  v2 = v1;
  v4 = OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText);
  type metadata accessor for LanguageAwareString(0);
  v6 = v5;
  LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v6);

  if ((a1 & 1) == 0)
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics + 24);
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_metrics), v7);
    v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 144))(v7, v8);
    v10 = *(id *)(v2 + v4);
    v11 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

    v14 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v11);
    v12 = objc_msgSend(v14, "length");
    v13 = objc_msgSend(v9, "preferredFont");
    objc_msgSend(v14, "addAttribute:value:range:", NSFontAttributeName, v13, 0, v12);

    if (qword_1F95B0 != -1)
      swift_once(&qword_1F95B0, sub_FDF98);
    objc_msgSend(v14, "addAttribute:value:range:", NSForegroundColorAttributeName, qword_210338, 0, v12);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textView), "setAttributedText:", v14);

  }
}

id sub_137CBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsTextViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LyricsTextViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI24LyricsTextViewController);
}

unint64_t sub_137D64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC7E0;
  if (!qword_1FC7E0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FC7E0);
  }
  return result;
}

void sub_137DA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  objc_class *v8;
  char Attributed;
  id v10;
  void *v11;
  id v12;
  id v13;

  v2 = v1;
  v3 = OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textContent;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textContent);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textContent) = a1;
  v5 = a1;

  v6 = *(void **)(v2 + v3);
  if (v6)
  {
    v7 = *(void **)(v2 + v3);
  }
  else
  {
    v8 = (objc_class *)type metadata accessor for LanguageAwareString(0);
    Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter();
    v10 = objc_allocWithZone(v8);
    v7 = (void *)LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(0, 0xE000000000000000, 0, Attributed & 1);
    v6 = 0;
  }
  v11 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText) = v7;
  v12 = v6;
  v13 = v7;
  sub_137ABC((uint64_t)v11);

}

void sub_137E60()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  objc_class *v8;
  id v9;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textContent] = 0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_textView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  objc_msgSend(v5, "setEditable:", 0);
  objc_msgSend(v5, "setScrollEnabled:", 0);
  objc_msgSend(v5, "setSelectable:", 1);
  objc_msgSend(v5, "setDataDetectorTypes:", 2);
  *(_QWORD *)&v1[v2] = v5;
  v7 = OBJC_IVAR____TtC12NowPlayingUI24LyricsTextViewController_attributedLyricsText;
  v8 = (objc_class *)type metadata accessor for LanguageAwareString(0);
  LOBYTE(v6) = static LanguageAwareString.alwaysGenerateAttributedString.getter();
  v9 = objc_allocWithZone(v8);
  *(_QWORD *)&v1[v7] = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(0, 0xE000000000000000, 0, v6 & 1);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/LyricsTextViewController.swift", 43, 2, 25, 0);
  __break(1u);
}

BOOL == infix(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        if ((a4 & 1) != 0 && a3 == 1)
          return 1;
      }
      else if ((a4 & 1) != 0 && a3 >= 2)
      {
        return 1;
      }
    }
    else if ((a4 & 1) != 0 && !a3)
    {
      return 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_13803C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      return (v7 & 1) != 0;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

uint64_t CollectionComparisonOperationType.description.getter(uint64_t a1, char a2)
{
  Swift::String v2;
  void *object;
  uint64_t v5;

  if ((a2 & 1) != 0)
  {
    v5 = 0x747265736E69;
    if (a1 != 1)
      v5 = 0x7574697473627573;
    if (a1)
      return v5;
    else
      return 0x6574656C6564;
  }
  else
  {
    v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v2._object;
    String.append(_:)(v2);
    swift_bridgeObjectRelease(object);
    return 0x6F72662065766F6DLL;
  }
}

uint64_t sub_138168()
{
  uint64_t v0;

  return CollectionComparisonOperationType.description.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_138174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_13817C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_138200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 24) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *(_QWORD *)a2;
    *v3 = *(_QWORD *)a2;
    v3 = (_QWORD *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain(v8);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((a1 & 0xFFFFFFFFFFFFFFF8) + v5 + 24) & ~v5, ((a2 & 0xFFFFFFFFFFFFFFF8) + v5 + 24) & ~v5);
  }
  return v3;
}

uint64_t sub_1382BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1382E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((*(unsigned __int8 *)(v4 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_138348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 24))((*(unsigned __int8 *)(v5 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_1383B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_138418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((*(unsigned __int8 *)(v4 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_138480(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 24) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 24) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_138540 + 4 * byte_174E00[(v8 - 1)]))();
}

void sub_1385A4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 24) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = &dword_4;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = &dword_0 + 1;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 24) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for CollectionComparisonOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollectionComparisonOperation);
}

ValueMetadata *type metadata accessor for CollectionComparisonOperationType()
{
  return &type metadata for CollectionComparisonOperationType;
}

uint64_t sub_138790(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v33;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_203EE8);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  v16 = type metadata accessor for Glyph(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
    __asm { BR              X10 }
  if (!a1)
    __asm { BR              X10 }
  if (a1 == 1)
  {
    if (a4)
    {
      if (a4 == 3)
      {
        switch(a3)
        {
          case 0:
            v22 = v18;
            v23 = static Glyph.FullWidthMiniPlayer.play.getter(v19);
            goto LABEL_30;
          case 1:
            v22 = v18;
            v23 = static Glyph.FullWidthMiniPlayer.pause.getter(v19);
            goto LABEL_30;
          case 2:
            v22 = v18;
            v23 = static Glyph.FullWidthMiniPlayer.stop.getter(v19);
LABEL_30:
            v29 = Glyph.image.getter(v23);
            v30 = *(void (**)(char *, uint64_t))(v17 + 8);
            v31 = v21;
            goto LABEL_31;
        }
      }
      return 0;
    }
    v24 = *(double *)&a3;
    v22 = v18;
    static Glyph.FullWidthMiniPlayer.jump(interval:)(v24);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v22);
    if ((_DWORD)v25 == 1)
    {
      v26 = (uint64_t)v10;
LABEL_22:
      sub_9944(v26, &qword_203EE8);
      return 0;
    }
    v29 = Glyph.image.getter(v25);
    v30 = *(void (**)(char *, uint64_t))(v17 + 8);
    v31 = v10;
    goto LABEL_31;
  }
  if (!a4)
  {
    v27 = *(double *)&a3;
    v22 = v18;
    static Glyph.PlayerBar.jump(interval:)(v27);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v22);
    if ((_DWORD)v28 == 1)
    {
      v26 = (uint64_t)v13;
      goto LABEL_22;
    }
    v29 = Glyph.image.getter(v28);
    v30 = *(void (**)(char *, uint64_t))(v17 + 8);
    v31 = v13;
LABEL_31:
    v30(v31, v22);
    return v29;
  }
  if (a4 == 3)
  {
    switch(a3)
    {
      case 0:
        v22 = v18;
        v23 = static Glyph.PlayerBar.play.getter(v19);
        goto LABEL_30;
      case 1:
        v22 = v18;
        v23 = static Glyph.PlayerBar.pause.getter(v19);
        goto LABEL_30;
      case 2:
        v22 = v18;
        v23 = static Glyph.PlayerBar.stop.getter(v19);
        goto LABEL_30;
    }
  }
  return 0;
}

void sub_138D3C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  id v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  void *v65;

  v2 = v1;
  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, "tracklist");
    v5 = sub_B61B8();

    v65 = v5;
    v6 = objc_msgSend(v5, "seekCommand");
    v7 = (uint64_t)v3;
    v8 = sub_139A94((void *)v7, -1, 2u);

    v9 = v2[4];
    *((_OWORD *)v2 + 1) = xmmword_174F00;
    v2[4] = v8;
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v9).n128_u64[0];
    if (v6)
    {
      v11 = objc_msgSend(v6, "preferredBackwardJumpIntervals", v10);
      v12 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
      v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v30 = v13;
        else
          v30 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v14 = (void *)_CocoaArrayWrapper.endIndex.getter(v30);
        swift_bridgeObjectRelease(v13);
        if (v14)
          goto LABEL_5;
      }
      else
      {
        v14 = *(void **)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
        if (v14)
        {
LABEL_5:
          if ((v13 & 0xC000000000000001) != 0)
          {
            v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
          }
          else
          {
            if (!*(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
            {
              __break(1u);
              goto LABEL_48;
            }
            v15 = *(id *)(v13 + 32);
          }
          v16 = v15;
          objc_msgSend(v15, "doubleValue", swift_bridgeObjectRelease(v13).n128_f64[0]);
          v18 = v17;

          v19 = (id)v7;
          v20 = sub_139A94(v19, v18, 0);

          v21 = v2[7];
          v2[5] = v18;
          v2[6] = 0;
          v2[7] = v20;
LABEL_17:
          v64 = v6;
          swift_bridgeObjectRelease(v21);
          v31 = (id)v7;
          v32 = sub_140DA8((uint64_t)&off_1C53E0, v31);

          v33 = v32[2];
          v63 = v32;
          if (v33)
          {
            v34 = v32 + 6;
            do
            {
              v38 = *v34;
              if (*(_QWORD *)(*v34 + 16))
              {
                v39 = *(v34 - 2);
                v40 = *((_BYTE *)v34 - 8);
                swift_bridgeObjectRetain(*v34);
                if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
                  sub_A9B48(0, _swiftEmptyArrayStorage[2] + 1, 1);
                v36 = _swiftEmptyArrayStorage[2];
                v35 = _swiftEmptyArrayStorage[3];
                if (v36 >= v35 >> 1)
                  sub_A9B48(v35 > 1, v36 + 1, 1);
                _swiftEmptyArrayStorage[2] = v36 + 1;
                v37 = &_swiftEmptyArrayStorage[3 * v36];
                v37[4] = v39;
                *((_BYTE *)v37 + 40) = v40;
                v37[6] = v38;
              }
              v34 += 3;
              --v33;
            }
            while (v33);
          }
          swift_bridgeObjectRelease(v63);
          if (_swiftEmptyArrayStorage[2])
          {
            v41 = _swiftEmptyArrayStorage[4];
            v42 = LOBYTE(_swiftEmptyArrayStorage[5]);
            v43 = _swiftEmptyArrayStorage[6];
            swift_bridgeObjectRetain(v43);
          }
          else
          {
            v41 = 0;
            v42 = 0;
            v43 = 0;
          }
          v14 = v31;
          swift_release(_swiftEmptyArrayStorage);
          v44 = v2[10];
          v2[8] = v41;
          v2[9] = v42;
          v2[10] = v43;
          *(_QWORD *)&v45 = swift_bridgeObjectRelease(v44).n128_u64[0];
          v6 = v64;
          if (v64)
          {
            v46 = objc_msgSend(v64, "preferredForwardJumpIntervals", v45);
            v47 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
            v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

            if ((unint64_t)v7 >> 62)
            {
              if (v7 < 0)
                v55 = v7;
              else
                v55 = v7 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v7);
              v56 = _CocoaArrayWrapper.endIndex.getter(v55);
              swift_bridgeObjectRelease(v7);
              if (v56)
              {
LABEL_32:
                if ((v7 & 0xC000000000000001) == 0)
                {
                  if (!*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
                  {
                    __break(1u);
                    return;
                  }
                  v48 = *(id *)(v7 + 32);
                  goto LABEL_35;
                }
LABEL_48:
                v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_35:
                v49 = v48;
                objc_msgSend(v48, "doubleValue", swift_bridgeObjectRelease(v7).n128_f64[0]);
                v51 = v50;

                v52 = v14;
                v53 = sub_139A94(v52, v51, 0);

                v54 = v2[13];
                v2[11] = v51;
                v2[12] = 0;
                v2[13] = v53;
                goto LABEL_42;
              }
            }
            else if (*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
            {
              goto LABEL_32;
            }
            swift_bridgeObjectRelease(v7);
          }
          v54 = v2[13];
          v2[11] = 0;
          v2[12] = 0;
          v2[13] = 0;
LABEL_42:
          swift_bridgeObjectRelease(v54);
          v57 = v14;
          v58 = sub_139A94(v57, 1, 2u);

          v59 = v2[16];
          *((_OWORD *)v2 + 7) = xmmword_16B3D0;
          v2[16] = v58;
          swift_bridgeObjectRelease(v59);
          v60 = (void (*)(uint64_t))v2[17];
          if (v60)
          {
            v61 = v2[18];
            v62 = swift_retain();
            v60(v62);
            swift_unknownObjectRelease(v6);

            sub_145A0((uint64_t)v60, v61);
          }
          else
          {
            swift_unknownObjectRelease(v6);

          }
          return;
        }
      }
      swift_bridgeObjectRelease(v13);
    }
    v21 = v2[7];
    v2[5] = 0;
    v2[6] = 0;
    v2[7] = 0;
    goto LABEL_17;
  }
  v22 = v1[4];
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0;
  swift_bridgeObjectRelease(v22);
  v23 = v1[7];
  v1[5] = 0;
  v1[6] = 0;
  v1[7] = 0;
  swift_bridgeObjectRelease(v23);
  v24 = v1[10];
  v1[8] = 0;
  v1[9] = 0;
  v1[10] = 0;
  swift_bridgeObjectRelease(v24);
  v25 = v1[13];
  v1[11] = 0;
  v1[12] = 0;
  v1[13] = 0;
  swift_bridgeObjectRelease(v25);
  v26 = v1[16];
  v1[14] = 0;
  v1[15] = 0;
  v1[16] = 0;
  swift_bridgeObjectRelease(v26);
  v27 = (void (*)(uint64_t))v1[17];
  if (v27)
  {
    v28 = v1[18];
    v29 = swift_retain();
    v27(v29);
    sub_145A0((uint64_t)v27, v28);
  }
}

void sub_1392BC()
{
  qword_210420 = 0x8010000000000000;
}

void sub_1392CC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5;

  v5 = objc_msgSend(a1, "tracklist");
  sub_B61B8();

  __asm { BR              X10 }
}

unint64_t sub_139A94(void *a1, uint64_t a2, unsigned __int8 a3)
{
  int v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  char v22;

  v6 = a3;
  v7 = sub_CE05C((uint64_t)_swiftEmptyArrayStorage);
  if (v6 != 1)
  {
    sub_1392CC(a1, 0, a2, a3);
    if (v8)
    {
      v9 = v8;
      v10 = swift_allocObject(&unk_1D32A8, 24, 7);
      *(_QWORD *)(v10 + 16) = v9;
      v11 = v9;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
      sub_13DCC0((uint64_t)sub_141554, v10, 0, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_1392CC(a1, 1, a2, a3);
      if (v13)
      {
        v14 = v13;
        v15 = swift_allocObject(&unk_1D32F8, 24, 7);
        *(_QWORD *)(v15 + 16) = v14;
        v16 = v14;
        v17 = swift_isUniquelyReferenced_nonNull_native(v7);
        sub_13DCC0((uint64_t)sub_141554, v15, 1u, v17);

        swift_bridgeObjectRelease(0x8000000000000000);
      }
      sub_1392CC(a1, 2, a2, a3);
      if (v18)
      {
        v19 = v18;
        v20 = swift_allocObject(&unk_1D32D0, 24, 7);
        *(_QWORD *)(v20 + 16) = v19;
        v21 = v19;
        v22 = swift_isUniquelyReferenced_nonNull_native(v7);
        sub_13DCC0((uint64_t)sub_141554, v20, 2u, v22);

        swift_bridgeObjectRelease(0x8000000000000000);
      }
      else
      {

      }
    }
  }
  return v7;
}

uint64_t sub_139C68()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[16]);
  sub_145A0(v0[17], v0[18]);
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for TransportControlsController()
{
  return objc_opt_self(_TtC12NowPlayingUI27TransportControlsController);
}

uint64_t initializeBufferWithCopyOfBuffer for TransportControlsController.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for TransportControlsController.ButtonConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for TransportControlsController.ButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportControlsController.ButtonConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportControlsController.ButtonConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportControlsController.ButtonConfiguration()
{
  return &type metadata for TransportControlsController.ButtonConfiguration;
}

unint64_t sub_139E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_13E664(a1, v4);
}

unint64_t sub_139E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_13E728(a1, a2, v5);
}

unint64_t sub_139EC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_13E808(a1, v4, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
}

unint64_t sub_139F14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_13E808(a1, v4, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
}

unint64_t sub_139F60(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(*(_QWORD *)(a1 + 16));
  v3 = Hasher._finalize()();
  return sub_13E918(a1, v3);
}

unint64_t sub_139FB8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  char v10;
  Swift::UInt v11;
  Swift::Int v12;
  _QWORD v14[9];

  v5 = v4;
  v10 = a4 & 1;
  Hasher.init(_seed:)(v14, *(_QWORD *)(v5 + 40));
  if ((a4 & 1) != 0)
    v11 = 0;
  else
    v11 = CGFloat.roundInteger.getter(*(double *)&a3);
  Hasher._combine(_:)(v11);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(a1, "hash"));
  v12 = Hasher._finalize()();
  return sub_13EA44((uint64_t)a1, a2, a3, v10, v12);
}

unint64_t sub_13A05C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_13EB10(a1, v3);
}

unint64_t sub_13A08C(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v3;
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, *(_QWORD *)(v1 + 40));
  sub_51AE4(*(double *)a1, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24));
  if ((*(_QWORD *)(a1 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *(_QWORD *)(a1 + 32);
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  return sub_13EBAC((CGFloat *)a1, v4);
}

unint64_t sub_13A0FC(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_13EC90(a1, v3);
}

unint64_t sub_13A154(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = ContextActionType.rawValue.getter(a1);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_13ED30(a1, v6);
}

unint64_t sub_13A1C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_13F0EC(a1, v7);
}

unint64_t sub_13A254(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_11141C((uint64_t)v5, a1);
  v3 = Hasher._finalize()();
  return sub_13EEA4(a1, v3);
}

unint64_t sub_13A2AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_13E808(a1, v4, (unint64_t *)&unk_201960, MPCPlayerPath_ptr);
}

unint64_t sub_13A2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for IndexPath(0);
  v6 = sub_141558(&qword_203EF8, (uint64_t)&protocol conformance descriptor for IndexPath);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_13EFB4(a1, v7);
}

unint64_t sub_13A35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_13F0EC(a1, v7);
}

unint64_t sub_13A3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  Hasher.init(_seed:)(v9, *(_QWORD *)(v1 + 40));
  sub_CE160(a1, (uint64_t)&v10);
  v3 = v10;
  v4 = v11;
  if ((v14 & 1) != 0)
  {
    v5 = v12;
    v6 = v13;
    String.hash(into:)(v9, v10, v11);
    v3 = v5;
    v4 = v6;
  }
  String.hash(into:)(v9, v3, v4);
  v7 = Hasher._finalize()();
  return sub_13F260(a1, v7);
}

void sub_13A470(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_200340);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_retain();
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_13A744(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  _QWORD v42[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203ED0);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v38 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v24 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v25 = v24 | (v13 << 6);
      }
      else
      {
        v26 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v26 >= v39)
          goto LABEL_36;
        v27 = v40[v26];
        ++v13;
        if (!v27)
        {
          v13 = v26 + 1;
          if (v26 + 1 >= v39)
            goto LABEL_36;
          v27 = v40[v13];
          if (!v27)
          {
            v28 = v26 + 2;
            if (v28 >= v39)
            {
LABEL_36:
              swift_release(v5);
              v3 = v38;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 >= 64)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v27 = v40[v28];
            if (!v27)
            {
              while (1)
              {
                v13 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_43;
                if (v13 >= v39)
                  goto LABEL_36;
                v27 = v40[v13];
                ++v28;
                if (v27)
                  goto LABEL_33;
              }
            }
            v13 = v28;
          }
        }
LABEL_33:
        v11 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v13 << 6);
      }
      v33 = 8 * v25;
      v34 = *(void **)(*(_QWORD *)(v5 + 48) + v33);
      v35 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v33);
      if ((v41 & 1) == 0)
      {
        v36 = v34;
        swift_unknownObjectRetain(v35);
      }
      v14 = *(_QWORD *)(v8 + 40);
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v17 = v16;
      Hasher.init(_seed:)(v42, v14);
      String.hash(into:)(v42, v15, v17);
      v18 = Hasher._finalize()();
      swift_bridgeObjectRelease(v17);
      v19 = -1 << *(_BYTE *)(v8 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v21 == v30;
          if (v21 == v30)
            v21 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v21);
        }
        while (v32 == -1);
        v22 = __clz(__rbit64(~v32)) + (v21 << 6);
      }
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v23 = 8 * v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v23) = v34;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v23) = v35;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_13AA60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  double v22;
  char v23;
  uint64_t v24;
  Swift::UInt v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;
  uint64_t v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002E0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        if (v18 >= v36)
          goto LABEL_39;
        v19 = v37[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v36)
            goto LABEL_39;
          v19 = v37[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_39:
              swift_release(v5);
              v3 = v35;
              if ((a2 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_46;
                if (v13 >= v36)
                  goto LABEL_39;
                v19 = v37[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = *(_QWORD *)(v5 + 48) + 32 * v17;
      v38 = *(_OWORD *)v21;
      v22 = *(double *)(v21 + 16);
      v23 = *(_BYTE *)(v21 + 24);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      if ((a2 & 1) == 0)
        swift_unknownObjectRetain(v38);
      Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
      if ((v23 & 1) != 0)
        v25 = 0;
      else
        v25 = CGFloat.roundInteger.getter(v22);
      Hasher._combine(_:)(v25);
      Hasher._combine(_:)((Swift::UInt)objc_msgSend((id)v38, "hash"));
      v26 = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v12 + 8 * v29);
        }
        while (v33 == -1);
        v14 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v8 + 48) + 32 * v14;
      *(_OWORD *)v15 = v38;
      *(double *)(v15 + 16) = v22;
      *(_BYTE *)(v15 + 24) = v23;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_13AD90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203F10);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v35 = 1 << *(_BYTE *)(v5 + 32);
    v36 = v3;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v23 >= v37)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v37)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v36;
                goto LABEL_43;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v37);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v9 >= v37)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
        v33 = v32;
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v31);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_13B040(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203F20);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_retain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_13B354(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::UInt64 v14;
  Swift::Int v15;
  unint64_t v16;
  double *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  Swift::UInt64 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_200330);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = v3;
    v39 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          return;
        }
        if (v21 >= v39)
          goto LABEL_29;
        v22 = v40[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v39)
            goto LABEL_29;
          v22 = v40[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_29:
              swift_release(v5);
              v3 = v38;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 > 63)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_36;
                if (v13 >= v39)
                  goto LABEL_29;
                v22 = v40[v13];
                ++v23;
                if (v22)
                  goto LABEL_26;
              }
            }
            v13 = v23;
          }
        }
LABEL_26:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v24 = (double *)(*(_QWORD *)(v5 + 48) + 40 * v20);
      v26 = *v24;
      v25 = v24[1];
      v28 = v24[2];
      v27 = v24[3];
      v29 = *((_QWORD *)v24 + 4);
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + (v20 << 6));
      v31 = *v30;
      v33 = v30[1];
      v32 = v30[2];
      v34 = v30[5];
      v42 = v30[4];
      v43 = v30[3];
      v35 = v30[6];
      v36 = v30[7];
      if ((v41 & 1) == 0)
        swift_bridgeObjectRetain(v31);
      Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
      sub_51AE4(v26, v25, v28, v27);
      if ((v29 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v14 = v29;
      else
        v14 = 0;
      Hasher._combine(_:)(v14);
      v15 = Hasher._finalize()();
      v16 = _HashTable.nextHole(atOrAfter:)(v15 & ~(-1 << *(_BYTE *)(v8 + 32)), v8 + 64, ~(-1 << *(_BYTE *)(v8 + 32)));
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (double *)(*(_QWORD *)(v8 + 48) + 40 * v16);
      *v17 = v26;
      v17[1] = v25;
      v17[2] = v28;
      v17[3] = v27;
      *((_QWORD *)v17 + 4) = v29;
      v18 = (_QWORD *)(*(_QWORD *)(v8 + 56) + (v16 << 6));
      *v18 = v31;
      v18[1] = v33;
      v18[2] = v32;
      v18[3] = v43;
      v18[4] = v42;
      v18[5] = v34;
      v18[6] = v35;
      v18[7] = v36;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_13B650(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203EE0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v35 >= 64)
                  bzero((void *)(v5 + 64), 8 * v36);
                else
                  *v10 = v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v9 >= v36)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(v5 + 56);
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *(_QWORD *)(v31 + v30);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v31 + v30));
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v32);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_13B904(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  __int128 v33;
  uint64_t v34[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_200288);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v31 = v3;
    v32 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v22 >= v13)
          goto LABEL_36;
        v23 = v32[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v13)
            goto LABEL_36;
          v23 = v32[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v13)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v31;
                goto LABEL_43;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v32[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v9 >= v13)
                  goto LABEL_36;
                v23 = v32[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v33 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
        swift_retain();
      Hasher.init(_seed:)(v34, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v18 == v26;
          if (v18 == v26)
            v18 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v28 == -1);
        v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19) = v29;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v19) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_13BBD8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::UInt v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203F28);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v21 >= v33)
          goto LABEL_36;
        v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_36;
          v22 = v34[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_43;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v33)
                  goto LABEL_36;
                v22 = v34[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(_QWORD *)(v5 + 56);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v30 = *(_QWORD *)(v28 + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v28 + 8 * v20));
      Hasher.init(_seed:)(v35, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

void sub_13BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  unsigned __int8 v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203F30);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v3;
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v23 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v24 = v23 | (v14 << 6);
      goto LABEL_34;
    }
    v25 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v25 >= v12)
      break;
    v26 = (_QWORD *)(v5 + 64);
    v27 = *(_QWORD *)(v38 + 8 * v25);
    ++v14;
    if (!v27)
    {
      v14 = v25 + 1;
      if (v25 + 1 >= v12)
        goto LABEL_36;
      v27 = *(_QWORD *)(v38 + 8 * v14);
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v27 = *(_QWORD *)(v38 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v14 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v27 = *(_QWORD *)(v38 + 8 * v14);
            ++v28;
            if (v27)
              goto LABEL_33;
          }
        }
        v14 = v28;
      }
    }
LABEL_33:
    v11 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_34:
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v24);
    v34 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v24);
    if ((v39 & 1) == 0)
      v35 = v34;
    Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
    v15 = ContextActionType.rawValue.getter(v33);
    v17 = v16;
    String.hash(into:)(v40, v15, v16);
    swift_bridgeObjectRelease(v17);
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(v8 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v13 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v13 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v31 = v21 == v30;
        if (v21 == v30)
          v21 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v13 + 8 * v21);
      }
      while (v32 == -1);
      v22 = __clz(__rbit64(~v32)) + (v21 << 6);
    }
    *(_QWORD *)(v13 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v22) = v33;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v22) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v26 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v26, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_13C1B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_200320);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v3;
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v36 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v36 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v36 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v36 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    sub_11141C((uint64_t)v38, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v24 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_13C4B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F9FA0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_unknownObjectRetain(v33);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_13C784(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  double v24;
  char v25;
  uint64_t v26;
  char v27;
  Swift::UInt v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002E8);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_46;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_25;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return;
    }
    if (v19 >= v38)
      break;
    v20 = (_QWORD *)(v5 + 64);
    v21 = *(_QWORD *)(v39 + 8 * v19);
    ++v13;
    if (!v21)
    {
      v13 = v19 + 1;
      if (v19 + 1 >= v38)
        goto LABEL_39;
      v21 = *(_QWORD *)(v39 + 8 * v13);
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v38)
        {
LABEL_39:
          swift_release(v5);
          if ((v40 & 1) == 0)
            goto LABEL_46;
          goto LABEL_42;
        }
        v21 = *(_QWORD *)(v39 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v13 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_48;
            if (v13 >= v38)
              goto LABEL_39;
            v21 = *(_QWORD *)(v39 + 8 * v13);
            ++v22;
            if (v21)
              goto LABEL_24;
          }
        }
        v13 = v22;
      }
    }
LABEL_24:
    v11 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_25:
    v23 = *(_QWORD *)(v5 + 48) + 32 * v18;
    v24 = *(double *)(v23 + 16);
    v25 = *(_BYTE *)(v23 + 24);
    v26 = *(_QWORD *)(v5 + 56) + 72 * v18;
    v44 = *(_OWORD *)(v26 + 16);
    v45 = *(_OWORD *)v23;
    v43 = *(_OWORD *)(v26 + 32);
    v41 = *(_OWORD *)v26;
    v42 = *(_OWORD *)(v26 + 48);
    v27 = *(_BYTE *)(v26 + 64);
    if ((v40 & 1) == 0)
      swift_unknownObjectRetain(v45);
    Hasher.init(_seed:)(v46, *(_QWORD *)(v8 + 40));
    if ((v25 & 1) != 0)
      v28 = 0;
    else
      v28 = CGFloat.roundInteger.getter(v24);
    Hasher._combine(_:)(v28);
    Hasher._combine(_:)((Swift::UInt)objc_msgSend((id)v45, "hash"));
    v29 = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(v8 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_47;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v12 + 8 * v32);
      }
      while (v36 == -1);
      v14 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 32 * v14;
    *(_OWORD *)v15 = v45;
    *(double *)(v15 + 16) = v24;
    *(_BYTE *)(v15 + 24) = v25;
    v16 = *(_QWORD *)(v8 + 56) + 72 * v14;
    *(_OWORD *)v16 = v41;
    *(_OWORD *)(v16 + 16) = v44;
    *(_OWORD *)(v16 + 32) = v43;
    *(_OWORD *)(v16 + 48) = v42;
    *(_BYTE *)(v16 + 64) = v27;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v20 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_46;
LABEL_42:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v20, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_46:
  swift_release(v5);
  *v3 = v8;
}

void sub_13CB10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002D0);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_13CE24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203EF0);
  v46 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v10;
  v13 = v11;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_43;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = *(_QWORD *)(v12 + 64);
  v44 = (_QWORD *)(v12 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v42 = v3;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v18 = v11 + 64;
  swift_retain();
  v19 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_36;
      v25 = v44[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_36:
          swift_release(v12);
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v43)
              goto LABEL_36;
            v25 = v44[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v12 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v9, v28, v6);
      v29 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v28, v6);
      v29 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v22);
    }
    v30 = *(_QWORD *)(v13 + 40);
    v31 = sub_141558(&qword_203EF8, (uint64_t)&protocol conformance descriptor for IndexPath);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v6, v31);
    v33 = -1 << *(_BYTE *)(v13 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v13 + 48) + v27 * v20, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release(v12);
  v3 = v42;
  v24 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v12 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_43:
  swift_release(v12);
  *v3 = v13;
}

void sub_13D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2002C0);
  v42 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v18 >= v39)
          goto LABEL_38;
        v19 = v40[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v39)
            goto LABEL_38;
          v19 = v40[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v39)
            {
LABEL_38:
              swift_release(v5);
              v3 = v2;
              if ((v42 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v40[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_45;
                if (v13 >= v39)
                  goto LABEL_38;
                v19 = v40[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = *(_QWORD *)(v5 + 56);
      v22 = *(_QWORD *)(v5 + 48) + 40 * v17;
      v23 = *(_QWORD *)v22;
      v24 = *(_QWORD *)(v22 + 8);
      v26 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 24);
      v27 = *(_BYTE *)(v22 + 32);
      v43 = *(_QWORD *)(v21 + 8 * v17);
      if ((v42 & 1) == 0)
        sub_CE1D0(v23, v24, v26, v25, v27);
      Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
      v28 = v23;
      v29 = v24;
      if ((v27 & 1) != 0)
      {
        String.hash(into:)(v44, v23, v24);
        v28 = v26;
        v29 = v25;
      }
      String.hash(into:)(v44, v28, v29);
      v30 = Hasher._finalize()();
      v31 = -1 << *(_BYTE *)(v8 + 32);
      v32 = v30 & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v12 + 8 * (v32 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v12 + 8 * v33);
        }
        while (v37 == -1);
        v14 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
      *(_QWORD *)v15 = v23;
      *(_QWORD *)(v15 + 8) = v24;
      *(_QWORD *)(v15 + 16) = v26;
      *(_QWORD *)(v15 + 24) = v25;
      *(_BYTE *)(v15 + 32) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v43;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

id sub_13D4F4(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_13A1C8((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_13F55C();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_unknownObjectRelease(*(_QWORD *)(v16 + 8 * v9));
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_13A744(v12, a3 & 1);
  v18 = sub_13A1C8((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for Key(0);
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
  return result;
}

void sub_13D644(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  char v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  char v24;

  v7 = (_QWORD **)v6;
  v13 = a5 & 1;
  v14 = (_QWORD *)*v6;
  v16 = sub_139FB8(a2, a3, a4, a5 & 1);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v22[7] + 8 * v16) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_13F704();
      goto LABEL_7;
    }
    sub_13AA60(v19, a6 & 1);
    v23 = sub_139FB8(a2, a3, a4, v13);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = v23;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_13E48C(v16, (uint64_t)a2, a3, a4, v13, a1, v22);
      swift_unknownObjectRetain(a2);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CompositeComponentItem);
  __break(1u);
}

void sub_13D790(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_13A05C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_13F8C4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_13AD90(v13, a3 & 1);
  v18 = sub_13A05C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt);
  __break(1u);
}

void sub_13D8C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_139E60(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_13FA64();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_release(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_13B040(v15, a4 & 1);
  v20 = sub_139E60(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_13DA24(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v8 = *v3;
  v10 = sub_13A08C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_13FC18();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      sub_141598((uint64_t *)a1, (uint64_t *)(v16[7] + (v10 << 6)));
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = v16[6] + 40 * v10;
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v19 = *(_OWORD *)a2;
    *(_OWORD *)(v19 + 16) = v20;
    *(_QWORD *)(v19 + 32) = *(_QWORD *)(a2 + 32);
    v21 = (_OWORD *)(v16[7] + (v10 << 6));
    v22 = *(_OWORD *)(a1 + 16);
    v23 = *(_OWORD *)(a1 + 32);
    v24 = *(_OWORD *)(a1 + 48);
    *v21 = *(_OWORD *)a1;
    v21[1] = v22;
    v21[2] = v23;
    v21[3] = v24;
    v25 = v16[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v16[2] = v27;
      return;
    }
    goto LABEL_14;
  }
  sub_13B354(v13, a3 & 1);
  v17 = sub_13A08C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = v17;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&_s9StackViewC21LayoutMetricsCacheKeyVN);
  __break(1u);
}

void sub_13DB88(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_13A05C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_13FDF8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_13B650(v13, a3 & 1);
  v18 = sub_13A05C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt);
  __break(1u);
}

void sub_13DCC0(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_13A0FC(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_13FF98();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      swift_release(v19[1]);
      *v19 = a1;
      v19[1] = a2;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v22 = (_QWORD *)(v18[7] + 16 * v12);
    *v22 = a1;
    v22[1] = a2;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_13B904(v15, a4 & 1);
  v20 = sub_13A0FC(a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TransportControlsController.ButtonConfiguration.Action);
  __break(1u);
}

id sub_13DDFC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_13A2AC((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_140488();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_unknownObjectRelease(*(_QWORD *)(v16 + 8 * v9));
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_13C4B0(v12, a3 & 1);
  v18 = sub_13A2AC((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = sub_F174(0, (unint64_t *)&unk_201960, MPCPlayerPath_ptr);
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
  return result;
}

void sub_13DF5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  char v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  char v27;

  v7 = (_QWORD **)v6;
  v13 = a5 & 1;
  v14 = (_QWORD *)*v6;
  v16 = sub_139FB8(a2, a3, a4, a5 & 1);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 72 * v16;
        v24 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v23 + 32) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v23 + 48) = v24;
        *(_BYTE *)(v23 + 64) = *(_BYTE *)(a1 + 64);
        v25 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)v23 = *(_OWORD *)a1;
        *(_OWORD *)(v23 + 16) = v25;
        return;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_140630();
      goto LABEL_7;
    }
    sub_13C784(v19, a6 & 1);
    v26 = sub_139FB8(a2, a3, a4, v13);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_13E4E0(v16, (uint64_t)a2, a3, a4, v13, a1, v22);
      swift_unknownObjectRetain(a2);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CompositeComponentItem);
  __break(1u);
}

void sub_13E0C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_139E60(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_14080C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_13CB10(v15, a4 & 1);
  v20 = sub_139E60(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_13E220(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_13A2F8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1409C0();
    goto LABEL_7;
  }
  sub_13CE24(v17, a3 & 1);
  v22 = sub_13A2F8(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_13E550(v14, (uint64_t)v11, a1, v20);
}

void sub_13E37C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_13A3DC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_140BE8();
      goto LABEL_7;
    }
    sub_13D1B4(v13, a3 & 1);
    v17 = sub_13A3DC(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_13E5E8(v10, a2, a1, v16);
      sub_CE19C(a2);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CompositeComponentCollectionView.ReusableViewClassKey);
  __break(1u);
}

unint64_t sub_13E48C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 32 * result;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_QWORD *)(v7 + 16) = a4;
  *(_BYTE *)(v7 + 24) = a5 & 1;
  *(_QWORD *)(a7[7] + 8 * result) = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

unint64_t sub_13E4E0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 32 * result;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_QWORD *)(v7 + 16) = a4;
  *(_BYTE *)(v7 + 24) = a5 & 1;
  v8 = a7[7] + 72 * result;
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(a6 + 64);
  v9 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v8 + 48) = v9;
  v10 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a6;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = a7[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a7[2] = v13;
  return result;
}

uint64_t sub_13E550(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IndexPath(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_13E5E8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  result = sub_CE160(a2, a4[6] + 40 * a1);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_13E664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_13166C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_9038C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_13E728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_13E808(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a2 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_F174(0, a3, a4);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
    v9 = static NSObject.== infix(_:_:)();

    if ((v9 & 1) == 0)
    {
      v10 = ~v6;
      for (i = (i + 1) & v10; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v10)
      {
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
        v12 = static NSObject.== infix(_:_:)();

        if ((v12 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_13E918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    v7 = *(_QWORD *)(a1 + 16);
    while (1)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v4);
      if (*(_QWORD *)(v8 + 16) == v7)
        break;
LABEL_4:
      v4 = (v4 + 1) & v6;
      if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        return v4;
    }
    if (v7 && v8 != a1)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v4));
      v9 = 0;
      v10 = v7;
      do
      {
        v11 = v8 + v9;
        v12 = a1 + v9;
        if (*(_QWORD *)(v8 + v9 + 32) != *(_QWORD *)(a1 + v9 + 32))
        {
LABEL_3:
          swift_bridgeObjectRelease(v8);
          goto LABEL_4;
        }
        if ((*(_BYTE *)(v11 + 56) & 1) != 0)
        {
          if (!*(_BYTE *)(v12 + 56))
            goto LABEL_3;
        }
        else if ((*(_BYTE *)(v12 + 56) & 1) != 0
               || (static CGFloat.==~ infix(_:_:)(*(double *)(v11 + 48), *(double *)(v12 + 48)) & 1) == 0)
        {
          goto LABEL_3;
        }
        v9 += 32;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease(v8);
    }
  }
  return v4;
}

unint64_t sub_13EA44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v10;
  uint64_t v12;

  v6 = -1 << *(_BYTE *)(v5 + 32);
  v7 = a5 & ~v6;
  if (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v10 = ~v6;
    do
    {
      v12 = *(_QWORD *)(v5 + 48) + 32 * v7;
      if (*(_QWORD *)v12 == a1)
      {
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        {
          if ((a4 & 1) != 0)
            return v7;
        }
        else if ((a4 & 1) == 0 && (static CGFloat.==~ infix(_:_:)(*(double *)(v12 + 16), *(double *)&a3) & 1) != 0)
        {
          return v7;
        }
      }
      v7 = (v7 + 1) & v10;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_13EB10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_13EBAC(CGFloat *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGRect *v11;
  double x;
  CGRect v14;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    v7 = *a1;
    v8 = a1[1];
    v9 = a1[2];
    v10 = a1[3];
    do
    {
      v11 = (CGRect *)(*(_QWORD *)(v2 + 48) + 40 * v4);
      x = v11[1].origin.x;
      v14.origin.x = v7;
      v14.origin.y = v8;
      v14.size.width = v9;
      v14.size.height = v10;
      if (CGRectEqualToRect(*v11, v14) && x == a1[4])
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_13EC90(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_13ED30(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(v2 + 48) + v5));
    v9 = v8;
    v10 = ContextActionType.rawValue.getter(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(v2 + 48) + v5));
          v9 = v17;
          v18 = ContextActionType.rawValue.getter(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_13EEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    sub_10F96C(v6);
    LOBYTE(v6) = v8;
    swift_release(v7);
    if ((v6 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = v10 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_10F96C(v10);
        LOBYTE(v10) = v12;
        swift_release(v11);
        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_13EFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_141558((unint64_t *)&unk_203F00, (uint64_t)&protocol conformance descriptor for IndexPath);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_13F0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_13F260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    do
    {
      v8 = (uint64_t *)(v7 + 40 * v5);
      v9 = *v8;
      v10 = v8[1];
      if ((v8[4] & 1) != 0)
      {
        v11 = v8[2];
        v12 = v8[3];
        sub_CE160(a1, (uint64_t)&v27);
        if ((v31 & 1) != 0)
        {
          v13 = v29;
          v14 = v30;
          v15 = v9 == v27 && v10 == v28;
          if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v27, v28, 0) & 1) != 0)
          {
            if (v11 == v13 && v12 == v14)
              return v5;
            v17 = v11;
            v18 = v12;
            v19 = v13;
            v20 = v14;
LABEL_3:
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v19, v20, 0) & 1) != 0)
              return v5;
          }
        }
      }
      else
      {
        sub_CE160(a1, (uint64_t)&v24);
        if ((v26 & 1) == 0)
        {
          v19 = v24;
          v20 = v25;
          if (v9 == v24 && v10 == v25)
            return v5;
          v17 = v9;
          v18 = v10;
          goto LABEL_3;
        }
      }
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

void sub_13F3B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_200340);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13F55C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203ED0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_unknownObjectRetain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13F704()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_BYTE *)(v17 + 24);
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_OWORD *)v17;
    *(_OWORD *)v22 = *(_OWORD *)v17;
    *(_QWORD *)(v22 + 16) = v18;
    *(_BYTE *)(v22 + 24) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_unknownObjectRetain(v23);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13F8C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203F10);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13FA64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203F20);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_retain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13FC18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_200330);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_QWORD *)(v17 + 32);
    v19 = v15 << 6;
    v20 = *(_QWORD *)(v2 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 56);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(_OWORD *)(v17 + 16);
    v25 = *(_OWORD *)(v20 + 8);
    v26 = *(_OWORD *)(v20 + 24);
    v27 = *(_OWORD *)(v20 + 40);
    *(_OWORD *)v23 = *(_OWORD *)v17;
    *(_OWORD *)(v23 + 16) = v24;
    *(_QWORD *)(v23 + 32) = v18;
    v28 = *(_QWORD *)(v4 + 56) + v19;
    *(_QWORD *)v28 = v21;
    *(_OWORD *)(v28 + 8) = v25;
    *(_OWORD *)(v28 + 24) = v26;
    *(_OWORD *)(v28 + 40) = v27;
    *(_QWORD *)(v28 + 56) = v22;
    swift_bridgeObjectRetain(v21);
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13FDF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203EE0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_13FF98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_200288);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_14013C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203F30);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    v17 = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1402DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_200320);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_140488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F9FA0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_unknownObjectRetain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_140630()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002E8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      v9 = v30 + 1;
      if (v30 + 1 >= v13)
        goto LABEL_26;
      v31 = *(_QWORD *)(v6 + 8 * v9);
      if (!v31)
        break;
    }
LABEL_25:
    v12 = (v31 - 1) & v31;
    v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_BYTE *)(v17 + 24);
    v20 = 72 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_BYTE *)(v21 + 64);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(_OWORD *)v17;
    v25 = *(_OWORD *)(v21 + 32);
    v26 = *(_OWORD *)(v21 + 48);
    v27 = *(_OWORD *)v21;
    v28 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v17;
    *(_QWORD *)(v23 + 16) = v18;
    *(_BYTE *)(v23 + 24) = v19;
    v29 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v29 = v27;
    *(_OWORD *)(v29 + 16) = v28;
    *(_OWORD *)(v29 + 32) = v25;
    *(_OWORD *)(v29 + 48) = v26;
    *(_BYTE *)(v29 + 64) = v22;
    swift_unknownObjectRetain(v24);
  }
  v32 = v30 + 2;
  if (v32 >= v13)
    goto LABEL_26;
  v31 = *(_QWORD *)(v6 + 8 * v32);
  if (v31)
  {
    v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v9);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_14080C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002D0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1409C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_203EF0);
  v25 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v25 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = v5 + 64;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    v20 = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_140BE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2002C0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_BYTE *)(v17 + 32);
    v23 = 8 * v15;
    v24 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v23);
    v25 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v25 = v18;
    *(_QWORD *)(v25 + 8) = v19;
    *(_QWORD *)(v25 + 16) = v20;
    *(_QWORD *)(v25 + 24) = v21;
    *(_BYTE *)(v25 + 32) = v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v23) = v24;
    sub_CE1D0(v18, v19, v20, v21, v22);
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

_QWORD *sub_140DA8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  double v31;
  id v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  id v42;
  Class isa;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  char v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  Class v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  id v75;
  _QWORD v77[2];
  char *v78;
  char *v79;
  id v80;
  _QWORD *v81;
  char *v82;
  char *v83;
  char *v84;
  id v85;
  void (*v86)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v87;
  int v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v77 - v9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = __chkstk_darwin(v11);
  v79 = (char *)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v84 = (char *)v77 - v15;
  v16 = __chkstk_darwin(v14);
  v78 = (char *)v77 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = _swiftEmptyArrayStorage;
  if (v19)
  {
    v87 = v17;
    v89 = v16;
    v83 = v8;
    v77[1] = v2;
    v94 = _swiftEmptyArrayStorage;
    sub_A9B48(0, v19, 0);
    v21 = (unsigned __int8 *)(a1 + 40);
    v20 = v94;
    v91 = a2;
    v82 = v10;
    do
    {
      v22 = *((_QWORD *)v21 - 1);
      LODWORD(v23) = *v21;
      v24 = a2;
      v25 = v24;
      v26 = _swiftEmptyDictionarySingleton;
      if ((_DWORD)v23 != 1)
      {
        v92 = v22;
        sub_1392CC(v24, 0, v22, (char)v23);
        if (v27)
        {
          v28 = v27;
          v88 = (int)v23;
          v29 = swift_allocObject(&unk_1D3230, 24, 7);
          *(_QWORD *)(v29 + 16) = v28;
          v85 = v28;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
          v93 = _swiftEmptyDictionarySingleton;
          sub_13DCC0((uint64_t)sub_141554, v29, 0, isUniquelyReferenced_nonNull_native);
          v26 = v93;
          *(_QWORD *)&v31 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
          v90 = v25;
          v32 = objc_msgSend(v25, "tracklist", v31);
          v33 = objc_msgSend(v32, "playingItemIndexPath");
          if (v33)
          {
            v34 = v33;
            v35 = v84;
            static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v33);

            v36 = v87;
            v37 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
            v38 = (uint64_t)v82;
            v39 = v35;
            v40 = v89;
            v37(v82, v39, v89);
            v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56);
            v86(v38, 0, 1, v40);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v38, 1, v40) != 1)
            {
              v81 = v26;
              v41 = v78;
              v37(v78, (char *)v38, v40);
              v42 = objc_msgSend(v32, "items");
              isa = IndexPath._bridgeToObjectiveC()().super.isa;
              v80 = objc_msgSend(v42, "itemAtIndexPath:", isa);

              (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v40);
              if (v88)
              {
                if (v88 == 2)
                {
                  v44 = v92;
                  v45 = v80;
                  v26 = v81;
                  if (v80)
                  {
                    v46 = objc_msgSend(v80, "seekCommand");
                    if (v46)
                    {
                      v47 = v46;
                      v48 = objc_msgSend(v46, "beginSeekWithDirection:", v44);
                      swift_unknownObjectRelease(v47);

                      if (v48)
                      {
                        v49 = swift_allocObject(&unk_1D3280, 24, 7);
                        *(_QWORD *)(v49 + 16) = v48;
                        v50 = v48;
                        v51 = swift_isUniquelyReferenced_nonNull_native(v26);
                        v93 = v26;
                        sub_13DCC0((uint64_t)sub_141554, v49, 1u, v51);
                        v26 = v93;

                        swift_bridgeObjectRelease(0x8000000000000000);
                      }
                    }
                    else
                    {

                    }
                  }
LABEL_16:
                  v52 = v90;
                }
                else
                {
                  v26 = v81;
                  v52 = v90;

                }
              }
              else
              {

                v52 = v90;
                v26 = v81;
              }
              v53 = objc_msgSend(v52, "tracklist");
              v54 = objc_msgSend(v53, "playingItemIndexPath");
              if (v54)
              {
                v55 = v54;
                v56 = v84;
                static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v54);

                v57 = v87;
                v58 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
                v59 = (uint64_t)v83;
                v60 = v56;
                v61 = v89;
                v58(v83, v60, v89);
                v86(v59, 0, 1, v61);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v59, 1, v61) != 1)
                {
                  v23 = v79;
                  v62 = v89;
                  v58(v79, (char *)v59, v89);
                  v63 = objc_msgSend(v53, "items");
                  v64 = IndexPath._bridgeToObjectiveC()().super.isa;
                  v86 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))objc_msgSend(v63, "itemAtIndexPath:", v64);

                  (*(void (**)(char *, uint64_t))(v87 + 8))(v23, v62);
                  LOBYTE(v23) = v88;
                  if (v88)
                  {
                    v22 = v92;
                    if (v88 != 2)
                    {
                      v75 = v86;
                      v25 = v90;

                      goto LABEL_29;
                    }
                    v65 = v86;
                    if (v86)
                    {
                      v66 = objc_msgSend(v86, "seekCommand");
                      if (v66)
                      {
                        v67 = v66;
                        v68 = objc_msgSend(v66, "endSeek");
                        swift_unknownObjectRelease(v67);

                        if (v68)
                        {
                          v69 = swift_allocObject(&unk_1D3258, 24, 7);
                          *(_QWORD *)(v69 + 16) = v68;
                          v70 = v68;
                          v71 = swift_isUniquelyReferenced_nonNull_native(v26);
                          v93 = v26;
                          sub_13DCC0((uint64_t)sub_141554, v69, 2u, v71);
                          v22 = v92;
                          v26 = v93;

                          swift_bridgeObjectRelease(0x8000000000000000);
                        }
                        else
                        {

                        }
                      }
                      else
                      {

                      }
LABEL_27:
                      LOBYTE(v23) = v88;
                    }
                    else
                    {

                    }
                  }
                  else
                  {

                    v22 = v92;
                  }
                  v25 = v90;
                  goto LABEL_29;
                }
              }
              else
              {
                v59 = (uint64_t)v83;
                v86((uint64_t)v83, 1, 1, v89);
              }
              sub_9944(v59, (uint64_t *)&unk_1FA950);

              v22 = v92;
              goto LABEL_27;
            }
          }
          else
          {
            v38 = (uint64_t)v82;
            v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56);
            v86((uint64_t)v82, 1, 1, v89);
          }
          sub_9944(v38, (uint64_t *)&unk_1FA950);

          goto LABEL_16;
        }
        v22 = v92;
      }
LABEL_29:

      v94 = v20;
      v73 = v20[2];
      v72 = v20[3];
      if (v73 >= v72 >> 1)
      {
        sub_A9B48(v72 > 1, v73 + 1, 1);
        v20 = v94;
      }
      v20[2] = v73 + 1;
      v74 = &v20[3 * v73];
      v74[4] = v22;
      v21 += 16;
      *((_BYTE *)v74 + 40) = (_BYTE)v23;
      v74[6] = v26;
      --v19;
      a2 = v91;
    }
    while (v19);
  }
  return v20;
}

uint64_t sub_141530()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_141558(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_141598(uint64_t *a1, uint64_t *a2)
{
  _s9StackViewC22StackViewLayoutMetricsVwta(a2, a1);
  return a2;
}

uint64_t storeEnumTagSinglePayload for TransportControlsController.ButtonConfiguration.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_141620 + 4 * byte_174F15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_141654 + 4 * byte_174F10[v4]))();
}

uint64_t sub_141654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_14165C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x141664);
  return result;
}

uint64_t sub_141670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x141678);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_14167C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_141684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransportControlsController.ButtonConfiguration.Action()
{
  return &type metadata for TransportControlsController.ButtonConfiguration.Action;
}

uint64_t getEnumTagSinglePayload for TransportControlsController.ButtonConfiguration.Description(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportControlsController.ButtonConfiguration.Description(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_14172C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_141744(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TransportControlsController.ButtonConfiguration.Description()
{
  return &type metadata for TransportControlsController.ButtonConfiguration.Description;
}

unint64_t sub_141770()
{
  unint64_t result;

  result = qword_203F38;
  if (!qword_203F38)
  {
    result = swift_getWitnessTable(&unk_174FF4, &type metadata for TransportControlsController.ButtonConfiguration.Action);
    atomic_store(result, (unint64_t *)&qword_203F38);
  }
  return result;
}

char *sub_1417CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  char *v20;
  NSString v21;
  objc_super v23;

  v13 = swift_unknownObjectWeakInit(&v6[qword_1FC4B0], 0);
  swift_unknownObjectWeakAssign(v13, a1);
  v14 = &v6[qword_1FC4B8];
  *(_QWORD *)v14 = a2;
  *((_QWORD *)v14 + 1) = a3;
  v15 = &v6[qword_1FC4C0];
  *(_QWORD *)v15 = a5;
  *((_QWORD *)v15 + 1) = a6;
  swift_retain();
  v23.receiver = v6;
  v23.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_204080);
  v16 = (char *)objc_msgSendSuper2(&v23, "init");
  Strong = swift_unknownObjectWeakLoadStrong(&v16[qword_1FC4B0]);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = *(_QWORD *)&v16[qword_1FC4B8 + 8];
    v20 = v16;
    swift_bridgeObjectRetain(v19);
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "addObserver:forKeyPath:options:context:", v20, v21, a4, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

    swift_unknownObjectRelease(v18);
  }

  swift_release(a6);
  return v16;
}

id sub_14191C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id result;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v10[14];
  _BYTE v11[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController);
  if (!v1)
  {
    v6 = 0;
    return (id)(v6 & 1);
  }
  v2 = v1;
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    result = objc_msgSend(v2, "view");
    if (!result)
      goto LABEL_13;
    v4 = result;
    v5 = objc_msgSend(result, "window");

    if (v5)
    {

      v6 = 1;
      return (id)(v6 & 1);
    }
  }
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v11, 0, 0);
  result = (id)sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v10);
  v7 = v10[0];
  if (v10[0])
  {
    v8 = v10[1];
    swift_unknownObjectRetain(v10[0]);
    sub_4AE24((uint64_t)v10);
    ObjectType = swift_getObjectType(v7);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 336))(ObjectType, v8);
    swift_unknownObjectRelease(v7);

    return (id)(v6 & 1);
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_141AB8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;

  v2 = v1;
  v4 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view;
  v5 = *(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view) = a1;
  v6 = a1;
  v16 = v6;
  if (a1)
  {
    if (v5)
      v7 = v6 == v5;
    else
      v7 = 0;
    if (v7)
      goto LABEL_11;
  }
  else if (!v5)
  {
LABEL_11:

    v15 = v16;
    goto LABEL_12;
  }
  v8 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_accessoryViewFrameObserver;
  v9 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_accessoryViewFrameObserver);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_accessoryViewFrameObserver) = 0;

  v10 = *(void **)(v2 + v4);
  if (!v10)
    goto LABEL_11;
  v11 = swift_allocObject(&unk_1D3478, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v2);
  objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_204080));
  v12 = v10;
  v13 = sub_1417CC(v12, 0x656D617266, 0xE500000000000000, 1, (uint64_t)sub_1430EC, v11);
  v14 = *(void **)(v2 + v8);
  *(_QWORD *)(v2 + v8) = v13;

  v15 = v14;
LABEL_12:

}

void sub_141BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double Width;
  double Height;
  id v12;
  void *v13;
  _BYTE v14[24];
  CGRect v15;
  CGRect v16;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v7, "presentationController");
      v9 = objc_msgSend(v8, "containerView");

      if (v9
        || (v12 = objc_msgSend(v7, "presentingViewController")) != 0
        && (v13 = v12, v9 = objc_msgSend(v12, "view"), v13, v9))
      {
        objc_msgSend(v9, "bounds");
        Width = CGRectGetWidth(v15);
        objc_msgSend(v9, "bounds");
        Height = CGRectGetHeight(v16);
        objc_msgSend(v7, "setPreferredContentSize:", Width, Height - _UISheetMinimumTopInset(v9));

        v5 = v7;
        v7 = v9;
      }

      v5 = v7;
    }

  }
}

void sub_141D20(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  char *v7;
  char v8;
  void *v9;
  char v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController);
    if (!v6)
    {
LABEL_10:

      return;
    }
    v7 = v6;
    v8 = objc_msgSend(v7, "isReversed") | a1;
    if ((objc_msgSend(v7, "isReversed") & 1) != 0)
    {
      if ((v8 & 1) != 0 && (a1 & 1) == 0)
        goto LABEL_9;
    }
    else if ((v8 & 1) != 0)
    {
LABEL_9:
      sub_142D3C(0);

      v5 = v7;
      goto LABEL_10;
    }
    v9 = *(void **)&v5[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController];
    *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController] = 0;

    goto LABEL_9;
  }
}

void sub_141DEC(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController);
  if (v5)
  {
    v11 = v5;
    v6 = objc_msgSend(v11, "transitionCoordinator");
    if (v6)
    {
      v7 = v6;
      v8 = swift_allocObject(&unk_1D34F0, 32, 7);
      *(_QWORD *)(v8 + 16) = a1;
      *(_QWORD *)(v8 + 24) = a2;
      aBlock[4] = sub_AD3E0;
      v13 = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_12EB28;
      aBlock[3] = &block_descriptor_10_3;
      v9 = _Block_copy(aBlock);
      v10 = v13;
      sub_2BE00((uint64_t)a1, a2);
      objc_msgSend(v7, "animateAlongsideTransition:completion:", 0, v9, swift_release(v10).n128_f64[0]);

      _Block_release(v9);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      if (a1)
        a1();

    }
  }
  else
  {
    sub_142034((uint64_t)a1, a2);
  }
}

void sub_142034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType(Strong);
    v29 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, ObjectType, v9);
    swift_unknownObjectRelease(v8);
    v11 = swift_unknownObjectWeakLoadStrong(v6);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)(v6 + 8);
      v14 = swift_getObjectType(v11);
      v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v3, v14, v13);
      swift_unknownObjectRelease(v12);
      objc_msgSend(v29, "setModalPresentationStyle:", 1);
      objc_msgSend(v29, "setTransitioningDelegate:", v3);
      v16 = objc_msgSend(v29, "presentationController");
      if (v16)
      {
        v17 = v16;
        v18 = objc_opt_self(UISheetPresentationController);
        v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
        if (v19)
        {
          v20 = v19;
          objc_msgSend(v19, "_setWantsBottomAttached:", 1);
          objc_msgSend(v20, "_setCornerRadiusForPresentationAndDismissal:", 0.0);
          objc_msgSend(v20, "_setShouldDismissWhenTappedOutside:", 1);
          v21 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view), "superview");
          objc_msgSend(v20, "setSourceView:", v21);

          v17 = v21;
        }

      }
      if (a1)
      {
        aBlock[4] = a1;
        v31 = a2;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_F528;
        aBlock[3] = &block_descriptor_35;
        v22 = _Block_copy(aBlock);
        v23 = v31;
        v24 = v29;
        sub_2BE00(a1, a2);
        *(_QWORD *)&v25 = swift_release(v23).n128_u64[0];
        v26 = v29;
      }
      else
      {
        v27 = v29;
        v26 = v29;
        v22 = 0;
      }
      objc_msgSend(v15, "presentViewController:animated:completion:", v26, 1, v22, v25);
      _Block_release(v22);

      v28 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController);
      *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController) = v29;

    }
    else
    {

    }
  }
}

id sub_1422E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PalettePresentationInteraction();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PalettePresentationInteraction()
{
  return objc_opt_self(_TtC12NowPlayingUI30PalettePresentationInteraction);
}

void sub_1423CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  char v8;
  void *v9;

  v2 = v1;
  v3 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view);
  if (v4)
  {
    if (!a1
      || (sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr),
          v6 = a1,
          v7 = v4,
          v8 = static NSObject.== infix(_:_:)(v7, v6),
          v7,
          v6,
          (v8 & 1) == 0)
      && (v4 = *(void **)(v2 + v3)) != 0)
    {
      objc_msgSend(v4, "removeGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer));
      v9 = *(void **)(v2 + v3);
      if (v9)
        objc_msgSend(v9, "removeGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer));
    }
  }
}

void sub_142500(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  void *v11;

  v2 = v1;
  v4 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view);
  if (v5)
  {
    if (a1)
    {
      sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
      v6 = a1;
      v7 = v5;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        return;
    }
  }
  else if (!a1)
  {
    return;
  }
  v9 = a1;
  sub_141AB8(a1);
  v10 = *(void **)(v2 + v4);
  if (v10)
  {
    objc_msgSend(v10, "addGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer));
    v11 = *(void **)(v2 + v4);
    if (v11)
      objc_msgSend(v11, "addGestureRecognizer:", *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer));
  }
}

BOOL sub_1426EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _BOOL8 result;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _BOOL4 v15;

  v2 = v1;
  sub_F174(0, (unint64_t *)&qword_1FA930, NSObject_ptr);
  v4 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer;
  v5 = *(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer);
  LODWORD(a1) = static NSObject.== infix(_:_:)(a1, v5);

  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController);
  result = (a1 ^ 1) & (v6 == 0);
  if (((a1 ^ 1) & 1) == 0 && !v6)
  {
    v8 = *(id *)(v2 + v4);
    v9 = objc_msgSend(v8, "view");
    objc_msgSend(v8, "translationInView:", v9);
    v11 = v10;
    v13 = v12;

    v14 = fabs(v13);
    v15 = v14 > 2.22044605e-16;
    if (fabs(v11 * 0.5) >= v14)
      v15 = 0;
    return v13 < 2.22044605e-16 && v15;
  }
  return result;
}

void sub_142854(id a1@<X1>, void *a2@<X0>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  CGFloat Width;
  double Height;
  double v26;
  char v27;
  double v28;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  CGRect v37;
  CGRect v38;

  if ((a3 & 1) != 0)
  {
    v30 = objc_msgSend(a1, "view");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "bounds");
      v21 = v32;

      v33 = objc_msgSend(a2, "view");
      if (v33)
      {
        v34 = v33;
        objc_msgSend(v33, "bounds");
        Width = v35;
        v28 = v36;

        v27 = 0;
        v19 = 0;
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    v7 = *(void **)(v4 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view);
    if (!v7)
    {
      v27 = 1;
      v19 = 0;
      v21 = 0;
      Width = 0.0;
      v28 = 0.0;
      goto LABEL_9;
    }
    v8 = v7;
    objc_msgSend(v8, "frame");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = objc_msgSend(a1, "view");
    objc_msgSend(v8, "convertRect:toView:", v17, v10, v12, v14, v16);
    v19 = v18;
    v21 = v20;

    v22 = objc_msgSend(a1, "view");
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, "bounds");
      Width = CGRectGetWidth(v37);
      objc_msgSend(v23, "bounds");
      Height = CGRectGetHeight(v38);
      v26 = _UISheetMinimumTopInset(v23);

      v27 = 0;
      v28 = Height - v26;
LABEL_9:
      *(_QWORD *)a4 = v19;
      *(_QWORD *)(a4 + 8) = v21;
      *(CGFloat *)(a4 + 16) = Width;
      *(double *)(a4 + 24) = v28;
      *(_BYTE *)(a4 + 32) = v27;
      return;
    }
  }
  __break(1u);
}

id sub_142A9C(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  char v15;
  id v16;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  id v24;
  objc_class *v25;
  _BYTE *v26;
  id v27;
  id v28;
  objc_super v29;
  _BYTE v30[40];
  _QWORD v31[4];
  char v32;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = Strong;
  v7 = *((_QWORD *)v4 + 1);
  ObjectType = swift_getObjectType(Strong);
  v9 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 24))(v2, ObjectType, v7);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v9).n128_u64[0];
  if (!v10 || (v12 = objc_msgSend(a1, "presentingViewController", v11)) == 0)
  {
LABEL_6:
    swift_unknownObjectRelease(v6);
    return 0;
  }
  v13 = v12;
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 32);
  v15 = v14(ObjectType, v7);
  sub_142854(v13, a1, v15 & 1, (uint64_t)v30);
  sub_97EB4((uint64_t)v30, (uint64_t)v31);
  if ((v32 & 1) != 0)
  {

    goto LABEL_6;
  }
  v19 = *(double *)v31;
  v18 = *(double *)&v31[1];
  v21 = *(double *)&v31[2];
  v20 = *(double *)&v31[3];
  if ((v14(ObjectType, v7) & 1) != 0)
  {
    v25 = (objc_class *)type metadata accessor for NowPlayingFormSheetAnimationController();
    v26 = objc_allocWithZone(v25);
    *(_QWORD *)&v26[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_completionBlocks] = _swiftEmptyArrayStorage;
    v26[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_hasDonated] = 0;
    *(_QWORD *)&v26[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_interaction] = v2;
    v29.receiver = v26;
    v29.super_class = v25;
    v27 = v2;
    v28 = objc_msgSendSuper2(&v29, "init");
    objc_msgSend(v28, "setIsReversed:", 1, v29.receiver, v29.super_class);
    v16 = v28;
    objc_msgSend(v16, "setSourceFrame:", v19, v18, v21, v20);

    swift_unknownObjectRelease(v6);
  }
  else
  {
    v22 = objc_allocWithZone((Class)type metadata accessor for PalettePresentationAnimationController());
    v23 = v2;
    v16 = sub_60BEC(v23);

    objc_msgSend(v16, "setIsReversed:", 1);
    objc_msgSend(v16, "setSourceFrame:", v19, v18, v21, v20);
    v24 = v16;
    sub_142D3C(v16);
    swift_unknownObjectRelease(v6);

  }
  return v16;
}

void sub_142D3C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  char *v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  _BYTE v15[24];

  v2 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController) = a1;
  v4 = a1;

  v5 = *(char **)(v1 + v2);
  if (v5)
  {
    v6 = swift_allocObject(&unk_1D3478, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v1);
    v7 = swift_allocObject(&unk_1D34A0, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_142ECC;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = (char **)&v5[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks];
    swift_beginAccess(&v5[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks], v15, 33, 0);
    v9 = *v8;
    v10 = v5;
    swift_retain_n(v6, 2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_13460C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *v8 = v9;
    }
    v13 = *((_QWORD *)v9 + 2);
    v12 = *((_QWORD *)v9 + 3);
    if (v13 >= v12 >> 1)
    {
      v9 = sub_13460C((char *)(v12 > 1), v13 + 1, 1, v9);
      *v8 = v9;
    }
    *((_QWORD *)v9 + 2) = v13 + 1;
    v14 = &v9[16 * v13];
    *((_QWORD *)v14 + 4) = sub_60F98;
    *((_QWORD *)v14 + 5) = v7;
    swift_endAccess(v15);

    swift_release_n(v6, 2);
  }
}

uint64_t sub_142EA8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_142ECC(char a1)
{
  uint64_t v1;

  sub_141D20(a1, v1);
}

uint64_t sub_142ED4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_142EF8(void *a1, void *a2)
{
  char *v2;
  void *v3;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  char v15;
  id v16;
  objc_class *v17;
  _BYTE *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;
  _BYTE v29[40];
  _QWORD v30[4];
  char v31;

  v3 = v2;
  v6 = &v2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType(Strong);
    v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 24))(v3, ObjectType, v9);
    v12 = *(_QWORD *)(v11 + 16);
    v13 = swift_bridgeObjectRelease(v11);
    if (v12)
    {
      v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 32);
      if ((v14(ObjectType, v9, v13) & 1) != 0)
      {
        v17 = (objc_class *)type metadata accessor for NowPlayingFormSheetAnimationController();
        v18 = objc_allocWithZone(v17);
        *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_completionBlocks] = _swiftEmptyArrayStorage;
        v18[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_hasDonated] = 0;
        *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_interaction] = v3;
        v28.receiver = v18;
        v28.super_class = v17;
        v19 = v3;
        v16 = objc_msgSendSuper2(&v28, "init");
        swift_unknownObjectRelease(v8);
        return v16;
      }
      v15 = ((uint64_t (*)(uint64_t, uint64_t))v14)(ObjectType, v9);
      sub_142854(a2, a1, v15 & 1, (uint64_t)v29);
      sub_97EB4((uint64_t)v29, (uint64_t)v30);
      if ((v31 & 1) == 0)
      {
        v20 = *(double *)v30;
        v21 = *(double *)&v30[1];
        v22 = *(double *)&v30[2];
        v23 = *(double *)&v30[3];
        v24 = objc_allocWithZone((Class)type metadata accessor for PalettePresentationAnimationController());
        v25 = v3;
        v16 = sub_60BEC(v25);

        objc_msgSend(v16, "setSourceFrame:", v20, v21, v22, v23);
        v26 = v16;
        sub_142D3C(v16);
        swift_unknownObjectRelease(v8);

        return v16;
      }
    }
    swift_unknownObjectRelease(v8);
  }
  return 0;
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_35(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1430EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_141BD0(a1, a2, v2);
}

uint64_t sub_1430F4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_143128(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    v19 = swift_retain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFF8));
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_135E78(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_135E78(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8)))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_145328(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

_QWORD *SleepTimerController.__allocating_init(player:isLocalPublisher:playbackController:playbackSpeedPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char v14;
  char v15;
  int *v16;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  void *v21;
  float v22;
  float v23;
  uint64_t v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v9 = (_QWORD *)swift_allocObject(v5, 88, 7);
  v9[8] = &_swiftEmptySetSingleton;
  v9[10] = 0;
  v9[2] = a1;
  v9[3] = a2;
  ObjectType = swift_getObjectType(a1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 312);
  v12 = swift_unknownObjectRetain(a1);
  v13 = v11(ObjectType, a2, v12);
  v15 = v14 & 1;
  v16 = sub_143DB0(ObjectType, a2);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(ObjectType, a2);
  v18 = type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v9[4] = sub_41BDC(v13, v15, (uint64_t)v16, v17 & 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 56);
  v20 = swift_unknownObjectRetain(a1);
  v21 = (void *)v19(ObjectType, a2, v20);
  objc_msgSend(v21, "rate");
  v23 = v22;

  v24 = ((uint64_t (*)(uint64_t, uint64_t))v11)(ObjectType, a2);
  LOBYTE(v13) = v25 & 1;
  v26 = sub_144058(ObjectType, a2);
  v27 = type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = sub_D7358(a1, a2, v24, v13, v26, v23, 0.0);
  swift_unknownObjectRelease_n(a1, 2);
  v9[5] = v28;
  v9[6] = a3;
  v9[9] = a4;
  v9[7] = a5;
  return v9;
}

_QWORD *SleepTimerController.init(player:isLocalPublisher:playbackController:playbackSpeedPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v6;

  v6 = sub_14541C(a1, a2, a3, a4, a5);
  swift_unknownObjectRelease(a1);
  return v6;
}

void sub_143538()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  __n128 v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  id v52;
  NSString v53;
  uint64_t v54;
  unint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  char v83[32];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0F0);
  v80 = *(_QWORD *)(v1 - 8);
  v81 = v1;
  v2 = __chkstk_darwin(v1);
  v78 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v79 = (char *)&v69 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_204240);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin(v5);
  v75 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD40);
  v71 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_204250);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_204258);
  v73 = *(_QWORD *)(v14 - 8);
  v74 = v14;
  __chkstk_darwin(v14);
  v72 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v70 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!os_feature_enabled_red_sun(v17))
    return;
  v20 = v0 + 8;
  swift_beginAccess(v0 + 8, v83, 0, 0);
  v22 = v0;
  v23 = v0[8];
  v69 = v20;
  if ((v23 & 0xC000000000000001) != 0)
  {
    if (v23 < 0)
      v24 = v23;
    else
      v24 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v25 = __CocoaSet.count.getter(v24);
    swift_bridgeObjectRelease(v23);
    if (v25)
      return;
  }
  else if (*(_QWORD *)(v23 + 16))
  {
    return;
  }
  if ((static Podcasts.isBlueMoonEnabled()(v21) & 1) != 0)
  {
    v82[0] = dispatch thunk of PlaybackController.sleepTimerPublisher.getter();
    v26 = swift_allocObject(&unk_1D3548, 24, 7);
    swift_weakInit(v26 + 16, v22);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_204288);
    v28 = sub_27A8C(&qword_204290, &qword_204288, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v29 = Publisher<>.sink(receiveValue:)(sub_14573C, v26, v27, v28);
    swift_release(v26);
    swift_release(v82[0]);
    v30 = v69;
    v31 = swift_beginAccess(v69, v82, 33, 0);
    AnyCancellable.store(in:)(v30, v31);
    swift_endAccess(v82);
    swift_release(v29);
    v33 = dispatch thunk of PlaybackController.$nowPlayingItem.getter(v32);
    dispatch thunk of PlaybackController.$durationSnapshot.getter(v33);
    v34 = sub_27A8C(&qword_1FBC70, &qword_204250, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v35 = sub_27A8C(&qword_1FBD50, &qword_1FBD40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v36 = v72;
    Publisher.combineLatest<A>(_:)(v9, v10, v7, v34, v35);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v37 = swift_allocObject(&unk_1D3548, 24, 7);
    swift_weakInit(v37 + 16, v22);
    v38 = swift_allocObject(&unk_1D35E8, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_145744;
    *(_QWORD *)(v38 + 24) = v37;
    v39 = sub_27A8C(&qword_204298, &qword_204258, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    v40 = v74;
    v41 = Publisher<>.sink(receiveValue:)(sub_145770, v38, v74, v39);
    v42 = swift_release(v38);
    (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v36, v40, v42);
    v43 = swift_beginAccess(v30, v82, 33, 0);
    v44 = v30;
  }
  else
  {
    v45 = v22[6];
    v46 = v69;
    if (v45)
    {
      v82[0] = v22[6];
      v47 = swift_allocObject(&unk_1D3548, 24, 7);
      swift_weakInit(v47 + 16, v22);
      swift_retain(v45);
      v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
      v49 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v50 = Publisher<>.sink(receiveValue:)(sub_145734, v47, v48, v49);
      swift_release(v47);
      swift_release(v82[0]);
      v51 = swift_beginAccess(v46, v82, 33, 0);
      AnyCancellable.store(in:)(v46, v51);
      swift_endAccess(v82);
      swift_release(v50);
    }
    v52 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v53 = String._bridgeToObjectiveC()();
    NSNotificationCenter.publisher(for:object:)(v53, 0);

    v54 = swift_allocObject(&unk_1D3548, 24, 7);
    swift_weakInit(v54 + 16, v22);
    v55 = sub_1456EC();
    v41 = Publisher<>.sink(receiveValue:)(sub_1456E4, v54, v16, v55);
    v56 = swift_release(v54);
    (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v19, v16, v56);
    v43 = swift_beginAccess(v46, v82, 33, 0);
    v44 = v46;
  }
  AnyCancellable.store(in:)(v44, v43);
  swift_endAccess(v82);
  swift_release(v41);
  v57 = v22[7];
  if (v57)
  {
    v82[0] = v22[7];
    swift_retain(v57);
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_204268);
    v59 = sub_27A8C((unint64_t *)&unk_204270, &qword_204268, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v60 = v75;
    Publisher.map<A>(_:)(sub_144664, 0, v58, &type metadata for Double, v59);
    swift_release(v57);
    v61 = v22[5] + OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__desiredRate;
    swift_beginAccess(v61, v82, 33, 0);
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1C8);
    v63 = v79;
    Published.projectedValue.getter(v62);
    swift_endAccess(v82);
    v64 = sub_27A8C(&qword_204280, (uint64_t *)&unk_204240, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v65 = v77;
    Publisher<>.assign(to:)(v63, v77, v64);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v60, v65);
    v67 = v80;
    v66 = v81;
    v68 = v78;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v78, v63, v81);
    swift_beginAccess(v61, v82, 33, 0);
    Published.projectedValue.setter(v68, v62);
    swift_endAccess(v82);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v66);
  }
}

double sub_143CA8(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _BYTE v17[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = (_QWORD *)Strong;
    v7 = *(_QWORD *)(Strong + 32);
    KeyPath = swift_getKeyPath(&unk_1752E0);
    v9 = swift_getKeyPath(&unk_175308);
    LOBYTE(v16) = v2;
    swift_retain(v7);
    static Published.subscript.setter(&v16, v7, KeyPath, v9);
    v11 = v6[3];
    v10 = v6[4];
    ObjectType = swift_getObjectType(v6[2]);
    swift_retain(v10);
    v13 = sub_143DB0(ObjectType, v11);
    v14 = swift_getKeyPath(&unk_175130);
    v15 = swift_getKeyPath(&unk_175158);
    v16 = v13;
    static Published.subscript.setter(&v16, v10, v14, v15);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

int *sub_143DB0(uint64_t a1, uint64_t a2)
{
  int *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int *v6;

  if (((*(uint64_t (**)(void))(a2 + 112))() & 1) != 0)
  {
    if (qword_1F9678 != -1)
      swift_once(&qword_1F9678, sub_14511C);
    v2 = off_204090;
    v3 = swift_bridgeObjectRetain(off_204090);
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v2 = (int *)sub_135114(0, *(_QWORD *)((char *)&dword_10 + (_QWORD)v2) + 1, 1, v2);
    v5 = *((_QWORD *)v2 + 2);
    v4 = *((_QWORD *)v2 + 3);
    if (v5 >= v4 >> 1)
      v2 = (int *)sub_135114((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v5 + 1;
    v6 = &v2[4 * v5];
    *((_QWORD *)v6 + 4) = 1;
    *((_BYTE *)v6 + 40) = 1;
  }
  else
  {
    if (qword_1F9678 != -1)
      swift_once(&qword_1F9678, sub_14511C);
    v2 = off_204090;
    swift_bridgeObjectRetain(off_204090);
  }
  return v2;
}

double sub_143EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *Strong;
  double result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BYTE v29[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = (_QWORD *)swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    v7 = Strong[3];
    v6 = Strong[4];
    ObjectType = swift_getObjectType(Strong[2]);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 312);
    swift_retain(v6);
    v10 = v9(ObjectType, v7);
    LOBYTE(v7) = v11;
    KeyPath = swift_getKeyPath(&unk_1751C0);
    v13 = swift_getKeyPath(&unk_1751E8);
    v27 = v10;
    v28 = v7 & 1;
    static Published.subscript.setter(&v27, v6, KeyPath, v13);
    v14 = v5[5];
    v15 = v5[3];
    v16 = swift_getObjectType(v5[2]);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 312);
    swift_retain(v14);
    v18 = v17(v16, v15);
    LOBYTE(v15) = v19;
    v20 = swift_getKeyPath(&unk_175298);
    v21 = swift_getKeyPath(&unk_1752C0);
    v27 = v18;
    v28 = v15 & 1;
    static Published.subscript.setter(&v27, v14, v20, v21);
    v22 = v5[5];
    v23 = v5[3];
    v24 = swift_getObjectType(v5[2]);
    swift_retain(v22);
    LOBYTE(v18) = sub_144058(v24, v23);
    v25 = swift_getKeyPath(&unk_175250);
    v26 = swift_getKeyPath(&unk_175278);
    LOBYTE(v27) = v18 & 1;
    static Published.subscript.setter(&v27, v22, v25, v26);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

BOOL sub_144058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  if ((static Podcasts.isBlueMoonEnabled()() & 1) == 0
    && ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2) & 1) == 0)
  {
    return 0;
  }
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
  return (v5 & 1) == 0 || v4 != 0;
}

void sub_1440C0(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v28, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (v2)
    {
      v6 = *(_QWORD *)(Strong + 80);
      *(_QWORD *)(Strong + 80) = v2;
      swift_unknownObjectRetain_n(v2, 2);
      swift_unknownObjectRelease(v6);
      swift_getObjectType(v2);
      v7 = sub_1442BC();
      v9 = v8;
      v10 = *(_QWORD *)(v5 + 32);
      KeyPath = swift_getKeyPath(&unk_1751C0);
      v12 = swift_getKeyPath(&unk_1751E8);
      v13 = v9 & 1;
      v26 = v7;
      v27 = v9 & 1;
      v14 = (v9 & 1) == 0 || v7 != 0;
      swift_retain(v10);
      static Published.subscript.setter(&v26, v10, KeyPath, v12);
      v15 = *(_QWORD *)(v5 + 40);
      swift_retain(v15);
      objc_msgSend(v2, "fireDate");
      v17 = v16;
      v18 = swift_getKeyPath(&unk_175208);
      v19 = swift_getKeyPath(&unk_175230);
      v26 = v17;
      static Published.subscript.setter(&v26, v15, v18, v19);
      v20 = *(_QWORD *)(v5 + 40);
      v21 = swift_getKeyPath(&unk_175250);
      v22 = swift_getKeyPath(&unk_175278);
      LOBYTE(v26) = v14;
      swift_retain(v20);
      static Published.subscript.setter(&v26, v20, v21, v22);
      v23 = *(_QWORD *)(v5 + 40);
      v24 = swift_getKeyPath(&unk_175298);
      v25 = swift_getKeyPath(&unk_1752C0);
      v26 = v7;
      v27 = v13;
      swift_retain(v23);
      static Published.subscript.setter(&v26, v23, v24, v25);
      swift_release(v5);
      swift_unknownObjectRelease(v2);
    }
    else
    {
      swift_release(Strong);
    }
  }
}

uint64_t sub_1442BC()
{
  void *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)objc_msgSend(v0, "stopMode");
  if (v1 == (_BYTE *)&dword_0 + 3)
    return 2;
  if (v1 == (_BYTE *)&dword_0 + 2)
    return 1;
  if (v1 != (_BYTE *)&dword_0 + 1)
    return 0;
  objc_msgSend(v0, "time");
  return v2;
}

void sub_144334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  float v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  BOOL v21;
  double v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  char v47;
  _BYTE v48[24];
  _QWORD v49[5];
  float v50;
  char v51;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v48, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v11 = Strong;
    v12 = sub_4AD4C(a2, (uint64_t)v49);
    if (v51 == 2)
      goto LABEL_16;
    v13 = *(double *)v49;
    v14 = *(double *)&v49[3];
    v15 = *(double *)&v49[4];
    v16 = v50;
    v17 = Date.init()(v12);
    v18 = Date.timeIntervalSinceReferenceDate.getter(v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (!a1)
      goto LABEL_16;
    v19 = v15 + (v18 - v13) * v16;
    if (v19 >= v14)
      v19 = v14;
    v20 = v19 * 1000.0;
    v21 = v19 <= 0.0;
    v22 = 0.0;
    if (!v21)
      v22 = v20;
    sub_130EFC(COERCE__INT64(round(v22) / 1000.0), 0);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)(v11 + 32);
      v26 = qword_1F9678;
      swift_retain(v25);
      if (v26 != -1)
        swift_once(&qword_1F9678, sub_14511C);
      v27 = off_204090;
      v28 = swift_bridgeObjectRetain(off_204090);
      if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        v27 = (int *)sub_135114(0, *(_QWORD *)((char *)&dword_10 + (_QWORD)v27) + 1, 1, v27);
      v30 = *((_QWORD *)v27 + 2);
      v29 = *((_QWORD *)v27 + 3);
      if (v30 >= v29 >> 1)
        v27 = (int *)sub_135114((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
      *((_QWORD *)v27 + 2) = v30 + 1;
      v31 = &v27[4 * v30];
      *((_QWORD *)v31 + 4) = 1;
      *((_BYTE *)v31 + 40) = 1;
      KeyPath = swift_getKeyPath(&unk_175130);
      v33 = swift_getKeyPath(&unk_175158);
      v46 = *(double *)&v27;
      static Published.subscript.setter(&v46, v25, KeyPath, v33);
      v34 = *(_QWORD *)(v11 + 40);
      swift_retain(v34);
      objc_msgSend(v24, "startTime");
      v36 = v35;
      objc_msgSend(v24, "duration");
      v38 = v36 + v37;
      v39 = swift_getKeyPath(&unk_175178);
      v40 = swift_getKeyPath(&unk_1751A0);
      v46 = v38;
      v47 = 0;
      static Published.subscript.setter(&v46, v34, v39, v40);
      swift_release(v11);

    }
    else
    {
LABEL_16:
      v41 = *(_QWORD *)(v11 + 32);
      v42 = qword_1F9678;
      swift_retain(v41);
      if (v42 != -1)
        swift_once(&qword_1F9678, sub_14511C);
      v43 = off_204090;
      v44 = swift_getKeyPath(&unk_175130);
      v45 = swift_getKeyPath(&unk_175158);
      v46 = *(double *)&v43;
      swift_bridgeObjectRetain(v43);
      static Published.subscript.setter(&v46, v41, v44, v45);
      swift_release(v11);
    }
  }
}

double sub_144664@<D0>(char *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = dbl_175330[*a1];
  *a2 = result;
  return result;
}

void sub_14467C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;

  v3 = v2;
  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()(v7) & 1) != 0)
  {
    v10 = v2[10];
    if (!v10)
      goto LABEL_6;
    swift_getObjectType(v3[10]);
    swift_unknownObjectRetain(v10);
    v11 = COERCE_DOUBLE(sub_1442BC());
    v13 = v12;
    swift_unknownObjectRelease(v10);
    if ((v13 & 1) != 0)
      __asm { BR              X9 }
    if ((_DWORD)v5 || v11 != *(double *)&a1)
    {
LABEL_6:
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
      v15 = swift_allocObject(&unk_1D35C0, 49, 7);
      *(_QWORD *)(v15 + 16) = 0;
      *(_QWORD *)(v15 + 24) = 0;
      *(_QWORD *)(v15 + 32) = v3;
      *(double *)(v15 + 40) = *(double *)&a1;
      *(_BYTE *)(v15 + 48) = (_DWORD)v5 != 0;
      swift_retain(v3);
      v16 = sub_F0BB8((uint64_t)v9, (uint64_t)&unk_204230, v15);
      swift_release(v16);
    }
  }
  else
  {
    v17 = v2[3];
    ObjectType = swift_getObjectType(v2[2]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 320))(a1, v5, ObjectType, v17);
  }
}

void sub_1447F8()
{
  uint64_t v0;
  int v1;

  if (v1)
  {
    if (!v0)
      JUMPOUT(0x1447C4);
  }
  JUMPOUT(0x14472CLL);
}

uint64_t sub_144834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 104) = a6;
  *(_QWORD *)(v6 + 64) = a4;
  *(_QWORD *)(v6 + 72) = a5;
  *(_QWORD *)(v6 + 56) = a1;
  return swift_task_switch(sub_144854, 0, 0);
}

uint64_t sub_144854()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *boxed_opaque_existential_1;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v1 = *(_BYTE *)(v0 + 104);
  v2 = type metadata accessor for PlaybackController.SleepTimerCommand(0);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.SleepTimerCommand;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v4 = *(_QWORD *)(v0 + 72);
  if ((v1 & 1) != 0)
    __asm { BR              X10 }
  *boxed_opaque_existential_1 = v4;
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 104))();
  v7 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v5 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                  + 1));
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_144954;
  return ((uint64_t (*)(uint64_t, _QWORD))v7)(v0 + 16, 0);
}

uint64_t sub_144954(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1449E8;
  }
  else
  {
    *(_QWORD *)(v4 + 96) = a1;
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v4 + 16));
    v6 = sub_1449D0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1449D0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1449E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

UIMenu __swiftcall SleepTimerController.menuForSleepTimer()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  UIMenuElementSize preferredElementSize;
  id v9;
  Swift::String v10;
  Class isa;
  Swift::OpaquePointer v13;
  _QWORD aBlock[5];
  uint64_t v15;
  UIImage_optional v16;

  v0 = swift_allocObject(&unk_1D3548, 24, 7);
  swift_weakInit(v0 + 16);
  v1 = (void *)objc_opt_self(UIDeferredMenuElement);
  v2 = swift_allocObject(&unk_1D3570, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_1455F8;
  *(_QWORD *)(v2 + 24) = v0;
  aBlock[4] = sub_145600;
  v15 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_926F8;
  aBlock[3] = &block_descriptor_36;
  v3 = _Block_copy(aBlock);
  v4 = v15;
  swift_retain();
  v5 = objc_msgSend(v1, "elementWithUncachedProvider:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_16B2D0;
  *(_QWORD *)(v7 + 32) = v5;
  aBlock[0] = v7;
  specialized Array._endMutation()(v7);
  preferredElementSize = aBlock[0];
  v9 = v5;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v16.value.super.isa = 0;
  v16.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v13).super.super.isa;

  swift_release(v0);
  return (UIMenu)isa;
}

_QWORD *sub_144BB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  __n128 v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t ObjectType;
  double v19;
  char v20;
  char v21;
  _BOOL8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  int v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v44;
  _BYTE v45[24];
  Swift::String v46;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v45, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v3 = Strong;
  if (qword_1F9678 != -1)
    swift_once(&qword_1F9678, sub_14511C);
  v4 = off_204090;
  v5 = *(_QWORD *)((char *)&dword_10 + (_QWORD)off_204090);
  if (v5)
  {
    swift_retain();
    swift_bridgeObjectRetain(v4);
    specialized ContiguousArray.reserveCapacity(_:)(v5, v6);
    sub_F174(0, &qword_1FDEB0, UIAction_ptr);
    v44 = v4;
    v7 = (char *)(v4 + 10);
    do
    {
      v15 = *((double *)v7 - 1);
      v16 = *v7;
      v17 = *(_QWORD *)(v3 + 24);
      ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 16));
      v19 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 312))(ObjectType, v17));
      if ((v20 & 1) != 0)
        __asm { BR              X8 }
      if (v19 == v15)
        v21 = v16;
      else
        v21 = 1;
      v22 = (v21 & 1) == 0;
      v8 = PlayerAutoStopMode.localizedName.getter(*(uint64_t *)&v15, v16);
      v10 = v9;
      v11 = swift_allocObject(&unk_1D3610, 33, 7);
      *(_QWORD *)(v11 + 16) = v3;
      *(double *)(v11 + 24) = v15;
      *(_BYTE *)(v11 + 32) = v16;
      swift_retain();
      v12 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8, v10, 0, 0, 0, 0, 0, 0, 0, 0, v22, sub_145810, v11);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v13 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      v7 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v44);
    swift_release(v3);
  }
  v23 = *(_QWORD *)(v3 + 16);
  v24 = *(_QWORD *)(v3 + 24);
  v25 = swift_getObjectType(v23);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 112);
  v27 = swift_unknownObjectRetain(v23);
  LOBYTE(v24) = v26(v25, v24, v27);
  swift_unknownObjectRelease(v23);
  if ((v24 & 1) != 0)
  {
    v28 = *(_QWORD *)(v3 + 24);
    v29 = swift_getObjectType(*(_QWORD *)(v3 + 16));
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 312))(v29, v28) == 1;
    v32 = v31 & v30;
    sub_F174(0, &qword_1FDEB0, UIAction_ptr);
    v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v46._object = (void *)0xE000000000000000;
    v34._object = (void *)0x8000000000184850;
    v34._countAndFlagsBits = 0xD000000000000019;
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v46._countAndFlagsBits = 0;
    v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v46);

    v37 = swift_allocObject(&unk_1D3638, 33, 7);
    *(_QWORD *)(v37 + 16) = v3;
    *(_QWORD *)(v37 + 24) = 1;
    *(_BYTE *)(v37 + 32) = 1;
    swift_retain();
    v38 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v36._countAndFlagsBits, v36._object, 0, 0, 0, 0, 0, 0, 0, 0, v32, sub_145810, v37);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
    v40 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v39 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v40 >= v39 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
    specialized Array._endMutation()(v41);
  }
  v42 = sub_143128((unint64_t)_swiftEmptyArrayStorage);
  swift_release(v3);
  return (_QWORD *)v42;
}

double sub_144FE8(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  double result;
  uint64_t v10;
  uint64_t v11;

  v4 = a3();
  v5 = v4;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v10 = v4;
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    v11 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v7 = _bridgeCocoaArray<A>(_:)(v10, v11);
  }
  else
  {
    v6 = swift_bridgeObjectRetain(v4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
    sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v7 = v5;
  }
  v8 = swift_bridgeObjectRelease(v5);
  a1(v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

_QWORD *SleepTimerController.deinit()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_unknownObjectRelease(v0[10]);
  return v0;
}

uint64_t SleepTimerController.__deallocating_deinit()
{
  uint64_t v0;

  SleepTimerController.deinit();
  return swift_deallocClassInstance(v0, 88, 7);
}

void sub_14511C()
{
  off_204090 = (int *)&off_1C5318;
}

double sub_145130@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_175208);
  v5 = swift_getKeyPath(&unk_175230);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1451AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_175208);
  v5 = swift_getKeyPath(&unk_175230);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_145224@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_175178);
  v5 = swift_getKeyPath(&unk_1751A0);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1452A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_175178);
  v6 = swift_getKeyPath(&unk_1751A0);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

_QWORD *sub_145328(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = _swift_stdlib_malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_ABB5C((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_14541C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char v14;
  char v15;
  int *v16;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v6 = v5;
  v5[8] = &_swiftEmptySetSingleton;
  v5[10] = 0;
  v5[2] = a1;
  v5[3] = a2;
  ObjectType = swift_getObjectType(a1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 312);
  v12 = swift_unknownObjectRetain(a1);
  v13 = v11(ObjectType, a2, v12);
  v15 = v14 & 1;
  v16 = sub_143DB0(ObjectType, a2);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(ObjectType, a2);
  v18 = type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v6[4] = sub_41BDC(v13, v15, (uint64_t)v16, v17 & 1);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 56);
  v20 = swift_unknownObjectRetain(a1);
  v21 = v19(ObjectType, a2, v20);
  objc_msgSend((id)v21, "rate");
  v23 = v22;

  v24 = ((uint64_t (*)(uint64_t, uint64_t))v11)(ObjectType, a2);
  LOBYTE(v13) = v25 & 1;
  LOBYTE(v21) = sub_144058(ObjectType, a2);
  v26 = type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = sub_D7358(a1, a2, v24, v13, v21 & 1, v23, 0.0);
  swift_unknownObjectRelease(a1);
  v6[5] = v27;
  v6[6] = a3;
  v6[9] = a4;
  v6[7] = a5;
  return v6;
}

uint64_t sub_1455D4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_1455F8()
{
  uint64_t v0;

  return sub_144BB4(v0);
}

double sub_145600(void (*a1)(uint64_t, __n128), uint64_t a2)
{
  uint64_t v2;

  return sub_144FE8(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_36(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for SleepTimerController()
{
  return objc_opt_self(_TtC12NowPlayingUI20SleepTimerController);
}

uint64_t sub_145640()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_14566C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  v7 = swift_task_alloc(dword_20422C);
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_27CA8;
  *(_BYTE *)(v7 + 104) = v6;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  *(_QWORD *)(v7 + 56) = a1;
  return swift_task_switch(sub_144854, 0, 0);
}

double sub_1456E4(uint64_t a1)
{
  uint64_t v1;

  return sub_143EB4(a1, v1);
}

unint64_t sub_1456EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_204260;
  if (!qword_204260)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_204260);
  }
  return result;
}

double sub_145734(char *a1)
{
  uint64_t v1;

  return sub_143CA8(a1, v1);
}

void sub_14573C(void **a1)
{
  uint64_t v1;

  sub_1440C0(a1, v1);
}

void sub_145744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_144334(a1, a2, v2);
}

uint64_t sub_14574C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_145770(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _BYTE *);
  uint64_t v3;
  _BYTE v5[56];

  v2 = *(uint64_t (**)(uint64_t, _BYTE *))(v1 + 16);
  v3 = *a1;
  sub_4AD4C((uint64_t)(a1 + 1), (uint64_t)v5);
  return v2(v3, v5);
}

uint64_t sub_1457EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_145814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 32);
  v4 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 320))(v2, v3, ObjectType, v4);
}

uint64_t sub_14586C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a1);
  v4 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v3 = *(_QWORD *)((char *)&dword_18 + (*v1 & 0xFFFFFFFFFFFFFF8));
  if (v4 >= v3 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1);
  v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, a1);
  return specialized Array._endMutation()(v5);
}

uint64_t DeprecatedBinding.__allocating_init(_:configurationBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 40, 7);
  DeprecatedBinding.init(_:configurationBlock:)(a1, a2, a3);
  return v7;
}

uint64_t sub_145920(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  NSString *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  if (a2 && *(_QWORD *)(a2 + 16))
  {
    v5 = NSKeyValueChangeNewKey;
    v6 = sub_139F10();
    if ((v7 & 1) != 0)
    {
      sub_CD54(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)&v11);
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }

  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD880);
  v9 = Optional._bridgeToObjectiveC()(v8);
  sub_9944((uint64_t)&v11, &qword_1FD880);
  a3(v9);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_1459EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BindingsManager();
  v11 = swift_allocObject(v10, 32, 7);
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v12 = static OS_dispatch_queue.Attributes.concurrent.getter();
  static DispatchQoS.unspecified.getter(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x800000000018DAB0, v6, v9, v3, 0);
  *(_QWORD *)(v11 + 16) = result;
  *(_QWORD *)(v11 + 24) = &_swiftEmptyArrayStorage;
  qword_210428 = v11;
  return result;
}

void sub_145B60(uint64_t a1, uint64_t a2)
{
  char **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _BYTE v15[24];
  _BYTE v16[8];
  _BYTE v17[24];

  v4 = (char **)(a1 + 24);
  swift_beginAccess(a1 + 24, v17, 0, 0);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain(v5);
    do
    {
      Strong = swift_weakLoadStrong(v7);
      v9 = swift_weakLoadStrong(a2);
      v10 = v9;
      if (Strong)
      {
        swift_release(Strong);
        if (v10)
        {
          swift_release(v10);
          if (Strong == v10)
          {
LABEL_9:
            swift_bridgeObjectRelease(v5);
            return;
          }
        }
      }
      else
      {
        if (!v9)
          goto LABEL_9;
        swift_release(v9);
      }
      v7 += 8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
  sub_147144(a2, (uint64_t)v16);
  swift_beginAccess(v4, v15, 33, 0);
  v11 = *v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  *v4 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_135C80(0, *((_QWORD *)v11 + 2) + 1, 1, (unint64_t)v11);
    *v4 = v11;
  }
  v14 = *((_QWORD *)v11 + 2);
  v13 = *((_QWORD *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    v11 = sub_135C80((char *)(v13 > 1), v14 + 1, 1, (unint64_t)v11);
    *v4 = v11;
  }
  *((_QWORD *)v11 + 2) = v14 + 1;
  sub_1470FC((uint64_t)v16, (uint64_t)&v11[8 * v14 + 32]);
  swift_endAccess(v15);
}

uint64_t sub_145CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  void (*v19)(char *, uint64_t);
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void **aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  void *v32;
  uint64_t v33;
  char v34[8];
  char v35[8];

  v2 = v1;
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_weakInit(&aBlock, 0);
  v13 = swift_weakAssign(v12, a1);
  sub_1470FC(v13, (uint64_t)v35);
  v14 = *(id *)(v2 + 16);
  static DispatchWorkItemFlags.barrier.getter();
  sub_147144((uint64_t)v35, (uint64_t)v34);
  v15 = swift_allocObject(&unk_1D37C0, 32, 7);
  *(_QWORD *)(v15 + 16) = v2;
  sub_1470FC((uint64_t)v34, v15 + 24);
  v32 = sub_1471B8;
  v33 = v15;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_F528;
  v31 = &block_descriptor_4_0;
  v16 = _Block_copy(&aBlock);
  v17 = swift_retain(v2);
  static DispatchQoS.unspecified.getter(v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v11, v16);
  _Block_release(v16);

  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  swift_release(v33);
  sub_9944((uint64_t)v35, &qword_203C28);
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter();
  v32 = sub_1471C4;
  v33 = v2;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_F528;
  v31 = &block_descriptor_7_0;
  v21 = _Block_copy(&aBlock);
  v22 = v33;
  swift_retain(v2);
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock = (void **)&_swiftEmptyArrayStorage;
  v24 = sub_F52C();
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v26 = sub_F574();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v25, v26, v8, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v11, v21);
  _Block_release(v21);

  v19(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v18)(v7, v4);
}

uint64_t sub_145FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[16];
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = (uint64_t)&_swiftEmptyArrayStorage;
  v6 = *(id *)(a1 + 16);
  static DispatchWorkItemFlags.barrier.getter();
  v17 = &v19;
  v18 = a1;
  OS_dispatch_queue.sync<A>(flags:execute:)(v5, sub_1471CC, v16, (char *)&type metadata for () + 8);

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v7 = v19;
  if (!((unint64_t)v19 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(v19);
    if (v8)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n(v7, 2);
  }
  if (v19 < 0)
    v15 = v19;
  else
    v15 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v19);
  result = _CocoaArrayWrapper.endIndex.getter(v15);
  v8 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v7, 2);
LABEL_3:
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain(v11);
      }
      ++v10;
      v13 = *(void (**)(uint64_t))(v11 + 24);
      v12 = *(_QWORD *)(v11 + 32);
      v14 = swift_retain(v12);
      v13(v14);
      swift_release(v11);
      swift_release(v12);
    }
    while (v8 != v10);
    return swift_bridgeObjectRelease_n(v7, 2);
  }
  __break(1u);
  return result;
}

void sub_146140(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[8];
  _BYTE v17[24];
  unint64_t v18;

  v4 = (uint64_t *)(a2 + 24);
  swift_beginAccess(a2 + 24, v17, 1, 0);
  v5 = *(_QWORD *)(a2 + 24);
  v18 = (unint64_t)&_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain(v5);
    do
    {
      sub_147144(v7, (uint64_t)v16);
      Strong = swift_weakLoadStrong(v16);
      v10 = sub_9944((uint64_t)v16, &qword_203C28);
      if (Strong)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
        v11 = *(_QWORD *)((char *)&dword_18 + (v18 & 0xFFFFFFFFFFFFFF8));
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, Strong);
        specialized Array._endMutation()(v8);
      }
      v7 += 8;
      --v6;
    }
    while (v6);
    v13 = (void *)v18;
  }
  else
  {
    swift_bridgeObjectRetain(v5);
    v13 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v5);
  v14 = *a1;
  *a1 = (uint64_t)v13;
  swift_bridgeObjectRelease(v14);
  v15 = *v4;
  *v4 = (uint64_t)&_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v15);
}

uint64_t sub_1462A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

_QWORD *DeprecatedBinding.init(_:configurationBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = &_swiftEmptyArrayStorage;
  v4[3] = a2;
  v4[4] = a3;
  swift_retain(v4);
  swift_retain(a3);
  v14 = sub_146768(a1, (uint64_t)v4);
  swift_bridgeObjectRelease(a1);
  swift_release(v4);
  v15 = v4[2];
  v4[2] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = (void *)objc_opt_self(NSThread);
  swift_retain_n(v4, 2);
  if (objc_msgSend(v16, "isMainThread"))
  {
    ((void (*)(void))v4[3])();
  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v17 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_146D64;
    v28 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_37;
    v18 = _Block_copy(aBlock);
    v19 = v28;
    swift_retain(v4);
    swift_release(v19);
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v21 = sub_F52C();
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v23 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v25);
  }
  swift_release_n(v4, 2);
  swift_release(a3);
  return v4;
}

double sub_146548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    if (qword_1F9680 != -1)
      swift_once(&qword_1F9680, sub_1459EC);
    sub_145CE0(v5);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t DeprecatedBinding.description.getter()
{
  _QWORD *v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  _QWORD *v12;
  _QWORD v13[2];

  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._countAndFlagsBits = _typeName(_:qualified:)(*v0, 0);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 8250;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  v12 = v0;
  _print_unlocked<A, B>(_:_:)(&v12, v13, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 0x6576726573626F20;
  v5._object = (void *)0xEB000000003D7372;
  String.append(_:)(v5);
  v6 = v0[2];
  swift_bridgeObjectRetain(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5C0);
  v8._countAndFlagsBits = Array.description.getter(v6, v7);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 62;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v13[0];
}

uint64_t DeprecatedBinding.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t DeprecatedBinding.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_146748()
{
  return DeprecatedBinding.description.getter();
}

unint64_t *sub_146768(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  unint64_t *v3;
  unsigned __int8 *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t Strong;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (**v25)(uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  unint64_t *v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  void *v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  objc_class *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unsigned __int8 *v48;
  id v50;
  id v51;
  int64_t v52;
  unint64_t *v53;
  uint64_t v54;
  objc_super v55;
  __int128 aBlock;
  uint64_t (*v57)(uint64_t);
  void *v58;
  uint64_t (*v59)();
  uint64_t v60;
  unint64_t *v61;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v2)
  {
    v61 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_A9A04(0, v2, 0);
    v5 = (unsigned __int8 *)(a1 + 56);
    v3 = (unint64_t *)&_swiftEmptyArrayStorage;
    v6 = &unk_1FC000;
    do
    {
      v7 = (void *)*((_QWORD *)v5 - 3);
      v8 = *((_QWORD *)v5 - 2);
      v9 = *((_QWORD *)v5 - 1);
      v10 = *v5;
      v11 = swift_allocObject(&unk_1D3838, 24, 7);
      swift_weakInit(v11 + 16, a2);
      v54 = v11;
      if (v10)
      {
        v53 = v3;
        if (v10 == 1)
        {
          v12 = swift_allocObject(&unk_1D38B0, 32, 7);
          *(_QWORD *)(v12 + 16) = sub_147208;
          *(_QWORD *)(v12 + 24) = v11;
          v47 = type metadata accessor for NotificationObserver();
          v13 = swift_allocObject(v47, 56, 7);
          v14 = swift_unknownObjectWeakInit(v13 + 24, 0);
          *(_QWORD *)(v13 + 16) = v7;
          swift_unknownObjectWeakAssign(v14, v8);
          *(_BYTE *)(v13 + 32) = 1;
          *(_QWORD *)(v13 + 40) = sub_147234;
          *(_QWORD *)(v13 + 48) = v12;
          v45 = v12;
          v50 = (id)objc_opt_self(NSNotificationCenter);
          v15 = v7;
          swift_retain_n(v11, 2);
          sub_146D9C(v7, v8, v9, 1);
          v16 = v15;
          swift_unknownObjectRetain(v8);
          swift_retain(v12);
          v17 = objc_msgSend(v50, "defaultCenter");
          Strong = swift_unknownObjectWeakLoadStrong(v13 + 24);
          v19 = v16;
          swift_retain(v13);
          objc_msgSend(v17, "addObserver:selector:name:object:", v13, "handleNotification:", v19, Strong);

          swift_release(v13);
          swift_unknownObjectRelease(Strong);

          swift_release(v45);
          v58 = (void *)v47;
          v59 = (uint64_t (*)())&off_1D36B0;
          swift_release_n(v54, 2);

          swift_unknownObjectRelease(v8);
          sub_146E24(v7, v8, v9, 1);
          *(_QWORD *)&aBlock = v13;
        }
        else
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
          v34 = v33;
          v35 = v11;
          v36 = swift_allocObject(&unk_1D3860, 32, 7);
          *(_QWORD *)(v36 + 16) = sub_147208;
          *(_QWORD *)(v36 + 24) = v35;
          v37 = objc_allocWithZone((Class)MusicDarwinNotificationObserver);
          sub_146D9C(v7, v8, v9, 2);
          swift_retain_n(v35, 2);
          sub_146D9C(v7, v8, v9, 2);
          v38 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v34);
          v59 = sub_147234;
          v60 = v36;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v57 = sub_F528;
          v58 = &block_descriptor_16_2;
          v39 = _Block_copy(&aBlock);
          v40 = objc_msgSend(v37, "initWithNotificationName:handler:", v38, v39);

          _Block_release(v39);
          swift_release(v60);
          v58 = (void *)sub_F174(0, &qword_2044F0, &off_1C4410);
          v59 = (uint64_t (*)())&off_1D36B8;
          sub_146E24(v7, v8, v9, 2);
          swift_release_n(v54, 2);
          sub_146E24(v7, v8, v9, 2);
          *(_QWORD *)&aBlock = v40;
        }
        v3 = v53;
      }
      else
      {
        v48 = v5;
        v52 = v2;
        v20 = swift_allocObject(&unk_1D38D8, 32, 7);
        *(_QWORD *)(v20 + 16) = sub_147208;
        *(_QWORD *)(v20 + 24) = v11;
        v44 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_2044F8);
        v21 = v11;
        v22 = (char *)objc_allocWithZone(v44);
        v23 = swift_unknownObjectWeakInit(&v22[qword_1FC4B0], 0);
        swift_unknownObjectWeakAssign(v23, v7);
        v24 = (uint64_t *)&v22[v6[151]];
        *v24 = v8;
        v24[1] = v9;
        v25 = (uint64_t (**)(uint64_t, uint64_t))&v22[qword_1FC4C0];
        *v25 = sub_147258;
        v25[1] = (uint64_t (*)(uint64_t, uint64_t))v20;
        v46 = v7;
        swift_retain_n(v21, 2);
        swift_bridgeObjectRetain(v9);
        swift_retain(v20);
        v51 = (id)v9;
        sub_146D9C(v7, v8, v9, 0);
        v55.receiver = v22;
        v55.super_class = v44;
        v26 = (char *)objc_msgSendSuper2(&v55, "init");
        v27 = swift_unknownObjectWeakLoadStrong(&v26[qword_1FC4B0]);
        if (v27)
        {
          v28 = (void *)v27;
          v29 = &v26[v6[151]];
          v30 = v3;
          v31 = *((_QWORD *)v29 + 1);
          v26 = v26;
          swift_bridgeObjectRetain(v31);
          v32 = String._bridgeToObjectiveC()();
          objc_msgSend(v28, "addObserver:forKeyPath:options:context:", v26, v32, 1, 0, swift_bridgeObjectRelease(v31).n128_f64[0]);

          v3 = v30;
          swift_unknownObjectRelease(v28);
        }

        swift_release(v20);
        v58 = v44;
        v59 = (uint64_t (*)())&off_1D37A8;
        swift_release_n(v54, 2);

        sub_146E24(v7, v8, (uint64_t)v51, 0);
        *(_QWORD *)&aBlock = v26;
        v2 = v52;
        v5 = v48;
      }
      v61 = v3;
      v42 = v3[2];
      v41 = v3[3];
      if (v42 >= v41 >> 1)
      {
        sub_A9A04(v41 > 1, v42 + 1, 1);
        v3 = v61;
      }
      v5 += 32;
      v3[2] = v42 + 1;
      sub_27890(&aBlock, (uint64_t)&v3[5 * v42 + 4]);
      --v2;
      v6 = (_QWORD *)&unk_1FC000;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_146D64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_37(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_146D9C(id result, uint64_t a2, uint64_t a3, char a4)
{
  id v5;
  id v6;

  switch(a4)
  {
    case 2:
      return result;
    case 1:
      v6 = result;
      swift_unknownObjectRetain(a2);
      result = v6;
      return result;
    case 0:
      v5 = result;
      return (id)swift_bridgeObjectRetain(a3);
  }
  return result;
}

void destroy for BindingTrigger(uint64_t a1)
{
  sub_146E24(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_146E24(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 2:

      break;
    case 1:

      swift_unknownObjectRelease(a2);
      break;
    case 0:

      swift_bridgeObjectRelease(a3);
      break;
  }
}

uint64_t initializeWithCopy for BindingTrigger(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_146D9C(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for BindingTrigger(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_146D9C(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_146E24(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for BindingTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_146E24(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BindingTrigger(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BindingTrigger(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_147034(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BindingTrigger()
{
  return &type metadata for BindingTrigger;
}

uint64_t type metadata accessor for BindingsManager()
{
  return objc_opt_self(_TtC12NowPlayingUI15BindingsManager);
}

uint64_t type metadata accessor for DeprecatedBinding()
{
  return objc_opt_self(_TtC12NowPlayingUI17DeprecatedBinding);
}

uint64_t sub_14708C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_1470A8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1470C8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for Weak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Weak);
}

uint64_t sub_1470FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_147144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_203C28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_14718C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_weakDestroy(v0 + 24);
  return swift_deallocObject(v0, 32, 7);
}

void sub_1471B8()
{
  uint64_t v0;

  sub_145B60(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1471C4()
{
  uint64_t v0;

  return sub_145FB0(v0);
}

void sub_1471CC()
{
  uint64_t v0;

  sub_146140(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1471E4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_147208(uint64_t a1)
{
  uint64_t v1;

  return sub_146548(a1, v1);
}

uint64_t sub_147210()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_147234()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_147258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_145920(a1, a2, *(void (**)(uint64_t))(v2 + 16));
}

uint64_t sub_147280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1472A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  __int128 v12;
  __int128 v13;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, __n128))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v13 + 1) = swift_getObjectType(a2);
    *(_QWORD *)&v12 = a2;
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  v10 = swift_unknownObjectRetain(a2);
  v9(&v12, a3, a4, a5, v10);
  return sub_43D44((uint64_t)&v12);
}

id sub_147328(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  objc_super v15;
  _OWORD v16[8];

  v4[OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View_isDisabled] = 0;
  v9 = (uint64_t)&v4[OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View__textDrawingContext];
  sub_523D4(v16);
  sub_523EC((uint64_t)v16, v9);
  v15.receiver = v4;
  v15.super_class = (Class)_s4ViewCMa();
  v10 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "clearColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  objc_msgSend(v12, "setOpaque:", 0);
  objc_msgSend(v12, "setUserInteractionEnabled:", 0);

  return v12;
}

_QWORD *sub_147500(_QWORD *a1)
{
  void *v1;
  uint64_t v3;
  _QWORD *result;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  char v16;
  _OWORD v17[8];
  _QWORD v18[3];
  char v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  _QWORD v27[3];
  char v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  _QWORD v40[17];

  sub_523EC((uint64_t)a1, (uint64_t)v37);
  sub_523EC((uint64_t)v37, (uint64_t)v39);
  v3 = (uint64_t)v1 + OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View__textDrawingContext;
  sub_523EC((uint64_t)v1 + OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View__textDrawingContext, (uint64_t)v40);
  sub_523EC((uint64_t)a1, (uint64_t)v38);
  if (sub_52434((uint64_t)v38) != 1)
  {
    sub_523EC((uint64_t)v40, (uint64_t)v36);
    if (sub_52434((uint64_t)v36) == 1)
    {
      sub_523EC(v3, (uint64_t)v17);
      sub_523EC((uint64_t)a1, v3);
      sub_523EC((uint64_t)v39, (uint64_t)v18);
      sub_523EC((uint64_t)v39, (uint64_t)v27);
      sub_11BB4((uint64_t)v27);
      sub_11BB4((uint64_t)v18);
      sub_7A3C8(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
      objc_msgSend(v1, "setNeedsDisplay");
      sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
      v5 = a1;
      return sub_7A3C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
    }
    v15 = v1;
    sub_523EC((uint64_t)v39, (uint64_t)v18);
    sub_523EC((uint64_t)v40, (uint64_t)v27);
    v6 = (void *)v27[0];
    v7 = v27[1];
    v8 = v27[2];
    v9 = v28;
    v10 = (void *)v18[0];
    v11 = v18[1];
    v12 = v18[2];
    v16 = v19;
    sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_7A398);
    sub_7A3C8(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_7A398);
    sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_7A398);
    v13 = sub_751BC(v6, v7, v8, v9, v10, v11, v12, v16);
    if ((v13 & 1) != 0
      && v29 == v20
      && (static CGSize.==~ infix(_:_:)(v13, v30, v31, v21, v22) & 1) != 0
      && (static CGFloat.==~ infix(_:_:)(v32, v23) & 1) != 0
      && (static CGFloat.==~ infix(_:_:)(v33, v24) & 1) != 0
      && v34 == v25)
    {
      v14 = static CGFloat.==~ infix(_:_:)(v35, v26);
      sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
      if ((v14 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
    }
    sub_523EC(v3, (uint64_t)v17);
    sub_523EC((uint64_t)a1, v3);
    sub_11BB4((uint64_t)v18);
    sub_7A3C8(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
    objc_msgSend(v15, "setNeedsDisplay");
LABEL_16:
    sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
    sub_7A3C8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
    v5 = v40;
    return sub_7A3C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
  }
  sub_523EC((uint64_t)v40, (uint64_t)v36);
  result = (_QWORD *)sub_52434((uint64_t)v36);
  if ((_DWORD)result == 1)
    return result;
  sub_523D4(v17);
  sub_523EC(v3, (uint64_t)v18);
  sub_523EC((uint64_t)v17, v3);
  sub_523EC((uint64_t)v40, (uint64_t)v27);
  sub_11BB4((uint64_t)v27);
  sub_7A3C8(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
  objc_msgSend(v1, "setNeedsDisplay");
  v5 = v40;
  return sub_7A3C8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
}

double sub_14795C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __n128 v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  NSString *v31;
  __n128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  double v38;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double MaxX;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  _QWORD aBlock[5];
  uint64_t v52;
  id v53;
  CGRect v54;
  CGRect v55;

  v3 = type metadata accessor for CGRect.LayoutAxis(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = *(double *)(a1 + 120);
  v53 = 0;
  v16 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v48 = v4;
    v49 = v3;
    v17 = *(void **)a1;
    v50 = *(double *)(a1 + 8);
    v18 = v17;
    v19 = objc_msgSend(v18, "length");
    v20 = swift_allocObject(&unk_1D3910, 24, 7);
    *(_QWORD *)(v20 + 16) = &v53;
    v21 = swift_allocObject(&unk_1D3938, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_147EAC;
    *(_QWORD *)(v21 + 24) = v20;
    v47 = v20;
    aBlock[4] = sub_F2F8;
    v52 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1472A0;
    aBlock[3] = &block_descriptor_38;
    v22 = _Block_copy(aBlock);
    v23 = v52;
    swift_retain();
    objc_msgSend(v18, "enumerateAttribute:inRange:options:usingBlock:", NSParagraphStyleAttributeName, 0, v19, 0, v22, swift_release(v23).n128_f64[0]);
    sub_11BEC(v17, *(uint64_t *)&v50, v16, 1);
    _Block_release(v22);
    LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v21, "", 123, 130, 164, 1);
    v24 = swift_release(v21);
    if ((v22 & 1) != 0)
    {
      __break(1u);
      JUMPOUT(0x147D78);
    }
    v25 = sub_147EAC;
    v26 = v53;
    v4 = v48;
    v3 = v49;
    v27 = v47;
    if (!v53)
      goto LABEL_4;
    goto LABEL_13;
  }
  v30 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
  if (!v30)
    goto LABEL_10;
  v31 = NSParagraphStyleAttributeName;
  v33 = sub_139F10(v31, v32);
  if ((v34 & 1) == 0)
  {

LABEL_10:
    v24 = swift_bridgeObjectRelease(v16);
    goto LABEL_11;
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v33);
  swift_unknownObjectRetain(v35);

  swift_bridgeObjectRelease(v16);
  v36 = objc_opt_self(NSParagraphStyle);
  v26 = (id)swift_dynamicCastObjCClass(v35, v36);
  if (v26)
    goto LABEL_12;
  swift_unknownObjectRelease(v35);
LABEL_11:
  v26 = 0;
LABEL_12:
  v25 = 0;
  v27 = 0;
  v53 = v26;
  if (!v26)
  {
LABEL_4:
    v28 = *(double *)(a1 + 48);
    v29 = *(double *)(a1 + 56);
LABEL_14:
    static CGRect.LayoutAxis.vertical.getter(v24);
LABEL_15:
    v38 = CGRect.centeringAlong(axes:bounds:scale:)(v6, v8, v10, v12, v14, v15, 0.0, 0.0, v28, v29);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_16;
  }
LABEL_13:
  v37 = objc_msgSend(v26, "alignment", v24.n128_f64[0]);
  v28 = *(double *)(a1 + 48);
  v29 = *(double *)(a1 + 56);
  switch((unint64_t)v37)
  {
    case 0uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_14;
    case 1uLL:
      static CGRect.LayoutAxis.allAxes.getter(v37);
      goto LABEL_15;
    case 2uLL:
      ((void (*)(void))static CGRect.LayoutAxis.vertical.getter)();
      v50 = CGRect.centeringAlong(axes:bounds:scale:)(v6, v8, v10, v12, v14, v15, 0.0, 0.0, v28, v29);
      v41 = v40;
      v43 = v42;
      v45 = v44;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v54.origin.x = v8;
      v54.origin.y = v10;
      v54.size.width = v12;
      v54.size.height = v14;
      MaxX = CGRectGetMaxX(v54);
      v55.origin.x = v50;
      v55.origin.y = v41;
      v55.size.width = v43;
      v55.size.height = v45;
      v38 = MaxX - CGRectGetWidth(v55);
      break;
    default:
      v38 = 0.0;
      break;
  }
LABEL_16:
  CGFloat.ceilingValue(scale:)(v15, *(double *)(a1 + 64));

  sub_145A0((uint64_t)v25, v27);
  return v38;
}

void sub_147D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5)
{
  unint64_t v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  _BYTE v11[24];
  uint64_t v12;

  sub_43DCC(a1, (uint64_t)v11);
  if (v12)
  {
    v6 = sub_525DC();
    v7 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v6, 6);
    v8 = v10;
    if (!v7)
      v8 = 0;
  }
  else
  {
    sub_43D44((uint64_t)v11);
    v8 = 0;
  }
  v9 = *a5;
  *a5 = v8;

}

id sub_147E10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s4ViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s4ViewCMa()
{
  return objc_opt_self(_TtCVV12NowPlayingUI14DeprecatedText7Drawing4View);
}

uint64_t sub_147E9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_147EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_147D8C(a1, a2, a3, a4, *(void ***)(v4 + 16));
}

uint64_t sub_147EB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_38(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_147EDC()
{
  uint64_t v0;
  _QWORD *result;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  _BYTE v19[128];
  _OWORD v20[8];
  _QWORD v21[16];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  sub_523EC(v0 + OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View__textDrawingContext, (uint64_t)v21);
  sub_523EC((uint64_t)v21, (uint64_t)&v22);
  result = (_QWORD *)sub_52434((uint64_t)&v22);
  if ((_DWORD)result != 1)
  {
    v20[4] = v26;
    v20[5] = v27;
    v20[6] = v28;
    v20[7] = v29;
    v20[0] = v22;
    v20[1] = v23;
    v20[2] = v24;
    v20[3] = v25;
    sub_523EC((uint64_t)v21, (uint64_t)v19);
    sub_11BB4((uint64_t)v19);
    v2 = sub_14795C((uint64_t)v20);
    v6 = v2;
    v7 = v3;
    v8 = v4;
    v9 = v5;
    v10 = *((_QWORD *)&v24 + 1);
    v11 = (void *)v22;
    if ((BYTE8(v23) & 1) != 0)
    {
      objc_msgSend((id)v22, "drawWithRect:options:context:", *((_QWORD *)&v24 + 1), (_QWORD)v24, v2, v3, v4, v5);
    }
    else
    {
      v13 = *((_QWORD *)&v22 + 1);
      v12 = v23;
      v14 = (id)v24;
      sub_11B84(v11, v13, v12, 0);
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      sub_C6030(v12);
      v17 = v16;
      swift_bridgeObjectRelease(v12);
      type metadata accessor for Key(0);
      sub_75328();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v15, "drawWithRect:options:attributes:context:", v10, isa, v14, v6, v7, v8, v9);

    }
    return sub_7A3C8(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);
  }
  return result;
}

void sub_14809C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1480C4(a1, a2, a3, (uint64_t)&unk_1D3C00, (uint64_t)sub_151BF0);
}

void sub_1480B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1480C4(a1, a2, a3, (uint64_t)&unk_1D3BD8, (uint64_t)sub_151BF0);
}

void sub_1480C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  Class isa;
  unint64_t v28;
  _OWORD v29[2];
  _QWORD v30[4];

  swift_beginAccess(&unk_2000D8, v29, 32, 0);
  v11 = objc_getAssociatedObject(v5, &unk_2000D8);
  swift_endAccess(v29);
  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v29, v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v29, 0, sizeof(v29));
  }
  sub_982C((uint64_t)v29, (uint64_t)v30, &qword_1FD880);
  if (!v30[3])
  {
    sub_43D44((uint64_t)v30);
    goto LABEL_8;
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_204668);
  if ((swift_dynamicCast(&v28, v30, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0)
  {
LABEL_8:
    v13 = sub_CDF60(_swiftEmptyArrayStorage);
    goto LABEL_9;
  }
  v13 = v28;
LABEL_9:
  v14 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  swift_retain();
  v15 = v5;
  v16 = sub_C80D0(v15, a1, a5, v14);
  if (*(_QWORD *)(v13 + 16) && (v17 = sub_13A05C(a1), (v18 & 1) != 0))
    v19 = (_QWORD *)swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v17));
  else
    v19 = _swiftEmptyArrayStorage;
  v30[0] = v19;
  v20 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((char *)&dword_10 + (v30[0] & 0xFFFFFFFFFFFFFF8));
  v21 = *(_QWORD *)((char *)&dword_18 + (v30[0] & 0xFFFFFFFFFFFFFF8));
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v16);
  specialized Array._endMutation()(v23);
  v24 = v30[0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
  v30[0] = v13;
  sub_13DB88(v24, a1, isUniquelyReferenced_nonNull_native);
  v26 = v30[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  swift_bridgeObjectRetain(v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_204660);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  swift_beginAccess(&unk_2000D8, v30, 32, 0);
  objc_setAssociatedObject(v15, &unk_2000D8, isa, (char *)&dword_0 + 1);
  swift_endAccess(v30);
  swift_bridgeObjectRelease(v26);
  swift_release(v16);

}

void sub_14835C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1480C4(a1, a2, a3, (uint64_t)&unk_1D3B60, (uint64_t)sub_151BF0);
}

void sub_148370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1480C4(a1, a2, a3, (uint64_t)&unk_1D3BB0, (uint64_t)sub_151BF0);
}

void sub_148384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1480C4(a1, a2, a3, (uint64_t)&unk_1D3B88, (uint64_t)sub_151BF0);
}

char *sub_148398(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  double v24;
  char v25;
  char *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  unsigned __int8 v33;
  char *v34;
  id v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  int v39;
  void *v40;
  unsigned __int8 *v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString *v53;
  uint64_t v54;
  uint64_t v55;
  objc_super v57;
  _OWORD v58[3];
  uint64_t v59;

  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_title];
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistName];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTitle];
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_duration] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_forceDurationHidden] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isProminentItem] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit] = 0;
  v12 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularity];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_badgeArtworkCatalog] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_supportsLibraryAddKeepLocalButton] = 1;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_requiresLibraryAddKeepLocalButtonSpacing] = 0;
  *(_WORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle] = 24576;
  v13 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_maximumTrackNumberForSizing];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_wantsNowPlayingIndicator] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_wantsAddButton] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isAddButtonSelected] = 0;
  v15 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_addButtonHandler];
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_playbackState] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkBackgroundView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkComponent] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_titleTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_durationTextDrawingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView] = 0;
  v16 = &v4[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents];
  v17 = v4;
  sub_1504D8((uint64_t *)v58);
  v18 = v58[1];
  *(_OWORD *)v16 = v58[0];
  *((_OWORD *)v16 + 1) = v18;
  *((_OWORD *)v16 + 2) = v58[2];
  *((_QWORD *)v16 + 6) = v59;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI8SongCell_darkerSystemColorsNotificationObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___addButton] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView] = 0;

  v57.receiver = v17;
  v57.super_class = (Class)type metadata accessor for SongCell(0);
  v19 = (char *)objc_msgSendSuper2(&v57, "initWithFrame:", a1, a2, a3, a4);
  v20 = objc_msgSend(v19, "layer");
  objc_msgSend(v20, "setAllowsGroupOpacity:", 0);

  v21 = objc_msgSend(v19, "layer");
  objc_msgSend(v21, "setAllowsGroupBlending:", 0);

  v22 = &v19[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkTreatment];
  *(_QWORD *)v22 = 0x4008000000000000;
  v22[8] = 0;
  v23 = *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent];
  v24 = *(double *)(v23 + 144);
  v25 = *(_BYTE *)(v23 + 152);
  *(_QWORD *)(v23 + 144) = 0x4008000000000000;
  *(_BYTE *)(v23 + 152) = 0;
  v26 = v19;
  if ((v25 & 1) != 0 || (static CGFloat.==~ infix(_:_:)(v24) & 1) == 0)
  {
    v27 = *(void (**)(uint64_t))(v23 + 184);
    if (v27)
    {
      v28 = *(_QWORD *)(v23 + 192);
      v29 = swift_retain();
      v27(v29);
      sub_145A0((uint64_t)v27, v28);
    }
  }

  v30 = &v26[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder];
  v31 = *(void **)&v26[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder];
  v32 = *(_QWORD *)&v26[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder + 8];
  *(_OWORD *)v30 = xmmword_175490;
  v33 = v30[16];
  v30[16] = 0x80;
  v34 = v26;
  sub_791D4(v31, v32, v33);
  v35 = *(id *)v30;
  v36 = *((_QWORD *)v30 + 1);
  v37 = v30[16];
  sub_1028D4(*(id *)v30, v36, v37);
  sub_FFE90(v35, v36, v37);

  v38 = v34[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment];
  v34[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment] = 1;
  if ((v38 & 1) == 0)
    objc_msgSend(v34, "setNeedsLayout");
  v39 = v34[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_wantsCustomHandlingOfSeparatorInset];
  v34[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_wantsCustomHandlingOfSeparatorInset] = 0;
  if (v39 == 1)
    objc_msgSend(v34, "setNeedsLayout");
  v40 = *(void **)&v34[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView];
  v41 = (unsigned __int8 *)&v34[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents];
  v42 = *(_QWORD **)&v34[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 8];
  v43 = *(_QWORD *)&v34[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 32];
  swift_retain_n(v42, 2);
  v44 = v40;
  swift_retain();
  sub_4E250(v42);
  swift_release(v42);
  v45 = (_QWORD *)swift_retain();
  sub_4E250(v45);

  swift_release(v42);
  swift_release_n(v43, 2);
  v46 = *((_QWORD *)v41 + 2);
  v47 = qword_1F9658;
  swift_retain();
  if (v47 != -1)
    swift_once(&qword_1F9658, sub_FEEB0);
  v48 = qword_2103D0;
  v49 = *(_QWORD *)algn_2103D8;
  swift_bridgeObjectRetain(*(_QWORD *)algn_2103D8);
  sub_5129C(v48, v49);
  swift_release(v46);
  v50 = *((_QWORD *)v41 + 3);
  swift_retain();
  sub_5129C(8755426, 0xA300000000000000);
  swift_release(v50);
  sub_14DD90();
  v51 = swift_allocObject(&unk_1D3AE8, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v34);
  v52 = type metadata accessor for NotificationObserver();
  swift_allocObject(v52, 56, 7);
  v53 = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
  swift_retain();
  v54 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v53, 0, 1, (uint64_t)sub_151B30, v51);
  swift_release(v51);

  v55 = *(_QWORD *)&v34[OBJC_IVAR____TtC12NowPlayingUI8SongCell_darkerSystemColorsNotificationObserver];
  *(_QWORD *)&v34[OBJC_IVAR____TtC12NowPlayingUI8SongCell_darkerSystemColorsNotificationObserver] = v54;
  swift_release(v55);
  return v34;
}

void sub_14897C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_14F18C();

  }
}

uint64_t sub_148A10(unsigned __int16 *a1)
{
  return sub_150018(*a1);
}

double sub_148A34(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double result;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v3 = v2;
  v6 = type metadata accessor for CharacterSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_title];
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_title];
  v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_title + 8];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v13 = v11 == a1 && v12 == a2;
  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a1, a2, 0) & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v21[0] = a1;
    v21[1] = a2;
    v15 = (void *)objc_opt_self(NSCharacterSet);
    swift_bridgeObjectRetain(a2);
    v16 = objc_msgSend(v15, "whitespaceAndNewlineCharacterSet");
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    v17 = sub_11CEC();
    v18 = StringProtocol.trimmingCharacters(in:)(v9, &type metadata for String, v17);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease(a2);
    sub_5129C(v18, v20);
    objc_msgSend(v3, "setNeedsLayout");
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

double sub_148BE4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double result;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v3 = v2;
  v6 = type metadata accessor for CharacterSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistName];
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistName];
  v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistName + 8];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v13 = v11 == a1 && v12 == a2;
  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a1, a2, 0) & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v21[0] = a1;
    v21[1] = a2;
    v15 = (void *)objc_opt_self(NSCharacterSet);
    swift_bridgeObjectRetain(a2);
    v16 = objc_msgSend(v15, "whitespaceAndNewlineCharacterSet");
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    v17 = sub_11CEC();
    v18 = StringProtocol.trimmingCharacters(in:)(v9, &type metadata for String, v17);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease(a2);
    sub_5129C(v18, v20);
    objc_msgSend(v3, "setNeedsLayout");
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_148D94(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

}

double sub_148DF4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double result;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v3 = v2;
  v6 = type metadata accessor for CharacterSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTitle];
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTitle];
  v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTitle + 8];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v13 = v11 == a1 && v12 == a2;
  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a1, a2, 0) & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v21[0] = a1;
    v21[1] = a2;
    v15 = (void *)objc_opt_self(NSCharacterSet);
    swift_bridgeObjectRetain(a2);
    v16 = objc_msgSend(v15, "whitespaceAndNewlineCharacterSet");
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    v17 = sub_11CEC();
    v18 = StringProtocol.trimmingCharacters(in:)(v9, &type metadata for String, v17);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease(a2);
    sub_5129C(v18, v20);
    objc_msgSend(v3, "setNeedsLayout");
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_148FE0(double a1)
{
  char *v1;
  uint64_t v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_duration;
  v4 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_duration];
  *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_duration] = a1;
  if (v4 != a1)
  {
    if (qword_1F9668 != -1)
      swift_once(&qword_1F9668, sub_133C58);
    if (*(double *)&qword_210418 >= a1)
    {
      v6 = 0;
      v8 = 0xE000000000000000;
    }
    else
    {
      if (qword_1F9650 != -1)
        swift_once(&qword_1F9650, sub_FE720);
      v5 = objc_msgSend((id)qword_2103C8, "stringFromSeconds:", *(double *)&v1[v3]);
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v8 = v7;

    }
    sub_5129C(v6, v8);
    objc_msgSend(v1, "setNeedsLayout");
  }
}

id sub_14916C(id result)
{
  void *v1;
  objc_class *ObjCClassFromMetadata;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void (**v7)(void *);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void (**v14)(void *);
  uint64_t v15;
  uint64_t v16;

  if (*((_BYTE *)v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_isProminentItem) != (result & 1))
  {
    if (!*((_BYTE *)v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_isProminentItem))
    {
      objc_msgSend(v1, "setSelectedBackgroundView:", 0);
      objc_msgSend(v1, "setBackgroundView:", 0);
      return objc_msgSend(v1, "setNeedsLayout");
    }
    type metadata accessor for TintColorObservingView();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    v3 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
    result = objc_msgSend(v3, "tintColor");
    if (result)
    {
      v4 = result;
      v5 = objc_msgSend(result, "colorWithAlphaComponent:", 0.28);

      objc_msgSend(v3, "setBackgroundColor:", v5);
      v6 = swift_allocObject(&unk_1D3B38, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16, v3);
      v7 = (void (**)(void *))&v3[OBJC_IVAR____TtC12NowPlayingUI22TintColorObservingView_tintColorDidChangeCallback];
      v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI22TintColorObservingView_tintColorDidChangeCallback];
      v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI22TintColorObservingView_tintColorDidChangeCallback + 8];
      *v7 = sub_151AF0;
      v7[1] = (void (*)(void *))v6;
      sub_145A0(v8, v9);
      objc_msgSend(v1, "setSelectedBackgroundView:", v3);
      v10 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
      result = objc_msgSend(v10, "tintColor");
      if (result)
      {
        v11 = result;
        v12 = objc_msgSend(result, "colorWithAlphaComponent:", 0.16);

        objc_msgSend(v10, "setBackgroundColor:", v12);
        v13 = swift_allocObject(&unk_1D3B38, 24, 7);
        swift_unknownObjectWeakInit(v13 + 16, v10);
        v14 = (void (**)(void *))&v10[OBJC_IVAR____TtC12NowPlayingUI22TintColorObservingView_tintColorDidChangeCallback];
        v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TintColorObservingView_tintColorDidChangeCallback];
        v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TintColorObservingView_tintColorDidChangeCallback + 8];
        *v14 = sub_151B10;
        v14[1] = (void (*)(void *))v13;
        sub_145A0(v15, v16);
        objc_msgSend(v1, "setBackgroundView:", v10);

        return objc_msgSend(v1, "setNeedsLayout");
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_1493C0(void *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = objc_msgSend(a1, "colorWithAlphaComponent:", a3);
    objc_msgSend(v7, "setBackgroundColor:", v8);

  }
}

id sub_1494A4(id result)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;
  void *v4;

  v2 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit;
  v3 = v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit];
  v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit] = (_BYTE)result;
  if (v3 != (result & 1))
  {
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView])
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView], "setHidden:", (result & 1) == 0);
    v4 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextDrawingView];
    if (v4)
      objc_msgSend(v4, "setHidden:", (v1[v2] & 1) == 0);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

void sub_1495E0(__int16 a1)
{
  __asm { BR              X12 }
}

void sub_149970(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  id v5;
  Class isa;
  Swift::String v7;
  id v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  Class v12;

  v2 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_isAddButtonSelected;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_isAddButtonSelected);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_isAddButtonSelected) = a1;
  if (v3 != (a1 & 1))
  {
    v4 = v1;
    v5 = sub_14E1FC();
    if ((*(_BYTE *)(v1 + v2) & 1) != 0)
    {
      isa = 0;
    }
    else
    {
      sub_B617C();
      v7._object = (void *)0x8000000000182940;
      v7._countAndFlagsBits = 0xD000000000000012;
      isa = UIImage.init(imageLiteralResourceName:)(v7).super.isa;
    }
    objc_msgSend(v5, "setRegularImage:", isa);

    v8 = sub_14E1FC();
    v9 = *(unsigned __int8 *)(v4 + v2);
    sub_B617C();
    if (v9 == 1)
    {
      v10 = 0x8000000000182980;
      v11 = 0xD000000000000012;
    }
    else
    {
      v11 = 0xD000000000000010;
      v10 = 0x8000000000182960;
    }
    v12 = UIImage.init(imageLiteralResourceName:)(*(Swift::String *)&v11).super.isa;
    objc_msgSend(v8, "setTintedImage:");

  }
}

void sub_149B4C(char a1)
{
  sub_149BD0(a1, (SEL *)&selRef_isHighlighted, (SEL *)&selRef_setHighlighted_);
}

void sub_149BBC(char a1)
{
  sub_149BD0(a1, (SEL *)&selRef_isSelected, (SEL *)&selRef_setSelected_);
}

void sub_149BD0(char a1, SEL *a2, SEL *a3)
{
  void *v3;
  objc_class *v7;
  unsigned int v8;
  id v9;
  objc_super v10;
  objc_super v11;

  v7 = (objc_class *)type metadata accessor for SongCell(0);
  v11.receiver = v3;
  v11.super_class = v7;
  v8 = objc_msgSendSuper2(&v11, *a2);
  v10.receiver = v3;
  v10.super_class = v7;
  objc_msgSendSuper2(&v10, *a3, a1 & 1);
  if (v8 != objc_msgSend(v3, *a2)
    && (*(_WORD *)((_BYTE *)v3 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle) & 0xE100) == 0x2100)
  {
    v9 = sub_14DAC8();
    if (qword_1F9580 != -1)
      swift_once(&qword_1F9580, sub_FDE14);
    objc_msgSend(v9, "setBackgroundColor:", qword_210308);

  }
}

id sub_149D20(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SongCell(0);
  return objc_msgSendSuper2(&v5, *a3);
}

BOOL sub_149ED4()
{
  _BYTE *v0;
  id v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v8;
  _BOOL8 result;

  if ((v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_forceDurationHidden] & 1) != 0)
    return 0;
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (_BYTE *)&dword_0 + 2)
    return 0;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 48];
  v5 = *(_QWORD *)(v3 + 128);
  v4 = *(_QWORD *)(v3 + 136);
  v6 = v5 & 0xFFFFFFFFFFFFLL;
  if (!((v4 & 0x2000000000000000) != 0 ? HIBYTE(v4) & 0xF : v6))
    return 0;
  if ((v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber + 8] & 1) != 0)
    return 1;
  v8 = *(unsigned __int16 *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle];
  switch(v8 >> 13)
  {
    case 0u:
    case 1u:
    case 2u:
      return 1;
    case 3u:
      result = v8 == 24577 || v8 == 24832;
      break;
    default:
      return 0;
  }
  return result;
}

void sub_149FDC()
{
  char *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  char *v14;
  id v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  double v23;
  __int16 v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  unsigned __int8 v41;
  double v42;
  double MinX;
  double v44;
  double v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  char *v50;
  double v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  double MinY;
  double Height;
  double v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  double v77;
  double v78;
  double v79;
  double v80;
  int v81;
  double v82;
  double v83;
  double MaxX;
  double v85;
  double v86;
  double v87;
  double MaxY;
  double v89;
  uint64_t v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  id v108;
  double v109;
  double v110;
  double v111;
  CGFloat v112;
  id v113;
  id v114;
  id v115;
  id v116;
  double Width;
  double v118;
  double v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  id v124;
  char *v125;
  double v126;
  int v127;
  void *v128;
  id v129;
  double v130;
  CGFloat v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  CGFloat v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  uint64_t v144;
  double v145;
  int v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char *v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  void (*v164)(char *, uint64_t);
  id v165;
  double v166;
  id v167;
  double v168;
  CGFloat v169;
  double v170;
  double v171;
  id v172;
  double v173;
  double v174;
  double v175;
  double v176;
  double x;
  CGFloat y;
  double v179;
  double v180;
  double v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  id v198;
  BOOL v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  void *v203;
  void *v204;
  id v205;
  id v206;
  id v207;
  double v208;
  void *v209;
  id v210;
  uint64_t v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  double v215;
  void *v216;
  void *v217;
  uint64_t v218;
  void *v219;
  _OWORD *v220;
  id v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  double v225;
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  CGFloat v229;
  CGFloat v230;
  CGFloat v231;
  CGFloat v232;
  double v233;
  double v234;
  void *v235;
  uint64_t v236;
  void *v237;
  _OWORD *v238;
  id v239;
  void *v240;
  void *v241;
  double v242;
  double v243;
  double v244;
  double v245;
  __n128 v246;
  double v247;
  char *v248;
  double v249;
  double v250;
  double v251;
  double v252;
  double v253;
  double v254;
  double v255;
  double v256;
  double v257;
  double v258;
  double v259;
  id v260;
  double v261;
  uint64_t v262;
  double v263;
  double v264;
  double v265;
  int v266;
  uint64_t v267;
  double v268;
  double v269;
  uint64_t v270;
  void *v271;
  char *v272;
  id v273;
  _QWORD *v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  id v278;
  double v279;
  double v280;
  double v281;
  id v282;
  id v283;
  uint64_t v284;
  _BOOL4 v285;
  char v286;
  double v287;
  double v288;
  uint64_t v289;
  double v290;
  double v291;
  double v292;
  double v293;
  double v294;
  id v295;
  char *v296;
  id v297;
  id v298;
  uint64_t v299;
  uint64_t v300;
  void *v301;
  char *v302;
  id v303;
  _QWORD *v304;
  void *v305;
  uint64_t v306;
  uint64_t v307;
  id v308;
  double v309;
  int v310;
  double v313;
  double v314;
  double v315;
  double v316;
  CGFloat v317;
  CGFloat v318;
  uint64_t v319;
  double v320;
  unsigned int v321;
  unsigned int v322;
  double v323;
  CGFloat v324;
  double v325;
  double v326;
  double v327;
  double v328;
  double v329;
  id v330;
  id v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  double v335;
  double v336;
  double v337;
  double v338;
  double v339;
  double v340;
  double v341;
  double v342;
  double v343;
  double v344;
  double v345;
  double v346;
  double v347;
  double v348;
  CGFloat v349;
  double v350;
  double v351;
  double v352;
  double v353;
  uint64_t v354;
  double v355;
  double v356;
  CGFloat v357;
  double v358;
  unsigned int v359;
  void *v360;
  id v361;
  uint64_t v362;
  double v363;
  __int128 *v364;
  double v365;
  double v366;
  double v367;
  double v368;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  unint64_t v372;
  uint64_t v373;
  unint64_t v374;
  char *v375;
  double v376;
  double v377;
  double v378;
  double v379;
  double v380;
  double v381;
  double v382;
  id v383;
  CGFloat v384;
  CGFloat v385;
  double v386;
  uint64_t v387;
  double v388;
  double v389;
  double v390;
  id v391;
  id v392;
  uint64_t v393;
  double v394;
  double v395;
  id v396;
  double v397;
  double v398;
  double v399;
  id v400;
  id v401;
  uint64_t v402;
  double v404;
  double v405;
  double v406;
  double v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  unint64_t v411;
  uint64_t v412;
  unint64_t v413;
  char *v414;
  double v415;
  double v416;
  double v417;
  char *v418;
  double v419;
  uint64_t v420;
  double v421;
  double v422;
  double v423;
  CGFloat v424;
  void *v425;
  uint64_t v426;
  void *v427;
  id v428;
  double v429;
  double v430;
  double v431;
  double v432;
  CGFloat v433;
  CGFloat v434;
  double v435;
  id v436;
  double v437;
  CGFloat v438;
  double v439;
  CGFloat v440;
  double v441;
  CGFloat v442;
  double v443;
  CGFloat v444;
  id v445;
  double v446;
  uint64_t v447;
  _QWORD *v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  uint64_t v454;
  uint64_t v455;
  __int128 *v456;
  __int128 *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  BOOL v462;
  void *v463;
  double v464;
  uint64_t v465;
  uint64_t v466;
  double v467;
  double v468;
  void *v469;
  void *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  double v475;
  void *v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  double v480;
  void *v481;
  void *v482;
  char v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  unsigned int v488;
  void *v489;
  void *v490;
  char v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  int v496;
  uint64_t v497;
  uint64_t v498;
  _BOOL4 v499;
  _OWORD *v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  double v509;
  double v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  CGSize v518;
  CGPoint v519;
  CGSize v520;
  double v521;
  double v522;
  double v523;
  id v524;
  double v525;
  CGFloat v526;
  double v527;
  CGFloat v528;
  double v529;
  CGFloat v530;
  double v531;
  CGFloat v532;
  id v533;
  double v534;
  double v535;
  double v536;
  CGFloat v537;
  double v538;
  CGFloat v539;
  double v540;
  CGFloat v541;
  double v542;
  CGFloat v543;
  id v544;
  double v545;
  double v546;
  id v547;
  double v548;
  uint64_t v549;
  double v550;
  double v551;
  double v552;
  char v553;
  double v554;
  double v555;
  double v556;
  double v557;
  double v558;
  double v559;
  double v560;
  double v561;
  double v562;
  double v563;
  double v564;
  double v565;
  double v566;
  double v567;
  double v568;
  double v569;
  double v570;
  double v571;
  double v572;
  double v573;
  CGFloat v574;
  uint64_t v575;
  void *v576;
  id v577;
  id v578;
  void *v579;
  id v580;
  uint64_t v581;
  void *v582;
  void *v583;
  void *v584;
  uint64_t v585;
  id v586;
  void *v587;
  id v588;
  void *v589;
  id v590;
  id v591;
  void *v592;
  id v593;
  id v594;
  void *v595;
  void *v596;
  id v597;
  id v598;
  id v599;
  double v600;
  double v601;
  double v602;
  double v603;
  double v604;
  double v605;
  double v606;
  double v607;
  double v608;
  double v609;
  double v610;
  double v611;
  double v612;
  double v613;
  CGFloat v614;
  double v615;
  id v616;
  float v617;
  uint64_t v618;
  void *v619;
  char *v620;
  id v621;
  double v622;
  double v623;
  id v624;
  id v625;
  id v626;
  _QWORD *v627;
  void *v628;
  uint64_t v629;
  uint64_t v630;
  id v631;
  double v632;
  double v633;
  id v634;
  id v635;
  uint64_t v636;
  id v637;
  id v638;
  uint64_t v639;
  double v640;
  double v641;
  char *v642;
  CGFloat v643;
  CGFloat v644;
  double v645;
  double v646;
  double v647;
  double v648;
  double v649;
  double v650;
  id v651;
  double v652;
  double v653;
  double v654;
  CGFloat v655;
  double v656;
  CGFloat v657;
  double v658;
  CGFloat v659;
  double v660;
  CGFloat v661;
  id v662;
  double v663;
  id v664;
  id v665;
  uint64_t v666;
  uint64_t v667;
  id v668;
  CGFloat v669;
  CGFloat v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  void *v675;
  double v676;
  void *v677;
  uint64_t v678;
  void *v679;
  uint64_t v680;
  double v681;
  __int128 *v682;
  CGFloat v683;
  double v684;
  uint64_t v685;
  uint64_t v686;
  double v687;
  double v688;
  void *v689;
  __int128 v690;
  CGFloat v691;
  CGFloat v692;
  char *v693;
  char *v694;
  uint64_t v695;
  CGFloat v696;
  double v697;
  double v698;
  id v699;
  double v700;
  double v701;
  id v702;
  double v703;
  char *v704;
  double v705;
  id v706;
  double v707;
  double v708;
  double v709;
  _BYTE v710[24];
  _BYTE v711[24];
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  __int128 v715;
  __int128 v716;
  __int128 v717;
  __int128 v718;
  __int128 v719;
  __int128 v720;
  __int128 v721;
  __int128 v722;
  __int128 v723;
  CGPoint v724;
  CGSize v725;
  __int128 v726;
  __int128 v727;
  __int128 v728;
  __int128 v729;
  __int128 v730;
  __int128 v731;
  __int128 v732;
  __int128 v733;
  __int128 v734;
  __int128 v735;
  __int128 v736;
  uint64_t v737;
  _BYTE v738[128];
  _BYTE v739[128];
  uint64_t v740;
  double v741;
  CGFloat v742;
  double v743;
  double v744;
  char v745;
  CGRect v746;
  objc_super v747;
  _QWORD v748[16];
  _OWORD v749[3];
  __int128 v750;
  __int128 v751;
  __int128 v752;
  __int128 v753;
  __int128 v754;
  double v755[8];
  double v756[8];
  double v757[8];
  _QWORD v758[16];
  _OWORD v759[6];
  _OWORD v760[7];
  CGRect v761;
  CGRect v762;
  CGRect v763;
  CGRect v764;
  CGRect v765;
  CGRect v766;
  CGRect v767;
  CGRect v768;
  CGRect v769;
  CGRect v770;
  CGRect v771;
  CGRect v772;
  CGRect v773;
  CGRect v774;
  CGRect v775;
  CGRect v776;
  CGRect v777;
  CGRect v778;
  CGRect v779;
  CGRect v780;
  CGRect v781;
  CGRect v782;
  CGRect v783;
  CGRect v784;
  CGRect v785;
  CGRect v786;
  CGRect v787;
  CGRect v788;
  CGRect v789;
  CGRect v790;
  CGRect v791;
  CGRect v792;
  CGRect v793;
  CGRect v794;
  CGRect v795;
  CGRect v796;
  CGRect v797;
  CGRect v798;
  CGRect v799;
  CGRect v800;
  CGRect v801;
  CGRect v802;
  CGRect v803;
  CGRect v804;
  CGRect v805;
  CGRect v806;
  CGRect v807;
  CGRect v808;

  v1 = *(double *)&v0;
  v2 = type metadata accessor for CGRect.LayoutAxis(0);
  v694 = *(char **)(v2 - 8);
  __chkstk_darwin(v2);
  v693 = (char *)&v666 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)type metadata accessor for SongCell(0);
  v747.receiver = v0;
  v747.super_class = v4;
  objc_msgSendSuper2(&v747, "layoutSubviews");
  v706 = objc_msgSend(v0, "contentView");
  objc_msgSend(v706, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v0, "traitCollection");
  v14 = (char *)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v15 = sub_151694(v13);
  v701 = UITraitCollection.safeDisplayScale.getter(v15);
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v18 = UIEdgeInsetsInsetRect(v6, v8, v10, v12, v16, v17);
  v20 = v19;
  v746.origin.x = v18;
  v691 = v22;
  v692 = v21;
  v746.origin.y = v21;
  v746.size.width = v19;
  v746.size.height = v22;
  v23 = *(double *)&OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle;
  v24 = *(_WORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle];
  v702 = v13;
  sub_150134((uint64_t)v13, v24);
  v690 = v726;
  v745 = 0;
  objc_msgSend(v0, "separatorInset");
  v741 = v25;
  v742 = v26;
  v743 = v27;
  v744 = v28;
  v695 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent];
  v29 = *(id *)(v695 + 104);
  objc_msgSend(v29, "frame");
  v707 = v6;
  v708 = v10;
  v34 = CGRect.removingLayoutDirection(_:inBounds:)(v14, v6, v8, v10, v12, v30, v31, v32, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v699 = v29;
  v41 = objc_msgSend(v29, "isHidden");
  v709 = v12;
  v704 = v14;
  v683 = v20;
  v703 = v8;
  if ((v41 & 1) != 0)
  {
    v700 = v20;
    v705 = v18;
    goto LABEL_19;
  }
  v42 = 12.0;
  if (*(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber + 8) == 1)
    v42 = *(double *)(*(_QWORD *)&v1
                    + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets
                    + 24);
  v698 = v34;
  v761.origin.x = v34;
  v761.origin.y = v36;
  v761.size.width = v38;
  v761.size.height = v40;
  MinX = CGRectGetMinX(v761);
  v762.origin.x = v18;
  v762.size.height = v691;
  v762.origin.y = v692;
  v44 = v683;
  v762.size.width = v683;
  v45 = CGRectGetMinX(v762);
  v46 = (void *)objc_opt_self(UIApplication);
  v47 = objc_msgSend(v46, "sharedApplication");
  v48 = objc_msgSend(v47, "preferredContentSizeCategory");

  v49 = _UIContentSizeCategoryCompareToContentSizeCategory(v48, UIContentSizeCategoryAccessibilityLarge);
  if (v49 != 1
    || (v50 = (char *)objc_msgSend(v702, "horizontalSizeClass"), v700 = v44, v705 = v18, v50 == (_BYTE *)&dword_0 + 2))
  {
    v51 = v42 + *(double *)&v690 + MinX - v45;
    v705 = v18 + v51;
    v746.origin.x = v18 + v51;
    v700 = v44 - v51;
    v746.size.width = v44 - v51;
  }
  v52 = v18;
  if ((*(_WORD *)(*(_QWORD *)&v1 + *(_QWORD *)&v23) & 0xE100) == 0x2100)
  {
    v53 = v705;
    v763.origin.x = v705;
    v55 = v691;
    v54 = v692;
    v763.origin.y = v692;
    v56 = v700;
    v763.size.width = v700;
    v763.size.height = v691;
    MinY = CGRectGetMinY(v763);
    v764.origin.x = v53;
    v764.origin.y = v54;
    v764.size.width = v56;
    v764.size.height = v55;
    Height = CGRectGetHeight(v764);
    v14 = v704;
    v59 = v703;
    if (qword_1F9698 != -1)
      swift_once(&qword_1F9698, sub_14D94C);
    v36 = CGFloat.floorValue(scale:)(v701, MinY + (Height - (*((double *)&v690 + 1) + *((double *)&xmmword_204570 + 1) * 0.5)) * 0.5);
  }
  else
  {
    v60 = objc_msgSend(v46, "sharedApplication");
    v61 = objc_msgSend(v60, "preferredContentSizeCategory");

    v62 = _UIContentSizeCategoryCompareToContentSizeCategory(v61, UIContentSizeCategoryAccessibilityLarge);
    v14 = v704;
    v59 = v703;
    if (v62 == 1)
    {
      if (objc_msgSend(v702, "horizontalSizeClass") == (char *)&dword_0 + 1)
      {
        v765.origin.x = v705;
        v765.size.height = v691;
        v765.origin.y = v692;
        v765.size.width = v700;
        v36 = CGRectGetMinY(v765) + 24.0;
      }
      goto LABEL_16;
    }
  }
  v18 = v52;
LABEL_16:
  v63 = objc_msgSend(v699, "frame");
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v72 = v698;
  v73.n128_f64[0] = v698;
  v74.n128_f64[0] = v36;
  v75.n128_f64[0] = v38;
  v76.n128_f64[0] = v40;
  v8 = v59;
  if ((static CGRect.==~ infix(_:_:)(v63, v73, v74, v75, v76, v65, v67, v69, v71) & 1) == 0)
  {
    v77 = CGRect.applyingLayoutDirection(_:inBounds:)(v14, v707, v59, v708, v709, v72, v36, v38, v40);
    sub_1002D0(v77, v78, v79, v80, v701);
  }
  v34 = v72;
LABEL_19:
  v81 = *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v23);
  v696 = v18;
  if ((v81 & 0xE100) == 0x2100)
  {
    if (qword_1F9698 != -1)
      swift_once(&qword_1F9698, sub_14D94C);
    v83 = *((double *)&xmmword_204570 + 1);
    v82 = *(double *)&xmmword_204570;
    v698 = *(double *)&xmmword_204570;
    v766.origin.x = v34;
    v766.origin.y = v36;
    v766.size.width = v38;
    v766.size.height = v40;
    MaxX = CGRectGetMaxX(v766);
    v85 = v82 * 0.5;
    v86 = v701;
    v87 = MaxX - CGFloat.floorValue(scale:)(v701, v85);
    v697 = v87;
    v767.origin.x = v34;
    v767.origin.y = v36;
    v767.size.width = v38;
    v767.size.height = v40;
    MaxY = CGRectGetMaxY(v767);
    v89 = MaxY - CGFloat.floorValue(scale:)(v86, v83 * 0.5);
    v90 = sub_14DB8C();
    v92 = v707;
    v91 = v708;
    v93 = v703;
    v94 = v709;
    v95 = v87;
    v96 = v698;
    v97 = CGRect.applyingLayoutDirection(_:inBounds:)(v14, v707, v703, v708, v709, v95, v89, v698, v83);
    sub_1002D0(v97, v98, v99, v100, v86);
    swift_release(v90);
    v101 = UIEdgeInsetsInsetRect(v697, v89, v96, v83, -1.0, -1.0);
    v103 = v102;
    v105 = v104;
    v107 = v106;
    v108 = sub_14DAC8();
    v109 = v92;
    v110 = v93;
    v111 = v93;
    v112 = v103;
    objc_msgSend(v108, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v14, v109, v110, v91, v94, v101, v103, v105, v107));

    v113 = sub_14DAC8();
    v114 = objc_msgSend(v113, "layer");

    objc_msgSend(v114, "setCornerCurve:", kCACornerCurveCircular);
    v115 = sub_14DAC8();
    v116 = objc_msgSend(v115, "layer");

    v768.origin.x = v101;
    v768.origin.y = v103;
    v768.size.width = v105;
    v768.size.height = v107;
    Width = CGRectGetWidth(v768);
    v769.origin.x = v101;
    v769.origin.y = v112;
    v769.size.width = v105;
    v769.size.height = v107;
    v8 = v111;
    v118 = CGRectGetHeight(v769);
    if (v118 >= Width)
      v118 = Width;
    v119 = v118 * 0.5;
    if (v119 < 0.0)
      v119 = 0.0;
    objc_msgSend(v116, "setCornerRadius:", v119);

    v120 = objc_msgSend(*(id *)&v1, "contentView");
    v121 = sub_14DAC8();
    objc_msgSend(v120, "bringSubviewToFront:", v121);

    v122 = objc_msgSend(*(id *)&v1, "contentView");
    v123 = sub_14DB8C();
    v124 = *(id *)(v123 + 104);
    objc_msgSend(v122, "bringSubviewToFront:", v124, swift_release(v123).n128_f64[0]);

    v81 = *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v23);
  }
  if (v81 == 24576)
  {
    v125 = (char *)objc_msgSend(v702, "horizontalSizeClass");
    v126 = v708;
    v127 = v125 == (_BYTE *)&dword_0 + 2 && sub_149ED4();
  }
  else
  {
    v127 = 0;
    v126 = v708;
  }
  if (*(_WORD *)(*(_QWORD *)&v1 + *(_QWORD *)&v23) == 24833)
  {
    v128 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView);
    if (v128)
    {
      v129 = v128;
      objc_msgSend(v129, "frame");
      v131 = v130;
      v133 = v132;
      objc_msgSend(v129, "sizeThatFits:", 0.0, 0.0);
      v135 = v134;
      v137 = v136;
      v770.origin.x = v705;
      v138 = v691;
      v139 = v692;
      v770.origin.y = v692;
      v140 = v700;
      v770.size.width = v700;
      v770.size.height = v691;
      v141 = CGRectGetMaxX(v770);
      v771.origin.x = v131;
      v771.origin.y = v133;
      v771.size.width = v135;
      v771.size.height = v137;
      v142 = v141 - CGRectGetWidth(v771);
      v143 = v708;
      v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201970);
      v145 = v23;
      v146 = v127;
      v147 = v694;
      v148 = swift_allocObject(v144, ((v694[80] + 32) & ~(unint64_t)v694[80])+ *((_QWORD *)v694 + 9), v694[80] | 7);
      *(_OWORD *)(v148 + 16) = xmmword_16B3D0;
      static CGRect.LayoutAxis.vertical.getter((__n128)xmmword_16B3D0);
      *(_QWORD *)&v726 = v148;
      v149 = sub_151A5C();
      v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201980);
      v151 = sub_151AA4();
      v152 = v693;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v726, v150, v151, v2, v149);
      v153 = v143;
      v154 = v707;
      v155 = v140;
      v126 = v153;
      v156 = v138;
      v8 = v703;
      v157 = CGRect.centeringAlong(axes:bounds:scale:)(v152, v705, v139, v155, v156, v701, v142, v133, v135, v137);
      v159 = v158;
      v161 = v160;
      v163 = v162;
      v164 = (void (*)(char *, uint64_t))*((_QWORD *)v147 + 1);
      v127 = v146;
      v23 = v145;
      v14 = v704;
      v164(v152, v2);
      v165 = v129;
      objc_msgSend(v165, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v14, v154, v8, v126, v709, v157, v159, v161, v163));

      v772.origin.x = v157;
      v772.origin.y = v159;
      v772.size.width = v161;
      v772.size.height = v163;
      v166 = CGRectGetWidth(v772);

      v700 = v746.size.width - (v166 + 12.0);
      v746.size.width = v700;
    }
  }
  if (*(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_wantsAddButton) == 1)
  {
    v167 = sub_14E1FC();
    objc_msgSend(v167, "frame");
    v169 = v168;
    v171 = v170;

    v172 = sub_14E1FC();
    objc_msgSend(v172, "sizeThatFits:", 0.0, 0.0);
    v174 = v173;
    v176 = v175;

    x = v746.origin.x;
    y = v746.origin.y;
    v773.size.height = v746.size.height;
    v705 = v746.size.height;
    v773.origin.x = v746.origin.x;
    v773.origin.y = v746.origin.y;
    v179 = v700;
    v773.size.width = v700;
    v180 = CGRectGetMaxX(v773);
    v774.origin.x = v169;
    v774.origin.y = v171;
    v774.size.width = v174;
    v774.size.height = v176;
    v181 = v180 - CGRectGetWidth(v774);
    v182 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201970);
    v183 = v694;
    v184 = swift_allocObject(v182, ((v694[80] + 32) & ~(unint64_t)v694[80]) + *((_QWORD *)v694 + 9), v694[80] | 7);
    *(_OWORD *)(v184 + 16) = xmmword_16B3D0;
    static CGRect.LayoutAxis.vertical.getter((__n128)xmmword_16B3D0);
    *(_QWORD *)&v726 = v184;
    v185 = sub_151A5C();
    v186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201980);
    v187 = sub_151AA4();
    v188 = v693;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v726, v186, v187, v2, v185);
    v189 = y;
    v8 = v703;
    v190 = v181;
    v126 = v708;
    v191 = CGRect.centeringAlong(axes:bounds:scale:)(v188, x, v189, v179, v705, v701, v190, v171, v174, v176);
    v193 = v192;
    v195 = v194;
    v197 = v196;
    (*((void (**)(char *, uint64_t))v183 + 1))(v188, v2);
    v198 = sub_14E1FC();
    objc_msgSend(v198, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v14, v707, v8, v126, v709, v191, v193, v195, v197));

    v775.origin.x = v191;
    v775.origin.y = v193;
    v775.size.width = v195;
    v775.size.height = v197;
    v700 = v746.size.width - (CGRectGetWidth(v775) + 12.0);
    v746.size.width = v700;
  }
  v199 = sub_149ED4();
  v697 = v1;
  v705 = v23;
  if (v199)
  {
    v200 = *(_QWORD *)(*(_QWORD *)&v1
                     + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache);
    if (v200)
    {
      v201 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_durationTextDrawingView;
      v202 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_durationTextDrawingView);
      v686 = v2;
      LODWORD(v698) = v127;
      if (v202)
      {
        swift_retain();
        v203 = v202;
      }
      else
      {
        _s4ViewCMa();
        v205 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        swift_retain();
        v206 = objc_msgSend(v205, "init");
        LODWORD(v205) = *(unsigned __int8 *)(*(_QWORD *)&v1
                                           + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_isDisabled);
        v207 = v206;
        v203 = v207;
        v208 = 1.0;
        if ((_DWORD)v205 == 1)
          UIInterfaceGetContentDisabledAlpha(v207, 1.0);
        objc_msgSend(v203, "setAlpha:", v208);

        v209 = *(void **)(*(_QWORD *)&v1 + v201);
        *(double *)(*(_QWORD *)&v1 + v201) = *(double *)&v203;

        v202 = 0;
      }
      v689 = v203;
      v210 = v202;
      objc_msgSend(v706, "addSubview:", v203);
      v211 = *(_QWORD *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 48);
      v212 = *(_OWORD *)(v211 + 80);
      v760[2] = *(_OWORD *)(v211 + 64);
      v213 = *(_OWORD *)(v211 + 96);
      v760[5] = *(_OWORD *)(v211 + 112);
      v760[4] = v213;
      v760[3] = v212;
      v214 = *(_OWORD *)(v211 + 48);
      v760[0] = *(_OWORD *)(v211 + 32);
      v760[1] = v214;
      v215 = *(double *)(v200 + 32);
      v216 = *(void **)(v200 + 40);
      v217 = *(void **)(v200 + 48);
      v218 = *(_QWORD *)(v200 + 56);
      v219 = *(void **)(v200 + 64);
      v220 = *(_OWORD **)(v200 + 72);
      sub_11D30(v760, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      v221 = v216;
      sub_10BBC(0x30303A30303A34, 0xE700000000000000, COERCE_DOUBLE(v760), v221, v217, v218, v219, v220, v748, 0.0, 0.0, v215);

      v222 = *(_OWORD *)(v211 + 64);
      v223 = *(_OWORD *)(v211 + 80);
      v224 = *(_OWORD *)(v211 + 112);
      v759[4] = *(_OWORD *)(v211 + 96);
      v225 = *(double *)&v748[6];
      v759[5] = v224;
      v759[2] = v222;
      v759[3] = v223;
      v226 = *(_OWORD *)(v211 + 48);
      v759[0] = *(_OWORD *)(v211 + 32);
      v759[1] = v226;
      v227 = *(_QWORD *)(v211 + 128);
      v228 = *(_QWORD *)(v211 + 136);
      v229 = v746.origin.x;
      v230 = v746.origin.y;
      v231 = v746.size.height;
      sub_11D30(v759, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      swift_bridgeObjectRetain(v228);
      v776.origin.x = v229;
      v776.origin.y = v230;
      v232 = v700;
      v776.size.width = v700;
      v776.size.height = v231;
      v233 = CGRectGetHeight(v776);
      v234 = *(double *)(v200 + 32);
      v235 = *(void **)(v200 + 48);
      v236 = *(_QWORD *)(v200 + 56);
      v237 = *(void **)(v200 + 64);
      v238 = *(_OWORD **)(v200 + 72);
      v239 = *(id *)(v200 + 40);
      sub_10BBC(v227, v228, COERCE_DOUBLE(v759), v239, v235, v236, v237, v238, v749, v225, v233, v234);
      v720 = v752;
      v721 = v753;
      v722 = v754;
      v715 = v749[0];
      v716 = v749[1];
      v717 = v749[2];
      v718 = v750;
      v719 = v751;
      swift_bridgeObjectRelease(v228);

      v730 = v719;
      v731 = v720;
      v732 = v721;
      v733 = v722;
      v726 = v715;
      v727 = v716;
      v728 = v717;
      v729 = v718;
      UIScreen.Dimensions.size.getter(&v726);
      sub_982C((uint64_t)&v726, (uint64_t)v758, &qword_1FCAD8);
      sub_11BB4((uint64_t)v749);
      v240 = v689;
      sub_147500(v758);
      objc_msgSend(v240, "setBounds:", 0.0, 0.0, v225, *((double *)&v750 + 1));
      v241 = v240;
      objc_msgSend(v240, "bounds");
      v243 = v242;
      v245 = v244;
      v777.origin.x = v229;
      v777.origin.y = v230;
      v777.size.width = v232;
      v777.size.height = v231;
      v246.n128_f64[0] = CGRectGetMaxX(v777);
      v700 = v225;
      v247 = v246.n128_f64[0] - v225;
      v248 = v693;
      static CGRect.LayoutAxis.vertical.getter(v246);
      v249 = v707;
      v250 = v708;
      v251 = v703;
      v252 = v709;
      v253 = CGRect.centeringAlong(axes:bounds:scale:)(v248, v707, v703, v708, v709, v701, v247, 0.0, v243, v245);
      v255 = v254;
      v257 = v256;
      v259 = v258;
      v2 = v686;
      (*((void (**)(char *, uint64_t))v694 + 1))(v248, v686);
      v260 = v241;
      v261 = CGRect.applyingLayoutDirection(_:inBounds:)(v704, v249, v251, v250, v252, v253, v255, v257, v259);
      objc_msgSend(v260, "setCenter:", CGRect.center.getter(v262, v261, v263, v264, v265));

      sub_11D6C((uint64_t)v749);
      sub_11D30(v759, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
      sub_11D6C((uint64_t)v748);
      swift_release(v200);
      sub_11D30(v760, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);

      LOBYTE(v127) = LOBYTE(v698);
      if ((LOBYTE(v698) & 1) == 0)
        v746.size.width = v746.size.width - (v700 + 12.0);
      v1 = v697;
      v23 = v705;
      v126 = v708;
      v8 = v251;
    }
  }
  else
  {
    v204 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_durationTextDrawingView);
    if (v204)
      objc_msgSend(v204, "removeFromSuperview");
  }
  v266 = *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v23);
  if ((v266 & 0xE000) == 0x6000
    && v266 == 24832
    && *(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_requiresLibraryAddKeepLocalButtonSpacing))
  {
    objc_msgSend(v702, "horizontalSizeClass");
  }
  if ((v127 & 1) != 0)
    v746.size.width = v746.size.width + -126.0;
  v267 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit;
  v268 = 0.0;
  v269 = 0.0;
  if (*(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit) == 1)
  {
    v270 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView;
    v271 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView);
    if (v271)
    {
      v272 = *(char **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView);
    }
    else
    {
      _s9StackViewCMa();
      v273 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
      v274 = *(_QWORD **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 16);
      v272 = (char *)v273;
      sub_4E250(v274);
      v275 = *(void **)(*(_QWORD *)&v1 + v270);
      *(_QWORD *)(*(_QWORD *)&v1 + v270) = v272;

    }
    v276 = *(_QWORD *)(*(_QWORD *)&v1
                     + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache);
    v277 = *(_QWORD *)&v272[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache];
    *(_QWORD *)&v272[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = v276;
    swift_retain_n(v276, 2);
    v278 = v271;
    sub_4E06C(v277);
    swift_release(v277);
    *(_QWORD *)&v279 = swift_release(v276).n128_u64[0];
    if ((objc_msgSend(v272, "isDescendantOfView:", v706, v279) & 1) == 0)
      objc_msgSend(v706, "addSubview:", v272);
    objc_msgSend(v272, "sizeThatFits:", v126, v709);
    v269 = v280;
    v268 = v281;

    v746.size.width = v746.size.width - v269;
  }
  v698 = COERCE_DOUBLE(objc_opt_self(UIApplication));
  v282 = objc_msgSend(*(id *)&v698, "sharedApplication");
  v283 = objc_msgSend(v282, "preferredContentSizeCategory");

  v700 = *(double *)&UIContentSizeCategoryAccessibilityLarge;
  v284 = _UIContentSizeCategoryCompareToContentSizeCategory(v283, UIContentSizeCategoryAccessibilityLarge);

  v285 = v284 == 1
      && (objc_msgSend(v699, "isHidden") & 1) == 0
      && objc_msgSend(v702, "horizontalSizeClass") == (char *)&dword_0 + 1;
  v286 = *(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber + 8);
  v681 = v268;
  v676 = v269;
  if ((v286 & 1) != 0)
  {
    v287 = v746.origin.x;
    v288 = v746.origin.y;
    v289 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView;
    v290 = v746.size.height;
    objc_msgSend(*(id *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView), "sizeThatFits:", v746.size.width, v746.size.height);
    v292 = v291;
    v293 = *((double *)&v690 + 1) * 0.5 + *(double *)&qword_204550;
    if (!v285)
      v293 = -0.0;
    v294 = v288 + v293;
    v295 = *(id *)(*(_QWORD *)&v1 + v289);
    v296 = v704;
    objc_msgSend(v295, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v704, v707, v8, v126, v709, v287, v294, v292, v290));

    v297 = objc_msgSend(*(id *)&v698, "sharedApplication");
    v298 = objc_msgSend(v297, "preferredContentSizeCategory");

    v299 = _UIContentSizeCategoryCompareToContentSizeCategory(v298, *(_QWORD *)&v700);
    if (v299 == 1 && objc_msgSend(v702, "horizontalSizeClass") == (char *)&dword_0 + 1)
    {
      v778.origin.x = v287;
      v778.origin.y = v294;
      v778.size.width = v292;
      v778.size.height = v290;
      CGRectGetMaxY(v778);
    }
    goto LABEL_124;
  }
  v300 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextStackView;
  v301 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextStackView);
  if (v301)
  {
    v302 = *(char **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextStackView);
  }
  else
  {
    _s9StackViewCMa();
    v303 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v304 = *(_QWORD **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents);
    v302 = (char *)v303;
    sub_4E250(v304);
    v305 = *(void **)(*(_QWORD *)&v1 + v300);
    *(_QWORD *)(*(_QWORD *)&v1 + v300) = v302;

    v301 = 0;
  }
  v306 = *(_QWORD *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache);
  v307 = *(_QWORD *)&v302[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache];
  *(_QWORD *)&v302[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = v306;
  swift_retain_n(v306, 2);
  v308 = v301;
  sub_4E06C(v307);
  swift_release(v307);
  objc_msgSend(v302, "setHidden:", 0, swift_release(v306).n128_f64[0]);
  if ((objc_msgSend(v302, "isDescendantOfView:", v706) & 1) == 0)
    objc_msgSend(v706, "addSubview:", v302);
  v309 = v705;
  v310 = *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v705);
  if ((v310 == 24832 || v310 == 24577) && (v310 & 0xE000) == 24576)
    v313 = 24.0;
  else
    v313 = 36.0;
  v314 = sub_14D360(*(uint64_t *)&v1, &v746, v313, v707, v8, v708, v709);
  v316 = v315;
  swift_beginAccess(&v746, &v714, 1, 0);
  v317 = v746.size.width;
  v318 = v746.size.height;
  objc_msgSend(v302, "sizeThatFits:", v746.size.width, v746.size.height);
  v320 = *(double *)&v319;
  v321 = *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v309);
  v322 = v321 >> 13;
  v689 = (void *)v319;
  if (!(v321 >> 13) || v322 == 2)
  {
    if (objc_msgSend(v702, "horizontalSizeClass") != (char *)&dword_0 + 2)
    {
      v788.origin.x = v707;
      v355 = v708;
      v788.origin.y = v703;
      v788.size.width = v708;
      v788.size.height = v709;
      v356 = CGRectGetMinX(v788);
      v334 = 0;
      v789.origin.x = 0.0;
      v789.origin.y = 0.0;
      v789.size.width = v316;
      v789.size.height = v320;
      v357 = CGRectGetWidth(v789);
      v790.origin.x = v356 - CGFloat.roundValue(scale:)(v701, v357 * 0.5) + 30.0;
      v328 = v314 + 8.0 + 8.0;
      v790.origin.y = 0.0;
      v687 = v790.origin.x;
      v790.size.width = v316;
      v790.size.height = v320;
      v746.size.width = v746.size.width - (v328 - CGRectGetMinX(v790));
      v746.origin.x = v328;
      *(double *)&v354 = v316;
      goto LABEL_106;
    }
    v782.origin.x = v746.origin.x;
    v782.origin.y = v746.origin.y;
    v782.size.width = v317;
    v782.size.height = v318;
    v687 = CGRectGetMinX(v782);
    v335 = v316 + 12.0;
    if (v316 + 12.0 <= 24.0)
      v335 = 24.0;
    v328 = v335 + v746.origin.x;
    v746.size.width = v746.size.width - v335;
    v746.origin.x = v335 + v746.origin.x;
    objc_msgSend(v706, "frame");
    v337 = v336;
    v339 = v338;
    v341 = v340;
    v343 = v342;
    objc_msgSend(*(id *)&v1, "bounds");
    v783.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v704, v344, v345, v346, v347, v337, v339, v341, v343);
    v348 = CGRectGetMinX(v783);
    v784.origin.x = v696;
    v784.size.height = v691;
    v784.origin.y = v692;
    v784.size.width = v683;
    v349 = v348 + CGRectGetMinX(v784);
    v350 = v741;
    v351 = v743;
    v352 = v744;
    swift_beginAccess(&v741, v711, 1, 0);
    v741 = v350;
    v742 = v349;
    v743 = v351;
    v320 = *(double *)&v689;
    v744 = v352;
    swift_beginAccess(&v745, v710, 1, 0);
    v745 = 1;
    v334 = 0;
  }
  else
  {
    if (v322 == 3 && (v321 == 24577 || v321 == 24832))
    {
      v688 = v314;
      objc_msgSend(v706, "frame");
      v323 = CGRectGetMinX(v779);
      v780.origin.x = v696;
      v780.size.height = v691;
      v780.origin.y = v692;
      v780.size.width = v683;
      v324 = v323 + CGRectGetMinX(v780);
      v325 = v741;
      v326 = v743;
      v327 = v744;
      swift_beginAccess(&v741, v711, 1, 0);
      v741 = v325;
      v742 = v324;
      v743 = v326;
      v744 = v327;
      swift_beginAccess(&v745, v710, 1, 0);
      v745 = 1;
      v328 = v746.origin.x;
      v781.origin.y = v746.origin.y;
      v781.origin.x = v746.origin.x;
      v781.size.width = v317;
      v781.size.height = v318;
      v329 = CGRectGetMinX(v781);
      v330 = objc_msgSend(*(id *)&v698, "sharedApplication");
      v331 = objc_msgSend(v330, "preferredContentSizeCategory");

      v332 = _UIContentSizeCategoryCompareToContentSizeCategory(v331, *(_QWORD *)&v700);
      if (v332 == 1 && objc_msgSend(v702, "horizontalSizeClass") == (char *)&dword_0 + 1)
      {
        v687 = v329 + *(double *)&v690 + *(double *)&qword_204558;
        objc_msgSend(v699, "frame");
        v334 = v333;
      }
      else
      {
        v687 = v329;
        if (v316 + 12.0 > v313)
          v358 = v316 + 12.0;
        else
          v358 = v313;
        v746.size.width = v746.size.width - v358;
        v328 = v358 + CGRectGetMinX(v746);
        v746.origin.x = v328;
        v334 = 0;
      }
      v355 = v708;
      *(double *)&v354 = v688;
      v320 = *(double *)&v689;
      goto LABEL_106;
    }
    v785.origin.x = v746.origin.x;
    v785.origin.y = v746.origin.y;
    v785.size.width = v317;
    v785.size.height = v318;
    v786.origin.x = CGRectGetMinX(v785);
    v353 = v786.origin.x;
    v334 = 0;
    v786.origin.y = 0.0;
    v786.size.width = v316;
    v786.size.height = v320;
    v746.size.width = v746.size.width - CGRectGetWidth(v786);
    v787.origin.y = 0.0;
    v687 = v353;
    v787.origin.x = v353;
    v787.size.width = v316;
    v787.size.height = v320;
    v328 = CGRectGetMaxX(v787);
    v746.origin.x = v328;
  }
  *(double *)&v354 = v316;
  v355 = v708;
LABEL_106:
  objc_msgSend(v302, "setBounds:", 0.0, 0.0, *(double *)&v354, v320);
  v359 = *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v705);
  *(_QWORD *)&v690 = v334;
  if ((v359 >> 13 == 2 || !(v359 >> 13)) && (v359 & 1) != 0)
  {
    v360 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView);
    if (v360)
    {
      LODWORD(v680) = v285;
      v361 = v360;
      objc_msgSend(v361, "frame");
      v685 = v362;
      objc_msgSend(v361, "sizeThatFits:", 0.0, 0.0);
      v684 = v363;
      v682 = v364;
      v365 = v746.origin.y;
      v366 = v746.size.width;
      v367 = v746.size.height;
      v791.origin.x = v328;
      v791.origin.y = v746.origin.y;
      v791.size.width = v746.size.width;
      v791.size.height = v746.size.height;
      v368 = CGRectGetMinX(v791);
      v369 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201970);
      v370 = v694;
      v371 = swift_allocObject(v369, ((v694[80] + 32) & ~(unint64_t)v694[80])+ *((_QWORD *)v694 + 9), v694[80] | 7);
      *(_OWORD *)(v371 + 16) = xmmword_16B3D0;
      static CGRect.LayoutAxis.vertical.getter((__n128)xmmword_16B3D0);
      *(_QWORD *)&v726 = v371;
      v372 = sub_151A5C();
      v373 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201980);
      v374 = sub_151AA4();
      v375 = v693;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v726, v373, v374, v2, v372);
      v376 = CGRect.centeringAlong(axes:bounds:scale:)(v375, v328, v365, v366, v367, v701, v368, *(double *)&v685, v684, *(double *)&v682);
      v378 = v377;
      v380 = v379;
      v382 = v381;
      (*((void (**)(char *, uint64_t))v370 + 1))(v375, v2);
      v383 = v361;
      objc_msgSend(v383, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v704, v707, v703, v355, v709, v376, v378, v380, v382));

      v792.origin.x = v376;
      v792.origin.y = v378;
      v792.size.width = v380;
      v792.size.height = v382;
      v384 = CGRectGetWidth(v792) + 12.0;
      v328 = v384 + v746.origin.x;
      v746.size.width = v746.size.width - v384;
      v746.origin.x = v384 + v746.origin.x;
      if (*(_BYTE *)(*(_QWORD *)&v1
                    + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment) == 1)
      {
        v793.origin.x = v376;
        v793.origin.y = v378;
        v793.size.width = v380;
        v793.size.height = v382;
        v385 = CGRectGetMinX(v793);

        swift_beginAccess(&v741, &v713, 1, 0);
        v742 = v385;
        swift_beginAccess(&v745, &v712, 1, 0);
        v745 = 1;
      }
      else
      {

      }
      v355 = v708;
      LOBYTE(v285) = v680;
    }
  }
  v386 = v746.size.height;
  v387 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView;
  v388 = v746.origin.y;
  objc_msgSend(*(id *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView), "sizeThatFits:", v746.size.width, v746.size.height);
  v390 = v389;
  v391 = objc_msgSend(*(id *)&v698, "sharedApplication");
  v392 = objc_msgSend(v391, "preferredContentSizeCategory");

  v393 = _UIContentSizeCategoryCompareToContentSizeCategory(v392, *(_QWORD *)&v700);
  v688 = *(double *)&v354;
  if (v393 == 1 && (objc_msgSend(v699, "isHidden") & 1) == 0)
  {
    v394 = v328;
    v395 = v355;
    if (objc_msgSend(v702, "horizontalSizeClass") == (char *)&dword_0 + 1)
      v388 = v388 + *((double *)&v690 + 1) * 0.5 + *(double *)&qword_204550;
  }
  else
  {
    v394 = v328;
    v395 = v355;
  }
  v396 = *(id *)(*(_QWORD *)&v1 + v387);
  v397 = v707;
  v398 = v703;
  v399 = v709;
  objc_msgSend(v396, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v704, v707, v703, v395, v709, v394, v388, v390, v386));

  v400 = objc_msgSend(*(id *)&v698, "sharedApplication");
  v401 = objc_msgSend(v400, "preferredContentSizeCategory");

  v402 = _UIContentSizeCategoryCompareToContentSizeCategory(v401, *(_QWORD *)&v700);
  if (v402 == 1 && v285)
  {
    v404 = *(double *)&v689;
    v405 = *(double *)&v690;
    v407 = v687;
    v406 = v688;
  }
  else
  {
    v408 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201970);
    v409 = v694;
    v410 = swift_allocObject(v408, ((v694[80] + 32) & ~(unint64_t)v694[80]) + *((_QWORD *)v694 + 9), v694[80] | 7);
    *(_OWORD *)(v410 + 16) = xmmword_16B3D0;
    static CGRect.LayoutAxis.vertical.getter((__n128)xmmword_16B3D0);
    *(_QWORD *)&v726 = v410;
    v411 = sub_151A5C();
    v412 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201980);
    v413 = sub_151AA4();
    v414 = v693;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v726, v412, v413, v2, v411);
    v407 = CGRect.centeringAlong(axes:bounds:scale:)(v414, v397, v398, v395, v399, v701, v687, *(double *)&v690, v688, *(double *)&v689);
    v405 = v415;
    v406 = v416;
    v404 = v417;
    (*((void (**)(char *, uint64_t))v409 + 1))(v414, v2);
  }
  v418 = v302;
  v296 = v704;
  v419 = CGRect.applyingLayoutDirection(_:inBounds:)(v704, v397, v398, v395, v399, v407, v405, v406, v404);
  objc_msgSend(v418, "setCenter:", CGRect.center.getter(v420, v419, v421, v422, v423));

  v23 = v705;
  v126 = v395;
  v8 = v398;
LABEL_124:
  v424 = v696;
  if (*(_BYTE *)(*(_QWORD *)&v1 + v267) == 1)
  {
    v425 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView);
    if (v425)
    {
      v426 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView;
      v427 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView);
      v428 = v425;
      objc_msgSend(v427, "frame");
      v794.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v296, v707, v8, v126, v709, v429, v430, v431, v432);
      v433 = v794.origin.y;
      v434 = v794.size.width;
      v669 = v794.size.height;
      v670 = v794.origin.x;
      v435 = CGRectGetMaxX(v794);
      v436 = *(id *)(*(_QWORD *)&v1 + v426);
      objc_msgSend(v436, "bounds");
      v438 = v437;
      v440 = v439;
      v442 = v441;
      v444 = v443;
      v445 = objc_msgSend(v436, "traitCollection");
      v446 = UITraitCollection.safeDisplayScale.getter(v445);

      sub_4F378(v755, v438, v440, v442, v444, v446);
      v447 = *(_QWORD *)(*(_QWORD *)&v755[0] + 16);
      if (v447)
      {
        v667 = v426;
        v668 = v428;
        v448 = *(_QWORD **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 8);
        v449 = *(_OWORD *)(*(_QWORD *)&v755[0] + 160);
        v733 = *(_OWORD *)(*(_QWORD *)&v755[0] + 144);
        v734 = v449;
        v450 = *(_OWORD *)(*(_QWORD *)&v755[0] + 192);
        v735 = *(_OWORD *)(*(_QWORD *)&v755[0] + 176);
        v736 = v450;
        v451 = *(_OWORD *)(*(_QWORD *)&v755[0] + 96);
        v729 = *(_OWORD *)(*(_QWORD *)&v755[0] + 80);
        v730 = v451;
        v452 = *(_OWORD *)(*(_QWORD *)&v755[0] + 128);
        v731 = *(_OWORD *)(*(_QWORD *)&v755[0] + 112);
        v732 = v452;
        v453 = *(_OWORD *)(*(_QWORD *)&v755[0] + 48);
        v726 = *(_OWORD *)(*(_QWORD *)&v755[0] + 32);
        v727 = v453;
        v728 = *(_OWORD *)(*(_QWORD *)&v755[0] + 64);
        v454 = v726;
        if ((_QWORD *)v726 != v448)
        {
          v455 = 0;
          v456 = (__int128 *)(*(_QWORD *)&v755[0] + 208);
          v457 = (__int128 *)(*(_QWORD *)&v755[0] + 32);
          v680 = *(_QWORD *)&v755[0] + 32;
          while (1)
          {
            v682 = v457;
            v458 = *(_QWORD *)(v454 + 16);
            v459 = *(_QWORD *)(v454 + 24);
            v460 = v448[2];
            v461 = v448[3];
            v462 = v458 == v460 && v459 == v461;
            if (!v462 && (_stringCompareWithSmolCheck(_:_:expecting:)(v458, v459, v460, v461, 0) & 1) == 0)
            {
              sub_524D4((uint64_t)&v726);
              v479 = 0;
              goto LABEL_174;
            }
            v463 = *(void **)(v454 + 40);
            v701 = *(double *)(v454 + 32);
            v694 = *(char **)(v454 + 48);
            *((_QWORD *)&v690 + 1) = *(_QWORD *)(v454 + 56);
            v689 = *(void **)(v454 + 64);
            v464 = *(double *)(v454 + 80);
            v686 = *(_QWORD *)(v454 + 72);
            v465 = *(_QWORD *)(v454 + 96);
            v684 = *(double *)(v454 + 88);
            v466 = *(_QWORD *)(v454 + 104);
            v468 = *(double *)(v454 + 112);
            v467 = *(double *)(v454 + 120);
            v470 = (void *)v448[4];
            v469 = (void *)v448[5];
            v693 = (char *)v448[6];
            *(_QWORD *)&v690 = v448[7];
            v471 = v448[8];
            v687 = v464;
            v688 = *(double *)&v471;
            v472 = v448[10];
            v685 = v448[9];
            v473 = v448[11];
            v474 = v448[13];
            if ((LODWORD(v464) & 0x80000000) == 0)
              break;
            if ((v472 & 0x80000000) == 0)
            {
LABEL_144:
              sub_524D4((uint64_t)&v726);
              goto LABEL_173;
            }
            v673 = v448[12];
            v674 = v465;
            v671 = v474;
            v672 = v466;
            v678 = v473;
            v679 = v463;
            v675 = v470;
            if (*(void **)&v701 == v470 && v463 == v469)
            {
              v677 = v469;
              sub_524D4((uint64_t)&v726);
              v480 = v701;
              sub_10B0C(*(void **)&v701, v463, v693, v690, *(uint64_t *)&v688, v685, v472);
              sub_10B0C(*(void **)&v480, v463, v694, *((uint64_t *)&v690 + 1), (uint64_t)v689, v686, SLODWORD(v687));
              v476 = v677;
            }
            else
            {
              v481 = v469;
              LODWORD(v677) = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v701, v463, v470, v469, 0);
              sub_524D4((uint64_t)&v726);
              sub_10B0C(v470, v481, v693, v690, *(uint64_t *)&v688, v685, v472);
              sub_10B0C(*(void **)&v701, v463, v694, *((uint64_t *)&v690 + 1), (uint64_t)v689, v686, SLODWORD(v687));
              v476 = v481;
              if ((v677 & 1) == 0)
                goto LABEL_171;
            }
LABEL_150:
            if (v674 != v673)
              goto LABEL_171;
            if (v672 != v671)
            {
              v489 = v675;
              v490 = v476;
              goto LABEL_185;
            }
            v482 = v476;
            if ((static CGFloat.==~ infix(_:_:)(v468) & 1) == 0)
            {
              v489 = v675;
              v490 = v482;
LABEL_185:
              v492 = v693;
              v493 = v690;
              v494 = *(_QWORD *)&v688;
              v495 = v685;
              v496 = v472;
LABEL_172:
              sub_10B64(v489, v490, v492, v493, v494, v495, v496);
              sub_10B64(*(void **)&v701, v679, v694, *((uint64_t *)&v690 + 1), (uint64_t)v689, v686, SLODWORD(v687));
LABEL_173:
              v479 = 0;
              goto LABEL_174;
            }
            v483 = static CGFloat.==~ infix(_:_:)(v467);
            sub_10B64(v675, v482, v693, v690, *(uint64_t *)&v688, v685, v472);
            sub_10B64(*(void **)&v701, v679, v694, *((uint64_t *)&v690 + 1), (uint64_t)v689, v686, SLODWORD(v687));
            if ((v483 & 1) != 0)
            {
              v484 = *(_QWORD *)(v454 + 128);
              v485 = *(_QWORD *)(v454 + 136);
              v486 = v448[16];
              v487 = v448[17];
              if (v484 == v486 && v485 == v487)
                v479 = 1;
              else
                v479 = _stringCompareWithSmolCheck(_:_:expecting:)(v484, v485, v486, v487, 0);
            }
            else
            {
              v479 = 0;
            }
LABEL_174:
            v497 = *(_QWORD *)(v454 + 272);
            v498 = v448[34];
            if (!v498)
            {
              sub_52534((uint64_t)&v726);
              v1 = v697;
              v23 = v705;
              if (((v497 == 0) & v479) != 0)
              {
                v682 = v456 - 11;
                goto LABEL_194;
              }
              goto LABEL_179;
            }
            v23 = v705;
            if (v497)
            {
              sub_52534((uint64_t)&v726);
              v499 = v497 == v498;
              v1 = v697;
              if ((v479 & v499 & 1) != 0)
                goto LABEL_194;
LABEL_179:
              if (!--v447)
                goto LABEL_192;
              goto LABEL_180;
            }
            sub_52534((uint64_t)&v726);
            v1 = v697;
            if (!--v447)
            {
LABEL_192:
              sub_52644(v755);
              v296 = v704;
              v509 = v681;
              v510 = v676;
              v428 = v668;
              v705 = v435;
              goto LABEL_195;
            }
LABEL_180:
            ++v455;
            v500 = v456 + 11;
            v457 = (__int128 *)(v680 + 176 * v455);
            v501 = *v456;
            v502 = v456[2];
            v727 = v456[1];
            v728 = v502;
            v726 = v501;
            v503 = v456[3];
            v504 = v456[4];
            v505 = v456[6];
            v731 = v456[5];
            v732 = v505;
            v729 = v503;
            v730 = v504;
            v506 = v456[7];
            v507 = v456[8];
            v508 = v456[10];
            v735 = v456[9];
            v736 = v508;
            v733 = v506;
            v734 = v507;
            v454 = v726;
            v456 += 11;
            if ((_QWORD *)v726 == v448)
            {
              v682 = v500 - 11;
              v23 = v705;
              goto LABEL_194;
            }
          }
          if ((v472 & 0x80000000) != 0)
            goto LABEL_144;
          v673 = v448[12];
          v674 = v465;
          v671 = v474;
          v672 = v466;
          v677 = v469;
          sub_524D4((uint64_t)&v726);
          v678 = v473;
          sub_10B0C(v470, v677, v693, v690, *(uint64_t *)&v688, v685, v472);
          v475 = v701;
          v679 = v463;
          sub_10B0C(*(void **)&v701, v463, v694, *((uint64_t *)&v690 + 1), (uint64_t)v689, v686, SLODWORD(v687));
          v476 = v677;
          v675 = v470;
          if (*(void **)&v475 != v470)
          {
            v477 = objc_msgSend(*(id *)&v701, "isEqual:", v675);
            v476 = v677;
            if (!v477)
            {
LABEL_171:
              v489 = v675;
              v490 = v476;
              v492 = v693;
              v493 = v690;
              v494 = *(_QWORD *)&v688;
              v495 = v685;
              v496 = v472;
              goto LABEL_172;
            }
          }
          if (v679)
          {
            if (!v476)
              goto LABEL_171;
            if (v679 != v476)
            {
              v478 = objc_msgSend(v679, "isEqual:");
              v476 = v677;
              if (!v478)
                goto LABEL_171;
            }
          }
          else if (v476)
          {
            goto LABEL_171;
          }
          if (v694)
          {
            if (!v693)
              goto LABEL_171;
            if (v694 != v693)
            {
              v488 = objc_msgSend(v694, "isEqual:", v693);
              v476 = v677;
              if (!v488 || v690 != BYTE8(v690))
                goto LABEL_171;
              goto LABEL_167;
            }
          }
          else if (v693)
          {
            goto LABEL_171;
          }
          if (v690 != BYTE8(v690))
            goto LABEL_171;
LABEL_167:
          if (v689 != *(void **)&v688)
            goto LABEL_171;
          v491 = static CGFloat.==~ infix(_:_:)(*(double *)&v686);
          v476 = v677;
          if ((v491 & 1) == 0
            || *((float *)&v687 + 1) != *((float *)&v472 + 1)
            || v472 != LOBYTE(v687))
          {
            goto LABEL_171;
          }
          goto LABEL_150;
        }
        v682 = (__int128 *)(*(_QWORD *)&v755[0] + 32);
        v23 = v705;
LABEL_194:
        v511 = *v682;
        v512 = v682[2];
        v716 = v682[1];
        v717 = v512;
        v715 = v511;
        v513 = v682[3];
        v514 = v682[4];
        v515 = v682[6];
        v720 = v682[5];
        v721 = v515;
        v718 = v513;
        v719 = v514;
        v516 = v682[7];
        v517 = v682[8];
        v518 = (CGSize)v682[10];
        v724 = (CGPoint)v682[9];
        v725 = v518;
        v722 = v516;
        v723 = v517;
        sub_524D4((uint64_t)&v715);
        sub_52644(v755);
        v519 = v724;
        v520 = v725;
        v795.size.height = v669;
        v795.origin.x = v670;
        v795.origin.y = v433;
        v795.size.width = v434;
        v521 = CGRectGetMinX(v795);
        v796.origin = v519;
        v796.size = v520;
        v522 = CGRectGetMaxX(v796);
        sub_52534((uint64_t)&v715);
        v705 = v521 + v522;
        v296 = v704;
        v509 = v681;
        v510 = v676;
        v428 = v668;
LABEL_195:
        v426 = v667;
      }
      else
      {
        sub_52644(v755);
        v509 = v681;
        v510 = v676;
        v705 = v435;
      }
      objc_msgSend(v428, "setBounds:", 0.0, 0.0, v510, v509);
      objc_msgSend(*(id *)(*(_QWORD *)&v1 + v426), "frame");
      v523 = CGRectGetMinY(v797);
      v524 = *(id *)(*(_QWORD *)&v1 + v426);
      objc_msgSend(v524, "bounds");
      v526 = v525;
      v528 = v527;
      v530 = v529;
      v532 = v531;
      v533 = objc_msgSend(v524, "traitCollection");
      v534 = UITraitCollection.safeDisplayScale.getter(v533);

      sub_4F378(v756, v526, v528, v530, v532, v534);
      sub_52644(v756);

      v535 = v523 + v756[1];
      objc_msgSend(v428, "bounds");
      v537 = v536;
      v539 = v538;
      v541 = v540;
      v543 = v542;
      v544 = objc_msgSend(v428, "traitCollection");
      v545 = UITraitCollection.safeDisplayScale.getter(v544);

      sub_4F378(v757, v537, v539, v541, v543, v545);
      sub_52644(v757);
      v546 = v535 - v757[1];
      v547 = v428;
      v126 = v708;
      v8 = v703;
      v548 = CGRect.applyingLayoutDirection(_:inBounds:)(v296, v707, v703, v708, v709, v705, v546, v510, v681);
      objc_msgSend(v547, "setCenter:", CGRect.center.getter(v549, v548, v550, v551, v552));

      v424 = v696;
    }
  }
  v553 = 1;
  *(_QWORD *)&v554 = swift_beginAccess(&v745, &v740, 1, 0).n128_u64[0];
  if ((v745 & 1) == 0)
  {
    if (*(_BYTE *)(*(_QWORD *)&v1
                  + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment) == 1)
    {
      objc_msgSend(v706, "frame", v554);
      v556 = v555;
      v558 = v557;
      v560 = v559;
      v561 = v424;
      v563 = v562;
      objc_msgSend(*(id *)&v1, "bounds");
      v564 = v563;
      v424 = v561;
      v798.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v296, v565, v566, v567, v568, v556, v558, v560, v564);
      v569 = CGRectGetMinX(v798);
      objc_msgSend(*(id *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView), "frame");
      v799.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v296, v707, v8, v126, v709, v570, v571, v572, v573);
      v574 = v569 + CGRectGetMinX(v799);
      v553 = 1;
      swift_beginAccess(&v741, &v737, 1, 0);
      v742 = v574;
      v745 = 1;
    }
    else
    {
      v553 = 0;
    }
  }
  if (*(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_wantsNowPlayingIndicator) != 1)
  {
    v578 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v579 = *(void **)(v695 + 224);
    *(_QWORD *)(v695 + 224) = v578;
    v580 = v578;
    sub_100AA4((uint64_t)v579);

    v581 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView;
    v582 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView);
    if (v582)
    {
      objc_msgSend(v582, "removeFromSuperview");
      v583 = *(void **)(*(_QWORD *)&v1 + v581);
    }
    else
    {
      v583 = 0;
    }
    *(_QWORD *)(*(_QWORD *)&v1 + v581) = 0;

    goto LABEL_225;
  }
  v575 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView;
  v576 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView);
  if (v576)
  {
    v577 = *(id *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView);
  }
  else
  {
    v577 = objc_msgSend(objc_allocWithZone((Class)MTNowPlayingIndicatorView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v577, "setNumberOfLevels:", 4);
    v584 = *(void **)(*(_QWORD *)&v1 + v575);
    *(_QWORD *)(*(_QWORD *)&v1 + v575) = v577;

    v576 = 0;
  }
  v585 = *(_QWORD *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_playbackState);
  v586 = v576;
  objc_msgSend(v577, "setPlaybackState:", v585);
  v587 = *(void **)(v695 + 104);
  if ((objc_msgSend(v587, "isHidden") & 1) != 0)
    objc_msgSend(v706, "addSubview:", v577);
  else
    objc_msgSend(v706, "insertSubview:above:", v577, v587);
  objc_msgSend(v577, "sizeToFit");
  v588 = v587;
  if ((objc_msgSend(v588, "isHidden") & 1) != 0)
  {
    v589 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextDrawingView);
    if (v589)
    {
      v590 = v589;
      v591 = objc_msgSend(v590, "superview");

      if (v591 && (objc_msgSend(v590, "isHidden") & 1) == 0)
      {
        if (qword_1F95A8 != -1)
          swift_once(&qword_1F95A8, sub_FDF10);
        objc_msgSend(v577, "setLevelGuttersColor:", qword_210330);
        v621 = v577;
        objc_msgSend(v590, "center");
        v623 = v622;
        objc_msgSend(v621, "center");
        objc_msgSend(v621, "setCenter:", v623);

        objc_msgSend(v590, "frame");
        CGRectGetMinY(v801);
        sub_982C((uint64_t)v590 + OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View__textDrawingContext, (uint64_t)v739, &qword_1FCAD8);
        sub_982C((uint64_t)v739, (uint64_t)&v715, &qword_1FCAD8);
        if (sub_52434((uint64_t)&v715) != 1)
        {
          v730 = v719;
          v731 = v720;
          v732 = v721;
          v733 = v722;
          v726 = v715;
          v727 = v716;
          v728 = v717;
          v729 = v718;
          sub_982C((uint64_t)v739, (uint64_t)v738, &qword_1FCAD8);
          sub_11BB4((uint64_t)v738);
          v802.origin.x = sub_14795C((uint64_t)&v726);
          CGRectGetMinY(v802);
          sub_5244C((uint64_t)v739);
        }
        objc_msgSend(v621, "bounds");
        CGRectGetHeight(v803);
        v624 = v621;
        objc_msgSend(v624, "frame");
        objc_msgSend(v624, "setFrame:");

        v625 = v590;
        objc_msgSend(v625, "setHidden:", 1);

        goto LABEL_225;
      }

    }
    v592 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextStackView);
    if (!v592)
    {
LABEL_219:
      objc_msgSend(v577, "removeFromSuperview");

      goto LABEL_225;
    }
    v593 = v592;
    v594 = objc_msgSend(v593, "superview");

    if (!v594 || (objc_msgSend(v593, "isHidden") & 1) != 0)
    {

      goto LABEL_219;
    }
    if (qword_1F95A8 != -1)
      swift_once(&qword_1F95A8, sub_FDF10);
    objc_msgSend(v577, "setLevelGuttersColor:", qword_210330);
    v651 = v577;
    objc_msgSend(v593, "center");
    v653 = v652;
    objc_msgSend(v651, "center");
    objc_msgSend(v651, "setCenter:", v653);

    objc_msgSend(v593, "frame");
    CGRectGetMinY(v807);
    objc_msgSend(v593, "bounds");
    v655 = v654;
    v657 = v656;
    v659 = v658;
    v661 = v660;
    v662 = objc_msgSend(v593, "traitCollection");
    v663 = UITraitCollection.safeDisplayScale.getter(v662);

    sub_4F378((double *)&v726, v655, v657, v659, v661, v663);
    sub_52644(&v726);
    objc_msgSend(v651, "bounds");
    CGRectGetHeight(v808);
    v664 = v651;
    objc_msgSend(v664, "frame");
    objc_msgSend(v664, "setFrame:");

    v665 = v593;
    objc_msgSend(v665, "setHidden:", 1);

    v126 = v708;
    v424 = v696;
  }
  else
  {
    if (qword_1F95E0 != -1)
      swift_once(&qword_1F95E0, sub_FE270);
    v595 = (void *)qword_210368;
    v596 = *(void **)(v695 + 224);
    *(_QWORD *)(v695 + 224) = qword_210368;
    v597 = v595;
    sub_100AA4((uint64_t)v596);

    v598 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v577, "setLevelGuttersColor:", v598);

    v599 = v577;
    objc_msgSend(v588, "center");
    objc_msgSend(v599, "setCenter:");

    v296 = v704;
  }
LABEL_225:
  if ((v553 & 1) == 0)
  {
    objc_msgSend(v706, "frame");
    v601 = v600;
    v603 = v602;
    v605 = v604;
    v606 = v424;
    v608 = v607;
    objc_msgSend(*(id *)&v1, "bounds");
    v609 = v608;
    v424 = v606;
    v800.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v296, v610, v611, v612, v613, v601, v603, v605, v609);
    v614 = CGRectGetMinX(v800)
         + *(double *)(*(_QWORD *)&v1
                     + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_proposedHorizontalLockupSeparatorInset
                     + 8);
    swift_beginAccess(&v741, &v715, 1, 0);
    v742 = v614;
  }
  if ((*(_WORD *)(*(_QWORD *)&v1 + *(_QWORD *)&v23) & 0xE000) == 0
    && (*(_BYTE *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularity + 8) & 1) == 0)
  {
    v615 = *(double *)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularity);
    v616 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v617 = sub_F59A0();

    if (v615 >= v617)
    {
      v618 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextStackView;
      v619 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextStackView);
      if (v619)
      {
        v620 = *(char **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextStackView);
      }
      else
      {
        _s9StackViewCMa();
        v626 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
        v627 = *(_QWORD **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 24);
        v620 = (char *)v626;
        sub_4E250(v627);
        v628 = *(void **)(*(_QWORD *)&v1 + v618);
        *(_QWORD *)(*(_QWORD *)&v1 + v618) = v620;

      }
      v629 = *(_QWORD *)(*(_QWORD *)&v1
                       + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache);
      v630 = *(_QWORD *)&v620[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache];
      *(_QWORD *)&v620[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = v629;
      swift_retain_n(v629, 2);
      v631 = v619;
      sub_4E06C(v630);
      swift_release(v630);
      *(_QWORD *)&v632 = swift_release(v629).n128_u64[0];
      if ((objc_msgSend(v620, "isDescendantOfView:", v706, v632) & 1) == 0)
        objc_msgSend(v706, "addSubview:", v620);
      v633 = 4.0;
      if (objc_msgSend(v702, "horizontalSizeClass") == (char *)&dword_0 + 2)
      {
        v634 = objc_msgSend(*(id *)&v698, "sharedApplication");
        v635 = objc_msgSend(v634, "preferredContentSizeCategory");

        v636 = _UIContentSizeCategoryCompareToContentSizeCategory(v635, *(_QWORD *)&v700);
        v633 = 0.0;
        if (v636 == 1)
        {
          v804.origin.x = v424;
          v804.size.height = v691;
          v804.origin.y = v692;
          v804.size.width = v683;
          v633 = CGRectGetMinX(v804) + 8.0;
        }
      }
      v637 = objc_msgSend(*(id *)&v698, "sharedApplication");
      v638 = objc_msgSend(v637, "preferredContentSizeCategory");

      v639 = _UIContentSizeCategoryCompareToContentSizeCategory(v638, *(_QWORD *)&v700);
      v640 = 0.5;
      if (v639 == 1)
        v640 = 0.25;
      v641 = v709 * v640;
      v642 = v620;
      if (v296 == (_BYTE *)&dword_0 + 1)
      {
        v643 = v707;
        v805.origin.x = v707;
        v805.origin.y = v8;
        v805.size.width = v126;
        v644 = v709;
        v805.size.height = v709;
        v645 = CGRectGetMaxX(v805);
        v806.origin.x = v643;
        v806.origin.y = v8;
        v806.size.width = v126;
        v806.size.height = v644;
        v633 = v645 - (v633 - CGRectGetMinX(v806));
      }
      objc_msgSend(v620, "setCenter:", v633, v641);

    }
  }
  if ((*(_BYTE *)(*(_QWORD *)&v1
                 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomBottomSeparator) & 1) == 0)
  {
    *(_QWORD *)&v646 = swift_beginAccess(&v741, v739, 0, 0).n128_u64[0];
    v647 = v741;
    v648 = v742;
    v649 = v743;
    v650 = v744;
    objc_msgSend(*(id *)&v1, "separatorInset", v646);
    if ((static CGFloat.==~ infix(_:_:)(v647) & 1) == 0
      || (static CGFloat.==~ infix(_:_:)(v648) & 1) == 0
      || (static CGFloat.==~ infix(_:_:)(v649) & 1) == 0
      || (static CGFloat.==~ infix(_:_:)(v650) & 1) == 0)
    {
      objc_msgSend(*(id *)&v1, "setSeparatorInset:", v647, v648, v649, v650);
    }
  }
  if (*(__int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v23) < 0
    && *(unsigned __int16 *)(*(_QWORD *)&v1 + *(_QWORD *)&v23) != 0x8000)
  {
    objc_msgSend(*(id *)&v1, "separatorInset");
    objc_msgSend(*(id *)&v1, "setSeparatorInset:");
  }

}

double sub_14D360(uint64_t a1, CGRect *a2, double a3, CGFloat a4, CGFloat a5, double a6, double a7)
{
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double Width;
  double Height;
  double v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _OWORD *v34;
  id v35;
  _BYTE v37[24];
  _QWORD v38[6];
  double v39;
  _OWORD v40[6];
  CGRect v41;

  v11 = *(_OWORD **)(a1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents);
  v13 = v11[4];
  v12 = v11[5];
  v14 = v11[7];
  v40[4] = v11[6];
  v40[5] = v14;
  v40[2] = v13;
  v40[3] = v12;
  v15 = v11[3];
  v40[0] = v11[2];
  v40[1] = v15;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_maximumTrackNumberForSizing + 8) & 1) == 0)
  {
    v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache);
    if (v17)
    {
      v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_maximumTrackNumberForSizing);
      sub_11D30(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      swift_retain();
      v21 = sub_15150C(v20, (uint64_t)v40, (double *)v17, a6, a7);
      if (v21 >= a3)
        a3 = v21;
      if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber + 8) & 1) != 0)
      {
        swift_release(v17);
        sub_11D30(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
      }
      else
      {
        v22 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
        v24 = swift_allocObject(v23, 72, 7);
        *(_OWORD *)(v24 + 16) = xmmword_16B3D0;
        *(_QWORD *)(v24 + 56) = &type metadata for Int;
        *(_QWORD *)(v24 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v24 + 32) = v22;
        v25 = static String.localizedStringWithFormat(_:_:)(25637, 0xE200000000000000, v24);
        v27 = v26;
        swift_bridgeObjectRelease(v24);
        v41.origin.x = a4;
        v41.origin.y = a5;
        v41.size.width = a6;
        v41.size.height = a7;
        Width = CGRectGetWidth(v41);
        swift_beginAccess(a2, v37, 0, 0);
        Height = CGRectGetHeight(*a2);
        v30 = *(double *)(v17 + 32);
        v31 = *(void **)(v17 + 48);
        v32 = *(_QWORD *)(v17 + 56);
        v33 = *(void **)(v17 + 64);
        v34 = *(_OWORD **)(v17 + 72);
        v35 = *(id *)(v17 + 40);
        sub_10BBC(v25, v27, COERCE_DOUBLE(v40), v35, v31, v32, v33, v34, v38, Width, Height, v30);

        sub_11D30(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
        swift_bridgeObjectRelease(v27);
        swift_release(v17);
        sub_11D6C((uint64_t)v38);
        if (a3 <= v39)
          return v39;
      }
    }
  }
  return a3;
}

void sub_14D64C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  NSString *v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  NSString *v9;
  double v10;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = _UIContentSizeCategoryCompareToContentSizeCategory(v2, UIContentSizeCategoryAccessibilityLarge);
  if (v3 == 1)
  {
    v4 = UIFontTextStyleBody;
    v5 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v4, 48.0);

  }
  else
  {
    v5 = 48.0;
  }
  v6 = objc_msgSend(v0, "sharedApplication");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  v8 = _UIContentSizeCategoryCompareToContentSizeCategory(v7, UIContentSizeCategoryAccessibilityLarge);
  if (v8 == 1)
  {
    v9 = UIFontTextStyleBody;
    v10 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v9, 48.0);

  }
  else
  {
    v10 = 48.0;
  }
  qword_210430 = *(_QWORD *)&v5;
  qword_210438 = *(_QWORD *)&v10;
}

void sub_14D7C8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  NSString *v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  NSString *v9;
  double v10;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = _UIContentSizeCategoryCompareToContentSizeCategory(v2, UIContentSizeCategoryAccessibilityLarge);
  if (v3 == 1)
  {
    v4 = UIFontTextStyleBody;
    v5 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v4, 85.0);

  }
  else
  {
    v5 = 85.0;
  }
  v6 = objc_msgSend(v0, "sharedApplication");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  v8 = _UIContentSizeCategoryCompareToContentSizeCategory(v7, UIContentSizeCategoryAccessibilityLarge);
  if (v8 == 1)
  {
    v9 = UIFontTextStyleBody;
    v10 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v9, 48.0);

  }
  else
  {
    v10 = 48.0;
  }
  qword_204560 = *(_QWORD *)&v5;
  *(double *)algn_204568 = v10;
}

void sub_14D94C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  NSString *v4;
  double v5;
  id v6;
  id v7;
  uint64_t v8;
  NSString *v9;
  double v10;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = _UIContentSizeCategoryCompareToContentSizeCategory(v2, UIContentSizeCategoryAccessibilityLarge);
  if (v3 == 1)
  {
    v4 = UIFontTextStyleBody;
    v5 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v4, 32.0);

  }
  else
  {
    v5 = 32.0;
  }
  v6 = objc_msgSend(v0, "sharedApplication");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  v8 = _UIContentSizeCategoryCompareToContentSizeCategory(v7, UIContentSizeCategoryAccessibilityLarge);
  if (v8 == 1)
  {
    v9 = UIFontTextStyleBody;
    v10 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v9, 32.0);

  }
  else
  {
    v10 = 32.0;
  }
  *(double *)&xmmword_204570 = v5;
  *((double *)&xmmword_204570 + 1) = v10;
}

id sub_14DAC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkBackgroundView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkBackgroundView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkBackgroundView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    if (qword_1F9580 != -1)
      swift_once(&qword_1F9580, sub_FDE14);
    objc_msgSend(v4, "setBackgroundColor:", qword_210308);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_14DB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkComponent;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkComponent))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkComponent);
  }
  else
  {
    v2 = sub_14DBF0(v0);
    v3 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release(v3);
  }
  swift_retain();
  return v2;
}

uint64_t sub_14DBF0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  type metadata accessor for ArtworkComponentImageView();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = _s9ComponentCMa();
  swift_allocObject(v3, 256, 7);
  v4 = sub_FF910(v2);
  v5 = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v4 + 24) = 0x70756B636F6CLL;
  *(_QWORD *)(v4 + 32) = 0xE600000000000000;
  swift_bridgeObjectRelease(v5);
  if (qword_1F9698 != -1)
    v6 = swift_once(&qword_1F9698, sub_14D94C);
  v7 = *(double *)(v4 + 88);
  v8 = *(double *)(v4 + 96);
  *(_OWORD *)(v4 + 88) = xmmword_204570;
  sub_FFE24(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
  v10 = *(_QWORD *)(v9 + 184);
  v11 = *(_QWORD *)(v9 + 192);
  v12 = *(_QWORD *)(v4 + 184);
  v13 = *(_QWORD *)(v4 + 192);
  *(_QWORD *)(v4 + 184) = v10;
  *(_QWORD *)(v4 + 192) = v11;
  sub_2BE00(v10, v11);
  sub_145A0(v12, v13);
  v14 = *(_QWORD *)(v4 + 144);
  v15 = *(unsigned __int8 *)(v4 + 152);
  *(_QWORD *)(v4 + 144) = 1;
  *(_BYTE *)(v4 + 152) = 1;
  if (v15 != 1 || v14 == 0)
  {
    v17 = *(void (**)(uint64_t))(v4 + 184);
    if (v17)
    {
      v18 = *(_QWORD *)(v4 + 192);
      v19 = swift_retain();
      v17(v19);
      sub_145A0((uint64_t)v17, v18);
    }
  }
  sub_FFFEC(objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.16), 0x3FE0000000000000);
  v20 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_badgeArtworkCatalog);
  v21 = *(void **)(v4 + 80);
  *(_QWORD *)(v4 + 80) = v20;
  v22 = v20;
  sub_FFC90(v21);

  return v4;
}

void sub_14DD90()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  id v11;
  char *v12;
  double v13;
  char v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  double v22;
  char v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unsigned int v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  Swift::String v40;
  Class isa;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle;
  sub_150134((uint64_t)v2, *(_WORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle]);

  v4 = &v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkSize];
  *(_QWORD *)v4 = v44;
  *((_QWORD *)v4 + 1) = v45;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent];
  v6 = *(double *)(v5 + 88);
  v7 = *(double *)(v5 + 96);
  *(_QWORD *)(v5 + 88) = v44;
  *(_QWORD *)(v5 + 96) = v45;
  sub_FFE24(v8, v6, v7);
  v9 = (double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  *v9 = v46;
  v9[1] = v47;
  v9[2] = v48;
  v9[3] = v49;
  if ((static CGFloat.==~ infix(_:_:)(v46) & 1) == 0
    || (static CGFloat.==~ infix(_:_:)(v47) & 1) == 0
    || (static CGFloat.==~ infix(_:_:)(v48) & 1) == 0
    || (static CGFloat.==~ infix(_:_:)(v49) & 1) == 0)
  {
    objc_msgSend(v1, "setNeedsLayout");
  }
  v10 = *(_QWORD *)(v5 + 112);
  if ((*(_WORD *)&v1[v3] & 0xE001) != 0x2001)
  {
    *(_QWORD *)(v5 + 112) = 1;
    if (v10 == 1)
      goto LABEL_11;
    goto LABEL_10;
  }
  *(_QWORD *)(v5 + 112) = 2;
  if (v10 != 2)
  {
LABEL_10:
    v11 = objc_msgSend(*(id *)(v5 + 104), "image");
    sub_100EE4(v11);

  }
LABEL_11:
  v12 = &v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkTreatment];
  if ((*(_WORD *)&v1[v3] & 0xE100) == 0x2100)
  {
    *(_QWORD *)v12 = 0x4010000000000000;
    v12[8] = 0;
    v13 = *(double *)(v5 + 144);
    v14 = *(_BYTE *)(v5 + 152);
    *(_QWORD *)(v5 + 144) = 0x4010000000000000;
    *(_BYTE *)(v5 + 152) = 0;
    if ((v14 & 1) != 0 || (static CGFloat.==~ infix(_:_:)(v13) & 1) == 0)
    {
      v15 = *(void (**)(uint64_t))(v5 + 184);
      if (v15)
      {
        v16 = *(_QWORD *)(v5 + 192);
        v17 = swift_retain();
        v15(v17);
        sub_145A0((uint64_t)v15, v16);
      }
    }
    v18 = sub_14DB8C();
    v19 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_badgeArtworkCatalog];
    v20 = *(void **)(v18 + 80);
    *(_QWORD *)(v18 + 80) = v19;
    v21 = v19;
    sub_FFC90(v20);
    swift_release(v18);

  }
  else
  {
    *(_QWORD *)v12 = 0x4008000000000000;
    v12[8] = 0;
    v22 = *(double *)(v5 + 144);
    v23 = *(_BYTE *)(v5 + 152);
    *(_QWORD *)(v5 + 144) = 0x4008000000000000;
    *(_BYTE *)(v5 + 152) = 0;
    if ((v23 & 1) != 0 || (static CGFloat.==~ infix(_:_:)(v22) & 1) == 0)
    {
      v24 = *(void (**)(uint64_t))(v5 + 184);
      if (v24)
      {
        v25 = *(_QWORD *)(v5 + 192);
        v26 = swift_retain();
        v24(v26);
        sub_145A0((uint64_t)v24, v25);
      }
    }
  }
  v27 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView;
  v28 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView];
  if (*(_WORD *)&v1[v3] == 24833)
  {
    if (v28)
    {
      v29 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView];
      v30 = v29;
    }
    else
    {
      v31 = UITableViewCellDisclosureChevronImage();
      v30 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v31);

      v29 = 0;
      v28 = *(void **)&v1[v27];
    }
    *(_QWORD *)&v1[v27] = v30;
    v32 = v29;
    v33 = v30;

    objc_msgSend(v1, "addSubview:", v33);
  }
  else if (v28)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView], "removeFromSuperview");
  }
  v34 = *(unsigned __int16 *)&v1[v3];
  if ((v34 >> 13 == 2 || !(v34 >> 13)) && (v34 & 1) != 0)
  {
    v36 = OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView;
    v37 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView];
    if (v37)
    {
      v38 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView];
      v39 = v38;
    }
    else
    {
      sub_B617C();
      v40._object = (void *)0x800000000018E1B0;
      v40._countAndFlagsBits = 0xD00000000000001ALL;
      isa = UIImage.init(imageLiteralResourceName:)(v40).super.isa;
      v39 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", isa);

      v38 = 0;
      v37 = *(void **)&v1[v36];
    }
    *(_QWORD *)&v1[v36] = v39;
    v42 = v38;
    v43 = v39;

    objc_msgSend(v1, "addSubview:", v43);
  }
  else
  {
    v35 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView];
    if (v35)
      objc_msgSend(v35, "removeFromSuperview");
  }
}

id sub_14E1FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___addButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___addButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___addButton);
  }
  else
  {
    v4 = sub_14E258();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_14E258()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  Swift::String v4;
  Class isa;
  Swift::String v6;
  Class v7;
  uint64_t v8;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)MTMPUHalfTintedTransportButton), "init");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.8, 1.0);
  objc_msgSend(v2, "setRegularImageColor:", v3);

  sub_B617C();
  v4._countAndFlagsBits = 0xD000000000000012;
  v4._object = (void *)0x8000000000182940;
  isa = UIImage.init(imageLiteralResourceName:)(v4).super.isa;
  objc_msgSend(v2, "setRegularImage:", isa);

  v6._object = (void *)0x8000000000182960;
  v6._countAndFlagsBits = 0xD000000000000010;
  v7 = UIImage.init(imageLiteralResourceName:)(v6).super.isa;
  objc_msgSend(v2, "setTintedImage:", v7);

  v8 = swift_allocObject(&unk_1D3AE8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v1);
  swift_retain();
  sub_1480C4(64, (uint64_t)sub_1504D0, v8, (uint64_t)&unk_1D3B10, (uint64_t)sub_33744);
  swift_release_n(v8, 2);
  return v2;
}

void sub_14E3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void *);
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void *))(Strong + OBJC_IVAR____TtC12NowPlayingUI8SongCell_addButtonHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI8SongCell_addButtonHandler + 8);
      swift_retain();
      v5(v4);
      sub_145A0((uint64_t)v5, v6);
    }

  }
}

void sub_14E444(void *a1, char a2, char a3, unsigned __int16 a4)
{
  void *v5;
  id v6;
  id v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v67;
  void *v69;

  if ((a3 & 1) != 0)
  {
    v5 = 0;
    v6 = 0;
    if (!UIAccessibilityDarkerSystemColorsEnabled())
      goto LABEL_16;
  }
  else
  {
    if (qword_1F95B0 != -1)
      swift_once(&qword_1F95B0, sub_FDF98);
    v5 = (void *)qword_210338;
    v7 = (id)qword_210338;
    if (!UIAccessibilityDarkerSystemColorsEnabled())
    {
      if (UIAccessibilityDarkerSystemColorsEnabled())
      {
        if (qword_1F95C8 != -1)
          swift_once(&qword_1F95C8, sub_FE0E0);
        v8 = &qword_210350;
      }
      else
      {
        if (qword_1F95C0 != -1)
          swift_once(&qword_1F95C0, sub_FE034);
        v8 = &qword_210348;
      }
      v6 = (id)*v8;
      v9 = (id)*v8;
LABEL_16:
      v10 = a4 >> 13;
      v67 = v5;
      if ((_DWORD)v10 == 1 || (_DWORD)v10 == 3 && (a4 - 24576 < 2 || a4 == 24832))
      {
        v11 = qword_1F96A8;
        v12 = v5;
        if (v11 != -1)
          swift_once(&qword_1F96A8, sub_14F3C8);
        v13 = &qword_204588;
      }
      else
      {
        v14 = qword_1F96A0;
        v12 = v6;
        if (v14 != -1)
          swift_once(&qword_1F96A0, sub_14F3B0);
        v13 = &qword_204580;
      }
      v15 = (void *)*v13;
      v16 = (void *)objc_opt_self(UIColor);
      v17 = v15;
      v18 = v12;
      v19 = objc_msgSend(v16, "clearColor");
      v20 = objc_msgSend(v17, "typeSafeCopy");

      v21 = v18;
      v22 = v20;
      v23 = v19;
      if ((v10 | 2) == 2)
        objc_msgSend(a1, "horizontalSizeClass");
      v24 = (void *)objc_opt_self(MTMPUFontDescriptor);
      v20;
      v65 = v18;
      v19;
      if ((_DWORD)v10 == 4 && a4 == 32769)
        v25 = objc_msgSend(v24, "fontDescriptorWithSystemFontSize:weight:", 5, 14.0);
      else
        v25 = objc_msgSend(v24, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
      v26 = v25;
      if (v26)
      {
        v27 = v26;
        v28 = v67;
        v29 = v27;
        v30 = objc_msgSend(v16, "clearColor");
        v31 = objc_msgSend(v29, "typeSafeCopy");

        v32 = (void *)objc_opt_self(UIApplication);
        v33 = v31;
        v34 = v28;
        v35 = v30;
        v33;
        v34;
        v35;
        v36 = objc_msgSend(v32, "sharedApplication");
        v37 = objc_msgSend(v36, "preferredContentSizeCategory");

        _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v37);
        v38 = (void *)objc_opt_self(MTMPUFontDescriptor);
        v39 = objc_msgSend(v38, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
        v40 = v6;
        v41 = objc_msgSend(v16, "clearColor");
        v69 = v6;
        v42 = objc_msgSend(v39, "typeSafeCopy");

        v43 = v42;
        v44 = v40;
        v45 = v41;
        v43;
        v46 = v44;
        v45;
        v47 = objc_msgSend(v38, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
        v48 = v46;
        v49 = objc_msgSend(v16, "clearColor");
        v50 = objc_msgSend(v47, "typeSafeCopy");

        if ((a2 & 1) != 0)
          v51 = 3;
        else
          v51 = 0;
        v52 = v50;
        v53 = v48;
        v54 = v49;
        v52;
        v55 = v53;
        v54;
        v56 = objc_msgSend(v38, "fontDescriptorWithTextStyle:leadingAdjustment:", v51, 1);
        v57 = v55;
        v58 = objc_msgSend(v16, "clearColor");
        v59 = objc_msgSend(v56, "typeSafeCopy");

        v59;
        v60 = v57;
        v58;
        sub_10B0C(v59, v69, v58, 0, 4, 0, 0);
        sub_10B0C(v59, v69, v58, 0, 4, 0, 0);
        if (qword_1F96B0 != -1)
          swift_once(&qword_1F96B0, sub_14F3E0);
        v61 = (void *)qword_204590;
        v62 = v60;
        v63 = v61;
        objc_msgSend(v16, "clearColor");
        v64 = objc_msgSend(v63, "typeSafeCopy");

        __asm { BR              X9 }
      }

      __break(1u);
      JUMPOUT(0x14F178);
    }
  }
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  goto LABEL_16;
}

void sub_14F18C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  unsigned __int8 v54;
  __int128 v55;
  unsigned __int8 v56;
  unsigned int v57;
  uint64_t v58;

  sub_150330((uint64_t)&v51);
  v1 = v52;
  v44 = v52;
  v46 = v51;
  v2 = v53;
  v3 = v54;
  v42 = v54;
  v43 = v53;
  v4 = v55;
  v40 = *((_QWORD *)&v55 + 1);
  v41 = v55;
  v5 = v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents;
  v6 = *(_QWORD **)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 32);
  v48 = v5;
  v7 = v56 | ((unint64_t)v57 << 32);
  v8 = v58;
  v38 = v58;
  v39 = v7;
  v9 = (void *)v6[4];
  v10 = (void *)v6[5];
  v11 = (void *)v6[6];
  v12 = v6[7];
  v13 = v6[8];
  v14 = v6[9];
  v15 = v6[10];
  v6[4] = v51;
  v6[5] = v1;
  v6[6] = v2;
  v6[7] = v3;
  *((_OWORD *)v6 + 4) = v4;
  v6[10] = v7;
  v6[11] = v8;
  sub_10620((uint64_t)&v51);
  sub_10B64(v9, v10, v11, v12, v13, v14, v15);
  sub_50F0C();
  v16 = *(_QWORD **)(v5 + 40);
  v17 = (void *)v16[4];
  v18 = (void *)v16[5];
  v19 = (void *)v16[6];
  v20 = v16[7];
  v21 = v16[8];
  v22 = v16[9];
  v23 = v16[10];
  v16[4] = v46;
  v16[5] = v44;
  v16[6] = v43;
  v16[7] = v42;
  v16[8] = v41;
  v16[9] = v40;
  v16[10] = v39;
  v16[11] = v38;
  sub_10620((uint64_t)&v51);
  sub_10B64(v17, v18, v19, v20, v21, v22, v23);
  sub_50F0C();
  v24 = v51;
  v25 = v52;
  v26 = v53;
  v27 = v58;
  v28 = *(_QWORD **)(v48 + 48);
  v29 = v56 | ((unint64_t)v57 << 32);
  v47 = (void *)v28[4];
  v30 = (void *)v28[6];
  v45 = (void *)v28[5];
  v31 = v28[7];
  v32 = v28[8];
  v33 = v28[9];
  v34 = v28[10];
  v28[6] = v53;
  v28[7] = 1;
  v35 = v55;
  v28[4] = v24;
  v28[5] = v25;
  *((_OWORD *)v28 + 4) = v35;
  v28[10] = v29;
  v28[11] = v27;
  sub_10620((uint64_t)&v51);
  v49 = v26;
  v36 = v24;
  v37 = v25;
  sub_10B64(v47, v45, v30, v31, v32, v33, v34);
  sub_50F0C();
  objc_msgSend(v50, "setNeedsLayout");
  sub_1065C((uint64_t)&v51);

}

void sub_14F3B0(uint64_t a1)
{
  sub_14F3F8(a1, (SEL *)&selRef_fontDescriptorWithTextStyle_leadingAdjustment_, 1, &qword_204580);
}

void sub_14F3C8(uint64_t a1)
{
  sub_14F3F8(a1, (SEL *)&selRef_fontDescriptorWithTextStyle_weight_, 2, &qword_204588);
}

void sub_14F3E0(uint64_t a1)
{
  sub_14F3F8(a1, (SEL *)&selRef_fontDescriptorWithTextStyle_leadingAdjustment_, 1, &qword_204590);
}

void sub_14F3F8(uint64_t a1, SEL *a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  id v6;

  v5 = objc_msgSend((id)objc_opt_self(MTMPUMutableFontDescriptor), *a2, 0, a3);
  objc_msgSend(v5, "setWantsMonospaceNumbers:", 1);
  v6 = objc_msgSend(v5, "typeSafeCopy");

  *a4 = v6;
}

void sub_14F604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTitle + 8));

  sub_145A0(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_addButtonHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_addButtonHandler + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkComponent));

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 8);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 16);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 24);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 32);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 40);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 48));
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  swift_release(v1);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI8SongCell_darkerSystemColorsNotificationObserver));

}

id sub_14F7F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SongCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_14FA14()
{
  return type metadata accessor for SongCell(0);
}

uint64_t type metadata accessor for SongCell(uint64_t a1)
{
  uint64_t result;

  result = qword_204650;
  if (!qword_204650)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SongCell);
  return result;
}

uint64_t sub_14FA58(uint64_t a1)
{
  _QWORD v2[37];

  v2[0] = &unk_175510;
  v2[1] = &unk_175510;
  v2[2] = &unk_175510;
  v2[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[4] = &unk_175528;
  v2[5] = &unk_175528;
  v2[6] = &unk_175528;
  v2[7] = &unk_175540;
  v2[8] = &unk_175558;
  v2[9] = &unk_175528;
  v2[10] = &unk_175528;
  v2[11] = &unk_175570;
  v2[12] = &unk_175540;
  v2[13] = &unk_175540;
  v2[14] = &unk_175528;
  v2[15] = &unk_175528;
  v2[16] = &unk_175528;
  v2[17] = &unk_175588;
  v2[18] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[19] = &unk_175558;
  v2[20] = &unk_175558;
  v2[21] = &unk_175558;
  v2[22] = &unk_175558;
  v2[23] = &unk_175558;
  v2[24] = &unk_175558;
  v2[25] = &unk_175558;
  v2[26] = &unk_175558;
  v2[27] = &unk_175558;
  v2[28] = &unk_175558;
  v2[29] = &unk_175558;
  v2[30] = &unk_175558;
  v2[31] = &unk_175558;
  v2[32] = &unk_1755A0;
  v2[33] = &unk_175558;
  v2[34] = &unk_175558;
  v2[35] = &unk_175558;
  v2[36] = &unk_175558;
  return swift_updateClassMetadata2(a1, 256, 37, v2, a1 + 856);
}

uint64_t destroy for SongCell.TextComponents(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  return swift_release(a1[6]);
}

uint64_t *initializeWithCopy for SongCell.TextComponents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  v9 = a2[6];
  a1[6] = v9;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithCopy for SongCell.TextComponents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[5];
  v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = a2[6];
  v17 = a1[6];
  a1[6] = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

_QWORD *assignWithTake for SongCell.TextComponents(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  swift_release(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = a1[6];
  a1[6] = *(_QWORD *)(a2 + 48);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SongCell.TextComponents(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SongCell.TextComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SongCell.TextComponents()
{
  return &type metadata for SongCell.TextComponents;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SongCell.LayoutStyle(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >> 2 < 0xFFF)
    goto LABEL_17;
  if (a2 + 49156 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 49156 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 49156;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 49156;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 49156;
  }
LABEL_17:
  v6 = ((*a1 >> 13) | (8 * ((*a1 >> 2) & 0x780 | (*a1 >> 1)))) ^ 0x3FFF;
  if (v6 >= 0x3FFB)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for SongCell.LayoutStyle(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49156 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49156 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >> 2 >= 0xFFF)
    v5 = v4;
  else
    v5 = 0;
  if (a2 >> 2 <= 0xFFE)
    return ((uint64_t (*)(void))((char *)&loc_14FF08 + 4 * byte_1754E5[v5]))();
  *a1 = a2 - 16380;
  return ((uint64_t (*)(void))((char *)sub_14FF40 + 4 * byte_1754E0[v5]))();
}

uint64_t sub_14FF40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_14FF48(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x14FF50);
  return result;
}

uint64_t sub_14FF70(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x14FF78);
  v2 = ((-a2 >> 3) & 0x7FF) - (a2 << 11);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_14FF7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_14FF84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_14FF90(unsigned __int16 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 13;
  v3 = (v1 & 1 | (4 * (v1 >> 13)) | (v1 >> 7) & 2) - 9;
  if (v2 <= 2)
    return v2;
  else
    return v3;
}

_WORD *sub_14FFBC(_WORD *result)
{
  *result &= 0x1FFFu;
  return result;
}

_WORD *sub_14FFCC(_WORD *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 0x101 | ((_WORD)a2 << 13);
  else
    *result = ((((_WORD)a2 - 3) << 7) & 0x100 | (a2 - 3) & 1 | ((unsigned __int16)((a2 - 3) >> 2) << 13)) + 24576;
  return result;
}

ValueMetadata *type metadata accessor for SongCell.LayoutStyle()
{
  return &type metadata for SongCell.LayoutStyle;
}

uint64_t sub_150018(unsigned __int16 a1)
{
  return ((uint64_t (*)(void))((char *)sub_15003C + 4 * byte_1754EA[a1 >> 13]))();
}

uint64_t sub_15003C@<X0>(unsigned int a1@<W8>)
{
  char v1;

  if (a1 < 0x2000)
    return (((v1 & 1) == 0) ^ a1) & 1;
  else
    return 0;
}

void sub_150134(uint64_t a1, __int16 a2)
{
  __asm { BR              X11 }
}

void sub_150178()
{
  uint64_t v0;
  __int128 v1;
  CGFloat bottom;
  CGFloat right;

  v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0;
  *(_OWORD *)(v0 + 16) = v1;
  *(CGFloat *)(v0 + 32) = bottom;
  *(CGFloat *)(v0 + 40) = right;
}

double sub_150330@<D0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double result;

  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    v2 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  else
  {
    if (UIAccessibilityDarkerSystemColorsEnabled())
    {
      if (qword_1F95C8 != -1)
        swift_once(&qword_1F95C8, sub_FE0E0);
      v3 = &qword_210350;
    }
    else
    {
      if (qword_1F95C0 != -1)
        swift_once(&qword_1F95C0, sub_FE034);
      v3 = &qword_210348;
    }
    v2 = (id)*v3;
  }
  v4 = v2;
  v5 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:leadingAdjustment:", 3, 1);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v4;
  v8 = objc_msgSend(v6, "clearColor");
  v9 = objc_msgSend(v5, "typeSafeCopy");

  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 4;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  result = 0.0000305175781;
  *(_QWORD *)(a1 + 52) = 0x3F00000000000000;
  *(_DWORD *)(a1 + 60) = 1065353216;
  return result;
}

uint64_t sub_1504AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1504D0(uint64_t a1)
{
  uint64_t v1;

  sub_14E3BC(a1, v1);
}

void sub_1504D8(uint64_t *a1@<X8>)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  void *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  uint64_t v89;
  _QWORD v90[3];
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  unsigned int v95;
  uint64_t v96;

  v1 = (void *)objc_opt_self(MTMPUFontDescriptor);
  v2 = objc_msgSend(v1, "fontDescriptorWithTextStyle:leadingAdjustment:weight:", 0, 1, 2);
  if (qword_1F95B0 != -1)
    swift_once(&qword_1F95B0, sub_FDF98);
  v3 = (void *)qword_210338;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "clearColor");
  v7 = objc_msgSend(v2, "typeSafeCopy");

  v89 = _s9StackViewC9ComponentCMa();
  v8 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v8 + 136) = 0xE000000000000000;
  *(_QWORD *)(v8 + 240) = 0;
  *(_QWORD *)(v8 + 248) = 0xE000000000000000;
  *(_QWORD *)(v8 + 264) = 0;
  *(_QWORD *)(v8 + 272) = 0;
  *(_QWORD *)(v8 + 256) = 0;
  *(_QWORD *)(v8 + 16) = 0x6D754E6B63617274;
  *(_QWORD *)(v8 + 24) = 0xEB00000000726562;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v3;
  *(_QWORD *)(v8 + 48) = v6;
  *(_OWORD *)(v8 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 80) = 0;
  *(_OWORD *)(v8 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v8 + 104) = 0;
  *(_OWORD *)(v8 + 112) = xmmword_1754B0;
  *(_QWORD *)(v8 + 144) = v7;
  *(_QWORD *)(v8 + 152) = v3;
  *(_QWORD *)(v8 + 160) = v6;
  *(_OWORD *)(v8 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v8 + 184) = 0;
  *(_QWORD *)(v8 + 192) = 0;
  *(_OWORD *)(v8 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v8 + 216) = 0;
  v77 = v8;
  *(_OWORD *)(v8 + 224) = xmmword_1754B0;
  v9 = v7;
  v10 = v5;
  v11 = v6;
  v12 = v9;
  v13 = v10;
  v14 = v11;
  v86 = v12;
  v85 = v13;
  v84 = v14;
  v15 = objc_msgSend(v1, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  v16 = qword_210338;
  v17 = (id)qword_210338;
  v79 = v4;
  v18 = objc_msgSend(v4, "clearColor");
  v19 = objc_msgSend(v15, "typeSafeCopy");

  v20 = (void *)objc_opt_self(UIApplication);
  v21 = v19;
  v22 = v17;
  v23 = v18;
  v24 = v21;
  v25 = v22;
  v26 = v23;
  v27 = objc_msgSend(v20, "sharedApplication");
  v28 = objc_msgSend(v27, "preferredContentSizeCategory");

  LODWORD(v27) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v28);
  if ((_DWORD)v27)
    v29 = 3;
  else
    v29 = 1;
  v30 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v30 + 128) = 0;
  *(_QWORD *)(v30 + 136) = 0xE000000000000000;
  *(_QWORD *)(v30 + 240) = 0;
  *(_QWORD *)(v30 + 248) = 0xE000000000000000;
  *(_QWORD *)(v30 + 264) = 0;
  *(_QWORD *)(v30 + 272) = 0;
  *(_QWORD *)(v30 + 256) = 0;
  *(_QWORD *)(v30 + 16) = 0x656C746974;
  *(_QWORD *)(v30 + 24) = 0xE500000000000000;
  *(_QWORD *)(v30 + 32) = v19;
  *(_QWORD *)(v30 + 40) = v16;
  *(_QWORD *)(v30 + 48) = v18;
  *(_OWORD *)(v30 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v30 + 72) = 0;
  *(_QWORD *)(v30 + 80) = 0;
  *(_QWORD *)(v30 + 88) = 0x3F8000003F000000;
  *(_QWORD *)(v30 + 96) = v29;
  *(_QWORD *)(v30 + 104) = 0;
  *(_OWORD *)(v30 + 112) = xmmword_1754B0;
  *(_QWORD *)(v30 + 144) = v19;
  *(_QWORD *)(v30 + 152) = v16;
  *(_QWORD *)(v30 + 160) = v18;
  *(_OWORD *)(v30 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v30 + 184) = 0;
  *(_QWORD *)(v30 + 192) = 0;
  *(_QWORD *)(v30 + 200) = 0x3F8000003F000000;
  *(_QWORD *)(v30 + 208) = v29;
  *(_QWORD *)(v30 + 216) = 0;
  v76 = v30;
  *(_OWORD *)(v30 + 224) = xmmword_1754B0;
  v83 = v24;
  v82 = v25;
  v81 = v26;
  v31 = objc_msgSend(v1, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    if (qword_1F95C8 != -1)
      swift_once(&qword_1F95C8, sub_FE0E0);
    v32 = &qword_210350;
  }
  else
  {
    if (qword_1F95C0 != -1)
      swift_once(&qword_1F95C0, sub_FE034);
    v32 = &qword_210348;
  }
  v33 = v79;
  v34 = *v32;
  v35 = (id)*v32;
  v36 = objc_msgSend(v79, "clearColor");
  v37 = objc_msgSend(v31, "typeSafeCopy");

  v38 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v38 + 128) = 0;
  *(_QWORD *)(v38 + 136) = 0xE000000000000000;
  *(_QWORD *)(v38 + 240) = 0;
  *(_QWORD *)(v38 + 248) = 0xE000000000000000;
  *(_QWORD *)(v38 + 264) = 0;
  *(_QWORD *)(v38 + 272) = 0;
  *(_QWORD *)(v38 + 256) = 0;
  *(_QWORD *)(v38 + 16) = 0x746963696C707865;
  *(_QWORD *)(v38 + 24) = 0xE800000000000000;
  *(_QWORD *)(v38 + 32) = v37;
  *(_QWORD *)(v38 + 40) = v34;
  *(_QWORD *)(v38 + 48) = v36;
  *(_OWORD *)(v38 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v38 + 72) = 0;
  *(_QWORD *)(v38 + 80) = 0;
  *(_OWORD *)(v38 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v38 + 104) = 0;
  *(_OWORD *)(v38 + 112) = xmmword_1754B0;
  *(_QWORD *)(v38 + 144) = v37;
  *(_QWORD *)(v38 + 152) = v34;
  *(_QWORD *)(v38 + 160) = v36;
  *(_OWORD *)(v38 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v38 + 184) = 0;
  *(_QWORD *)(v38 + 192) = 0;
  *(_OWORD *)(v38 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v38 + 216) = 0;
  *(_OWORD *)(v38 + 224) = xmmword_1754B0;
  v39 = v37;
  v40 = v35;
  v41 = v36;
  v42 = v39;
  v43 = v40;
  v44 = v41;
  v75 = v42;
  v74 = v43;
  v80 = v44;
  v45 = objc_msgSend(v1, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    if (qword_1F95C8 != -1)
      swift_once(&qword_1F95C8, sub_FE0E0);
    v46 = &qword_210350;
  }
  else
  {
    if (qword_1F95C0 != -1)
      swift_once(&qword_1F95C0, sub_FE034);
    v46 = &qword_210348;
  }
  v47 = *v46;
  v48 = (id)*v46;
  v49 = objc_msgSend(v33, "clearColor");
  v50 = objc_msgSend(v45, "typeSafeCopy");

  v51 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v51 + 128) = 0;
  *(_QWORD *)(v51 + 136) = 0xE000000000000000;
  *(_QWORD *)(v51 + 240) = 0;
  *(_QWORD *)(v51 + 248) = 0xE000000000000000;
  *(_QWORD *)(v51 + 264) = 0;
  *(_QWORD *)(v51 + 272) = 0;
  *(_QWORD *)(v51 + 256) = 0;
  *(_QWORD *)(v51 + 16) = 0x6972616C75706F70;
  *(_QWORD *)(v51 + 24) = 0xEA00000000007974;
  *(_QWORD *)(v51 + 32) = v50;
  *(_QWORD *)(v51 + 40) = v47;
  *(_QWORD *)(v51 + 48) = v49;
  *(_OWORD *)(v51 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v51 + 72) = 0;
  *(_QWORD *)(v51 + 80) = 0;
  *(_OWORD *)(v51 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v51 + 104) = 0;
  *(_OWORD *)(v51 + 112) = xmmword_1754B0;
  *(_QWORD *)(v51 + 144) = v50;
  *(_QWORD *)(v51 + 152) = v47;
  *(_QWORD *)(v51 + 160) = v49;
  *(_OWORD *)(v51 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v51 + 184) = 0;
  *(_QWORD *)(v51 + 192) = 0;
  *(_OWORD *)(v51 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v51 + 216) = 0;
  *(_OWORD *)(v51 + 224) = xmmword_1754B0;
  v52 = v50;
  v53 = v48;
  v54 = v49;
  v55 = v52;
  v56 = v53;
  v57 = v54;
  v73 = v55;
  v72 = v56;
  v71 = v57;
  sub_150330((uint64_t)v90);
  v87 = (void *)v90[0];
  v58 = (void *)v90[2];
  v88 = (void *)v90[1];
  v59 = v91;
  v60 = v92;
  v61 = v93;
  v62 = v94 | ((unint64_t)v95 << 32);
  v63 = v96;
  v64 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v64 + 128) = 0;
  *(_QWORD *)(v64 + 136) = 0xE000000000000000;
  *(_QWORD *)(v64 + 240) = 0;
  *(_QWORD *)(v64 + 248) = 0xE000000000000000;
  *(_QWORD *)(v64 + 264) = 0;
  *(_QWORD *)(v64 + 272) = 0;
  *(_QWORD *)(v64 + 256) = 0;
  *(_QWORD *)(v64 + 16) = 0x614E747369747261;
  *(_QWORD *)(v64 + 24) = 0xEA0000000000656DLL;
  *(_QWORD *)(v64 + 32) = v87;
  *(_QWORD *)(v64 + 40) = v88;
  *(_QWORD *)(v64 + 48) = v58;
  *(_QWORD *)(v64 + 56) = v59;
  *(_QWORD *)(v64 + 64) = v60;
  *(_QWORD *)(v64 + 72) = v61;
  *(_QWORD *)(v64 + 80) = v62;
  *(_QWORD *)(v64 + 88) = v63;
  *(_OWORD *)(v64 + 96) = xmmword_16B100;
  *(_OWORD *)(v64 + 112) = xmmword_1754C0;
  *(_QWORD *)(v64 + 144) = v87;
  *(_QWORD *)(v64 + 152) = v88;
  *(_QWORD *)(v64 + 160) = v58;
  *(_QWORD *)(v64 + 168) = v59;
  *(_QWORD *)(v64 + 176) = v60;
  *(_QWORD *)(v64 + 184) = v61;
  *(_QWORD *)(v64 + 192) = v62;
  *(_QWORD *)(v64 + 200) = v63;
  *(_OWORD *)(v64 + 208) = xmmword_16B100;
  *(_OWORD *)(v64 + 224) = xmmword_1754C0;
  v65 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v65 + 128) = 0;
  *(_QWORD *)(v65 + 136) = 0xE000000000000000;
  *(_QWORD *)(v65 + 240) = 0;
  *(_QWORD *)(v65 + 248) = 0xE000000000000000;
  *(_QWORD *)(v65 + 264) = 0;
  *(_QWORD *)(v65 + 272) = 0;
  *(_QWORD *)(v65 + 256) = 0;
  *(_QWORD *)(v65 + 16) = 0x7469546D75626C61;
  *(_QWORD *)(v65 + 24) = 0xEA0000000000656CLL;
  *(_QWORD *)(v65 + 32) = v87;
  *(_QWORD *)(v65 + 40) = v88;
  *(_QWORD *)(v65 + 48) = v58;
  *(_QWORD *)(v65 + 56) = v59;
  *(_QWORD *)(v65 + 64) = v60;
  *(_QWORD *)(v65 + 72) = v61;
  *(_QWORD *)(v65 + 80) = v62;
  *(_QWORD *)(v65 + 88) = v63;
  *(_OWORD *)(v65 + 96) = xmmword_16B100;
  *(_OWORD *)(v65 + 112) = xmmword_1754C0;
  *(_QWORD *)(v65 + 144) = v87;
  *(_QWORD *)(v65 + 152) = v88;
  *(_QWORD *)(v65 + 160) = v58;
  *(_QWORD *)(v65 + 168) = v59;
  *(_QWORD *)(v65 + 176) = v60;
  *(_QWORD *)(v65 + 184) = v61;
  *(_QWORD *)(v65 + 192) = v62;
  *(_QWORD *)(v65 + 200) = v63;
  *(_OWORD *)(v65 + 208) = xmmword_16B100;
  *(_OWORD *)(v65 + 224) = xmmword_1754C0;
  v66 = swift_allocObject(v89, 280, 7);
  *(_QWORD *)(v66 + 128) = 0;
  *(_QWORD *)(v66 + 136) = 0xE000000000000000;
  *(_QWORD *)(v66 + 240) = 0;
  *(_QWORD *)(v66 + 248) = 0xE000000000000000;
  *(_QWORD *)(v66 + 264) = 0;
  *(_QWORD *)(v66 + 272) = 0;
  *(_QWORD *)(v66 + 256) = 0;
  strcpy((char *)(v66 + 16), "durationText");
  *(_BYTE *)(v66 + 29) = 0;
  *(_WORD *)(v66 + 30) = -5120;
  *(_QWORD *)(v66 + 32) = v87;
  *(_QWORD *)(v66 + 40) = v88;
  *(_QWORD *)(v66 + 48) = v58;
  *(_QWORD *)(v66 + 56) = 1;
  *(_QWORD *)(v66 + 64) = v60;
  *(_QWORD *)(v66 + 72) = v61;
  *(_QWORD *)(v66 + 80) = v62;
  *(_QWORD *)(v66 + 88) = v63;
  *(_OWORD *)(v66 + 96) = xmmword_16B100;
  *(_OWORD *)(v66 + 112) = xmmword_1754C0;
  *(_QWORD *)(v66 + 144) = v87;
  *(_QWORD *)(v66 + 152) = v88;
  *(_QWORD *)(v66 + 160) = v58;
  *(_QWORD *)(v66 + 168) = 1;
  *(_QWORD *)(v66 + 176) = v60;
  *(_QWORD *)(v66 + 184) = v61;
  *(_QWORD *)(v66 + 192) = v62;
  *(_QWORD *)(v66 + 200) = v63;
  *(_OWORD *)(v66 + 208) = xmmword_16B100;
  *(_OWORD *)(v66 + 224) = xmmword_1754C0;
  sub_10620((uint64_t)v90);
  sub_10620((uint64_t)v90);
  sub_10620((uint64_t)v90);
  sub_10620((uint64_t)v90);
  v67 = v58;
  v68 = v87;
  v69 = v88;
  sub_10620((uint64_t)v90);
  v70 = v68;

  sub_1065C((uint64_t)v90);
  *a1 = v77;
  a1[1] = v76;
  a1[2] = v38;
  a1[3] = v51;
  a1[4] = v64;
  a1[5] = v65;
  a1[6] = v66;
}

void sub_150EA0(uint64_t a1, __int16 a2)
{
  sub_150134(a1, a2);
  __asm { BR              X10 }
}

double sub_150EFC()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1F9688 != -1)
    swift_once(&qword_1F9688, sub_14D64C);
  v6 = *(double *)&qword_210438;
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  v9 = _UIContentSizeCategoryCompareToContentSizeCategory(v8, UIContentSizeCategoryAccessibilityLarge);
  if (v9 != 1
    && ((static CGSize.==~ infix(_:_:)(v10, v5, v0, 0.0, 0.0) & 1) == 0
     || (static CGFloat.==~ infix(_:_:)(v1) & 1) == 0
     || (static CGFloat.==~ infix(_:_:)(v4) & 1) == 0
     || (static CGFloat.==~ infix(_:_:)(v2) & 1) == 0
     || (static CGFloat.==~ infix(_:_:)(v3) & 1) == 0)
    && v6 <= v0 + v1 + v2)
  {
    return v0 + v1 + v2;
  }
  return v6;
}

double sub_151070(uint64_t a1, __int16 a2, double a3)
{
  uint64_t v6;
  uint64_t inited;
  id v8;
  id v9;
  uint64_t v11;
  _BYTE v12[48];
  uint64_t v13[7];

  sub_1504D8(v13);
  sub_150EA0(a1, a2);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  inited = swift_initStackObject(v6, v12);
  *(_OWORD *)(inited + 16) = xmmword_16B2E0;
  *(_QWORD *)(inited + 32) = v13[1];
  *(_QWORD *)(inited + 40) = v13[4];
  v11 = inited;
  specialized Array._endMutation()(inited);
  swift_retain();
  swift_retain();
  sub_52008(v11, a1, 0xD000000000000019, 0x800000000018E1F0);
  swift_bridgeObjectRelease(v11);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  LODWORD(v8) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v9);
  if ((_DWORD)v8)
    __asm { BR              X10 }
  sub_151B5C(v13);
  return a3;
}

void sub_151298()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;

  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_title];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistName];
  *v2 = 0;
  v2[1] = 0xE000000000000000;
  v3 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTitle];
  *v3 = 0;
  v3[1] = 0xE000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_duration] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_forceDurationHidden] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isProminentItem] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isExplicit] = 0;
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularity];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_badgeArtworkCatalog] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_supportsLibraryAddKeepLocalButton] = 1;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_requiresLibraryAddKeepLocalButtonSpacing] = 0;
  *(_WORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle] = 24576;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumber];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v6 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_maximumTrackNumberForSizing];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_wantsNowPlayingIndicator] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_wantsAddButton] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isAddButtonSelected] = 0;
  v7 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_addButtonHandler];
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_playbackState] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___badgeArtworkComponent] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_titleTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_durationTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_nowPlayingIndicatorView] = 0;
  v8 = &v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents];
  sub_1504D8((uint64_t *)v10);
  v9 = v10[1];
  *(_OWORD *)v8 = v10[0];
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = v10[2];
  *((_QWORD *)v8 + 6) = v11;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_darkerSystemColorsNotificationObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell____lazy_storage___addButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_chevronImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI8SongCell_musicVideoGlyphImageView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/SongCell.swift", 27, 2, 38, 0);
  __break(1u);
}

double sub_15150C(uint64_t a1, uint64_t a2, double *a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::String v13;
  void *object;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _OWORD *v26;
  id v27;
  _QWORD v29[16];

  v29[0] = a1;
  v9 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v11 = v10;
  v12 = String.count.getter(v9, v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 57;
  v13._object = (void *)0xE100000000000000;
  object = String.init(repeating:count:)(v13, v12)._object;
  v15 = String._bridgeToObjectiveC()();
  LODWORD(object) = objc_msgSend(v15, "intValue", swift_bridgeObjectRelease(object).n128_f64[0], v29[0]);

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
  v17 = swift_allocObject(v16, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v17 + 56) = &type metadata for Int32;
  *(_QWORD *)(v17 + 64) = &protocol witness table for Int32;
  *(_DWORD *)(v17 + 32) = (_DWORD)object;
  v18 = static String.localizedStringWithFormat(_:_:)(25637, 0xE200000000000000, v17);
  v20 = v19;
  swift_bridgeObjectRelease(v17);
  v21 = a3[4];
  v22 = (void *)*((_QWORD *)a3 + 5);
  v23 = (void *)*((_QWORD *)a3 + 6);
  v24 = *((_QWORD *)a3 + 7);
  v25 = (void *)*((_QWORD *)a3 + 8);
  v26 = (_OWORD *)*((_QWORD *)a3 + 9);
  v27 = v22;
  sub_10BBC(v18, v20, *(double *)&a2, v27, v23, v24, v25, v26, v29, a4, a5, v21);
  swift_bridgeObjectRelease(v20);

  sub_11D6C((uint64_t)v29);
  return *(double *)&v29[6];
}

id sub_151694(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id result;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = v1;
  result = objc_msgSend(a1, "horizontalSizeClass");
  if (result)
  {
    v11 = *(_OWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents];
    v12 = *(_OWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 16];
    v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 32];
    v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 48];
    sub_14E444(a1, 1, v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_isProminentItem], *(_WORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle]);
    v5 = objc_msgSend(v1, "contentView", v11, v12, v13, v14);
    objc_msgSend(v5, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView]);

    v6 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI8SongCell_trackNumberTextDrawingView];
    if (v6)
      objc_msgSend(v6, "removeFromSuperview");
    v7 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI8SongCell_titleTextDrawingView];
    if (v7)
      objc_msgSend(v7, "removeFromSuperview");
    v8 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI8SongCell_artistTextDrawingView];
    if (v8)
      objc_msgSend(v8, "removeFromSuperview");
    v9 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI8SongCell_albumTextDrawingView];
    if (v9)
      objc_msgSend(v9, "removeFromSuperview");
    v10 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI8SongCell_explicitBadgeTextDrawingView];
    if (v10)
      objc_msgSend(v10, "removeFromSuperview");
    result = *(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI8SongCell_popularityBadgeTextDrawingView];
    if (result)
      return objc_msgSend(result, "removeFromSuperview");
  }
  return result;
}

void sub_151800()
{
  char *v0;
  char *v1;
  void (*v2)(char *);
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString *v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  NSString *v17;
  double v18;

  v1 = v0;
  objc_msgSend(v0, "setNeedsLayout");
  v2 = *(void (**)(char *))&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler + 8];
    swift_retain();
    v2(v1);
    sub_145A0((uint64_t)v2, v3);
  }
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_textComponents + 8];
  v5 = (void *)objc_opt_self(UIApplication);
  v6 = objc_msgSend(v5, "sharedApplication");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  LODWORD(v6) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v7);
  v8 = 3;
  if (!(_DWORD)v6)
    v8 = 1;
  *(_QWORD *)(v4 + 96) = v8;
  sub_50F0C();
  if (qword_1F9688 != -1)
    swift_once(&qword_1F9688, sub_14D64C);
  v9 = objc_msgSend(v5, "sharedApplication");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  v11 = _UIContentSizeCategoryCompareToContentSizeCategory(v10, UIContentSizeCategoryAccessibilityLarge);
  if (v11 == 1)
  {
    v12 = UIFontTextStyleBody;
    v13 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v12, 48.0);

  }
  else
  {
    v13 = 48.0;
  }
  v14 = objc_msgSend(v5, "sharedApplication");
  v15 = objc_msgSend(v14, "preferredContentSizeCategory");

  v16 = _UIContentSizeCategoryCompareToContentSizeCategory(v15, UIContentSizeCategoryAccessibilityLarge);
  if (v16 == 1)
  {
    v17 = UIFontTextStyleBody;
    v18 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v17, 48.0);

  }
  else
  {
    v18 = 48.0;
  }
  qword_210430 = *(_QWORD *)&v13;
  qword_210438 = *(_QWORD *)&v18;
  sub_14DD90();
}

unint64_t sub_151A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD930;
  if (!qword_1FD930)
  {
    v1 = type metadata accessor for CGRect.LayoutAxis(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CGRect.LayoutAxis, v1);
    atomic_store(result, (unint64_t *)&qword_1FD930);
  }
  return result;
}

unint64_t sub_151AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD940;
  if (!qword_1FD940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_201980);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1FD940);
  }
  return result;
}

void sub_151AF0(void *a1)
{
  uint64_t v1;

  sub_1493C0(a1, v1, 0.28);
}

void sub_151B10(void *a1)
{
  uint64_t v1;

  sub_1493C0(a1, v1, 0.16);
}

void sub_151B30(uint64_t a1)
{
  uint64_t v1;

  sub_14897C(a1, v1);
}

uint64_t sub_151B38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_151B5C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  swift_release(a1[6]);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_151BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_preferredJumpInterval;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_153754(v3, a1);
}

__n128 sub_151C44@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 16) = v3;
  result = *(__n128 *)(v1 + 112);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v2;
  return result;
}

uint64_t sub_151C60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[8];
  if (v1)
  {
    v2 = v0[8];
  }
  else
  {
    v3 = v0;
    v4 = v0[3];
    v5 = v0[7];
    v6 = type metadata accessor for NowPlayingSpeedPicker.Controller();
    v2 = swift_allocObject(v6, 80, 7);
    v7 = type metadata accessor for NowPlayingSpeedPicker.ViewModel(0);
    swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    swift_retain(v4);
    swift_retain(v5);
    v8 = sub_F3E6C();
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_QWORD *)(v2 + 16) = v8;
    *(_QWORD *)(v2 + 24) = v4;
    *(_QWORD *)(v2 + 64) = 0;
    *(_QWORD *)(v2 + 72) = v5;
    v9 = v0[8];
    v3[8] = v2;
    swift_retain(v2);
    swift_release(v9);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

_QWORD *sub_151D18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  char v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  float v27;
  float v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016D0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[9];
  if (v6)
  {
    v7 = (_QWORD *)v0[9];
  }
  else
  {
    v9 = v0[5];
    v8 = v0[6];
    v10 = v1[4];
    v37 = v1[3];
    v11 = v37;
    v38 = v8;
    swift_unknownObjectRetain(v10);
    swift_retain(v8);
    swift_retain(v11);
    v12 = sub_151C60();
    v13 = *(_QWORD *)(v12 + 16);
    swift_retain(v13);
    swift_release(v12);
    swift_beginAccess(v13 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__playbackSpeed, v39, 33, 0);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_201750);
    Published.projectedValue.getter(v14);
    swift_endAccess(v39);
    swift_release(v13);
    v15 = sub_27A8C(&qword_2047B0, &qword_2016D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v36 = Publisher.eraseToAnyPublisher()(v2, v15);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v16 = type metadata accessor for SleepTimerController();
    v7 = (_QWORD *)swift_allocObject(v16, 88, 7);
    v7[8] = &_swiftEmptySetSingleton;
    v7[10] = 0;
    v7[2] = v10;
    v7[3] = v9;
    ObjectType = swift_getObjectType(v10);
    v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 312);
    v19 = swift_unknownObjectRetain(v10);
    v20 = v18(ObjectType, v9, v19);
    LOBYTE(v13) = v21 & 1;
    v22 = sub_143DB0(ObjectType, v9);
    LOBYTE(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96))(ObjectType, v9);
    v23 = type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    v7[4] = sub_41BDC(v20, v13, (uint64_t)v22, v12 & 1);
    v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 56);
    v25 = swift_unknownObjectRetain(v10);
    v26 = v24(ObjectType, v9, v25);
    objc_msgSend((id)v26, "rate");
    v28 = v27;

    v29 = ((uint64_t (*)(uint64_t, uint64_t))v18)(ObjectType, v9);
    LOBYTE(v13) = v30 & 1;
    LOBYTE(v26) = sub_144058(ObjectType, v9);
    v31 = type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(0);
    swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
    v32 = sub_D7358(v10, v9, v29, v13, v26 & 1, v28, 0.0);
    swift_unknownObjectRelease(v10);
    v33 = v38;
    v7[5] = v32;
    v7[6] = v33;
    v7[9] = v37;
    v7[7] = v36;
    swift_unknownObjectRelease(v10);
    v34 = v1[9];
    v1[9] = v7;
    swift_retain(v7);
    swift_release(v34);
    v6 = 0;
  }
  swift_retain(v6);
  return v7;
}

void sub_15201C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  float v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD v31[5];
  float v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2009B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_982C(a1, (uint64_t)v31, (uint64_t *)&unk_1FBD00);
  v14 = v33;
  if (v33 == 2)
  {
    v15 = dispatch thunk of NowPlayingViewModel.playbackPosition.getter(v13);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.setter(v4);
    swift_release(v15);
  }
  else
  {
    v16 = v32;
    v17 = *(double *)&v31[3];
    v18 = *(double *)&v31[4];
    v19 = *(double *)v31;
    v20 = Date.init()(v13);
    v21 = Date.timeIntervalSinceReferenceDate.getter(v20);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v23 = v16;
    v24 = v18 + (v21 - v19) * v23;
    if (v24 >= v17)
      v24 = v17;
    v25 = fmax(v24, 0.0);
    if ((v14 & 0x100) != 0)
      v26 = 1;
    else
      v26 = dispatch thunk of TranscriptSyncingStateObserver.isSyncing.getter(v22);
    v27 = NowPlayingViewModel.DurationSnapshot.init(elapsedDuration:duration:bufferedDuration:snapshotTime:rate:isLoading:)(0, 1, v26 & 1, v25, v17, v21, v23);
    v28 = dispatch thunk of NowPlayingViewModel.playbackPosition.getter(v27);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.setter(v4);
    v29 = swift_release(v28);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v29);
  }
}

uint64_t sub_152260(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2047C8);
  v3 = __chkstk_darwin(v2);
  v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v42 = (char *)&v40 - v5;
  v44 = type metadata accessor for NowPlayingViewModel.TrailingTransportButtonConfiguration(0);
  v6 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackController.PreferredJumpInterval(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEA8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v40 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2047D0);
  v19 = __chkstk_darwin(v18);
  v41 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v40 - v21;
  v23 = type metadata accessor for NowPlayingViewModel.LeadingTransportButtonConfiguration(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v46 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  sub_153754(a1, (uint64_t)v17);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v26(v17, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
  }
  else
  {
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v17, v8);
    v28 = PlaybackController.PreferredJumpInterval.backward.getter(v27);
    static NowPlayingViewModel.LeadingTransportButtonConfiguration.configuration(for:)(v28);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23);
  v30 = v43;
  if (v29 == 1)
  {
    static NowPlayingViewModel.LeadingTransportButtonConfiguration.seekBackward15.getter();
    sub_9944((uint64_t)v22, &qword_2047D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v46, v22, v23);
  }
  sub_153754(v40, (uint64_t)v15);
  v31 = v26(v15, 1, v8);
  v32 = (uint64_t)v42;
  if (v31 == 1)
  {
    v33 = v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v42, 1, 1, v44);
  }
  else
  {
    v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    v35 = PlaybackController.PreferredJumpInterval.forward.getter(v34);
    static NowPlayingViewModel.TrailingTransportButtonConfiguration.configuration(for:)(v35);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v33 = v44;
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v32, 1, v33) == 1)
  {
    static NowPlayingViewModel.TrailingTransportButtonConfiguration.seekForward30.getter();
    sub_9944(v32, &qword_2047C8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v30, v32, v33);
  }
  v36 = v41;
  v37 = v46;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v41, v46, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v36, 0, 1, v23);
  dispatch thunk of NowPlayingViewModel.leadingTransportButton.setter(v36);
  v38 = v45;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v45, v30, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v38, 0, 1, v33);
  dispatch thunk of NowPlayingViewModel.trailingTransportButton.setter(v38);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v37, v23);
}

double sub_15268C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  id v28[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016B0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2047B8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v28[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of TranscriptSyncingStateObserver.$isSyncing.getter(v11);
  v14 = sub_7748();
  v28[0] = (id)static OS_dispatch_queue.main.getter(v15);
  v16 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  v17 = sub_27A8C(&qword_202750, &qword_2016B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v18 = sub_8330((unint64_t *)&qword_1FB320, (uint64_t (*)(uint64_t))sub_7748, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(v28, v4, v5, v14, v17, v18);
  sub_9944((uint64_t)v4, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = swift_allocObject(&unk_1D3D00, 24, 7);
  swift_weakInit(v19 + 16, v1);
  v20 = sub_27A8C(&qword_2047C0, &qword_2047B8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v21 = Publisher<>.sink(receiveValue:)(sub_15374C, v19, v9, v20);
  v22 = swift_release(v19);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v13, v9, v22);
  v23 = v1 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_subscriptions;
  swift_beginAccess(v23, v28, 33, 0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v25 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v23, v24, v25);
  swift_endAccess(v28);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

double sub_152938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[56];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, &v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_982C(Strong + 80, (uint64_t)v7, (uint64_t *)&unk_1FBD00);
    sub_15201C((uint64_t)v7);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1529A4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_preferredJumpInterval, &qword_1FBEA8);
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_transcriptSyncingStateObserver));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_subscriptions));
  return v0;
}

uint64_t sub_152A28()
{
  uint64_t v0;

  sub_1529A4();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_152A4C()
{
  return type metadata accessor for NowPlayingTransportController(0);
}

uint64_t type metadata accessor for NowPlayingTransportController(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_2046B0, (uint64_t)&nominal type descriptor for NowPlayingTransportController);
}

void sub_152A68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_1756A0;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = &unk_1756B8;
  v4[6] = &unk_1756B8;
  v4[7] = &unk_1756D0;
  sub_153C7C(319, (unint64_t *)&unk_2046C0, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackController.PreferredJumpInterval, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

uint64_t destroy for TimeControlAccessoryViewWrapper(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[2]);
  return swift_release(a1[3]);
}

_QWORD *initializeWithCopy for TimeControlAccessoryViewWrapper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for TimeControlAccessoryViewWrapper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for TimeControlAccessoryViewWrapper(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for TimeControlAccessoryViewWrapper()
{
  return &type metadata for TimeControlAccessoryViewWrapper;
}

uint64_t sub_152C88(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A4CE4, 1);
}

uint64_t sub_152C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_204790);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for SyncingLabelView(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  v15 = swift_retain();
  v16 = dispatch thunk of TranscriptSyncingStateObserver.isSyncing.getter(v15);
  swift_release(a2);
  if ((v16 & 1) != 0)
  {
    *v11 = swift_getKeyPath(&unk_175760);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    swift_storeEnumTagMultiPayload(v11, v17, 0);
    sub_152F88((uint64_t)v11, (uint64_t)v14);
    sub_152FCC((uint64_t)v14, (uint64_t)v8);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v18 = sub_8330(&qword_2047A0, type metadata accessor for SyncingLabelView, (uint64_t)&unk_1757A4);
    v19 = sub_152F40();
    _ConditionalContent<>.init(storage:)(v8, v9, &type metadata for NowPlayingSleepTimerRemaining, v18, v19);
    return sub_153010((uint64_t)v14);
  }
  else
  {
    v21 = *(_QWORD *)(a4 + 40);
    v22 = swift_retain();
    v23 = dispatch thunk of NowPlayingViewModel.playbackPosition.getter(v22);
    v24 = type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(0);
    v25 = sub_8330(&qword_204798, type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel, (uint64_t)&unk_171EC0);
    v26 = ObservedObject.init(wrappedValue:)(v21, v24, v25);
    v28 = v27;
    v29 = type metadata accessor for NowPlayingViewModel.PlaybackPosition(0);
    v30 = sub_8330(&qword_1FAA98, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    v31 = ObservedObject.init(wrappedValue:)(v23, v29, v30);
    *v8 = v26;
    v8[1] = v28;
    v8[2] = v31;
    v8[3] = v32;
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v33 = sub_8330(&qword_2047A0, type metadata accessor for SyncingLabelView, (uint64_t)&unk_1757A4);
    v34 = sub_152F40();
    return _ConditionalContent<>.init(storage:)(v8, v9, &type metadata for NowPlayingSleepTimerRemaining, v33, v34);
  }
}

uint64_t sub_152F20()
{
  uint64_t *v0;

  return sub_152C98(*v0, v0[1], v0[2], v0[3]);
}

uint64_t type metadata accessor for SyncingLabelView(uint64_t a1)
{
  return sub_256F8(a1, qword_204830, (uint64_t)&nominal type descriptor for SyncingLabelView);
}

unint64_t sub_152F40()
{
  unint64_t result;

  result = qword_2047A8;
  if (!qword_2047A8)
  {
    result = swift_getWitnessTable(&unk_171E70, &type metadata for NowPlayingSleepTimerRemaining);
    atomic_store(result, (unint64_t *)&qword_2047A8);
  }
  return result;
}

uint64_t sub_152F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncingLabelView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_152FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncingLabelView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_153010(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SyncingLabelView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_15304C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t *v50;
  void (*v51)(char *, uint64_t);
  void *v52;
  uint64_t *v53;
  void *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;

  v98 = a1;
  v1 = type metadata accessor for DynamicTypeSize(0);
  v96 = *(_QWORD *)(v1 - 8);
  v97 = v1;
  __chkstk_darwin(v1);
  v95 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for BlendMode(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v83 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE60);
  __chkstk_darwin(v85);
  v82 = (uint64_t *)((char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = type metadata accessor for ColorSchemeContrast(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v82 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A60);
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  __chkstk_darwin(v9);
  v92 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A68);
  __chkstk_darwin(v90);
  v91 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = LocalizedStringKey.init(stringLiteral:)(0xE2676E69636E7953, 0xAA0000000000A680);
  v13 = Text.init(_:tableName:bundle:comment:)(v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Font.caption2.getter();
  v21 = Font.monospacedDigit()();
  swift_release(v20);
  v22 = Text.font(_:)(v21, v13, v15, v19, v17);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release(v21);
  sub_25404(v13, v15, v19);
  swift_bridgeObjectRelease(v17);
  v30 = static Font.Weight.medium.getter(v29);
  v31 = Text.fontWeight(_:)(*(_QWORD *)&v30, 0, v22, v24, v26 & 1, v28);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_25404(v22, v24, v26 & 1);
  swift_bridgeObjectRelease(v28);
  v38 = v8;
  sub_562AC((uint64_t)v8);
  v39 = v88;
  v40 = v87;
  v41 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v87, enum case for ColorSchemeContrast.standard(_:), v89);
  v42 = v40;
  LOBYTE(v40) = static ColorSchemeContrast.== infix(_:_:)(v38, v40);
  v43 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43(v42, v41);
  v44 = ((uint64_t (*)(char *, uint64_t))v43)(v38, v41);
  if ((v40 & 1) != 0)
  {
    if (qword_1F9450 != -1)
      swift_once(&qword_1F9450, sub_1547C);
    v45 = qword_210038;
    v46 = v84;
    v47 = v83;
    v48 = v86;
    (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, enum case for BlendMode.plusLighter(_:), v86);
    v49 = (void *)v85;
    v50 = v82;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v82 + *(int *)(v85 + 36), v47, v48);
    *v50 = v45;
    v51 = *(void (**)(char *, uint64_t))(v46 + 8);
    swift_retain();
    v51(v47, v48);
    v52 = (void *)sub_27A8C((unint64_t *)&qword_1FAED8, &qword_1FAE60, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
    v53 = v50;
    v54 = v49;
  }
  else
  {
    v99 = static Color.secondary.getter(v44);
    v54 = &type metadata for Color;
    v52 = &protocol witness table for Color;
    v53 = &v99;
  }
  v55 = AnyShapeStyle.init<A>(_:)(v53, v54, v52);
  v56 = v35 & 1;
  v99 = v55;
  v57 = Text.foregroundStyle<A>(_:)(&v99, v31, v33, v35 & 1, v37, &type metadata for AnyShapeStyle, &protocol witness table for AnyShapeStyle);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  sub_25404(v31, v33, v56);
  swift_release(v55);
  v64 = swift_bridgeObjectRelease(v37);
  v99 = v57;
  v100 = v59;
  v101 = v61 & 1;
  v102 = v63;
  v66 = v95;
  v65 = v96;
  v67 = v97;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v96 + 104))(v95, enum case for DynamicTypeSize.large(_:), v97, v64);
  v68 = v92;
  View.dynamicTypeSize(_:)(v66, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  sub_25404(v99, v100, v101);
  swift_bridgeObjectRelease(v102);
  LOBYTE(v67) = static Edge.Set.bottom.getter(v69);
  v70 = EdgeInsets.init(_all:)(2.0);
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v93;
  v77 = v94;
  v79 = (uint64_t)v91;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v91, v68, v94);
  v80 = v79 + *(int *)(v90 + 36);
  *(_BYTE *)v80 = v67;
  *(double *)(v80 + 8) = v70;
  *(_QWORD *)(v80 + 16) = v72;
  *(_QWORD *)(v80 + 24) = v74;
  *(_QWORD *)(v80 + 32) = v76;
  *(_BYTE *)(v80 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v68, v77);
  return sub_982C(v79, v98, &qword_200A68);
}

uint64_t sub_15362C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)(v7 + 96) = 0u;
  *(_OWORD *)(v7 + 112) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_QWORD *)(v7 + 128) = 2;
  v15 = v7 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_preferredJumpInterval;
  v16 = type metadata accessor for PlaybackController.PreferredJumpInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_subscriptions) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_transcriptSyncingStateObserver) = a7;
  swift_retain(a1);
  swift_retain(a2);
  swift_unknownObjectRetain(a3);
  swift_retain(a5);
  swift_retain(a6);
  swift_retain(a7);
  sub_15268C();
  return v7;
}

uint64_t sub_153728()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_15374C(uint64_t a1)
{
  uint64_t v1;

  return sub_152938(a1, v1);
}

uint64_t sub_153754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_15379C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_153864(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1538C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

_QWORD *sub_153964(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_9944((uint64_t)a1, &qword_1FABA0);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_153A18(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_153AB0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_9944((uint64_t)a1, &qword_1FABA0);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_153B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_153B6C);
}

uint64_t sub_153B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_153BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_153BB8);
}

uint64_t sub_153BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_153BFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_153C7C(319, (unint64_t *)&qword_1FAC18, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_153C7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_153CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_204868;
  if (!qword_204868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_204870);
    sub_8330(&qword_2047A0, type metadata accessor for SyncingLabelView, (uint64_t)&unk_1757A4);
    sub_152F40();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_204868);
  }
  return result;
}

uint64_t sub_153D5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A4D0C, 1);
}

uint64_t sub_153D70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_153D78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_153DB4(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

void sub_153DC8()
{
  char *v0;
  void *Strong;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  NSString v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t ObjCClassFromMetadata;
  NSString v38;
  double v39;
  id v40;
  uint64_t v41;
  int64_t v42;
  uint64_t *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  char v47[24];

  objc_msgSend(v0, "setContentInset:", *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset], *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset + 8], *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset + 16], *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset + 24]);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition
                    + 8];
  if (!Strong)
  {
    *(_QWORD *)v2 = 0;
    *((_QWORD *)v2 + 1) = 0;
    swift_bridgeObjectRelease(v3);
    return;
  }
  v43 = (uint64_t *)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
  if (!v3)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
    v5 = objc_msgSend(v4, "UUIDString");

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = v43[1];
    *v43 = v6;
    v43[1] = v8;
    swift_bridgeObjectRelease(v9);
  }
  v10 = &v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses];
  swift_beginAccess(v10, v47, 0, 0);
  v41 = *(_QWORD *)v10 + 64;
  v11 = 1 << *(_BYTE *)(*(_QWORD *)v10 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(*(_QWORD *)v10 + 64);
  v42 = (unint64_t)(v11 + 63) >> 6;
  v44 = *(_QWORD *)v10;
  swift_bridgeObjectRetain(*(_QWORD *)v10);
  v14 = 0;
  v40 = Strong;
  if (v13)
    goto LABEL_10;
LABEL_11:
  v20 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v20 < v42)
    {
      v21 = *(_QWORD *)(v41 + 8 * v20);
      ++v14;
      if (v21)
        goto LABEL_24;
      v14 = v20 + 1;
      if (v20 + 1 >= v42)
        goto LABEL_33;
      v21 = *(_QWORD *)(v41 + 8 * v14);
      if (v21)
        goto LABEL_24;
      v14 = v20 + 2;
      if (v20 + 2 >= v42)
        goto LABEL_33;
      v21 = *(_QWORD *)(v41 + 8 * v14);
      if (v21)
      {
LABEL_24:
        v13 = (v21 - 1) & v21;
        for (i = __clz(__rbit64(v21)) + (v14 << 6); ; i = v18 | (v14 << 6))
        {
          v23 = *(_QWORD *)(v44 + 48) + 40 * i;
          v25 = *(_QWORD *)v23;
          v24 = *(void **)(v23 + 8);
          v27 = *(_QWORD *)(v23 + 16);
          v26 = *(_QWORD *)(v23 + 24);
          v28 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * i);
          if ((*(_BYTE *)(v23 + 32) & 1) != 0)
          {
            swift_bridgeObjectRetain(v24);
            swift_bridgeObjectRetain(v26);
            v29 = String._bridgeToObjectiveC()();
            v30 = v43[1];
            if (v30)
            {
              v45 = (void *)v43[1];
              swift_bridgeObjectRetain(v30);
              v31._countAndFlagsBits = 45;
              v31._object = (void *)0xE100000000000000;
              String.append(_:)(v31);
              swift_bridgeObjectRetain(v45);
              v32._countAndFlagsBits = v25;
              v32._object = v24;
              String.append(_:)(v32);
              swift_bridgeObjectRelease(v45);
              v33 = v45;
            }
            else
            {
              swift_bridgeObjectRetain(v24);
              v33 = v24;
            }
            ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
            v38 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v39 = swift_bridgeObjectRelease(v33).n128_u64[0];
            Strong = v40;
            objc_msgSend(v40, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v29, v38, v39);
            sub_15A71C(v25, (uint64_t)v24, v27, v26, 1);

            if (!v13)
              goto LABEL_11;
          }
          else
          {
            v34 = v43[1];
            if (v34)
            {
              v46 = (void *)v43[1];
              swift_bridgeObjectRetain(v34);
              v35._countAndFlagsBits = 45;
              v35._object = (void *)0xE100000000000000;
              String.append(_:)(v35);
              sub_CE1D0(v25, (uint64_t)v24, v27, v26, 0);
              swift_bridgeObjectRetain(v46);
              v36._countAndFlagsBits = v25;
              v36._object = v24;
              String.append(_:)(v36);
              swift_bridgeObjectRelease(v46);
              v15 = v46;
            }
            else
            {
              swift_bridgeObjectRetain_n(v24, 2);
              v15 = v24;
            }
            v16 = swift_getObjCClassFromMetadata(v28);
            v17 = String._bridgeToObjectiveC()();
            objc_msgSend(Strong, "registerClass:forCellWithReuseIdentifier:", v16, v17, swift_bridgeObjectRelease(v15).n128_f64[0]);
            sub_15A71C(v25, (uint64_t)v24, v27, v26, 0);

            if (!v13)
              goto LABEL_11;
          }
LABEL_10:
          v18 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
        }
      }
      v22 = v20 + 3;
      if (v22 < v42)
      {
        v21 = *(_QWORD *)(v41 + 8 * v22);
        if (v21)
        {
          v14 = v22;
          goto LABEL_24;
        }
        while (1)
        {
          v14 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_36;
          if (v14 >= v42)
            break;
          v21 = *(_QWORD *)(v41 + 8 * v14);
          ++v22;
          if (v21)
            goto LABEL_24;
        }
      }
    }
LABEL_33:

    swift_release(v44);
    return;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_154334(void *a1)
{
  sub_1544DC(a1, (SEL *)&selRef_bringSubviewToFront_);
}

void sub_15442C(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t Strong;
  id v8;
  char *v9;
  id v10;
  objc_super v11;

  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v10 = (id)Strong;
    v8 = a3;
    v9 = a1;
    objc_msgSend(v10, *a4, v8);

  }
  else
  {
    v11.receiver = a1;
    v11.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
    objc_msgSendSuper2(&v11, *a4, a3);
  }
}

void sub_1544D0(void *a1)
{
  sub_1544DC(a1, (SEL *)&selRef_sendSubviewToBack_);
}

void sub_1544DC(void *a1, SEL *a2)
{
  char *v2;
  uint64_t Strong;
  id v6;
  id v7;
  id v8;
  objc_super v9;

  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_5;
  v8 = (id)Strong;
  v6 = objc_msgSend(a1, "superview");
  if (!v6 || (v7 = v6, v6, v7 != v8))
  {

LABEL_5:
    v9.receiver = v2;
    v9.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
    objc_msgSendSuper2(&v9, *a2, a1);
    return;
  }
  objc_msgSend(v8, *a2, a1);

}

void sub_1545FC(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  NSString v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  void *v12;
  void *v13;
  uint64_t Strong;
  void *v15;
  void *v16;
  Swift::String v17;
  void *v18;
  Swift::String v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  objc_super v24;
  _QWORD v25[4];
  char v26;

  v4 = v3;
  v7 = a1;
  if (a1)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  else
    ObjCClassFromMetadata = 0;
  v9 = String._bridgeToObjectiveC()();
  v24.receiver = v4;
  v24.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  objc_msgSendSuper2(&v24, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v9);

  v25[0] = a2;
  v25[1] = a3;
  v25[2] = 0;
  v25[3] = 0;
  v26 = 0;
  v10 = &v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses];
  swift_beginAccess(&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses], &v22, 33, 0);
  swift_bridgeObjectRetain(a3);
  if (v7)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v10);
    v21 = *(_QWORD *)v10;
    *(_QWORD *)v10 = 0x8000000000000000;
    sub_13E37C(v7, (uint64_t)v25, isUniquelyReferenced_nonNull_native);
    v12 = *(void **)v10;
    *(_QWORD *)v10 = v21;
    swift_bridgeObjectRelease(a3);
    v13 = v12;
  }
  else
  {
    sub_15AB4C((uint64_t)v25);
    v13 = a3;
  }
  swift_bridgeObjectRelease(v13);
  swift_endAccess(&v22);
  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v15 = (void *)Strong;
    if (v7)
      v7 = swift_getObjCClassFromMetadata();
    v16 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition
                      + 8];
    if (v16)
    {
      v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
      v23 = v16;
      swift_bridgeObjectRetain(v16);
      v17._countAndFlagsBits = 45;
      v17._object = (void *)0xE100000000000000;
      String.append(_:)(v17);
      v18 = v23;
      swift_bridgeObjectRetain(v23);
      v19._countAndFlagsBits = a2;
      v19._object = a3;
      String.append(_:)(v19);
      swift_bridgeObjectRelease(v18);
      a3 = v23;
    }
    else
    {
      swift_bridgeObjectRetain(a3);
    }
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "registerClass:forCellWithReuseIdentifier:", v7, v20, swift_bridgeObjectRelease(a3).n128_f64[0]);

  }
}

void sub_15486C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v6;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  NSString v13;
  NSString v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  void *v17;
  void *v18;
  uint64_t Strong;
  void *v20;
  NSString v21;
  void *v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  objc_super v30;
  _QWORD v31[4];
  char v32;

  v6 = v5;
  v11 = a1;
  if (a1)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  else
    ObjCClassFromMetadata = 0;
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v30.receiver = v6;
  v30.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  objc_msgSendSuper2(&v30, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v13, v14);

  v31[0] = a4;
  v31[1] = a5;
  v31[2] = a2;
  v31[3] = a3;
  v32 = 1;
  v15 = &v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses];
  swift_beginAccess(&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses], &v28, 33, 0);
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a3);
  if (v11)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v15);
    v27 = *(_QWORD *)v15;
    *(_QWORD *)v15 = 0x8000000000000000;
    sub_13E37C(v11, (uint64_t)v31, isUniquelyReferenced_nonNull_native);
    v17 = *(void **)v15;
    *(_QWORD *)v15 = v27;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    v18 = v17;
  }
  else
  {
    sub_15AB4C((uint64_t)v31);
    swift_bridgeObjectRelease(a3);
    v18 = a5;
  }
  swift_bridgeObjectRelease(v18);
  swift_endAccess(&v28);
  Strong = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v20 = (void *)Strong;
    if (v11)
      v11 = swift_getObjCClassFromMetadata();
    v21 = String._bridgeToObjectiveC()();
    v22 = *(void **)&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition
                      + 8];
    if (v22)
    {
      v28 = *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
      v29 = v22;
      swift_bridgeObjectRetain(v22);
      v23._countAndFlagsBits = 45;
      v23._object = (void *)0xE100000000000000;
      String.append(_:)(v23);
      v24 = v29;
      swift_bridgeObjectRetain(v29);
      v25._countAndFlagsBits = a4;
      v25._object = a5;
      String.append(_:)(v25);
      swift_bridgeObjectRelease(v24);
      a5 = v29;
    }
    else
    {
      swift_bridgeObjectRetain(a5);
    }
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v11, v21, v26, swift_bridgeObjectRelease(a5).n128_f64[0]);

  }
}

id sub_154B6C(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  NSString v31;
  Class isa;
  objc_class *v33;
  id v34;
  id v36;
  NSString v37;
  Class v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  id v43;
  uint64_t v44;
  void *v45;
  objc_super v46;
  objc_super v47;

  v4 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_10;
  v13 = (void *)Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates) & 1) != 0)
    goto LABEL_9;
  v14 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v46.receiver = v13;
  v46.super_class = v14;
  v15 = objc_msgSendSuper2(&v46, "dataSource");
  if (!v15)
    goto LABEL_9;
  v16 = v15;
  v17 = type metadata accessor for CompositeCollectionViewController();
  v18 = swift_dynamicCastClass(v16, v17);
  if (!v18)
  {
    swift_unknownObjectRelease(v16);
LABEL_9:

LABEL_10:
    v31 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v33 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v47.receiver = v4;
    v47.super_class = v33;
    v34 = objc_msgSendSuper2(&v47, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v31, isa);

    return v34;
  }
  v19 = v18;
  v43 = v16;
  v20 = sub_1AD34(v4);
  if (!v20)
  {

    swift_unknownObjectRelease(v43);
    goto LABEL_10;
  }
  v24 = (void *)v20;
  v42 = v23 & 1;
  v25 = *(_QWORD *)(v19 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  v40 = v21;
  v41 = v22;
  swift_retain();
  sub_953B0(a3, 0, 0, 0, v24, v40, v41, v42, (uint64_t)v11);
  swift_release(v25);
  v26 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition
                    + 8];
  v27 = v24;
  if (v26)
  {
    v44 = *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
    v45 = v26;
    swift_bridgeObjectRetain(v26);
    v28._countAndFlagsBits = 45;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    v29 = v45;
    swift_bridgeObjectRetain(v45);
    v30._countAndFlagsBits = a1;
    v30._object = a2;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v29);
    a2 = v45;
  }
  else
  {
    swift_bridgeObjectRetain(a2);
  }
  v36 = v43;
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v38 = IndexPath._bridgeToObjectiveC()().super.isa;
  v39 = objc_msgSend(v13, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v37, v38);

  swift_unknownObjectRelease(v27);
  swift_unknownObjectRelease(v36);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v39;
}

id sub_154EFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  objc_class *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  uint64_t v29;
  NSString v30;
  void *v31;
  Swift::String v32;
  void *v33;
  Swift::String v34;
  NSString v35;
  NSString v36;
  Class isa;
  objc_class *v38;
  id v39;
  uint64_t v41;
  NSString v42;
  Class v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  objc_super v54;
  objc_super v55;

  v6 = v5;
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_10;
  v17 = (void *)Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates) & 1) != 0)
    goto LABEL_9;
  v18 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v54.receiver = v17;
  v54.super_class = v18;
  v19 = objc_msgSendSuper2(&v54, "dataSource");
  if (!v19)
    goto LABEL_9;
  v50 = v13;
  v51 = v12;
  v20 = v19;
  v21 = type metadata accessor for CompositeCollectionViewController();
  v22 = swift_dynamicCastClass(v20, v21);
  if (!v22)
  {
    swift_unknownObjectRelease(v20);
LABEL_9:

LABEL_10:
    v35 = String._bridgeToObjectiveC()();
    v36 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v38 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v55.receiver = v6;
    v55.super_class = v38;
    v39 = objc_msgSendSuper2(&v55, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v35, v36, isa);

    return v39;
  }
  v23 = v22;
  v49 = v20;
  v24 = sub_1AD34(v6);
  if (!v24)
  {

    swift_unknownObjectRelease(v49);
    goto LABEL_10;
  }
  v28 = (void *)v24;
  v47 = v27 & 1;
  v29 = *(_QWORD *)(v23 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  v45 = v25;
  v46 = v26;
  swift_retain();
  v48 = v28;
  sub_953B0(a5, 1, a1, a2, v28, v45, v46, v47, (uint64_t)v15);
  swift_release(v29);
  v30 = String._bridgeToObjectiveC()();
  v31 = *(void **)&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition
                    + 8];
  if (v31)
  {
    v52 = *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
    v53 = v31;
    swift_bridgeObjectRetain(v31);
    v32._countAndFlagsBits = 45;
    v32._object = (void *)0xE100000000000000;
    String.append(_:)(v32);
    v33 = v53;
    swift_bridgeObjectRetain(v53);
    v34._countAndFlagsBits = a3;
    v34._object = a4;
    String.append(_:)(v34);
    swift_bridgeObjectRelease(v33);
    a4 = v53;
  }
  else
  {
    swift_bridgeObjectRetain(a4);
  }
  v41 = v50;
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v43 = IndexPath._bridgeToObjectiveC()().super.isa;
  v39 = objc_msgSend(v17, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v30, v42, v43);

  swift_unknownObjectRelease(v48);
  swift_unknownObjectRelease(v49);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v51);
  return v39;
}

_QWORD *sub_15533C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  objc_class *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  void (*v65)(char *);
  uint64_t ObjectType;
  uint64_t (*v67)(uint64_t, uint64_t, __n128);
  __n128 v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  _QWORD *v74;
  char *v75;
  unint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  objc_class *v85;
  id v86;
  _QWORD *v87;
  id v88;
  uint64_t v90;
  id v91;
  unint64_t v92;
  _QWORD *v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  id v97;
  char *v98;
  _QWORD *v99;
  _QWORD *v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *);
  unint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  uint64_t v118;
  objc_super v119;
  objc_super v120;
  uint64_t v121;
  _QWORD v122[3];
  unsigned __int8 v123;
  uint64_t v124;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v90 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v102 = (uint64_t *)((char *)&v90 - v12);
  __chkstk_darwin(v13);
  v15 = (char *)&v90 - v14;
  v118 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v117 = (char *)&v90 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v21);
  v112 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_34;
  v101 = v18;
  v24 = (void *)Strong;
  v25 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v97 = v24;
  v119.receiver = v24;
  v119.super_class = v25;
  v26 = objc_msgSendSuper2(&v119, "dataSource");
  if (!v26)
  {
LABEL_33:

LABEL_34:
    v85 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v120.receiver = v108;
    v120.super_class = v85;
    v86 = objc_msgSendSuper2(&v120, "indexPathsForVisibleItems");
    v87 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v86, v118);

    return v87;
  }
  v27 = v26;
  v28 = type metadata accessor for CompositeCollectionViewController();
  v105 = swift_dynamicCastClass(v27, v28);
  if (!v105)
  {
    swift_unknownObjectRelease(v27);
    goto LABEL_33;
  }
  v91 = v27;
  v29 = objc_msgSend(v97, "indexPathsForVisibleItems");
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v118);

  v31 = *(_QWORD *)(v30 + 16);
  v90 = v30;
  if (v31)
  {
    v93 = v10;
    v103 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
    v92 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v32 = v30 + v92;
    v110 = *(_QWORD *)(v16 + 72);
    v33 = *(void (**)(char *))(v16 + 16);
    v99 = _swiftEmptyArrayStorage;
    v107 = v6;
    v111 = v7;
    v106 = v8;
    v34 = v112;
    v35 = v117;
    v36 = v31;
    v96 = v3;
    v100 = v15;
    v113 = v16;
    v114 = v33;
    do
    {
      v115 = v32;
      v37 = v118;
      v33(v34);
      v104 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v104(v34, 0, 1, v37);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v34, 1, v37) == 1)
      {
        v88 = v91;
        v87 = v99;
        goto LABEL_38;
      }
      v116 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v116(v35, v34, v118);
      v38 = *(_QWORD *)(v105 + v103);
      v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v39(v3, 1, 1, v7);
      v40 = swift_retain();
      v41 = IndexPath.count.getter(v40);
      if (v41 == 2)
      {
        v42 = IndexPath.section.getter(2);
      }
      else if (v41 <= 0)
      {
        v42 = NSNotFound.getter(v41);
      }
      else
      {
        v42 = IndexPath.subscript.getter(0);
      }
      sub_94E88(v42, 0, 0, 0, &v121);
      v43 = sub_982C((uint64_t)&v121, (uint64_t)v122, &qword_1FA948);
      v44 = v122[0];
      if (v122[0])
      {
        v46 = v122[1];
        v45 = v122[2];
        LODWORD(v109) = v123;
        v47 = v124;
        v48 = IndexPath.count.getter(v43);
        if (v48 > 1)
        {
          v50 = IndexPath.count.getter(v48);
          if (v50 == 2)
          {
            v51 = IndexPath.item.getter(2);
          }
          else if (v50 <= 2)
          {
            v51 = NSNotFound.getter(v50);
          }
          else
          {
            v51 = IndexPath.subscript.getter(1);
          }
          v49 = v101;
          IndexPath.init(item:section:)(v51, v47);
        }
        else
        {
          v49 = v101;
          IndexPath.init(index:)(v47);
        }
        sub_9944((uint64_t)v3, &qword_1FA938);
        v7 = v111;
        v52 = &v3[*(int *)(v111 + 48)];
        *(_QWORD *)v3 = v44;
        *((_QWORD *)v3 + 1) = v46;
        *((_QWORD *)v3 + 2) = v45;
        v3[24] = v109;
        v116(v52, v49, v118);
        v39(v3, 0, 1, v7);
        v6 = v107;
        v8 = v106;
      }
      sub_982C((uint64_t)v3, (uint64_t)v6, &qword_1FA938);
      v53 = swift_release(v38);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v53) == 1)
      {
        v16 = v113;
        v35 = v117;
        (*(void (**)(char *, uint64_t))(v113 + 8))(v117, v118);
        sub_9944((uint64_t)v6, &qword_1FA938);
      }
      else
      {
        v109 = v36;
        v54 = *(int *)(v7 + 48);
        v55 = (uint64_t)v100;
        v56 = (char *)v100 + v54;
        v57 = v7;
        v58 = *(_QWORD *)v6;
        v59 = *((_QWORD *)v6 + 1);
        v60 = *((_QWORD *)v6 + 2);
        v61 = v6[24];
        *v100 = *(_QWORD *)v6;
        *(_QWORD *)(v55 + 8) = v59;
        *(_QWORD *)(v55 + 16) = v60;
        *(_BYTE *)(v55 + 24) = v61;
        v62 = v118;
        v116((char *)(v55 + v54), &v6[v54], v118);
        v63 = v102;
        v64 = (char *)v102 + *(int *)(v57 + 48);
        *v102 = v58;
        v63[1] = v59;
        v63[2] = v60;
        *((_BYTE *)v63 + 24) = v61;
        v98 = v56;
        v65 = v114;
        ((void (*)(char *, char *, uint64_t))v114)(v64, v56, v62);
        ObjectType = swift_getObjectType(v58);
        v67 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v59 + 8);
        v68 = swift_unknownObjectRetain(v58);
        v69 = (void *)v67(ObjectType, v59, v68);
        v70 = v108;
        v71 = v69;

        v72 = v62;
        v73 = *(void (**)(char *, uint64_t))(v113 + 8);
        v73(v64, v72);
        if (v71 == v70)
        {
          v95 = v73;
          v74 = v93;
          v75 = (char *)v93 + *(int *)(v111 + 48);
          *v93 = v58;
          v74[1] = v59;
          v74[2] = v60;
          *((_BYTE *)v74 + 24) = v61;
          v94 = v75;
          v65(v75);
          swift_unknownObjectRelease(v58);
          v76 = (unint64_t)v99;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v99);
          v36 = v109;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v76 = sub_134B8C(0, *(_QWORD *)(v76 + 16) + 1, 1, v76);
          v3 = v96;
          v6 = v107;
          v8 = v106;
          v78 = (uint64_t)v100;
          v16 = v113;
          v79 = v116;
          v99 = (_QWORD *)v76;
          v81 = *(_QWORD *)(v76 + 16);
          v80 = *(_QWORD *)(v76 + 24);
          v7 = v111;
          if (v81 >= v80 >> 1)
            v99 = (_QWORD *)sub_134B8C(v80 > 1, v81 + 1, 1, (unint64_t)v99);
          v82 = v99;
          v99[2] = v81 + 1;
          v83 = (char *)v82 + v92 + v81 * v110;
          v84 = v118;
          v79(v83, v94, v118);
          sub_9944(v78, &qword_1FA940);
          v35 = v117;
          v95(v117, v84);
        }
        else
        {
          swift_unknownObjectRelease(v58);
          sub_9944(v55, &qword_1FA940);
          v35 = v117;
          v73(v117, v118);
          v3 = v96;
          v6 = v107;
          v7 = v111;
          v8 = v106;
          v16 = v113;
          v36 = v109;
        }
      }
      v33 = v114;
      v32 = v115 + v110;
      --v36;
      v34 = v112;
    }
    while (v36);
    v88 = v91;
    v87 = v99;
    v104(v112, 1, 1, v118);
  }
  else
  {
    v87 = _swiftEmptyArrayStorage;
    v88 = v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v112, 1, 1, v118);
  }
LABEL_38:

  swift_bridgeObjectRelease(v90);
  swift_unknownObjectRelease(v88);
  return v87;
}

void sub_155C58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  void *v23;
  objc_class *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t ObjectType;
  uint64_t (*v70)(uint64_t, uint64_t, __n128);
  __n128 v71;
  void *v72;
  void (*v73)(char *, uint64_t);
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  objc_class *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  _QWORD *v89;
  void *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t);
  void *v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  objc_super v111;
  objc_super v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD v115[3];
  unsigned __int8 v116;
  uint64_t v117;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v85 - v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v106 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v92 = (id *)((char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v85 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v12);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v100 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v105 = (char *)&v85 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v85 - v20;
  v113 = (unint64_t)_swiftEmptyArrayStorage;
  v99 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_44;
  v23 = (void *)Strong;
  v24 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v111.receiver = v23;
  v111.super_class = v24;
  v25 = objc_msgSendSuper2(&v111, "dataSource");
  if (!v25)
  {
LABEL_43:

    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
LABEL_44:
    v79 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v112.receiver = v99;
    v112.super_class = v79;
    v80 = objc_msgSendSuper2(&v112, "visibleCells");
    v81 = sub_F174(0, &qword_1FDDF0, UICollectionViewCell_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v80, v81);

    return;
  }
  v26 = v25;
  v27 = type metadata accessor for CompositeCollectionViewController();
  v97 = swift_dynamicCastClass(v26, v27);
  if (!v97)
  {
    swift_unknownObjectRelease(v26);
    goto LABEL_43;
  }
  v28 = objc_msgSend(v23, "visibleCells");
  v29 = sub_F174(0, &qword_1FDDF0, UICollectionViewCell_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);
  v89 = v11;
  v31 = v30;

  v109 = v31;
  v85 = v26;
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v82 = v109;
    else
      v82 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v109);
    v83 = v82;
    v31 = v109;
    v84 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease(v31);
    v32 = v84;
  }
  else
  {
    v32 = *(_QWORD *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFF8));
  }
  v33 = v104;
  if (v32)
  {
    if (v32 >= 1)
    {
      v34 = 0;
      v107 = v31 & 0xC000000000000001;
      v91 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
      v93 = v6;
      v88 = v3;
      v102 = v7;
      v87 = v14;
      v86 = v15;
      v90 = v23;
      v103 = v21;
      v108 = v32;
      while (1)
      {
        if (v107)
          v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v31);
        else
          v35 = *(id *)(v31 + 8 * v34 + 32);
        v110 = v35;
        v36 = objc_msgSend(v23, "indexPathForCell:", v35, v85);
        if (v36)
        {
          v37 = v36;
          v38 = v105;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v36);

          v39 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
          v40 = v38;
          v41 = v103;
          v39(v14, v40, v33);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, v33);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v33) != 1)
          {
            v101 = v39;
            v39(v41, v14, v33);
            v42 = *(_QWORD *)(v97 + v91);
            v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
            v98(v3, 1, 1, v7);
            v43 = swift_retain();
            v44 = IndexPath.count.getter(v43);
            if (v44 == 2)
            {
              v45 = IndexPath.section.getter(2);
              v46 = v100;
            }
            else
            {
              v46 = v100;
              if (v44 <= 0)
                v45 = NSNotFound.getter(v44);
              else
                v45 = IndexPath.subscript.getter(0);
            }
            sub_94E88(v45, 0, 0, 0, &v114);
            v47 = sub_982C((uint64_t)&v114, (uint64_t)v115, &qword_1FA948);
            v48 = v115[0];
            if (v115[0])
            {
              v96 = v115[1];
              v95 = v115[2];
              v94 = v116;
              v49 = v117;
              v50 = IndexPath.count.getter(v47);
              if (v50 > 1)
              {
                v52 = IndexPath.count.getter(v50);
                if (v52 == 2)
                {
                  v53 = IndexPath.item.getter(2);
                }
                else if (v52 <= 2)
                {
                  v53 = NSNotFound.getter(v52);
                }
                else
                {
                  v53 = IndexPath.subscript.getter(1);
                }
                v51 = v102;
                IndexPath.init(item:section:)(v53, v49);
              }
              else
              {
                IndexPath.init(index:)(v49);
                v51 = v102;
              }
              sub_9944((uint64_t)v3, &qword_1FA938);
              v54 = &v3[*(int *)(v51 + 48)];
              v55 = v96;
              *(_QWORD *)v3 = v48;
              *((_QWORD *)v3 + 1) = v55;
              *((_QWORD *)v3 + 2) = v95;
              v3[24] = v94;
              v101(v54, v46, v104);
              v98(v3, 0, 1, v51);
              v6 = v93;
            }
            sub_982C((uint64_t)v3, (uint64_t)v6, &qword_1FA938);
            v56 = swift_release(v42);
            v7 = v102;
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v106 + 48))(v6, 1, v102, v56) == 1)
            {
              v33 = v104;
              (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v104);

              sub_9944((uint64_t)v6, &qword_1FA938);
            }
            else
            {
              v57 = *(int *)(v7 + 48);
              v58 = v89;
              v59 = (char *)v89 + v57;
              v60 = (char *)v6 + v57;
              v61 = v6;
              v62 = *v6;
              v63 = v6[1];
              v64 = v61[2];
              v65 = *((_BYTE *)v61 + 24);
              *v89 = v62;
              v58[1] = v63;
              v58[2] = v64;
              *((_BYTE *)v58 + 24) = v65;
              v66 = v104;
              v101(v59, v60, v104);
              v67 = v92;
              v68 = (char *)v92 + *(int *)(v7 + 48);
              *v92 = v62;
              v67[1] = v63;
              v67[2] = v64;
              *((_BYTE *)v67 + 24) = v65;
              (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v68, v59, v66);
              ObjectType = swift_getObjectType(v62);
              v70 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v63 + 8);
              v71 = swift_unknownObjectRetain(v62);
              v72 = (void *)v70(ObjectType, v63, v71);

              swift_unknownObjectRelease(v62);
              v73 = *(void (**)(char *, uint64_t))(v15 + 8);
              v73(v68, v66);
              if (v72 == v99)
              {
                v74 = v110;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
                v76 = *(_QWORD *)((char *)&dword_10 + (v113 & 0xFFFFFFFFFFFFFF8));
                v75 = *(_QWORD *)((char *)&dword_18 + (v113 & 0xFFFFFFFFFFFFFF8));
                if (v76 >= v75 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
                v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v74);
                specialized Array._endMutation()(v77);

                sub_9944((uint64_t)v89, &qword_1FA940);
                v78 = v104;
                v73(v103, v104);
                v33 = v78;
                v3 = v88;
                v6 = v93;
                v7 = v102;
                v14 = v87;
              }
              else
              {

                sub_9944((uint64_t)v58, &qword_1FA940);
                v73(v103, v66);
                v3 = v88;
                v6 = v93;
                v7 = v102;
                v14 = v87;
                v33 = v66;
              }
              v15 = v86;
            }
            v23 = v90;
            goto LABEL_11;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, 1, 1, v33);
        }

        sub_9944((uint64_t)v14, (uint64_t *)&unk_1FA950);
LABEL_11:
        ++v34;
        v31 = v109;
        if (v108 == v34)
          goto LABEL_41;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_41:
    swift_unknownObjectRelease(v85);
    swift_bridgeObjectRelease(v31);

  }
}

id sub_156558(uint64_t a1)
{
  return sub_158260(a1, (SEL *)&selRef_layoutAttributesForItemAtIndexPath_);
}

void sub_156570(uint64_t a1)
{
  sub_1569C4(a1, (SEL *)&selRef_insertItemsAtIndexPaths_);
}

void sub_156588(uint64_t a1)
{
  sub_1569C4(a1, (SEL *)&selRef_deleteItemsAtIndexPaths_);
}

double sub_1565A0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  double result;

  v7 = type metadata accessor for IndexPath(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v7);
  v9 = a1;
  sub_1569C4(v8, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

void sub_156600(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  Class isa;
  Class v14;
  objc_class *v15;
  uint64_t Strong;
  void *v17;
  objc_class *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  Class v39;
  _BYTE *v40;
  Class v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;
  objc_super v54;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v45[-v11];
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = IndexPath._bridgeToObjectiveC()().super.isa;
  v15 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v54.receiver = v3;
  v54.super_class = v15;
  objc_msgSendSuper2(&v54, "moveItemAtIndexPath:toIndexPath:", isa, v14);

  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v53.receiver = v17;
    v53.super_class = v18;
    v19 = objc_msgSendSuper2(&v53, "dataSource");
    if (v19)
    {
      v20 = v19;
      v52 = v7;
      v21 = type metadata accessor for CompositeCollectionViewController();
      v22 = swift_dynamicCastClass(v20, v21);
      if (v22)
      {
        v23 = v22;
        v24 = sub_1AD34(v3);
        if (v24)
        {
          v46 = v27 & 1;
          v50 = v6;
          v51 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
          v28 = *(_QWORD *)(v23 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
          v47 = a2;
          v48 = v12;
          v29 = (void *)v24;
          v30 = v25;
          v31 = v26;
          swift_retain();
          v32 = (uint64_t)v12;
          v33 = a1;
          v34 = v29;
          v49 = v9;
          v35 = v46;
          sub_953B0(v33, 0, 0, 0, v29, v30, v31, v46, v32);
          swift_release(v28);
          v36 = *(_QWORD *)(v23 + v51);
          swift_retain();
          sub_953B0(v47, 0, 0, 0, v29, v30, v31, v35, (uint64_t)v9);
          swift_release(v36);
          v37 = *(_QWORD *)(v23 + v51);
          swift_retain();
          sub_94B9C((uint64_t)v29, v30, v31, v35);
          swift_release(v37);
          v38 = v48;
          v39 = IndexPath._bridgeToObjectiveC()().super.isa;
          v40 = v49;
          v41 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v17, "moveItemAtIndexPath:toIndexPath:", v39, v41);

          swift_unknownObjectRelease(v34);
          swift_unknownObjectRelease(v20);
          v42 = *(void (**)(_BYTE *, uint64_t))(v52 + 8);
          v43 = v40;
          v44 = v50;
          v42(v43, v50);
          v42(v38, v44);
        }
        else
        {

          swift_unknownObjectRelease(v20);
        }
        return;
      }
      swift_unknownObjectRelease(v20);
    }

  }
}

void sub_1569B8(uint64_t a1)
{
  sub_1569C4(a1, (SEL *)&selRef_reloadItemsAtIndexPaths_);
}

void sub_1569C4(uint64_t a1, SEL *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Class isa;
  objc_class *v17;
  uint64_t Strong;
  void *v19;
  objc_class *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  Class v58;
  double v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  SEL *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void (*v76)(char *, char *, uint64_t);
  void (*v77)(char *, uint64_t, uint64_t, __n128);
  char *v78;
  char *v79;
  objc_super v80;
  objc_super v81;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v78 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v79 = (char *)&v61 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v61 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v17 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v81.receiver = v2;
  v81.super_class = v17;
  objc_msgSendSuper2(&v81, *a2, isa);

  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    return;
  v19 = (void *)Strong;
  v20 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v80.receiver = v19;
  v80.super_class = v20;
  v21 = objc_msgSendSuper2(&v80, "dataSource");
  if (!v21)
  {
LABEL_37:

    return;
  }
  v22 = v21;
  v23 = type metadata accessor for CompositeCollectionViewController();
  v24 = swift_dynamicCastClass(v22, v23);
  if (!v24)
  {
    swift_unknownObjectRelease(v22);
    goto LABEL_37;
  }
  v25 = v24;
  v26 = (void *)sub_1AD34(v2);
  v73 = v28;
  v74 = v29;
  v75 = v26;
  if (v26)
  {
    v71 = v25;
    v72 = v27 & 1;
    v30 = *(_QWORD *)(a1 + 16);
    v64 = a1;
    v65 = a2;
    v63 = v19;
    v62 = v22;
    if (v30)
    {
      v70 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
      v68 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v31 = a1 + v68;
      v67 = *(_QWORD *)(v6 + 72);
      v77 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
      v32 = swift_bridgeObjectRetain(a1);
      v33 = (char *)_swiftEmptyArrayStorage;
      v66 = v15;
      v69 = v6;
      while (1)
      {
        v77(v15, v31, v5, v32);
        v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v34(v15, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
        {
          v55 = v71;
          goto LABEL_42;
        }
        v76 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v76(v12, v15, v5);
        v35 = *(_QWORD *)(v71 + v70);
        v36 = swift_retain();
        v37 = IndexPath.count.getter(v36);
        if (v37 == 2)
          v38 = IndexPath.section.getter(2);
        else
          v38 = v37 <= 0 ? NSNotFound.getter(v37) : IndexPath.subscript.getter(0);
        v39 = v38;
        v40 = sub_958B0(v75, v73, v74, v72);
        v41 = __OFADD__(v39, v40);
        v42 = v39 + v40;
        if (v41)
          break;
        v43 = IndexPath.count.getter(v40);
        if (v43 == 2)
        {
          v44 = IndexPath.section.getter(2);
        }
        else if (v43 <= 0)
        {
          v44 = NSNotFound.getter(v43);
        }
        else
        {
          v44 = IndexPath.subscript.getter(0);
        }
        v45 = v79;
        if (v42 == v44)
        {
          v46 = (void (*)(char *, char *, uint64_t, __n128))v77;
          ((void (*)(char *, char *, uint64_t))v77)(v79, v12, v5);
        }
        else
        {
          v47 = IndexPath.count.getter(v44);
          if (v47 >= 2)
          {
            v48 = IndexPath.count.getter(v47);
            if (v48 == 2)
            {
              v49 = IndexPath.item.getter(2);
            }
            else if (v48 <= 2)
            {
              v49 = NSNotFound.getter(v48);
            }
            else
            {
              v49 = IndexPath.subscript.getter(1);
            }
            v45 = v79;
            IndexPath.init(item:section:)(v49, v42);
          }
          else
          {
            v45 = v79;
            IndexPath.init(index:)(v42);
          }
          v46 = (void (*)(char *, char *, uint64_t, __n128))v77;
        }
        v50 = swift_release(v35);
        v46(v78, v45, v5, v50);
        if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
          v33 = (char *)sub_134B8C(0, *((_QWORD *)v33 + 2) + 1, 1, (unint64_t)v33);
        v6 = v69;
        v52 = *((_QWORD *)v33 + 2);
        v51 = *((_QWORD *)v33 + 3);
        if (v52 >= v51 >> 1)
          v33 = (char *)sub_134B8C(v51 > 1, v52 + 1, 1, (unint64_t)v33);
        *((_QWORD *)v33 + 2) = v52 + 1;
        v53 = v67;
        v76(&v33[v68 + v52 * v67], v78, v5);
        v54 = *(void (**)(char *, uint64_t))(v6 + 8);
        v54(v79, v5);
        v54(v12, v5);
        v31 += v53;
        --v30;
        v15 = v66;
        if (!v30)
          goto LABEL_40;
      }
      __break(1u);
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      swift_bridgeObjectRetain(a1);
      v33 = (char *)_swiftEmptyArrayStorage;
LABEL_40:
      v55 = v71;
      v34(v15, 1, 1, v5);
LABEL_42:
      swift_bridgeObjectRelease(v64);
      v56 = *(_QWORD *)(v55 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
      swift_retain();
      v57 = v75;
      sub_94B9C((uint64_t)v75, v73, v74, v72);
      swift_release(v56);
      v58 = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v59 = swift_bridgeObjectRelease(v33).n128_u64[0];
      v60 = v63;
      objc_msgSend(v63, *v65, v58, v59);

      swift_unknownObjectRelease(v62);
      swift_unknownObjectRelease(v57);

    }
  }
  else
  {

    swift_unknownObjectRelease(v22);
  }
}

void sub_156F18(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Class isa;
  objc_class *v11;
  uint64_t Strong;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  uint64_t v28;
  int v29;
  objc_super v30;
  objc_super v31;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v11 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v31.receiver = v3;
  v31.super_class = v11;
  objc_msgSendSuper2(&v31, "deselectItemAtIndexPath:animated:", isa, a2 & 1);

  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v30.receiver = v13;
    v30.super_class = v14;
    v15 = objc_msgSendSuper2(&v30, "dataSource");
    if (v15)
    {
      v16 = v15;
      v17 = type metadata accessor for CompositeCollectionViewController();
      v18 = swift_dynamicCastClass(v16, v17);
      if (v18)
      {
        v19 = v18;
        v20 = sub_1AD34(v3);
        if (v20)
        {
          v24 = (void *)v20;
          v29 = v23 & 1;
          v25 = *(_QWORD *)(v19 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
          v28 = v22;
          v26 = v21;
          swift_retain();
          sub_953B0(a1, 0, 0, 0, v24, v26, v28, v29, (uint64_t)v9);
          swift_release(v25);
          v27 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v13, "deselectItemAtIndexPath:animated:", v27, a2 & 1);

          swift_unknownObjectRelease(v24);
          swift_unknownObjectRelease(v16);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        else
        {

          swift_unknownObjectRelease(v16);
        }
        return;
      }
      swift_unknownObjectRelease(v16);
    }

  }
}

void sub_1571B0(uint64_t a1, int a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unsigned int (*v23)(_BYTE *, uint64_t, uint64_t);
  Class isa;
  objc_class *v25;
  uint64_t Strong;
  void *v27;
  objc_class *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _BYTE *v42;
  Class v43;
  _BYTE v44[4];
  int v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  int v54;
  objc_super v55;
  objc_super v56;

  v4 = v3;
  v54 = a2;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v50 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v10);
  v51 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v44[-v13];
  __chkstk_darwin(v15);
  v17 = &v44[-v16];
  __chkstk_darwin(v18);
  v52 = &v44[-v19];
  __chkstk_darwin(v20);
  v22 = &v44[-v21];
  sub_FCE7C(a1, (uint64_t)&v44[-v21]);
  v23 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  isa = 0;
  if (v23(v22, 1, v7) != 1)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v22, v7);
  }
  v25 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v56.receiver = v4;
  v56.super_class = v25;
  v53 = a3;
  objc_msgSendSuper2(&v56, "selectItemAtIndexPath:animated:scrollPosition:", isa, v54 & 1, a3);

  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v27 = (void *)Strong;
    v28 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v55.receiver = v27;
    v55.super_class = v28;
    v29 = objc_msgSendSuper2(&v55, "dataSource");
    if (v29)
    {
      v30 = v29;
      v31 = type metadata accessor for CompositeCollectionViewController();
      v32 = swift_dynamicCastClass(v30, v31);
      if (v32)
      {
        v33 = v32;
        v34 = (void *)sub_1AD34(v4);
        if (v34)
        {
          v45 = v37;
          v46 = v36;
          v47 = v35;
          v49 = v34;
          v38 = (uint64_t)v52;
          v48 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
          v48(v52, 1, 1, v7);
          sub_FCE7C(a1, (uint64_t)v17);
          if (v23(v17, 1, v7) == 1)
          {
            sub_9944((uint64_t)v17, (uint64_t *)&unk_1FA950);
          }
          else
          {
            v45 &= 1u;
            v39 = (uint64_t)v50;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v50, v17, v7);
            v40 = *(_QWORD *)(v33 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
            swift_retain();
            sub_953B0(v39, 0, 0, 0, v49, v47, v46, v45, (uint64_t)v14);
            v41 = swift_release(v40);
            (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v39, v7, v41);
            sub_9944(v38, (uint64_t *)&unk_1FA950);
            v48(v14, 0, 1, v7);
            sub_982C((uint64_t)v14, v38, (uint64_t *)&unk_1FA950);
          }
          v42 = v51;
          sub_FCE7C(v38, (uint64_t)v51);
          if (v23(v42, 1, v7) == 1)
          {
            v43 = 0;
          }
          else
          {
            v43 = IndexPath._bridgeToObjectiveC()().super.isa;
            (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v42, v7);
          }
          objc_msgSend(v27, "selectItemAtIndexPath:animated:scrollPosition:", v43, v54 & 1, v53);

          swift_unknownObjectRelease(v49);
          swift_unknownObjectRelease(v30);
          sub_9944(v38, (uint64_t *)&unk_1FA950);
        }
        else
        {

          swift_unknownObjectRelease(v30);
        }
        return;
      }
      swift_unknownObjectRelease(v30);
    }

  }
}

void sub_157694(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  Class isa;
  Class v27;
  objc_class *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  objc_super v33;
  objc_super v34;

  v4 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_9;
  v13 = (void *)Strong;
  v14 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v33.receiver = v13;
  v33.super_class = v14;
  v15 = objc_msgSendSuper2(&v33, "dataSource");
  if (!v15)
    goto LABEL_7;
  v16 = v15;
  v17 = type metadata accessor for CompositeCollectionViewController();
  v18 = swift_dynamicCastClass(v16, v17);
  if (!v18)
  {
    swift_unknownObjectRelease(v16);
LABEL_7:

    goto LABEL_9;
  }
  v19 = v18;
  v20 = sub_1AD34(v4);
  if (v20)
  {
    v32 = v23 & 1;
    v24 = *(_QWORD *)(v19 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
    v25 = (void *)v20;
    v30 = v21;
    v31 = v22;
    swift_retain();
    sub_953B0(a1, 0, 0, 0, v25, v30, v31, v32, (uint64_t)v11);
    swift_release(v24);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, a2, a3 & 1);

    swift_unknownObjectRelease(v25);
    swift_unknownObjectRelease(v16);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return;
  }

  swift_unknownObjectRelease(v16);
LABEL_9:
  v27 = IndexPath._bridgeToObjectiveC()().super.isa;
  v28 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v34.receiver = v4;
  v34.super_class = v28;
  objc_msgSendSuper2(&v34, "scrollToItemAtIndexPath:atScrollPosition:animated:", v27, a2, a3 & 1);

}

uint64_t sub_15793C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  void *v24;
  objc_class *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  objc_class *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  objc_super v53;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v50 - v21;
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v24 = (void *)Strong;
    v51 = a1;
    v25 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v52.receiver = v24;
    v52.super_class = v25;
    v26 = objc_msgSendSuper2(&v52, "dataSource");
    if (v26)
    {
      v27 = v26;
      v28 = type metadata accessor for CompositeCollectionViewController();
      v29 = swift_dynamicCastClass(v27, v28);
      if (v29)
      {
        v50 = v29;
        v30 = objc_msgSend(v24, "indexPathForItemAtPoint:", a2, a3);
        if (v30)
        {
          v31 = v30;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v30);

          v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
          v32(v15, v19, v16);
          v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
          v33((uint64_t)v15, 0, 1, v16);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
          {
            v34 = v15;
            v35 = (void (*)(uint64_t, char *, uint64_t))v32;
            v32(v22, v34, v16);
            v36 = *(_QWORD *)(v50 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
            swift_retain();
            sub_94CB4(0, 0, 0, (uint64_t)v9);

            swift_unknownObjectRelease(v27);
            v37 = swift_release(v36);
            (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v22, v16, v37);
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v9, 1, v38) != 1)
            {
              swift_unknownObjectRelease(*v9);
              v48 = (char *)v9 + *(int *)(v38 + 48);
              v49 = v51;
              v35(v51, v48, v16);
              v46 = v49;
              v47 = 0;
              return v33(v46, v47, 1, v16);
            }
            v39 = &qword_1FA938;
            v40 = (uint64_t)v9;
LABEL_16:
            sub_9944(v40, v39);
            v46 = v51;
            v47 = 1;
            return v33(v46, v47, 1, v16);
          }
        }
        else
        {
          v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
          v33((uint64_t)v15, 1, 1, v16);
        }

        swift_unknownObjectRelease(v27);
        v39 = (uint64_t *)&unk_1FA950;
        v40 = (uint64_t)v15;
        goto LABEL_16;
      }
      swift_unknownObjectRelease(v27);
    }

    a1 = v51;
  }
  v41 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v53.receiver = v3;
  v53.super_class = v41;
  v42 = objc_msgSendSuper2(&v53, "indexPathForItemAtPoint:", a2, a3);
  if (v42)
  {
    v43 = v42;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v42);

    v44 = 0;
  }
  else
  {
    v44 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v12, v44, 1, v16);
  return sub_982C((uint64_t)v12, a1, (uint64_t *)&unk_1FA950);
}

uint64_t sub_157DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  objc_class *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t *v34;
  objc_class *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  objc_super v48;
  objc_super v49;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v5);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v21 = (void *)Strong;
    v47 = a2;
    v22 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v48.receiver = v21;
    v48.super_class = v22;
    v23 = objc_msgSendSuper2(&v48, "dataSource");
    if (v23)
    {
      v24 = v23;
      v25 = type metadata accessor for CompositeCollectionViewController();
      v26 = swift_dynamicCastClass(v24, v25);
      if (v26)
      {
        v45 = v26;
        v27 = objc_msgSend(v21, "indexPathForCell:", a1);
        if (v27)
        {
          v28 = v27;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v27);

          v29 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
          v29(v12, v16, v13);
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
          v30((uint64_t)v12, 0, 1, v13);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
          {
            v29(v19, v12, v13);
            v31 = *(_QWORD *)(v45 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
            swift_retain();
            v12 = v46;
            sub_94CB4(0, 0, 0, (uint64_t)v46);

            swift_unknownObjectRelease(v24);
            v32 = swift_release(v31);
            (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v19, v13, v32);
            v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v12, 1, v33) != 1)
            {
              swift_unknownObjectRelease(*(_QWORD *)v12);
              v42 = &v12[*(int *)(v33 + 48)];
              v43 = v47;
              v29((char *)v47, v42, v13);
              v40 = v43;
              v41 = 0;
              return v30(v40, v41, 1, v13);
            }
            v34 = &qword_1FA938;
LABEL_16:
            sub_9944((uint64_t)v12, v34);
            v40 = v47;
            v41 = 1;
            return v30(v40, v41, 1, v13);
          }
        }
        else
        {
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
          v30((uint64_t)v12, 1, 1, v13);
        }

        swift_unknownObjectRelease(v24);
        v34 = (uint64_t *)&unk_1FA950;
        goto LABEL_16;
      }
      swift_unknownObjectRelease(v24);
    }

    a2 = v47;
  }
  v35 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v49.receiver = v2;
  v49.super_class = v35;
  v36 = objc_msgSendSuper2(&v49, "indexPathForCell:", a1);
  if (v36)
  {
    v37 = v36;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v36);

    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, v38, 1, v13);
  return sub_982C((uint64_t)v9, a2, (uint64_t *)&unk_1FA950);
}

id sub_158254(uint64_t a1)
{
  return sub_158260(a1, (SEL *)&selRef_cellForItemAtIndexPath_);
}

id sub_158260(uint64_t a1, SEL *a2)
{
  char *v2;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  objc_class *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  Class v25;
  id v26;
  Class isa;
  objc_class *v28;
  uint64_t v30;
  int v31;
  objc_super v32;
  objc_super v33;

  v4 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_9;
  v11 = (void *)Strong;
  v12 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v32.receiver = v11;
  v32.super_class = v12;
  v13 = objc_msgSendSuper2(&v32, "dataSource");
  if (!v13)
    goto LABEL_7;
  v14 = v13;
  v15 = type metadata accessor for CompositeCollectionViewController();
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
  {
    swift_unknownObjectRelease(v14);
LABEL_7:

LABEL_9:
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v28 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v33.receiver = v4;
    v33.super_class = v28;
    v26 = objc_msgSendSuper2(&v33, *a2, isa);

    return v26;
  }
  v17 = v16;
  v18 = sub_1AD34(v4);
  if (!v18)
  {

    swift_unknownObjectRelease(v14);
    goto LABEL_9;
  }
  v22 = (void *)v18;
  v31 = v21 & 1;
  v23 = *(_QWORD *)(v17 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  v24 = v19;
  v30 = v20;
  swift_retain();
  sub_953B0(a1, 0, 0, 0, v22, v24, v30, v31, (uint64_t)v9);
  swift_release(v23);
  v25 = IndexPath._bridgeToObjectiveC()().super.isa;
  v26 = objc_msgSend(v11, *a2, v25);

  swift_unknownObjectRelease(v22);
  swift_unknownObjectRelease(v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v26;
}

id sub_158464(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  v12 = sub_158260((uint64_t)v10, a4);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

void sub_158510(void (*a1)(char *, char *, uint64_t))
{
  sub_158534(a1, (SEL *)&selRef_deleteSections_);
}

void sub_158528(void (*a1)(char *, char *, uint64_t))
{
  sub_158534(a1, (SEL *)&selRef_insertSections_);
}

void sub_158534(void (*a1)(char *, char *, uint64_t), SEL *a2)
{
  char *v2;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  objc_class *v20;
  uint64_t Strong;
  void *v22;
  objc_class *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(_BYTE *, _QWORD);
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  NSIndexSet *v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  SEL *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _BYTE v67[32];
  objc_super v68;
  objc_super v69;

  v4 = v2;
  v6 = type metadata accessor for IndexSet.Index(0);
  v66 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v63 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - v9;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA960);
  __chkstk_darwin(v57);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexSet(0);
  v64 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v65 = (char *)&v52 - v17;
  IndexSet._bridgeToObjectiveC()((NSIndexSet *)((char *)&v52 - v17));
  v19 = v18;
  v20 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v69.receiver = v4;
  v69.super_class = v20;
  objc_msgSendSuper2(&v69, *a2, v19);

  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    return;
  v22 = (void *)Strong;
  v56 = a1;
  v23 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v68.receiver = v22;
  v68.super_class = v23;
  v24 = objc_msgSendSuper2(&v68, "dataSource");
  if (!v24)
  {
LABEL_11:

    return;
  }
  v25 = v24;
  v26 = type metadata accessor for CompositeCollectionViewController();
  v27 = swift_dynamicCastClass(v25, v26);
  if (!v27)
  {
    swift_unknownObjectRelease(v25);
    goto LABEL_11;
  }
  v61 = v27;
  v28 = (void *)sub_1AD34(v4);
  v59 = v30;
  v60 = v31;
  v62 = v28;
  if (v28)
  {
    v53 = v25;
    v54 = v22;
    v55 = a2;
    v58 = v29 & 1;
    v32 = IndexSet.init()();
    IndexSet.makeIterator()(v32);
    v33 = &v12[*(int *)(v57 + 36)];
    v56 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v57 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
    while (1)
    {
      v56(v10, v33, v6);
      v34 = sub_8330(&qword_1FA968, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v35 = (char *)v63;
      dispatch thunk of Collection.endIndex.getter((char *)v63, v13, v34);
      v36 = sub_8330(&qword_1FA970, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
      v37 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v35, v6, v36);
      v38 = *(void (**)(char *, uint64_t))(v66 + 8);
      v38(v35, v6);
      v38(v10, v6);
      if ((v37 & 1) != 0)
      {
        sub_9944((uint64_t)v12, &qword_1FA960);
        v45 = *(_QWORD *)(v61 + v57);
        swift_retain();
        v46 = v62;
        sub_94B9C((uint64_t)v62, v59, v60, v58);
        swift_release(v45);
        v47 = v65;
        IndexSet._bridgeToObjectiveC()(v48);
        v50 = v49;
        v51 = v54;
        objc_msgSend(v54, *v55, v49);

        swift_unknownObjectRelease(v46);
        swift_unknownObjectRelease(v53);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v13);
        return;
      }
      v39 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v67, v33, v13, v34);
      v41 = *v40;
      v39(v67, 0);
      v42 = v64;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v15, v12, v13);
      dispatch thunk of Collection.formIndex(after:)(v33, v13, v34);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v13);
      v43 = *(_QWORD *)(v61 + v57);
      swift_retain();
      v44 = sub_958B0(v62, v59, v60, v58);
      swift_release(v43);
      if (__OFADD__(v41, v44))
        break;
      IndexSet.insert(_:)(v41 + v44);
    }
    __break(1u);
  }
  else
  {

    swift_unknownObjectRelease(v25);
  }
}

void sub_158980(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  objc_super v32;

  v32.receiver = v2;
  v32.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  objc_msgSendSuper2(&v32, "moveSection:toSection:", a1, a2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v6 = Strong;
    v31.receiver = Strong;
    v31.super_class = (Class)type metadata accessor for CompositeCollectionView();
    v7 = objc_msgSendSuper2(&v31, "dataSource");
    if (v7)
    {
      v8 = v7;
      v9 = type metadata accessor for CompositeCollectionViewController();
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1AD34(v2);
        if (v12)
        {
          v16 = (void *)v12;
          v17 = v13;
          v18 = v14;
          v19 = v15 & 1;
          v29 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
          v20 = *(_QWORD *)(v11 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
          swift_retain();
          v30 = v17;
          v21 = sub_958B0(v16, v17, v18, v19);
          swift_release(v20);
          v22 = __OFADD__(a1, v21);
          v23 = a1 + v21;
          if (v22)
          {
            __break(1u);
          }
          else
          {
            v24 = *(_QWORD *)(v11 + v29);
            swift_retain();
            v25 = sub_958B0(v16, v30, v18, v19);
            swift_release(v24);
            v22 = __OFADD__(a2, v25);
            v26 = a2 + v25;
            if (!v22)
            {
              v27 = *(_QWORD *)(v11 + v29);
              swift_retain();
              sub_94B9C((uint64_t)v16, v30, v18, v19);
              objc_msgSend(v6, "moveSection:toSection:", v23, v26, swift_release(v27).n128_f64[0]);

              swift_unknownObjectRelease(v8);
              v28 = v16;
LABEL_11:
              swift_unknownObjectRelease(v28);
              return;
            }
          }
          __break(1u);
          return;
        }

        v28 = v8;
        goto LABEL_11;
      }
      swift_unknownObjectRelease(v8);
    }

  }
}

void sub_158BB8(void (*a1)(char *, char *, uint64_t))
{
  sub_158534(a1, (SEL *)&selRef_reloadSections_);
}

uint64_t sub_158BD0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexSet(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (void (*)(char *, char *, uint64_t))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  v12 = a1;
  sub_158534(v11, a4);

  return (*(uint64_t (**)(void (*)(char *, char *, uint64_t), uint64_t))(v8 + 8))(v11, v7);
}

void sub_158C74(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  char v5;
  uint64_t Strong;
  void *v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  char v23;
  uint64_t ObjCClassFromObject;
  void *v25;
  uint64_t ObjCClassMetadata;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  char v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  double v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  objc_super v45;
  objc_super v46;
  objc_super v47;
  objc_super v48;
  objc_super v49;

  v2 = v1;
  v4 = OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_isInvalidatingLayout;
  v5 = v1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_isInvalidatingLayout];
  v1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_isInvalidatingLayout] = 1;
  v49.receiver = v1;
  v49.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  objc_msgSendSuper2(&v49, "_invalidateLayoutWithContext:", a1);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    goto LABEL_11;
  v7 = (void *)Strong;
  v8 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v48.receiver = v7;
  v48.super_class = v8;
  v9 = objc_msgSendSuper2(&v48, "collectionViewLayout");
  v10 = type metadata accessor for CompositeCollectionViewLayout();
  v11 = *(_BYTE *)(swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0)
                 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_isInvalidatingLayout);

  if ((v11 & 1) != 0)
    goto LABEL_10;
  if ((*((_BYTE *)v7 + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates) & 1) != 0)
    goto LABEL_10;
  v47.receiver = v7;
  v47.super_class = v8;
  v12 = objc_msgSendSuper2(&v47, "dataSource");
  if (!v12)
    goto LABEL_10;
  v13 = v12;
  v14 = type metadata accessor for CompositeCollectionViewController();
  v15 = swift_dynamicCastClass(v13, v14);
  if (!v15)
  {
    swift_unknownObjectRelease(v13);
LABEL_10:

    goto LABEL_11;
  }
  v16 = v15;
  v17 = sub_1AD34(v2);
  v42 = v20;
  v43 = v19;
  v44 = (void *)v17;
  if (!v17)
  {

    swift_unknownObjectRelease(v13);
    goto LABEL_11;
  }
  v21 = v18;
  v40 = v16;
  v41 = v13;
  v46.receiver = v7;
  v46.super_class = v8;
  v22 = objc_msgSendSuper2(&v46, "collectionViewLayout");
  v23 = v21;
  ObjCClassFromObject = swift_getObjCClassFromObject();

  v25 = (void *)ObjCClassFromObject;
  LOBYTE(ObjCClassFromObject) = v23;
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v25, "invalidationContextClass"));
  v27 = sub_F174(0, &qword_200F68, UICollectionViewLayoutInvalidationContext_ptr);
  swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v27, 0, 0, 0);
  v28 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v29 = type metadata accessor for CompositeCollectionViewLayout.InvalidationContext();
  v39 = v28;
  v30 = v28;
  v31 = ObjCClassFromObject;
  v32 = (char *)swift_dynamicCastClassUnconditional(v30, v29, 0, 0, 0);
  v33 = &v32[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_sourceComponentItem];
  v34 = *(_QWORD *)&v32[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_sourceComponentItem];
  *(_QWORD *)v33 = v44;
  *((_QWORD *)v33 + 1) = v43;
  *((_QWORD *)v33 + 2) = v42;
  v33[24] = v31;
  swift_unknownObjectRetain(v44);
  swift_unknownObjectRelease(v34);
  if (a1)
  {
    v35 = v31 & 1;
    v36 = *(_QWORD *)(v40 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
    swift_retain();
    sub_15B374(a1, v32, v36, v44, v43, v42, v35, 1);
    *(_QWORD *)&v37 = swift_release(v36).n128_u64[0];
    v45.receiver = v7;
    v45.super_class = v8;
    v38 = objc_msgSendSuper2(&v45, "collectionViewLayout", v37);
    objc_msgSend(v38, "invalidateLayoutWithContext:", v32);

    swift_unknownObjectRelease(v41);
    swift_unknownObjectRelease(v44);

LABEL_11:
    *((_BYTE *)v2 + v4) = v5;
    return;
  }
  __break(1u);
}

id sub_158FE8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  Class v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  id v13;
  objc_class *v14;
  _BYTE v17[24];
  objc_super v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v8 = (Class)Strong;
    v9 = type metadata accessor for IndexPath(0);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    v11 = (uint64_t)&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath];
    swift_beginAccess(v11, v17, 33, 0);
    sub_FCE34((uint64_t)v6, v11);
    swift_endAccess(v17);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v13 = -[objc_class beginInteractiveMovementForItemAtIndexPath:](v8, "beginInteractiveMovementForItemAtIndexPath:", isa);

  }
  else
  {
    v8 = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v18.receiver = v2;
    v18.super_class = v14;
    v13 = objc_msgSendSuper2(&v18, "beginInteractiveMovementForItemAtIndexPath:", v8);
  }

  return v13;
}

void sub_1591E0(double a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  objc_class *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  objc_class *v29;
  void *v30;
  Class isa;
  id v32;
  uint64_t v33;
  char v34;
  void *v35;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxY;
  double v41;
  double v42;
  double MinY;
  double v44;
  double v45;
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  _BYTE v51[24];
  objc_super v52;
  objc_super v53;
  objc_super v54;
  CGRect v55;
  CGRect v56;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v6);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
  {
    v29 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v54.receiver = v2;
    v54.super_class = v29;
    objc_msgSendSuper2(&v54, "updateInteractiveMovementTargetPosition:", a1, a2);
    return;
  }
  v14 = (void *)Strong;
  v15 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v53.receiver = v14;
  v53.super_class = v15;
  v16 = objc_msgSendSuper2(&v53, "dataSource");
  if (!v16)
    goto LABEL_11;
  v17 = v16;
  v18 = type metadata accessor for CompositeCollectionViewController();
  if (!swift_dynamicCastClass(v17, v18) || (v19 = sub_1AD34(v2)) == 0)
  {
    v30 = v17;
LABEL_10:
    swift_unknownObjectRelease(v30);
    goto LABEL_11;
  }
  v23 = (void *)v19;
  v47 = v22;
  v48 = v21;
  v49 = v20;
  v52.receiver = v14;
  v52.super_class = v15;
  v24 = objc_msgSendSuper2(&v52, "collectionViewLayout");
  v25 = type metadata accessor for CompositeCollectionViewLayout();
  v26 = swift_dynamicCastClass(v24, v25);
  if (!v26)
  {
    swift_unknownObjectRelease(v17);
    swift_unknownObjectRelease(v23);

    goto LABEL_11;
  }
  v27 = (char *)v26;
  v50 = v23;
  v28 = (uint64_t)&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath];
  swift_beginAccess(&v3[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath], v51, 0, 0);
  sub_FCE7C(v28, (uint64_t)v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_unknownObjectRelease(v17);

    swift_unknownObjectRelease(v50);
    sub_9944((uint64_t)v8, (uint64_t *)&unk_1FA950);
LABEL_11:
    objc_msgSend(v14, "updateInteractiveMovementTargetPosition:", a1, a2);

    return;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v27, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v32)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    swift_unknownObjectRelease(v17);

    v30 = v50;
    goto LABEL_10;
  }
  v33 = *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData];
  if (v33)
  {
    v34 = v47 & 1;
    swift_retain();
    v35 = v50;
    sub_CEA0C(v50, v49, v48, v34, (uint64_t)&v55);
    swift_release(v33);
    x = v55.origin.x;
    y = v55.origin.y;
    width = v55.size.width;
    height = v55.size.height;
    MaxY = CGRectGetMaxY(v55);
    objc_msgSend(v32, "size");
    if (MaxY - v41 * 0.5 >= a2)
      v42 = a2;
    else
      v42 = MaxY - v41 * 0.5;
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = width;
    v56.size.height = height;
    MinY = CGRectGetMinY(v56);
    objc_msgSend(v32, "size");
    v45 = v44;

    swift_unknownObjectRelease(v35);
    swift_unknownObjectRelease(v17);
    if (v42 > MinY + v45 * 0.5)
      a2 = v42;
    else
      a2 = MinY + v45 * 0.5;
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_11;
  }
  __break(1u);
}

void sub_15962C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  objc_class *v8;
  uint64_t v9;
  objc_super v10;
  _BYTE v11[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath];
  swift_beginAccess(&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath], v11, 33, 0);
  sub_FCE34((uint64_t)v3, v5);
  swift_endAccess(v11);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, "endInteractiveMovement");

  }
  else
  {
    v8 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
    v10.receiver = v0;
    v10.super_class = v8;
    objc_msgSendSuper2(&v10, "endInteractiveMovement");
  }
}

double sub_15975C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char *v4;
  void *Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  objc_class *v14;
  double result;
  _QWORD *v16;
  char *v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;
  objc_super v24;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
  {
LABEL_4:
    if (a1)
    {
      v11 = swift_allocObject(&unk_1D3E70, 32, 7);
      *(_QWORD *)(v11 + 16) = a1;
      *(_QWORD *)(v11 + 24) = a2;
      v22 = sub_ECE4;
      v23 = v11;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_F318;
      v21 = &block_descriptor_10_4;
      v12 = _Block_copy(&v18);
      swift_release(v23);
      if (!a3)
      {
LABEL_7:
        v14 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
        v24.receiver = v4;
        v24.super_class = v14;
        objc_msgSendSuper2(&v24, "performBatchUpdates:completion:", v12, a3);
        _Block_release(a3);
        _Block_release(v12);
        return result;
      }
    }
    else
    {
      v12 = 0;
      if (!a3)
        goto LABEL_7;
    }
    v22 = (uint64_t (*)())a3;
    v23 = a4;
    v18 = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_153D78;
    v21 = &block_descriptor_39;
    a3 = _Block_copy(&v18);
    v13 = v23;
    swift_retain();
    swift_release(v13);
    goto LABEL_7;
  }
  v10 = Strong;
  if ((*((_BYTE *)Strong + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates) & 1) != 0)
  {

    goto LABEL_4;
  }
  v16 = (_QWORD *)swift_allocObject(&unk_1D3EC0, 40, 7);
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v17 = v4;
  sub_2BE00(a1, a2);
  sub_E6E04((uint64_t)sub_15CF10, (uint64_t)v16, (uint64_t (*)())a3, a4);

  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_159934(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  objc_class *v8;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  if (a2)
  {
    v6 = swift_allocObject(&unk_1D3EE8, 32, 7);
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = a3;
    v9[4] = sub_61110;
    v10 = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_F318;
    v9[3] = &block_descriptor_20_0;
    v7 = _Block_copy(v9);
    swift_release(v10);
  }
  else
  {
    v7 = 0;
  }
  v8 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v11.receiver = a1;
  v11.super_class = v8;
  objc_msgSendSuper2(&v11, "performBatchUpdates:completion:", v7, 0);
  _Block_release(v7);
}

void sub_159C6C(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v5;
  double *v10;
  void *Strong;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  char v19;
  char v20;
  objc_class *v21;
  objc_super v22;
  objc_super v23;
  objc_super v24;

  v5 = v4;
  v10 = (double *)&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset];
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v12 = Strong;
    v23.receiver = Strong;
    v23.super_class = (Class)type metadata accessor for CompositeCollectionView();
    v13 = objc_msgSendSuper2(&v23, "collectionViewLayout");
    v14 = type metadata accessor for CompositeCollectionViewLayout();
    v15 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0)
                    + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData);
    swift_retain();

    v16 = sub_94A98();
    swift_release(v15);
    v17 = v5;
    v18 = sub_15B2C0((uint64_t)v16, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v16);

    if ((v20 & 1) == 0 && v18 >= 1)
    {
      v22.receiver = v17;
      v22.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
      objc_msgSendSuper2(&v22, "setContentInset:", 0.0, a2, 0.0, a4);

      return;
    }

  }
  v21 = (objc_class *)type metadata accessor for CompositeComponentCollectionView(0);
  v24.receiver = v5;
  v24.super_class = v21;
  objc_msgSendSuper2(&v24, "setContentInset:", a1, a2, a3, a4);
}

double sub_159F60()
{
  char *v0;
  void *Strong;
  double result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;
  objc_super v20;

  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  objc_msgSendSuper2(&v20, "reloadData");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (!Strong)
    return result;
  v3 = Strong;
  v19.receiver = Strong;
  v19.super_class = (Class)type metadata accessor for CompositeCollectionView();
  v4 = objc_msgSendSuper2(&v19, "dataSource");
  if (!v4)
  {
LABEL_7:

    return result;
  }
  v5 = (uint64_t)v4;
  v6 = type metadata accessor for CompositeCollectionViewController();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
  {
    swift_unknownObjectRelease(v5);
    goto LABEL_7;
  }
  v8 = v7;
  v9 = sub_1AD34(v0);
  if (v9)
  {
    v13 = v9;
    v14 = v10;
    v15 = v11;
    v16 = v12 & 1;
    v17 = *(_QWORD *)(v8 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
    swift_retain();
    sub_94B9C(v13, v14, v15, v16);
    objc_msgSend(v3, "reloadData", swift_release(v17).n128_f64[0]);

    swift_unknownObjectRelease(v5);
    v18 = v13;
  }
  else
  {

    v18 = v5;
  }
  *(_QWORD *)&result = swift_unknownObjectRelease(v18).n128_u64[0];
  return result;
}

void sub_15A0F4(char *a1, double a2, double a3, uint64_t a4, void *a5, SEL *a6)
{
  uint64_t Strong;
  void *v12;
  id v13;
  char *v14;
  objc_super v15;

  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView]);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = a5;
    v14 = a1;
    objc_msgSend(v12, *a6, v13, a2, a3);

  }
  else
  {
    v15.receiver = a1;
    v15.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
    objc_msgSendSuper2(&v15, *a6, a5, a2, a3);
  }
}

Swift::Int sub_15A28C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = *((_BYTE *)v0 + 32);
  Hasher.init(_seed:)(v9, 0);
  v6 = v1;
  v7 = v2;
  if ((v5 & 1) != 0)
  {
    String.hash(into:)(v9, v1, v2);
    v6 = v3;
    v7 = v4;
  }
  String.hash(into:)(v9, v6, v7);
  return Hasher._finalize()();
}

uint64_t sub_15A300(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v2 = a1;
  v3 = *v1;
  v4 = v1[1];
  if ((v1[4] & 1) != 0)
  {
    v7 = v1 + 2;
    v5 = v1[2];
    v6 = v7[1];
    String.hash(into:)(a1, v3, v4);
    a1 = v2;
    v3 = v5;
    v4 = v6;
  }
  return String.hash(into:)(a1, v3, v4);
}

Swift::Int sub_15A350(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((_BYTE *)v1 + 32);
  Hasher.init(_seed:)(v10, a1);
  v7 = v2;
  v8 = v3;
  if ((v6 & 1) != 0)
  {
    String.hash(into:)(v10, v2, v3);
    v7 = v4;
    v8 = v5;
  }
  String.hash(into:)(v10, v7, v8);
  return Hasher._finalize()();
}

uint64_t sub_15A3C0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_CE160(a1, (uint64_t)v4);
  sub_CE160(a2, (uint64_t)v5);
  return sub_15B1C0((uint64_t)v4, (uint64_t)v5) & 1;
}

id sub_15A46C(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  char *v9;
  id v10;
  objc_super v12;

  v1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_isInvalidatingLayout] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView], 0);
  v3 = OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses;
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_CAE54((uint64_t)_swiftEmptyArrayStorage);
  v5 = &v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath];
  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset];
  v8 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v7 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v7 + 1) = v8;
  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;

  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

id sub_15A588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_15A620()
{
  return type metadata accessor for CompositeComponentCollectionView(0);
}

uint64_t type metadata accessor for CompositeComponentCollectionView(uint64_t a1)
{
  uint64_t result;

  result = qword_2048D0;
  if (!qword_2048D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CompositeComponentCollectionView);
  return result;
}

void sub_15A664(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_175838;
  v4[1] = &unk_175850;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_FCDE0(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_175868;
    v4[5] = &unk_175880;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t destroy for CompositeComponentCollectionView.ReusableViewClassKey(uint64_t a1)
{
  return sub_15A71C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_15A71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a2);
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease(a4);
  return result;
}

uint64_t initializeWithCopy for CompositeComponentCollectionView.ReusableViewClassKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_CE1D0(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for CompositeComponentCollectionView.ReusableViewClassKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_CE1D0(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_15A71C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for CompositeComponentCollectionView.ReusableViewClassKey(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_15A71C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeComponentCollectionView.ReusableViewClassKey(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositeComponentCollectionView.ReusableViewClassKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_15A900(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_15A908(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CompositeComponentCollectionView.ReusableViewClassKey()
{
  return &type metadata for CompositeComponentCollectionView.ReusableViewClassKey;
}

unint64_t sub_15A928()
{
  unint64_t result;

  result = qword_2048E0;
  if (!qword_2048E0)
  {
    result = swift_getWitnessTable(&unk_1758B8, &type metadata for CompositeComponentCollectionView.ReusableViewClassKey);
    atomic_store(result, (unint64_t *)&qword_2048E0);
  }
  return result;
}

uint64_t sub_15A96C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v3 = sub_13A05C(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v7 = *v1;
  v11 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_13F8C4();
    v7 = v11;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_15ADCC(v5, v7);
  v9 = *v2;
  *v2 = v7;
  swift_bridgeObjectRelease(v9);
  return v8;
}

uint64_t sub_15AA00(unint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain(v4);
    a1 = sub_13A2AC(a1);
    v12 = v11;
    swift_bridgeObjectRelease(v4);
    if ((v12 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v4 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_140488();
        v4 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v6 = (id)a1;
  v7 = __CocoaDictionary.lookup(_:)();

  if (!v7)
  {
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  swift_unknownObjectRelease(v7);
  v8 = __CocoaDictionary.count.getter(v5);
  v4 = sub_EF34(v5, v8);
  swift_retain();
  a1 = sub_13A2AC((uint64_t)v6);
  v10 = v9;
  swift_release(v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * a1);
  sub_15AC1C(a1, v4);
  v15 = *v2;
  *v2 = v4;
  swift_bridgeObjectRelease(v15);
  return v14;
}

uint64_t sub_15AB4C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_13A3DC(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v13 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_140BE8();
    v8 = v13;
  }
  v9 = *(_QWORD *)(v8 + 48) + 40 * v5;
  sub_15A71C(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_BYTE *)(v9 + 32));
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_15AF60(v5, v8);
  v11 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v11);
  return v10;
}

void sub_15AC1C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_15ADCC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_15AF60(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD v39[9];

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      v36 = v2;
      v37 = v4;
      do
      {
        v38 = v3;
        v9 = v7;
        v10 = 40 * v6;
        v11 = *(_QWORD *)(v2 + 40);
        v12 = *(_QWORD *)(v2 + 48) + 40 * v6;
        v14 = *(_QWORD *)v12;
        v13 = *(_QWORD *)(v12 + 8);
        v16 = *(_QWORD *)(v12 + 16);
        v15 = *(_QWORD *)(v12 + 24);
        v17 = *(_BYTE *)(v12 + 32);
        Hasher.init(_seed:)(v39, v11);
        swift_bridgeObjectRetain(v13);
        if ((v17 & 1) != 0)
        {
          swift_bridgeObjectRetain(v15);
          String.hash(into:)(v39, v14, v13);
          v18 = v16;
          v19 = v15;
        }
        else
        {
          v18 = v14;
          v19 = v13;
        }
        String.hash(into:)(v39, v18, v19);
        v20 = Hasher._finalize()();
        result = sub_15A71C(v14, v13, v16, v15, v17);
        v7 = v9;
        v21 = v20 & v9;
        v3 = v38;
        if (v38 >= (uint64_t)v8)
        {
          v2 = v36;
          v4 = v37;
          if (v21 < v8)
            goto LABEL_5;
        }
        else
        {
          v2 = v36;
          v4 = v37;
          if (v21 >= v8)
            goto LABEL_14;
        }
        if (v38 >= (uint64_t)v21)
        {
LABEL_14:
          v22 = *(_QWORD *)(v2 + 48);
          v23 = v22 + 40 * v38;
          v24 = (__int128 *)(v22 + v10);
          if (40 * v38 < v10 || v23 >= (unint64_t)v24 + 40 || v38 != v6)
          {
            v25 = *v24;
            v26 = v24[1];
            *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
            *(_OWORD *)v23 = v25;
            *(_OWORD *)(v23 + 16) = v26;
          }
          v27 = *(_QWORD *)(v2 + 56);
          v28 = (_QWORD *)(v27 + 8 * v38);
          v29 = (_QWORD *)(v27 + 8 * v6);
          if (v38 != v6 || (v3 = v6, v28 >= v29 + 1))
          {
            *v28 = *v29;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v30 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v31 = *v30;
    v32 = (-1 << v3) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v4 + 8 * (result >> 6));
    v32 = *v30;
    v31 = (-1 << result) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(v2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v35;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_15B1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[4];
  char v24;

  sub_CE160(a1, (uint64_t)v23);
  v3 = v23[0];
  v4 = v23[1];
  if ((v24 & 1) == 0)
  {
    sub_CE160(a2, (uint64_t)&v18);
    if ((v22 & 1) == 0)
    {
      v14 = v18;
      v15 = v19;
      if (v3 != v18 || v4 != v19)
      {
        v12 = v3;
        v13 = v4;
        goto LABEL_18;
      }
LABEL_19:
      v11 = 1;
      return v11 & 1;
    }
    goto LABEL_12;
  }
  v5 = v23[2];
  v6 = v23[3];
  sub_CE160(a2, (uint64_t)&v18);
  if (v22 != 1)
  {
LABEL_12:
    v11 = 0;
    return v11 & 1;
  }
  v7 = v20;
  v8 = v21;
  v9 = v3 == v18 && v4 == v19;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v18, v19, 0), v11 = 0, (v10 & 1) != 0))
  {
    if (v5 != v7 || v6 != v8)
    {
      v12 = v5;
      v13 = v6;
      v14 = v7;
      v15 = v8;
LABEL_18:
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v14, v15, 0);
      return v11 & 1;
    }
    goto LABEL_19;
  }
  return v11 & 1;
}

uint64_t sub_15B2C0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = 0;
  for (i = (uint64_t *)(a1 + 40); ; i += 4)
  {
    v6 = *(i - 1);
    v7 = *i;
    ObjectType = swift_getObjectType(v6);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    swift_unknownObjectRetain(v6);
    v10 = (void *)v9(ObjectType, v7);
    swift_unknownObjectRelease(v6);

    if (v10 == a2)
      break;
    if (v2 == ++v4)
      return 0;
  }
  return v4;
}

void sub_15B374(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  unsigned __int8 v55;
  id v56;
  id v57;
  unsigned __int8 v58;
  char *v59;
  id v60;
  uint64_t v61;
  char *v62;
  double v63;
  id v64;
  double v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  Class isa;
  double v99;
  id v100;
  double v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char **v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  void (*v126)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  char *v150;
  NSString v151;
  Class v152;
  double v153;
  id v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  double v163;
  uint64_t v164;
  char *v165;
  unint64_t v166;
  unint64_t v167;
  char *v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  void (*v180)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  double *v189;
  void *v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  unint64_t v204;
  void (*v205)(char *, uint64_t);
  char *v206;
  NSString v207;
  Class v208;
  double v209;
  id v210;
  id v211;
  char *v212;
  void *v213;
  uint64_t v214;
  id v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  void (*v223)(char *, char *, uint64_t);
  char *v224;
  void (*v225)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v226;
  uint64_t (*v227)(char *, char *, uint64_t);
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  void (*v246)(char *, uint64_t);
  Class v247;
  double v248;
  id v249;
  void *v250;
  uint64_t v251;
  id v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  unint64_t v258;
  unint64_t v259;
  uint64_t v260;
  void (*v261)(char *, unint64_t, uint64_t);
  void (*v262)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v263;
  uint64_t (*v264)(char *, char *, uint64_t);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  uint64_t v282;
  void (*v283)(char *, uint64_t);
  Class v284;
  double v285;
  id v286;
  char *v287;
  char *v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t, uint64_t, uint64_t);
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  uint64_t v295;
  unint64_t v296;
  char *v297;
  id v298;
  char *v299;
  char *v300;
  uint64_t (*v301)(char *, char *, uint64_t);
  char *v302;
  void (*v303)(char *, unint64_t, uint64_t);
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  uint64_t v309;
  double v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  char *v315;
  void *v316;
  uint64_t v317;
  int v318;

  v309 = a5;
  v310 = *(double *)&a6;
  v316 = a4;
  v312 = a3;
  v317 = type metadata accessor for IndexPath(0);
  v313 = *(_QWORD *)(v317 - 8);
  __chkstk_darwin(v317);
  v292 = (char *)&v286 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v291 = (char *)&v286 - v14;
  __chkstk_darwin(v15);
  v302 = (char *)&v286 - v16;
  __chkstk_darwin(v17);
  v294 = (char *)&v286 - v18;
  __chkstk_darwin(v19);
  v293 = (char *)&v286 - v20;
  __chkstk_darwin(v21);
  v300 = (char *)&v286 - v22;
  __chkstk_darwin(v23);
  v25 = (void (*)(char *, unint64_t, uint64_t))((char *)&v286 - v24);
  __chkstk_darwin(v26);
  v28 = (char *)&v286 - v27;
  __chkstk_darwin(v29);
  v311 = (char *)&v286 - v30;
  __chkstk_darwin(v31);
  v315 = (char *)&v286 - v32;
  __chkstk_darwin(v33);
  v314 = (char *)&v286 - v34;
  __chkstk_darwin(v35);
  v37 = (char *)&v286 - v36;
  __chkstk_darwin(v38);
  v306 = (char *)&v286 - v39;
  __chkstk_darwin(v40);
  v297 = (char *)&v286 - v41;
  __chkstk_darwin(v42);
  v307 = (char *)&v286 - v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v44);
  v287 = (char *)&v286 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v288 = (char *)&v286 - v47;
  __chkstk_darwin(v48);
  v305 = (char *)&v286 - v49;
  __chkstk_darwin(v50);
  v308 = (char *)&v286 - v51;
  *(_QWORD *)&v53 = __chkstk_darwin(v52).n128_u64[0];
  v299 = (char *)&v286 - v54;
  v298 = a2;
  v55 = objc_msgSend(a2, "invalidateEverything", v53);
  v286 = a1;
  if ((v55 & 1) != 0)
    v56 = &dword_0 + 1;
  else
    v56 = objc_msgSend(a1, "invalidateEverything");
  v318 = a7 & 1;
  v57 = v298;
  objc_msgSend(v298, "_setInvalidateEverything:", v56, v286);
  v58 = objc_msgSend(v57, "invalidateDataSourceCounts");
  v59 = v307;
  if ((v58 & 1) != 0)
    v60 = &dword_0 + 1;
  else
    v60 = objc_msgSend(v286, "invalidateDataSourceCounts");
  v61 = v317;
  v62 = v299;
  objc_msgSend(v298, "_setInvalidateDataSourceCounts:", v60);
  if ((a8 & 1) != 0)
  {
    v64 = objc_msgSend(v286, "invalidatedItemIndexPaths");
    v304 = v28;
    if (v64)
    {
      v66 = v64;
      v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v61);

      v68 = *(_QWORD *)(v67 + 16);
      if (v68)
      {
        v69 = v313;
        v70 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        v289 = v67;
        v296 = v70;
        v71 = v67 + v70;
        v295 = *(_QWORD *)(v313 + 72);
        v303 = *(void (**)(char *, unint64_t, uint64_t))(v313 + 16);
        v72 = _swiftEmptyArrayStorage;
        while (1)
        {
          v303(v62, v71, v61);
          v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
          v73(v62, 0, 1, v61);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v62, 1, v61) == 1)
          {
            v67 = v289;
            goto LABEL_42;
          }
          v301 = *(uint64_t (**)(char *, char *, uint64_t))(v69 + 32);
          v74 = v301(v59, v62, v61);
          v75 = IndexPath.count.getter(v74);
          if (v75 == 2)
          {
            v76 = IndexPath.section.getter(2);
          }
          else if (v75 <= 0)
          {
            v76 = NSNotFound.getter();
          }
          else
          {
            v76 = IndexPath.subscript.getter(0);
          }
          v77 = v76;
          v78 = sub_958B0(v316, v309, *(uint64_t *)&v310, v318);
          v79 = v77 + v78;
          if (__OFADD__(v77, v78))
            goto LABEL_261;
          v80 = v307;
          v81 = IndexPath.count.getter(v78);
          if (v81 == 2)
          {
            v82 = IndexPath.section.getter(2);
            v83 = (unint64_t)v72;
            if (v79 != v82)
              goto LABEL_23;
          }
          else
          {
            v83 = (unint64_t)v72;
            if (v81 <= 0)
            {
              v82 = NSNotFound.getter();
              if (v79 != v82)
              {
LABEL_23:
                v87 = IndexPath.count.getter(v82);
                if (v87 >= 2)
                {
                  v89 = IndexPath.count.getter(v87);
                  if (v89 == 2)
                  {
                    v90 = IndexPath.item.getter(2);
                  }
                  else if (v89 <= 2)
                  {
                    v90 = NSNotFound.getter();
                  }
                  else
                  {
                    v90 = IndexPath.subscript.getter(1);
                  }
                  v91 = v79;
                  v84 = v297;
                  IndexPath.init(item:section:)(v90, v91);
                }
                else
                {
                  v88 = v79;
                  v84 = v297;
                  IndexPath.init(index:)(v88);
                }
                v86 = (void (*)(char *, char *, uint64_t))v303;
                goto LABEL_34;
              }
            }
            else
            {
              v82 = IndexPath.subscript.getter(0);
              if (v79 != v82)
                goto LABEL_23;
            }
          }
          v84 = v297;
          v85 = v80;
          v86 = (void (*)(char *, char *, uint64_t))v303;
          v303(v297, (unint64_t)v85, v61);
LABEL_34:
          v86(v306, v84, v61);
          if ((swift_isUniquelyReferenced_nonNull_native(v83) & 1) == 0)
            v83 = sub_134B8C(0, *(_QWORD *)(v83 + 16) + 1, 1, v83);
          v93 = *(_QWORD *)(v83 + 16);
          v92 = *(_QWORD *)(v83 + 24);
          v290 = v73;
          if (v93 >= v92 >> 1)
            v83 = sub_134B8C(v92 > 1, v93 + 1, 1, v83);
          *(_QWORD *)(v83 + 16) = v93 + 1;
          v72 = (_QWORD *)v83;
          v94 = v295;
          v95 = v83 + v296 + v93 * v295;
          v61 = v317;
          v301((char *)v95, v306, v317);
          v69 = v313;
          v96 = *(void (**)(char *, uint64_t))(v313 + 8);
          v96(v84, v61);
          v97 = v307;
          v96(v307, v61);
          v59 = v97;
          v71 += v94;
          --v68;
          v62 = v299;
          if (!v68)
          {
            v67 = v289;
            v290(v299, 1, 1, v61);
            goto LABEL_42;
          }
        }
      }
      v72 = _swiftEmptyArrayStorage;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v313 + 56))(v62, 1, 1, v61);
LABEL_42:
      swift_bridgeObjectRelease(v67);
      if (v72[2])
      {
        isa = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v99 = swift_bridgeObjectRelease(v72).n128_u64[0];
        objc_msgSend(v298, "invalidateItemsAtIndexPaths:", isa, v99);

      }
      else
      {
        *(_QWORD *)&v65 = swift_bridgeObjectRelease(v72).n128_u64[0];
      }
    }
    v100 = objc_msgSend(v286, "invalidatedSupplementaryIndexPaths", v65);
    v303 = v25;
    if (v100)
    {
      v102 = v100;
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2048E8);
      v104 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v102, &type metadata for String, v103, &protocol witness table for String);

      v105 = 0;
      v106 = *(_QWORD *)(v104 + 64);
      v289 = v104 + 64;
      v295 = v104;
      v107 = 1 << *(_BYTE *)(v104 + 32);
      v108 = -1;
      if (v107 < 64)
        v108 = ~(-1 << v107);
      v109 = v108 & v106;
      v290 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((unint64_t)(v107 + 63) >> 6);
      v110 = v313;
      if ((v108 & v106) != 0)
        goto LABEL_51;
LABEL_52:
      v114 = v105 + 1;
      v113 = v308;
      if (__OFADD__(v105, 1))
        goto LABEL_260;
      if (v114 < (uint64_t)v290)
      {
        v115 = *(_QWORD *)(v289 + 8 * v114);
        ++v105;
        if (v115)
          goto LABEL_65;
        v105 = v114 + 1;
        if (v114 + 1 < (uint64_t)v290)
        {
          v115 = *(_QWORD *)(v289 + 8 * v105);
          if (v115)
            goto LABEL_65;
          v105 = v114 + 2;
          if (v114 + 2 < (uint64_t)v290)
          {
            v115 = *(_QWORD *)(v289 + 8 * v105);
            if (v115)
              goto LABEL_65;
            v116 = v114 + 3;
            if (v116 < (uint64_t)v290)
            {
              v115 = *(_QWORD *)(v289 + 8 * v116);
              if (v115)
              {
                v105 = v116;
LABEL_65:
                v109 = (v115 - 1) & v115;
                v112 = __clz(__rbit64(v115)) + (v105 << 6);
                while (1)
                {
                  v117 = *(_QWORD *)(v295 + 56);
                  v118 = (char **)(*(_QWORD *)(v295 + 48) + 16 * v112);
                  v119 = v118[1];
                  v299 = *v118;
                  v120 = *(_QWORD *)(v117 + 8 * v112);
                  v121 = *(_QWORD *)(v120 + 16);
                  v306 = v119;
                  v301 = (uint64_t (*)(char *, char *, uint64_t))v120;
                  if (v121)
                    break;
                  swift_bridgeObjectRetain(v119);
                  swift_bridgeObjectRetain(v120);
                  v125 = (uint64_t)_swiftEmptyArrayStorage;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v113, 1, 1, v61);
LABEL_99:
                  swift_bridgeObjectRelease(v301);
                  if (*(_QWORD *)(v125 + 16))
                  {
                    v150 = v306;
                    v151 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease(v150);
                    v152 = Array._bridgeToObjectiveC()().super.isa;
                    *(_QWORD *)&v153 = swift_bridgeObjectRelease(v125).n128_u64[0];
                    objc_msgSend(v298, "invalidateSupplementaryElementsOfKind:atIndexPaths:", v151, v152, v153);

                    v110 = v313;
                    if (!v109)
                      goto LABEL_52;
                  }
                  else
                  {
                    swift_bridgeObjectRelease(v306);
                    swift_bridgeObjectRelease(v125);
                    if (!v109)
                      goto LABEL_52;
                  }
LABEL_51:
                  v111 = __clz(__rbit64(v109));
                  v109 &= v109 - 1;
                  v112 = v111 | (v105 << 6);
                  v113 = v308;
                }
                v296 = v109;
                v297 = (char *)v105;
                v307 = (char *)((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
                v122 = &v307[v120];
                swift_bridgeObjectRetain(v119);
                swift_bridgeObjectRetain(v120);
                v123 = *(_QWORD *)(v110 + 72);
                v124 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
                v125 = (uint64_t)_swiftEmptyArrayStorage;
                while (1)
                {
                  v124(v113, v122, v61);
                  v126 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56);
                  v126(v113, 0, 1, v61);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v113, 1, v61) == 1)
                  {
                    v25 = v303;
                    v105 = (uint64_t)v297;
                    v109 = v296;
                    goto LABEL_99;
                  }
                  v127 = v61;
                  v128 = *(uint64_t (**)(char *, char *, uint64_t))(v110 + 32);
                  v129 = v128(v37, v113, v127);
                  v130 = IndexPath.count.getter(v129);
                  if (v130 == 2)
                  {
                    v131 = IndexPath.section.getter(2);
                  }
                  else if (v130 <= 0)
                  {
                    v131 = NSNotFound.getter();
                  }
                  else
                  {
                    v131 = IndexPath.subscript.getter(0);
                  }
                  v132 = v131;
                  v133 = sub_958B0(v316, v309, *(uint64_t *)&v310, v318);
                  v134 = __OFADD__(v132, v133);
                  v135 = v132 + v133;
                  if (v134)
                  {
                    __break(1u);
LABEL_254:
                    __break(1u);
LABEL_255:
                    __break(1u);
                    goto LABEL_256;
                  }
                  v136 = IndexPath.count.getter(v133);
                  if (v136 == 2)
                  {
                    v137 = IndexPath.section.getter(2);
                    if (v135 == v137)
                      goto LABEL_77;
                  }
                  else if (v136 <= 0)
                  {
                    v137 = NSNotFound.getter();
                    if (v135 == v137)
                    {
LABEL_77:
                      v138 = v314;
                      v139 = v317;
                      v124(v314, v37, v317);
                      goto LABEL_91;
                    }
                  }
                  else
                  {
                    v137 = IndexPath.subscript.getter(0);
                    if (v135 == v137)
                      goto LABEL_77;
                  }
                  v140 = IndexPath.count.getter(v137);
                  if (v140 >= 2)
                  {
                    v142 = IndexPath.count.getter(v140);
                    if (v142 == 2)
                    {
                      v143 = IndexPath.item.getter(2);
                    }
                    else if (v142 <= 2)
                    {
                      v143 = NSNotFound.getter();
                    }
                    else
                    {
                      v143 = IndexPath.subscript.getter(1);
                    }
                    v144 = v135;
                    v138 = v314;
                    IndexPath.init(item:section:)(v143, v144);
                  }
                  else
                  {
                    v141 = v135;
                    v138 = v314;
                    IndexPath.init(index:)(v141);
                  }
                  v139 = v317;
LABEL_91:
                  v124(v315, v138, v139);
                  if ((swift_isUniquelyReferenced_nonNull_native(v125) & 1) == 0)
                    v125 = sub_134B8C(0, *(_QWORD *)(v125 + 16) + 1, 1, v125);
                  v146 = *(_QWORD *)(v125 + 16);
                  v145 = *(_QWORD *)(v125 + 24);
                  if (v146 >= v145 >> 1)
                    v125 = sub_134B8C(v145 > 1, v146 + 1, 1, v125);
                  *(_QWORD *)(v125 + 16) = v146 + 1;
                  v147 = v317;
                  v128(&v307[v125 + v146 * v123], v315, v317);
                  v61 = v147;
                  v148 = v313;
                  v149 = *(void (**)(char *, uint64_t))(v313 + 8);
                  v149(v314, v61);
                  v149(v37, v61);
                  v110 = v148;
                  v122 += v123;
                  --v121;
                  v113 = v308;
                  if (!v121)
                  {
                    v25 = v303;
                    v105 = (uint64_t)v297;
                    v109 = v296;
                    v126(v308, 1, 1, v61);
                    goto LABEL_99;
                  }
                }
              }
              while (1)
              {
                v105 = v116 + 1;
                if (__OFADD__(v116, 1))
                  goto LABEL_263;
                if (v105 >= (uint64_t)v290)
                  break;
                v115 = *(_QWORD *)(v289 + 8 * v105);
                ++v116;
                if (v115)
                  goto LABEL_65;
              }
            }
          }
        }
      }
      *(_QWORD *)&v101 = swift_release(v295).n128_u64[0];
    }
    v154 = objc_msgSend(v286, "invalidatedDecorationIndexPaths", v101);
    if (!v154)
      goto LABEL_176;
    v155 = v154;
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_2048E8);
    v157 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v155, &type metadata for String, v156, &protocol witness table for String);

    v158 = 0;
    v159 = *(_QWORD *)(v157 + 64);
    v289 = v157 + 64;
    v295 = v157;
    v160 = 1 << *(_BYTE *)(v157 + 32);
    v161 = -1;
    if (v160 < 64)
      v161 = ~(-1 << v160);
    v162 = v161 & v159;
    v290 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((unint64_t)(v160 + 63) >> 6);
    v163 = v310;
    v164 = v313;
    v165 = v305;
    if ((v161 & v159) != 0)
      goto LABEL_109;
LABEL_110:
    v169 = v158 + 1;
    v168 = v311;
    if (__OFADD__(v158, 1))
      goto LABEL_262;
    if (v169 < (uint64_t)v290)
    {
      v170 = *(_QWORD *)(v289 + 8 * v169);
      ++v158;
      if (!v170)
      {
        v158 = v169 + 1;
        if (v169 + 1 >= (uint64_t)v290)
          goto LABEL_175;
        v170 = *(_QWORD *)(v289 + 8 * v158);
        if (!v170)
        {
          v158 = v169 + 2;
          if (v169 + 2 >= (uint64_t)v290)
            goto LABEL_175;
          v170 = *(_QWORD *)(v289 + 8 * v158);
          if (!v170)
          {
            v171 = v169 + 3;
            if (v171 >= (uint64_t)v290)
              goto LABEL_175;
            v170 = *(_QWORD *)(v289 + 8 * v171);
            if (!v170)
            {
              while (1)
              {
                v158 = v171 + 1;
                if (__OFADD__(v171, 1))
                  goto LABEL_264;
                if (v158 >= (uint64_t)v290)
                  goto LABEL_175;
                v170 = *(_QWORD *)(v289 + 8 * v158);
                ++v171;
                if (v170)
                  goto LABEL_123;
              }
            }
            v158 = v171;
          }
        }
      }
LABEL_123:
      v162 = (v170 - 1) & v170;
      v167 = __clz(__rbit64(v170)) + (v158 << 6);
      while (1)
      {
        v172 = *(_QWORD *)(v295 + 56);
        v173 = *(_QWORD *)(v295 + 48) + 16 * v167;
        v174 = *(_QWORD *)(v173 + 8);
        v301 = *(uint64_t (**)(char *, char *, uint64_t))v173;
        v175 = *(char **)(v172 + 8 * v167);
        v308 = (char *)*((_QWORD *)v175 + 2);
        if (v308)
          break;
        swift_bridgeObjectRetain(v174);
        swift_bridgeObjectRetain(v175);
        v206 = v175;
        v177 = (uint64_t)_swiftEmptyArrayStorage;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v164 + 56))(v165, 1, 1, v61);
LABEL_172:
        swift_bridgeObjectRelease(v206);
        if (!*(_QWORD *)(v177 + 16))
          goto LABEL_108;
LABEL_173:
        v207 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v174);
        v208 = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v209 = swift_bridgeObjectRelease(v177).n128_u64[0];
        objc_msgSend(v298, "invalidateDecorationElementsOfKind:atIndexPaths:", v207, v208, v209);

        v164 = v313;
        if (!v162)
          goto LABEL_110;
LABEL_109:
        v166 = __clz(__rbit64(v162));
        v162 &= v162 - 1;
        v167 = v166 | (v158 << 6);
        v168 = v311;
      }
      v297 = (char *)v162;
      v299 = (char *)v158;
      v306 = (char *)((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
      v307 = &v306[(_QWORD)v175];
      v296 = v174;
      swift_bridgeObjectRetain(v174);
      v314 = v175;
      swift_bridgeObjectRetain(v175);
      v176 = 0;
      v177 = (uint64_t)_swiftEmptyArrayStorage;
      while (1)
      {
        if ((unint64_t)v176 >= *((_QWORD *)v314 + 2))
          goto LABEL_254;
        v178 = *(_QWORD *)(v164 + 72);
        v179 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
        v179(v165, &v307[v178 * (_QWORD)v176], v61);
        v180 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v164 + 56);
        v180(v165, 0, 1, v61);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v165, 1, v61) == 1)
        {
          swift_bridgeObjectRelease(v314);
          v158 = (uint64_t)v299;
          v162 = (unint64_t)v297;
          v174 = v296;
          if (*(_QWORD *)(v177 + 16))
            goto LABEL_173;
LABEL_108:
          swift_bridgeObjectRelease(v174);
          swift_bridgeObjectRelease(v177);
          if (v162)
            goto LABEL_109;
          goto LABEL_110;
        }
        v315 = *(char **)(v164 + 32);
        v181 = ((uint64_t (*)(char *, char *, uint64_t))v315)(v168, v165, v61);
        v182 = IndexPath.count.getter(v181);
        if (v182 == 2)
        {
          v183 = IndexPath.section.getter(2);
        }
        else if (v182 <= 0)
        {
          v183 = NSNotFound.getter();
        }
        else
        {
          v183 = IndexPath.subscript.getter(0);
        }
        v184 = v183;
        v185 = sub_94A98();
        v186 = v185;
        v187 = v185[2];
        if (v187)
        {
          v188 = 0;
          v189 = (double *)(v185 + 7);
          v190 = v316;
          do
          {
            if (*((void **)v189 - 3) == v190)
            {
              if ((*(_BYTE *)v189 & 1) != 0)
              {
                if (v318)
                  goto LABEL_143;
              }
              else if (!v318)
              {
                v191 = static CGFloat.==~ infix(_:_:)(*(v189 - 1), v163);
                v190 = v316;
                if ((v191 & 1) != 0)
                  goto LABEL_143;
              }
            }
            ++v188;
            v189 += 4;
          }
          while (v187 != v188);
          v188 = 0;
LABEL_143:
          v25 = v303;
        }
        else
        {
          v188 = 0;
        }
        swift_bridgeObjectRelease(v186);
        v193 = v188 + 1;
        v194 = v304;
        if (__OFADD__(v188, 1))
          goto LABEL_255;
        v195 = 1000000 * v193;
        if ((unsigned __int128)(v193 * (__int128)1000000) >> 64 != (1000000 * v193) >> 63)
        {
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
          goto LABEL_258;
        }
        v134 = __OFADD__(v184, v195);
        v196 = v184 + v195;
        if (v134)
          goto LABEL_257;
        v197 = IndexPath.count.getter(v192);
        if (v197 == 2)
        {
          v198 = IndexPath.section.getter(2);
          v61 = v317;
          if (v196 != v198)
            goto LABEL_153;
        }
        else
        {
          v61 = v317;
          if (v197 <= 0)
          {
            v198 = NSNotFound.getter();
            if (v196 != v198)
            {
LABEL_153:
              v199 = v311;
              v200 = IndexPath.count.getter(v198);
              if (v200 >= 2)
              {
                v201 = IndexPath.count.getter(v200);
                if (v201 == 2)
                {
                  v202 = IndexPath.item.getter(2);
                }
                else if (v201 <= 2)
                {
                  v202 = NSNotFound.getter();
                }
                else
                {
                  v202 = IndexPath.subscript.getter(1);
                }
                IndexPath.init(item:section:)(v202, v196);
                v168 = v311;
              }
              else
              {
                IndexPath.init(index:)(v196);
                v168 = v199;
              }
              goto LABEL_163;
            }
          }
          else
          {
            v198 = IndexPath.subscript.getter(0);
            if (v196 != v198)
              goto LABEL_153;
          }
        }
        v168 = v311;
        v179(v194, v311, v61);
LABEL_163:
        v179((char *)v25, v194, v61);
        if ((swift_isUniquelyReferenced_nonNull_native(v177) & 1) == 0)
          v177 = sub_134B8C(0, *(_QWORD *)(v177 + 16) + 1, 1, v177);
        v204 = *(_QWORD *)(v177 + 16);
        v203 = *(_QWORD *)(v177 + 24);
        if (v204 >= v203 >> 1)
          v177 = sub_134B8C(v203 > 1, v204 + 1, 1, v177);
        ++v176;
        *(_QWORD *)(v177 + 16) = v204 + 1;
        ((void (*)(char *, _QWORD, uint64_t))v315)(&v306[v177 + v204 * v178], v25, v61);
        v164 = v313;
        v205 = *(void (**)(char *, uint64_t))(v313 + 8);
        v205(v194, v61);
        v205(v168, v61);
        v165 = v305;
        if (v176 == v308)
        {
          v158 = (uint64_t)v299;
          v162 = (unint64_t)v297;
          v174 = v296;
          v206 = v314;
          v180(v305, 1, 1, v61);
          goto LABEL_172;
        }
      }
    }
LABEL_175:
    *(_QWORD *)&v63 = swift_release(v295).n128_u64[0];
  }
LABEL_176:
  v210 = v286;
  v211 = objc_msgSend(v286, "previousIndexPathsForInteractivelyMovingItems", v63);
  v212 = v302;
  if (!v211)
    goto LABEL_214;
  v213 = v211;
  v214 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v211, v61);

  v215 = objc_msgSend(v298, "previousIndexPathsForInteractivelyMovingItems");
  if (v215)
  {
    v216 = v215;
    v217 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v215, v61);

  }
  else
  {
    v217 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v218 = v313;
  v219 = *(_QWORD *)(v214 + 16);
  if (!v219)
  {
    v210 = v286;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v313 + 56))(v288, 1, 1, v61);
    goto LABEL_213;
  }
  v220 = *(unsigned __int8 *)(v313 + 80);
  v314 = (char *)v214;
  v315 = (char *)((v220 + 32) & ~v220);
  v221 = &v315[v214];
  v222 = *(_QWORD *)(v313 + 72);
  v223 = *(void (**)(char *, char *, uint64_t))(v313 + 16);
  v224 = v288;
  while (1)
  {
    v223(v224, v221, v61);
    v225 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v218 + 56);
    v225(v224, 0, 1, v61);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v224, 1, v61) == 1)
      break;
    v226 = v61;
    v227 = *(uint64_t (**)(char *, char *, uint64_t))(v218 + 32);
    v228 = v227(v300, v224, v226);
    v229 = IndexPath.count.getter(v228);
    if (v229 == 2)
    {
      v230 = IndexPath.section.getter(2);
    }
    else if (v229 <= 0)
    {
      v230 = NSNotFound.getter();
    }
    else
    {
      v230 = IndexPath.subscript.getter(0);
    }
    v231 = v230;
    v232 = sub_958B0(v316, v309, *(uint64_t *)&v310, v318);
    v134 = __OFADD__(v231, v232);
    v233 = v231 + v232;
    if (v134)
    {
LABEL_258:
      __break(1u);
LABEL_259:
      __break(1u);
LABEL_260:
      __break(1u);
LABEL_261:
      __break(1u);
LABEL_262:
      __break(1u);
LABEL_263:
      __break(1u);
LABEL_264:
      __break(1u);
      return;
    }
    v234 = IndexPath.count.getter(v232);
    if (v234 == 2)
    {
      v235 = IndexPath.section.getter(2);
      if (v233 != v235)
        goto LABEL_194;
    }
    else if (v234 <= 0)
    {
      v235 = NSNotFound.getter();
      if (v233 != v235)
      {
LABEL_194:
        v238 = IndexPath.count.getter(v235);
        if (v238 >= 2)
        {
          v240 = IndexPath.count.getter(v238);
          if (v240 == 2)
          {
            v241 = IndexPath.item.getter(2);
          }
          else if (v240 <= 2)
          {
            v241 = NSNotFound.getter();
          }
          else
          {
            v241 = IndexPath.subscript.getter(1);
          }
          v242 = v233;
          v236 = v293;
          IndexPath.init(item:section:)(v241, v242);
        }
        else
        {
          v239 = v233;
          v236 = v293;
          IndexPath.init(index:)(v239);
        }
        v237 = v317;
        goto LABEL_205;
      }
    }
    else
    {
      v235 = IndexPath.subscript.getter(0);
      if (v233 != v235)
        goto LABEL_194;
    }
    v236 = v293;
    v237 = v317;
    v223(v293, v300, v317);
LABEL_205:
    v223(v294, v236, v237);
    if ((swift_isUniquelyReferenced_nonNull_native(v217) & 1) == 0)
      v217 = sub_134B8C(0, *(_QWORD *)(v217 + 16) + 1, 1, v217);
    v244 = *(_QWORD *)(v217 + 16);
    v243 = *(_QWORD *)(v217 + 24);
    if (v244 >= v243 >> 1)
      v217 = sub_134B8C(v243 > 1, v244 + 1, 1, v217);
    *(_QWORD *)(v217 + 16) = v244 + 1;
    v245 = v317;
    v227(&v315[v217 + v244 * v222], v294, v317);
    v61 = v245;
    v218 = v313;
    v246 = *(void (**)(char *, uint64_t))(v313 + 8);
    v246(v293, v61);
    v246(v300, v61);
    v221 += v222;
    --v219;
    v212 = v302;
    if (!v219)
    {
      v210 = v286;
      v214 = (uint64_t)v314;
      v225(v288, 1, 1, v61);
      goto LABEL_213;
    }
  }
  v210 = v286;
  v214 = (uint64_t)v314;
LABEL_213:
  swift_bridgeObjectRelease(v214);
  v247 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v248 = swift_bridgeObjectRelease(v217).n128_u64[0];
  objc_msgSend(v298, "_setPreviousIndexPathsForInteractivelyMovingItems:", v247, v248);

LABEL_214:
  v249 = objc_msgSend(v210, "targetIndexPathsForInteractivelyMovingItems");
  if (!v249)
    return;
  v250 = v249;
  v251 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v249, v61);

  v252 = objc_msgSend(v298, "targetIndexPathsForInteractivelyMovingItems");
  if (v252)
  {
    v253 = v252;
    v254 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v252, v61);

  }
  else
  {
    v254 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v255 = v313;
  v256 = v287;
  v257 = *(_QWORD *)(v251 + 16);
  if (!v257)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v313 + 56))(v287, 1, 1, v61);
    goto LABEL_251;
  }
  v258 = (*(unsigned __int8 *)(v313 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80);
  v314 = (char *)v251;
  v315 = (char *)v258;
  v259 = v251 + v258;
  v260 = *(_QWORD *)(v313 + 72);
  v261 = *(void (**)(char *, unint64_t, uint64_t))(v313 + 16);
  while (2)
  {
    v261(v256, v259, v61);
    v262 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v255 + 56);
    v262(v256, 0, 1, v61);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v255 + 48))(v256, 1, v61) != 1)
    {
      v263 = v61;
      v264 = *(uint64_t (**)(char *, char *, uint64_t))(v255 + 32);
      v265 = v264(v212, v256, v263);
      v266 = IndexPath.count.getter(v265);
      if (v266 == 2)
      {
        v267 = IndexPath.section.getter(2);
      }
      else if (v266 <= 0)
      {
        v267 = NSNotFound.getter();
      }
      else
      {
        v267 = IndexPath.subscript.getter(0);
      }
      v268 = v267;
      v269 = sub_958B0(v316, v309, *(uint64_t *)&v310, v318);
      v134 = __OFADD__(v268, v269);
      v270 = v268 + v269;
      if (v134)
        goto LABEL_259;
      v271 = IndexPath.count.getter(v269);
      if (v271 == 2)
      {
        v272 = IndexPath.section.getter(2);
        if (v270 == v272)
          goto LABEL_229;
LABEL_232:
        v275 = IndexPath.count.getter(v272);
        if (v275 >= 2)
        {
          v277 = IndexPath.count.getter(v275);
          if (v277 == 2)
          {
            v278 = IndexPath.item.getter(2);
          }
          else if (v277 <= 2)
          {
            v278 = NSNotFound.getter();
          }
          else
          {
            v278 = IndexPath.subscript.getter(1);
          }
          v279 = v270;
          v273 = v291;
          IndexPath.init(item:section:)(v278, v279);
        }
        else
        {
          v276 = v270;
          v273 = v291;
          IndexPath.init(index:)(v276);
        }
        v274 = v317;
      }
      else
      {
        if (v271 <= 0)
        {
          v272 = NSNotFound.getter();
          if (v270 != v272)
            goto LABEL_232;
        }
        else
        {
          v272 = IndexPath.subscript.getter(0);
          if (v270 != v272)
            goto LABEL_232;
        }
LABEL_229:
        v273 = v291;
        v274 = v317;
        v261(v291, (unint64_t)v302, v317);
      }
      v261(v292, (unint64_t)v273, v274);
      if ((swift_isUniquelyReferenced_nonNull_native(v254) & 1) == 0)
        v254 = sub_134B8C(0, *(_QWORD *)(v254 + 16) + 1, 1, v254);
      v281 = *(_QWORD *)(v254 + 16);
      v280 = *(_QWORD *)(v254 + 24);
      if (v281 >= v280 >> 1)
        v254 = sub_134B8C(v280 > 1, v281 + 1, 1, v254);
      *(_QWORD *)(v254 + 16) = v281 + 1;
      v282 = v317;
      v264(&v315[v254 + v281 * v260], v292, v317);
      v61 = v282;
      v255 = v313;
      v283 = *(void (**)(char *, uint64_t))(v313 + 8);
      v283(v291, v282);
      v212 = v302;
      v283(v302, v61);
      v259 += v260;
      --v257;
      v256 = v287;
      if (!v257)
      {
        v251 = (uint64_t)v314;
        v262(v287, 1, 1, v61);
        goto LABEL_251;
      }
      continue;
    }
    break;
  }
  v251 = (uint64_t)v314;
LABEL_251:
  swift_bridgeObjectRelease(v251);
  v284 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v285 = swift_bridgeObjectRelease(v254).n128_u64[0];
  objc_msgSend(v298, "_setTargetIndexPathsForInteractivelyMovingItems:", v284, v285);

}

id sub_15CD54(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  char *v17;
  objc_super v19;

  v5[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_isInvalidatingLayout] = 0;
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView], 0);
  v11 = OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_registeredReusableViewClasses;
  v12 = v5;
  *(_QWORD *)&v5[v11] = sub_CAE54((uint64_t)_swiftEmptyArrayStorage);
  v13 = &v12[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_reorderingItemGlobalIndexPath];
  v14 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v12[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView__contentInset];
  v16 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v15 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v15 + 1) = v16;
  v17 = &v12[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_componentReuseIdentifierAddition];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for CompositeComponentCollectionView(0);
  return objc_msgSendSuper2(&v19, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);
}

uint64_t sub_15CE70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_15CE94(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_15CEA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_39(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_15CECC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_15CEDC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_15CF10()
{
  uint64_t v0;

  sub_159934(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_15CF1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

__int128 *NowPlayingDataProvider.shared.unsafeMutableAddressor()
{
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  return &static NowPlayingDataProvider.shared;
}

__n128 NowPlayingDataProvider.init(asPartOf:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 result;
  __n128 v10;
  unint64_t v11;
  __n128 v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F0);
  BaseObjectGraph.inject<A>(_:)(&v12, v4, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F8);
  v10 = v12;
  BaseObjectGraph.inject<A>(_:)((__n128 *)a2[1].n128_u64, v5, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB100);
  BaseObjectGraph.inject<A>(_:)(&a2[3].n128_u64[1], v6, v6);
  v7 = type metadata accessor for EpisodeUpsellBannerDataProvider(0);
  BaseObjectGraph.inject<A>(_:)(&v11, v7, v7);
  swift_release(a1);
  v8 = v11;
  result = v10;
  *a2 = v10;
  a2[6].n128_u64[0] = 0;
  a2[6].n128_u64[1] = v8;
  return result;
}

double sub_15D030()
{
  double result;

  result = 0.0;
  xmmword_210530 = 0u;
  *(_OWORD *)&qword_210540 = 0u;
  xmmword_210510 = 0u;
  unk_210520 = 0u;
  xmmword_2104F0 = 0u;
  unk_210500 = 0u;
  static NowPlayingDataProvider.shared = 0u;
  return result;
}

uint64_t static NowPlayingDataProvider.shared.getter@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v3, 0, 0);
  return sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, a1);
}

uint64_t static NowPlayingDataProvider.shared.setter(uint64_t a1)
{
  _BYTE v3[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v3, 33, 0);
  sub_15D148(a1, (uint64_t)&static NowPlayingDataProvider.shared);
  swift_endAccess(v3);
  return sub_15D190(a1);
}

uint64_t sub_15D148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_15D190(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static NowPlayingDataProvider.shared.modify(uint64_t a1))(_QWORD)
{
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t NowPlayingDataProvider.player.getter()
{
  _QWORD *v0;

  return swift_unknownObjectRetain(*v0);
}

void *NowPlayingDataProvider.rootViewController.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 96);
  v2 = v1;
  return v1;
}

void NowPlayingDataProvider.rootViewController.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
}

uint64_t (*NowPlayingDataProvider.rootViewController.modify())()
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t NowPlayingDataProvider.episodeUpsellBannerDataProvider.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 104));
}

uint64_t NowPlayingDataProvider.episodeUpsellBannerDataProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v1 + 104));
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*NowPlayingDataProvider.episodeUpsellBannerDataProvider.modify())()
{
  return UIScreen.Dimensions.size.getter;
}

double destroy for NowPlayingDataProvider(uint64_t a1)
{
  double result;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 56));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 104)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for NowPlayingDataProvider(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, __int128 *, uint64_t);
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;

  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  v5 = a1 + 16;
  v6 = a2 + 1;
  v7 = *(__int128 *)((char *)a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, __int128 *, uint64_t))(v7 - 8);
  swift_unknownObjectRetain(v4);
  v9(v5, v6, v8);
  v10 = a2[5];
  *(_OWORD *)(a1 + 80) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 56, (uint64_t)a2 + 56);
  v11 = (void *)*((_QWORD *)a2 + 12);
  v12 = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v12;
  v13 = v11;
  swift_retain(v12);
  return a1;
}

uint64_t *assignWithCopy for NowPlayingDataProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  v7 = (void *)a1[12];
  v8 = (void *)a2[12];
  a1[12] = (uint64_t)v8;
  v9 = v8;

  v10 = a1[13];
  a1[13] = a2[13];
  swift_retain();
  swift_release(v10);
  return a1;
}

uint64_t *assignWithTake for NowPlayingDataProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  __swift_destroy_boxed_opaque_existential_0(a1 + 2);
  v6 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v6;
  a1[6] = a2[6];
  __swift_destroy_boxed_opaque_existential_0(a1 + 7);
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  v7 = (void *)a1[12];
  v8 = a2[12];
  a1[11] = a2[11];
  a1[12] = v8;

  v9 = a1[13];
  a1[13] = a2[13];
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingDataProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingDataProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingDataProvider()
{
  return &type metadata for NowPlayingDataProvider;
}

uint64_t sub_15D5B0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6C616D726F6ELL;
  else
    v2 = 0x64656C616373;
  if ((a2 & 1) != 0)
    v3 = 0x6C616D726F6ELL;
  else
    v3 = 0x64656C616373;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE600000000000000, v3, 0xE600000000000000, 0);
  swift_bridgeObjectRelease_n(0xE600000000000000, 2);
  return v4 & 1;
}

void sub_15D624(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_15D66C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_15D6E0 + 4 * byte_175984[a2]))(0x7372657470616863);
}

uint64_t sub_15D6E0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7372657470616863 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7372657470616863, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v2 & 1;
}

char *sub_15D830(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v24;
  double v25;
  objc_super v26;
  CGPoint v27;
  CGRect v28;

  v26.receiver = v3;
  v26.super_class = (Class)swift_getObjectType(v3);
  v7 = objc_msgSendSuper2(&v26, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
    return (char *)v7;
  v9 = sub_15D954();
  if (!v9)
  {
LABEL_7:
    v22 = v3;
    return (char *)v3;
  }
  v8 = v9;
  v10 = sub_15D954();
  if (!v10)
    goto LABEL_6;
  v11 = v10;
  objc_msgSend(v10, "frame");
  v24 = v13;
  v25 = v12;
  v15 = v14;
  v17 = v16;
  objc_msgSend(v11, "hitTestInsets");
  v19 = v18;
  v21 = v20;

  v28.origin.x = UIEdgeInsetsInsetRect(v25, v24, v15, v17, v19, v21);
  v27.x = a2;
  v27.y = a3;
  if (!CGRectContainsPoint(v28, v27))
  {
LABEL_6:

    goto LABEL_7;
  }
  return v8;
}

char *sub_15D954()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  char *v14;
  char *v15;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView____lazy_storage____verticalScrollIndicator;
  v2 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView____lazy_storage____verticalScrollIndicator];
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v3 = objc_msgSend(v0, "subviews");
    v4 = sub_60ED4();
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if ((unint64_t)v5 >> 62)
      goto LABEL_21;
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v5);
    if (v6)
    {
      while (!__OFSUB__(v6--, 1))
      {
        if ((v5 & 0xC000000000000001) != 0)
        {
          v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v5);
LABEL_12:
          v2 = v8;
          v9 = objc_opt_self(_UIScrollViewScrollIndicator);
          if (swift_dynamicCastObjCClass(v2, v9))
          {
            objc_msgSend(v2, "bounds");
            v11 = v10;
            objc_msgSend(v2, "bounds");
            if (v11 < v12)
            {
              swift_bridgeObjectRelease_n(v5, 2);
              goto LABEL_15;
            }
          }

          if (!v6)
            goto LABEL_25;
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_19;
          if (v6 < *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8)))
          {
            v8 = (char *)*(id *)(v5 + 32 + 8 * v6);
            goto LABEL_12;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          if (v5 < 0)
            v17 = v5;
          else
            v17 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v6 = _CocoaArrayWrapper.endIndex.getter(v17);
          if (!v6)
            goto LABEL_25;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_25:
    swift_bridgeObjectRelease_n(v5, 2);
    v2 = 0;
LABEL_15:
    v13 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v2;
    v14 = v2;
    sub_4375C(v13);
  }
  else
  {
    v15 = v2;
  }
  return v2;
}

void sub_15DB68(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _BYTE *v10;
  _QWORD v11[5];
  uint64_t v12;

  if ((a1 & 1) != 0)
    v2 = 0x6C616D726F6ELL;
  else
    v2 = 0x64656C616373;
  if (v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode])
    v3 = 0x6C616D726F6ELL;
  else
    v3 = 0x64656C616373;
  if (v2 == v3)
  {
    swift_bridgeObjectRelease_n(0xE600000000000000, 2);
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE600000000000000, v3, 0xE600000000000000, 0);
    swift_bridgeObjectRelease_n(0xE600000000000000, 2);
    if ((v4 & 1) == 0)
    {
      if (qword_1F94B8 != -1)
        swift_once(&qword_1F94B8, sub_5E208);
      v5 = (void *)qword_2100C0;
      v6 = swift_allocObject(&unk_1D4000, 24, 7);
      *(_QWORD *)(v6 + 16) = v1;
      v11[4] = sub_15E124;
      v12 = v6;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      v11[2] = sub_F528;
      v11[3] = &block_descriptor_40;
      v7 = _Block_copy(v11);
      v8 = v12;
      v9 = v5;
      v10 = v1;
      swift_release(v8);
      objc_msgSend(v9, "addAnimations:", v7);
      _Block_release(v7);
      objc_msgSend(v9, "startAnimation");

    }
  }
}

void sub_15DCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_15DD24();

  }
}

id sub_15DD24()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char v12;
  double v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  uint64_t v21;
  CGRect v22;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F94D0 != -1)
    swift_once(&qword_1F94D0, sub_5E2E4);
  v5 = xmmword_2100E0;
  v7 = *(double *)&qword_2100F0;
  v6 = unk_2100F8;
  objc_msgSend(v0, "contentInset");
  v9 = v8;
  objc_msgSend(v0, "contentInset");
  v11 = v10;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode) & 1) != 0)
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C616D726F6ELL, 0xE600000000000000, 0x64656C616373, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(0xE600000000000000);
    if ((v12 & 1) == 0)
      return objc_msgSend(v0, "setVerticalScrollIndicatorInsets:", *(double *)&v5 + v9, *((double *)&v5 + 1), v7 + v11, v6);
  }
  else
  {
    swift_bridgeObjectRelease(0xE600000000000000);
  }
  objc_msgSend(v0, "bounds");
  v13 = CGRectGetWidth(v22) * 0.15;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for FloatingPointRoundingRule.up(_:), v1);
  v14 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v14, "displayScale");
  v16 = v15;

  if (v16 < COERCE_DOUBLE(1))
  {
    v17 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v17, "scale");
    v16 = v18;

  }
  v19 = sub_FA914((uint64_t)v4, v16, v13);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v6 = v6 - v19;
  return objc_msgSend(v0, "setVerticalScrollIndicatorInsets:", *(double *)&v5 + v9, *((double *)&v5 + 1), v7 + v11, v6);
}

id sub_15DF58(_BYTE *a1)
{
  char v2;
  CGAffineTransform v4;

  if ((a1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode] & 1) == 0)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    goto LABEL_5;
  }
  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C616D726F6ELL, 0xE600000000000000, 0x64656C616373, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(0xE600000000000000);
  if ((v2 & 1) != 0)
  {
LABEL_5:
    objc_msgSend(a1, "setAnchorPoint:", 0.57, 0.57);
    CGAffineTransformMakeScale(&v4, 0.86, 0.86);
    objc_msgSend(a1, "setTransform:", &v4);
    return sub_15DD24();
  }
  *(_OWORD *)&v4.a = 0x3FF0000000000000uLL;
  v4.c = 0.0;
  v4.d = 1.0;
  *(_OWORD *)&v4.tx = 0uLL;
  objc_msgSend(a1, "setTransform:", &v4);
  objc_msgSend(a1, "setAnchorPoint:", 0.5, 0.5);
  return sub_15DD24();
}

uint64_t type metadata accessor for TranscriptCollectionView()
{
  return objc_opt_self(_TtC12NowPlayingUI24TranscriptCollectionView);
}

uint64_t sub_15E100()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_15E124()
{
  uint64_t v0;

  return sub_15DF58(*(_BYTE **)(v0 + 16));
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_40(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_15E144()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;

  if (qword_1F94C8 != -1)
    swift_once(&qword_1F94C8, sub_5E294);
  v0 = (void *)qword_2100D0;
  v1 = objc_msgSend(objc_allocWithZone((Class)CASpringAnimation), "init");
  v2 = objc_msgSend(v0, "springTimingParameters");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "mass");
    objc_msgSend(v1, "setMass:");
    objc_msgSend(v3, "stiffness");
    objc_msgSend(v1, "setStiffness:");
    objc_msgSend(v3, "damping");
    objc_msgSend(v1, "setDamping:");

  }
  v4 = objc_allocWithZone((Class)CAMediaTimingFunction);
  v5 = v1;
  LODWORD(v6) = 1045220557;
  LODWORD(v7) = 0;
  LODWORD(v8) = 1.0;
  LODWORD(v9) = 1.0;
  v10 = objc_msgSend(v4, "initWithControlPoints::::", v6, v7, v8, v9);
  objc_msgSend(v5, "setTimingFunction:", v10);

  objc_msgSend(v5, "setInitialVelocity:", 0.0);
  v11 = v5;
  objc_msgSend(v11, "settlingDuration");
  objc_msgSend(v11, "setDuration:");

  return v11;
}

_QWORD *sub_15E2C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  if (a1 == a2)
    return _swiftEmptyArrayStorage;
  v5 = a2;
  v6 = a1;
  if (a2 < a1)
    goto LABEL_27;
  if (a1 >= a2)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    if (v3 < 0)
      v28 = v3;
    else
      v28 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (v7)
      goto LABEL_7;
    goto LABEL_33;
  }
  v3 = a3;
  if (a3 >> 62)
    goto LABEL_29;
  v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a3);
  if (v7)
  {
LABEL_7:
    v8 = 0;
    v33 = ~v6 + v5;
    v34 = v3 & 0xC000000000000001;
    v4 = _swiftEmptyArrayStorage;
    v30 = v6;
    v31 = v5;
    v32 = v7;
    while (1)
    {
      if (v34)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v3);
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_25;
      }
      else
      {
        v9 = *(id *)(v3 + 8 * v8 + 32);
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      v11 = v6 + v8;
      v12 = v9;
      v13 = objc_msgSend(v12, "title");
      if (v13)
      {
        v14 = v13;
        v15 = v3;
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v18 = v17;

        objc_msgSend(v12, "startTime");
        v20 = v19;
        objc_msgSend(v12, "startTime");
        v22 = v21;
        objc_msgSend(v12, "duration");
        v24 = v23;

        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_1355CC(0, v4[2] + 1, 1, v4);
        v26 = v4[2];
        v25 = v4[3];
        if (v26 >= v25 >> 1)
          v4 = sub_1355CC((_QWORD *)(v25 > 1), v26 + 1, 1, v4);
        v4[2] = v26 + 1;
        v27 = (double *)&v4[5 * v26];
        *((_QWORD *)v27 + 4) = v11;
        *((_QWORD *)v27 + 5) = v16;
        *((_QWORD *)v27 + 6) = v18;
        *((_QWORD *)v27 + 7) = v20;
        v27[8] = v22 + v24;
        v3 = v15;
        v6 = v30;
        v5 = v31;
      }
      else
      {

      }
      if (v33 == v8)
        goto LABEL_34;
      if (v11 + 1 < v6 || v11 + 1 >= v5)
        goto LABEL_26;
      ++v8;
      if (v10 == v32)
        goto LABEL_34;
    }
  }
LABEL_33:
  v4 = _swiftEmptyArrayStorage;
LABEL_34:
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t type metadata accessor for ChaptersController()
{
  return objc_opt_self(_TtC12NowPlayingUI18ChaptersController);
}

uint64_t sub_15E568@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v5[40];

  sub_15E610(a1, a2, (uint64_t)v5);
  return sub_982C((uint64_t)v5, a3, &qword_204A68);
}

uint64_t type metadata accessor for DeprecatedChaptersController()
{
  return objc_opt_self(_TtC12NowPlayingUI28DeprecatedChaptersController);
}

uint64_t sub_15E5CC@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_15ECE0((uint64_t)v3);
  return sub_982C((uint64_t)v3, a1, &qword_204A68);
}

void sub_15E610(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  float v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  id v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  id v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  char v50;
  char v51;
  double v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD v64[5];
  float v65;
  char v66;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v64[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "chapters", v8);
  v12 = 0;
  if (!v11)
    goto LABEL_8;
  v13 = v11;
  v14 = sub_15EF7C();
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  sub_982C(a2, (uint64_t)v64, (uint64_t *)&unk_1FBD00);
  if (v66 == 2)
    goto LABEL_7;
  v16 = *(double *)v64;
  v17 = *(double *)&v64[3];
  v18 = *(double *)&v64[4];
  v19 = v65;
  v20 = objc_msgSend(a1, "chapters");
  if (v20)
  {
    v21 = v20;
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v14);

  }
  else
  {
    v22 = 0;
  }
  v63 = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_204A60);
  v24 = sub_131784();
  v25 = Optional<A>.isEmpty.getter(v23, v24);
  swift_bridgeObjectRelease(v22);
  if ((v25 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(v15);
LABEL_8:
    v27 = 0;
    v28 = 0;
    v29 = 0;
LABEL_9:
    v30 = 0.0;
LABEL_10:
    *(_QWORD *)a3 = v27;
    *(_QWORD *)(a3 + 8) = v28;
    *(_QWORD *)(a3 + 16) = v29;
    *(_QWORD *)(a3 + 24) = v12;
    *(double *)(a3 + 32) = v30;
    return;
  }
  v31 = Date.init()(v26);
  v32 = (uint64_t)v10;
  v33 = Date.timeIntervalSinceReferenceDate.getter(v31);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v18 + (v33 - v16) * v19 >= v17)
    v34 = v17;
  else
    v34 = v18 + (v33 - v16) * v19;
  v63 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v32 = v15;
    else
      v32 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v35 = _CocoaArrayWrapper.endIndex.getter(v32);
    if (v35)
    {
LABEL_16:
      if (v35 < 1)
      {
        __break(1u);
        goto LABEL_46;
      }
      v36 = 0;
      v37 = fmax(v34, 0.0);
      do
      {
        if ((v15 & 0xC000000000000001) != 0)
          v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v15);
        else
          v38 = *(id *)(v15 + 8 * v36 + 32);
        v39 = v38;
        objc_msgSend(v38, "startTime", v63);
        if (v40 > v37
          || (objc_msgSend(v39, "startTime"), v42 = v41, v43 = objc_msgSend(v39, "duration"), v37 >= v42 + v44))
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v43);
          v45 = *(_QWORD *)(v63 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
          v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v39);
          specialized ContiguousArray._endMutation()(v46);
        }
        ++v36;
      }
      while (v35 != v36);
      swift_bridgeObjectRelease(v15);
      v32 = v63;
      if ((v63 & 0x8000000000000000) != 0)
        goto LABEL_42;
      goto LABEL_33;
    }
  }
  else
  {
    v35 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v15);
    if (v35)
      goto LABEL_16;
  }
  swift_bridgeObjectRelease(v15);
  v32 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_42;
LABEL_33:
  if ((v32 & 0x4000000000000000) != 0)
  {
LABEL_42:
    swift_bridgeObjectRetain(v32);
    v62 = _CocoaArrayWrapper.endIndex.getter(v61);
    swift_release(v32);
    if (!v62)
      goto LABEL_43;
    goto LABEL_35;
  }
  if (!*(_QWORD *)(v32 + 16))
  {
LABEL_43:
    swift_bridgeObjectRelease(v15);
    swift_release(v32);
LABEL_44:
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v12 = 0;
    goto LABEL_9;
  }
LABEL_35:
  if ((v32 & 0xC000000000000001) != 0)
  {
LABEL_46:
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v32);
LABEL_38:
    v48 = v47;
    swift_release(v32);
    sub_ADC9C((uint64_t)v48, v15);
    v27 = v49;
    v51 = v50;
    *(_QWORD *)&v52 = swift_bridgeObjectRelease(v15).n128_u64[0];
    if ((v51 & 1) == 0)
    {
      v53 = objc_msgSend(v48, "title", v52);
      if (v53)
      {
        v54 = v53;
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
        v29 = v55;

        objc_msgSend(v48, "startTime");
        v12 = v56;
        objc_msgSend(v48, "startTime");
        v58 = v57;
        objc_msgSend(v48, "duration");
        v60 = v59;

        v30 = v58 + v60;
        goto LABEL_10;
      }
    }

    goto LABEL_44;
  }
  if (*(_QWORD *)(v32 + 16))
  {
    v47 = *(id *)(v32 + 32);
    goto LABEL_38;
  }
  __break(1u);
}

void sub_15EA38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v36, 0, 0);
  sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v32);
  v8 = v32[0];
  if (v32[0])
  {
    v9 = v32[1];
    swift_unknownObjectRetain(v32[0]);
    sub_4AE24((uint64_t)v32);
    ObjectType = swift_getObjectType(v8);
    LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96))(ObjectType, v9);
    swift_unknownObjectRelease(v8);
    v11 = 0.0;
    if ((v9 & 1) == 0)
      goto LABEL_9;
    sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v32);
    if (v32[0])
    {
      sub_DF78((uint64_t)&v35, (uint64_t)v29);
      sub_4AE24((uint64_t)v32);
      v13 = v30;
      v12 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 40))(v13) > a1)
      {
        v14 = v30;
        v15 = v31;
        __swift_project_boxed_opaque_existential_1(v29, v30);
        IndexPath.init(row:section:)(a1, 0);
        (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t))(v15 + 16))(v32, v7, v14, v15);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v16 = v33;
        v17 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
        v20 = v19;
        v21 = v33;
        v22 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        v11 = (*(double (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
        v23 = v33;
        v24 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        v25 = (*(double (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
        v26 = v33;
        v27 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        v28 = v25 + (*(double (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
        __swift_destroy_boxed_opaque_existential_0(v32);
        __swift_destroy_boxed_opaque_existential_0(v29);
LABEL_10:
        *(_QWORD *)a2 = a1;
        *(_QWORD *)(a2 + 8) = v18;
        *(_QWORD *)(a2 + 16) = v20;
        *(double *)(a2 + 24) = v11;
        *(double *)(a2 + 32) = v28;
        return;
      }
      __swift_destroy_boxed_opaque_existential_0(v29);
LABEL_9:
      a1 = 0;
      v18 = 0;
      v20 = 0;
      v28 = 0.0;
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_15ECE0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;
  _BYTE v14[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v14, 0, 0);
  sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v12);
  v2 = *(_QWORD *)&v12[0];
  if (!*(_QWORD *)&v12[0])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v3 = *((_QWORD *)&v12[0] + 1);
  swift_unknownObjectRetain(*(_QWORD *)&v12[0]);
  sub_4AE24((uint64_t)v12);
  ObjectType = swift_getObjectType(v2);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(ObjectType, v3);
  swift_unknownObjectRelease(v2);
  if ((v3 & 1) == 0)
  {
    v11 = 0;
    v9 = 0uLL;
    v10 = 0uLL;
    goto LABEL_9;
  }
  sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v12);
  v5 = *(_QWORD *)&v12[0];
  if (*(_QWORD *)&v12[0])
  {
    v6 = *((_QWORD *)&v12[0] + 1);
    swift_unknownObjectRetain(*(_QWORD *)&v12[0]);
    sub_4AE24((uint64_t)v12);
    v7 = swift_getObjectType(v5);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v7, v6);
    swift_unknownObjectRelease(v5);
    if ((v8 & 0x8000000000000000) == 0)
    {
      sub_15EA38(v8, (uint64_t)v12);
      v9 = v12[0];
      v10 = v12[1];
      v11 = v13;
LABEL_9:
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = v11;
      return;
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:
  __break(1u);
}

void sub_15EE24(void *a1)
{
  id v2;
  void *v3;
  unint64_t v4;
  int64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend(a1, "chapters");
  if (v2)
  {
    v3 = v2;
    v4 = sub_15EF7C();
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    v6 = objc_msgSend(a1, "chapters");
    if (v6)
    {
      v7 = v6;
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v4);

    }
    else
    {
      v8 = 0;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_204A60);
    v10 = sub_131784();
    v11 = Optional<A>.isEmpty.getter(v9, v10);
    swift_bridgeObjectRelease(v8);
    if ((v11 & 1) != 0)
      goto LABEL_10;
    if (!((unint64_t)v5 >> 62))
    {
      v12 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
LABEL_9:
      sub_15E2C8(0, v12, v5);
LABEL_10:
      swift_bridgeObjectRelease(v5);
      return;
    }
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v5);
    if ((v12 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
  }
}

unint64_t sub_15EF7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_203B50;
  if (!qword_203B50)
  {
    v1 = objc_opt_self(MPModelPodcastChapter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_203B50);
  }
  return result;
}

uint64_t sub_15EFB8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  unint64_t v32;
  unint64_t v33;
  double *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[56];
  char v46[32];

  v37 = type metadata accessor for IndexPath(0);
  v36 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v35 = (char *)&v35 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F96B8 != -1)
    goto LABEL_23;
  while (1)
  {
    swift_beginAccess(&static NowPlayingDataProvider.shared, v46, 0, 0);
    result = sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v41);
    v2 = v41;
    if (!v41)
      goto LABEL_27;
    v3 = v42;
    swift_unknownObjectRetain(v41);
    sub_4AE24((uint64_t)&v41);
    ObjectType = swift_getObjectType(v2);
    LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(ObjectType, v3);
    swift_unknownObjectRelease(v2);
    if ((v3 & 1) == 0)
      return (uint64_t)_swiftEmptyArrayStorage;
    result = sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v41);
    if (!v41)
      goto LABEL_28;
    sub_DF78((uint64_t)v45, (uint64_t)v38);
    sub_4AE24((uint64_t)&v41);
    v5 = v39;
    v6 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 8) + 40))(v5);
    if (result < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      return result;
    }
    v7 = result;
    __swift_destroy_boxed_opaque_existential_0(v38);
    if (!v7)
      return (uint64_t)_swiftEmptyArrayStorage;
    v8 = 0;
    v9 = _swiftEmptyArrayStorage;
    while (v7 != v8)
    {
      result = sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v41);
      v10 = v41;
      if (!v41)
        goto LABEL_25;
      v11 = v42;
      swift_unknownObjectRetain(v41);
      sub_4AE24((uint64_t)&v41);
      v12 = swift_getObjectType(v10);
      LOBYTE(v11) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96))(v12, v11);
      swift_unknownObjectRelease(v10);
      if ((v11 & 1) != 0)
      {
        result = sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v41);
        if (!v41)
          goto LABEL_26;
        sub_DF78((uint64_t)v45, (uint64_t)v38);
        sub_4AE24((uint64_t)&v41);
        v13 = v39;
        v14 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        if (v8 >= (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 40))(v13))
        {
          __swift_destroy_boxed_opaque_existential_0(v38);
        }
        else
        {
          v15 = v39;
          v16 = v40;
          __swift_project_boxed_opaque_existential_1(v38, v39);
          v17 = v35;
          IndexPath.init(row:section:)(v8, 0);
          (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v16 + 16))(&v41, v17, v15, v16);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v37);
          v18 = v43;
          v19 = v44;
          __swift_project_boxed_opaque_existential_1(&v41, v43);
          v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
          v22 = v21;
          v23 = v43;
          v24 = v44;
          __swift_project_boxed_opaque_existential_1(&v41, v43);
          v25 = (*(double (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
          v26 = v43;
          v27 = v44;
          __swift_project_boxed_opaque_existential_1(&v41, v43);
          v28 = (*(double (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
          v29 = v43;
          v30 = v44;
          __swift_project_boxed_opaque_existential_1(&v41, v43);
          v31 = (*(double (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
          __swift_destroy_boxed_opaque_existential_0(&v41);
          __swift_destroy_boxed_opaque_existential_0(v38);
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_1355CC(0, v9[2] + 1, 1, v9);
          v33 = v9[2];
          v32 = v9[3];
          if (v33 >= v32 >> 1)
            v9 = sub_1355CC((_QWORD *)(v32 > 1), v33 + 1, 1, v9);
          v9[2] = v33 + 1;
          v34 = (double *)&v9[5 * v33];
          *((_QWORD *)v34 + 4) = v8;
          *((_QWORD *)v34 + 5) = v20;
          *((_QWORD *)v34 + 6) = v22;
          v34[7] = v25;
          v34[8] = v28 + v31;
        }
      }
      if (v7 == ++v8)
        return (uint64_t)v9;
    }
    __break(1u);
LABEL_23:
    swift_once(&qword_1F96B8, sub_15D030);
  }
}

uint64_t type metadata accessor for ShazamHostingController(uint64_t a1)
{
  uint64_t result;

  result = qword_204A78;
  if (!qword_204A78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShazamHostingController);
  return result;
}

uint64_t sub_15F440(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_210550);
}

uint64_t sub_15F48C(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v5;

  v1 = *(void **)(a1 + qword_204A70);
  KeyPath = swift_getKeyPath(&unk_175AA0);
  v3 = swift_getKeyPath(&unk_175AC8);
  v5 = 0;
  return static Published.subscript.setter(&v5, v1, KeyPath, v3);
}

void sub_15F4FC(void *a1)
{
  id v1;
  id v2;
  void *v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for ShazamHostingController(0);
  v1 = v4.receiver;
  objc_msgSendSuper2(&v4, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v1, "view", v4.receiver, v4.super_class);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "invalidateIntrinsicContentSize");

  }
  else
  {
    __break(1u);
  }
}

void sub_15F580(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;

  v5 = qword_204A70;
  v6 = objc_allocWithZone((Class)type metadata accessor for ShazamState(0));
  v7 = a3;
  *(_QWORD *)&a1[v5] = objc_msgSend(v6, "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/ShazamHostingController.swift", 42, 2, 32, 0);
  __break(1u);
}

void sub_15F61C()
{
  uint64_t v0;

}

id sub_15F62C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShazamHostingController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_15F660(uint64_t a1)
{

}

void sub_15F670()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.ShazamHostingController", 36, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_15F69C()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.ShazamHostingController", 36, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_15F6C8()
{
  return type metadata accessor for ShazamHostingController(0);
}

uint64_t type metadata accessor for LargeTextUtilities()
{
  return objc_opt_self(_TtC12NowPlayingUI18LargeTextUtilities);
}

uint64_t sub_15F6F8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t IsAccessibilityContentSizeCategory;
  char v25;
  id v26;
  id v27;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
  if (v3 == v6 && v5 == v7)
    goto LABEL_13;
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) == 0)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v12;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
    if (v11 == v13 && v5 == v14)
      goto LABEL_13;
    v16 = v14;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v5, v13, v14, 0);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      v5 = v19;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
      v22 = v20;
      if (v18 == v21 && v5 == v20)
      {
LABEL_13:
        swift_bridgeObjectRelease_n(v5, 2);
        goto LABEL_14;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v5, v21, v20, 0);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v22);
      if ((v25 & 1) == 0)
      {
        v26 = objc_msgSend(v0, "sharedApplication");
        v27 = objc_msgSend(v26, "preferredContentSizeCategory");

        IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v27);
        v2 = v27;
        goto LABEL_15;
      }
    }
  }
LABEL_14:
  IsAccessibilityContentSizeCategory = 1;
LABEL_15:

  return IsAccessibilityContentSizeCategory;
}

double sub_15F8FC(uint64_t a1, uint64_t a2, double a3)
{
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  double v13;
  double v14;

  v6 = (void *)objc_opt_self(UIFont);
  v7 = objc_msgSend(v6, "preferredFontForTextStyle:", a2);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  v10 = _UIContentSizeCategoryCompareToContentSizeCategory(v9, a1);
  if (v10 != -1)
  {
    v11 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", a1);
    v12 = objc_msgSend(v6, "preferredFontForTextStyle:compatibleWithTraitCollection:", a2, v11);

    v7 = v12;
  }
  objc_msgSend(v7, "_scaledValueForValue:", a3);
  v14 = v13;

  return v14;
}

char *Window.__allocating_init(frame:windowScene:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v9;
  double v10;
  double v11;

  v9 = objc_allocWithZone(v5);
  return Window.init(frame:windowScene:)(a1, v10, v11, a4, a5);
}

char *Window.init(frame:windowScene:)(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  char *v37;
  id v38;
  uint64_t v39;
  char *v40;
  objc_super v42;

  v9 = &v5[OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v5[OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI6Window_overrideTraitCollection] = 0;
  v11 = (void *)objc_opt_self(UIScreen);
  v12 = v5;
  v13 = objc_msgSend(v11, "mainScreen");
  objc_msgSend(v13, "bounds");
  v15 = v14;
  v17 = v16;
  v18 = objc_msgSend(v13, "fixedCoordinateSpace");
  objc_msgSend(v18, "bounds");
  v20 = v19;
  v22 = v21;
  swift_unknownObjectRelease(v18);

  v23 = (double *)&v12[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions];
  *v23 = a4;
  v23[1] = a5;
  *((_QWORD *)v23 + 2) = v15;
  *((_QWORD *)v23 + 3) = v17;
  *((_QWORD *)v23 + 4) = v20;
  *((_QWORD *)v23 + 5) = v22;

  v42.receiver = v12;
  v42.super_class = (Class)type metadata accessor for Window();
  v24 = (char *)objc_msgSendSuper2(&v42, "initWithWindowScene:", a1);
  v25 = objc_msgSend(v24, "screen");
  objc_msgSend(v25, "bounds");
  v27 = v26;
  v29 = v28;
  v30 = objc_msgSend(v25, "fixedCoordinateSpace");
  objc_msgSend(v30, "bounds");
  v32 = v31;
  v34 = v33;
  swift_unknownObjectRelease(v30);

  v35 = &v24[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions];
  *((_QWORD *)v35 + 2) = v27;
  *((_QWORD *)v35 + 3) = v29;
  *((_QWORD *)v35 + 4) = v32;
  *((_QWORD *)v35 + 5) = v34;
  v36 = objc_allocWithZone((Class)UIColor);
  v37 = v24;
  v38 = objc_msgSend(v36, "initWithWhite:alpha:", 0.0, 0.2);
  objc_msgSend(v37, "setBackgroundColor:", v38);

  v39 = qword_1F95A8;
  v40 = v37;
  if (v39 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  objc_msgSend(v40, "setTintColor:", qword_210330);

  return v40;
}

uint64_t type metadata accessor for Window()
{
  return objc_opt_self(_TtC12NowPlayingUI6Window);
}

void Window.init(coder:)()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI6Window_overrideTraitCollection] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/Window.swift", 25, 2, 28, 0);
  __break(1u);
}

uint64_t Window.screenDimensionsDidChangeHandler.getter()
{
  return sub_15FEAC(&OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler, (void (*)(_QWORD, _QWORD))sub_AD6A0);
}

uint64_t Window.screenDimensionsDidChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_15FF20(a1, a2, &OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler, sub_AD69C);
}

uint64_t (*Window.screenDimensionsDidChangeHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t Window.boundsSizeDidChangeHandler.getter()
{
  return sub_15FEAC(&OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler, (void (*)(_QWORD, _QWORD))sub_2BE00);
}

uint64_t sub_15FEAC(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t Window.boundsSizeDidChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_15FF20(a1, a2, &OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler, sub_145A0);
}

uint64_t sub_15FF20(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess(v8, v12, 1, 0);
  v9 = *v8;
  v10 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*Window.boundsSizeDidChangeHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler, a1, 33, 0);
  return j__swift_endAccess;
}

Swift::Void __swiftcall Window.layoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, double, double, double, double);
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char *v26;
  void (*v27)(uint64_t, double, double);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[24];
  objc_super v32;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v32, "layoutSubviews");
  v2 = objc_msgSend(v0, "screen");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(v2, "fixedCoordinateSpace");
  objc_msgSend(v7, "bounds");
  v9 = v8;
  v11 = v10;
  swift_unknownObjectRelease(v7);

  v12 = (double *)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions];
  v13 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions + 32];
  v14 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions + 40];
  v16 = static CGSize.==~ infix(_:_:)(v15, *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions + 16], *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_lastSeenDimensions + 24], v4, v6);
  if ((v16 & 1) == 0 || (static CGSize.==~ infix(_:_:)(v16, v13, v14, v9, v11) & 1) == 0)
  {
    v12[2] = v4;
    v12[3] = v6;
    v12[4] = v9;
    v12[5] = v11;
    v17 = &v1[OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler];
    swift_beginAccess(&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_screenDimensionsDidChangeHandler], v31, 0, 0);
    v18 = *(void (**)(uint64_t, double, double, double, double))v17;
    if (*(_QWORD *)v17)
    {
      v19 = *((_QWORD *)v17 + 1);
      v20 = swift_retain();
      v18(v20, v4, v6, v9, v11);
      sub_145A0((uint64_t)v18, v19);
    }
  }
  v21 = objc_msgSend(v1, "bounds");
  v23 = v22;
  v25 = v24;
  if ((static CGSize.==~ infix(_:_:)(v21, *v12, v12[1], v22, v24) & 1) == 0)
  {
    *v12 = v23;
    v12[1] = v25;
    v26 = &v1[OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler];
    swift_beginAccess(&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_boundsSizeDidChangeHandler], &v30, 0, 0);
    v27 = *(void (**)(uint64_t, double, double))v26;
    if (*(_QWORD *)v26)
    {
      v28 = *((_QWORD *)v26 + 1);
      v29 = swift_retain();
      v27(v29, v23, v25);
      sub_145A0((uint64_t)v27, v28);
    }
  }
}

Swift::Void __swiftcall Window.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  void *v3;
  objc_super v4;

  isa = a1.value.super.isa;
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_overrideTraitCollection];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI6Window_overrideTraitCollection] = 0;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v4, "traitCollectionDidChange:", isa);
}

id Window.traitCollection.getter()
{
  return (id)sub_16052C();
}

Swift::Void __swiftcall Window.applyRootViewController(_:)(UIViewController a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for Window();
  objc_msgSendSuper2(&v3, "setRootViewController:", a1.super.super.isa);
}

id Window.__allocating_init(windowScene:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithWindowScene:", a1);

  return v3;
}

void Window.init(windowScene:)()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.Window", 19, "init(windowScene:)", 18, 0);
  __break(1u);
}

void Window.init(frame:)()
{
  sub_160454((uint64_t)"init(frame:)", 12);
}

id Window.__allocating_init(contentRect:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithContentRect:", a1, a2, a3, a4);
}

void Window.init(contentRect:)()
{
  sub_160454((uint64_t)"init(contentRect:)", 18);
}

void sub_160454(uint64_t a1, uint64_t a2)
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.Window", 19, a1, a2, 0);
  __break(1u);
}

void sub_16048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.Window", 19, a3, a4, 0);
  __break(1u);
}

id Window.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Window();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_16052C()
{
  char *v0;
  uint64_t v1;
  uint64_t result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  id v11;
  void *v12;
  objc_super v13;

  v1 = OBJC_IVAR____TtC12NowPlayingUI6Window_overrideTraitCollection;
  result = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI6Window_overrideTraitCollection];
  if (!result)
  {
    v3 = v0;
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_16B2E0;
    v13.receiver = v0;
    v13.super_class = (Class)type metadata accessor for Window();
    *(_QWORD *)(v5 + 32) = objc_msgSendSuper2(&v13, "traitCollection");
    sub_160684();
    v6 = objc_msgSend(v0, "screen");
    v7 = objc_msgSend(v6, "_music_sizeClass");

    UITraitCollection.init(screenSizeClass:)((uint64_t)v7);
    *(_QWORD *)(v5 + 40) = v8;
    specialized Array._endMutation()(v8);
    v9 = v5;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v9);
    v11 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraitsFromCollections:", isa);

    v12 = *(void **)&v3[v1];
    *(_QWORD *)&v3[v1] = v11;

    result = *(_QWORD *)&v3[v1];
    if (!result)
      __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for Window.Dimensions()
{
  return &type metadata for Window.Dimensions;
}

unint64_t sub_160684()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2034E0;
  if (!qword_2034E0)
  {
    v1 = objc_opt_self(UITraitCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_2034E0);
  }
  return result;
}

char *sub_1606C0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  double v19;
  double v20;
  char *v21;
  char v22;
  char *v23;
  int v24;
  char *v25;
  objc_super v27;

  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_title];
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = &v4[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_playbackState] = 2;
  v4[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_wantsNowPlayingIndicator] = 0;
  v11 = (uint64_t *)&v4[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents];
  v12 = v4;
  *v11 = sub_16197C();
  v11[1] = v13;
  *(_QWORD *)&v12[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_titleTextDrawingView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_accessibilityDuration] = 0;

  v27.receiver = v12;
  v27.super_class = (Class)type metadata accessor for DeprecatedChapterCell(0);
  v14 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v15 = &v14[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = v14;
  if ((static CGFloat.==~ infix(_:_:)(0.0) & 1) == 0
    || (static CGFloat.==~ infix(_:_:)(0.0) & 1) == 0
    || (static CGFloat.==~ infix(_:_:)(0.0) & 1) == 0
    || (static CGFloat.==~ infix(_:_:)(0.0) & 1) == 0)
  {
    objc_msgSend(v16, "setNeedsLayout");
  }
  v17 = &v16[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkSize];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent];
  v19 = *(double *)(v18 + 88);
  v20 = *(double *)(v18 + 96);
  *(_QWORD *)(v18 + 88) = 0;
  *(_QWORD *)(v18 + 96) = 0;
  v21 = v16;
  sub_FFE24((uint64_t)v21, v19, v20);

  v22 = v21[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment];
  v21[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment] = 1;
  if ((v22 & 1) == 0)
    objc_msgSend(v21, "setNeedsLayout");
  v23 = &v21[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment];
  v24 = v21[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment
                           + 8];
  *(_QWORD *)v23 = 0;
  v23[8] = 0;
  v25 = v21;
  if (v24 || (static CGFloat.==~ infix(_:_:)(0.0) & 1) == 0)
    objc_msgSend(v25, "setNeedsLayout");

  return v25;
}

double sub_1609F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _QWORD v20[2];

  v5 = type metadata accessor for CharacterSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_title);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_title + 8);
  *v9 = a1;
  v9[1] = a2;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents);
  v12 = v9[1];
  v20[0] = *v9;
  v20[1] = v12;
  v13 = (void *)objc_opt_self(NSCharacterSet);
  swift_retain();
  v14 = objc_msgSend(v13, "whitespaceAndNewlineCharacterSet", swift_bridgeObjectRetain(v12).n128_f64[0]);
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v15 = sub_11CEC();
  v16 = StringProtocol.trimmingCharacters(in:)(v8, &type metadata for String, v15);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease(v12);
  sub_5129C(v16, v18);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_160B30(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  double *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v3 = v2;
  v4 = (double *)&v2[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration];
  if ((a2 & 1) != 0)
  {
    if ((v2[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration + 8] & 1) == 0)
    {
      v5 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration];
      goto LABEL_8;
    }
  }
  else
  {
    if ((v2[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration + 8] & 1) != 0)
      goto LABEL_16;
    v5 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration];
    if (*(double *)&a1 != v5)
    {
LABEL_8:
      v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents + 8];
      if (v5 < 0.0)
      {
        swift_retain();
        v7 = 0;
        v8 = 0xE000000000000000;
        goto LABEL_12;
      }
      v9 = qword_1F9650;
      swift_retain();
      if (v9 == -1 || (swift_once(&qword_1F9650, sub_FE720), ((_BYTE)v4[1] & 1) == 0))
      {
        v10 = objc_msgSend((id)qword_2103C8, "stringFromSeconds:", *v4);
        v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v8 = v11;

LABEL_12:
        sub_5129C(v7, v8);
        swift_release(v6);
        if (((_BYTE)v4[1] & 1) == 0)
        {
          *(double *)&v3[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_accessibilityDuration] = *v4;
          objc_msgSend(v3, "setNeedsLayout");
          return;
        }
        goto LABEL_17;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
    }
  }
}

_QWORD *sub_160CB8()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  _QWORD *result;
  uint64_t v21;
  _QWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  double v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  _OWORD *v33;
  id v34;
  double v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double MaxX;
  double v57;
  double v58;
  id v59;
  double v60;
  double v61;
  id v62;
  double v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double Height;
  double v76;
  void *v77;
  uint64_t v78;
  void *v79;
  _OWORD *v80;
  id v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  CGFloat v89;
  id v90;
  double v91;
  double v92;
  id v93;
  double v94;
  double v95;
  uint64_t v96;
  double v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  void *v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  double Width;
  double v116;
  double v117;
  void *v118;
  uint64_t v119;
  void *v120;
  _OWORD *v121;
  id v122;
  double v123;
  double v124;
  double v125;
  id v126;
  double v127;
  double v128;
  double MinX;
  id v130;
  double v131;
  double v132;
  char *v133;
  _QWORD *v134;
  double v135;
  double v136;
  double v137;
  double v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  _OWORD v147[8];
  objc_super v148;
  _QWORD v149[16];
  _OWORD v150[3];
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  _OWORD v164[8];
  _OWORD v165[6];
  _QWORD v166[16];
  _OWORD v167[7];
  CGRect v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;

  v1 = v0;
  v148.receiver = v0;
  v148.super_class = (Class)type metadata accessor for DeprecatedChapterCell(0);
  objc_msgSendSuper2(&v148, "layoutSubviews");
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v137 = v6;
  v138 = v4;
  v135 = v10;
  v136 = v8;
  v13 = UIEdgeInsetsInsetRect(v4, v6, v8, v10, v11, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  result = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v21 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache];
  if (v21)
  {
    v22 = result;
    v133 = &v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents];
    v23 = *(_OWORD **)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents + 8];
    v24 = v23[4];
    v25 = v23[5];
    v26 = v23[7];
    v167[4] = v23[6];
    v167[5] = v26;
    v167[2] = v24;
    v167[3] = v25;
    v27 = v23[3];
    v167[0] = v23[2];
    v167[1] = v27;
    v28 = *(double *)(v21 + 32);
    v30 = *(void **)(v21 + 40);
    v29 = *(void **)(v21 + 48);
    v31 = *(_QWORD *)(v21 + 56);
    v32 = *(void **)(v21 + 64);
    v33 = *(_OWORD **)(v21 + 72);
    swift_retain();
    sub_11D30(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    v34 = v30;
    sub_10BBC(0x30303A30303A30, 0xE700000000000000, COERCE_DOUBLE(v167), v34, v29, v31, v32, v33, v149, 0.0, 0.0, v28);

    v35 = *(double *)&v149[6];
    v134 = v22;
    if (v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_wantsNowPlayingIndicator] == 1)
    {
      v36 = OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView;
      v37 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView];
      if (v37)
      {
        objc_msgSend(v37, "removeFromSuperview");
        v38 = *(void **)&v1[v36];
      }
      else
      {
        v38 = 0;
      }
      *(_QWORD *)&v1[v36] = 0;

      v42 = OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView;
      v43 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView];
      v132 = v35;
      if (v43)
      {
        v44 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView];
      }
      else
      {
        v44 = objc_msgSend(objc_allocWithZone((Class)MTNowPlayingIndicatorView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        objc_msgSend(v44, "setNumberOfLevels:", 4);
        if (qword_1F95A8 != -1)
          swift_once(&qword_1F95A8, sub_FDF10);
        objc_msgSend(v44, "setLevelGuttersColor:", qword_210330);
        v48 = *(void **)&v1[v42];
        *(_QWORD *)&v1[v42] = v44;

        v43 = 0;
      }
      v49 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_playbackState];
      v50 = v43;
      objc_msgSend(v44, "setPlaybackState:", v49);
      v51 = objc_msgSend(v1, "contentView");
      objc_msgSend(v51, "addSubview:", v44);

      objc_msgSend(v44, "sizeToFit");
      objc_msgSend(v44, "frame");
      v53 = v52;
      v55 = v54;
      v168.origin.x = v13;
      v168.origin.y = v15;
      v168.size.width = v17;
      v168.size.height = v19;
      MaxX = CGRectGetMaxX(v168);
      objc_msgSend(v44, "frame");
      v58 = MaxX - v57;
      v59 = objc_msgSend(v1, "contentView");
      objc_msgSend(v59, "frame");
      v61 = v60;

      v62 = v44;
      v63 = CGRect.applyingLayoutDirection(_:inBounds:)(v22, v138, v137, v136, v135, v58, v61 * 0.5 - v55 * 0.5, v53, v55);
      objc_msgSend(v62, "setCenter:", CGRect.center.getter(v64, v63, v65, v66, v67));

      v35 = v132;
    }
    else
    {
      v39 = OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView;
      v40 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView];
      if (v40)
      {
        objc_msgSend(v40, "removeFromSuperview");
        v41 = *(void **)&v1[v39];
      }
      else
      {
        v41 = 0;
      }
      *(_QWORD *)&v1[v39] = 0;

      v45 = OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView;
      v46 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView];
      if (v46)
      {
        v47 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView];
      }
      else
      {
        _s4ViewCMa();
        v68 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
        v69 = *(void **)&v1[v45];
        *(_QWORD *)&v1[v45] = v68;
        v47 = v68;

        v46 = 0;
      }
      v70 = v46;
      v71 = objc_msgSend(v1, "contentView");
      objc_msgSend(v71, "addSubview:", v47);

      v72 = *((_QWORD *)v133 + 1);
      v73 = *(_QWORD *)(v72 + 128);
      v74 = *(_QWORD *)(v72 + 136);
      swift_bridgeObjectRetain(v74);
      v169.origin.x = v13;
      v169.origin.y = v15;
      v169.size.width = v17;
      v169.size.height = v19;
      Height = CGRectGetHeight(v169);
      v76 = *(double *)(v21 + 32);
      v77 = *(void **)(v21 + 48);
      v78 = *(_QWORD *)(v21 + 56);
      v79 = *(void **)(v21 + 64);
      v80 = *(_OWORD **)(v21 + 72);
      v81 = *(id *)(v21 + 40);
      sub_10BBC(v73, v74, COERCE_DOUBLE(v167), v81, v77, v78, v79, v80, v150, v35, Height, v76);
      v160 = v152;
      v161 = v153;
      v162 = v154;
      v163 = v155;
      v156 = v150[0];
      v157 = v150[1];
      v158 = v150[2];
      v159 = v151;
      swift_bridgeObjectRelease(v74);

      v164[4] = v160;
      v164[5] = v161;
      v164[6] = v162;
      v164[7] = v163;
      v164[0] = v156;
      v164[1] = v157;
      v164[2] = v158;
      v164[3] = v159;
      UIScreen.Dimensions.size.getter(v164);
      sub_523EC((uint64_t)v164, (uint64_t)v166);
      sub_11BB4((uint64_t)v150);
      sub_147500(v166);
      objc_msgSend(v47, "setBounds:", 0.0, 0.0, v35, *((double *)&v151 + 1));
      objc_msgSend(v47, "bounds");
      v131 = v82;
      v84 = v83;
      v170.origin.x = v13;
      v170.origin.y = v15;
      v170.size.width = v17;
      v170.size.height = v19;
      v85 = v19;
      v86 = v15;
      v87 = v13;
      v88 = v17;
      v89 = CGRectGetMaxX(v170) - v35;
      v90 = objc_msgSend(v1, "contentView");
      objc_msgSend(v90, "frame");
      v92 = v91;

      v93 = v47;
      v94 = v89;
      v17 = v88;
      v13 = v87;
      v15 = v86;
      v19 = v85;
      v95 = CGRect.applyingLayoutDirection(_:inBounds:)(v134, v138, v137, v136, v135, v94, v92 * 0.5 - v84 * 0.5, v131, v84);
      objc_msgSend(v93, "setCenter:", CGRect.center.getter(v96, v95, v97, v98, v99));

      sub_11D6C((uint64_t)v150);
    }
    v100 = v17 - (v35 + 6.0);
    v101 = OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_titleTextDrawingView;
    v102 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_titleTextDrawingView];
    if (v102)
    {
      v103 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_titleTextDrawingView];
    }
    else
    {
      _s4ViewCMa();
      v104 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
      v105 = *(void **)&v1[v101];
      *(_QWORD *)&v1[v101] = v104;
      v103 = v104;

      v102 = 0;
    }
    v106 = v102;
    v107 = objc_msgSend(v1, "contentView");
    objc_msgSend(v107, "addSubview:", v103);

    v108 = *(_QWORD *)v133;
    v109 = *(_QWORD *)(*(_QWORD *)v133 + 128);
    v110 = *(_QWORD *)(*(_QWORD *)v133 + 136);
    v111 = *(_OWORD *)(*(_QWORD *)v133 + 64);
    v112 = *(_OWORD *)(*(_QWORD *)v133 + 80);
    v113 = *(_OWORD *)(*(_QWORD *)v133 + 112);
    v165[4] = *(_OWORD *)(*(_QWORD *)v133 + 96);
    v165[5] = v113;
    v165[2] = v111;
    v165[3] = v112;
    v114 = *(_OWORD *)(v108 + 48);
    v165[0] = *(_OWORD *)(v108 + 32);
    v165[1] = v114;
    swift_bridgeObjectRetain(v110);
    sub_11D30(v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    v171.origin.x = v13;
    v171.origin.y = v15;
    v171.size.width = v17 - (v35 + 6.0);
    v171.size.height = v19;
    Width = CGRectGetWidth(v171);
    v172.origin.x = v13;
    v172.origin.y = v15;
    v172.size.width = v17 - (v35 + 6.0);
    v172.size.height = v19;
    v116 = CGRectGetHeight(v172);
    v117 = *(double *)(v21 + 32);
    v118 = *(void **)(v21 + 48);
    v119 = *(_QWORD *)(v21 + 56);
    v120 = *(void **)(v21 + 64);
    v121 = *(_OWORD **)(v21 + 72);
    v122 = *(id *)(v21 + 40);
    sub_10BBC(v109, v110, COERCE_DOUBLE(v165), v122, v118, v119, v120, v121, &v156, Width, v116, v117);
    v143 = v160;
    v144 = v161;
    v145 = v162;
    v146 = v163;
    v139 = v156;
    v140 = v157;
    v141 = v158;
    v142 = v159;
    swift_bridgeObjectRelease(v110);

    v147[4] = v143;
    v147[5] = v144;
    v147[6] = v145;
    v147[7] = v146;
    v147[0] = v139;
    v147[1] = v140;
    v147[2] = v141;
    v147[3] = v142;
    UIScreen.Dimensions.size.getter(v147);
    sub_523EC((uint64_t)v147, (uint64_t)v164);
    sub_11BB4((uint64_t)&v156);
    sub_147500(v164);
    objc_msgSend(v103, "setBounds:", 0.0, 0.0, v159);
    objc_msgSend(v103, "bounds");
    v124 = v123;
    v173.origin.x = v13;
    v173.origin.y = v15;
    v173.size.width = v100;
    v173.size.height = v19;
    v125 = CGRectGetHeight(v173);
    v126 = objc_msgSend(v1, "contentView");
    objc_msgSend(v126, "frame");
    v128 = v127;

    v174.origin.x = v13;
    v174.origin.y = v15;
    v174.size.width = v100;
    v174.size.height = v19;
    MinX = CGRectGetMinX(v174);
    v130 = v103;
    objc_msgSend(v130, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v134, v138, v137, v136, v135, MinX, v128 * 0.5 - v125 * 0.5, v124, v125));

    sub_11D6C((uint64_t)&v156);
    sub_11D30(v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
    sub_11D6C((uint64_t)v149);
    swift_release(v21);
    return sub_11D30(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
  }
  return result;
}

void sub_1616C4()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_title + 8));
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents + 8));
  swift_release(v1);

}

id sub_161738()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeprecatedChapterCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1617E4()
{
  return type metadata accessor for DeprecatedChapterCell(0);
}

uint64_t type metadata accessor for DeprecatedChapterCell(uint64_t a1)
{
  uint64_t result;

  result = qword_204BF0;
  if (!qword_204BF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DeprecatedChapterCell);
  return result;
}

uint64_t sub_161828(uint64_t a1)
{
  _QWORD v2[9];

  v2[0] = &unk_175B98;
  v2[1] = &unk_175BB0;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[3] = &unk_175BC8;
  v2[4] = &unk_175B98;
  v2[5] = &unk_175BE0;
  v2[6] = &unk_175BE0;
  v2[7] = &unk_175BE0;
  v2[8] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 9, v2, a1 + 856);
}

uint64_t *sub_1618A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for DeprecatedChapterCell.TextComponents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for DeprecatedChapterCell.TextComponents(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for DeprecatedChapterCell.TextComponents()
{
  return &type metadata for DeprecatedChapterCell.TextComponents;
}

uint64_t sub_16197C()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;

  v0 = (void *)objc_opt_self(MTMPUFontDescriptor);
  v1 = objc_msgSend(v0, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  if (qword_1F95B0 != -1)
    swift_once(&qword_1F95B0, sub_FDF98);
  v2 = (void *)qword_210338;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = v1;
  v6 = objc_msgSend(v3, "clearColor");
  v7 = v4;
  v8 = objc_msgSend(v5, "typeSafeCopy");

  v9 = v7;
  v10 = _s9StackViewC9ComponentCMa();
  v11 = swift_allocObject(v10, 280, 7);
  *(_QWORD *)(v11 + 128) = 0;
  *(_QWORD *)(v11 + 136) = 0xE000000000000000;
  *(_QWORD *)(v11 + 240) = 0;
  *(_QWORD *)(v11 + 248) = 0xE000000000000000;
  *(_QWORD *)(v11 + 264) = 0;
  *(_QWORD *)(v11 + 272) = 0;
  *(_QWORD *)(v11 + 256) = 0;
  *(_QWORD *)(v11 + 16) = 0x656C746974;
  *(_QWORD *)(v11 + 24) = 0xE500000000000000;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v2;
  *(_QWORD *)(v11 + 48) = v6;
  *(_OWORD *)(v11 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v11 + 72) = 0;
  *(_QWORD *)(v11 + 80) = 0;
  *(_OWORD *)(v11 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v11 + 104) = 0;
  *(_OWORD *)(v11 + 112) = xmmword_16E1E0;
  *(_QWORD *)(v11 + 144) = v8;
  *(_QWORD *)(v11 + 152) = v2;
  *(_QWORD *)(v11 + 160) = v6;
  *(_OWORD *)(v11 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v11 + 184) = 0;
  *(_QWORD *)(v11 + 192) = 0;
  *(_OWORD *)(v11 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v11 + 216) = 0;
  *(_OWORD *)(v11 + 224) = xmmword_16E1E0;
  sub_10B0C(v8, v2, v6, 0, 4, 0, 0);
  sub_10B0C(v8, v2, v6, 0, 4, 0, 0);
  v12 = objc_msgSend(v0, "fontDescriptorWithTextStyle:leadingAdjustment:", 3, 1);
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    if (qword_1F95C8 != -1)
      swift_once(&qword_1F95C8, sub_FE0E0);
    v13 = &qword_210350;
  }
  else
  {
    if (qword_1F95C0 != -1)
      swift_once(&qword_1F95C0, sub_FE034);
    v13 = &qword_210348;
  }
  v14 = *v13;
  v15 = (id)*v13;
  v16 = objc_msgSend(v3, "clearColor");
  v17 = objc_msgSend(v12, "typeSafeCopy");

  v18 = swift_allocObject(v10, 280, 7);
  strcpy((char *)(v18 + 16), "durationText");
  *(_BYTE *)(v18 + 29) = 0;
  *(_WORD *)(v18 + 30) = -5120;
  *(_QWORD *)(v18 + 248) = 0xE000000000000000;
  *(_QWORD *)(v18 + 256) = 0;
  *(_QWORD *)(v18 + 264) = 0;
  *(_QWORD *)(v18 + 272) = 0;
  *(_QWORD *)(v18 + 32) = v17;
  *(_QWORD *)(v18 + 40) = v14;
  *(_QWORD *)(v18 + 48) = v16;
  *(_OWORD *)(v18 + 56) = xmmword_1754A0;
  *(_QWORD *)(v18 + 72) = 0;
  *(_QWORD *)(v18 + 80) = 0;
  *(_OWORD *)(v18 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v18 + 120) = 0;
  *(_QWORD *)(v18 + 128) = 0;
  *(_QWORD *)(v18 + 104) = 0;
  *(_QWORD *)(v18 + 112) = 0;
  *(_QWORD *)(v18 + 136) = 0xE000000000000000;
  *(_QWORD *)(v18 + 144) = v17;
  *(_QWORD *)(v18 + 152) = v14;
  *(_QWORD *)(v18 + 160) = v16;
  *(_OWORD *)(v18 + 168) = xmmword_1754A0;
  *(_QWORD *)(v18 + 184) = 0;
  *(_QWORD *)(v18 + 192) = 0;
  *(_OWORD *)(v18 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v18 + 216) = 0;
  *(_QWORD *)(v18 + 224) = 0;
  *(_QWORD *)(v18 + 232) = 0;
  *(_QWORD *)(v18 + 240) = 0;
  v19 = v17;
  v20 = v15;
  v21 = v16;

  return v11;
}

void sub_161CF4()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_title];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_duration];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_playbackState] = 2;
  v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_wantsNowPlayingIndicator] = 0;
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_textComponents];
  *v3 = sub_16197C();
  v3[1] = v4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_nowPlayingIndicatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_durationTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_titleTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21DeprecatedChapterCell_accessibilityDuration] = 0;

  v5 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/DeprecatedChapterCell.swift", 40, 2, 27, 0);
  __break(1u);
  type metadata accessor for AppEntityVisualState(v5);
}

id objc_msgSend_UIEdgeInsetsValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UIEdgeInsetsValue");
}

id objc_msgSend__beginScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginScrubbing");
}

id objc_msgSend__commitValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commitValue:");
}

id objc_msgSend__disclosureChevronImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disclosureChevronImage:");
}

id objc_msgSend__endScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endScrubbing");
}

id objc_msgSend__horizontalContentMarginForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_horizontalContentMarginForView:");
}

id objc_msgSend__internalNSSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_internalNSSlider");
}

id objc_msgSend__isInAWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isInAWindow");
}

id objc_msgSend__minimumScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_minimumScale");
}

id objc_msgSend__music_layoutInsets_didMoveFromWindow_toWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_music_layoutInsets_didMoveFromWindow:toWindow:");
}

id objc_msgSend__music_layoutInsets_didMoveToSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_music_layoutInsets_didMoveToSuperview");
}

id objc_msgSend__music_updateInheritedLayoutInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_music_updateInheritedLayoutInsets");
}

id objc_msgSend__setSemanticContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSemanticContext:");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackColor");
}

id objc_msgSend_blurRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurRadius");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleID");
}

id objc_msgSend_collectionViewLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionViewLayout");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_contentNSView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentNSView");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_darwinNotificationReceived(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darwinNotificationReceived");
}

id objc_msgSend_detailScrubController_didChangeScrubSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubController:didChangeScrubSpeed:");
}

id objc_msgSend_detailScrubController_didChangeValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubController:didChangeValue:");
}

id objc_msgSend_detailScrubControllerDidBeginScrubbing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubControllerDidBeginScrubbing:");
}

id objc_msgSend_detailScrubControllerDidEndScrubbing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubControllerDidEndScrubbing:");
}

id objc_msgSend_durationAllowsForDetailedScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "durationAllowsForDetailedScrubbing");
}

id objc_msgSend_graphicsQuality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "graphicsQuality");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMargins");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumValue");
}

id objc_msgSend_mediaRemotePlayerPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaRemotePlayerPath");
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumValue");
}

id objc_msgSend_music_collectionViewInheritedLayoutInsetsDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_collectionViewInheritedLayoutInsetsDidChange");
}

id objc_msgSend_music_inheritedLayoutInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_inheritedLayoutInsets");
}

id objc_msgSend_music_inheritedLayoutInsetsDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_inheritedLayoutInsetsDidChange");
}

id objc_msgSend_music_layoutInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_layoutInsets");
}

id objc_msgSend_music_setLayoutInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_setLayoutInsets:");
}

id objc_msgSend_music_setWantsLayoutInsetsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_setWantsLayoutInsetsUsingBlock:");
}

id objc_msgSend_music_viewInheritedLayoutInsetsDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "music_viewInheritedLayoutInsetsDidChange");
}

id objc_msgSend_nativeBounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nativeBounds");
}

id objc_msgSend_prepare(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepare");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_scaleForVerticalPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleForVerticalPosition:");
}

id objc_msgSend_selectionChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionChanged");
}

id objc_msgSend_setActivityIndicatorViewStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIndicatorViewStyle:");
}

id objc_msgSend_setBlurRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlurRadius:");
}

id objc_msgSend_setColorTint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorTint:");
}

id objc_msgSend_setColorTintAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorTintAlpha:");
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompositingFilter:");
}

id objc_msgSend_setControlSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlSize:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setGrayscaleTintAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrayscaleTintAlpha:");
}

id objc_msgSend_setGrayscaleTintLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrayscaleTintLevel:");
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScale:");
}

id objc_msgSend_setZoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoom:");
}

id objc_msgSend_set_internalNSSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_internalNSSlider:");
}

id objc_msgSend_settingsForPrivateStyle_graphicsQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsForPrivateStyle:graphicsQuality:");
}

id objc_msgSend_standaloneControlsDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standaloneControlsDelegate");
}

id objc_msgSend_standaloneMediaControlsViewController_didSelectRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standaloneMediaControlsViewController:didSelectRoute:");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_superclass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superclass");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_thumbHitRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbHitRect");
}

id objc_msgSend_trackRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackRectForBounds:");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueWithUIEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithUIEdgeInsets:");
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalSizeClass");
}

id objc_msgSend_viewControllerForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForView:");
}
