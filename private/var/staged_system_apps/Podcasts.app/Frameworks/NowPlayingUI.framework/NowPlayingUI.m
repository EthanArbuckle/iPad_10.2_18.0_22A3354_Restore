void sub_4628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 200), 8);
  _Block_object_dispose((const void *)(v39 - 112), 8);
  _Unwind_Resume(a1);
}

id UITableViewCellDisclosureChevronImage()
{
  UITableViewCell *v0;
  void *v1;

  v0 = objc_opt_new(UITableViewCell);
  v1 = (void *)objc_claimAutoreleasedReturnValue(-[UITableViewCell _disclosureChevronImage:](v0, "_disclosureChevronImage:", 0));

  return v1;
}

id __Music_darwinNotificationReceived(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "darwinNotificationReceived");
}

BOOL sub_5CBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_5CD4()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_5D18()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_5D40(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t variable initialization expression of PlayerPathCoordinator.needsInitialPath()
{
  return 1;
}

Swift::Int sub_5D8C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  return Hasher._finalize()();
}

Swift::Int sub_5DC0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  return Hasher._finalize()();
}

uint64_t sub_5DF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  char *v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD);
  char *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  double v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  _QWORD v105[3];
  double v106[3];
  double v107;
  double v108;
  uint64_t v109;
  double v110[3];
  double v111;
  double v112;
  uint64_t v113;

  v100 = a2;
  v99 = type metadata accessor for GraphicsContext.Shading(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for RoundedCornerStyle(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for ColorSchemeContrast(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Text.Layout.Run(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v102 = (char *)&v75 - v11;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9AC8);
  v12 = __chkstk_darwin(v81);
  v80 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v75 - v14;
  v16 = type metadata accessor for Text.Layout(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v78 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Text.Layout.Line(0);
  v85 = *(_QWORD *)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v84 = (char *)&v75 - v23;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9AD0);
  __chkstk_darwin(v104);
  v103 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v103);
  v86 = (uint64_t)&v75 - v26;
  v79 = v17;
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v77(v25, a1, v16);
  v27 = sub_8330(&qword_1F9AD8, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout, (uint64_t)&protocol conformance descriptor for Text.Layout);
  dispatch thunk of Collection.startIndex.getter(v110, v16, v27);
  v28 = v104;
  v29 = (uint64_t)v103;
  *(double *)&v103[*(int *)(v104 + 36)] = v110[0];
  v30 = v86;
  sub_982C(v29, v86, &qword_1F9AD0);
  v31 = (uint64_t *)(v30 + *(int *)(v28 + 36));
  v104 = *v31;
  v83 = v27;
  dispatch thunk of Collection.endIndex.getter(v105, v16, v27);
  if (v104 != v105[0])
  {
    v88 = enum case for ColorSchemeContrast.standard(_:);
    v87 = enum case for RoundedCornerStyle.continuous(_:);
    v89 = v6;
    v90 = v7;
    v76 = v16;
    v82 = v31;
    v75 = v22;
    do
    {
      v34 = v31;
      v35 = v86;
      v36 = v83;
      v103 = (char *)dispatch thunk of Collection.subscript.read(v105, v34, v16, v83);
      v104 = *(_QWORD *)(v85 + 16);
      ((void (*)(char *))v104)(v84);
      ((void (*)(_QWORD *, _QWORD))v103)(v105, 0);
      v37 = v78;
      v77((uint64_t)v78, v35, v16);
      dispatch thunk of Collection.formIndex(after:)(v82, v16, v36);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v16);
      v38 = (uint64_t)v80;
      v39 = v84;
      ((void (*)(char *, char *, uint64_t))v104)(v80, v84, v19);
      v40 = sub_8330(&qword_1F9AE0, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout.Line, (uint64_t)&protocol conformance descriptor for Text.Layout.Line);
      dispatch thunk of Collection.startIndex.getter(v105, v19, v40);
      v103 = *(char **)(v85 + 8);
      ((void (*)(char *, uint64_t))v103)(v39, v19);
      v41 = v81;
      *(_QWORD *)(v38 + *(int *)(v81 + 36)) = v105[0];
      sub_982C(v38, (uint64_t)v15, &qword_1F9AC8);
      v42 = &v15[*(int *)(v41 + 36)];
      while (1)
      {
        v54 = *(_QWORD *)v42;
        dispatch thunk of Collection.endIndex.getter(v105, v19, v40);
        if (v54 == v105[0])
          break;
        v55 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v105, v42, v19, v40);
        v56 = v102;
        (*(void (**)(char *))(v7 + 16))(v102);
        v55(v105, 0);
        ((void (*)(char *, char *, uint64_t))v104)(v22, v15, v19);
        dispatch thunk of Collection.formIndex(after:)(v42, v19, v40);
        ((void (*)(char *, uint64_t))v103)(v22, v19);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v56, v6);
        v57 = sub_9870();
        Text.Layout.Run.subscript.getter(v105, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, v57);
        if ((v105[0] & 1) != 0)
        {
          v58 = sub_98B4();
          Text.Layout.Run.subscript.getter(v105, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight, v58);
          if (LOBYTE(v105[0]) != 1)
          {
            v63 = v101 + *(int *)(type metadata accessor for TranscriptTextContentRenderer(0) + 20);
            v64 = v92;
            v65 = v91;
            v66 = v93;
            (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, v88, v93);
            LOBYTE(v63) = static ColorSchemeContrast.== infix(_:_:)(v63, v65);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
            if ((v63 & 1) != 0)
            {
              v67 = &qword_1F9408;
              v7 = v90;
              if (qword_1F9400 != -1)
              {
                swift_once(&qword_1F9400, sub_71EC);
                v67 = &qword_1F9408;
              }
            }
            else
            {
              v67 = &qword_1F9428;
              v7 = v90;
              if (qword_1F9420 != -1)
              {
                swift_once(&qword_1F9420, sub_723C);
                v67 = &qword_1F9428;
              }
            }
            v44 = *v67;
            v68 = swift_retain(*v67);
            v69 = *v100;
            Text.Layout.Run.typographicBounds.getter(v110, v68);
            v70 = v110[1] - v111;
            v71 = v111 + v112;
            v72 = v110[0] + -2.0;
            v73 = v110[2] + 4.0;
            v74 = v94;
            (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, v87, v96);
            Path.init(roundedRect:cornerRadius:style:)(&v113, v74, v72, v70, v73, v71, 4.0);
            v52 = v97;
            static GraphicsContext.Shading.color(_:)(v44);
            GraphicsContext.fill(_:with:style:)(&v113, v52, 256, v69);
            v53 = &v113;
            goto LABEL_9;
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
        else
        {
          v59 = v101 + *(int *)(type metadata accessor for TranscriptTextContentRenderer(0) + 20);
          v60 = v92;
          v61 = v91;
          v62 = v93;
          (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v91, v88, v93);
          LOBYTE(v59) = static ColorSchemeContrast.== infix(_:_:)(v59, v61);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
          if ((v59 & 1) != 0)
          {
            v43 = &qword_1F93F8;
            v7 = v90;
            if (qword_1F93F0 != -1)
            {
              swift_once(&qword_1F93F0, sub_71D0);
              v43 = &qword_1F93F8;
            }
          }
          else
          {
            v43 = &qword_1F9418;
            v7 = v90;
            if (qword_1F9410 != -1)
            {
              swift_once(&qword_1F9410, sub_7200);
              v43 = &qword_1F9418;
            }
          }
          v44 = *v43;
          v45 = swift_retain(*v43);
          v46 = *v100;
          Text.Layout.Run.typographicBounds.getter(v106, v45);
          v47 = v106[1] - v107;
          v48 = v107 + v108;
          v49 = v106[0] + -2.0;
          v50 = v106[2] + 4.0;
          v51 = v94;
          (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, v87, v96);
          Path.init(roundedRect:cornerRadius:style:)(&v109, v51, v49, v47, v50, v48, 4.0);
          v52 = v97;
          static GraphicsContext.Shading.color(_:)(v44);
          GraphicsContext.fill(_:with:style:)(&v109, v52, 256, v46);
          v53 = &v109;
LABEL_9:
          sub_98F8((uint64_t)v53);
          swift_release(v44);
          (*(void (**)(char *, uint64_t))(v98 + 8))(v52, v99);
          v6 = v89;
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v89);
        }
      }
      sub_9944((uint64_t)v15, &qword_1F9AC8);
      v31 = v82;
      v33 = *v82;
      v16 = v76;
      dispatch thunk of Collection.endIndex.getter(v105, v76, v83);
    }
    while (v33 != v105[0]);
  }
  return sub_9944(v86, &qword_1F9AD0);
}

uint64_t sub_68D4(void (*a1)(char *), uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  void (*v37)(_QWORD *, _QWORD);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  _QWORD *v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *);
  _BYTE *v90;
  char v91;
  _QWORD v92[5];

  v89 = a1;
  v85 = a2;
  v2 = type metadata accessor for ColorSchemeContrast(0);
  v81 = *(_QWORD *)(v2 - 8);
  v82 = v2;
  __chkstk_darwin(v2);
  v80 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Text.Layout.Run(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v84 = (char *)&v67 - v9;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9AC8);
  v10 = __chkstk_darwin(v74);
  v73 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v67 - v12;
  v14 = type metadata accessor for Text.Layout(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v71 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Text.Layout.Line(0);
  v77 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v83 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v76 = (char *)&v67 - v20;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9AD0);
  v21 = __chkstk_darwin(v88);
  v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v67 - v24;
  v72 = v15;
  v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v27 = v17;
  v70 = v26;
  v26(v23, (char *)v89, v14);
  v78 = sub_8330(&qword_1F9AD8, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout, (uint64_t)&protocol conformance descriptor for Text.Layout);
  dispatch thunk of Collection.startIndex.getter(v92, v14, v78);
  v28 = v88;
  *(_QWORD *)&v23[*(int *)(v88 + 36)] = v92[0];
  v29 = (uint64_t)v23;
  v30 = v83;
  sub_982C(v29, (uint64_t)v25, &qword_1F9AD0);
  v31 = v14;
  v75 = &v25[*(int *)(v28 + 36)];
  v32 = *(_QWORD *)v75;
  v33 = v31;
  dispatch thunk of Collection.endIndex.getter(v92, v31, v78);
  if (v32 != v92[0])
  {
    v79 = enum case for ColorSchemeContrast.standard(_:);
    v69 = v33;
    v68 = v25;
    do
    {
      v36 = v75;
      v37 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v75, v33, v78);
      v89 = *(void (**)(char *))(v77 + 16);
      v89(v76);
      v37(v92, 0);
      v38 = v71;
      v70(v71, v25, v33);
      dispatch thunk of Collection.formIndex(after:)(v36, v33, v78);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v33);
      v39 = (uint64_t)v73;
      v40 = v76;
      ((void (*)(char *, char *, uint64_t))v89)(v73, v76, v27);
      v41 = sub_8330(&qword_1F9AE0, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout.Line, (uint64_t)&protocol conformance descriptor for Text.Layout.Line);
      dispatch thunk of Collection.startIndex.getter(v92, v27, v41);
      v88 = *(_QWORD *)(v77 + 8);
      ((void (*)(char *, uint64_t))v88)(v40, v27);
      v42 = v74;
      *(_QWORD *)(v39 + *(int *)(v74 + 36)) = v92[0];
      sub_982C(v39, (uint64_t)v13, &qword_1F9AC8);
      v43 = &v13[*(int *)(v42 + 36)];
      v44 = *(_QWORD *)v43;
      dispatch thunk of Collection.endIndex.getter(v92, v27, v41);
      if (v44 != v92[0])
      {
        v86 = v43;
        v87 = v41;
        do
        {
          v58 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v43, v27, v41);
          v59 = v84;
          (*(void (**)(char *))(v5 + 16))(v84);
          v58(v92, 0);
          ((void (*)(char *, char *, uint64_t))v89)(v30, v13, v27);
          dispatch thunk of Collection.formIndex(after:)(v43, v27, v41);
          ((void (*)(char *, uint64_t))v88)(v30, v27);
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v59, v4);
          v60 = *v85;
          v92[0] = *v85;
          if ((*v90 & 1) != 0)
          {
            v61 = sub_9980();
            swift_retain(v60);
            Text.Layout.Run.subscript.getter(&v91, &type metadata for TranscriptTextContentRenderer.Read, &type metadata for TranscriptTextContentRenderer.Read, v61);
            if ((v91 & 1) != 0
              || (v62 = sub_9870(),
                  Text.Layout.Run.subscript.getter(&v91, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, v62), (v91 & 1) != 0)|| (v63 = sub_98B4(), v54 = Text.Layout.Run.subscript.getter(&v91, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight, v63), v55 = 0.0, v91 == 1))
            {
              v45 = &v90[*(int *)(type metadata accessor for TranscriptTextContentRenderer(0) + 20)];
              v47 = v81;
              v46 = v82;
              v48 = v27;
              v49 = v13;
              v50 = v5;
              v51 = v4;
              v52 = v80;
              (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v80, v79, v82);
              LOBYTE(v45) = static ColorSchemeContrast.== infix(_:_:)(v45, v52);
              v53 = v52;
              v4 = v51;
              v5 = v50;
              v13 = v49;
              v27 = v48;
              v30 = v83;
              v54 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v53, v46);
              if ((v45 & 1) != 0)
                v55 = 0.4;
              else
                v55 = 0.55;
            }
          }
          else
          {
            v64 = sub_9870();
            swift_retain(v60);
            v54 = Text.Layout.Run.subscript.getter(&v91, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, v64);
            v55 = 1.0;
            if (v91 == 1)
            {
              v65 = sub_98B4();
              v54 = Text.Layout.Run.subscript.getter(&v91, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight, v65);
              if (v91 == 1)
              {
                v66 = sub_9980();
                v54 = Text.Layout.Run.subscript.getter(&v91, &type metadata for TranscriptTextContentRenderer.Read, &type metadata for TranscriptTextContentRenderer.Read, v66);
                if (v91)
                  v55 = 0.0;
                else
                  v55 = 0.95;
              }
            }
          }
          GraphicsContext.opacity.setter(v54, v55);
          v56 = v92[0];
          swift_retain(v92[0]);
          GraphicsContext.draw(_:options:)(v8, 0, v56);
          swift_release_n(v56, 2);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          v43 = v86;
          v41 = v87;
          v57 = *(_QWORD *)v86;
          dispatch thunk of Collection.endIndex.getter(v92, v27, v87);
        }
        while (v57 != v92[0]);
      }
      sub_9944((uint64_t)v13, &qword_1F9AC8);
      v35 = *(_QWORD *)v75;
      v25 = v68;
      v33 = v69;
      dispatch thunk of Collection.endIndex.getter(v92, v69, v78);
    }
    while (v35 != v92[0]);
  }
  return sub_9944((uint64_t)v25, &qword_1F9AD0);
}

uint64_t sub_70B4(void (*a1)(char *), uint64_t *a2)
{
  _BYTE *v2;

  if ((*v2 & 1) == 0)
    sub_5DF0((uint64_t)a1, a2);
  return sub_68D4(a1, a2);
}

uint64_t sub_70F8(uint64_t a1, char a2)
{
  return TextProxy.sizeThatFits(_:)(a1, a2 & 1);
}

double sub_7130()
{
  return 0.0;
}

void (*sub_7144(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_71A0;
}

void sub_71A0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_71D0()
{
  uint64_t result;

  result = static Color.white.getter();
  qword_1F93F8 = result;
  return result;
}

uint64_t sub_71EC(uint64_t a1)
{
  return sub_7250(a1, (uint64_t (*)(void))&static Color.white.getter, &qword_1F9408);
}

uint64_t sub_7200()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemYellowColor");
  result = Color.init(_:)(v0);
  qword_1F9418 = result;
  return result;
}

uint64_t sub_723C(uint64_t a1)
{
  return sub_7250(a1, (uint64_t (*)(void))&static Color.gray.getter, &qword_1F9428);
}

uint64_t sub_7250(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a2();
  v5 = Color.opacity(_:)(0.3);
  result = swift_release(v4);
  *a3 = v5;
  return result;
}

CGFloat variable initialization expression of StandaloneMiniPlayerViewController.providedMargins()
{
  return UIEdgeInsetsZero.top;
}

id variable initialization expression of StandaloneMiniPlayerViewController.paletteView()
{
  uint64_t v0;

  v0 = type metadata accessor for PaletteVisualEffectView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

uint64_t variable initialization expression of Window.overrideTraitCollection()
{
  return 0;
}

uint64_t variable initialization expression of Window.screenDimensionsDidChangeHandler()
{
  return 0;
}

uint64_t variable initialization expression of NowPlayingMediaPlayerController.viewModel()
{
  return sub_747C((uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingViewModel, (uint64_t (*)(void))&NowPlayingViewModel.init());
}

void *variable initialization expression of SleepTimerController.subscriptions()
{
  return &_swiftEmptySetSingleton;
}

uint64_t variable initialization expression of NowPlayingMediaPlayerController.playerStylePublisher()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for NowPlayingViewModel.PlayerStyle(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, enum case for NowPlayingViewModel.PlayerStyle.mini(_:));
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F96E0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  return CurrentValueSubject.init(_:)(v2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *variable initialization expression of NowPlayingMediaPlayerController.miniPlayerSublineController()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v0 = type metadata accessor for NowPlayingMiniPlayerSublineController(0);
  v1 = (_QWORD *)swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v2 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(0);
  v1[2] = 0;
  v1[3] = 0;
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = sub_5C544();
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = v3;
  v4 = (char *)v1
     + OBJC_IVAR____TtC12NowPlayingUI37NowPlayingMiniPlayerSublineController____lazy_storage___miniPlayerSubtitle;
  v5 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  return v1;
}

uint64_t variable initialization expression of NowPlayingMediaPlayerController.transcriptSyncingStateObserver()
{
  return sub_747C((uint64_t (*)(_QWORD))&type metadata accessor for TranscriptSyncingStateObserver, (uint64_t (*)(void))&TranscriptSyncingStateObserver.init());
}

uint64_t sub_747C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void))
{
  uint64_t v3;

  v3 = a1(0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  return a2();
}

uint64_t variable initialization expression of ContextActionsPresentationRegistration.showingRealPreview()
{
  return 0;
}

id variable initialization expression of NowPlayingEpisodeUpsellBannerView.imageView()
{
  return objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
}

double variable initialization expression of ContextActionsConfiguration.previewModel@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id variable initialization expression of NowPlayingTabController_iOS.accessoryView()
{
  return objc_msgSend(objc_allocWithZone((Class)UIView), "init");
}

id variable initialization expression of NowPlayingTabController_iOS.separator()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "_barHairlineShadowColor");
  objc_msgSend(v0, "setBackgroundColor:", v1);

  return v0;
}

void *variable initialization expression of PlayerPathCoordinator.updateBlocks()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of ContextActionsConfiguration.presentationSource@<X0>(uint64_t a1@<X8>)
{
  return sub_7838((uint64_t (*)(_QWORD))&type metadata accessor for PresentationSource, a1);
}

uint64_t variable initialization expression of PlayerPathCoordinator.invalidationQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  void *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7748();
  static DispatchQoS.unspecified.getter();
  v15 = &_swiftEmptyArrayStorage;
  v10 = sub_8330((unint64_t *)&unk_1F96F0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2001E0);
  v12 = sub_7784();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000032, 0x8000000000183620, v9, v6, v3, 0);
}

unint64_t sub_7748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB310;
  if (!qword_1FB310)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FB310);
  }
  return result;
}

unint64_t sub_7784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F9700;
  if (!qword_1F9700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2001E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1F9700);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t variable initialization expression of PlayerPathCoordinator.failingPlayerPathTimers()
{
  return sub_CA7D8((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of NowPlayingStoreTranscriptIdentifierProvider.currentEpisodeAdamID()
{
  return 0;
}

uint64_t variable initialization expression of NowPlayingStoreTranscriptIdentifierProvider._transcriptRequestInformation@<X0>(uint64_t a1@<X8>)
{
  return sub_7838((uint64_t (*)(_QWORD))&type metadata accessor for TranscriptRequestInformation, a1);
}

uint64_t sub_7838@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

void type metadata accessor for MTNowPlayingIndicatorPlaybackState(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9708, (uint64_t)&unk_1C6778);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Window.Dimensions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Window.Dimensions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9710, (uint64_t)&unk_1C67F0);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9718, (uint64_t)&unk_1C6828);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9720, (uint64_t)&unk_1C6850);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9728, (uint64_t)&unk_1C68C8);
}

void type metadata accessor for Event(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9730, (uint64_t)&unk_1C68F0);
}

void type metadata accessor for _UIBackdropViewOverlayBlendMode(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9738, (uint64_t)&unk_1C6918);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9740, (uint64_t)&unk_1C6938);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9748, (uint64_t)&unk_1C69B0);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9750, (uint64_t)&unk_1C6A30);
}

void type metadata accessor for MPDetailScrubSpeed(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9758, (uint64_t)&unk_1C6A58);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9760, (uint64_t)&unk_1C6A78);
}

uint64_t initializeBufferWithCopyOfBuffer for TextContent.ID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t _s10DimensionsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s10DimensionsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9768, (uint64_t)&unk_1C6AF8);
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_7A9C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_7AF0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

void type metadata accessor for MPCPlayerItemDurationSnapshot(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9770, (uint64_t)&unk_1C6B80);
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9778, (uint64_t)&unk_1C6BC8);
}

uint64_t sub_7B68(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_7B88(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9780, (uint64_t)&unk_1C6C40);
}

NSNumber sub_7BC4()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_7BCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_7C1C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_7C70(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_7C94(uint64_t a1, uint64_t a2)
{
  return sub_87E0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void sub_7CB4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_7CBC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

NSNumber sub_7CEC()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_7CF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_7D44(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_7D98(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_7DBC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_7DD0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_7DE4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_7DF8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_7E0C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_7E38@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_7E5C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_7E70(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_7E84(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_7E98@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_7EAC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_7EC0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_7ED4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_7EE8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_7EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_7F10(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_7F24(uint64_t a1, uint64_t a2)
{
  return sub_87E0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_7F30(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_7FA4(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_8020@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

void sub_8060(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_8070@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_9ACC(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

_QWORD *sub_80AC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_80BC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_80CC@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_80D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_8330(&qword_1F99A8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_16A3BC);
  v3 = sub_8330(&qword_1F99B0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_16A35C);
  v4 = sub_90D8();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_8178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
  v3 = sub_8330(&qword_1F9A08, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_169A58);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_81FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330(&qword_1F9818, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_169608);
  v3 = sub_8330(&qword_1F9820, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1695A8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330((unint64_t *)&qword_1F9828, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_169380);
  v3 = sub_8330(&qword_1F9830, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_169320);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8304()
{
  return sub_8330(&qword_1F9788, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1692E4);
}

uint64_t sub_8330(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_8370()
{
  return sub_8330(&qword_1F9790, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1692B8);
}

uint64_t sub_839C()
{
  return sub_8330(&qword_1F9798, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_169354);
}

uint64_t sub_83C8()
{
  return sub_8330(&qword_1F97A0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_16956C);
}

uint64_t sub_83F4()
{
  return sub_8330(&qword_1F97A8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_169540);
}

_DWORD *sub_8420@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_8430@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_843C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330(&qword_1F99E0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_169FF8);
  v3 = sub_8330(&qword_1F99E8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_169F98);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

uint64_t sub_84D0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_84F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330(&qword_1F9998, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_16A504);
  v3 = sub_8330(&qword_1F99A0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_16A4AC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_857C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330(&qword_1F99D0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_16A58C);
  v3 = sub_8330(&qword_1F99D8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_16A0F0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8600(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330(&qword_1F99C0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_16A264);
  v3 = sub_8330(&qword_1F99C8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_16A204);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_8684@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_86C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_8330(&qword_1F99F0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_16A648);
  v3 = sub_8330(&qword_1F99F8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_169B6C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_874C()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_8754()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_8784(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

uint64_t sub_8794()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_879C()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_87CC(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_87E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_881C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_885C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

BOOL sub_88CC(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_88E0()
{
  return sub_8330(&qword_1F97B0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1695DC);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9838, (uint64_t)&unk_1C6C68);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9840, (uint64_t)&unk_1C6C90);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9848, (uint64_t)&unk_1C6CB8);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9850, (uint64_t)&unk_1C6CE0);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9858, (uint64_t)&unk_1C6D08);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9860, (uint64_t)&unk_1C6D38);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9868, (uint64_t)&unk_1C6D60);
}

{
  sub_99D8(a1, &qword_1F9870, (uint64_t)&unk_1C6D88);
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.PrimaryHighlight()
{
  return &type metadata for TranscriptTextContentRenderer.PrimaryHighlight;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.SecondaryHighlight()
{
  return &type metadata for TranscriptTextContentRenderer.SecondaryHighlight;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.Read()
{
  return &type metadata for TranscriptTextContentRenderer.Read;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9878, (uint64_t)&unk_1C6E60);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9880, (uint64_t)&unk_1C6E88);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9888, (uint64_t)&unk_1C6EB0);
}

void type metadata accessor for NSStringDrawingOptions(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9890, (uint64_t)&unk_1C6ED8);
}

void type metadata accessor for NSLineBreakMode(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9898, (uint64_t)&unk_1C6F00);
}

uint64_t sub_8A40()
{
  return sub_8330(&qword_1F98A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_169A1C);
}

uint64_t sub_8A6C()
{
  return sub_8330(&qword_1F98A8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1699F0);
}

uint64_t sub_8A98()
{
  return sub_8330(&qword_1F98B0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_169B30);
}

uint64_t sub_8AC4()
{
  return sub_8330(&qword_1F98B8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_169B04);
}

unint64_t sub_8AF4()
{
  unint64_t result;

  result = qword_1F98C0;
  if (!qword_1F98C0)
  {
    result = swift_getWitnessTable(&unk_169C18, &type metadata for TranscriptTextContentRenderer.Read);
    atomic_store(result, (unint64_t *)&qword_1F98C0);
  }
  return result;
}

unint64_t sub_8B3C()
{
  unint64_t result;

  result = qword_1F98C8;
  if (!qword_1F98C8)
  {
    result = swift_getWitnessTable(&unk_169C80, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight);
    atomic_store(result, (unint64_t *)&qword_1F98C8);
  }
  return result;
}

unint64_t sub_8B84()
{
  unint64_t result;

  result = qword_1F98D0;
  if (!qword_1F98D0)
  {
    result = swift_getWitnessTable(&unk_169CE8, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight);
    atomic_store(result, (unint64_t *)&qword_1F98D0);
  }
  return result;
}

uint64_t sub_8BC8()
{
  return sub_8330(&qword_1F98D8, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_169DC0);
}

uint64_t sub_8BF4()
{
  return sub_8330(&qword_1F98E0, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_169D8C);
}

uint64_t sub_8C20()
{
  return sub_8330(&qword_1F98E8, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_169DEC);
}

uint64_t sub_8C4C()
{
  return sub_8330(&qword_1F98F0, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_169E28);
}

uint64_t sub_8C78()
{
  return sub_8330(&qword_1F98F8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_169F5C);
}

uint64_t sub_8CA4()
{
  return sub_8330(&qword_1F9900, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_169F30);
}

BOOL sub_8CD0(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_8CE4()
{
  return sub_8330(&qword_1F9908, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_169FCC);
}

uint64_t sub_8D10()
{
  return sub_8330(&qword_1F9910, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_16A0B4);
}

uint64_t sub_8D3C()
{
  return sub_8330(&qword_1F9918, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_16A088);
}

uint64_t sub_8D68()
{
  return sub_8330(&qword_1F9920, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_16A1C8);
}

uint64_t sub_8D94()
{
  return sub_8330(&qword_1F9928, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_16A19C);
}

uint64_t sub_8DC0()
{
  return sub_8330(&qword_1F9930, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_16A238);
}

uint64_t sub_8DEC()
{
  return sub_8330(&qword_1F9938, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_16A320);
}

uint64_t sub_8E18()
{
  return sub_8330(&qword_1F9940, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_16A2F4);
}

uint64_t sub_8E44()
{
  return sub_8330(&qword_1F9948, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_16A390);
}

uint64_t sub_8E70()
{
  return sub_8330(&qword_1F9950, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_16A474);
}

uint64_t sub_8E9C()
{
  return sub_8330(&qword_1F9958, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_16A44C);
}

uint64_t sub_8EC8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_8F50()
{
  return sub_8330(&qword_1F9960, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_16A4DC);
}

uint64_t sub_8F7C()
{
  return sub_8330(&qword_1F9968, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_16A124);
}

unint64_t sub_8FAC()
{
  unint64_t result;

  result = qword_1F9970;
  if (!qword_1F9970)
  {
    result = swift_getWitnessTable(&unk_169D10, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight);
    atomic_store(result, (unint64_t *)&qword_1F9970);
  }
  return result;
}

unint64_t sub_8FF4()
{
  unint64_t result;

  result = qword_1F9978;
  if (!qword_1F9978)
  {
    result = swift_getWitnessTable(&unk_169CA8, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight);
    atomic_store(result, (unint64_t *)&qword_1F9978);
  }
  return result;
}

unint64_t sub_903C()
{
  unint64_t result;

  result = qword_1F9980;
  if (!qword_1F9980)
  {
    result = swift_getWitnessTable(&unk_169C40, &type metadata for TranscriptTextContentRenderer.Read);
    atomic_store(result, (unint64_t *)&qword_1F9980);
  }
  return result;
}

uint64_t sub_9080()
{
  return sub_8330(&qword_1F9988, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_169BA0);
}

uint64_t sub_90AC()
{
  return sub_8330(&qword_1F9990, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_169A8C);
}

unint64_t sub_90D8()
{
  unint64_t result;

  result = qword_1F99B8;
  if (!qword_1F99B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1F99B8);
  }
  return result;
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9A10, (uint64_t)&unk_1C6F20);
}

uint64_t *sub_9130(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + v11) = v12;
  }
  swift_retain(v12);
  return v4;
}

uint64_t sub_91D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ColorSchemeContrast(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

_BYTE *sub_9228(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ColorSchemeContrast(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  swift_retain(v11);
  return a1;
}

_BYTE *sub_92A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ColorSchemeContrast(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)&a2[v10];
  v12 = *(_QWORD *)&a1[v10];
  *(_QWORD *)&a1[v10] = v11;
  swift_retain(v11);
  swift_release(v12);
  return a1;
}

_BYTE *sub_932C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ColorSchemeContrast(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_93A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ColorSchemeContrast(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)&a1[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_release(v11);
  return a1;
}

uint64_t sub_9424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9430);
}

uint64_t sub_9430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ColorSchemeContrast(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_94B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_94BC);
}

uint64_t sub_94BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ColorSchemeContrast(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TranscriptTextContentRenderer(uint64_t a1)
{
  uint64_t result;

  result = qword_1F9A70;
  if (!qword_1F9A70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TranscriptTextContentRenderer);
  return result;
}

uint64_t sub_9574(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_16A6E8;
  result = type metadata accessor for ColorSchemeContrast(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptTextContentRenderer.Mode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptTextContentRenderer.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_96DC + 4 * byte_1690A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_9710 + 4 * byte_1690A0[v4]))();
}

uint64_t sub_9710(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9718(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x9720);
  return result;
}

uint64_t sub_972C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x9734);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_9738(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9740(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_974C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_9754(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.Mode()
{
  return &type metadata for TranscriptTextContentRenderer.Mode;
}

unint64_t sub_9774()
{
  unint64_t result;

  result = qword_1F9AB0;
  if (!qword_1F9AB0)
  {
    result = swift_getWitnessTable(&unk_16A748, &type metadata for TranscriptTextContentRenderer.Mode);
    atomic_store(result, (unint64_t *)&qword_1F9AB0);
  }
  return result;
}

unint64_t sub_97BC()
{
  unint64_t result;

  result = qword_1F9AB8;
  if (!qword_1F9AB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyAnimatableData, &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_1F9AB8);
  }
  return result;
}

uint64_t sub_9800()
{
  return sub_8330(&qword_1F9AC0, type metadata accessor for TranscriptTextContentRenderer, (uint64_t)&unk_16A770);
}

uint64_t sub_982C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_9870()
{
  unint64_t result;

  result = qword_1F9AE8;
  if (!qword_1F9AE8)
  {
    result = swift_getWitnessTable(&unk_16A5D0, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight);
    atomic_store(result, (unint64_t *)&qword_1F9AE8);
  }
  return result;
}

unint64_t sub_98B4()
{
  unint64_t result;

  result = qword_1F9AF0;
  if (!qword_1F9AF0)
  {
    result = swift_getWitnessTable(&unk_16A5F8, &type metadata for TranscriptTextContentRenderer.SecondaryHighlight);
    atomic_store(result, (unint64_t *)&qword_1F9AF0);
  }
  return result;
}

uint64_t sub_98F8(uint64_t a1)
{
  sub_992C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_992C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3)
    return swift_release(result);
  return result;
}

uint64_t sub_9944(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_9980()
{
  unint64_t result;

  result = qword_1F9AF8;
  if (!qword_1F9AF8)
  {
    result = swift_getWitnessTable(&unk_16A620, &type metadata for TranscriptTextContentRenderer.Read);
    atomic_store(result, (unint64_t *)&qword_1F9AF8);
  }
  return result;
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
  sub_99D8(a1, &qword_1F9B00, (uint64_t)&unk_1C6FD0);
}

void sub_99D8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_9A1C()
{
  return sub_8330(&qword_1F9B08, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_16A868);
}

uint64_t sub_9A48()
{
  return sub_8330(&qword_1F9B10, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_16A834);
}

uint64_t sub_9A74()
{
  return sub_8330(&qword_1F9B18, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_16A894);
}

uint64_t sub_9AA0()
{
  return sub_8330((unint64_t *)&unk_1F9B20, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_16A8D0);
}

uint64_t sub_9ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void NowPlayingTabController_iOS.automaticallyPresentedContentItemIdentifier.setter()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t sub_9B84()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16ABC8);
  v4 = v0;
  v2 = sub_A64C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_9BF0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t sub_9BF8()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16ABA0);
  v4 = v0;
  v2 = sub_A64C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_9C64@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16ABA0);
  v7 = v3;
  v5 = sub_A64C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  result = swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_9CD8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16ABA0);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_A64C();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_A6F4, v7, (char *)&type metadata for () + 8, v5);
  return swift_release(KeyPath);
}

uint64_t sub_9D68()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16AB50);
  v4 = v0;
  v2 = sub_A64C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_retain(*(_QWORD *)(v0 + 24));
}

uint64_t sub_9DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2;
  swift_retain(a2);
  return swift_release(v2);
}

uint64_t sub_9E10()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16AB78);
  v4 = v0;
  v2 = sub_A64C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_9E7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16AB78);
  v7 = v3;
  v5 = sub_A64C();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  result = swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_9EF0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16AB78);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_A64C();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_A708, v7, (char *)&type metadata for () + 8, v5);
  return swift_release(KeyPath);
}

uint64_t sub_9F80(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  unint64_t v4;
  char *v5;
  void (*v6)();
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if ((!a2 || a2 == 1 || a2 == 2) && a1 == 129)
  {
    KeyPath = swift_getKeyPath(&unk_16ABA0);
    __chkstk_darwin(KeyPath);
    v9 = v2;
    v10 = 1;
    v11 = v2;
    v4 = sub_A64C();
    v5 = (char *)&type metadata for () + 8;
    v6 = sub_A6F4;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_16ABA0);
    __chkstk_darwin(KeyPath);
    v9 = v2;
    v10 = 0;
    v11 = v2;
    v4 = sub_A64C();
    v5 = (char *)&type metadata for () + 8;
    v6 = sub_A6DC;
  }
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, v6, &v8, v5, v4);
  return swift_release(KeyPath);
}

uint64_t sub_A0B4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  unint64_t v4;
  char *v5;
  void (*v6)();
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a2 - 1 >= 2)
  {
    if (a2)
    {
      KeyPath = swift_getKeyPath(&unk_16AB78);
      __chkstk_darwin(KeyPath);
      v9 = v2;
      v10 = 0;
      v11 = v2;
      v4 = sub_A64C();
      v5 = (char *)&type metadata for () + 8;
      v6 = sub_A6C4;
    }
    else
    {
      KeyPath = swift_getKeyPath(&unk_16AB78);
      __chkstk_darwin(KeyPath);
      v9 = v2;
      v10 = 1;
      v11 = v2;
      v4 = sub_A64C();
      v5 = (char *)&type metadata for () + 8;
      v6 = sub_A708;
    }
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_16AB78);
    __chkstk_darwin(KeyPath);
    v9 = v2;
    v10 = 2;
    v11 = v2;
    v4 = sub_A64C();
    v5 = (char *)&type metadata for () + 8;
    v6 = sub_A708;
  }
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, v6, &v8, v5, v4);
  return swift_release(KeyPath);
}

uint64_t sub_A230(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_BYTE *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = a1;
  *(_BYTE *)(v2 + 48) = a2;
  sub_A694(v5, v6);
  sub_A694(a1, a2);
  sub_A6A8(v5, v6);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_BYTE *)(v2 + 48);
  sub_A694(v7, v8);
  sub_C54D8(v7, v8);
  v10 = v9;
  sub_A6A8(v7, v8);
  if ((v10 & 1) == 0)
  {
    v11 = *(_QWORD *)(v2 + 40);
    v12 = *(_BYTE *)(v2 + 48);
    sub_A694(v11, v12);
    sub_9F80(v11, v12);
    sub_A6A8(v11, v12);
    v13 = *(_QWORD *)(v2 + 40);
    v14 = *(_BYTE *)(v2 + 48);
    sub_A694(v13, v14);
    sub_A0B4(v13, v14);
    sub_A6A8(v13, v14);
  }
  sub_A6A8(a1, a2);
  return sub_A6A8(v5, v6);
}

uint64_t sub_A344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_A6A8(*(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI29TranscriptPresentationContext___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_A3A8()
{
  return type metadata accessor for TranscriptPresentationContext(0);
}

uint64_t type metadata accessor for TranscriptPresentationContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1F9C80;
  if (!qword_1F9C80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TranscriptPresentationContext);
  return result;
}

uint64_t sub_A3EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_16AA50;
  v4[1] = &unk_16AA50;
  v4[2] = &unk_16AA68;
  v4[3] = &unk_16AA80;
  v4[4] = &unk_16AA98;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptPresentationContext.SpeakerVisibilityMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptPresentationContext.SpeakerVisibilityMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_A560 + 4 * byte_16A9E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_A594 + 4 * byte_16A9E0[v4]))();
}

uint64_t sub_A594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A59C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA5A4);
  return result;
}

uint64_t sub_A5B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA5B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_A5BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A5C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_A5D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptPresentationContext.SpeakerVisibilityMode()
{
  return &type metadata for TranscriptPresentationContext.SpeakerVisibilityMode;
}

unint64_t sub_A5EC()
{
  unint64_t result;

  result = qword_1F9D30;
  if (!qword_1F9D30)
  {
    result = swift_getWitnessTable(&unk_16AB08, &type metadata for TranscriptPresentationContext.SpeakerVisibilityMode);
    atomic_store(result, (unint64_t *)&qword_1F9D30);
  }
  return result;
}

BOOL sub_A630(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_A64C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F9D38;
  if (!qword_1F9D38)
  {
    v1 = type metadata accessor for TranscriptPresentationContext(255);
    result = swift_getWitnessTable(&unk_16AB30, v1);
    atomic_store(result, (unint64_t *)&qword_1F9D38);
  }
  return result;
}

uint64_t sub_A694(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 3)
    return swift_errorRetain();
  return result;
}

uint64_t sub_A6A8(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 3)
    return swift_errorRelease();
  return result;
}

void sub_A6C4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 32) = *(_BYTE *)(v0 + 24);
}

void sub_A6DC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 17) = *(_BYTE *)(v0 + 24);
}

void sub_A6F4()
{
  sub_A6DC();
}

void sub_A708()
{
  sub_A6C4();
}

unint64_t sub_A720()
{
  unint64_t result;

  result = qword_1F9D40;
  if (!qword_1F9D40)
  {
    result = swift_getWitnessTable(&unk_174230, &type metadata for TranscriptContentViewModel.ID);
    atomic_store(result, (unint64_t *)&qword_1F9D40);
  }
  return result;
}

uint64_t sub_A764(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a2;
  v3 = type metadata accessor for Logger(0);
  v37 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v36 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD **)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v34 - v16;
  v18 = sub_7B024();
  v39 = a1;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v39);

  v19 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v19(v10, 1, v11) == 1)
  {
    v8 = v10;
  }
  else
  {
    v34 = v3;
    v20 = (void (*)(char *, char *, uint64_t))v12[4];
    v20(v17, v10, v11);
    v21 = sub_7B024();
    v39 = v35;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v39);

    if (v19(v8, 1, v11) != 1)
    {
      v30 = ((uint64_t (*)(char *, char *, uint64_t))v20)(v15, v8, v11);
      v31 = IndexPath.row.getter(v30);
      v32 = IndexPath.row.getter(v31);
      v33 = (void (*)(char *, uint64_t))v12[1];
      v33(v15, v11);
      v33(v17, v11);
      if (v31 < v32)
        return -1;
      else
        return v32 < v31;
    }
    ((void (*)(char *, uint64_t))v12[1])(v17, v11);
    v3 = v34;
  }
  v22 = sub_C078((uint64_t)v8);
  v23 = v36;
  v24 = static Logger.transcripts.getter(v22);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v39 = v28;
    *(_DWORD *)v27 = 136315138;
    v38 = sub_C6F4(0xD000000000000022, 0x8000000000183710, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v27 + 4, v27 + 12);
    _os_log_impl(&dword_0, v25, v26, "%s Compare documents method has unexpected types.", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v3);
  return 0;
}

void sub_AADC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char **p_name;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  char *v22;
  objc_class *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  id v30;
  objc_class *v31;
  char *v32;
  _QWORD v33[12];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;
  objc_super v38;
  objc_super v39;
  uint64_t v40;

  v33[11] = a4;
  v35 = a1;
  v36 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_7B080();
  KeyPath = swift_getKeyPath(&unk_16ACB8);
  v11 = swift_getKeyPath(&unk_16ACE0);
  static Published.subscript.getter(&v40, v9, KeyPath, v11);
  swift_release(v9);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = v40;
  v13 = sub_1264BC(v40);
  swift_bridgeObjectRelease(v12);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v33[4] = v8;
    v33[5] = v6;
    v33[6] = v5;
    v15 = 0;
    p_name = &stru_1EDFF8.name;
    v33[3] = a3;
    v33[9] = v13;
    v33[2] = v14;
    v33[1] = v13 + 32;
    do
    {
      if (v15 >= *(_QWORD *)(v13 + 16))
      {
        __break(1u);
        JUMPOUT(0xB010);
      }
      v17 = (_QWORD *)(v13 + 32 + 16 * v15);
      v19 = *v17;
      v18 = v17[1];
      swift_retain(*v17);
      swift_retain(v18);
      v20 = objc_msgSend(a3, p_name[490]);
      v21 = sub_E84A0(v35, v36, (uint64_t)v20);
      if (v21)
      {
        v34 = v18;
        v22 = v21;
        if (*((_QWORD *)v21 + 2))
        {
          v33[7] = *((_QWORD *)v21 + 2);
          v33[8] = v15;
          v23 = (objc_class *)type metadata accessor for StringTextPosition();
          v33[10] = v22;
          v24 = (uint64_t *)(v22 + 40);
          v25 = *((_QWORD *)v22 + 4);
          v26 = *v24;
          v27 = (char *)objc_allocWithZone(v23);
          *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position] = v25;
          v39.receiver = v27;
          v39.super_class = v23;
          v28 = objc_msgSendSuper2(&v39, "init");
          v29 = (char *)objc_allocWithZone(v23);
          *(_QWORD *)&v29[OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position] = v26;
          v38.receiver = v29;
          v38.super_class = v23;
          v30 = objc_msgSendSuper2(&v38, "init");
          v31 = (objc_class *)type metadata accessor for StringTextRange();
          v32 = (char *)objc_allocWithZone(v31);
          *(_QWORD *)&v32[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition] = v28;
          *(_QWORD *)&v32[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition] = v30;
          v37.receiver = v32;
          v37.super_class = v31;
          objc_msgSendSuper2(&v37, "init");
          __asm { BR              X10 }
        }
        swift_release(v34);
        swift_release(v19);
        swift_bridgeObjectRelease(v22);
        p_name = (char **)(&stru_1EDFF8 + 8);
      }
      else
      {
        swift_release(v18);
        swift_release(v19);
      }
      ++v15;
    }
    while (v15 != v14);
  }
  swift_bridgeObjectRelease(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F9D60);
  UITextSearchAggregator.finishedSearching()();
}

uint64_t sub_B020(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~a2 & 0xF000000000000007) != 0)
  {
    swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
    v11 = sub_7B1C8(a2);
    if (v11)
    {
      v12 = v11;
      v13 = type metadata accessor for StringTextRange();
      v14 = swift_dynamicCastClass(a1, v13);
      if (v14)
      {
        v15 = (char *)v14;
        if (a3)
        {
          if (a3 == 2)
          {
            v29 = a1;
            sub_1266BC(v15, 2);
            sub_CDF8(a2);

          }
          else
          {
            if (a3 == 1)
            {
              v16 = a1;
              sub_1266BC(v15, 1);
LABEL_15:
              KeyPath = swift_getKeyPath(&unk_16AD50);
              v32 = v12;
              v24 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
              ObservationRegistrar.access<A, B>(_:keyPath:)(&v32, KeyPath, v24);
              swift_release(KeyPath);
              v25 = *(void **)(v12 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange);
              if (v25)
              {
                v26 = *(_QWORD *)(v12 + 24);
                v27 = v25;
                swift_bridgeObjectRetain(v26);
                v28 = sub_CE40(v15, v27);
                swift_bridgeObjectRelease(v26);
                if (!v28)
                  sub_1268EC(v15, 2);

              }
              sub_CDF8(a2);

              return swift_release(v12);
            }
            v30 = a1;
            sub_CDF8(a2);

          }
          return swift_release(v12);
        }
        v16 = a1;
        sub_1268EC(v15, 1);
        goto LABEL_15;
      }
      swift_release(v12);
    }
    v8 = sub_CDF8(a2);
  }
  v17 = static Logger.transcripts.getter(v8);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v32 = v21;
    *(_DWORD *)v20 = 136315138;
    v31 = sub_C6F4(0xD000000000000022, 0x8000000000183710, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v20 + 4, v20 + 12);
    _os_log_impl(&dword_0, v18, v19, "%s Decorate method has unexpected types.", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_B370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Logger.transcripts.getter(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v35[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v36 = sub_C6F4(0xD000000000000022, 0x8000000000183710, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v8 + 4, v8 + 12);
    _os_log_impl(&dword_0, v6, v7, "%s Clear all decorated found text.", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_7B080();
  KeyPath = swift_getKeyPath(&unk_16ACB8);
  v12 = swift_getKeyPath(&unk_16ACE0);
  static Published.subscript.getter(v35, v10, KeyPath, v12);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  v13 = v35[0];
  v14 = sub_1264BC(v35[0]);
  swift_bridgeObjectRelease(v13);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain(v14);
    v16 = 0;
    v31 = v14;
    v17 = (uint64_t *)(v14 + 40);
    v32 = (char *)&type metadata for () + 8;
    do
    {
      v20 = *(v17 - 1);
      v19 = *v17;
      v21 = *(_QWORD *)(*v17 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
      v22 = swift_getKeyPath(&unk_16AD00);
      v36 = v21;
      v23 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
      swift_retain(v20);
      v34 = v19;
      swift_retain(v19);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v36, v22, v23);
      swift_release(v22);
      v24 = v21 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges;
      swift_beginAccess(v21 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v35, 1, 0);
      if (*(_QWORD *)(*(_QWORD *)v24 + 16))
      {
        v33 = v16;
        v25 = swift_getKeyPath(&unk_16AD00);
        v36 = v21;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v36, v25, v23);
        swift_release(v25);
        v36 = v21;
        v26 = swift_getKeyPath(&unk_16AD00);
        ObservationRegistrar.willSet<A, B>(_:keyPath:)(&v36, v26, v23);
        swift_release(v26);
        v27 = *(_QWORD *)v24;
        *(_QWORD *)v24 = &_swiftEmptySetSingleton;
        swift_bridgeObjectRelease(v27);
        v36 = v21;
        v16 = v33;
        v28 = swift_getKeyPath(&unk_16AD00);
        ObservationRegistrar.didSet<A, B>(_:keyPath:)(&v36, v28, v23);
        swift_release(v28);
        sub_12A1E4();
      }
      v18 = swift_getKeyPath(&unk_16AD28);
      __chkstk_darwin(v18);
      *(&v30 - 3) = 0;
      *(&v30 - 2) = 0;
      *(&v30 - 4) = v21;
      *((_BYTE *)&v30 - 8) = 1;
      v36 = v21;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v36, v18, sub_CDAC, &v30 - 6, v32, v23);
      swift_release(v34);
      swift_release(v20);
      swift_release(v18);
      v17 += 2;
      --v15;
    }
    while (v15);
    v14 = v31;
    swift_bridgeObjectRelease(v31);
  }
  return swift_bridgeObjectRelease(v14);
}

uint64_t sub_B7A8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  char *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  void (*v50)(char *, uint64_t, __n128);
  os_log_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v61;
  char *v62;
  Class isa;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  int v67;
  os_log_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v5 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v64 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v64 - v20;
  if ((~a2 & 0xF000000000000007) == 0)
  {
LABEL_10:
    v55 = static Logger.transcripts.getter(v19);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v79 = v59;
      *(_DWORD *)v58 = 136315138;
      v78 = sub_C6F4(0xD000000000000022, 0x8000000000183710, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v58 + 4, v58 + 12);
      _os_log_impl(&dword_0, v56, v57, "%s Scroll rect to visible has unexpected types.", v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v8, v77);
  }
  v75 = v10;
  swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
  v22 = v2;
  v23 = sub_7B024();
  v79 = a2;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v79);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_CDF8(a2);
    v19 = sub_C078((uint64_t)v13);
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v13, v14);
  v74 = v22;
  v24 = sub_7B32C();
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    v19 = sub_CDF8(a2);
    goto LABEL_10;
  }
  v25 = v24;
  v26 = type metadata accessor for StringTextRange();
  v27 = swift_dynamicCastClass(a1, v26);
  v28 = a1;
  v29 = v28;
  if (!v27)
  {
    sub_CDF8(a2);

    swift_release(v25);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_10;
  }
  v70 = v27;
  v30 = v75;
  static Logger.transcripts.getter(v28);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v21, v14);
  v31 = v29;
  swift_retain_n(v25, 2);
  v73 = v31;
  v32 = Logger.logObject.getter(v73);
  v33 = static os_log_type_t.info.getter();
  v34 = v33;
  v35 = os_log_type_enabled(v32, v33);
  v72 = v25;
  if (v35)
  {
    v36 = swift_slowAlloc(52, -1);
    v71 = (uint64_t *)swift_slowAlloc(8, -1);
    v69 = swift_slowAlloc(96, -1);
    v79 = v69;
    *(_DWORD *)v36 = 136316163;
    v68 = v32;
    v78 = sub_C6F4(0xD000000000000022, 0x8000000000183710, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v36 + 4, v36 + 12);
    *(_WORD *)(v36 + 12) = 2114;
    v65 = v36 + 14;
    v67 = v34;
    v37 = v70;
    v78 = v70;
    v38 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v65, v36 + 22);
    *v71 = v37;
    v39 = v72;

    *(_WORD *)(v36 + 22) = 2160;
    v78 = 1752392040;
    v66 = &v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v36 + 24, v36 + 32);
    *(_WORD *)(v36 + 32) = 2081;
    v70 = v36 + 34;
    v40 = *(_QWORD *)(v39 + 16);
    swift_retain(v39);
    sub_D81E4(v40);
    v42 = v41;
    v44 = v43;
    swift_release(v39);
    v78 = sub_C6F4(v42, v44, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v70, v36 + 42);
    swift_release_n(v39, 2);
    swift_bridgeObjectRelease(v44);
    *(_WORD *)(v36 + 42) = 2080;
    v45 = sub_8330(&qword_1F9D50, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v46 = dispatch thunk of CustomStringConvertible.description.getter(v14, v45);
    v48 = v47;
    v78 = sub_C6F4(v46, v47, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v66, v36 + 44, v36 + 52);
    v49 = swift_bridgeObjectRelease(v48);
    v50 = *(void (**)(char *, uint64_t, __n128))(v15 + 8);
    v50(v18, v14, v49);
    v51 = v68;
    _os_log_impl(&dword_0, v68, (os_log_type_t)v67, "%s Scroll to %{public}@ in %{private,mask.hash}s at %s.", (uint8_t *)v36, 0x34u);
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
    v53 = v71;
    swift_arrayDestroy(v71, 1, v52);
    swift_slowDealloc(v53, -1, -1);
    v54 = v69;
    swift_arrayDestroy(v69, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
  }
  else
  {
    swift_release_n(v25, 2);
    v61 = v73;

    v50 = *(void (**)(char *, uint64_t, __n128))(v15 + 8);
    ((void (*)(char *, uint64_t))v50)(v18, v14);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v30, v77);
  }
  v62 = sub_7B450();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v62, "_scrollToItemAtIndexPath:atScrollPosition:additionalInsets:animated:", isa, 1, 1, 20.0, 0.0, 0.0, 0.0);
  sub_CDF8(a2);

  swift_release(v72);
  return ((uint64_t (*)(char *, uint64_t))v50)(v21, v14);
}

uint64_t sub_BE90(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_B020(a1, *a2, a3);
}

uint64_t sub_BE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2);
  return UITextSearching.supportsTextReplacement.getter(ObjectType, a2);
}

uint64_t sub_BEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v6);
  return UITextSearching.shouldReplace(foundTextRange:document:withText:)(a1, a2, a3, a4, ObjectType, a6);
}

uint64_t sub_BF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v6);
  return UITextSearching.replace(foundTextRange:document:withText:)(a1, a2, a3, a4, ObjectType, a6);
}

void sub_BF7C(uint64_t a1, void *a2, UITextSearchOptions a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  Swift::String v11;
  Swift::String v12;

  swift_getObjectType(v5);
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  v12._countAndFlagsBits = a4;
  v12._object = a5;
  UITextSearching.replaceAll(queryString:options:withText:)(v11, a3, v12);
}

uint64_t sub_BFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v4);
  return UITextSearching.willHighlight(foundTextRange:document:)(a1, a2, ObjectType, a4);
}

uint64_t sub_C02C(void *a1, uint64_t *a2)
{
  return sub_B7A8(a1, *a2);
}

uint64_t sub_C034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2);
  return UITextSearching.selectedTextSearchDocument.getter(ObjectType, a2);
}

uint64_t sub_C06C(uint64_t *a1, uint64_t *a2)
{
  return sub_A764(*a1, *a2);
}

uint64_t sub_C078(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Int sub_C0B8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_C0F8()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_C11C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_C168@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16ACB8);
  v5 = swift_getKeyPath(&unk_16ACE0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_C1E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16ACB8);
  v5 = swift_getKeyPath(&unk_16ACE0);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

id sub_C25C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16AD50);
  v8 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__activeSearchRange);
  *a2 = v6;
  return v6;
}

void sub_C2F0(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16AD50);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  v6 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_D084, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);

}

__n128 sub_C3A4@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  unsigned __int8 v6;
  __n128 result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16AD28);
  v8 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange + 16);
  result = *(__n128 *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange);
  *a2 = result;
  a2[1].n128_u8[0] = v6;
  return result;
}

uint64_t sub_C444(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v9[5];
  char v10;
  uint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_16AD28);
  v9[2] = v5;
  v9[3] = v2;
  v9[4] = v3;
  v10 = v4;
  v11 = v5;
  v7 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, KeyPath, sub_CDAC, v9, (char *)&type metadata for () + 8, v7);
  return swift_release(KeyPath);
}

uint64_t sub_C4FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16AD00);
  v9[0] = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges);
  swift_beginAccess(v3 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__searchRanges, v9, 0, 0);
  v7 = *v6;
  *a2 = *v6;
  return swift_bridgeObjectRetain(v7);
}

double sub_C5AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16AD00);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_CDE0, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_C664(uint64_t (*a1)(void))
{
  return a1();
}

void sub_C684(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a4();
  v8 = v7;
  v9 = sub_C6F4(v6, v7, a3);
  v10 = *a1;
  v11 = *a1 + 8;
  v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v10, v11);
  swift_bridgeObjectRelease(v8);
  *a1 = v11;
}

uint64_t sub_C6F4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_C7C4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_CD54((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_CD54((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  __swift_destroy_boxed_opaque_existential_0(v12);
  return v7;
}

uint64_t sub_C7C4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_C97C(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_C97C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_CA10(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_CBE8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_CBE8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_CA10(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_CB84(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_CB84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9D48);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = _swift_stdlib_malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_CBE8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9D48);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_CD54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_CDAC()
{
  return sub_CDC0();
}

uint64_t sub_CDC0()
{
  uint64_t v0;

  return sub_129A60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_CDE0()
{
  uint64_t v0;

  return sub_12B880(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_CDF8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release(result & 0x3FFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_CE10@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_CE40(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "start");
  v9 = type metadata accessor for StringTextPosition();
  v10 = swift_dynamicCastClass(v8, v9);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(a2, "start");
    v13 = swift_dynamicCastClass(v12, v9);
    if (v13)
    {
      v14 = *(_QWORD *)(v11 + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);
      v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position);

      if (v14 >> 14 >= v15 >> 14)
        return v15 >> 14 < v14 >> 14;
      else
        return -1;
    }

  }
  else
  {
    v12 = v8;
  }

  v17 = static Logger.transcripts.getter();
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v23 = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = sub_C6F4(0xD000000000000022, 0x8000000000183710, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v20 + 4, v20 + 12);
    _os_log_impl(&dword_0, v18, v19, "%s Compare positions method has unexpected types.", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

void sub_D084()
{
  uint64_t v0;

  sub_128198(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_D09C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_D0C0()
{
  unint64_t result;

  result = qword_1F9D68;
  if (!qword_1F9D68)
  {
    result = swift_getWitnessTable(&unk_16ADEC, &_s10MatchErrorON);
    atomic_store(result, (unint64_t *)&qword_1F9D68);
  }
  return result;
}

uint64_t sub_D104()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D128()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((~v1 & 0xF000000000000007) != 0)
    swift_release(v1 & 0x3FFFFFFFFFFFFFFFLL);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D15C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain(result & 0x3FFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t _s10MatchErrorOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s10MatchErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_D208 + 4 * byte_16AC10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_D228 + 4 * byte_16AC15[v4]))();
}

_BYTE *sub_D208(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_D228(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_D230(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_D238(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_D240(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_D248(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s10MatchErrorOMa()
{
  return &_s10MatchErrorON;
}

unint64_t sub_D268()
{
  unint64_t result;

  result = qword_1F9D70;
  if (!qword_1F9D70)
  {
    result = swift_getWitnessTable(&unk_16ADC4, &_s10MatchErrorON);
    atomic_store(result, (unint64_t *)&qword_1F9D70);
  }
  return result;
}

id sub_D2B0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  char *v4;
  uint64_t v5;
  void *v11;
  id result;

  *a1 = xmmword_16AE30;
  a1[1] = xmmword_16AE30;
  a1[2] = xmmword_16AE40;
  if (qword_1F9488 != -1)
    swift_once(&qword_1F9488, sub_370F8);
  v2 = MPULayoutSizeNoDimension;
  v3 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)((char *)a1 + 248) = *(_OWORD *)&UIEdgeInsetsZero.top;
  v4 = (char *)a1 + 248;
  *((_QWORD *)v4 - 25) = v2;
  *((_QWORD *)v4 - 24) = 0x4038000000000000;
  *((_QWORD *)v4 - 23) = v2;
  *((_OWORD *)v4 - 11) = xmmword_16AE50;
  *((_OWORD *)v4 - 10) = xmmword_16AE60;
  *((_OWORD *)v4 - 9) = xmmword_16AE70;
  *((_OWORD *)v4 - 8) = xmmword_16AE80;
  *((_OWORD *)v4 - 7) = xmmword_16AE90;
  *((_OWORD *)v4 - 6) = xmmword_16AE90;
  *((_OWORD *)v4 - 5) = xmmword_16AEA0;
  *((_OWORD *)v4 - 4) = xmmword_16AEB0;
  *((_OWORD *)v4 - 3) = xmmword_16AEC0;
  *((_OWORD *)v4 - 2) = xmmword_16AEC0;
  *(v4 - 16) = 15;
  *(_WORD *)(v4 - 15) = -32512;
  *((_QWORD *)v4 - 1) = 0x4041000000000000;
  *((_OWORD *)v4 + 1) = v3;
  *((_QWORD *)v4 + 7) = &type metadata for HorizontalNowPlayingMetadataMetrics.TimeControlMetrics;
  *((_QWORD *)v4 + 8) = &off_1C7730;
  v5 = swift_allocObject(&unk_1C74F0, 184, 7);
  *((_QWORD *)v4 + 4) = v5;
  __asm { FMOV            V1.2D, #-2.0 }
  *(_OWORD *)(v5 + 16) = xmmword_16AED0;
  *(_OWORD *)(v5 + 32) = _Q1;
  *(_QWORD *)(v5 + 48) = 0x4044800000000000;
  *(UIFontWeight *)(v5 + 56) = UIFontWeightRegular;
  *(_OWORD *)(v5 + 64) = xmmword_16AEE0;
  *(_OWORD *)(v5 + 80) = xmmword_16AEF0;
  *(_OWORD *)(v5 + 96) = xmmword_16AF00;
  *(_OWORD *)(v5 + 112) = xmmword_16AEF0;
  *(_QWORD *)(v5 + 128) = 0x4022000000000000;
  *(_WORD *)(v5 + 136) = 257;
  *(_OWORD *)(v5 + 144) = xmmword_16AF10;
  *(_QWORD *)(v5 + 168) = 0;
  *(_QWORD *)(v5 + 176) = 0;
  *(_QWORD *)(v5 + 160) = 0xC018000000000000;
  *((_QWORD *)v4 + 9) = 0;
  *((_QWORD *)v4 + 10) = 0;
  *(_OWORD *)(v4 + 88) = xmmword_16AF20;
  *((_QWORD *)v4 + 13) = 0x4044000000000000;
  v11 = (void *)objc_opt_self(MTMPUFontDescriptor);
  *((_QWORD *)v4 + 14) = objc_msgSend(v11, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  result = objc_msgSend(v11, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  *((_QWORD *)v4 + 15) = result;
  return result;
}

uint64_t sub_D4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_DF78(v1, a1);
}

uint64_t sub_D4DC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_D4E4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_D4EC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t sub_D4F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t sub_D4FC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t sub_D504()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 45);
}

uint64_t sub_D50C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 47);
}

double sub_D514()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_D51C()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_D524()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_D52C()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double sub_D534()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double sub_D53C()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double sub_D544()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

double sub_D54C()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

double sub_D554()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

uint64_t sub_D55C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t sub_D564()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 121);
}

double sub_D56C()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

double sub_D574()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

double sub_D57C()
{
  uint64_t v0;

  return *(double *)(v0 + 240);
}

double sub_D584()
{
  uint64_t v0;

  return *(double *)(v0 + 200);
}

uint64_t sub_D590()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 232);
}

double sub_D598()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double sub_D5A4()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

double sub_D5AC()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

double sub_D5B8()
{
  uint64_t v0;

  return *(double *)(v0 + 248);
}

double sub_D5C4()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

double sub_D5D0()
{
  uint64_t v0;

  return *(double *)(v0 + 168);
}

uint64_t sub_D5DC()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 233);
}

double sub_D5E4()
{
  uint64_t v0;

  return *(double *)(v0 + 328);
}

uint64_t sub_D5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_DF78(v1 + 280, a1);
}

double sub_D608()
{
  uint64_t v0;

  return *(double *)(v0 + 344);
}

double sub_D610()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

id sub_D618()
{
  uint64_t v0;

  return *(id *)(v0 + 360);
}

id sub_D620()
{
  uint64_t v0;

  return *(id *)(v0 + 368);
}

double sub_D628@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_16AF30;
  *(int64x2_t *)(a1 + 16) = vdupq_n_s64(0x4046000000000000uLL);
  *(_OWORD *)(a1 + 32) = xmmword_16AF40;
  *(_OWORD *)(a1 + 48) = xmmword_16AF50;
  result = 28.0;
  *(_OWORD *)(a1 + 64) = xmmword_16AF60;
  *(_OWORD *)(a1 + 80) = xmmword_16AF70;
  return result;
}

uint64_t sub_D668()
{
  uint64_t v0;

  return swift_deallocObject(v0, 184, 7);
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HorizontalNowPlayingMetadataMetrics.TimeControlMetrics(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 120);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalNowPlayingMetadataMetrics.TimeControlMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalNowPlayingMetadataMetrics.TimeControlMetrics()
{
  return &type metadata for HorizontalNowPlayingMetadataMetrics.TimeControlMetrics;
}

uint64_t initializeWithCopy for HorizontalNowPlayingMetadataConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for HorizontalNowPlayingMetadataConfiguration(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  *(_BYTE *)(a1 + 47) = *(_BYTE *)(a2 + 47);
  return a1;
}

_QWORD *__swift_assign_boxed_opaque_existential_1(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for HorizontalNowPlayingMetadataConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_BYTE *)(a1 + 46) = *(_BYTE *)(a2 + 46);
  *(_BYTE *)(a1 + 47) = *(_BYTE *)(a2 + 47);
  return a1;
}

uint64_t getEnumTagSinglePayload for HorizontalNowPlayingMetadataConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalNowPlayingMetadataConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalNowPlayingMetadataConfiguration()
{
  return &type metadata for HorizontalNowPlayingMetadataConfiguration;
}

void destroy for HorizontalNowPlayingMetadataMetrics(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 280));

}

uint64_t initializeWithCopy for HorizontalNowPlayingMetadataMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v6 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 280, a2 + 280);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  v7 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v7;
  v8 = *(void **)(a2 + 360);
  v9 = *(void **)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v8;
  *(_QWORD *)(a1 + 368) = v9;
  v10 = v8;
  v11 = v9;
  return a1;
}

uint64_t assignWithCopy for HorizontalNowPlayingMetadataMetrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + 280), (_QWORD *)(a2 + 280));
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v4 = *(void **)(a2 + 360);
  v5 = *(void **)(a1 + 360);
  *(_QWORD *)(a1 + 360) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 368);
  v8 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = v7;
  v9 = v7;

  return a1;
}

void *__swift_memcpy376_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x178uLL);
}

uint64_t assignWithTake for HorizontalNowPlayingMetadataMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  void *v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  v11 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v11;
  v12 = (_OWORD *)(a1 + 280);
  v13 = (_OWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 280));
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v15 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v15;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v16 = *(void **)(a1 + 360);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);

  v17 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);

  return a1;
}

uint64_t getEnumTagSinglePayload for HorizontalNowPlayingMetadataMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 376))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 304);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalNowPlayingMetadataMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 376) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 304) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 376) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalNowPlayingMetadataMetrics()
{
  return &type metadata for HorizontalNowPlayingMetadataMetrics;
}

uint64_t sub_DF78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_DFBC()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v0 = _s24LoadingStatusCoordinatorCMa();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)NSHashTable), "initWithOptions:capacity:", 5, 0);
  result = objc_msgSend(objc_allocWithZone((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 5, 0, 0);
  *(_QWORD *)(v1 + 24) = result;
  qword_210020 = v1;
  return result;
}

void sub_E03C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char **p_name;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char **v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  id v84;
  _QWORD *v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  void (*v98)(uint64_t);
  uint64_t v99;
  char *v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  char *v111;
  _QWORD *v112;
  uint64_t v113;
  id v114;
  _OWORD v115[2];
  _OWORD v116[2];

  objc_msgSend(*(id *)(v1 + 16), "removeObject:");
  v3 = sub_C9AB0((uint64_t)_swiftEmptyArrayStorage);
  v108 = v1;
  v4 = objc_msgSend(*(id *)(v1 + 24), "keyEnumerator");
  v5 = objc_msgSend(v4, "nextObject");
  v106 = v4;
  if (!v5)
  {
LABEL_40:
    if ((v3 & 0xC000000000000001) != 0)
    {
      if (v3 < 0)
        v44 = v3;
      else
        v44 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v45 = __CocoaDictionary.count.getter(v44);
      swift_bridgeObjectRelease(v3);
      if (v45 > 0)
      {
        v46 = __CocoaDictionary.makeIterator()(v44);
        v102 = 0;
        v47 = 0;
        v48 = 0;
        v3 = v46 | 0x8000000000000000;
LABEL_51:
        v53 = 0;
        v101 = (unint64_t)(v47 + 64) >> 6;
        v111 = (char *)_swiftEmptyArrayStorage;
        p_name = (char **)(&stru_1EDFF8 + 8);
        v100 = (char *)&type metadata for Swift.AnyObject + 8;
        v103 = v3;
        if ((v3 & 0x8000000000000000) == 0)
          goto LABEL_55;
LABEL_73:
        v65 = (void *)__CocoaDictionary.Iterator.next()();
        if (v65)
        {
          v67 = v65;
          v68 = v66;
          v114 = v65;
          v69 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
          swift_unknownObjectRetain(v67);
          swift_dynamicCast(v115, &v114, v100, v69, 7);
          v64 = *(id *)&v115[0];
          swift_unknownObjectRelease(v67);
          v114 = v68;
          v70 = _s24LoadingStatusCoordinatorC12ObserverListCMa();
          swift_unknownObjectRetain(v68);
          swift_dynamicCast(v115, &v114, v100, v70, 7);
          v109 = *(_QWORD *)&v115[0];
          swift_unknownObjectRelease(v68);
          v55 = v53;
          v56 = v48;
          p_name = (char **)(&stru_1EDFF8 + 8);
          while (v64)
          {
            v107 = v64;
            v112 = (_QWORD *)(v109 + 16);
            swift_beginAccess(v109 + 16, v116, 0, 0);
            v71 = *(_QWORD *)(v109 + 16);
            v72 = *(_QWORD *)(v71 + 16);
            if (v72)
            {
              v104 = v56;
              v105 = v55;
              v73 = swift_bridgeObjectRetain(v71);
              v74 = -v72;
              v75 = 24 * v72 + 16;
              v76 = v72 - 1;
              v77 = a1;
              v78 = (char **)(&stru_1EDFF8 + 8);
              v113 = v73;
              do
              {
                if (!v74)
                {
                  __break(1u);
LABEL_100:
                  __break(1u);
LABEL_101:
                  __break(1u);
                  goto LABEL_102;
                }
                if (v76 >= *(_QWORD *)(v73 + 16))
                  goto LABEL_100;
                v83 = *(_QWORD *)(v73 + v75 - 8);
                v2 = *(_QWORD *)(v73 + v75);
                v84 = *(id *)(v73 + v75 + 8);
                swift_retain();
                objc_msgSend(v84, v78[494], v77);
                if (!objc_msgSend(v84, p_name[235]))
                {
                  swift_beginAccess(v112, v115, 33, 0);
                  v85 = (_QWORD *)*v112;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v112);
                  *v112 = v85;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    v85 = sub_135DD4(v85);
                    *v112 = v85;
                  }
                  v87 = v85[2];
                  if (v76 >= v87)
                    goto LABEL_101;
                  if ((uint64_t)(v74 + v87) < 0)
                    goto LABEL_107;
                  v88 = v87 - 1;
                  v89 = *(_QWORD *)((char *)v85 + v75);
                  v90 = *(void **)((char *)v85 + v75 + 8);
                  memmove((char *)v85 + v75 - 8, (char *)v85 + v75 + 16, 24 * (v74 + v87));
                  v85[2] = v88;
                  *v112 = v85;
                  swift_endAccess(v115);

                  swift_release(v89);
                  v91 = swift_allocObject(&unk_1C7940, 32, 7);
                  *(_QWORD *)(v91 + 16) = v83;
                  *(_QWORD *)(v91 + 24) = v2;
                  v79 = v111;
                  v92 = *((_QWORD *)v111 + 2);
                  swift_retain();
                  v93 = (char *)swift_isUniquelyReferenced_nonNull_native(v111);
                  if (!(_DWORD)v93 || v92 >= *((_QWORD *)v111 + 3) >> 1)
                    v79 = sub_1344D4(v93, v92 + 1, 1, v111);
                  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9F28);
                  swift_arrayDestroy(v79 + 32, 0, v80);
                  v81 = *((_QWORD *)v79 + 2);
                  memmove(v79 + 48, v79 + 32, 16 * v81);
                  *((_QWORD *)v79 + 2) = v81 + 1;
                  *((_QWORD *)v79 + 4) = sub_ECE4;
                  *((_QWORD *)v79 + 5) = v91;
                  v111 = v79;
                  v77 = a1;
                  p_name = &stru_1EDFF8.name;
                  v78 = &stru_1EDFF8.name;
                }
                swift_release(v2);

                v75 -= 24;
                --v76;
                v82 = __CFADD__(v74++, 1);
                v73 = v113;
              }
              while (!v82);
              swift_bridgeObjectRelease(v113);
              v3 = v103;
              if (!*(_QWORD *)(*v112 + 16))
              {
                v56 = v104;
                v55 = v105;
                goto LABEL_54;
              }
              swift_release(v109);

              v48 = v104;
              v53 = v105;
              if (v103 < 0)
                goto LABEL_73;
            }
            else
            {
LABEL_54:
              v57 = *(id *)(v108 + 24);
              objc_msgSend(v57, "removeObjectForKey:", v107);

              swift_release(v109);
              v53 = v55;
              v48 = v56;
              if (v3 < 0)
                goto LABEL_73;
            }
LABEL_55:
            if (v48)
            {
              v56 = (v48 - 1) & v48;
              v58 = __clz(__rbit64(v48)) | (v53 << 6);
              v55 = v53;
            }
            else
            {
              v59 = v53 + 1;
              if (__OFADD__(v53, 1))
                goto LABEL_105;
              if (v59 >= v101)
                break;
              v60 = *(_QWORD *)(v102 + 8 * v59);
              v55 = v53 + 1;
              if (!v60)
              {
                v55 = v53 + 2;
                if (v53 + 2 >= v101)
                  break;
                v60 = *(_QWORD *)(v102 + 8 * v55);
                if (!v60)
                {
                  v55 = v53 + 3;
                  if (v53 + 3 >= v101)
                    break;
                  v60 = *(_QWORD *)(v102 + 8 * v55);
                  if (!v60)
                  {
                    v55 = v53 + 4;
                    if (v53 + 4 >= v101)
                      break;
                    v60 = *(_QWORD *)(v102 + 8 * v55);
                    if (!v60)
                    {
                      v61 = v53 + 5;
                      while (v101 != v61)
                      {
                        v60 = *(_QWORD *)(v102 + 8 * v61++);
                        if (v60)
                        {
                          v55 = v61 - 1;
                          goto LABEL_70;
                        }
                      }
                      break;
                    }
                  }
                }
              }
LABEL_70:
              v56 = (v60 - 1) & v60;
              v58 = __clz(__rbit64(v60)) + (v55 << 6);
            }
            v62 = 8 * v58;
            v63 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v62);
            v64 = *(id *)(*(_QWORD *)(v3 + 48) + v62);
            v109 = v63;
            swift_retain();
          }
        }
        sub_ECB8(v3);
        v94 = v111;
        v95 = *((_QWORD *)v111 + 2);
        if (v95)
        {
          v96 = (uint64_t *)(v111 + 40);
          do
          {
            v98 = (void (*)(uint64_t))*(v96 - 1);
            v97 = *v96;
            v99 = swift_retain();
            v98(v99);
            swift_release(v97);
            v96 += 2;
            --v95;
          }
          while (v95);
          v94 = v111;
        }
        swift_bridgeObjectRelease(v94);

        return;
      }
    }
    else if (*(_QWORD *)(v3 + 16))
    {
      v49 = -1 << *(_BYTE *)(v3 + 32);
      v102 = v3 + 64;
      v50 = ~v49;
      v51 = -v49;
      if (v51 < 64)
        v52 = ~(-1 << v51);
      else
        v52 = -1;
      v48 = v52 & *(_QWORD *)(v3 + 64);
      v47 = v50;
      goto LABEL_51;
    }

    swift_bridgeObjectRelease(v3);
    return;
  }
  v6 = v5;
  while (1)
  {
    _bridgeAnyObjectToAny(_:)(v115, v6);
    swift_unknownObjectRelease(v6);
    sub_ECEC(v115, v116);
    sub_CD54((uint64_t)v116, (uint64_t)v115);
    v2 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
    if ((swift_dynamicCast(&v114, v115, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
      goto LABEL_5;
    v8 = *(void **)(v108 + 24);
    v9 = v114;
    v10 = objc_msgSend(v8, "objectForKey:", v9);
    v11 = v3 & 0xC000000000000001;
    if (!v10)
    {
      if (v11)
      {
        if (v3 < 0)
          v24 = v3;
        else
          v24 = v3 & 0xFFFFFFFFFFFFFF8;
        v25 = v9;
        swift_bridgeObjectRetain(v3);
        v26 = __CocoaDictionary.lookup(_:)(v25, v24);

        if (v26)
        {
          swift_unknownObjectRelease(v26);
          v27 = __CocoaDictionary.count.getter(v24);
          v28 = sub_ECFC(v24, v27);
          swift_retain();
          v29 = sub_139EC4((uint64_t)v25);
          v31 = v30;
          swift_release(v28);
          if ((v31 & 1) == 0)
            goto LABEL_106;

          v32 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
          sub_15AC1C(v29, v28);
          swift_release(v32);

          swift_bridgeObjectRelease(v3);
          v3 = v28;
          goto LABEL_37;
        }

        v43 = v3;
      }
      else
      {
        swift_bridgeObjectRetain(v3);
        v38 = sub_139EC4((uint64_t)v9);
        v40 = v39;
        swift_bridgeObjectRelease(v3);
        if ((v40 & 1) == 0)
        {

          goto LABEL_37;
        }
        v41 = swift_isUniquelyReferenced_nonNull_native(v3);
        *(_QWORD *)&v115[0] = v3;
        if ((v41 & 1) == 0)
        {
          sub_13F3B4();
          v3 = *(_QWORD *)&v115[0];
        }

        v42 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v38);
        sub_15AC1C(v38, v3);
        swift_release(v42);

        v43 = 0x8000000000000000;
      }
      swift_bridgeObjectRelease(v43);
LABEL_37:
      v4 = v106;
      goto LABEL_5;
    }
    v12 = v10;
    if (v11)
    {
      if (v3 < 0)
        v13 = v3;
      else
        v13 = v3 & 0xFFFFFFFFFFFFFF8;
      v14 = __CocoaDictionary.count.getter(v13);
      if (__OFADD__(v14, 1))
        goto LABEL_103;
      v3 = sub_ECFC(v13, v14 + 1);
    }
    v15 = swift_isUniquelyReferenced_nonNull_native(v3);
    *(_QWORD *)&v115[0] = v3;
    v17 = sub_139EC4((uint64_t)v9);
    v18 = *(_QWORD *)(v3 + 16);
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    if (*(_QWORD *)(v3 + 24) >= v20)
    {
      if ((v15 & 1) != 0)
      {
        v3 = *(_QWORD *)&v115[0];
        if ((v16 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        sub_13F3B4();
        v3 = *(_QWORD *)&v115[0];
        if ((v21 & 1) == 0)
          goto LABEL_28;
      }
    }
    else
    {
      sub_13A470(v20, v15);
      v22 = sub_139EC4((uint64_t)v9);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_108;
      v17 = v22;
      v3 = *(_QWORD *)&v115[0];
      if ((v21 & 1) == 0)
      {
LABEL_28:
        *(_QWORD *)(v3 + 8 * (v17 >> 6) + 64) |= 1 << v17;
        v33 = 8 * v17;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + v33) = v9;
        *(_QWORD *)(*(_QWORD *)(v3 + 56) + v33) = v12;
        v34 = *(_QWORD *)(v3 + 16);
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_104;
        *(_QWORD *)(v3 + 16) = v36;
        v37 = v9;
        goto LABEL_4;
      }
    }
    v7 = *(_QWORD *)(v3 + 56);
    swift_release(*(_QWORD *)(v7 + 8 * v17));
    *(_QWORD *)(v7 + 8 * v17) = v12;
LABEL_4:

    swift_bridgeObjectRelease(0x8000000000000000);
    v4 = v106;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_0(v116);
    v6 = objc_msgSend(v4, "nextObject");
    if (!v6)
      goto LABEL_40;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
LABEL_108:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v2);
  __break(1u);
}

uint64_t sub_EA7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_EAA0()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t _s24LoadingStatusCoordinatorCMa()
{
  return objc_opt_self(_TtCV12NowPlayingUI7Artwork24LoadingStatusCoordinator);
}

uint64_t _s24LoadingStatusCoordinatorC12ObserverListCMa()
{
  return objc_opt_self(_TtCCV12NowPlayingUI7Artwork24LoadingStatusCoordinatorP33_D71D40C456F612B9FFC1844C7EAAA28912ObserverList);
}

void _s24LoadingStatusCoordinatorC15ObserverContextVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));

}

_QWORD *_s24LoadingStatusCoordinatorC15ObserverContextVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain(v3);
  v5 = v4;
  return a1;
}

_QWORD *_s24LoadingStatusCoordinatorC15ObserverContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s24LoadingStatusCoordinatorC15ObserverContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for TitleSectionHeaderView.TextComponents(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleSectionHeaderView.TextComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s24LoadingStatusCoordinatorC15ObserverContextVMa()
{
  return &_s24LoadingStatusCoordinatorC15ObserverContextVN;
}

uint64_t sub_ECB8(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_ECC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_ECE4()
{
  uint64_t v0;

  return sub_C664(*(uint64_t (**)(void))(v0 + 16));
}

_OWORD *sub_ECEC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

Swift::Int sub_ECFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_200340);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = _s24LoadingStatusCoordinatorC12ObserverListCMa();
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_13A470(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v4;
}

Swift::Int sub_EF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F9FA0);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_F174(0, (unint64_t *)&unk_201960, MPCPlayerPath_ptr);
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F9FB0);
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_13C4B0(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v4;
}

uint64_t sub_F174(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

ValueMetadata *_s7DrawingVMa()
{
  return &_s7DrawingVN;
}

uint64_t dispatch_sync_main_queue(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t result;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    return a1();
  sub_7748();
  v5 = static OS_dispatch_queue.main.getter();
  v6 = swift_allocObject(&unk_1C7998, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v9[4] = sub_F2F8;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_F318;
  v9[3] = &block_descriptor;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain(v6);
  swift_release(v8);
  dispatch_sync(v5, v7);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v6, "", 108, 16, 42, 1);
  result = swift_release(v6);
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_F2E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_F2F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_F318(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t dispatch_to_main_queue(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    return a1();
  sub_7748();
  v13 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = a1;
  v21 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_3;
  v14 = _Block_copy(aBlock);
  v15 = v21;
  swift_retain(a2);
  v16 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v17 = sub_F52C();
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v19 = sub_F574();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_F52C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD850;
  if (!qword_1FD850)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1FD850);
  }
  return result;
}

unint64_t sub_F574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD860;
  if (!qword_1FD860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1FD9C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1FD860);
  }
  return result;
}

uint64_t dispatch_after(_:queue:block:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v30 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v28 - v19;
  static DispatchTime.now()(v18);
  + infix(_:_:)(v17, a4);
  v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, v13);
  aBlock[4] = a2;
  v33 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_6;
  v22 = _Block_copy(aBlock);
  v23 = swift_retain(a3);
  static DispatchQoS.unspecified.getter(v23);
  v31 = &_swiftEmptyArrayStorage;
  v24 = sub_F52C();
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v26 = sub_F574();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v25, v26, v7, v24);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v20, v12, v9, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
  v21(v20, v13);
  return swift_release(v33);
}

uint64_t sub_F7F4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void dispatch_after_main_queue(_:block:)(uint64_t a1, uint64_t a2, double a3)
{
  id v6;

  sub_7748();
  v6 = (id)static OS_dispatch_queue.main.getter();
  dispatch_after(_:queue:block:)((uint64_t)v6, a1, a2, a3);

}

uint64_t sub_F884()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;

  v1 = v0;
  v2 = *(void (**)(void))(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v2();
  swift_release(v3);
  return swift_deallocClassInstance(v1, 32, 7);
}

uint64_t type metadata accessor for DeinitTriggeredClosure()
{
  return objc_opt_self(_TtC12NowPlayingUI22DeinitTriggeredClosure);
}

void sub_F8EC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  _BYTE v22[24];

  *(_QWORD *)(v0 + 24) = 0;
  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v1, "scale");
  v3 = v2;

  *(_QWORD *)(v0 + 32) = v3;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v22, 0, 0);
  if (!(_QWORD)static NowPlayingDataProvider.shared)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!qword_210540)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v4 = (id)qword_210540;
  if (!objc_msgSend(v4, "isViewLoaded"))
  {

    goto LABEL_10;
  }
  v5 = objc_msgSend(v4, "view");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "tintColor");

    if (v7)
    {
LABEL_11:
      *(_QWORD *)(v0 + 40) = v7;
      v8 = _s5CacheC3KeyCMa();
      v9 = swift_allocObject(v8, 144, 7);
      *(_QWORD *)(v9 + 16) = 0;
      *(_QWORD *)(v9 + 24) = 0xE000000000000000;
      *(_OWORD *)(v9 + 32) = xmmword_16B0E0;
      *(_QWORD *)(v9 + 48) = sub_10088;
      *(_QWORD *)(v9 + 56) = 0;
      *(_QWORD *)(v9 + 64) = 0;
      *(_QWORD *)(v9 + 72) = 0;
      *(_OWORD *)(v9 + 80) = xmmword_16B0F0;
      *(_OWORD *)(v9 + 96) = xmmword_16B100;
      *(_QWORD *)(v9 + 112) = 0x4030000000000000;
      *(_QWORD *)(v9 + 120) = 0;
      *(_QWORD *)(v9 + 128) = 0;
      *(_QWORD *)(v9 + 136) = 0;
      *(_QWORD *)(v0 + 56) = v9;
      v10 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:", 0);
      v11 = (void *)objc_opt_self(UIColor);
      v12 = objc_msgSend(v11, "blackColor");
      v13 = objc_msgSend(v11, "clearColor");
      v14 = objc_msgSend(v10, "typeSafeCopy");

      v15 = _s5CacheC17AttributesWrapperCMa();
      v16 = swift_allocObject(v15, 80, 7);
      *(_QWORD *)(v16 + 16) = v14;
      *(_QWORD *)(v16 + 24) = v12;
      *(_QWORD *)(v16 + 32) = v13;
      *(_BYTE *)(v16 + 40) = 0;
      *(_QWORD *)(v16 + 48) = 4;
      *(_QWORD *)(v16 + 56) = 0;
      *(_BYTE *)(v16 + 64) = 0;
      *(_QWORD *)(v16 + 68) = 0x3F00000000000000;
      *(_DWORD *)(v16 + 76) = 1065353216;
      *(_QWORD *)(v0 + 72) = v16;
      *(_QWORD *)(v0 + 80) = 0;
      *(_BYTE *)(v0 + 88) = 0;
      *(_QWORD *)(v0 + 96) = 0;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
      v17 = *(void **)(v0 + 40);
      v18 = *(void **)(v0 + 24);
      *(_QWORD *)(v0 + 24) = v17;
      v19 = v17;

      v20 = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
      *(_QWORD *)(v0 + 48) = v20;
      objc_msgSend(v20, "setTotalCostLimit:", 200000);
      v21 = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
      *(_QWORD *)(v0 + 64) = v21;
      objc_msgSend(v21, "setCountLimit:", 50);
      return;
    }
LABEL_10:
    v7 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
}

id sub_FBF4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  qword_1FA060 = (uint64_t)result;
  return result;
}

NSString sub_FC24()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_210028 = (uint64_t)result;
  return result;
}

uint64_t sub_FC58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));

  return v0;
}

uint64_t sub_FCA4()
{
  uint64_t v0;

  sub_FC58();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t _s5CacheCMa()
{
  return objc_opt_self(_TtCVV12NowPlayingUI14DeprecatedText7Drawing5Cache);
}

uint64_t sub_FD60(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unsigned __int8 v11;
  _OWORD v13[4];
  _OWORD v14[4];

  if (a1)
  {
    v3 = _s5CacheC17AttributesWrapperCMa();
    v4 = swift_unknownObjectRetain(a1);
    v5 = (_OWORD *)swift_dynamicCastClass(v4, v3);
    if (v5)
    {
      if (v5 == v1)
      {
        swift_unknownObjectRelease(a1);
        v11 = 1;
      }
      else
      {
        v6 = v1[4];
        v13[2] = v1[3];
        v13[3] = v6;
        v7 = v1[2];
        v13[0] = v1[1];
        v13[1] = v7;
        v8 = v5[1];
        v9 = v5[2];
        v10 = v5[4];
        v14[2] = v5[3];
        v14[3] = v10;
        v14[0] = v8;
        v14[1] = v9;
        sub_10620((uint64_t)v13);
        sub_10620((uint64_t)v14);
        v11 = sub_746EC((uint64_t)v13, (uint64_t)v14);
        sub_1065C((uint64_t)v14);
        sub_1065C((uint64_t)v13);
        swift_unknownObjectRelease(a1);
      }
    }
    else
    {
      swift_unknownObjectRelease(a1);
      v11 = 0;
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_FE94()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);

  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t _s5CacheC17AttributesWrapperCMa()
{
  return objc_opt_self(_TtCCVV12NowPlayingUI14DeprecatedText7Drawing5CacheP33_6EA4CEC3653B2C6076E9A6D56449747817AttributesWrapper);
}

Swift::Int sub_FEF4()
{
  _QWORD *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _QWORD v5[9];
  _OWORD v6[4];

  v1 = (_OWORD *)*v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = v1[2];
  v6[0] = v1[1];
  v6[1] = v2;
  v3 = v1[4];
  v6[2] = v1[3];
  v6[3] = v3;
  sub_10620((uint64_t)v6);
  sub_7487C((uint64_t)v5);
  sub_1065C((uint64_t)v6);
  return Hasher._finalize()();
}

uint64_t sub_FF58(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];

  v3 = *(_OWORD *)(*(_QWORD *)v1 + 16);
  v4 = *(_OWORD *)(*(_QWORD *)v1 + 32);
  v5 = *(_OWORD *)(*(_QWORD *)v1 + 64);
  v7[2] = *(_OWORD *)(*(_QWORD *)v1 + 48);
  v7[3] = v5;
  v7[0] = v3;
  v7[1] = v4;
  sub_10620((uint64_t)v7);
  sub_7487C(a1);
  return sub_1065C((uint64_t)v7);
}

Swift::Int sub_FFAC(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _QWORD v6[9];
  _OWORD v7[4];

  Hasher.init(_seed:)(v6, a1);
  v2 = *(_OWORD *)(*(_QWORD *)v1 + 16);
  v3 = *(_OWORD *)(*(_QWORD *)v1 + 32);
  v4 = *(_OWORD *)(*(_QWORD *)v1 + 64);
  v7[2] = *(_OWORD *)(*(_QWORD *)v1 + 48);
  v7[3] = v4;
  v7[0] = v2;
  v7[1] = v3;
  sub_10620((uint64_t)v7);
  sub_7487C((uint64_t)v6);
  sub_1065C((uint64_t)v7);
  return Hasher._finalize()();
}

uint64_t sub_1000C(_OWORD **a1, _OWORD **a2)
{
  return sub_10698(*a1, *a2);
}

uint64_t sub_10018()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[8];

  v1 = v0[6];
  v6[4] = v0[5];
  v6[5] = v1;
  v2 = v0[8];
  v6[6] = v0[7];
  v6[7] = v2;
  v3 = v0[2];
  v6[0] = v0[1];
  v6[1] = v3;
  v4 = v0[4];
  v6[2] = v0[3];
  v6[3] = v4;
  sub_11D6C((uint64_t)v6);
  return swift_deallocClassInstance(v0, 144, 7);
}

uint64_t _s5CacheC14ContextWrapperCMa()
{
  return objc_opt_self(_TtCCVV12NowPlayingUI14DeprecatedText7Drawing5CacheP33_6EA4CEC3653B2C6076E9A6D56449747814ContextWrapper);
}

id sub_10088(uint64_t a1, uint64_t a2)
{
  id v3;
  NSString v4;
  id v5;

  v3 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(a2);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend(v3, "initWithString:", v4);

  return v5;
}

void sub_101BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  Swift::UInt v15;
  Swift::UInt v16;
  Swift::UInt v17;
  Swift::UInt v18;
  uint64_t v19;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(void **)(v2 + 32);
  v7 = *(void **)(v2 + 40);
  v8 = *(void **)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 64);
  v10 = *(_QWORD *)(v2 + 72);
  v11 = *(_QWORD *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 96);
  v18 = *(_QWORD *)(v2 + 104);
  v13 = *(double *)(v2 + 112);
  v12 = *(double *)(v2 + 120);
  v19 = *(_QWORD *)(v2 + 56);
  sub_10B0C(v6, v7, v8, v19, v9, v10, v11);
  if ((v11 & 0x80000000) != 0)
  {
    v14 = String.hashValue.getter(v6, v7);
    Hasher._combine(_:)(~v14);
  }
  else
  {
    sub_7487C(a1);
  }
  Hasher._combine(_:)(v17);
  Hasher._combine(_:)(v18);
  v15 = CGFloat.roundInteger.getter(v13);
  Hasher._combine(_:)(v15);
  v16 = CGFloat.roundInteger.getter(v12);
  Hasher._combine(_:)(v16);
  sub_10B64(v6, v7, v8, v19, v9, v10, v11);
  sub_C69E8(*(double *)(v2 + 128), *(double *)(v2 + 136));
}

uint64_t sub_10340()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_10B64(*(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 144, 7);
}

uint64_t _s5CacheC3KeyCMa()
{
  return objc_opt_self(_TtCCVV12NowPlayingUI14DeprecatedText7Drawing5CacheP33_6EA4CEC3653B2C6076E9A6D5644974783Key);
}

Swift::Int sub_10398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  Swift::UInt v15;
  Swift::UInt v16;
  Swift::UInt v18;
  Swift::UInt v19;
  _QWORD v20[12];
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;

  v1 = v0;
  Hasher.init(_seed:)(v20, 0);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v20, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = *(void **)(v1 + 32);
  v5 = *(void **)(v1 + 40);
  v7 = *(void **)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_QWORD *)(v1 + 80);
  v11 = *(_QWORD *)(v1 + 88);
  v18 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 104);
  v13 = *(double *)(v1 + 112);
  v12 = *(double *)(v1 + 120);
  if ((v10 & 0x80000000) != 0)
  {
    sub_10B0C(v4, v5, v7, v6, v8, v9, v10);
    v14 = String.hashValue.getter(v4, v5);
    Hasher._combine(_:)(~v14);
  }
  else
  {
    v20[9] = *(_QWORD *)(v1 + 32);
    v20[10] = v5;
    v20[11] = v7;
    v21 = v6;
    v22 = v8;
    v23 = v9;
    v24 = v10;
    v25 = HIDWORD(v10);
    v26 = v11;
    sub_10B0C(v4, v5, v7, v6, v8, v9, v10);
    sub_7487C((uint64_t)v20);
  }
  Hasher._combine(_:)(v18);
  Hasher._combine(_:)(v19);
  v15 = CGFloat.roundInteger.getter(v13);
  Hasher._combine(_:)(v15);
  v16 = CGFloat.roundInteger.getter(v12);
  Hasher._combine(_:)(v16);
  sub_10B64(v4, v5, v7, v6, v8, v9, v10);
  sub_C69E8(*(double *)(v1 + 128), *(double *)(v1 + 136));
  return Hasher._finalize()();
}

Swift::Int sub_10540()
{
  return sub_10398();
}

void sub_10560(uint64_t a1)
{
  sub_101BC(a1);
}

Swift::Int sub_10580(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_101BC((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_105BC(uint64_t *a1, uint64_t *a2)
{
  return sub_1071C(*a1, *a2);
}

uint64_t sub_105C8()
{
  return sub_8330(&qword_1FA4D8, (uint64_t (*)(uint64_t))_s5CacheC3KeyCMa, (uint64_t)&unk_16B1EC);
}

uint64_t sub_105F4()
{
  return sub_8330(&qword_1FA4E0, (uint64_t (*)(uint64_t))_s5CacheC17AttributesWrapperCMa, (uint64_t)&unk_16B254);
}

uint64_t sub_10620(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(id *)(a1 + 16);
  v5 = v2;
  v6 = v3;
  return a1;
}

uint64_t sub_1065C(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);

  return a1;
}

uint64_t sub_10698(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  unsigned __int8 v6;
  _OWORD v8[4];
  _OWORD v9[4];

  if (a1 == a2)
  {
    v6 = 1;
  }
  else
  {
    v2 = a1[2];
    v8[0] = a1[1];
    v8[1] = v2;
    v3 = a1[4];
    v8[2] = a1[3];
    v8[3] = v3;
    v4 = a2[2];
    v9[0] = a2[1];
    v9[1] = v4;
    v5 = a2[4];
    v9[2] = a2[3];
    v9[3] = v5;
    sub_10620((uint64_t)v8);
    sub_10620((uint64_t)v9);
    v6 = sub_746EC((uint64_t)v8, (uint64_t)v9);
    sub_1065C((uint64_t)v9);
    sub_1065C((uint64_t)v8);
  }
  return v6 & 1;
}

uint64_t sub_1071C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  int v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  _QWORD v71[3];
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  int v76;
  uint64_t v77;
  _QWORD v78[3];
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  int v83;
  uint64_t v84;

  if (a1 == a2)
    return 1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    v12 = *(void **)(a1 + 32);
    v11 = *(void **)(a1 + 40);
    v13 = *(void **)(a1 + 48);
    v14 = *(_QWORD *)(a1 + 56);
    v15 = *(_QWORD *)(a1 + 64);
    v16 = *(_QWORD *)(a1 + 72);
    v17 = *(_QWORD *)(a1 + 80);
    v18 = *(_QWORD *)(a1 + 88);
    v20 = *(_QWORD *)(a1 + 96);
    v19 = *(_QWORD *)(a1 + 104);
    v22 = *(double *)(a1 + 112);
    v21 = *(double *)(a1 + 120);
    v24 = *(void **)(a2 + 32);
    v23 = *(void **)(a2 + 40);
    v26 = *(void **)(a2 + 48);
    v25 = *(_QWORD *)(a2 + 56);
    v28 = *(_QWORD *)(a2 + 64);
    v27 = *(_QWORD *)(a2 + 72);
    v29 = *(_QWORD *)(a2 + 80);
    v30 = *(_QWORD *)(a2 + 88);
    v32 = *(_QWORD *)(a2 + 96);
    v31 = *(_QWORD *)(a2 + 104);
    v34 = *(double *)(a2 + 112);
    v33 = *(double *)(a2 + 120);
    if ((v17 & 0x80000000) != 0)
    {
      if ((v29 & 0x80000000) != 0)
      {
        v53 = *(_QWORD *)(a2 + 96);
        v54 = *(_QWORD *)(a1 + 96);
        v51 = *(_QWORD *)(a2 + 104);
        v52 = *(_QWORD *)(a1 + 104);
        v63 = *(_QWORD *)(a1 + 80);
        v65 = *(void **)(a1 + 48);
        v66 = *(_QWORD *)(a1 + 56);
        v67 = *(_QWORD *)(a1 + 64);
        v68 = *(_QWORD *)(a1 + 72);
        v59 = *(_QWORD *)(a2 + 64);
        v60 = *(_QWORD *)(a2 + 72);
        v57 = *(void **)(a2 + 48);
        v58 = *(_QWORD *)(a2 + 56);
        v55 = *(void **)(a2 + 32);
        v56 = *(void **)(a2 + 40);
        v61 = *(void **)(a1 + 32);
        v62 = *(_QWORD *)(a2 + 80);
        if (v12 == v24 && v11 == v23)
        {
          sub_10B0C(v12, v11, v26, v25, v28, v27, v29);
          v38 = v12;
          v37 = v11;
          v39 = v11;
          v35 = v63;
          sub_10B0C(v38, v39, v13, v14, v15, v16, v63);
        }
        else
        {
          v40 = *(void **)(a1 + 32);
          v70 = *(void **)(a1 + 40);
          v41 = *(void **)(a2 + 48);
          v42 = *(void **)(a2 + 32);
          v43 = *(_QWORD *)(a2 + 56);
          v44 = *(void **)(a2 + 40);
          v45 = *(_QWORD *)(a2 + 64);
          v46 = *(_QWORD *)(a2 + 72);
          v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v70, v24, v23, 0);
          v47 = v44;
          v37 = v70;
          sub_10B0C(v42, v47, v41, v43, v45, v46, v62);
          v13 = v65;
          v14 = v66;
          v15 = v67;
          v16 = v68;
          v35 = v63;
          sub_10B0C(v40, v70, v65, v66, v67, v68, v63);
          if ((v50 & 1) == 0)
          {
LABEL_22:
            sub_10B64(v55, v56, v57, v58, v59, v60, v62);
            sub_10B64(v61, v37, v13, v14, v15, v16, v35);
            return 0;
          }
        }
LABEL_17:
        v64 = v35;
        if (v54 == v53 && v52 == v51 && (static CGFloat.==~ infix(_:_:)(v22, v34) & 1) != 0)
        {
          v48 = static CGFloat.==~ infix(_:_:)(v21, v33);
          sub_10B64(v55, v56, v57, v58, v59, v60, v62);
          sub_10B64(v61, v37, v13, v14, v15, v16, v64);
          if ((v48 & 1) != 0)
            return static CGSize.==~ infix(_:_:)(v49, *(double *)(a1 + 128), *(double *)(a1 + 136), *(double *)(a2 + 128), *(double *)(a2 + 136));
          return 0;
        }
        goto LABEL_22;
      }
    }
    else
    {
      v71[0] = *(_QWORD *)(a1 + 32);
      v71[1] = v11;
      v71[2] = v13;
      v72 = v14;
      v73 = v15;
      v74 = v16;
      v75 = v17;
      v76 = HIDWORD(v17);
      v77 = v18;
      if ((v29 & 0x80000000) == 0)
      {
        v53 = v32;
        v54 = v20;
        v51 = v31;
        v52 = v19;
        v78[0] = v24;
        v78[1] = v23;
        v78[2] = v26;
        v79 = v25;
        v80 = v28;
        v81 = v27;
        v82 = v29;
        v83 = HIDWORD(v29);
        v84 = v30;
        v55 = v24;
        v56 = v23;
        v69 = v11;
        v57 = v26;
        v58 = v25;
        v59 = v28;
        v60 = v27;
        v35 = v17;
        LODWORD(v62) = v29;
        sub_10B0C(v24, v23, v26, v25, v28, v27, v29);
        v61 = v12;
        v36 = v12;
        v37 = v69;
        sub_10B0C(v36, v69, v13, v14, v15, v16, v35);
        if ((sub_746EC((uint64_t)v71, (uint64_t)v78) & 1) == 0)
          goto LABEL_22;
        goto LABEL_17;
      }
    }
    return 0;
  }
  return result;
}

id sub_10B0C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  id v8;
  id v9;

  if (a7 < 0)
  {
    swift_bridgeObjectRetain(a2);
    return (id)swift_retain(a4);
  }
  else
  {
    v8 = a3;
    v9 = a1;
    return a2;
  }
}

void sub_10B64(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 < 0)
  {
    swift_bridgeObjectRelease(a2);
    swift_release(a4);
  }
  else
  {

  }
}

void sub_10BBC(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, _OWORD *a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  double v44;
  id v45;
  double v46;
  double v47;
  CGFloat v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t (*v62)(unint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  id v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t (*v81)(unint64_t, uint64_t);
  id v82;
  id v83;
  uint64_t (*v84)(unint64_t, uint64_t);
  id v85;
  id v86;
  id v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  _OWORD *v95;
  __int128 v96;
  __int128 v97;
  Class isa;
  void *v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  double v105;
  id v106;
  double v107;
  double v108;
  double v109;
  double v110;
  void *v111;
  uint64_t v112;
  NSString v113;
  uint64_t v114;
  uint64_t v115;
  Class v116;
  double v117;
  double v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  double v124;
  double v125;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
  void *v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char v140;
  id v141;
  NSString *v142;
  NSString *v143;
  double v144;
  double v145;
  CGFloat v146;
  CGFloat v147;
  uint64_t v148;
  char *v149;
  CGFloat v150;
  CGFloat v151;
  id v152;
  NSString *v153;
  NSString *v154;
  double v155;
  uint64_t v156;
  double v157;
  BOOL v158;
  double v159;
  double v160;
  double v161;
  id v162;
  double v163;
  double v164;
  double v165;
  uint64_t v166;
  uint64_t v167;
  _OWORD *v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  double v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  id v184;
  double v185;
  double v186;
  id v187;
  void *v188;
  id v189;
  char *v190;
  uint64_t v191;
  _OWORD *v192;
  char *v193;
  _QWORD *v194;
  unint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  double v199;
  _QWORD *v200;
  double v201;
  double v202;
  CGFloat v203;
  double top;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  UIEdgeInsets v217;
  UIEdgeInsets v218;

  v192 = a8;
  v189 = a7;
  v188 = a4;
  v200 = a9;
  v194 = (_QWORD *)type metadata accessor for CharacterSet(0);
  v191 = *(v194 - 1);
  __chkstk_darwin(v194);
  v196 = (char *)&v183 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA4E8);
  v22 = __chkstk_darwin(v21);
  v193 = (char *)&v183 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v190 = (char *)&v183 - v25;
  __chkstk_darwin(v24);
  v197 = (char *)&v183 - v26;
  v27 = *(_QWORD *)(a6 + 24);
  v195 = a1;
  *(_QWORD *)(a6 + 16) = a1;
  *(_QWORD *)(a6 + 24) = a2;
  v198 = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v27);
  v28 = *(void **)(a6 + 32);
  v29 = *(void **)(a6 + 40);
  v31 = *(void **)(a6 + 48);
  v30 = *(_QWORD *)(a6 + 56);
  v32 = *(_QWORD *)(a6 + 64);
  v33 = *(_QWORD *)(a6 + 72);
  v34 = *(_QWORD *)(a6 + 80);
  v199 = *(double *)(a6 + 88);
  v35 = *(_OWORD *)(*(_QWORD *)&a3 + 48);
  *(_OWORD *)(a6 + 64) = *(_OWORD *)(*(_QWORD *)&a3 + 32);
  *(_OWORD *)(a6 + 80) = v35;
  v36 = *(_OWORD *)(*(_QWORD *)&a3 + 80);
  *(_OWORD *)(a6 + 96) = *(_OWORD *)(*(_QWORD *)&a3 + 64);
  *(_OWORD *)(a6 + 112) = v36;
  v37 = *(_OWORD *)(*(_QWORD *)&a3 + 16);
  *(_OWORD *)(a6 + 32) = **(_OWORD **)&a3;
  *(_OWORD *)(a6 + 48) = v37;
  sub_11D30(*(_QWORD **)&a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
  sub_10B64(v28, v29, v31, v30, v32, v33, v34);
  *(double *)(a6 + 128) = a10;
  *(double *)(a6 + 136) = a11;
  v38 = objc_msgSend(a5, "objectForKey:", a6);
  if (v38)
  {
    v39 = v38;
    v40 = v38[6];
    v209 = v38[5];
    v210 = v40;
    v41 = v38[8];
    v211 = v38[7];
    v212 = v41;
    v42 = v38[2];
    v205 = v38[1];
    v206 = v42;
    v43 = v38[4];
    v207 = v38[3];
    v208 = v43;
    sub_11BB4((uint64_t)&v205);
    swift_release(v39);
    v44 = *((double *)&v212 + 1);
    v45 = (id)v212;
    v46 = *((double *)&v211 + 1);
    v47 = *(double *)&v211;
    v48 = *((double *)&v209 + 1);
    v49 = *(double *)&v209;
    v50 = *((double *)&v210 + 1);
    v51 = *(double *)&v210;
    v52 = *((double *)&v208 + 1);
    v53 = *(double *)&v208;
    v54 = *((_QWORD *)&v207 + 1);
    v55 = (id)v207;
    v57 = *((_QWORD *)&v205 + 1);
    v56 = (void *)v205;
    v58 = v206;
    v59 = BYTE8(v206);
LABEL_60:
    LOBYTE(v205) = v59;
    v182 = v200;
    *v200 = v56;
    v182[1] = v57;
    v182[2] = v58;
    *((_BYTE *)v182 + 24) = v59;
    v182[4] = v55;
    v182[5] = v54;
    *((double *)v182 + 6) = v53;
    *((double *)v182 + 7) = v52;
    *((double *)v182 + 8) = v49;
    *((CGFloat *)v182 + 9) = v48;
    *((double *)v182 + 10) = v51;
    *((double *)v182 + 11) = v50;
    *((double *)v182 + 12) = v47;
    *((double *)v182 + 13) = v46;
    v182[14] = v45;
    *((double *)v182 + 15) = v44;
    return;
  }
  v60 = v192;
  v61 = v198;
  v187 = a5;
  v62 = *(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)&a3 + 16);
  v63 = *(_QWORD *)(*(_QWORD *)&a3 + 24);
  v64 = *(_QWORD *)(*(_QWORD *)&a3 + 48);
  if ((v64 & 0x80000000) != 0)
  {
    swift_retain(*(_QWORD *)(*(_QWORD *)&a3 + 24));
    v65 = v195;
    v192 = (_OWORD *)v62(v195, v61);
    v66 = v192;
    v67 = objc_msgSend(v66, "MTMPU_tallestFontFromAttributes");

    swift_release(v63);
    v68 = 0;
    v188 = 0;
    v189 = 0;
  }
  else
  {
    v69 = *(_QWORD *)(*(_QWORD *)&a3 + 56);
    v70 = *(_QWORD *)(*(_QWORD *)&a3 + 40);
    v71 = *(_QWORD *)(*(_QWORD *)&a3 + 32);
    v73 = **(void ***)&a3;
    v72 = *(void **)(*(_QWORD *)&a3 + 8);
    v199 = a3;
    *(_QWORD *)&v213 = v73;
    *((_QWORD *)&v213 + 1) = v72;
    *(_QWORD *)&v214 = v62;
    BYTE8(v214) = v63;
    *(_QWORD *)&v215 = v71;
    *((_QWORD *)&v215 + 1) = v70;
    v184 = (id)v64;
    LOBYTE(v216) = v64;
    DWORD1(v216) = HIDWORD(v64);
    *((_QWORD *)&v216 + 1) = v69;
    v74 = v192;
    v76 = (void *)*((_QWORD *)v192 + 2);
    v75 = (void *)*((_QWORD *)v192 + 3);
    v77 = (void *)*((_QWORD *)v192 + 4);
    v78 = v213;
    v79 = v214;
    v80 = v216;
    v192[3] = v215;
    v60[4] = v80;
    v60[1] = v78;
    v60[2] = v79;
    v81 = v62;
    v82 = v73;
    v83 = v72;
    v84 = v81;
    v85 = v82;
    v86 = v83;

    v87 = v189;
    v88 = objc_msgSend(v189, "objectForKey:", v74);
    if (!v88)
      goto LABEL_8;
    v89 = v88;
    *(_QWORD *)&v205 = 0;
    type metadata accessor for Key(0);
    v91 = v90;
    v92 = sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v89, &v205, v91, (char *)&type metadata for Swift.AnyObject + 8, v92);

    v93 = (void *)v205;
    if ((_QWORD)v205)
    {
      a3 = v199;
    }
    else
    {
LABEL_8:
      v93 = (void *)sub_7425C(v188);
      v94 = _s5CacheC17AttributesWrapperCMa();
      v95 = (_OWORD *)swift_allocObject(v94, 80, 7);
      v96 = v214;
      v95[1] = v213;
      v95[2] = v96;
      v97 = v216;
      v95[3] = v215;
      v95[4] = v97;
      a3 = v199;
      sub_11D30(*(_QWORD **)&v199, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      type metadata accessor for Key(0);
      sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v87, "setObject:forKey:", isa, v95);
      swift_release(v95);

    }
    v64 = (unint64_t)v184;
    v65 = v195;
    v192 = (_OWORD *)sub_745B0((char)v184, v195, v61);
    v188 = v99;
    if (*(uint64_t *)(*(_QWORD *)&a3 + 64) < 2)
      v68 = 0;
    else
      v68 = sub_623F0((uint64_t)objc_msgSend(v85, "textStyle"), (uint64_t)&off_1C5168);
    v189 = v93;
    v100 = v85;
    v67 = objc_msgSend(v100, "preferredFont");
    sub_11D30(*(_QWORD **)&a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);

  }
  v101 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  objc_msgSend(v101, "setWantsBaselineOffset:", 1);
  objc_msgSend(v101, "setWantsNumberOfLineFragments:", 1);
  v102 = *(_QWORD *)(*(_QWORD *)&a3 + 64);
  objc_msgSend(v101, "setMaximumNumberOfLines:", v102);
  objc_msgSend(v101, "setWrapsForTruncationMode:", v102 != 1);
  v103 = (uint64_t)v193;
  if (a10 < 0.0 || (static CGFloat.==~ infix(_:_:)(a10, 0.0) & 1) != 0)
  {
    v104 = 5.99231045e307;
  }
  else
  {
    if (qword_1F9488 != -1)
      swift_once(&qword_1F9488, sub_370F8);
    v104 = 5.99231045e307;
    if ((static CGFloat.==~ infix(_:_:)(a10, *(double *)&MPULayoutSizeNoDimension) & 1) == 0 && a10 <= 5.99231045e307)
    {
      v104 = 5.99231045e307;
      if ((static CGFloat.==~ infix(_:_:)(a10, 5.99231045e307) & 1) == 0)
        v104 = a10;
    }
  }
  if (a11 < 0.0 || (static CGFloat.==~ infix(_:_:)(a11, 0.0) & 1) != 0)
  {
    v105 = 5.99231045e307;
  }
  else
  {
    if (qword_1F9488 != -1)
      swift_once(&qword_1F9488, sub_370F8);
    v105 = 5.99231045e307;
    if ((static CGFloat.==~ infix(_:_:)(a11, *(double *)&MPULayoutSizeNoDimension) & 1) == 0 && a11 <= 5.99231045e307)
    {
      v105 = 5.99231045e307;
      if ((static CGFloat.==~ infix(_:_:)(a11, 5.99231045e307) & 1) == 0)
        v105 = a11;
    }
  }
  objc_msgSend(v101, "setCachesLayout:", 1);
  if ((v64 & 0x80000000) != 0)
  {
    v106 = objc_msgSend(v192, "boundingRectWithSize:options:context:", 1, v101, v104, v105);
    v108 = v107;
    v110 = v109;
  }
  else
  {
    v111 = v188;
    swift_bridgeObjectRetain(v188);
    v112 = (uint64_t)v189;
    swift_bridgeObjectRetain(v189);
    v113 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v111);
    sub_C6030(v112);
    v115 = v114;
    swift_bridgeObjectRelease(v112);
    type metadata accessor for Key(0);
    sub_8330((unint64_t *)&qword_1F9A00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_16A68C);
    v116 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v115);
    objc_msgSend(v113, "boundingRectWithSize:options:attributes:context:", 1, v116, v101, v104, v105);
    v108 = v117;
    v110 = v118;

  }
  v119 = v194;
  v120 = v196;
  v121 = (uint64_t)v197;
  v195 = (v64 >> 31) & 1;
  v123 = CGFloat.ceilingValue(scale:)(v106, a12, v108);
  if (v104 < v123)
    v123 = v104;
  v199 = v123;
  v124 = CGFloat.ceilingValue(scale:)(v122, a12, v110);
  if (v105 < v124)
    v124 = v105;
  if ((v68 & 1) != 0)
    v125 = v124 + 2.0;
  else
    v125 = v124;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  top = UIEdgeInsetsZero.top;
  v203 = left;
  v202 = bottom;
  v201 = right;
  v186 = a11;
  v185 = a10;
  v184 = v67;
  if (!v67)
  {
    v130 = v65;
    v136 = a3;
LABEL_59:
    v158 = (v64 & 0x80000000) != 0;
    objc_msgSend(v101, "baselineOffset");
    v160 = v159;
    v161 = CGFloat.roundValue(scale:)(a12, v159);
    v162 = objc_msgSend(v101, "firstBaselineOffset");
    v44 = a12;
    v164 = v161 - v160 + v163;
    v49 = top;
    v47 = v164 + CGFloat.ceilingValue(scale:)(v162, v44, top);
    v165 = v125 - v161;
    v51 = v202;
    v46 = v165 - CGFloat.ceilingValue(scale:)(v166, v44, v202);
    v197 = (char *)objc_msgSend(v101, "numberOfLineFragments");
    v48 = v203;
    v50 = v201;
    v56 = v192;
    *(_QWORD *)&v205 = v192;
    v57 = (uint64_t)v188;
    *((_QWORD *)&v205 + 1) = v188;
    v58 = (uint64_t)v189;
    *(_QWORD *)&v206 = v189;
    BYTE8(v206) = v158;
    *(_QWORD *)&v207 = v101;
    *((_QWORD *)&v207 + 1) = 1;
    *(double *)&v208 = v199;
    *((double *)&v208 + 1) = v125;
    *(double *)&v209 = v49;
    *((CGFloat *)&v209 + 1) = v203;
    *(double *)&v210 = v51;
    *((double *)&v210 + 1) = v201;
    *(double *)&v211 = v47;
    *((double *)&v211 + 1) = v46;
    *(_QWORD *)&v212 = v197;
    *((double *)&v212 + 1) = v44;
    v167 = _s5CacheC14ContextWrapperCMa();
    v168 = (_OWORD *)swift_allocObject(v167, 144, 7);
    v169 = v210;
    v168[5] = v209;
    v168[6] = v169;
    v170 = v212;
    v168[7] = v211;
    v168[8] = v170;
    v171 = v206;
    v168[1] = v205;
    v168[2] = v171;
    v172 = v208;
    v168[3] = v207;
    v168[4] = v172;
    v173 = _s5CacheC3KeyCMa();
    v174 = swift_allocObject(v173, 144, 7);
    v175 = v101;
    v176 = v198;
    *(_QWORD *)(v174 + 16) = v130;
    *(_QWORD *)(v174 + 24) = v176;
    v177 = *(_OWORD *)(*(_QWORD *)&v136 + 48);
    *(_OWORD *)(v174 + 64) = *(_OWORD *)(*(_QWORD *)&v136 + 32);
    *(_OWORD *)(v174 + 80) = v177;
    v178 = *(_OWORD *)(*(_QWORD *)&v136 + 80);
    *(_OWORD *)(v174 + 96) = *(_OWORD *)(*(_QWORD *)&v136 + 64);
    *(_OWORD *)(v174 + 112) = v178;
    v179 = *(_OWORD *)(*(_QWORD *)&v136 + 16);
    *(_OWORD *)(v174 + 32) = **(_OWORD **)&v136;
    *(_OWORD *)(v174 + 48) = v179;
    v180 = v186;
    *(double *)(v174 + 128) = v185;
    *(double *)(v174 + 136) = v180;
    swift_bridgeObjectRetain(v176);
    sub_11D30(*(_QWORD **)&v136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    v59 = v195;
    sub_11B84(v56, v57, v58, v195);
    v55 = v175;
    sub_11BB4((uint64_t)&v205);
    v181 = String.count.getter(v130, v176);
    objc_msgSend(v187, "setObject:forKey:cost:", v168, v174, v181);

    sub_11BEC(v56, v57, v58, v59);
    swift_release(v168);
    swift_release(v174);

    v54 = 1;
    v45 = v197;
    v52 = v125;
    v53 = v199;
    goto LABEL_60;
  }
  v129 = v67;
  v130 = v65;
  v131 = v101;
  v194 = v129;
  v132 = CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
  if (v132)
  {
    v133 = (void *)v132;
    v134 = (uint64_t)v190;
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    v135 = 0;
  }
  else
  {
    v135 = 1;
    v134 = (uint64_t)v190;
  }
  v137 = v191;
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v191 + 56))(v134, v135, 1, v119);
  sub_11C1C(v134, v121);
  sub_11C64(v121, v103);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v137 + 48))(v103, 1, v119) == 1)
  {
    v136 = a3;
    sub_11CAC(v121);

    sub_11CAC(v103);
    v101 = v131;
    goto LABEL_59;
  }
  (*(void (**)(char *, uint64_t, _QWORD *))(v137 + 32))(v120, v103, v119);
  *(_QWORD *)&v205 = v130;
  *((_QWORD *)&v205 + 1) = v198;
  v138 = sub_11CEC();
  v139 = v137;
  StringProtocol.rangeOfCharacter(from:options:range:)(v120, 0, 0, 0, 1, &type metadata for String, v138);
  v101 = v131;
  if ((v140 & 1) != 0)
  {
    v149 = v120;
    v136 = a3;

    (*(void (**)(char *, _QWORD *))(v139 + 8))(v149, v119);
    sub_11CAC((uint64_t)v197);
    goto LABEL_59;
  }
  if (qword_1F9438 != -1)
    swift_once(&qword_1F9438, sub_FBF4);
  v141 = v194;
  v142 = (NSString *)objc_msgSend((id)qword_1FA060, "objectForKey:", v194);
  if (v142)
  {
    v143 = v142;
    v217 = UIEdgeInsetsFromString(v142);
    v144 = v217.top;
    v145 = v217.left;
    v146 = v217.bottom;
    v147 = v217.right;

    top = v144;
    v203 = v145;
    v202 = v146;
    v201 = v147;
LABEL_58:
    v136 = a3;
    v155 = CGFloat.ceilingValue(scale:)(v148, a12, v145);
    v199 = v199 + v155;
    v157 = CGFloat.ceilingValue(scale:)(v156, a12, v144);

    (*(void (**)(char *, _QWORD *))(v191 + 8))(v196, v119);
    sub_11CAC((uint64_t)v197);
    v125 = v125 + v157;
    goto LABEL_59;
  }
  CTFontGetLanguageAwareOutsets(v141, &v203, &top, &v201, &v202);
  v144 = top;
  v145 = v203;
  v150 = v202;
  v151 = v201;
  v152 = (id)qword_1FA060;
  v218.top = v144;
  v218.left = v145;
  v218.bottom = v150;
  v218.right = v151;
  v153 = NSStringFromUIEdgeInsets(v218);
  if (v153)
  {
    v154 = v153;
    objc_msgSend(v152, "setObject:forKey:", v153, v141);

    goto LABEL_58;
  }
  sub_11BEC(v192, (uint64_t)v188, (uint64_t)v189, v195);

  __break(1u);
}

id sub_11B84(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain(a2);
  return (id)swift_bridgeObjectRetain(a3);
}

uint64_t sub_11BB4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  sub_11B84(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v3 = v2;
  return a1;
}

void sub_11BEC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
  }
}

uint64_t sub_11C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA4E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_11C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA4E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_11CAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA4E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_11CEC()
{
  unint64_t result;

  result = qword_1FD8B0;
  if (!qword_1FD8B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1FD8B0);
  }
  return result;
}

_QWORD *sub_11D30(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_11D6C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  sub_11BEC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));

  return a1;
}

uint64_t sub_11DA4(uint64_t result)
{
  unsigned __int8 *v1;
  int v2;
  _BYTE *v3;
  int v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  _QWORD v30[5];
  uint64_t v31;

  v2 = v1[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_layoutMode];
  if (v2 == 2)
    return result;
  v3 = v1;
  v4 = v2 & 1;
  if (result != 2 && (result & 1) == v4)
    return result;
  result = (uint64_t)objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v5 = (void *)result;
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = *(char **)&v3[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingDetailsViewController];
  if (!v4)
  {
    result = (uint64_t)objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingDetailsViewController], "view");
    if (result)
    {
      v8 = (void *)result;
      objc_msgSend((id)result, "removeFromSuperview");

      objc_msgSend(v7, "removeFromParentViewController");
      v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingControlsViewController];
      v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections);
      *(_QWORD *)(v9 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections) = &off_1C51E8;
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
      v12 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
      result = *(_QWORD *)(v9 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
      if (result)
      {
        objc_msgSend((id)result, "cancelInteractiveMovement", v11);
        result = *(_QWORD *)(v9 + v12);
        if (result)
        {
          result = (uint64_t)objc_msgSend((id)result, "reloadData");
          v13 = *(_BYTE **)(v9 + v12);
          if (v13)
          {
            v13[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled] = 1;
            v14 = v13;
            sub_97AD8();

            v3[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_showSheetGrabber] = 0;
            return (uint64_t)sub_128BC();
          }
          goto LABEL_24;
        }
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v3, "addChildViewController:", *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingDetailsViewController]);
  objc_msgSend(v7, "didMoveToParentViewController:", v3);
  v15 = objc_opt_self(UIView);
  v16 = swift_allocObject(&unk_1C7B38, 24, 7);
  *(_QWORD *)(v16 + 16) = v3;
  v17 = swift_allocObject(&unk_1C7B60, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_13274;
  *(_QWORD *)(v17 + 24) = v16;
  v30[4] = sub_ECE4;
  v31 = v17;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 1107296256;
  v30[2] = sub_F318;
  v30[3] = &block_descriptor_0;
  v18 = _Block_copy(v30);
  v19 = v31;
  v20 = v3;
  swift_retain(v17);
  swift_release(v19);
  objc_msgSend((id)v15, "performWithoutAnimation:", v18);
  _Block_release(v18);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v17, "", 129, 47, 48, 1);
  result = swift_release(v17);
  if ((v15 & 1) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v21 = *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections];
  *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections] = &off_1C5198;
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(v21).n128_u64[0];
  v23 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  result = *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend((id)result, "cancelInteractiveMovement", v22);
  result = *(_QWORD *)&v7[v23];
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend((id)result, "reloadData");
  v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingControlsViewController];
  v25 = *(_QWORD *)(v24 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections);
  *(_QWORD *)(v24 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections) = &off_1C51C0;
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
  v27 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  result = *(_QWORD *)(v24 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend((id)result, "cancelInteractiveMovement", v26);
  result = *(_QWORD *)(v24 + v27);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (uint64_t)objc_msgSend((id)result, "reloadData");
  v28 = *(_BYTE **)(v24 + v27);
  if (!v28)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v28[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled] = 0;
  v29 = v28;
  sub_97AD8();

  v20[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_showSheetGrabber] = 1;
  sub_128BC();
  return swift_release(v16);
}

void sub_1219C(char *a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v2 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_splitStack];
  v3 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingDetailsViewController];
  v4 = objc_msgSend(v3, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = v4;
  objc_msgSend(v2, "addArrangedSubview:", v4);

  v6 = objc_msgSend(v3, "view");
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "widthAnchor");

  v9 = objc_msgSend(a1, "view");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "widthAnchor");

    v12 = objc_msgSend(v8, "constraintEqualToAnchor:multiplier:", v11, 0.5);
    objc_msgSend(v12, "setActive:", 1);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_12300()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  Swift::OpaquePointer v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  NSString v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  objc_super v46;

  v1 = v0;
  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for FullscreenNowPlayingViewController();
  objc_msgSendSuper2(&v46, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_splitStack];
  objc_msgSend(v2, "setAxis:", 0);
  v3 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingControlsViewController];
  objc_msgSend(v0, "addChildViewController:", v3);
  objc_msgSend(v3, "didMoveToParentViewController:", v0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v5._rawValue = (void *)swift_allocObject(v4, 40, 7);
  *((_OWORD *)v5._rawValue + 1) = xmmword_16B2D0;
  v6 = objc_msgSend(v3, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  *((_QWORD *)v5._rawValue + 4) = v6;
  specialized Array._endMutation()(v6);
  UIStackView.addArrangedSubviews(_:)(v5);
  v7 = objc_msgSend(v1, "view", swift_bridgeObjectRelease(v5._rawValue).n128_f64[0]);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  objc_msgSend(v2, "setFrame:", v10, v12, v14, v16);
  objc_msgSend(v2, "setAutoresizingMask:", 18);
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18 = v17;
  objc_msgSend(v17, "addSubview:", v2);

  v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections];
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections] = &off_1C5260;
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
  v21 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  v22 = *(void **)&v3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (!v22)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v22, "cancelInteractiveMovement", v20);
  v23 = *(void **)&v3[v21];
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v23, "reloadData");
  sub_F174(0, &qword_1FDEB0, UIAction_ptr);
  v24 = swift_allocObject(&unk_1C7BB0, 24, 7);
  swift_unknownObjectUnownedInit(v24 + 16, v1);
  v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_132C8, v24);
  v26 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_sheetGrabber];
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "_setLayoutDebuggingIdentifier:", v27);

  objc_msgSend(v26, "addAction:forControlEvents:", v25, 64);
  v28 = objc_msgSend(v1, "view");
  if (!v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v29 = v28;
  objc_msgSend(v28, "addSubview:", v26);

  v30 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_16B2E0;
  v31 = objc_msgSend(v26, "topAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "safeAreaLayoutGuide");

  v35 = objc_msgSend(v34, "topAnchor");
  v36 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v35, _UISheetGrabberTopSpacing);

  *(_QWORD *)(v30 + 32) = v36;
  v37 = objc_msgSend(v26, "centerXAnchor");
  v38 = objc_msgSend(v1, "view");
  if (v38)
  {
    v39 = v38;
    v40 = (void *)objc_opt_self(NSLayoutConstraint);
    v41 = objc_msgSend(v39, "centerXAnchor");

    v42 = objc_msgSend(v37, "constraintEqualToAnchor:", v41);
    *(_QWORD *)(v30 + 40) = v42;
    specialized Array._endMutation()(v43);
    v44 = v30;
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

    return;
  }
LABEL_17:
  __break(1u);
}

id sub_128BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id result;

  v1 = OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_showSheetGrabber;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_showSheetGrabber);
  v3 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingControlsViewController)
                 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController);
  if (!v3)
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_sheetGrabber), "setHidden:", v2 ^ 1);
  result = *(id *)(v3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView);
  if (result)
  {
    objc_msgSend(result, "setHidden:", v2);
    LODWORD(v2) = *(unsigned __int8 *)(v0 + v1);
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_sheetGrabber), "setHidden:", v2 ^ 1);
  }
  __break(1u);
  return result;
}

id sub_12944()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double Height;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v2 = result;
  objc_msgSend(result, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v30.origin.x = v4;
  v30.origin.y = v6;
  v30.size.width = v8;
  v30.size.height = v10;
  if (*(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_regularExtendedMinimumWidth] > CGRectGetWidth(v30))
    return 0;
  result = objc_msgSend(v0, "view");
  if (!result)
    goto LABEL_8;
  v11 = result;
  objc_msgSend(result, "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v31.origin.x = v13;
  v31.origin.y = v15;
  v31.size.width = v17;
  v31.size.height = v19;
  Height = CGRectGetHeight(v31);
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v21 = result;
    objc_msgSend(result, "bounds");
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;

    v32.origin.x = v23;
    v32.origin.y = v25;
    v32.size.width = v27;
    v32.size.height = v29;
    return (id)(Height < CGRectGetWidth(v32));
  }
LABEL_9:
  __break(1u);
  return result;
}

BOOL sub_12A9C()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  char *v4;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_0 + 1 && (sub_12944() & 1) == 0)
    return 0;
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "horizontalSizeClass");

  return v4 == (_BYTE *)&dword_0 + 2;
}

void sub_12BA8()
{
  uint64_t v0;
  char *v1;
  id v2;
  char *v3;
  id v4;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingDetailsViewController);
  objc_msgSend(v1, "loadViewIfNeeded");
  v2 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView], "contentView");
  if (qword_1F9580 != -1)
    swift_once(&qword_1F9580, sub_FDE14);
  objc_msgSend(v2, "setBackgroundColor:", qword_210308);

  v3 = *(char **)(v0
                + OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingControlsViewController);
  objc_msgSend(v3, "loadViewIfNeeded");
  v4 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView], "contentView");
  objc_msgSend(v4, "setBackgroundColor:", qword_210308);

}

id sub_12CD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullscreenNowPlayingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FullscreenNowPlayingViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI34FullscreenNowPlayingViewController);
}

uint64_t storeEnumTagSinglePayload for FullscreenNowPlayingViewController.LayoutMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_12DCC + 4 * byte_16B2F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_12E00 + 4 * byte_16B2F0[v4]))();
}

uint64_t sub_12E00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_12E08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x12E10);
  return result;
}

uint64_t sub_12E1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x12E24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_12E28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_12E30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullscreenNowPlayingViewController.LayoutMode()
{
  return &type metadata for FullscreenNowPlayingViewController.LayoutMode;
}

unint64_t sub_12E50()
{
  unint64_t result;

  result = qword_1FA550;
  if (!qword_1FA550)
  {
    result = swift_getWitnessTable(&unk_16B380, &type metadata for FullscreenNowPlayingViewController.LayoutMode);
    atomic_store(result, (unint64_t *)&qword_1FA550);
  }
  return result;
}

void sub_12E94(uint64_t a1, uint64_t a2, char *a3)
{
  void *v3;
  id v5;
  void *v6;

  v5 = objc_msgSend(v3, "view");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setBackgroundColor:", 0);

    sub_6DAEC(a3);
  }
  else
  {
    __break(1u);
  }
}

id sub_12F04()
{
  return sub_62578();
}

_QWORD *sub_12F2C(uint64_t a1)
{
  return sub_6D9AC(a1);
}

id sub_12F54(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  char *v14;
  uint64_t v15;
  objc_super v17;
  _OWORD v18[3];
  _QWORD v19[3];
  ValueMetadata *v20;
  _UNKNOWN **v21;
  uint64_t v22;

  v3 = OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_splitStack;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_sheetGrabber;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_regularExtendedMinimumWidth] = 0x4090000000000000;
  v5[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_layoutMode] = 2;
  v5[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_showSheetGrabber] = 0;
  v20 = &type metadata for StandardNowPlayingMetrics;
  v21 = &off_1D0C90;
  v7 = swift_allocObject(&unk_1C7BD8, 392, 7);
  v8 = v7 + 16;
  v19[0] = v7;
  swift_retain(a1);
  sub_ED6A4(v8);
  v22 = 0x101010001010100;
  v9 = (objc_class *)type metadata accessor for NowPlayingViewController(0);
  v10 = (char *)objc_allocWithZone(v9);
  sub_13308((uint64_t)v19, (uint64_t)v18);
  v11 = sub_9B7A4(a1, v18, v10);
  swift_release(a1);
  sub_13344((uint64_t)v19);
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingControlsViewController] = v11;
  v20 = &type metadata for HorizontalNowPlayingMetadataMetrics;
  v21 = &off_1C77F0;
  v12 = swift_allocObject(&unk_1C7C00, 392, 7);
  v13 = (_OWORD *)(v12 + 16);
  v19[0] = v12;
  swift_retain(a1);
  sub_D2B0(v13);
  v22 = 16843008;
  v14 = (char *)objc_allocWithZone(v9);
  sub_133B0((uint64_t)v19, (uint64_t)v18);
  v15 = sub_9B7C8(a1, v18, v14);
  swift_release(a1);
  sub_133EC((uint64_t)v19);
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_nowPlayingDetailsViewController] = v15;

  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for FullscreenNowPlayingViewController();
  return objc_msgSendSuper2(&v17, "initWithNibName:bundle:", 0, 0);
}

void sub_13160()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_splitStack;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v2 = OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_sheetGrabber;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_regularExtendedMinimumWidth] = 0x4090000000000000;
  v0[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_layoutMode] = 2;
  v0[OBJC_IVAR____TtC12NowPlayingUI34FullscreenNowPlayingViewController_showSheetGrabber] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/FullscreenNowPlayingViewController.swift", 53, 2, 93, 0, 0);
  __break(1u);
}

uint64_t sub_13250()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_13274()
{
  uint64_t v0;

  sub_1219C(*(char **)(v0 + 16));
}

uint64_t sub_1327C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_132A4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_132C8()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

}

uint64_t sub_13308(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HorizontalNowPlayingMetadataConfiguration(a2, a1);
  return a2;
}

uint64_t sub_13344(uint64_t a1)
{
  destroy for HorizontalNowPlayingMetadataConfiguration();
  return a1;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 296));

  return swift_deallocObject(v0, 392, 7);
}

uint64_t sub_133B0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HorizontalNowPlayingMetadataConfiguration(a2, a1);
  return a2;
}

uint64_t sub_133EC(uint64_t a1)
{
  destroy for HorizontalNowPlayingMetadataConfiguration();
  return a1;
}

id sub_13420(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  id result;
  double v11;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v9 = (double *)(v4 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins);
  result = (id)swift_beginAccess(v4 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins, v17, 0, 0);
  v11 = v9[1];
  if (*v9 != a1 || v11 != a2 || v9[2] != a3 || v9[3] != a4)
  {
    v15 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerViewController);
    v16 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin;
    *(double *)(v15 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin) = v11;
    objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_leadingArtworkConstraint), "setConstant:");
    result = *(id *)(v15 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_trailingTransportControlsConstraint);
    if (result)
      return objc_msgSend(result, "setConstant:", -*(double *)(v15 + v16));
  }
  return result;
}

double StandaloneMiniPlayerViewController.providedMargins.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins;
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins, v3, 0, 0);
  return *(double *)v1;
}

id StandaloneMiniPlayerViewController.providedMargins.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  _BYTE v15[24];

  v9 = (double *)(v4 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins);
  swift_beginAccess(v4 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins, v15, 1, 0);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return sub_13420(v10, v11, v12, v13);
}

void (*StandaloneMiniPlayerViewController.providedMargins.modify(_QWORD *a1))(_OWORD **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins;
  v3[7] = v1;
  v3[8] = v4;
  v5 = (_OWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3 + 4, 1, 0);
  v6 = v5[1];
  *(_OWORD *)v3 = *v5;
  *((_OWORD *)v3 + 1) = v6;
  return sub_13628;
}

void sub_13628(_OWORD **a1)
{
  _OWORD *v1;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  __int128 v7;

  v1 = *a1;
  v2 = (double *)(*((_QWORD *)*a1 + 7) + *((_QWORD *)*a1 + 8));
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  v6 = v2[3];
  v7 = (*a1)[1];
  *(_OWORD *)v2 = **a1;
  *((_OWORD *)v2 + 1) = v7;
  sub_13420(v3, v4, v5, v6);
  free(v1);
}

id Window.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

Swift::Void __swiftcall StandaloneMiniPlayerViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  id v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  _BYTE *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  _BYTE *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void (**v37)();
  uint64_t v38;
  uint64_t v39;
  objc_super v40;

  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for StandaloneMiniPlayerViewController();
  objc_msgSendSuper2(&v40, "viewDidLoad");
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend((id)objc_opt_self(MusicTabBarPaletteBlurEffect), "effectWithStyle:", 10);

  v3 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_paletteView];
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView], "setEffect:", v2);
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_12;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  objc_msgSend(v3, "setAutoresizingMask:", 18);
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = v6;
  objc_msgSend(v6, "bounds");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v3, "setFrame:", v9, v11, v13, v15);
  v16 = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerViewController];
  objc_msgSend(v16, "willMoveToParentViewController:", v0);
  objc_msgSend(v0, "addChildViewController:", v16);
  v17 = objc_msgSend(v16, "view");
  if (!v17)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v18 = v17;
  objc_msgSend(v3, "addSubview:", v17);

  v19 = objc_msgSend(v16, "view");
  if (!v19)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v19;
  objc_msgSend(v3, "bounds");
  objc_msgSend(v20, "setFrame:");

  v21 = objc_msgSend(v16, "view");
  if (!v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v22 = v21;
  objc_msgSend(v21, "setAutoresizingMask:", 18);

  objc_msgSend(v16, "didMoveToParentViewController:", v0);
  v23 = objc_allocWithZone((Class)type metadata accessor for PalettePresentationInteraction());
  v24 = v0;
  v25 = sub_13F7C(v24, v23);
  v26 = OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction;
  v27 = *(void **)&v24[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction];
  *(_QWORD *)&v24[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction] = v25;

  v28 = *(_BYTE **)&v24[v26];
  if (!v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v29 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_isEnabled;
  v28[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_isEnabled] = 1;
  v30 = *(void **)&v28[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer];
  v31 = v28;
  objc_msgSend(v30, "setEnabled:", 1);
  objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer], "setEnabled:", v28[v29]);

  v32 = *(_QWORD *)&v24[v26];
  if (!v32)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v33 = v32 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate;
  *(_QWORD *)(v33 + 8) = &off_1C7C88;
  swift_unknownObjectWeakAssign(v33, v24);
  v34 = objc_msgSend(v16, "view");
  if (!v34)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_QWORD *)&v24[v26])
  {
    v35 = v34;
    objc_msgSend(v34, "addInteraction:");

    v36 = swift_allocObject(&unk_1C7C70, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v24);
    v37 = (void (**)())&v16[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook];
    v38 = *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook];
    v39 = *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook + 8];
    *v37 = sub_14598;
    v37[1] = (void (*)())v36;
    sub_145A0(v38, v39);

    return;
  }
LABEL_19:
  __break(1u);
}

void sub_13A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong
                  + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction);
    if (v4)
    {
      v5 = v4;
      sub_141DEC(0, 0);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t StandaloneMiniPlayerViewController.tearDown()()
{
  id v0;

  v0 = sub_145B0();
  return swift_unknownObjectRetain(v0);
}

void StandaloneMiniPlayerViewController.setUp(interaction:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v3 = type metadata accessor for PalettePresentationInteraction();
  v4 = swift_dynamicCastClass(a1, v3);
  if (!v4)
    return;
  v5 = v4;
  v6 = *(char **)(v1 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerViewController);
  swift_unknownObjectRetain(a1);
  v7 = objc_msgSend(v6, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v9 = v7;
  objc_msgSend(v7, "removeInteraction:");

  v10 = v5 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate;
  *(_QWORD *)(v10 + 8) = &off_1C7C88;
  swift_unknownObjectWeakAssign(v10, v1);
  v11 = v5 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate;
  *(_QWORD *)(v11 + 8) = &off_1C7C88;
  swift_unknownObjectWeakAssign(v11, v1);
  v12 = objc_msgSend(v6, "view");
  if (!v12)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v13 = v12;
  objc_msgSend(v12, "addInteraction:", v5);

  v14 = *(void **)(v1 + v8);
  *(_QWORD *)(v1 + v8) = v5;
  swift_unknownObjectRetain(a1);

  if ((sub_14191C() & 1) != 0)
  {
    v15 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView;
    v16 = *(void **)&v6[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
    if (v16)
    {
      objc_msgSend(v16, "removeFromSuperview");
      v17 = *(id *)&v6[v15];
    }
    else
    {
      v17 = 0;
    }
    *(_QWORD *)&v6[v15] = 0;
    swift_unknownObjectRelease(a1);

  }
  else
  {
    sub_DD960();
    swift_unknownObjectRelease(a1);
  }
}

id StandaloneMiniPlayerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void StandaloneMiniPlayerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.StandaloneMiniPlayerViewController", 47, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id StandaloneMiniPlayerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StandaloneMiniPlayerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void (*sub_13E70(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = StandaloneMiniPlayerViewController.providedMargins.modify(v2);
  return sub_71A0;
}

id sub_13EB8()
{
  void *v0;

  return v0;
}

id sub_13EC0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_objectGraph);
  v2 = objc_allocWithZone((Class)type metadata accessor for FullscreenNowPlayingViewController());
  v3 = swift_retain(v1);
  v4 = sub_12F54(v3);
  swift_release(v1);
  sub_12BA8();
  return v4;
}

uint64_t sub_13F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA5A8);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_16B3D0;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerViewController);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = &off_1CFF68;
  v4 = v3;
  return v2;
}

char *sub_13F7C(void *a1, _BYTE *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v20;

  v4 = &a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_accessoryViewFrameObserver] = 0;
  v5 = &a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view] = 0;
  a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_isEnabled] = 1;
  v6 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer;
  v7 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v8 = a2;
  *(_QWORD *)&a2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController] = 0;

  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for PalettePresentationInteraction();
  v10 = (char *)objc_msgSendSuper2(&v20, "init");
  v11 = &v10[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate];
  *((_QWORD *)v11 + 1) = &off_1C7C88;
  swift_unknownObjectWeakAssign(v11, a1);
  v12 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer;
  v13 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer];
  v14 = v10;
  objc_msgSend(v13, "addTarget:action:", v14, "tapGestureRecognized:");
  objc_msgSend(*(id *)&v10[v12], "setDelegate:", v14);
  v15 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer;
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer], "addTarget:action:", v14, "panGestureRecognized:");
  objc_msgSend(*(id *)&v14[v15], "setMaximumNumberOfTouches:", 1);
  objc_msgSend(*(id *)&v14[v15], "_setHysteresis:", 5.0);
  v16 = *(void **)&v14[v15];
  v17 = v14;
  v18 = v16;
  objc_msgSend(v18, "setDelegate:", v17);

  return v17;
}

char *sub_1418C(void *a1, _BYTE *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v20;

  v4 = &a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_accessoryViewFrameObserver] = 0;
  v5 = &a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view] = 0;
  a2[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_isEnabled] = 1;
  v6 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer;
  v7 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v8 = a2;
  *(_QWORD *)&a2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_animationController] = 0;

  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for PalettePresentationInteraction();
  v10 = (char *)objc_msgSendSuper2(&v20, "init");
  v11 = &v10[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate];
  *((_QWORD *)v11 + 1) = &off_1CD238;
  swift_unknownObjectWeakAssign(v11, a1);
  v12 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer;
  v13 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer];
  v14 = v10;
  objc_msgSend(v13, "addTarget:action:", v14, "tapGestureRecognized:");
  objc_msgSend(*(id *)&v10[v12], "setDelegate:", v14);
  v15 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer;
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer], "addTarget:action:", v14, "panGestureRecognized:");
  objc_msgSend(*(id *)&v14[v15], "setMaximumNumberOfTouches:", 1);
  objc_msgSend(*(id *)&v14[v15], "_setHysteresis:", 5.0);
  v16 = *(void **)&v14[v15];
  v17 = v14;
  v18 = v16;
  objc_msgSend(v18, "setDelegate:", v17);

  return v17;
}

id sub_1439C(uint64_t a1)
{
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins];
  v4 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v3 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v3 + 1) = v4;
  v5 = OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_paletteView;
  v6 = type metadata accessor for PaletteVisualEffectView();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_objectGraph] = a1;
  v9 = objc_allocWithZone((Class)type metadata accessor for MiniPlayerViewController());
  v10 = swift_retain();
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerViewController] = sub_E1FFC(v10);

  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for StandaloneMiniPlayerViewController();
  return objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
}

void _s12NowPlayingUI34StandaloneMiniPlayerViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_providedMargins];
  v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v1 + 1) = v2;
  v3 = OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_paletteView;
  v4 = type metadata accessor for PaletteVisualEffectView();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/StandaloneMiniPlayerViewController.swift", 53, 2, 40, 0);
  __break(1u);
}

uint64_t type metadata accessor for StandaloneMiniPlayerViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI34StandaloneMiniPlayerViewController);
}

uint64_t sub_14574()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_14598()
{
  uint64_t v0;

  sub_13A8C(v0);
}

uint64_t sub_145A0(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

id sub_145B0()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  void *v3;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerViewController), "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34StandaloneMiniPlayerViewController_miniPlayerPaletteInteraction))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  objc_msgSend(result, "removeInteraction:");

  result = *(id *)(v0 + v2);
  if (!result)
LABEL_7:
    __break(1u);
  return result;
}

uint64_t sub_1462C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, int a8, unint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int128 v26;

  v25 = a8;
  v23 = a1;
  v24 = a7;
  HIDWORD(v22) = a6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA6B0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 40) = 0;
  *(_BYTE *)(v9 + 48) = 1;
  *(_QWORD *)(v9 + 56) = 0;
  *(_BYTE *)(v9 + 64) = 1;
  *(_QWORD *)(v9 + 72) = 0;
  *(_BYTE *)(v9 + 80) = 1;
  v18 = v9 + OBJC_IVAR____TtC12NowPlayingUI13SilentContent__viewState;
  v26 = xmmword_16B100;
  Published.init(initialValue:)(&v26, &type metadata for TranscriptContentViewState);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v18, v17, v14);
  *(_BYTE *)(v9 + 32) = a2 & 1;
  *(_QWORD *)(v9 + 40) = a3;
  *(_BYTE *)(v9 + 48) = a4 & 1;
  *(_QWORD *)(v9 + 56) = a5;
  *(_BYTE *)(v9 + 64) = BYTE4(v22) & 1;
  v19 = v23;
  *(_QWORD *)(v9 + 72) = v24;
  *(_BYTE *)(v9 + 80) = v25 & 1;
  v20 = 0xF000000000000007;
  if ((~a9 & 0xF000000000000007) != 0)
    v20 = a9;
  *(_QWORD *)(v9 + 16) = v20;
  *(_QWORD *)(v9 + 24) = v19;
  return v9;
}

unint64_t sub_14778(uint64_t a1)
{
  Swift::String v3;
  void *object;
  Swift::String v5;

  if ((~a1 & 0xF000000000000007) == 0)
    return 0xD000000000000018;
  swift_retain(a1 & 0x3FFFFFFFFFFFFFFFLL);
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(0xE000000000000000);
  sub_11107C(a1);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  sub_CDF8(a1);
  return 0xD000000000000017;
}

Swift::Int sub_14840()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  if ((~v1 & 0xF000000000000007) != 0)
  {
    Hasher._combine(_:)(1uLL);
    swift_retain(v1 & 0x3FFFFFFFFFFFFFFFLL);
    sub_11141C((uint64_t)v3, v1);
    sub_CDF8(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_148B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if ((~*v1 & 0xF000000000000007) != 0)
  {
    Hasher._combine(_:)(1uLL);
    swift_retain(v3 & 0x3FFFFFFFFFFFFFFFLL);
    sub_11141C(a1, v3);
    sub_CDF8(v3);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1492C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    Hasher._combine(_:)(1uLL);
    swift_retain(v2 & 0x3FFFFFFFFFFFFFFFLL);
    sub_11141C((uint64_t)v4, v2);
    sub_CDF8(v2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

unint64_t sub_149A0()
{
  uint64_t *v0;

  return sub_14778(*v0);
}

BOOL sub_149A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v6;
  char v7;

  v2 = *a1;
  v3 = *a2;
  v4 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) == 0)
    return v4 == 0xF000000000000007;
  if (v4 == 0xF000000000000007)
    return 0;
  sub_D15C(*a1);
  sub_D15C(v3);
  sub_10F96C(v2);
  v7 = v6;
  sub_CDF8(v3);
  sub_CDF8(v2);
  return v7 & 1;
}

uint64_t sub_14A34()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16B638);
  v2 = swift_getKeyPath(&unk_16B660);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_14AA4()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;

  sub_CDF8(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC12NowPlayingUI13SilentContent__viewState;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA6B0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_14B00()
{
  return type metadata accessor for SilentContent(0);
}

uint64_t type metadata accessor for SilentContent(uint64_t a1)
{
  uint64_t result;

  result = qword_1FA5E0;
  if (!qword_1FA5E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SilentContent);
  return result;
}

void sub_14B44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = L"\t";
  v4[2] = L"\t";
  v4[3] = L"\t";
  v4[4] = L"\t";
  sub_14BCC();
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_14BCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1FA5F0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for TranscriptContentViewState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1FA5F0);
  }
}

_QWORD *destroy for SilentContent.ID(_QWORD *result)
{
  if (!((*result >> 57) & 0x18 | *result & 7))
    return (_QWORD *)swift_release(*result & 0x3FFFFFFFFFFFFFFFLL);
  return result;
}

_QWORD *_s12NowPlayingUI13SilentContentC2IDOwCP_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (!(((unint64_t)*a2 >> 57) & 0x18 | *a2 & 7))
    swift_retain(v3 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

uint64_t *assignWithCopy for SilentContent.ID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;

  v3 = *a1;
  v4 = *a2;
  v5 = ((unint64_t)*a2 >> 57) & 0x18 | *a2 & 7;
  if (((unint64_t)*a1 >> 57) & 0x18 | *a1 & 7)
  {
    *a1 = v4;
    if (!v5)
      swift_retain(v4 & 0x3FFFFFFFFFFFFFFFLL);
  }
  else if (v5)
  {
    swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    v7 = v3 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain(v4 & 0x3FFFFFFFFFFFFFFFLL);
    swift_release(v7);
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for SilentContent.ID(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (!((*a1 >> 57) & 0x18 | *a1 & 7))
  {
    if (!((v4 >> 57) & 0x18 | v4 & 7))
    {
      *a1 = v4;
      swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
      return a1;
    }
    swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
  }
  *a1 = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for SilentContent.ID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SilentContent.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = ((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2) | ((unint64_t)((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2)) << 57)) & 0xF000000000000007;
  }
  return result;
}

uint64_t sub_14E38(_QWORD *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1 >> 57;
  v2 = v1 & 0x18 | *a1 & 7;
  if (v2)
    return 128 - ((v1 >> 5) | (4 * v2));
  else
    return 0;
}

unint64_t *sub_14E64(unint64_t *result, unsigned int a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 > 0x7C)
  {
    v3 = a2 - 125;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
    v3 = (v2 | (v2 << 57)) & 0xF000000000000007;
  }
  *result = v3;
  return result;
}

ValueMetadata *type metadata accessor for SilentContent.ID()
{
  return &type metadata for SilentContent.ID;
}

unint64_t sub_14EA8()
{
  unint64_t result;

  result = qword_1FA698;
  if (!qword_1FA698)
  {
    result = swift_getWitnessTable(&unk_16B4F4, &type metadata for SilentContent.ID);
    atomic_store(result, (unint64_t *)&qword_1FA698);
  }
  return result;
}

uint64_t sub_14EEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_14EF8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_14F04()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_14F10(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t sub_14F20()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_14F2C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = result;
  *(_BYTE *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t sub_14F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_16B638);
  v6 = swift_getKeyPath(&unk_16B660);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain(v2);
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

uint64_t sub_14FB4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_14FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *a1 = v2;
  return sub_D15C(v2);
}

uint64_t sub_14FEC()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  unint64_t v8;
  Swift::String v9;
  char v10;
  uint64_t v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;
  char v15;
  Swift::String v16;
  void *v17;
  Swift::String v18;
  char v19;
  Swift::String v20;
  void *v21;
  Swift::String v22;
  char v23;
  Swift::String v24;
  void *v25;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v29 = 0;
  v30 = 0xE000000000000000;
  _StringGuts.grow(_:)(108);
  v1._object = (void *)0x80000000001841B0;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  v2 = *(_QWORD *)(v0 + 16);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    sub_D15C(v2);
    swift_retain(v2 & 0x3FFFFFFFFFFFFFFFLL);
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease(0xE000000000000000);
    v27 = 0xD000000000000017;
    v28 = 0x80000000001841D0;
    sub_11107C(v2);
    object = v5._object;
    String.append(_:)(v5);
    swift_bridgeObjectRelease(object);
    v7._countAndFlagsBits = 41;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    sub_CDF8(v2);
    v3 = 0xD000000000000017;
    v4 = 0x80000000001841D0;
  }
  else
  {
    v3 = 0xD000000000000018;
    v4 = 0x8000000000184270;
  }
  v8 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  sub_CDF8(v2);
  v9._countAndFlagsBits = 0xD000000000000016;
  v9._object = (void *)0x80000000001841F0;
  String.append(_:)(v9);
  v10 = *(_BYTE *)(v0 + 32);
  v27 = *(_QWORD *)(v0 + 24);
  LOBYTE(v28) = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
  v12._countAndFlagsBits = String.init<A>(describing:)(&v27, v11);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._object = (void *)0x8000000000184210;
  v14._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v14);
  v15 = *(_BYTE *)(v0 + 48);
  v27 = *(_QWORD *)(v0 + 40);
  LOBYTE(v28) = v15;
  v16._countAndFlagsBits = String.init<A>(describing:)(&v27, v11);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x8000000000184230;
  String.append(_:)(v18);
  v19 = *(_BYTE *)(v0 + 64);
  v27 = *(_QWORD *)(v0 + 56);
  LOBYTE(v28) = v19;
  v20._countAndFlagsBits = String.init<A>(describing:)(&v27, v11);
  v21 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v21);
  v22._countAndFlagsBits = 0xD000000000000011;
  v22._object = (void *)0x8000000000184250;
  String.append(_:)(v22);
  v23 = *(_BYTE *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 72);
  LOBYTE(v28) = v23;
  v24._countAndFlagsBits = String.init<A>(describing:)(&v27, v11);
  v25 = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v25);
  return v29;
}

uint64_t sub_15268()
{
  return sub_14FEC();
}

unint64_t sub_1528C()
{
  unint64_t result;

  result = qword_1FA6A0;
  if (!qword_1FA6A0)
  {
    result = swift_getWitnessTable(&unk_16B544, &type metadata for SilentContent.ID);
    atomic_store(result, (unint64_t *)&qword_1FA6A0);
  }
  return result;
}

void *sub_152D0()
{
  return &protocol witness table for ObservableObjectPublisher;
}

unint64_t sub_152DC(uint64_t a1)
{
  unint64_t result;

  result = sub_15300();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_15300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FA6A8;
  if (!qword_1FA6A8)
  {
    v1 = type metadata accessor for SilentContent(255);
    result = swift_getWitnessTable(&unk_16B5AC, v1);
    atomic_store(result, (unint64_t *)&qword_1FA6A8);
  }
  return result;
}

double sub_15348@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16B638);
  v5 = swift_getKeyPath(&unk_16B660);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_153C8(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_16B638);
  v6 = swift_getKeyPath(&unk_16B660);
  v8[0] = v2;
  v8[1] = v3;
  sub_15450(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

id sub_15450(id result)
{
  if (result != (char *)&dword_0 + 1)
    return result;
  return result;
}

uint64_t sub_15460()
{
  uint64_t result;

  result = static Color.white.getter();
  qword_210030 = result;
  return result;
}

uint64_t sub_1547C(uint64_t a1)
{
  return sub_154A4(0.45, a1, &qword_210038);
}

uint64_t sub_15490(uint64_t a1)
{
  return sub_154A4(0.08, a1, &qword_210040);
}

uint64_t sub_154A4(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = static Color.white.getter();
  v6 = Color.opacity(_:)(a1);
  result = swift_release(v5);
  *a3 = v6;
  return result;
}

id sub_156A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VolumeSlider_iOS();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VolumeSlider_iOS()
{
  return objc_opt_self(_TtC12NowPlayingUI16VolumeSlider_iOS);
}

void CompositeComponentItem.hash(into:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  Swift::UInt v6;

  if ((a5 & 1) != 0)
    v6 = 0;
  else
    v6 = CGFloat.roundInteger.getter(*(double *)&a4);
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(a2, "hash"));
}

uint64_t static CompositeComponentItem.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  if (a1 != a5)
    return 0;
  if (((a4 | a8) & 1) != 0)
    return a4 & a8 & 1;
  return static CGFloat.==~ infix(_:_:)(*(double *)&a3, *(double *)&a7);
}

Swift::Int CompositeComponentItem.hashValue.getter(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  Swift::UInt v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  v7 = 0;
  if ((a4 & 1) == 0)
    v7 = CGFloat.roundInteger.getter(*(double *)&a3);
  Hasher._combine(_:)(v7);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(a1, "hash"));
  return Hasher._finalize()();
}

Swift::Int sub_157E8()
{
  uint64_t v0;
  void *v1;
  double v2;
  char v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v1 = *(void **)v0;
  v2 = *(double *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  Hasher.init(_seed:)(v6, 0);
  v4 = 0;
  if ((v3 & 1) == 0)
    v4 = CGFloat.roundInteger.getter(v2);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(v1, "hash"));
  return Hasher._finalize()();
}

void sub_15860()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;

  v1 = *(void **)v0;
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    v2 = 0;
  else
    v2 = CGFloat.roundInteger.getter(*(double *)(v0 + 16));
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(v1, "hash"));
}

Swift::Int sub_158B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  double v3;
  char v4;
  Swift::UInt v5;
  _QWORD v7[9];

  v2 = *(void **)v1;
  v3 = *(double *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  Hasher.init(_seed:)(v7, a1);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = CGFloat.roundInteger.getter(v3);
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(v2, "hash"));
  return Hasher._finalize()();
}

uint64_t sub_1592C(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  int v4;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v3 = *(unsigned __int8 *)(a2 + 24);
  v4 = *(unsigned __int8 *)(a1 + 24);
  if ((v4 & 1) != 0 || (v3 & 1) != 0)
    return v4 & v3;
  else
    return static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t sub_15970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *i;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (double *)(a1 + 56);
    for (i = (double *)(a2 + 56); *((_QWORD *)v3 - 3) == *((_QWORD *)i - 3); i += 4)
    {
      if ((*(_BYTE *)v3 & 1) != 0)
      {
        if (!*(_BYTE *)i)
          return 0;
      }
      else if ((*(_BYTE *)i & 1) != 0 || (static CGFloat.==~ infix(_:_:)(*(v3 - 1), *(i - 1)) & 1) == 0)
      {
        return 0;
      }
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_15A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t result;
  char v15;
  uint64_t v16;
  double *v17;
  double *i;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  char v29;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
    return 0;
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v8 = *(double *)(a1 + 56);
  v7 = *(double *)(a1 + 64);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v12 = *(double *)(a2 + 56);
  v11 = *(double *)(a2 + 64);
  if (v5 == v9 && v6 == v10)
  {
    if (v8 != v12 || v7 != v11)
      return 0;
    goto LABEL_15;
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v9, v10, 0);
  result = 0;
  if ((v15 & 1) != 0 && v8 == v12 && v7 == v11)
  {
LABEL_15:
    v16 = v2 - 1;
    if (v16)
    {
      v17 = (double *)(a2 + 104);
      for (i = (double *)(a1 + 104); *((_QWORD *)i - 4) == *((_QWORD *)v17 - 4); i += 5)
      {
        v20 = *((_QWORD *)i - 3);
        v21 = *((_QWORD *)i - 2);
        v23 = *(i - 1);
        v22 = *i;
        v24 = *((_QWORD *)v17 - 3);
        v25 = *((_QWORD *)v17 - 2);
        v27 = *(v17 - 1);
        v26 = *v17;
        if (v20 == v24 && v21 == v25)
        {
          if (v23 != v27 || v22 != v26)
            return 0;
        }
        else
        {
          v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, v24, v25, 0);
          result = 0;
          if ((v29 & 1) == 0)
            return result;
          if (v23 != v27 || v22 != v26)
            return result;
        }
        v17 += 5;
        result = 1;
        if (!--v16)
          return result;
      }
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_15B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2)
      return 1;
    v3 = a2;
    v4 = a1;
    if (a1 == a2)
      return 1;
    sub_F174(0, (unint64_t *)&qword_1FA930, NSObject_ptr);
    v5 = 0;
    v29 = v4;
    while (1)
    {
      v32 = v2;
      v7 = *(void **)(v4 + v5 + 32);
      v8 = *(void **)(v4 + v5 + 40);
      v9 = *(void **)(v4 + v5 + 48);
      v10 = *(_BYTE *)(v4 + v5 + 56);
      v11 = *(_QWORD *)(v4 + v5 + 72);
      v40 = *(_QWORD *)(v4 + v5 + 64);
      v36 = *(_QWORD *)(v4 + v5 + 80);
      v46 = *(_QWORD *)(v4 + v5 + 88);
      v34 = *(unsigned __int8 *)(v4 + v5 + 104);
      v12 = *(_QWORD *)(v4 + v5 + 112);
      v31 = v5;
      v13 = v3 + v5;
      v14 = *(void **)(v3 + v5 + 40);
      v47 = *(void **)(v3 + v5 + 32);
      v15 = *(void **)(v3 + v5 + 48);
      v16 = *(_BYTE *)(v13 + 56);
      v17 = *(_QWORD *)(v13 + 64);
      v35 = *(_QWORD *)(v13 + 80);
      v38 = *(_QWORD *)(v13 + 72);
      v39 = *(_QWORD *)(v13 + 88);
      v33 = *(unsigned __int8 *)(v13 + 104);
      v18 = *(_QWORD *)(v13 + 112);
      v37 = v7;
      v43 = v8;
      v44 = v9;
      sub_1B140(v8, v9, v10);
      v45 = v12;
      swift_retain();
      v19 = v47;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v46);
      v41 = v14;
      v42 = v16;
      sub_1B140(v14, v15, v16);
      swift_retain();
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v39);
      if ((static NSObject.== infix(_:_:)(v37, v19) & 1) == 0
        || (v40 != v17 || v11 != v38) && (_stringCompareWithSmolCheck(_:_:expecting:)(v40, v11, v17, v38, 0) & 1) == 0)
      {
        break;
      }
      if (v36 == v35 && v46 == v39)
      {
        if (v34 != v33)
          break;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v36, v46, v35, v39, 0) & 1) == 0
             || ((v34 ^ v33) & 1) != 0)
      {
        break;
      }
      v20 = objc_msgSend(v37, "contentItemIdentifier");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v24 = objc_msgSend(v19, "contentItemIdentifier");
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      if (v21 == v25 && v23 == v27)
      {

        swift_bridgeObjectRelease_n(v23, 2);
        sub_1B164(v41, v15, v42);

        swift_release(v18);
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v38);
        sub_1B164(v43, v44, v10);
        swift_release(v45);
        swift_bridgeObjectRelease(v46);
        swift_bridgeObjectRelease(v11);
      }
      else
      {
        v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v27, 0);

        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v27);
        sub_1B164(v41, v15, v42);

        swift_release(v18);
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v38);
        sub_1B164(v43, v44, v10);
        swift_release(v45);
        swift_bridgeObjectRelease(v46);
        swift_bridgeObjectRelease(v11);
        if ((v6 & 1) == 0)
          return 0;
      }
      v5 = v31 + 88;
      v2 = v32 - 1;
      v4 = v29;
      v3 = a2;
      if (v32 == 1)
        return 1;
    }

    sub_1B164(v14, v15, v16);
    swift_release(v18);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v38);
    sub_1B164(v8, v44, v10);
    swift_release(v12);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v11);
  }
  return 0;
}

uint64_t sub_15F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 *v3;
  __int128 *i;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  int v17;
  double v18;
  float v19;
  __int128 v20;
  void *v21;
  int v22;
  double v23;
  float v24;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  double v44[4];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (__int128 *)(a1 + 32);
    for (i = (__int128 *)(a2 + 32); ; i += 7)
    {
      v26 = v2 - 1;
      v5 = v3[5];
      v35 = v3[4];
      v36 = v5;
      v6 = v3[6];
      v7 = v3[1];
      v31 = *v3;
      v32 = v7;
      v8 = v3[3];
      v33 = v3[2];
      v34 = v8;
      v9 = *i;
      v10 = i[1];
      v37 = v6;
      v38 = v9;
      v11 = i[2];
      v12 = i[3];
      v13 = i[6];
      v43 = i[5];
      *(_OWORD *)v44 = v13;
      v14 = i[4];
      v41 = v12;
      v42 = v14;
      v39 = v10;
      v40 = v11;
      if (v31 != v38
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v31, *((_QWORD *)&v31 + 1), v38, *((_QWORD *)&v38 + 1), 0) & 1) == 0)
      {
        break;
      }
      if (v32 != v39
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v32, *((_QWORD *)&v32 + 1), v39, *((_QWORD *)&v39 + 1), 0) & 1) == 0)
      {
        break;
      }
      v15 = v33;
      v16 = (void *)v34;
      v17 = BYTE8(v34);
      v18 = *((double *)&v35 + 1);
      v19 = *((float *)&v36 + 1);
      v20 = v40;
      v21 = (void *)v41;
      v22 = BYTE8(v41);
      v29 = v42;
      v30 = v35;
      v23 = *((double *)&v42 + 1);
      v27 = v43;
      v28 = v36;
      v24 = *((float *)&v43 + 1);
      sub_1B188((uint64_t)&v31);
      sub_1B188((uint64_t)&v38);
      if ((_QWORD)v15 != (_QWORD)v20 && !objc_msgSend((id)v15, "isEqual:", (_QWORD)v20))
      {
LABEL_33:
        sub_1B1E0((uint64_t)&v38);
        sub_1B1E0((uint64_t)&v31);
        return 0;
      }
      if (*((_QWORD *)&v15 + 1))
      {
        if (!*((_QWORD *)&v20 + 1)
          || *((_QWORD *)&v15 + 1) != *((_QWORD *)&v20 + 1)
          && !objc_msgSend(*((id *)&v15 + 1), "isEqual:", *((_QWORD *)&v20 + 1)))
        {
          goto LABEL_33;
        }
      }
      else if (*((_QWORD *)&v20 + 1))
      {
        goto LABEL_33;
      }
      if (v16)
      {
        if (!v21 || v16 != v21 && !objc_msgSend(v16, "isEqual:", v21))
          goto LABEL_33;
      }
      else if (v21)
      {
        goto LABEL_33;
      }
      if (v17 != v22 || v30 != v29 || (static CGFloat.==~ infix(_:_:)(v18, v23) & 1) == 0)
        goto LABEL_33;
      sub_1B1E0((uint64_t)&v38);
      sub_1B1E0((uint64_t)&v31);
      if (v19 != v24 || v28 != v27 || *(double *)&v37 != v44[0] || *((double *)&v37 + 1) != v44[1])
        return 0;
      v2 = v26;
      if (!v26)
        return 1;
      v3 += 7;
    }
  }
  return 0;
}

void CompositeComponentGroup.hash(into:)(uint64_t a1, uint64_t a2)
{
  Hasher._combine(_:)(*(_QWORD *)(a2 + 16));
}

Swift::Int CompositeComponentGroup.hashValue.getter(uint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(*(_QWORD *)(a1 + 16));
  return Hasher._finalize()();
}

Swift::Int sub_1620C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(*(_QWORD *)(v1 + 16));
  return Hasher._finalize()();
}

void sub_16250()
{
  uint64_t v0;

  Hasher._combine(_:)(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

Swift::Int sub_1627C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(*(_QWORD *)(v2 + 16));
  return Hasher._finalize()();
}

unint64_t sub_162C0()
{
  unint64_t result;

  result = qword_1FA6E0;
  if (!qword_1FA6E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CompositeComponentItem, &type metadata for CompositeComponentItem);
    atomic_store(result, (unint64_t *)&qword_1FA6E0);
  }
  return result;
}

unint64_t sub_16308()
{
  unint64_t result;

  result = qword_1FA6E8;
  if (!qword_1FA6E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CompositeComponentGroup, &type metadata for CompositeComponentGroup);
    atomic_store(result, (unint64_t *)&qword_1FA6E8);
  }
  return result;
}

uint64_t sub_1634C(uint64_t *a1, uint64_t *a2)
{
  return sub_15970(*a1, *a2);
}

uint64_t destroy for CompositeComponentItem(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t initializeWithCopy for CompositeComponentItem(uint64_t a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for CompositeComponentItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = v7;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CompositeComponentItem(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeComponentItem(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositeComponentItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositeComponentItem()
{
  return &type metadata for CompositeComponentItem;
}

ValueMetadata *type metadata accessor for CompositeComponentGroup()
{
  return &type metadata for CompositeComponentGroup;
}

id sub_164FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(_QWORD, uint64_t, uint64_t);
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  objc_class *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  objc_class *v22;
  objc_super v24;
  objc_super v25;
  objc_super v26;
  objc_super v27;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_componentGroups];
  v3 = swift_bridgeObjectRetain(v2);
  v4 = sub_949FC(v3);
  swift_bridgeObjectRelease(v2);
  v5 = v4[2];
  if (v5)
  {
    v6 = v4 + 5;
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType(v7);
      v10 = *(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 40);
      swift_unknownObjectRetain_n(v7, 2);
      v10(0, ObjectType, v8);
      v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
      v12 = objc_msgSend(v1, "view");
      if (v12)
      {
        v13 = v12;
        if (objc_msgSend(v1, "isViewLoaded"))
        {
          if (objc_msgSend(v11, "isDescendantOfView:", v13))
            objc_msgSend(v11, "removeFromSuperview");
          v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
          swift_unknownObjectWeakAssign(v14 + OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView, 0);
          sub_153DC8();

          v13 = (void *)v14;
        }

      }
      objc_msgSend(v11, "setHidden:", 0);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(ObjectType, v8) & 1) != 0)
        (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v8 + 32))(objc_msgSend(v1, "isEditing"), 0, ObjectType, v8);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 48))(0, ObjectType, v8);
      swift_unknownObjectRelease_n(v7, 2);

      v6 += 4;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease(v4);
  v15 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView];
  if (v15)
  {
    v16 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v26.receiver = v15;
    v26.super_class = v16;
    v17 = v15;
    objc_msgSendSuper2(&v26, "setDataSource:", 0);
    sub_E7DA0();
    v25.receiver = v17;
    v25.super_class = v16;
    objc_msgSendSuper2(&v25, "setDelegate:", 0);
    sub_E7FB8();
    v24.receiver = v17;
    v24.super_class = v16;
    v18 = objc_msgSendSuper2(&v24, "collectionViewLayout");
    v19 = type metadata accessor for CompositeCollectionViewLayout();
    swift_dynamicCastClassUnconditional(v18, v19, 0, 0, 0);
    v20 = type metadata accessor for CompositeCollectionViewCountData();
    swift_allocObject(v20, 64, 7);
    v21 = sub_94B08((uint64_t)_swiftEmptyArrayStorage);
    sub_E8910((uint64_t)v21);

  }
  v22 = (objc_class *)type metadata accessor for CompositeCollectionViewController();
  v27.receiver = v1;
  v27.super_class = v22;
  return objc_msgSendSuper2(&v27, "dealloc");
}

double sub_16864(char a1, char a2)
{
  char *v2;
  char *v3;
  unsigned int v6;
  void *v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(_QWORD, uint64_t, uint64_t, uint64_t);
  objc_super v19;

  v3 = v2;
  v6 = objc_msgSend(v3, "isEditing");
  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
  objc_msgSendSuper2(&v19, "setEditing:animated:", a1 & 1, a2 & 1);
  v7 = *(void **)&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView];
  if (v7)
    objc_msgSend(v7, "mt_setEditing:", a1 & 1);
  if (v6 != objc_msgSend(v3, "isEditing"))
  {
    v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_componentGroups];
    v10 = swift_bridgeObjectRetain(v9);
    v11 = sub_949FC(v10);
    swift_bridgeObjectRelease(v9);
    v12 = v11[2];
    if (v12)
    {
      v13 = v11 + 5;
      v14 = a2 & 1;
      do
      {
        v15 = *(v13 - 1);
        v16 = *v13;
        ObjectType = swift_getObjectType(v15);
        v18 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v16 + 32);
        swift_unknownObjectRetain(v15);
        v18(a1 & 1, v14, ObjectType, v16);
        swift_unknownObjectRelease(v15);
        v13 += 4;
        --v12;
      }
      while (v12);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return result;
}

void sub_169E4()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  unsigned __int8 v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  objc_super v27;

  v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
  objc_msgSendSuper2(&v27, "viewDidLayoutSubviews");
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount])
  {
    v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_didIgnoreLayout] = 1;
    return;
  }
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_23;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v4 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView;
  v5 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView];
  if (!v5)
  {
LABEL_23:
    __break(1u);
    return;
  }
  objc_msgSend(v5, "setFrame:");
  if (v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_needsCountDataUpdate] == 1)
  {
    v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_needsCountDataUpdate] = 0;
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData];
    swift_retain(v6);
    v7 = sub_94A98();
    v8 = v7;
    v9 = v7[2];
    if (v9)
    {
      v25 = v6;
      sub_A9A3C(0, v9, 0);
      v10 = 4;
      do
      {
        v12 = _swiftEmptyArrayStorage[2];
        v11 = _swiftEmptyArrayStorage[3];
        v26 = *(_OWORD *)&v8[v10];
        swift_unknownObjectRetain(v26);
        if (v12 >= v11 >> 1)
          sub_A9A3C(v11 > 1, v12 + 1, 1);
        _swiftEmptyArrayStorage[2] = v12 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v12 + 4] = v26;
        v10 += 4;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease(v8);
      v6 = v25;
    }
    else
    {
      swift_bridgeObjectRelease(v7);
    }
    v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_componentGroups];
    v14 = type metadata accessor for CompositeCollectionViewCountData();
    swift_allocObject(v14, 64, 7);
    v15 = swift_bridgeObjectRetain(v13);
    v16 = sub_94B08(v15);
    v17 = *(void **)&v1[v4];
    if (v17)
    {
      v18 = v17;
      if ((objc_msgSend(v3, "_isInAWindow") & 1) != 0
        && (v19 = objc_msgSend(v3, "layer"),
            v20 = objc_msgSend(v19, "hasBeenCommitted"),
            v19,
            (v20 & 1) != 0))
      {
        v21 = (_QWORD *)swift_allocObject(&unk_1C8040, 48, 7);
        v21[2] = v1;
        v21[3] = v16;
        v21[4] = v6;
        v21[5] = v18;
        v22 = (_QWORD *)swift_allocObject(&unk_1C8068, 40, 7);
        v22[2] = v16;
        v22[3] = _swiftEmptyArrayStorage;
        v22[4] = v1;
        v23 = v1;
        swift_retain_n(v16, 2);
        swift_retain(v6);
        v18 = v18;
        v24 = v23;
        sub_E6E04((uint64_t)sub_1EA60, (uint64_t)v21, (uint64_t (*)())sub_1EAA0, (uint64_t)v22);
        swift_release(v21);
        swift_release(v22);
      }
      else
      {
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        sub_16D48(0, (uint64_t)v1, (uint64_t)v16, v6);
        objc_msgSend(v18, "reloadData");
      }
      swift_release(v6);

    }
    else
    {
      sub_16D48(0, (uint64_t)v1, (uint64_t)v16, v6);
      sub_18A94((uint64_t)v16, (uint64_t)_swiftEmptyArrayStorage, v1);
      swift_release(v6);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }
    swift_release(v16);
  }

}

void sub_16D48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  objc_class *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t *v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  char v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  id v56;
  __n128 v57;
  void *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  id v63;
  __n128 v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(char *, _QWORD);
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char v98;
  void (*v99)(char *, _QWORD);
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  void *v114;
  id v115;
  __n128 v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  void *v124;
  char *v125;
  __n128 v126;
  char v127;
  char v128;
  uint64_t ObjectType;
  void *v130;
  id v131;
  void *v132;
  void *v133;
  char v134;
  uint64_t v135;
  char *v136;
  id v137;
  void *v138;
  uint64_t v139;
  void *v140;
  id v141;
  void *v142;
  void *v143;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v145;
  char v146;
  unint64_t v147;
  uint64_t v148;
  _BOOL8 v149;
  uint64_t v150;
  char v151;
  unint64_t v152;
  char v153;
  _QWORD *v154;
  void *v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  BOOL v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  NSIndexSet *v164;
  void *v165;
  void *v166;
  _QWORD *v167;
  void *v168;
  uint64_t v169;
  _QWORD *v170;
  char v171;
  unint64_t v172;
  uint64_t v173;
  _BOOL8 v174;
  uint64_t v175;
  char v176;
  unint64_t v177;
  char v178;
  _QWORD *v179;
  void *v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  NSIndexSet *v187;
  void *v188;
  void *v189;
  void *v190;
  uint64_t v191;
  _QWORD *v192;
  char v193;
  unint64_t v194;
  uint64_t v195;
  _BOOL8 v196;
  uint64_t v197;
  char v198;
  unint64_t v199;
  char v200;
  _QWORD *v201;
  void *v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  NSIndexSet *v209;
  void *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  char *v214;
  _QWORD *v215;
  void *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  unint64_t v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  _QWORD *v239;
  char v240[24];
  char v241[8];
  _QWORD *v242;
  char v243[8];
  char v244[8];
  objc_super v245;

  v235 = type metadata accessor for IndexSet.Index(0);
  v232 = *(_QWORD *)(v235 - 8);
  v8 = __chkstk_darwin(v235);
  v237 = (uint64_t *)((char *)&v211 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v236 = (char *)&v211 - v10;
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA960);
  v11 = __chkstk_darwin(v224);
  v231 = (char *)&v211 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v217 = (char *)&v211 - v13;
  v14 = type metadata accessor for IndexSet(0);
  v234 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v214 = (char *)&v211 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v233 = (char *)&v211 - v18;
  v19 = __chkstk_darwin(v17);
  v225 = (char *)&v211 - v20;
  v21 = __chkstk_darwin(v19);
  v226 = (char *)&v211 - v22;
  v23 = __chkstk_darwin(v21);
  v213 = (char *)&v211 - v24;
  __chkstk_darwin(v23);
  v212 = (char *)&v211 - v25;
  v26 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
  v27 = *(_QWORD *)(a2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData) = a3;
  swift_retain(a3);
  swift_release(v27);
  v28 = *(void **)(a2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView);
  if (v28)
  {
    v29 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v245.receiver = v28;
    v245.super_class = v29;
    v30 = objc_msgSendSuper2(&v245, "collectionViewLayout");
    v31 = type metadata accessor for CompositeCollectionViewLayout();
    swift_dynamicCastClassUnconditional(v30, v31, 0, 0, 0);
    v32 = swift_retain(*(_QWORD *)(a2 + v26));
    sub_E8910(v32);

  }
  v33 = sub_94A98();
  v34 = *(_QWORD *)(a2 + v26);
  swift_retain(v34);
  v35 = sub_94A98();
  swift_release(v34);
  sub_180B4((unint64_t)v35, v33);
  v37 = v36;
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v35);
  v223 = *(_QWORD *)(v37 + 16);
  if (!v223)
  {
LABEL_124:
    swift_bridgeObjectRelease(v37);
    return;
  }
  v222 = v37 + 32;
  v215 = (_QWORD *)(a4 + 32);
  swift_beginAccess(a4 + 32, v244, 0, 0);
  v38 = 0;
  v229 = v14;
  v219 = v26;
  v220 = v37;
  v221 = a4;
  v218 = a2;
  v216 = a1;
  while (1)
  {
    if (v38 >= *(_QWORD *)(v37 + 16))
      goto LABEL_127;
    v40 = (uint64_t *)(v222 + 56 * v38);
    v42 = (void *)v40[3];
    v41 = v40[4];
    v43 = (_QWORD *)v40[5];
    v44 = *((_BYTE *)v40 + 48);
    v45 = *((_BYTE *)v40 + 8) == 1;
    v228 = v42;
    v239 = v43;
    v227 = v38;
    if (v45)
    {
      v46 = *v40;
      if (v46)
      {
        if (v46 == 1)
        {
          v47 = *(_QWORD *)(a2 + v26);
          swift_unknownObjectRetain_n(v42, 2);
          swift_retain(v47);
          v48 = v239;
          v49 = sub_958B0(v42, v41, (uint64_t)v239, v44);
          swift_release(v47);
          v50 = *(_QWORD **)(a2 + v26);
          v51 = v50 + 4;
          swift_beginAccess(v50 + 4, v240, 0, 0);
          v52 = v50[4];
          if (*(_QWORD *)(v52 + 16))
          {
            swift_unknownObjectRetain(v42);
            swift_retain(v50);
            swift_bridgeObjectRetain(v52);
            v53 = sub_139FB8(v42, v41, (uint64_t)v48, v44);
            if ((v54 & 1) != 0)
            {
              v55 = v42;
              v56 = *(id *)(*(_QWORD *)(v52 + 56) + 8 * v53);
              swift_release(v50);
              swift_unknownObjectRelease(v55);
              v57 = swift_bridgeObjectRelease(v52);
LABEL_80:
              v14 = v229;
              a2 = v218;
              if (__OFADD__(v49, v56))
                goto LABEL_132;
              if ((uint64_t)v56 + v49 < v49)
                goto LABEL_135;
              v163 = v212;
              IndexSet.init(integersIn:)(v49, v57);
              if (a1)
              {
                IndexSet._bridgeToObjectiveC()(v164);
                v166 = v165;
                objc_msgSend(a1, "insertSections:", v165);
                swift_unknownObjectRelease_n(v228, 2);

              }
              else
              {
                swift_unknownObjectRelease_n(v228, 2);
              }
              (*(void (**)(char *, uint64_t))(v234 + 8))(v163, v14);
              v37 = v220;
              goto LABEL_123;
            }
            v238 = (uint64_t)v50;
            v127 = v44;
            swift_unknownObjectRelease(v42);
            swift_bridgeObjectRelease(v52);
          }
          else
          {
            v127 = v44;
            v238 = (uint64_t)v50;
            swift_retain(v50);
          }
          ObjectType = swift_getObjectType(v42);
          v130 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(ObjectType, v41);
          v131 = objc_msgSend(v130, "dataSource");
          if (v131)
          {
            v132 = v131;
            v133 = v130;
            if ((objc_msgSend(v131, "respondsToSelector:", "numberOfSectionsInCollectionView:") & 1) != 0)
              v56 = objc_msgSend(v132, "numberOfSectionsInCollectionView:", v130);
            else
              v56 = &dword_0 + 1;
            swift_unknownObjectRelease(v132);
          }
          else
          {
            v133 = v130;
            v56 = &dword_0 + 1;
          }
          swift_beginAccess(v51, v241, 33, 0);
          v143 = v228;
          swift_unknownObjectRetain(v228);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v51);
          v242 = (_QWORD *)*v51;
          v145 = v242;
          *v51 = 0x8000000000000000;
          v147 = sub_139FB8(v143, v41, (uint64_t)v239, v127);
          v148 = v145[2];
          v149 = (v146 & 1) == 0;
          v150 = v148 + v149;
          if (__OFADD__(v148, v149))
            goto LABEL_138;
          v151 = v146;
          if (v145[3] >= v150)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_13F704();
          }
          else
          {
            sub_13AA60(v150, isUniquelyReferenced_nonNull_native);
            v152 = sub_139FB8(v228, v41, (uint64_t)v239, v127);
            if ((v151 & 1) != (v153 & 1))
              goto LABEL_144;
            v147 = v152;
          }
          v26 = v219;
          v154 = v242;
          if ((v151 & 1) != 0)
          {
            *(_QWORD *)(v242[7] + 8 * v147) = v56;
            v155 = v228;
          }
          else
          {
            v242[(v147 >> 6) + 8] |= 1 << v147;
            v156 = v154[6] + 32 * v147;
            v157 = v228;
            *(_QWORD *)v156 = v228;
            *(_QWORD *)(v156 + 8) = v41;
            *(_QWORD *)(v156 + 16) = v239;
            *(_BYTE *)(v156 + 24) = v127;
            *(_QWORD *)(v154[7] + 8 * v147) = v56;
            v158 = v154[2];
            v159 = __OFADD__(v158, 1);
            v160 = v158 + 1;
            if (v159)
              goto LABEL_141;
            v154[2] = v160;
            swift_unknownObjectRetain(v157);
          }
          v161 = (char *)v238;
          v162 = *(_QWORD *)(v238 + 32);
          *(_QWORD *)(v238 + 32) = v154;
          swift_unknownObjectRelease(v155);
          swift_bridgeObjectRelease(v162);
          swift_endAccess(v241);
          swift_release(v161);

          goto LABEL_80;
        }
        v117 = *(_QWORD *)(a2 + v26);
        swift_unknownObjectRetain(v42);
        swift_retain(v117);
        v118 = v239;
        v238 = sub_958B0(v42, v41, (uint64_t)v239, v44);
        swift_release(v117);
        v119 = *(_QWORD *)(a2 + v26);
        v120 = (_QWORD *)(v119 + 32);
        swift_beginAccess(v119 + 32, v243, 0, 0);
        v121 = *(_QWORD *)(v119 + 32);
        if (*(_QWORD *)(v121 + 16))
        {
          swift_unknownObjectRetain(v42);
          swift_retain(v119);
          swift_bridgeObjectRetain(v121);
          v122 = sub_139FB8(v42, v41, (uint64_t)v118, v44);
          if ((v123 & 1) != 0)
          {
            v124 = v42;
            v125 = *(char **)(*(_QWORD *)(v121 + 56) + 8 * v122);
            swift_release(v119);
            swift_unknownObjectRelease(v124);
            v126 = swift_bridgeObjectRelease(v121);
            goto LABEL_116;
          }
          v230 = v119;
          v128 = v44;
          swift_unknownObjectRelease(v42);
          swift_bridgeObjectRelease(v121);
        }
        else
        {
          v128 = v44;
          v230 = v119;
          swift_retain(v119);
        }
        v139 = swift_getObjectType(v42);
        v140 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v139, v41);
        v141 = objc_msgSend(v140, "dataSource");
        if (v141)
        {
          v142 = v141;
          if ((objc_msgSend(v141, "respondsToSelector:", "numberOfSectionsInCollectionView:") & 1) != 0)
            v125 = (char *)objc_msgSend(v142, "numberOfSectionsInCollectionView:", v140);
          else
            v125 = (_BYTE *)(&dword_0 + 1);
          swift_unknownObjectRelease(v142);
        }
        else
        {
          v125 = (_BYTE *)(&dword_0 + 1);
        }
        swift_beginAccess(v120, v241, 33, 0);
        v190 = v228;
        swift_unknownObjectRetain(v228);
        v191 = swift_isUniquelyReferenced_nonNull_native(*v120);
        v242 = (_QWORD *)*v120;
        v192 = v242;
        *v120 = 0x8000000000000000;
        v194 = sub_139FB8(v190, v41, (uint64_t)v239, v128);
        v195 = v192[2];
        v196 = (v193 & 1) == 0;
        v197 = v195 + v196;
        if (__OFADD__(v195, v196))
          goto LABEL_140;
        v198 = v193;
        if (v192[3] >= v197)
        {
          if ((v191 & 1) == 0)
            sub_13F704();
        }
        else
        {
          sub_13AA60(v197, v191);
          v199 = sub_139FB8(v228, v41, (uint64_t)v239, v128);
          if ((v198 & 1) != (v200 & 1))
            goto LABEL_144;
          v194 = v199;
        }
        v26 = v219;
        v201 = v242;
        if ((v198 & 1) != 0)
        {
          *(_QWORD *)(v242[7] + 8 * v194) = v125;
          v202 = v228;
        }
        else
        {
          v242[(v194 >> 6) + 8] |= 1 << v194;
          v203 = v201[6] + 32 * v194;
          v204 = v228;
          *(_QWORD *)v203 = v228;
          *(_QWORD *)(v203 + 8) = v41;
          *(_QWORD *)(v203 + 16) = v239;
          *(_BYTE *)(v203 + 24) = v128;
          *(_QWORD *)(v201[7] + 8 * v194) = v125;
          v205 = v201[2];
          v159 = __OFADD__(v205, 1);
          v206 = v205 + 1;
          if (v159)
            goto LABEL_143;
          v201[2] = v206;
          swift_unknownObjectRetain(v204);
        }
        v207 = v230;
        v208 = *(_QWORD *)(v230 + 32);
        *(_QWORD *)(v230 + 32) = v201;
        swift_unknownObjectRelease(v202);
        swift_bridgeObjectRelease(v208);
        swift_endAccess(v241);
        swift_release(v207);

LABEL_116:
        v14 = v229;
        if (__OFADD__(v238, v125))
          goto LABEL_133;
        if ((uint64_t)&v125[v238] < v238)
          goto LABEL_137;
        v186 = v214;
        IndexSet.init(integersIn:)(v238, v126);
        if (a1)
        {
          IndexSet._bridgeToObjectiveC()(v209);
          v189 = v210;
          objc_msgSend(a1, "reloadSections:", v210);
          goto LABEL_120;
        }
        goto LABEL_121;
      }
      swift_unknownObjectRetain(v42);
      v110 = sub_958B0(v109, v41, (uint64_t)v43, v44);
      v111 = *(_QWORD *)(a4 + 32);
      if (*(_QWORD *)(v111 + 16))
      {
        swift_unknownObjectRetain(v42);
        swift_bridgeObjectRetain(v111);
        v112 = sub_139FB8(v42, v41, (uint64_t)v239, v44);
        if ((v113 & 1) != 0)
        {
          v114 = v42;
          v115 = *(id *)(*(_QWORD *)(v111 + 56) + 8 * v112);
          swift_unknownObjectRelease(v114);
          v116 = swift_bridgeObjectRelease(v111);
          goto LABEL_99;
        }
        swift_unknownObjectRelease(v42);
        swift_bridgeObjectRelease(v111);
      }
      v134 = v44;
      v135 = swift_getObjectType(v42);
      v136 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v135, v41);
      v137 = objc_msgSend(v136, "dataSource");
      v238 = (uint64_t)v136;
      if (v137)
      {
        v138 = v137;
        if ((objc_msgSend(v137, "respondsToSelector:", "numberOfSectionsInCollectionView:") & 1) != 0)
          v115 = objc_msgSend(v138, "numberOfSectionsInCollectionView:", v136);
        else
          v115 = &dword_0 + 1;
        swift_unknownObjectRelease(v138);
      }
      else
      {
        v115 = &dword_0 + 1;
      }
      v167 = v215;
      swift_beginAccess(v215, v241, 33, 0);
      v168 = v228;
      swift_unknownObjectRetain(v228);
      v169 = swift_isUniquelyReferenced_nonNull_native(*v167);
      v242 = (_QWORD *)*v167;
      v170 = v242;
      *v167 = 0x8000000000000000;
      v172 = sub_139FB8(v168, v41, (uint64_t)v239, v134);
      v173 = v170[2];
      v174 = (v171 & 1) == 0;
      v175 = v173 + v174;
      if (__OFADD__(v173, v174))
        goto LABEL_139;
      v176 = v171;
      if (v170[3] >= v175)
      {
        if ((v169 & 1) == 0)
          sub_13F704();
      }
      else
      {
        sub_13AA60(v175, v169);
        v177 = sub_139FB8(v228, v41, (uint64_t)v239, v134);
        if ((v176 & 1) != (v178 & 1))
          goto LABEL_144;
        v172 = v177;
      }
      v26 = v219;
      v179 = v242;
      if ((v176 & 1) != 0)
      {
        *(_QWORD *)(v242[7] + 8 * v172) = v115;
        v180 = v228;
      }
      else
      {
        v242[(v172 >> 6) + 8] |= 1 << v172;
        v181 = v179[6] + 32 * v172;
        v182 = v228;
        *(_QWORD *)v181 = v228;
        *(_QWORD *)(v181 + 8) = v41;
        *(_QWORD *)(v181 + 16) = v239;
        *(_BYTE *)(v181 + 24) = v134;
        *(_QWORD *)(v179[7] + 8 * v172) = v115;
        v183 = v179[2];
        v159 = __OFADD__(v183, 1);
        v184 = v183 + 1;
        if (v159)
          goto LABEL_142;
        v179[2] = v184;
        swift_unknownObjectRetain(v182);
      }
      v185 = *v215;
      *v215 = v179;
      swift_unknownObjectRelease(v180);
      swift_bridgeObjectRelease(v185);
      swift_endAccess(v241);

      v14 = v229;
LABEL_99:
      if (__OFADD__(v110, v115))
        goto LABEL_134;
      if ((uint64_t)v115 + v110 < v110)
        goto LABEL_136;
      v186 = v213;
      IndexSet.init(integersIn:)(v110, v116);
      if (a1)
      {
        IndexSet._bridgeToObjectiveC()(v187);
        v189 = v188;
        objc_msgSend(a1, "deleteSections:", v188);
LABEL_120:
        swift_unknownObjectRelease(v228);

LABEL_122:
        v37 = v220;
        (*(void (**)(char *, uint64_t))(v234 + 8))(v186, v14);
LABEL_123:
        a4 = v221;
        goto LABEL_6;
      }
LABEL_121:
      swift_unknownObjectRelease(v228);
      goto LABEL_122;
    }
    swift_unknownObjectRetain(v42);
    v59 = sub_958B0(v58, v41, (uint64_t)v43, v44);
    v60 = v44;
    v61 = v59;
    v62 = v60;
    v63 = sub_956F4(v42, v41, (uint64_t)v43, v60);
    if (__OFADD__(v61, v63))
      goto LABEL_128;
    if ((uint64_t)v63 + v61 < v61)
      break;
    IndexSet.init(integersIn:)(v61, v64);
    v65 = *(_QWORD *)(a2 + v26);
    swift_retain(v65);
    v66 = v239;
    v67 = sub_958B0(v42, v41, (uint64_t)v239, v62);
    swift_release(v65);
    v68 = *(_QWORD *)(a2 + v26);
    swift_retain(v68);
    v69 = sub_956F4(v42, v41, (uint64_t)v66, v62);
    v70 = swift_release(v68);
    if (__OFADD__(v67, v69))
      goto LABEL_130;
    if ((uint64_t)v69 + v67 < v67)
      goto LABEL_131;
    v71 = IndexSet.init(integersIn:)(v67, v70);
    v72 = (uint64_t)v217;
    IndexSet.makeIterator()(v71);
    v73 = v72 + *(int *)(v224 + 36);
    v238 = *(_QWORD *)(v232 + 16);
    v239 = _swiftEmptyArrayStorage;
    v230 = v73;
    while (1)
    {
      v74 = v235;
      v75 = v236;
      ((void (*)(char *, uint64_t, uint64_t))v238)(v236, v73, v235);
      v76 = sub_8330(&qword_1FA968, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v77 = (char *)v237;
      dispatch thunk of Collection.endIndex.getter((char *)v237, v14, v76);
      v78 = sub_8330(&qword_1FA970, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
      v79 = dispatch thunk of static Equatable.== infix(_:_:)(v75, v77, v74, v78);
      v80 = *(void (**)(char *, uint64_t))(v232 + 8);
      v80(v77, v74);
      v80(v75, v74);
      if ((v79 & 1) != 0)
        break;
      v73 = v230;
      v81 = (void (*)(char *, _QWORD))dispatch thunk of Collection.subscript.read(v241, v230, v14, v76);
      v83 = *v82;
      v81(v241, 0);
      v84 = v234;
      v85 = v233;
      (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v233, v72, v14);
      dispatch thunk of Collection.formIndex(after:)(v73, v14, v76);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v14);
      v86 = v239;
      if ((swift_isUniquelyReferenced_nonNull_native(v239) & 1) == 0)
        v86 = sub_134844(0, v86[2] + 1, 1, v86);
      v88 = v86[2];
      v87 = v86[3];
      if (v88 >= v87 >> 1)
        v86 = sub_134844((_QWORD *)(v87 > 1), v88 + 1, 1, v86);
      v86[2] = v88 + 1;
      v239 = v86;
      v86[v88 + 4] = v83;
    }
    v89 = sub_9944(v72, &qword_1FA960);
    v90 = v231;
    IndexSet.makeIterator()(v89);
    v91 = &v90[*(int *)(v224 + 36)];
    v92 = _swiftEmptyArrayStorage;
    v93 = v235;
    v230 = v78;
    while (1)
    {
      v94 = v236;
      ((void (*)(char *, char *, uint64_t))v238)(v236, v91, v93);
      v95 = (char *)v237;
      v96 = v91;
      v97 = (uint64_t)v231;
      v14 = v229;
      dispatch thunk of Collection.endIndex.getter((char *)v237, v229, v76);
      v98 = dispatch thunk of static Equatable.== infix(_:_:)(v94, v95, v93, v230);
      v80(v95, v93);
      v80(v94, v93);
      if ((v98 & 1) != 0)
        break;
      v99 = (void (*)(char *, _QWORD))dispatch thunk of Collection.subscript.read(v241, v96, v14, v76);
      v101 = *v100;
      v99(v241, 0);
      v102 = v234;
      v103 = v233;
      (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v233, v97, v14);
      dispatch thunk of Collection.formIndex(after:)(v96, v14, v76);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v14);
      v91 = v96;
      if ((swift_isUniquelyReferenced_nonNull_native(v92) & 1) == 0)
        v92 = sub_134844(0, v92[2] + 1, 1, v92);
      v105 = v92[2];
      v104 = v92[3];
      if (v105 >= v104 >> 1)
        v92 = sub_134844((_QWORD *)(v104 > 1), v105 + 1, 1, v92);
      v92[2] = v105 + 1;
      v92[v105 + 4] = v101;
      v93 = v235;
    }
    sub_9944(v97, &qword_1FA960);
    if (v92[2] >= v239[2])
      v106 = v239[2];
    else
      v106 = v92[2];
    a2 = v218;
    a1 = v216;
    if (v106)
    {
      v107 = 0;
      v108 = v239 + 4;
      do
      {
        if (a1)
        {
          if (v107 >= v239[2])
          {
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
            goto LABEL_129;
          }
          if (v107 >= v92[2])
            goto LABEL_126;
          objc_msgSend(a1, "moveSection:toSection:", v108[v107], v92[v107 + 4]);
        }
        ++v107;
      }
      while (v106 != v107);
    }
    swift_unknownObjectRelease(v228);
    v39 = *(void (**)(char *, uint64_t))(v234 + 8);
    v39(v225, v14);
    v39(v226, v14);
    swift_bridgeObjectRelease(v239);
    swift_bridgeObjectRelease(v92);
    a4 = v221;
    v26 = v219;
    v37 = v220;
LABEL_6:
    v38 = v227 + 1;
    if (v227 + 1 == v223)
      goto LABEL_124;
  }
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CompositeComponentItem);
  __break(1u);
}

void sub_180B4(unint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t *v39;
  unint64_t v40;
  double v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  char v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  unint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[3];
  char v110;

  v3 = (unint64_t)a2;
  v4 = a1;
  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = sub_1B238((uint64_t)_swiftEmptyArrayStorage, v6 + 1, (uint64_t *)&unk_1FA980);
  v8 = sub_1B238((uint64_t)v7, v5 + 1, &qword_1FA978);
  v96 = v6;
  v101 = v3;
  v102 = (_QWORD *)v5;
  v103 = v4;
  if (!v5)
    goto LABEL_16;
  swift_bridgeObjectRetain(v3);
  if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
LABEL_121:
    v8 = sub_135E30(v8);
  v9 = 0;
  v10 = v8;
  v11 = v8 + 5;
  v2 = (_QWORD *)(v3 + 56);
  v12 = _swiftEmptyArrayStorage;
  while (1)
  {
    v13 = *(v2 - 1);
    v3 = *(unsigned __int8 *)v2;
    v104 = *(_OWORD *)(v2 - 3);
    swift_unknownObjectRetain(*(v2 - 3));
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_134950(0, v12[2] + 1, 1, v12);
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
      v12 = sub_134950((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    v8 = (_QWORD *)(v9 + 1);
    v12[2] = v15 + 1;
    v16 = &v12[7 * v15];
    v16[4] = 0;
    *((_BYTE *)v16 + 40) = 1;
    v16[6] = v9;
    *(_OWORD *)(v16 + 7) = v104;
    v16[9] = v13;
    *((_BYTE *)v16 + 80) = v3;
    v17 = v10[2];
    swift_bridgeObjectRetain(v12);
    if (v9 + 1 >= v17)
      goto LABEL_110;
    v18 = (_QWORD *)v11[v9];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    v11[v9] = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      break;
    if (!v18[2])
      goto LABEL_14;
LABEL_11:
    v20 = v18[4];
    v18[4] = v12;
    swift_bridgeObjectRelease(v20);
    v2 += 4;
    ++v9;
    if (v102 == v8)
      goto LABEL_15;
  }
  v18 = sub_135DFC(v18);
  v11[v9] = v18;
  if (v18[2])
    goto LABEL_11;
LABEL_14:
  __break(1u);
LABEL_15:
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v101);
  v8 = v10;
  v6 = v96;
  v5 = (unint64_t)v102;
  v4 = v103;
LABEL_16:
  if (!v6)
    goto LABEL_94;
  swift_bridgeObjectRetain(v4);
  if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
    v8 = sub_135E30(v8);
  v21 = 0;
  v94 = v4 + 32;
  v22 = (_BYTE *)(v4 + 56);
  v23 = _swiftEmptyArrayStorage;
  v2 = (_QWORD *)(&stru_20 + 24);
  do
  {
    v24 = *((_QWORD *)v22 - 1);
    v25 = *v22;
    v105 = *(_OWORD *)(v22 - 24);
    swift_unknownObjectRetain(*((_QWORD *)v22 - 3));
    if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
      v23 = sub_134950(0, v23[2] + 1, 1, v23);
    v27 = v23[2];
    v26 = v23[3];
    if (v27 >= v26 >> 1)
      v23 = sub_134950((_QWORD *)(v26 > 1), v27 + 1, 1, v23);
    v23[2] = v27 + 1;
    v28 = &v23[7 * v27];
    v28[4] = 1;
    *((_BYTE *)v28 + 40) = 1;
    v28[6] = v21;
    *(_OWORD *)(v28 + 7) = v105;
    v28[9] = v24;
    *((_BYTE *)v28 + 80) = v25;
    v3 = (unint64_t)v8;
    v29 = v8[2];
    swift_bridgeObjectRetain(v23);
    if (!v29)
      goto LABEL_111;
    v30 = (_QWORD *)v8[4];
    v31 = swift_isUniquelyReferenced_nonNull_native(v30);
    v8[4] = v30;
    if ((v31 & 1) == 0)
    {
      v30 = sub_135DFC(v30);
      v8[4] = v30;
    }
    v32 = v21 + 1;
    if ((unint64_t)(v21 + 1) >= v30[2])
    {
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    v33 = &v30[v21];
    v34 = v33[5];
    v33[5] = v23;
    swift_bridgeObjectRelease(v34);
    v22 += 32;
    ++v21;
  }
  while (v96 != v32);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v103);
  v5 = (unint64_t)v102;
  if (!v102)
    goto LABEL_93;
  v2 = v8;
  v6 = v96;
  if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
LABEL_124:
    v2 = sub_135E30(v2);
  v35 = 0;
  if (v6 <= 1)
    v36 = 1;
  else
    v36 = v6;
  v90 = v2 + 4;
  v91 = v36;
  v92 = (_QWORD *)(v101 + 56);
  v93 = v2 + 5;
  v99 = v2;
  v100 = (_QWORD *)(v5 - 1);
  v37 = 1;
  while (2)
  {
    v38 = 0;
    v39 = v93;
    v95 = v35;
    v40 = v94 + 32 * v35;
    v101 = *(_QWORD *)v40;
    v41 = *(double *)(v40 + 16);
    v98 = (_QWORD *)v40;
    v97 = *(unsigned __int8 *)(v40 + 24);
    v3 = v37 - 1;
    v8 = v92;
    v103 = v37 - 1;
    while (2)
    {
      v42 = (unint64_t)v38 + 1;
      if (*(v8 - 3) == v101)
      {
        if ((*(_BYTE *)v8 & 1) != 0)
        {
          if (!v97)
            goto LABEL_37;
        }
        else if ((v97 & 1) != 0 || (static CGFloat.==~ infix(_:_:)(*((double *)v8 - 1), v41) & 1) == 0)
        {
          goto LABEL_37;
        }
        v75 = v2[2];
        if ((unint64_t)v38 >= v75)
          goto LABEL_117;
        v76 = *(v39 - 1);
        if (v3 >= *(_QWORD *)(v76 + 16))
          goto LABEL_118;
        v3 = *(_QWORD *)(v76 + 8 * v3 + 32);
        swift_bridgeObjectRetain(v3);
        if (v42 >= v75)
          goto LABEL_119;
        v66 = (_QWORD *)*v39;
        v77 = swift_isUniquelyReferenced_nonNull_native(*v39);
        *v39 = (unint64_t)v66;
        if ((v77 & 1) == 0)
        {
          v66 = sub_135DFC(v66);
          *v39 = (unint64_t)v66;
        }
        if (v37 >= v66[2])
          goto LABEL_120;
        goto LABEL_86;
      }
LABEL_37:
      v43 = v2[2];
      if ((unint64_t)v38 >= v43)
        goto LABEL_103;
      v44 = *(v39 - 1);
      if (v37 >= *(_QWORD *)(v44 + 16))
        goto LABEL_104;
      if (v42 >= v43)
        goto LABEL_105;
      if (v3 >= *(_QWORD *)(*v39 + 16))
        goto LABEL_106;
      v45 = v44 + 32;
      v46 = *(_QWORD **)(v45 + 8 * v37);
      v47 = 8 * v3;
      v3 = *(_QWORD *)(*v39 + 8 * v3 + 32);
      v48 = *(_QWORD **)(v45 + v47);
      v49 = v46[2];
      v50 = *(_QWORD *)(v3 + 16);
      v51 = v48[2];
      if (v50 >= v49)
        v52 = v46[2];
      else
        v52 = *(_QWORD *)(v3 + 16);
      if (v51 >= v52)
        v51 = v52;
      if (v49 != v51)
      {
        if (v50 != v51)
        {
          swift_bridgeObjectRetain(v48);
          v68 = v98[2];
          v69 = *((_BYTE *)v98 + 24);
          v108 = *(_OWORD *)v98;
          swift_unknownObjectRetain(*v98);
          if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
            v48 = sub_134950(0, v48[2] + 1, 1, v48);
          v71 = v48[2];
          v70 = v48[3];
          v3 = v71 + 1;
          if (v71 >= v70 >> 1)
            v48 = sub_134950((_QWORD *)(v70 > 1), v71 + 1, 1, v48);
          v48[2] = v3;
          v72 = &v48[7 * v71];
          v72[4] = 2;
          *((_BYTE *)v72 + 40) = 1;
          v72[6] = v38;
          *(_OWORD *)(v72 + 7) = v108;
          v72[9] = v68;
          *((_BYTE *)v72 + 80) = v69;
          v2 = v99;
          if (v42 >= v99[2])
            goto LABEL_114;
          v3 = *v39;
          v73 = swift_isUniquelyReferenced_nonNull_native(*v39);
          *v39 = v3;
          if ((v73 & 1) == 0)
          {
            v3 = (unint64_t)sub_135DFC((_QWORD *)v3);
            *v39 = v3;
          }
          v5 = (unint64_t)v102;
          if (v37 >= *(_QWORD *)(v3 + 16))
            goto LABEL_116;
          v74 = (_QWORD *)(v3 + 8 * v37);
          v60 = v74[4];
          v74[4] = v48;
          goto LABEL_87;
        }
        swift_bridgeObjectRetain(v3);
        v61 = v98[2];
        v62 = *((_BYTE *)v98 + 24);
        v107 = *(_OWORD *)v98;
        swift_unknownObjectRetain(*v98);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = (unint64_t)sub_134950(0, *(_QWORD *)(v3 + 16) + 1, 1, (_QWORD *)v3);
        v64 = *(_QWORD *)(v3 + 16);
        v63 = *(_QWORD *)(v3 + 24);
        if (v64 >= v63 >> 1)
          v3 = (unint64_t)sub_134950((_QWORD *)(v63 > 1), v64 + 1, 1, (_QWORD *)v3);
        *(_QWORD *)(v3 + 16) = v64 + 1;
        v65 = (_QWORD *)(v3 + 56 * v64);
        v65[4] = 1;
        *((_BYTE *)v65 + 40) = 1;
        v65[6] = v103;
        *(_OWORD *)(v65 + 7) = v107;
        v65[9] = v61;
        *((_BYTE *)v65 + 80) = v62;
        v2 = v99;
        if (v42 >= v99[2])
          goto LABEL_113;
        v66 = (_QWORD *)*v39;
        v67 = swift_isUniquelyReferenced_nonNull_native(*v39);
        *v39 = (unint64_t)v66;
        if ((v67 & 1) == 0)
        {
          v66 = sub_135DFC(v66);
          *v39 = (unint64_t)v66;
        }
        v5 = (unint64_t)v102;
        if (v37 >= v66[2])
          goto LABEL_115;
LABEL_86:
        v78 = &v66[v37];
        v60 = v78[4];
        v78[4] = v3;
        goto LABEL_87;
      }
      v106 = *(_OWORD *)(v8 - 3);
      v53 = *(v8 - 1);
      v54 = *(_BYTE *)v8;
      swift_bridgeObjectRetain(v46);
      swift_unknownObjectRetain(v106);
      if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
        v46 = sub_134950(0, v49 + 1, 1, v46);
      v56 = v46[2];
      v55 = v46[3];
      v3 = v56 + 1;
      if (v56 >= v55 >> 1)
        v46 = sub_134950((_QWORD *)(v55 > 1), v56 + 1, 1, v46);
      v46[2] = v3;
      v57 = &v46[7 * v56];
      v57[4] = 0;
      *((_BYTE *)v57 + 40) = 1;
      v57[6] = v38;
      *(_OWORD *)(v57 + 7) = v106;
      v57[9] = v53;
      *((_BYTE *)v57 + 80) = v54;
      v2 = v99;
      if (v42 >= v99[2])
      {
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      v3 = *v39;
      v58 = swift_isUniquelyReferenced_nonNull_native(*v39);
      *v39 = v3;
      if ((v58 & 1) == 0)
      {
        v3 = (unint64_t)sub_135DFC((_QWORD *)v3);
        *v39 = v3;
      }
      if (v37 >= *(_QWORD *)(v3 + 16))
        goto LABEL_109;
      v59 = (_QWORD *)(v3 + 8 * v37);
      v60 = v59[4];
      v59[4] = v46;
      v5 = (unint64_t)v102;
LABEL_87:
      swift_bridgeObjectRelease(v60);
      v3 = v37 - 1;
      if (v100 != v38)
      {
        v38 = (_QWORD *)((char *)v38 + 1);
        v8 += 4;
        ++v39;
        if ((_QWORD *)v5 == v38)
        {
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          swift_bridgeObjectRelease(v2);
          return;
        }
        continue;
      }
      break;
    }
    if (v37 == v96)
    {
      if (v5 >= v2[2])
      {
        __break(1u);
      }
      else
      {
        v80 = v90[v5];
        if (v96 < *(_QWORD *)(v80 + 16))
        {
          v81 = v80 + 8 * v96;
          v82 = *(_QWORD *)(v81 + 32);
          v83 = *(_QWORD *)(v82 + 16);
          if (!v83)
            goto LABEL_107;
          swift_bridgeObjectRetain_n(*(_QWORD *)(v81 + 32), 3);
          v84 = _swiftEmptyArrayStorage;
          v85 = 32;
          do
          {
            v86 = v84;
            v88 = *(_OWORD *)(v82 + v85 + 16);
            v87 = *(_OWORD *)(v82 + v85 + 32);
            v89 = *(_OWORD *)(v82 + v85);
            v110 = *(_BYTE *)(v82 + v85 + 48);
            v109[1] = v88;
            v109[2] = v87;
            v109[0] = v89;
            swift_unknownObjectRetain(*((_QWORD *)&v88 + 1));
            v84 = sub_1B324(v84, (uint64_t)v109);
            sub_1EAAC((uint64_t)v109);
            swift_bridgeObjectRelease(v86);
            v85 += 56;
            --v83;
          }
          while (v83);
          swift_bridgeObjectRelease(v2);
          swift_bridgeObjectRelease_n(v82, 3);
          return;
        }
      }
      __break(1u);
      return;
    }
    v35 = v95 + 1;
    ++v37;
    if (v95 + 1 != v91)
      continue;
    break;
  }
  __break(1u);
LABEL_93:
  v6 = v96;
LABEL_94:
  if (v5 >= v8[2])
  {
    __break(1u);
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  v79 = v8[v5 + 4];
  if (v6 >= *(_QWORD *)(v79 + 16))
    goto LABEL_123;
  swift_bridgeObjectRetain(*(_QWORD *)(v79 + 8 * v6 + 32));
  swift_bridgeObjectRelease(v8);
}

double sub_18A94(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(_QWORD, uint64_t, uint64_t, __n128);
  __n128 v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  double result;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;

  v4 = sub_94A98();
  v5 = v4;
  v6 = v4[2];
  if (!v6)
  {
    swift_bridgeObjectRelease(v4);
    v11 = *(_QWORD *)(a2 + 16);
    if (v11)
      goto LABEL_7;
LABEL_23:
    *(_QWORD *)&result = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
    return result;
  }
  v7 = a2;
  sub_A9A3C(0, v6, 0);
  v8 = 4;
  do
  {
    v10 = _swiftEmptyArrayStorage[2];
    v9 = _swiftEmptyArrayStorage[3];
    v29 = *(_OWORD *)&v5[v8];
    swift_unknownObjectRetain(v29);
    if (v10 >= v9 >> 1)
      sub_A9A3C(v9 > 1, v10 + 1, 1);
    _swiftEmptyArrayStorage[2] = v10 + 1;
    *(_OWORD *)&_swiftEmptyArrayStorage[2 * v10 + 4] = v29;
    v8 += 4;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease(v5);
  a2 = v7;
  v11 = *(_QWORD *)(v7 + 16);
  if (!v11)
    goto LABEL_23;
LABEL_7:
  v12 = _swiftEmptyArrayStorage[2];
  v30 = a2 + 32;
  v27 = a2;
  swift_bridgeObjectRetain(a2);
  for (i = 0; i != v11; ++i)
  {
    v14 = (uint64_t *)(v30 + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    v17 = &_swiftEmptyArrayStorage[4];
    v18 = v12;
    if (v12)
    {
      while (*v17 != v15)
      {
        v17 += 2;
        if (!--v18)
          goto LABEL_13;
      }
    }
    else
    {
LABEL_13:
      ObjectType = swift_getObjectType(v15);
      v20 = *(void (**)(_QWORD, uint64_t, uint64_t, __n128))(v16 + 40);
      v21 = swift_unknownObjectRetain(v15);
      v20(0, ObjectType, v16, v21);
      v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
      v23 = objc_msgSend(a3, "view");
      if (v23)
      {
        v24 = v23;
        if (objc_msgSend(a3, "isViewLoaded"))
        {
          if (objc_msgSend(v22, "isDescendantOfView:", v24))
            objc_msgSend(v22, "removeFromSuperview");
          v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
          swift_unknownObjectWeakAssign(v25 + OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView, 0);
          sub_153DC8();

          v24 = (void *)v25;
        }

      }
      objc_msgSend(v22, "setHidden:", 0);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(ObjectType, v16) & 1) != 0)
        (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v16 + 32))(objc_msgSend(a3, "isEditing"), 0, ObjectType, v16);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 48))(0, ObjectType, v16);
      swift_unknownObjectRelease(v15);

    }
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v27).n128_u64[0];
  return result;
}

uint64_t sub_18D78(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *i;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  for (i = (char *)(a3 + 40); ; i += 56)
  {
    v8 = *i;
    v9 = *((_QWORD *)i + 1);
    v10 = *((_QWORD *)i + 4);
    v11 = i[40];
    v15 = *((_QWORD *)i - 1);
    v16 = v8;
    v17 = v9;
    v18 = *((_OWORD *)i + 1);
    v19 = v10;
    v12 = v18;
    v20 = v11;
    swift_unknownObjectRetain(v18);
    v13 = a1(&v15);
    swift_unknownObjectRelease(v12);
    if (v3 || (v13 & 1) != 0)
      break;
    if (v4 == ++v6)
      return 0;
  }
  return v6;
}

void sub_18E98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t ObjectType;
  char *v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  objc_class *v29;
  id v30;
  objc_class *v31;
  id v32;
  char *v33;
  char *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, __n128);
  __n128 v56;
  char *v57;
  void *v58;
  id v59;
  double v60;
  void *v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  objc_super v68;
  objc_super v69;
  objc_super v70;
  objc_super v71;
  objc_super v72;

  v1 = v0;
  v72.receiver = v0;
  v72.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
  objc_msgSendSuper2(&v72, "viewDidLoad");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_componentGroups];
  v3 = swift_bridgeObjectRetain(v2);
  v4 = sub_949FC(v3);
  swift_bridgeObjectRelease(v2);
  v64 = v4;
  v5 = v4[2];
  if (v5)
  {
    v66 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView;
    v6 = v5 - 1;
    v7 = v64 + 5;
    v8 = &selRef_boundingRectWithSize_options_attributes_context_;
    while (1)
    {
      v9 = *(v7 - 1);
      v10 = *v7;
      swift_unknownObjectRetain_n(v9, 2);
      v11 = objc_msgSend(v1, "view");
      if (v11)
      {
        v12 = v11;
        if ((objc_msgSend(v1, v8[4]) & 1) != 0)
        {
          ObjectType = swift_getObjectType(v9);
          v14 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
          v15 = v1;
          v16 = *(void **)&v1[v66];
          swift_unknownObjectWeakAssign(&v14[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView], v16);
          v17 = v16;
          sub_153DC8();

          v1 = v15;
          v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10);
          objc_msgSend(v12, "addSubview:", v18);

          v8 = &selRef_boundingRectWithSize_options_attributes_context_;
          objc_msgSend(v12, "setNeedsLayout");
        }
        swift_unknownObjectRelease_n(v9, 2);

        if (!v6)
          break;
      }
      else
      {
        swift_unknownObjectRelease_n(v9, 2);
        if (!v6)
          break;
      }
      --v6;
      v7 += 4;
    }
  }
  v19 = objc_msgSend(v1, "view", swift_bridgeObjectRelease(v64).n128_f64[0]);
  if (!v19)
  {
    __break(1u);
    goto LABEL_26;
  }
  v20 = v19;
  objc_msgSend(v19, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v29 = (objc_class *)type metadata accessor for CompositeCollectionViewLayout();
  v30 = objc_msgSend(objc_allocWithZone(v29), "init");
  v31 = (objc_class *)type metadata accessor for CompositeCollectionView();
  v32 = objc_msgSend(objc_allocWithZone(v31), "initWithFrame:collectionViewLayout:", v30, v22, v24, v26, v28);

  v71.receiver = v32;
  v71.super_class = v31;
  v33 = v1;
  objc_msgSendSuper2(&v71, "setDataSource:", v33);
  sub_E7DA0();

  v70.receiver = v32;
  v70.super_class = v31;
  v34 = v33;
  objc_msgSendSuper2(&v70, "setDelegate:", v34);
  sub_E7FB8();

  objc_msgSend(v32, "setPrefetchDataSource:", v34);
  objc_msgSend(v32, "setAlwaysBounceVertical:", 1);
  v35 = (void *)objc_opt_self(UIColor);
  v36 = v32;
  v37 = objc_msgSend(v35, "whiteColor");
  objc_msgSend(v36, "setBackgroundColor:", v37);

  objc_msgSend(v36, "_setSafeAreaInsetsFrozen:", 1);
  v38 = objc_msgSend(v34, "view");
  if (!v38)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v39 = v38;
  objc_msgSend(v38, "addSubview:", v36);

  v40 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView;
  v41 = *(id *)&v34[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView];
  *(_QWORD *)&v34[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView] = v36;
  v42 = v36;
  v43 = v42;
  if (v41)
  {
    if (v42 && v42 == v41)
      goto LABEL_23;
    v68.receiver = v41;
    v68.super_class = v31;
    v44 = objc_msgSendSuper2(&v68, "collectionViewLayout");
    swift_dynamicCastClassUnconditional(v44, v29, 0, 0, 0);
    v45 = type metadata accessor for CompositeCollectionViewCountData();
    swift_allocObject(v45, 64, 7);
    v46 = sub_94B08((uint64_t)_swiftEmptyArrayStorage);
    sub_E8910((uint64_t)v46);

    v36 = *(id *)&v34[v40];
    if (v36)
      goto LABEL_18;
    __break(1u);
  }
  if (!v43)
  {
LABEL_23:

    goto LABEL_24;
  }
LABEL_18:
  v63 = v41;
  v65 = v43;
  v47 = *(_QWORD *)&v34[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData];
  v69.receiver = v36;
  v69.super_class = v31;
  swift_retain(v47);
  v48 = objc_msgSendSuper2(&v69, "collectionViewLayout");
  swift_dynamicCastClassUnconditional(v48, v29, 0, 0, 0);
  v49 = swift_retain(v47);
  sub_E8910(v49);

  v62 = v47;
  v67 = sub_94A98();
  v50 = v67[2];
  if (v50)
  {
    v51 = v67 + 5;
    do
    {
      v52 = *(v51 - 1);
      v53 = *v51;
      v54 = swift_getObjectType(v52);
      v55 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v53 + 8);
      v56 = swift_unknownObjectRetain(v52);
      v57 = (char *)v55(v54, v53, v56);
      v58 = *(void **)&v34[v40];
      swift_unknownObjectWeakAssign(&v57[OBJC_IVAR____TtC12NowPlayingUI32CompositeComponentCollectionView_compositeCollectionView], v58);
      v59 = v58;
      sub_153DC8();
      swift_unknownObjectRelease(v52);

      v51 += 4;
      --v50;
    }
    while (v50);
  }
  *(_QWORD *)&v60 = swift_bridgeObjectRelease(v67).n128_u64[0];
  v61 = *(void **)&v34[v40];
  if (v61)
  {
    objc_msgSend(v61, "reloadData", v60);

    v43 = v65;
    swift_release(v62);
LABEL_24:

    return;
  }
LABEL_27:
  __break(1u);
}

void sub_19434(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  id v6;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  void **v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void *v26;
  void (*v27)();
  uint64_t v28;
  objc_super v29;
  objc_super v30;

  v3 = v2;
  if (!objc_msgSend(v2, "isViewLoaded")
    || (v6 = objc_msgSend(v2, "traitCollection"),
        sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr),
        v7 = static NSObject.== infix(_:_:)(v6, a1),
        v6,
        (v7 & 1) != 0))
  {
    v30.receiver = v3;
    v30.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
    objc_msgSendSuper2(&v30, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
    return;
  }
  v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount] = v10;
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView];
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_layoutSubviewsIgnoreCount);
    v9 = __OFADD__(v12, 1);
    v13 = v12 + 1;
    if (!v9)
    {
      *(_QWORD *)(v11 + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_layoutSubviewsIgnoreCount) = v13;
      v29.receiver = v3;
      v29.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
      objc_msgSendSuper2(&v29, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
      v14 = swift_allocObject(&unk_1C7F78, 17, 7);
      *(_BYTE *)(v14 + 16) = 0;
      v15 = swift_allocObject(&unk_1C7FA0, 32, 7);
      *(_QWORD *)(v15 + 16) = v14;
      *(_QWORD *)(v15 + 24) = v3;
      v27 = sub_1EC38;
      v28 = v15;
      v23 = _NSConcreteStackBlock;
      v24 = 1107296256;
      v25 = sub_12EB28;
      v26 = &block_descriptor_1;
      v16 = _Block_copy(&v23);
      v17 = v28;
      swift_retain(v14);
      v18 = v3;
      swift_release(v17);
      v19 = swift_allocObject(&unk_1C7FF0, 32, 7);
      *(_QWORD *)(v19 + 16) = v14;
      *(_QWORD *)(v19 + 24) = v18;
      v27 = sub_1EA1C;
      v28 = v19;
      v23 = _NSConcreteStackBlock;
      v24 = 1107296256;
      v25 = sub_12EB28;
      v26 = &block_descriptor_10;
      v20 = _Block_copy(&v23);
      v21 = v28;
      swift_retain(v14);
      v22 = v18;
      objc_msgSend(a2, "animateAlongsideTransition:completion:", v16, v20, swift_release(v21).n128_f64[0]);
      _Block_release(v20);
      _Block_release(v16);
      swift_release(v14);
      return;
    }
    goto LABEL_9;
  }
LABEL_10:
  __break(1u);
}

void sub_19694(uint64_t a1, _BYTE *a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  _BYTE v15[24];

  v4 = (_BYTE *)(a1 + 16);
  swift_beginAccess(a1 + 16, v15, 0, 0);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    return;
  swift_beginAccess(v4, &v14, 1, 0);
  *v4 = 1;
  v5 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount;
  v6 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount];
  v7 = __OFSUB__(v6, 1);
  v8 = v6 - 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount] = v8;
  v9 = *(_BYTE **)&a2[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView];
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_layoutSubviewsIgnoreCount];
  v7 = __OFSUB__(v10, 1);
  v11 = v10 - 1;
  if (v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)&v9[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_layoutSubviewsIgnoreCount] = v11;
  if (!v11 && v9[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_didIgnoreLayoutSubviews] == 1)
  {
    v9[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_didIgnoreLayoutSubviews] = 1;
    objc_msgSend(v9, "setNeedsLayout");
  }
  if (!*(_QWORD *)&a2[v5] && a2[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_didIgnoreLayout] == 1)
  {
    a2[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_didIgnoreLayout] = 0;
    v12 = objc_msgSend(a2, "view");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, "setNeedsLayout");

      return;
    }
LABEL_16:
    __break(1u);
  }
}

id sub_1987C(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v16[5];
  _QWORD v17[5];

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v5);
  sub_94E88(a2, 0, 0, 0, v16);
  v6 = v16[0];
  swift_release(v5);
  sub_982C((uint64_t)v16, (uint64_t)v17, &qword_1FA948);
  if (!v17[0])
    return 0;
  v7 = v17[1];
  v8 = v17[4];
  ObjectType = swift_getObjectType(v17[0]);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 8);
  v11 = swift_unknownObjectRetain(v6);
  v12 = (void *)v10(ObjectType, v7, v11);
  sub_1B690(v16);
  v13 = objc_msgSend(v12, "dataSource");

  if (!v13)
  {
    sub_1B690(v16);
    return 0;
  }
  v14 = objc_msgSend(v13, "collectionView:numberOfItemsInSection:", a1, v8);
  sub_1B690(v16);
  swift_unknownObjectRelease(v13);
  return v14;
}

uint64_t sub_19CCC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  LOBYTE(a5) = a5(v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return a5 & 1;
}

uint64_t sub_19D98(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  sub_1CFDC((uint64_t)v12, a5);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_19E6C(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  LOBYTE(a5) = sub_1D640((uint64_t)v12, a5);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return a5 & 1;
}

uint64_t sub_19F3C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  a5(v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A00C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, SEL *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v15 = a3;
  v16 = a4;
  v17 = a1;
  sub_1DCAC((uint64_t)v16, (uint64_t)v14, a6);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

double sub_1A0F4(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  double result;

  v9 = type metadata accessor for IndexPath(0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v9);
  v11 = a3;
  v12 = a1;
  sub_1E538(v10, a5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_1A16C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, objc_class *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t, __n128);
  Class v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  int v38;
  void (*v39)(void);
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void);
  uint64_t ObjectType;
  uint64_t (*v54)(uint64_t, uint64_t, __n128);
  __n128 v55;
  void (*v56)(void (*)(void), uint64_t);
  uint64_t v57;
  void (*v58)(void);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, __n128);
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  id v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(void);
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  Class v98;
  void (*v99)(uint64_t, uint64_t, __n128);
  id v100;
  id v101;
  Class v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  __n128 v107;
  uint64_t result;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char *v113;
  __n128 v114;
  _QWORD *v115;
  char *v116;
  __n128 v117;
  void *v118;
  id v119;
  char *v120;
  id v121;
  uint64_t v122;
  id v123;
  char *v124;
  uint64_t v125;
  void (*v126)(void);
  __n128 v127;
  char *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t, uint64_t, __n128);
  uint64_t v133;
  void (*v134)(void);
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int v139;
  char *v140;
  uint64_t v141;
  id v142;
  char *v143;
  void (*v144)(void);
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  id v152;
  char *v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  Class isa;
  uint64_t v158;

  isa = a3;
  v149 = a1;
  v158 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v158 - 8);
  v8 = __chkstk_darwin(v158);
  v151 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v153 = (char *)&v130 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v130 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v150 = (void **)((char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = __chkstk_darwin(v19);
  v154 = (void **)((char *)&v130 - v22);
  v23 = __chkstk_darwin(v21);
  v155 = (void **)((char *)&v130 - v24);
  __chkstk_darwin(v23);
  v26 = (char *)&v130 - v25;
  v27 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
  v156 = v4;
  v28 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v28);
  v152 = a2;
  sub_94CB4(0, 0, 0, (uint64_t)v16);
  v29 = swift_release(v28);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
  if (v30(v16, 1, v17, v29) == 1)
  {
    sub_9944((uint64_t)v16, &qword_1FA938);
    v31 = isa;
    v32 = a4;
    v33 = v7;
    return (*(uint64_t (**)(uint64_t, Class, uint64_t))(v33 + 16))(v32, v31, v158);
  }
  v146 = a4;
  v34 = &v26[*(int *)(v17 + 48)];
  v33 = v7;
  v36 = *(void **)v16;
  v35 = *((_QWORD *)v16 + 1);
  v37 = *((_QWORD *)v16 + 2);
  v38 = v16[24];
  *(_QWORD *)v26 = *(_QWORD *)v16;
  *((_QWORD *)v26 + 1) = v35;
  v147 = v35;
  v148 = v37;
  *((_QWORD *)v26 + 2) = v37;
  v145 = v38;
  v26[24] = v38;
  v39 = *(void (**)(void))(v33 + 32);
  v143 = v34;
  v144 = v39;
  v39();
  v40 = *(_QWORD *)(v156 + v27);
  swift_unknownObjectRetain(v36);
  swift_retain(v40);
  v31 = isa;
  sub_94CB4(0, 0, 0, (uint64_t)v14);
  v41 = swift_release(v40);
  if (v30(v14, 1, v17, v41) == 1)
  {
    sub_9944((uint64_t)v26, &qword_1FA940);
    swift_unknownObjectRelease(v36);
    sub_9944((uint64_t)v14, &qword_1FA938);
    v32 = v146;
    return (*(uint64_t (**)(uint64_t, Class, uint64_t))(v33 + 16))(v32, v31, v158);
  }
  v136 = v27;
  v137 = v26;
  v42 = v155;
  v140 = (char *)v155 + *(int *)(v17 + 48);
  v135 = v17;
  v44 = *(void **)v14;
  v138 = *((_QWORD *)v14 + 1);
  v43 = v138;
  v141 = *((_QWORD *)v14 + 2);
  v45 = v141;
  v46 = v14[24];
  v139 = v46;
  *v155 = v44;
  v42[1] = v43;
  v42[2] = v45;
  *((_BYTE *)v42 + 24) = v46;
  v47 = v33;
  v48 = v158;
  v144();
  v49 = v154;
  v134 = (void (*)(void))((char *)v154 + *(int *)(v17 + 48));
  v51 = v147;
  v50 = v148;
  *v154 = v36;
  v49[1] = v51;
  v49[2] = v50;
  *((_BYTE *)v49 + 24) = v145;
  v52 = *(void (**)(void))(v33 + 16);
  v52();
  ObjectType = swift_getObjectType(v36);
  v54 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v51 + 8);
  swift_unknownObjectRetain(v36);
  v55 = swift_unknownObjectRetain(v44);
  v131 = ObjectType;
  v132 = v54;
  v142 = (id)v54(ObjectType, v51, v55);
  swift_unknownObjectRelease(v36);
  v133 = v47;
  v56 = *(void (**)(void (*)(void), uint64_t))(v47 + 8);
  v56(v134, v48);
  v57 = v135;
  v58 = (void (*)(void))((char *)v49 + *(int *)(v135 + 48));
  v59 = v138;
  *v49 = v44;
  v49[1] = v59;
  v60 = v140;
  v49[2] = v141;
  *((_BYTE *)v49 + 24) = v139;
  v134 = v52;
  ((void (*)(void (*)(void), char *, uint64_t))v52)(v58, v60, v48);
  v61 = swift_getObjectType(v44);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v59 + 8);
  v63 = v59;
  v64 = swift_unknownObjectRetain(v44);
  v65 = v62(v61, v59, v64);
  v66 = v142;
  v67 = (id)v65;
  swift_unknownObjectRelease(v44);
  v68 = v48;
  v69 = (void (*)(char *, uint64_t))v56;
  v56(v58, v68);
  v70 = v57;
  if (v67 == v66)
  {
    v84 = v141;
    v33 = v133;
    v85 = objc_msgSend(v66, "delegate");
    if (v85)
    {
      v152 = v85;
      v86 = objc_msgSend(v85, "respondsToSelector:", "collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:");
      v87 = (uint64_t)v137;
      if ((v86 & 1) != 0)
      {
        v88 = *(int *)(v70 + 48);
        v89 = v154;
        v90 = v44;
        v130 = v44;
        v91 = (char *)v154 + v88;
        v92 = v147;
        *v154 = v36;
        v89[1] = v92;
        v89[2] = v148;
        *((_BYTE *)v89 + 24) = v145;
        v93 = v158;
        v94 = v134;
        ((void (*)(char *, char *, uint64_t))v134)(v91, v143, v158);
        swift_unknownObjectRelease(v36);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v69(v91, v93);
        v95 = v69;
        v96 = (char *)v89 + *(int *)(v70 + 48);
        *v89 = v90;
        v89[1] = v63;
        v97 = v84;
        v89[2] = v84;
        LOBYTE(v90) = v139;
        *((_BYTE *)v89 + 24) = v139;
        ((void (*)(char *, char *, uint64_t))v94)(v96, v140, v93);
        v98 = IndexPath._bridgeToObjectiveC()().super.isa;
        v95(v96, v93);
        v99 = (void (*)(uint64_t, uint64_t, __n128))v95;
        v100 = v152;
        v101 = v142;
        v102 = isa;
        v103 = objc_msgSend(v152, "collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:", v142, isa, v98);

        v104 = (uint64_t)v153;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v103);

        v105 = *(_QWORD *)(v156 + v136);
        swift_retain(v105);
        v106 = v130;
        sub_953B0(v104, 0, 0, 0, v130, v138, v97, (char)v90, v146);
        swift_unknownObjectRelease(v106);

        swift_unknownObjectRelease(v100);
        v107 = swift_release(v105);
        v99(v104, v93, v107);
        sub_9944((uint64_t)v155, &qword_1FA940);
        return sub_9944((uint64_t)v137, &qword_1FA940);
      }
      v123 = v142;

      swift_unknownObjectRelease(v152);
      v122 = v87;
    }
    else
    {

      v122 = (uint64_t)v137;
    }
    swift_unknownObjectRelease(v36);
    swift_unknownObjectRelease(v44);
    sub_9944((uint64_t)v155, &qword_1FA940);
    sub_9944(v122, &qword_1FA940);
    v32 = v146;
    v31 = isa;
    return (*(uint64_t (**)(uint64_t, Class, uint64_t))(v33 + 16))(v32, v31, v158);
  }
  v71 = swift_unknownObjectRelease(v44);
  v72 = IndexPath.section.getter(v71);
  v73 = v67;
  if (v72 < IndexPath.section.getter(v72))
  {
    v74 = v142;
    v75 = v153;
    IndexPath.init(item:section:)(0, 0);
    v76 = *(_QWORD *)(v156 + v136);
    swift_retain(v76);
    v77 = v151;
    v78 = (uint64_t)v151;
    v79 = (uint64_t)v75;
    v80 = v36;
    v81 = v147;
    v82 = v148;
    v83 = v145;
LABEL_21:
    sub_953B0(v79, 0, 0, 0, v80, v81, v82, v83, v78);
    v125 = (uint64_t)v137;
    v126 = v144;
    swift_unknownObjectRelease(v36);

    v127 = swift_release(v76);
    v128 = v75;
    v129 = v158;
    ((void (*)(char *, uint64_t, __n128))v69)(v128, v158, v127);
    sub_9944((uint64_t)v155, &qword_1FA940);
    sub_9944(v125, &qword_1FA940);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v126)(v146, v77, v129);
  }
  v109 = *(_QWORD *)(v156 + v136);
  swift_retain(v109);
  v111 = v147;
  v110 = v148;
  v112 = v145;
  v113 = (char *)sub_956F4(v36, v147, v148, v145);
  v114 = swift_release(v109);
  v115 = v150;
  v116 = (char *)v150 + *(int *)(v57 + 48);
  *v150 = v36;
  v115[1] = v111;
  v115[2] = v110;
  *((_BYTE *)v115 + 24) = v112;
  ((void (*)(char *, char *, uint64_t, __n128))v134)(v116, v143, v158, v114);
  v117 = swift_unknownObjectRetain(v36);
  v118 = (void *)v132(v131, v111, v117);
  swift_unknownObjectRelease(v36);
  v119 = objc_msgSend(v118, "dataSource");

  v120 = v113;
  if (v119)
  {
    v121 = objc_msgSend(v119, "collectionView:numberOfItemsInSection:", v149, v113);
    swift_unknownObjectRelease(v119);
  }
  else
  {
    v121 = 0;
  }
  v69(v116, v158);
  result = (uint64_t)v121 - 1;
  v74 = v142;
  if (__OFSUB__(v121, 1))
  {
    __break(1u);
  }
  else
  {
    v124 = v120 - 1;
    if (!__OFSUB__(v120, 1))
    {
      v75 = v153;
      IndexPath.init(item:section:)(result, v124);
      v76 = *(_QWORD *)(v156 + v136);
      swift_retain(v76);
      v77 = v151;
      v78 = (uint64_t)v151;
      v79 = (uint64_t)v75;
      v80 = v36;
      v81 = v147;
      v82 = v148;
      v83 = v112;
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD34(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain();
  v4 = sub_94A98();
  swift_release(v3);
  v5 = v4[2];
  if (v5)
  {
    v6 = v4 + 7;
    while (1)
    {
      v7 = *(v6 - 2);
      v8 = *(v6 - 3);
      ObjectType = swift_getObjectType(v8);
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      swift_unknownObjectRetain_n(v8, 2);
      v11 = (void *)v10(ObjectType, v7);

      swift_unknownObjectRelease(v8);
      if (v11 == a1)
        break;
      swift_unknownObjectRelease(v8);
      v6 += 4;
      if (!--v5)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v4);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  return v8;
}

id sub_1AE34(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_didIgnoreLayout] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_scrollViewDelegate], 0);
  v3[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_needsCountDataUpdate] = 1;
  v6 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
  v7 = type metadata accessor for CompositeCollectionViewCountData();
  swift_allocObject(v7, 64, 7);
  v8 = v3;
  *(_QWORD *)&v3[v6] = sub_94B08((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_componentGroups] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView] = 0;

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
  v10 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", v9, a3);

  return v10;
}

id sub_1AFC0(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  objc_super v8;

  v1[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_didIgnoreLayout] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_shouldIgnoreLayoutFromTraitCollectionChangeCount] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_scrollViewDelegate], 0);
  v1[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_needsCountDataUpdate] = 1;
  v3 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
  v4 = type metadata accessor for CompositeCollectionViewCountData();
  swift_allocObject(v4, 64, 7);
  v5 = v1;
  *(_QWORD *)&v1[v3] = sub_94B08((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_componentGroups] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_collectionView] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CompositeCollectionViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

uint64_t type metadata accessor for CompositeCollectionViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI33CompositeCollectionViewController);
}

id sub_1B140(id result, id a2, char a3)
{
  if (a3 == 2)
    return result;
  if (a3 == 1)
    return (id)swift_bridgeObjectRetain(a2);
  return result;
}

void sub_1B164(void *a1, id a2, char a3)
{
  if (a3 == 2)
  {

  }
  else if (a3 == 1)
  {
    swift_bridgeObjectRelease(a2);
  }
}

uint64_t sub_1B188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t sub_1B1E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 40);
  v5 = *(void **)(a1 + 48);

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  return a1;
}

_QWORD *sub_1B238(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *result;

  if (a2 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
      v6 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v5);
      v7 = v6;
      v6[2] = a2;
      v6[4] = a1;
      if (a2 != 1)
      {
        v6[5] = a1;
        v8 = a2 - 2;
        if (v8)
        {
          v9 = v6 + 6;
          do
          {
            *v9++ = a1;
            swift_bridgeObjectRetain(a1);
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain(a1);
      }
    }
    else
    {
      swift_bridgeObjectRelease(a1);
      return _swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

_QWORD *sub_1B324(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  _BOOL4 v24;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD v46[3];
  char v47;
  __int128 *v48;
  __int128 v49;
  _QWORD *v50;
  __int128 v51;
  _BYTE v52[32];
  char v53;
  _BYTE v54[56];
  uint64_t v55[2];
  unint64_t v56;
  char v57;

  sub_1EAD4((uint64_t *)a2, (uint64_t)v55);
  v8 = *(_OWORD *)(a2 + 16);
  v51 = *(_OWORD *)a2;
  *(_OWORD *)v52 = v8;
  *(_OWORD *)&v52[16] = *(_OWORD *)(a2 + 32);
  v53 = *(_BYTE *)(a2 + 48);
  v50 = a1;
  v9 = sub_1EAD4(v55, (uint64_t)&v56);
  if (v57 != 1 || v56 >= 2)
  {
    swift_bridgeObjectRetain(a1);
    sub_1EB10(a2);
    if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
      a1 = sub_134950(0, a1[2] + 1, 1, a1);
    v11 = a1[2];
    v10 = a1[3];
    if (v11 >= v10 >> 1)
      a1 = sub_134950((_QWORD *)(v10 > 1), v11 + 1, 1, a1);
    a1[2] = v11 + 1;
    v12 = &a1[7 * v11];
    v13 = *(_OWORD *)a2;
    v14 = *(_OWORD *)(a2 + 16);
    v15 = *(_OWORD *)(a2 + 32);
    *((_BYTE *)v12 + 80) = *(_BYTE *)(a2 + 48);
    *((_OWORD *)v12 + 3) = v14;
    *((_OWORD *)v12 + 4) = v15;
    *((_OWORD *)v12 + 2) = v13;
    return a1;
  }
  v16 = &v49;
  __chkstk_darwin(v9);
  v46[2] = v17;
  v47 = v18;
  v48 = &v51;
  swift_bridgeObjectRetain(a1);
  v19 = sub_18D78((uint64_t (*)(uint64_t *))sub_1EB38, (uint64_t)v46, (uint64_t)a1);
  if ((v20 & 1) == 0)
  {
    v21 = v19;
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v19 < a1[2])
    {
      v22 = a1[7 * v19 + 6];
      v23 = BYTE8(v51);
      v24 = (_QWORD)v51 == 0;
      v5 = *(_QWORD *)v52;
      v2 = *(_QWORD *)&v52[24];
      v3 = v53;
      v49 = *(_OWORD *)&v52[8];
      v16 = *(__int128 **)&v52[8];
      swift_unknownObjectRetain(*(_QWORD *)&v52[8]);
      v25 = (v23 & v24) == 0;
      if ((v23 & v24) != 0)
        v4 = v22;
      else
        v4 = v5;
      if (v25)
        v5 = v22;
      sub_AD6A8(v21, (uint64_t)v54);
      sub_1EAAC((uint64_t)v54);
      a1 = v50;
      swift_unknownObjectRetain(v16);
      if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) != 0)
        goto LABEL_18;
      goto LABEL_29;
    }
    __break(1u);
LABEL_29:
    a1 = sub_134950(0, a1[2] + 1, 1, a1);
LABEL_18:
    v26 = a1[2];
    v27 = a1[3];
    v28 = v26 + 1;
    if (v26 >= v27 >> 1)
    {
      v40 = a1;
      v41 = a1[2];
      v42 = sub_134950((_QWORD *)(v27 > 1), v26 + 1, 1, v40);
      v26 = v41;
      a1 = v42;
    }
    a1[2] = v28;
    v29 = &a1[7 * v26];
    v29[4] = v5;
    *((_BYTE *)v29 + 40) = 0;
    v29[6] = v4;
    *(_OWORD *)(v29 + 7) = v49;
    v29[9] = v2;
    *((_BYTE *)v29 + 80) = v3;
    swift_unknownObjectRelease(v16);
    return a1;
  }
  v30 = v51;
  v31 = BYTE8(v51);
  v32 = *(_QWORD *)v52;
  v33 = *(_QWORD *)&v52[24];
  v34 = v53;
  v49 = *(_OWORD *)&v52[8];
  swift_unknownObjectRetain(*(_QWORD *)&v52[8]);
  if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
    a1 = sub_134950(0, a1[2] + 1, 1, a1);
  v35 = a1[2];
  v36 = a1[3];
  v37 = v35 + 1;
  if (v35 >= v36 >> 1)
  {
    v43 = a1;
    v44 = a1[2];
    v45 = sub_134950((_QWORD *)(v36 > 1), v35 + 1, 1, v43);
    v35 = v44;
    a1 = v45;
  }
  a1[2] = v37;
  v38 = &a1[7 * v35];
  v38[4] = v30;
  *((_BYTE *)v38 + 40) = v31;
  v38[6] = v32;
  *(_OWORD *)(v38 + 7) = v49;
  v38[9] = v33;
  *((_BYTE *)v38 + 80) = v34;
  return a1;
}

_QWORD *sub_1B690(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  return a1;
}

uint64_t sub_1B6B8(uint64_t a1, unint64_t a2, char a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  return sub_1EB5C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48), a2, a3 & 1, *(double *)(a4 + 24), a6, a7, a8, a9, a10, a11, a12, *(_QWORD *)(a4 + 24), *(_QWORD *)(a4 + 32), *(double *)(a4 + 40),
           *(_BYTE *)(a4 + 48)) & 1;
}

char *sub_1B714()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;
  char *result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v1);
  v2 = sub_94A98();
  v3 = (uint64_t)v2;
  v4 = v2[2];
  if (!v4)
    goto LABEL_5;
  v5 = &v2[4 * v4];
  v6 = (void *)*v5;
  v7 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  swift_unknownObjectRetain(*v5);
  swift_bridgeObjectRelease(v3);
  v3 = sub_958B0(v6, v7, v8, v9);
  v10 = (char *)sub_956F4(v6, v7, v8, v9);
  swift_release(v1);
  swift_unknownObjectRelease(v6);
  result = &v10[v3];
  if (__OFADD__(v3, v10))
  {
    __break(1u);
LABEL_5:
    swift_release(v1);
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  return result;
}

uint64_t sub_1B7E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v31)(uint64_t, uint64_t);
  void *v32;
  void (*v33)(char *, uint64_t);
  id v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  Class isa;
  id v40;
  uint64_t result;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  void *object;
  Swift::String v46;
  Swift::String v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v60 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v54 - v14;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v16);
  sub_94CB4(0, 0, 0, (uint64_t)v8);
  v17 = swift_release(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v17) == 1)
  {
    sub_9944((uint64_t)v8, &qword_1FA938);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v60);
    v62 = 0;
    v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(60);
    v42._countAndFlagsBits = 0xD000000000000039;
    v42._object = (void *)0x80000000001844F0;
    String.append(_:)(v42);
    v61 = IndexPath.section.getter(v43);
    v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v44._object;
    String.append(_:)(v44);
    swift_bridgeObjectRelease(object);
    v46._countAndFlagsBits = 46;
    v46._object = (void *)0xE100000000000000;
    String.append(_:)(v46);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v62, v63, "NowPlayingUI/CompositeCollectionViewController.swift", 52, 2, 280, 0);
  }
  else
  {
    v18 = *(int *)(v9 + 48);
    v19 = &v15[v18];
    v20 = &v8[v18];
    v21 = *(_QWORD *)v8;
    v22 = *((_QWORD *)v8 + 1);
    v23 = *((_QWORD *)v8 + 2);
    v24 = (uint64_t)v15;
    v25 = v9;
    v26 = v8[24];
    *(_QWORD *)v24 = *(_QWORD *)v8;
    *(_QWORD *)(v24 + 8) = v22;
    *(_QWORD *)(v24 + 16) = v23;
    v55 = v24;
    *(_BYTE *)(v24 + 24) = v26;
    v27 = v60;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v20, v60);
    v56 = v25;
    v28 = &v13[*(int *)(v25 + 48)];
    *(_QWORD *)v13 = v21;
    *((_QWORD *)v13 + 1) = v22;
    v58 = v23;
    v59 = v19;
    *((_QWORD *)v13 + 2) = v23;
    v57 = v26;
    v13[24] = v26;
    v29 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v29(v28, v19, v27);
    ObjectType = swift_getObjectType(v21);
    v31 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    swift_unknownObjectRetain_n(v21, 2);
    v32 = (void *)v31(ObjectType, v22);
    swift_unknownObjectRelease(v21);
    v33 = *(void (**)(char *, uint64_t))(v3 + 8);
    v33(v28, v27);
    v34 = objc_msgSend(v32, "dataSource");
    if (v34)
    {
      v35 = v34;
      v36 = &v13[*(int *)(v56 + 48)];
      *(_QWORD *)v13 = v21;
      *((_QWORD *)v13 + 1) = v22;
      v37 = v59;
      *((_QWORD *)v13 + 2) = v58;
      v13[24] = v57;
      v38 = v60;
      v29(v36, v37, v60);
      swift_unknownObjectRelease(v21);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v33(v36, v38);
      v40 = objc_msgSend(v35, "collectionView:cellForItemAtIndexPath:", v32, isa);
      swift_unknownObjectRelease(v35);

      sub_9944(v55, &qword_1FA940);
      return (uint64_t)v40;
    }
    v62 = 0;
    v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v47._object = (void *)0x8000000000184570;
    v47._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v47);
    v48 = objc_msgSend(v32, "description");
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    v52._countAndFlagsBits = v49;
    v52._object = v51;
    String.append(_:)(v52);
    swift_bridgeObjectRelease(v51);
    v53._countAndFlagsBits = 0xD00000000000001FLL;
    v53._object = (void *)0x8000000000184590;
    String.append(_:)(v53);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v62, v63, "NowPlayingUI/CompositeCollectionViewController.swift", 52, 2, 276, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v34)(uint64_t, uint64_t);
  void *v35;
  void (*v36)(char *, uint64_t);
  id v37;
  void *v38;
  NSString v39;
  char *v40;
  char *v41;
  uint64_t v42;
  Class isa;
  id v44;
  uint64_t result;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  void *object;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v68 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v65 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v60 - v17;
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v19);
  v66 = a1;
  v67 = a2;
  sub_94CB4(1, a1, a2, (uint64_t)v11);
  v20 = swift_release(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v20) == 1)
  {
    sub_9944((uint64_t)v11, &qword_1FA938);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v65, a3, v68);
    v70 = 0;
    v71 = 0xE000000000000000;
    _StringGuts.grow(_:)(60);
    v46._countAndFlagsBits = 0xD000000000000039;
    v46._object = (void *)0x80000000001844F0;
    String.append(_:)(v46);
    v48 = IndexPath.count.getter(v47);
    if (v48 == 2)
    {
      v49 = IndexPath.section.getter(2);
    }
    else if (v48 <= 0)
    {
      v49 = NSNotFound.getter();
    }
    else
    {
      v49 = IndexPath.subscript.getter(0);
    }
    v69 = v49;
    v57._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v57._object;
    String.append(_:)(v57);
    swift_bridgeObjectRelease(object);
    v59._countAndFlagsBits = 46;
    v59._object = (void *)0xE100000000000000;
    String.append(_:)(v59);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v70, v71, "NowPlayingUI/CompositeCollectionViewController.swift", 52, 2, 294, 0);
  }
  else
  {
    v21 = *(int *)(v12 + 48);
    v22 = &v18[v21];
    v23 = &v11[v21];
    v24 = *(_QWORD *)v11;
    v25 = *((_QWORD *)v11 + 1);
    v26 = *((_QWORD *)v11 + 2);
    v27 = (uint64_t)v18;
    v28 = v12;
    v29 = v11[24];
    *(_QWORD *)v27 = *(_QWORD *)v11;
    *(_QWORD *)(v27 + 8) = v25;
    *(_QWORD *)(v27 + 16) = v26;
    v61 = v27;
    *(_BYTE *)(v27 + 24) = v29;
    v30 = v68;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v22, v23, v68);
    v62 = v28;
    v31 = &v16[*(int *)(v28 + 48)];
    *(_QWORD *)v16 = v24;
    *((_QWORD *)v16 + 1) = v25;
    v64 = v26;
    v65 = v22;
    *((_QWORD *)v16 + 2) = v26;
    v63 = v29;
    v16[24] = v29;
    v32 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v32(v31, v22, v30);
    ObjectType = swift_getObjectType(v24);
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain_n(v24, 2);
    v35 = (void *)v34(ObjectType, v25);
    swift_unknownObjectRelease(v24);
    v36 = *(void (**)(char *, uint64_t))(v7 + 8);
    v36(v31, v30);
    v37 = objc_msgSend(v35, "dataSource");
    if (v37)
    {
      v38 = v37;
      v39 = String._bridgeToObjectiveC()();
      v40 = &v16[*(int *)(v62 + 48)];
      *(_QWORD *)v16 = v24;
      *((_QWORD *)v16 + 1) = v25;
      v41 = v65;
      *((_QWORD *)v16 + 2) = v64;
      v16[24] = v63;
      v42 = v68;
      v32(v40, v41, v68);
      swift_unknownObjectRelease(v24);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v36(v40, v42);
      v44 = objc_msgSend(v38, "collectionView:viewForSupplementaryElementOfKind:atIndexPath:", v35, v39, isa);
      swift_unknownObjectRelease(v38);

      sub_9944(v61, &qword_1FA940);
      return (uint64_t)v44;
    }
    v70 = 0;
    v71 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v50._object = (void *)0x8000000000184570;
    v50._countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v50);
    v51 = objc_msgSend(v35, "description");
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v54 = v53;

    v55._countAndFlagsBits = v52;
    v55._object = v54;
    String.append(_:)(v55);
    swift_bridgeObjectRelease(v54);
    v56._countAndFlagsBits = 0xD00000000000001FLL;
    v56._object = (void *)0x8000000000184590;
    String.append(_:)(v56);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v70, v71, "NowPlayingUI/CompositeCollectionViewController.swift", 52, 2, 290, 0);
  }
  __break(1u);
  return result;
}

id sub_1C10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  Class isa;
  id v37;
  void *v38;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v40 - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v11);
  sub_94CB4(0, 0, 0, (uint64_t)v3);
  v12 = swift_release(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v12) == 1)
  {
    sub_9944((uint64_t)v3, &qword_1FA938);
    return 0;
  }
  v13 = *(int *)(v4 + 48);
  v14 = &v10[v13];
  v43 = &v3[v13];
  v16 = *(void **)v3;
  v15 = *((_QWORD *)v3 + 1);
  v17 = *((_QWORD *)v3 + 2);
  v18 = v3[24];
  *(_QWORD *)v10 = *(_QWORD *)v3;
  *((_QWORD *)v10 + 1) = v15;
  *((_QWORD *)v10 + 2) = v17;
  v10[24] = v18;
  v19 = type metadata accessor for IndexPath(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v14, v43, v19);
  v40 = v4;
  v21 = &v8[*(int *)(v4 + 48)];
  *(_QWORD *)v8 = v16;
  *((_QWORD *)v8 + 1) = v15;
  v42 = v17;
  v43 = v14;
  *((_QWORD *)v8 + 2) = v17;
  v22 = v19;
  v41 = v18;
  v8[24] = v18;
  v23 = v15;
  v24 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v24(v21, v14, v19);
  ObjectType = swift_getObjectType(v16);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 8);
  v27 = swift_unknownObjectRetain(v16);
  v28 = (void *)v26(ObjectType, v23, v27);
  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v21, v22);
  v30 = objc_msgSend(v28, "dataSource");
  if (!v30)
  {
    sub_9944((uint64_t)v10, &qword_1FA940);
    v38 = v16;
LABEL_8:
    swift_unknownObjectRelease(v38);

    return 0;
  }
  v31 = v30;
  v32 = v24;
  v33 = (uint64_t)v10;
  if ((objc_msgSend(v30, "respondsToSelector:", "collectionView:canMoveItemAtIndexPath:") & 1) == 0)
  {
    sub_9944((uint64_t)v10, &qword_1FA940);
    swift_unknownObjectRelease(v16);
    v38 = v31;
    goto LABEL_8;
  }
  v34 = &v8[*(int *)(v40 + 48)];
  *(_QWORD *)v8 = v16;
  *((_QWORD *)v8 + 1) = v23;
  v35 = v43;
  *((_QWORD *)v8 + 2) = v42;
  v8[24] = v41;
  v32(v34, v35, v22);
  swift_unknownObjectRelease(v16);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v29(v34, v22);
  v37 = objc_msgSend(v31, "collectionView:canMoveItemAtIndexPath:", v28, isa);
  swift_unknownObjectRelease(v31);

  sub_9944(v33, &qword_1FA940);
  return v37;
}

uint64_t sub_1C414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  unsigned int (*v23)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(void);
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, __n128);
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(char *, char *, uint64_t);
  void *v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  void (*v60)(void);
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, __n128);
  __n128 v63;
  void *v64;
  _BYTE *v65;
  void *v66;
  uint64_t v67;
  unsigned int (*v68)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  Class isa;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  Class v85;
  _BYTE v86[12];
  int v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  int v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  void (*v96)(void);
  void (**v97)(char *, char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v102;
  _BYTE *v103;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  v5 = __chkstk_darwin(v4);
  v103 = &v86[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v8 = &v86[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v86[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __chkstk_darwin(v11);
  v16 = &v86[-v15];
  __chkstk_darwin(v14);
  v18 = &v86[-v17];
  v102 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v19);
  sub_94CB4(0, 0, 0, (uint64_t)v8);
  v20 = v19;
  v21 = v9;
  v22 = swift_release(v20);
  v23 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD, __n128))(v10 + 48);
  if (v23(v8, 1, v9, v22) == 1)
  {
    v24 = &qword_1FA938;
    v25 = (uint64_t)v8;
  }
  else
  {
    v26 = *(int *)(v9 + 48);
    v100 = a2;
    v101 = v23;
    v27 = &v18[v26];
    v97 = v13;
    v98 = &v8[v26];
    v29 = *(_QWORD *)v8;
    v28 = *((_QWORD *)v8 + 1);
    v99 = v2;
    v30 = *((_QWORD *)v8 + 2);
    v31 = v8[24];
    *(_QWORD *)v18 = v29;
    *((_QWORD *)v18 + 1) = v28;
    *((_QWORD *)v18 + 2) = v30;
    v18[24] = v31;
    v32 = type metadata accessor for IndexPath(0);
    v33 = *(_QWORD **)(v32 - 8);
    v95 = (void (*)(char *, char *, uint64_t))v33[4];
    v95(v27, v98, v32);
    v98 = &v16[*(int *)(v21 + 48)];
    *(_QWORD *)v16 = v29;
    *((_QWORD *)v16 + 1) = v28;
    v92 = v30;
    *((_QWORD *)v16 + 2) = v30;
    v91 = v31;
    v16[24] = v31;
    v34 = (void (*)(void))v33[2];
    v94 = v27;
    v96 = v34;
    v34();
    ObjectType = swift_getObjectType(v29);
    v36 = v21;
    v37 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 8);
    v38 = swift_unknownObjectRetain(v29);
    v93 = v28;
    v39 = v37(ObjectType, v28, v38);
    v40 = v36;
    v41 = v103;
    v42 = (void *)v39;
    v43 = (void (*)(uint64_t, uint64_t))v33[1];
    v43((uint64_t)v98, v32);
    v44 = *(_QWORD *)(v99 + v102);
    swift_retain(v44);
    sub_94CB4(0, 0, 0, (uint64_t)v41);
    v45 = swift_release(v44);
    if (v101((void (**)(char *, char *, uint64_t))v41, 1, v40, v45) == 1)
    {
      sub_9944((uint64_t)v18, &qword_1FA940);
      swift_unknownObjectRelease(v29);

      v24 = &qword_1FA938;
      v25 = (uint64_t)v41;
    }
    else
    {
      v100 = v29;
      v101 = (unsigned int (*)(_QWORD, _QWORD, _QWORD, __n128))v18;
      v46 = *(int *)(v40 + 48);
      v47 = v97;
      v48 = (char *)v97 + v46;
      v49 = (char *)v41 + v46;
      v50 = v40;
      v51 = (void (*)(char *, char *, uint64_t))*v41;
      v52 = v41[1];
      v53 = v41;
      v54 = v41[2];
      v55 = *((unsigned __int8 *)v53 + 24);
      *v97 = v51;
      v47[1] = v52;
      v47[2] = v54;
      *((_BYTE *)v47 + 24) = v55;
      v95(v48, v49, v32);
      v98 = v48;
      v99 = v50;
      v56 = *(int *)(v50 + 48);
      v57 = v32;
      v102 = (uint64_t)v16;
      v103 = v42;
      v58 = &v16[v56];
      *(_QWORD *)v16 = v51;
      *((_QWORD *)v16 + 1) = v52;
      *((_QWORD *)v16 + 2) = v54;
      v16[24] = v55;
      v59 = &v16[v56];
      v60 = v96;
      ((void (*)(_BYTE *, char *, uint64_t))v96)(v59, v48, v32);
      v61 = swift_getObjectType(v51);
      v62 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v52 + 8);
      v63 = swift_unknownObjectRetain(v51);
      v64 = (void *)v62(v61, v52, v63);
      v65 = v58;
      v66 = v103;
      v43((uint64_t)v65, v57);
      v67 = v102;
      if (v66 == v64)
      {
        v95 = v51;
        v87 = v55;
        v88 = v52;
        v89 = v54;
        v70 = v99;
        v90 = v43;
        v71 = objc_msgSend(v66, "dataSource");
        if (v71)
        {
          v72 = v71;
          if ((objc_msgSend(v71, "respondsToSelector:", "collectionView:moveItemAtIndexPath:toIndexPath:") & 1) != 0)
          {
            v73 = v70;
            v74 = v67 + *(int *)(v70 + 48);
            v75 = v100;
            v77 = v93;
            v76 = v94;
            *(_QWORD *)v67 = v100;
            *(_QWORD *)(v67 + 8) = v77;
            *(_QWORD *)(v67 + 16) = v92;
            *(_BYTE *)(v67 + 24) = v91;
            ((void (*)(uint64_t, _BYTE *, uint64_t))v60)(v74, v76, v57);
            swift_unknownObjectRelease(v75);
            v78 = v66;
            v79 = v73;
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v81 = v90;
            v90(v74, v57);
            v82 = v67 + *(int *)(v79 + 48);
            v83 = v95;
            v84 = v88;
            *(_QWORD *)v67 = v95;
            *(_QWORD *)(v67 + 8) = v84;
            *(_QWORD *)(v67 + 16) = v89;
            *(_BYTE *)(v67 + 24) = v87;
            ((void (*)(uint64_t, char *, uint64_t))v60)(v82, v98, v57);
            swift_unknownObjectRelease(v83);
            v85 = IndexPath._bridgeToObjectiveC()().super.isa;
            v81(v82, v57);
            objc_msgSend(v72, "collectionView:moveItemAtIndexPath:toIndexPath:", v78, isa, v85);
            swift_unknownObjectRelease(v72);

          }
          else
          {
            swift_unknownObjectRelease(v100);
            swift_unknownObjectRelease(v95);

            swift_unknownObjectRelease(v72);
          }
        }
        else
        {
          swift_unknownObjectRelease(v100);
          swift_unknownObjectRelease(v95);

        }
      }
      else
      {
        swift_unknownObjectRelease(v100);
        swift_unknownObjectRelease(v51);

      }
      v68 = v101;
      sub_9944((uint64_t)v97, &qword_1FA940);
      v25 = (uint64_t)v68;
      v24 = &qword_1FA940;
    }
  }
  return sub_9944(v25, v24);
}

uint64_t sub_1C954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  id v31;
  int *v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  id v38;
  Class isa;
  id v40;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  __objc2_prot *v47;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v5 = *((_QWORD *)v4 - 1);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v42 - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v11);
  sub_94CB4(0, 0, 0, (uint64_t)v3);
  v12 = swift_release(v11);
  if ((*(unsigned int (**)(char *, uint64_t, int *, __n128))(v5 + 48))(v3, 1, v4, v12) == 1)
  {
    sub_9944((uint64_t)v3, &qword_1FA938);
    return 1;
  }
  v13 = v4[12];
  v14 = &v10[v13];
  v45 = &v3[v13];
  v46 = v10;
  v16 = *(char **)v3;
  v15 = *((_QWORD *)v3 + 1);
  v17 = *((_QWORD *)v3 + 2);
  v18 = v3[24];
  *(_QWORD *)v10 = *(_QWORD *)v3;
  *((_QWORD *)v10 + 1) = v15;
  *((_QWORD *)v10 + 2) = v17;
  v10[24] = v18;
  v19 = type metadata accessor for IndexPath(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v14, v45, v19);
  v42 = v4;
  v43 = v17;
  v21 = &v8[v4[12]];
  *(_QWORD *)v8 = v16;
  *((_QWORD *)v8 + 1) = v15;
  *((_QWORD *)v8 + 2) = v17;
  v22 = v15;
  v23 = v18;
  v8[24] = v18;
  v24 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v44 = v14;
  v24(v21, v14, v19);
  ObjectType = swift_getObjectType(v16);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v22 + 8);
  v27 = swift_unknownObjectRetain(v16);
  v45 = v16;
  v28 = (void *)v26(ObjectType, v22, v27);
  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v21, v19);
  v30 = objc_msgSend(v28, "dataSource");
  if (!v30)
  {
LABEL_8:
    swift_unknownObjectRelease(v45);

    sub_9944((uint64_t)v46, &qword_1FA940);
    return 1;
  }
  v31 = v30;
  v47 = &OBJC_PROTOCOL___UICollectionViewDataSource_Private;
  v32 = (int *)swift_dynamicCastObjCProtocolConditional(v30, 1, &v47);
  if (!v32)
  {
    swift_unknownObjectRelease(v31);
    goto LABEL_8;
  }
  v33 = v32;
  if (!objc_msgSend(v32, "respondsToSelector:", "_collectionView:canEditItemAtIndexPath:"))
  {
    sub_9944((uint64_t)v46, &qword_1FA940);
    swift_unknownObjectRelease(v45);
    swift_unknownObjectRelease(v31);

    return 1;
  }
  v34 = v24;
  v35 = &v8[v42[12]];
  v42 = v33;
  v36 = v44;
  v37 = v45;
  *(_QWORD *)v8 = v45;
  *((_QWORD *)v8 + 1) = v22;
  *((_QWORD *)v8 + 2) = v43;
  v8[24] = v23;
  v34(v35, v36, v19);
  v38 = v28;
  swift_unknownObjectRelease(v37);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v29(v35, v19);
  v40 = objc_msgSend(v42, "_collectionView:canEditItemAtIndexPath:", v38, isa);
  swift_unknownObjectRelease(v31);

  sub_9944((uint64_t)v46, &qword_1FA940);
  return (uint64_t)v40;
}

id sub_1CC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __n128 v12;
  id v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  void *v28;
  void (*v29)(_BYTE *, uint64_t);
  unsigned int v30;
  char **v31;
  id v32;
  void *v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t);
  _BYTE *v37;
  _BYTE *v38;
  Class isa;
  void *v40;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = &v42[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v42[-v9];
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v11);
  sub_94CB4(0, 0, 0, (uint64_t)v3);
  v12 = swift_release(v11);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v12) != 1)
  {
    v14 = *(int *)(v4 + 48);
    v15 = &v10[v14];
    v16 = &v3[v14];
    v17 = *(void **)v3;
    v18 = *((_QWORD *)v3 + 1);
    v19 = *((_QWORD *)v3 + 2);
    v20 = v3[24];
    *(_QWORD *)v10 = v17;
    *((_QWORD *)v10 + 1) = v18;
    *((_QWORD *)v10 + 2) = v19;
    v10[24] = v20;
    v21 = type metadata accessor for IndexPath(0);
    v47 = v10;
    v22 = *(_QWORD *)(v21 - 8);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32))(v15, v16, v21);
    v44 = v4;
    v45 = v19;
    v23 = &v8[*(int *)(v4 + 48)];
    *(_QWORD *)v8 = v17;
    *((_QWORD *)v8 + 1) = v18;
    *((_QWORD *)v8 + 2) = v19;
    v43 = v20;
    v8[24] = v20;
    v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 16);
    v46 = v15;
    v24(v23, v15, v21);
    ObjectType = swift_getObjectType(v17);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 8);
    v27 = swift_unknownObjectRetain(v17);
    v28 = (void *)v26(ObjectType, v18, v27);
    v29 = *(void (**)(_BYTE *, uint64_t))(v22 + 8);
    v29(v23, v21);
    v30 = objc_msgSend(v28, "mt_isEditing");
    v31 = &selRef__allowsSelectionDuringEditing;
    if (!v30)
      v31 = &selRef_allowsSelection;
    v13 = objc_msgSend(v28, *v31);
    v32 = objc_msgSend(v28, "delegate");
    if (v32)
    {
      v33 = v32;
      v34 = v24;
      v35 = (uint64_t)v47;
      if ((v13 & 1) != 0
        && objc_msgSend(v32, "respondsToSelector:", "collectionView:shouldSelectItemAtIndexPath:"))
      {
        v36 = v29;
        v37 = &v8[*(int *)(v44 + 48)];
        *(_QWORD *)v8 = v17;
        *((_QWORD *)v8 + 1) = v18;
        v38 = v46;
        *((_QWORD *)v8 + 2) = v45;
        v8[24] = v43;
        v34(v37, v38, v21);
        swift_unknownObjectRelease(v17);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v36(v37, v21);
        v13 = objc_msgSend(v33, "collectionView:shouldSelectItemAtIndexPath:", v28, isa);
        swift_unknownObjectRelease(v33);

        sub_9944(v35, &qword_1FA940);
        return v13;
      }
      sub_9944(v35, &qword_1FA940);
      swift_unknownObjectRelease(v17);
      v40 = v33;
    }
    else
    {
      sub_9944((uint64_t)v47, &qword_1FA940);
      v40 = v17;
    }
    swift_unknownObjectRelease(v40);

    return v13;
  }
  sub_9944((uint64_t)v3, &qword_1FA938);
  return 0;
}

void sub_1CFDC(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  void *v31;
  void (*v32)(char *, uint64_t);
  id v33;
  void *v34;
  SEL *v35;
  char *v36;
  Class isa;
  void *v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  SEL *v43;
  char *v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v39 - v12;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v14);
  sub_94CB4(0, 0, 0, (uint64_t)v6);
  v15 = swift_release(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v15) == 1)
  {
    sub_9944((uint64_t)v6, &qword_1FA938);
    return;
  }
  v16 = *(int *)(v7 + 48);
  v17 = &v13[v16];
  v43 = a2;
  v44 = &v6[v16];
  v18 = *(void **)v6;
  v19 = *((_QWORD *)v6 + 1);
  v20 = *((_QWORD *)v6 + 2);
  v21 = v6[24];
  *(_QWORD *)v13 = *(_QWORD *)v6;
  *((_QWORD *)v13 + 1) = v19;
  *((_QWORD *)v13 + 2) = v20;
  v13[24] = v21;
  v22 = type metadata accessor for IndexPath(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v44, v22);
  v40 = v7;
  v24 = &v11[*(int *)(v7 + 48)];
  *(_QWORD *)v11 = v18;
  *((_QWORD *)v11 + 1) = v19;
  v42 = v20;
  *((_QWORD *)v11 + 2) = v20;
  v25 = v22;
  v41 = v21;
  v11[24] = v21;
  v26 = v19;
  v27 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v44 = v17;
  v27(v24, v17, v22);
  ObjectType = swift_getObjectType(v18);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 8);
  v30 = swift_unknownObjectRetain(v18);
  v31 = (void *)v29(ObjectType, v26, v30);
  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32(v24, v25);
  v33 = objc_msgSend(v31, "delegate");
  if (v33)
  {
    v34 = v33;
    v39 = v13;
    v35 = v43;
    if ((objc_msgSend(v33, "respondsToSelector:", *v43) & 1) != 0)
    {
      v36 = &v11[*(int *)(v40 + 48)];
      *(_QWORD *)v11 = v18;
      *((_QWORD *)v11 + 1) = v26;
      *((_QWORD *)v11 + 2) = v42;
      v11[24] = v41;
      v27(v36, v44, v25);
      swift_unknownObjectRelease(v18);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v32(v36, v25);
      objc_msgSend(v34, *v35, v31, isa);
      swift_unknownObjectRelease(v34);

      sub_9944((uint64_t)v39, &qword_1FA940);
      return;
    }
    sub_9944((uint64_t)v39, &qword_1FA940);
    swift_unknownObjectRelease(v18);
    v38 = v34;
  }
  else
  {
    sub_9944((uint64_t)v13, &qword_1FA940);
    v38 = v18;
  }
  swift_unknownObjectRelease(v38);

}

void sub_1D2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  Class isa;
  char *v38;
  char *v39;
  uint64_t v40;
  Class v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v43 - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v11);
  sub_94CB4(0, 0, 0, (uint64_t)v3);
  v12 = swift_release(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v12) == 1)
  {
    sub_9944((uint64_t)v3, &qword_1FA938);
    return;
  }
  v13 = *(int *)(v4 + 48);
  v14 = &v10[v13];
  v15 = &v3[v13];
  v16 = *(void **)v3;
  v17 = *((_QWORD *)v3 + 1);
  v18 = *((_QWORD *)v3 + 2);
  v19 = v3[24];
  *(_QWORD *)v10 = v16;
  *((_QWORD *)v10 + 1) = v17;
  *((_QWORD *)v10 + 2) = v18;
  v10[24] = v19;
  v20 = type metadata accessor for IndexPath(0);
  v48 = v10;
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v15, v20);
  v46 = v4;
  v47 = v14;
  v23 = &v8[*(int *)(v4 + 48)];
  *(_QWORD *)v8 = v16;
  *((_QWORD *)v8 + 1) = v17;
  v44 = v18;
  *((_QWORD *)v8 + 2) = v18;
  v45 = v19;
  v8[24] = v19;
  v24 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v24(v23, v14, v21);
  ObjectType = swift_getObjectType(v16);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 8);
  v27 = swift_unknownObjectRetain(v16);
  v28 = (void *)v26(ObjectType, v17, v27);
  v29 = *(void (**)(char *, uint64_t))(v22 + 8);
  v29(v23, v21);
  v30 = objc_msgSend(v28, "delegate");
  if (v30)
  {
    v31 = v30;
    if ((objc_msgSend(v30, "respondsToSelector:", "collectionView:didSelectItemAtIndexPath:") & 1) != 0)
    {
      v32 = v47;
      v33 = &v8[*(int *)(v46 + 48)];
      *(_QWORD *)v8 = v16;
      *((_QWORD *)v8 + 1) = v17;
      v43 = v17;
      v34 = v24;
      v35 = v44;
      *((_QWORD *)v8 + 2) = v44;
      v8[24] = v45;
      v34(v33, v32, v21);
      v36 = v34;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v29(v33, v21);
      objc_msgSend(v28, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

      v38 = v47;
      v39 = &v8[*(int *)(v46 + 48)];
      v40 = v43;
      *(_QWORD *)v8 = v16;
      *((_QWORD *)v8 + 1) = v40;
      *((_QWORD *)v8 + 2) = v35;
      v8[24] = v45;
      v36(v39, v38, v21);
      swift_unknownObjectRelease(v16);
      v41 = IndexPath._bridgeToObjectiveC()().super.isa;
      v29(v39, v21);
      objc_msgSend(v31, "collectionView:didSelectItemAtIndexPath:", v28, v41);
      swift_unknownObjectRelease(v31);

      sub_9944((uint64_t)v48, &qword_1FA940);
      return;
    }
    sub_9944((uint64_t)v48, &qword_1FA940);
    swift_unknownObjectRelease(v16);
    v42 = v31;
  }
  else
  {
    sub_9944((uint64_t)v48, &qword_1FA940);
    v42 = v16;
  }
  swift_unknownObjectRelease(v42);

}

uint64_t sub_1D640(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  void *v31;
  void (*v32)(char *, uint64_t);
  id v33;
  void *v34;
  SEL *v35;
  char *v36;
  Class isa;
  id v38;
  void *v39;
  char *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  SEL *v45;
  char *v46;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v41 - v12;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v14);
  sub_94CB4(0, 0, 0, (uint64_t)v6);
  v15 = swift_release(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v15) == 1)
  {
    sub_9944((uint64_t)v6, &qword_1FA938);
    return 1;
  }
  v16 = *(int *)(v7 + 48);
  v17 = &v13[v16];
  v45 = a2;
  v46 = &v6[v16];
  v18 = *(void **)v6;
  v19 = *((_QWORD *)v6 + 1);
  v20 = *((_QWORD *)v6 + 2);
  v21 = v6[24];
  *(_QWORD *)v13 = *(_QWORD *)v6;
  *((_QWORD *)v13 + 1) = v19;
  *((_QWORD *)v13 + 2) = v20;
  v13[24] = v21;
  v22 = type metadata accessor for IndexPath(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v46, v22);
  v42 = v7;
  v24 = &v11[*(int *)(v7 + 48)];
  *(_QWORD *)v11 = v18;
  *((_QWORD *)v11 + 1) = v19;
  v44 = v20;
  *((_QWORD *)v11 + 2) = v20;
  v25 = v22;
  v43 = v21;
  v11[24] = v21;
  v26 = v19;
  v27 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v46 = v17;
  v27(v24, v17, v22);
  ObjectType = swift_getObjectType(v18);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 8);
  v30 = swift_unknownObjectRetain(v18);
  v31 = (void *)v29(ObjectType, v26, v30);
  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32(v24, v25);
  v33 = objc_msgSend(v31, "delegate");
  if (!v33)
  {
    sub_9944((uint64_t)v13, &qword_1FA940);
    v39 = v18;
LABEL_8:
    swift_unknownObjectRelease(v39);

    return 1;
  }
  v34 = v33;
  v41 = v13;
  v35 = v45;
  if ((objc_msgSend(v33, "respondsToSelector:", *v45) & 1) == 0)
  {
    sub_9944((uint64_t)v41, &qword_1FA940);
    swift_unknownObjectRelease(v18);
    v39 = v34;
    goto LABEL_8;
  }
  v36 = &v11[*(int *)(v42 + 48)];
  *(_QWORD *)v11 = v18;
  *((_QWORD *)v11 + 1) = v26;
  *((_QWORD *)v11 + 2) = v44;
  v11[24] = v43;
  v27(v36, v46, v25);
  swift_unknownObjectRelease(v18);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v32(v36, v25);
  v38 = objc_msgSend(v34, *v35, v31, isa);
  swift_unknownObjectRelease(v34);

  sub_9944((uint64_t)v41, &qword_1FA940);
  return (uint64_t)v38;
}

void sub_1D94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  Class isa;
  char *v38;
  char *v39;
  uint64_t v40;
  Class v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v43 - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v11);
  sub_94CB4(0, 0, 0, (uint64_t)v3);
  v12 = swift_release(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v12) == 1)
  {
    sub_9944((uint64_t)v3, &qword_1FA938);
    return;
  }
  v13 = *(int *)(v4 + 48);
  v14 = &v10[v13];
  v15 = &v3[v13];
  v16 = *(void **)v3;
  v17 = *((_QWORD *)v3 + 1);
  v18 = *((_QWORD *)v3 + 2);
  v19 = v3[24];
  *(_QWORD *)v10 = v16;
  *((_QWORD *)v10 + 1) = v17;
  *((_QWORD *)v10 + 2) = v18;
  v10[24] = v19;
  v20 = type metadata accessor for IndexPath(0);
  v48 = v10;
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v15, v20);
  v46 = v4;
  v47 = v14;
  v23 = &v8[*(int *)(v4 + 48)];
  *(_QWORD *)v8 = v16;
  *((_QWORD *)v8 + 1) = v17;
  v44 = v18;
  *((_QWORD *)v8 + 2) = v18;
  v45 = v19;
  v8[24] = v19;
  v24 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v24(v23, v14, v21);
  ObjectType = swift_getObjectType(v16);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 8);
  v27 = swift_unknownObjectRetain(v16);
  v28 = (void *)v26(ObjectType, v17, v27);
  v29 = *(void (**)(char *, uint64_t))(v22 + 8);
  v29(v23, v21);
  v30 = objc_msgSend(v28, "delegate");
  if (v30)
  {
    v31 = v30;
    if ((objc_msgSend(v30, "respondsToSelector:", "collectionView:didDeselectItemAtIndexPath:") & 1) != 0)
    {
      v32 = v47;
      v33 = &v8[*(int *)(v46 + 48)];
      *(_QWORD *)v8 = v16;
      *((_QWORD *)v8 + 1) = v17;
      v43 = v17;
      v34 = v24;
      v35 = v44;
      *((_QWORD *)v8 + 2) = v44;
      v8[24] = v45;
      v34(v33, v32, v21);
      v36 = v34;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v29(v33, v21);
      objc_msgSend(v28, "deselectItemAtIndexPath:animated:", isa, 0);

      v38 = v47;
      v39 = &v8[*(int *)(v46 + 48)];
      v40 = v43;
      *(_QWORD *)v8 = v16;
      *((_QWORD *)v8 + 1) = v40;
      *((_QWORD *)v8 + 2) = v35;
      v8[24] = v45;
      v36(v39, v38, v21);
      swift_unknownObjectRelease(v16);
      v41 = IndexPath._bridgeToObjectiveC()().super.isa;
      v29(v39, v21);
      objc_msgSend(v31, "collectionView:didDeselectItemAtIndexPath:", v28, v41);
      swift_unknownObjectRelease(v31);

      sub_9944((uint64_t)v48, &qword_1FA940);
      return;
    }
    sub_9944((uint64_t)v48, &qword_1FA940);
    swift_unknownObjectRelease(v16);
    v42 = v31;
  }
  else
  {
    sub_9944((uint64_t)v48, &qword_1FA940);
    v42 = v16;
  }
  swift_unknownObjectRelease(v42);

}

void sub_1DCAC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v31)(uint64_t, uint64_t, __n128);
  __n128 v32;
  void *v33;
  void (*v34)(char *, uint64_t);
  id v35;
  void *v36;
  SEL *v37;
  char *v38;
  Class isa;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  SEL *v47;
  char *v48;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v41 - v14;
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
  swift_retain(v16);
  sub_94CB4(0, 0, 0, (uint64_t)v8);
  v17 = swift_release(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v17) == 1)
  {
    sub_9944((uint64_t)v8, &qword_1FA938);
    return;
  }
  v46 = a1;
  v47 = a3;
  v18 = *(int *)(v9 + 48);
  v19 = &v15[v18];
  v48 = &v8[v18];
  v20 = *(void **)v8;
  v21 = *((_QWORD *)v8 + 1);
  v22 = *((_QWORD *)v8 + 2);
  v23 = v8[24];
  *(_QWORD *)v15 = *(_QWORD *)v8;
  *((_QWORD *)v15 + 1) = v21;
  *((_QWORD *)v15 + 2) = v22;
  v15[24] = v23;
  v24 = type metadata accessor for IndexPath(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v19, v48, v24);
  v43 = v9;
  v26 = &v13[*(int *)(v9 + 48)];
  *(_QWORD *)v13 = v20;
  *((_QWORD *)v13 + 1) = v21;
  v45 = v22;
  *((_QWORD *)v13 + 2) = v22;
  v27 = v24;
  v44 = v23;
  v13[24] = v23;
  v28 = v21;
  v29 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v48 = v19;
  v29(v26, v19, v24);
  ObjectType = swift_getObjectType(v20);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 8);
  v32 = swift_unknownObjectRetain(v20);
  v33 = (void *)v31(ObjectType, v28, v32);
  v34 = *(void (**)(char *, uint64_t))(v25 + 8);
  v34(v26, v27);
  v35 = objc_msgSend(v33, "delegate");
  if (v35)
  {
    v36 = v35;
    v42 = v15;
    v37 = v47;
    if ((objc_msgSend(v35, "respondsToSelector:", *v47) & 1) != 0)
    {
      v38 = &v13[*(int *)(v43 + 48)];
      *(_QWORD *)v13 = v20;
      *((_QWORD *)v13 + 1) = v28;
      *((_QWORD *)v13 + 2) = v45;
      v13[24] = v44;
      v29(v38, v48, v27);
      swift_unknownObjectRelease(v20);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v34(v38, v27);
      objc_msgSend(v36, *v37, v33, v46, isa);
      swift_unknownObjectRelease(v36);

      sub_9944((uint64_t)v42, &qword_1FA940);
      return;
    }
    sub_9944((uint64_t)v42, &qword_1FA940);
    swift_unknownObjectRelease(v20);
    v40 = v36;
  }
  else
  {
    sub_9944((uint64_t)v15, &qword_1FA940);
    v40 = v20;
  }
  swift_unknownObjectRelease(v40);

}

_QWORD *sub_1DFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v66;
  char *v67;
  _QWORD v68[5];
  _QWORD v69[3];
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;

  v60 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v7 = *(_QWORD *)(v72 - 8);
  v8 = __chkstk_darwin(v72);
  v59 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v50 = (uint64_t)&v47 - v10;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v67 = (char *)&v47 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v17);
  v61 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v52 = v15;
    v49 = v2;
    v20 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v55 = OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData;
    v54 = *(_QWORD *)(v12 + 72);
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v48 = a1;
    swift_bridgeObjectRetain(a1);
    v66 = _swiftEmptyArrayStorage;
    v21 = v61;
    v51 = v11;
    v57 = v7;
    v56 = v12;
    do
    {
      v58(v21, v20, v11);
      v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v53(v21, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v21, 1, v11) == 1)
      {
        a1 = v48;
        goto LABEL_30;
      }
      v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v22(v67, v21, v11);
      v23 = *(_QWORD *)(v60 + v55);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v24(v6, 1, 1, v72);
      v25 = swift_retain(v23);
      v26 = IndexPath.count.getter(v25);
      if (v26 == 2)
      {
        v27 = IndexPath.section.getter(2);
      }
      else if (v26 <= 0)
      {
        v27 = NSNotFound.getter();
      }
      else
      {
        v27 = IndexPath.subscript.getter(0);
      }
      sub_94E88(v27, 0, 0, 0, v68);
      v28 = sub_982C((uint64_t)v68, (uint64_t)v69, &qword_1FA948);
      v29 = v69[0];
      if (v69[0])
      {
        v63 = v69[2];
        v64 = v69[1];
        v62 = v70;
        v30 = v71;
        v31 = IndexPath.count.getter(v28);
        v65 = v24;
        if (v31 > 1)
        {
          v34 = IndexPath.count.getter(v31);
          v32 = v22;
          if (v34 == 2)
          {
            v35 = IndexPath.item.getter(2);
          }
          else if (v34 <= 2)
          {
            v35 = NSNotFound.getter();
          }
          else
          {
            v35 = IndexPath.subscript.getter(1);
          }
          v33 = v52;
          IndexPath.init(item:section:)(v35, v30);
        }
        else
        {
          v32 = v22;
          v33 = v52;
          IndexPath.init(index:)(v30);
        }
        sub_9944((uint64_t)v6, &qword_1FA938);
        v36 = v72;
        v37 = &v6[*(int *)(v72 + 48)];
        v38 = v64;
        *(_QWORD *)v6 = v29;
        *((_QWORD *)v6 + 1) = v38;
        *((_QWORD *)v6 + 2) = v63;
        v6[24] = v62;
        v11 = v51;
        v32(v37, v33, v51);
        v65(v6, 0, 1, v36);
      }
      v39 = swift_release(v23);
      v12 = v56;
      (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v67, v11, v39);
      v7 = v57;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v6, 1, v72) == 1)
      {
        sub_9944((uint64_t)v6, &qword_1FA938);
        v21 = v61;
      }
      else
      {
        v40 = v50;
        sub_982C((uint64_t)v6, v50, &qword_1FA940);
        sub_982C(v40, v59, &qword_1FA940);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
        v21 = v61;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v66 = (_QWORD *)sub_134BA0(0, v66[2] + 1, 1, (unint64_t)v66);
        v43 = v66[2];
        v42 = v66[3];
        if (v43 >= v42 >> 1)
          v66 = (_QWORD *)sub_134BA0(v42 > 1, v43 + 1, 1, (unint64_t)v66);
        v44 = v66;
        v66[2] = v43 + 1;
        sub_982C(v59, (uint64_t)v44+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v43, &qword_1FA940);
      }
      v20 += v54;
      --v19;
    }
    while (v19);
    a1 = v48;
    v53(v21, 1, 1, v11);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain(a1);
    v66 = _swiftEmptyArrayStorage;
    v45(v61, 1, 1, v11);
  }
LABEL_30:
  swift_bridgeObjectRelease(a1);
  return v66;
}

void sub_1E538(uint64_t a1, SEL *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  Class isa;
  double v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  SEL *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;

  v53 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v54 = (char *)&v48 - v11;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v12 = *(_QWORD *)(v55 - 8);
  v13 = __chkstk_darwin(v55);
  v58 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v48 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v48 - v18;
  v20 = v2;
  v21 = sub_1DFB8(a1, (uint64_t)v20);

  v22 = v21[2];
  if (!v22)
  {
    swift_bridgeObjectRelease(v21);
    return;
  }
  v56 = v12;
  v23 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v52 = v21;
  v24 = (uint64_t)v21 + v23;
  sub_1E978(v24, (uint64_t)v19);
  v25 = *(_QWORD *)v19;
  v26 = *((_QWORD *)v19 + 1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(&v19[*(int *)(v55 + 48)], v7);
  ObjectType = swift_getObjectType(v25);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 8);
  v29 = swift_unknownObjectRetain(v25);
  v30 = v26;
  v31 = v25;
  v32 = (void *)v28(ObjectType, v30, v29);
  swift_unknownObjectRelease(v31);
  v33 = objc_msgSend(v32, "prefetchDataSource");
  if (v33)
  {
    v34 = v33;
    if ((objc_msgSend(v33, "respondsToSelector:", *v53) & 1) != 0)
    {
      v49 = v34;
      v50 = v32;
      v51 = v31;
      v56 = *(_QWORD *)(v56 + 72);
      swift_bridgeObjectRetain(v52);
      v35 = (char *)_swiftEmptyArrayStorage;
      v36 = v55;
      do
      {
        sub_1E978(v24, (uint64_t)v17);
        v37 = *(int *)(v36 + 48);
        v38 = &v58[v37];
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v58[v37], &v17[v37], v7);
        v39 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v39(v6, v38, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
        sub_9944((uint64_t)v17, &qword_1FA940);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        {
          sub_9944((uint64_t)v6, (uint64_t *)&unk_1FA950);
        }
        else
        {
          v40 = v54;
          v39(v54, v6, v7);
          v39(v57, v40, v7);
          if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
            v35 = (char *)sub_134B8C(0, *((_QWORD *)v35 + 2) + 1, 1, (unint64_t)v35);
          v42 = *((_QWORD *)v35 + 2);
          v41 = *((_QWORD *)v35 + 3);
          if (v42 >= v41 >> 1)
            v35 = (char *)sub_134B8C(v41 > 1, v42 + 1, 1, (unint64_t)v35);
          *((_QWORD *)v35 + 2) = v42 + 1;
          v39(&v35[((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v42], v57, v7);
          v36 = v55;
        }
        v24 += v56;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease_n(v52, 2);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v45 = swift_bridgeObjectRelease(v35).n128_u64[0];
      v47 = v49;
      v46 = v50;
      objc_msgSend(v49, *v53, v50, isa, v45);
      swift_unknownObjectRelease(v47);

      v43 = v51;
      goto LABEL_17;
    }
    swift_unknownObjectRelease(v34);
  }

  swift_bridgeObjectRelease(v52);
  v43 = v31;
LABEL_17:
  swift_unknownObjectRelease(v43);
}

uint64_t sub_1E978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E9C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_1(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1EA1C()
{
  uint64_t v0;

  sub_19694(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_1EA24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1EA60()
{
  uint64_t v0;

  sub_16D48(*(void **)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1EA6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_1EAA0()
{
  uint64_t v0;

  return sub_18A94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1EAAC(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_1EAD4(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

uint64_t sub_1EB10(uint64_t a1)
{
  swift_unknownObjectRetain(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_1EB38(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v9;

  return sub_1B6B8(a1, *(_QWORD *)(v9 + 16), *(_BYTE *)(v9 + 24), *(_QWORD *)(v9 + 32), a2, a3, a4, a5, a6, a7, a8, a9) & 1;
}

uint64_t sub_1EB5C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, char a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, double a19, char a20)
{
  char v12;
  BOOL v13;
  BOOL v14;
  char v16;
  char v17;

  if ((a2 & 1) == 0)
  {
    v12 = a8 | (a1 != a7) | (a3 != a17);
    goto LABEL_23;
  }
  if (a1)
  {
    if (a1 != 1)
    {
      v14 = (a8 & 1) != 0 && a7 >= 2 && a3 == a17;
      goto LABEL_20;
    }
    v13 = (a8 & 1) != 0 && a7 == 1;
  }
  else
  {
    v13 = (a8 & 1) != 0 && a7 == 0;
  }
  v14 = v13 && a3 == a17;
LABEL_20:
  v12 = !v14;
LABEL_23:
  v16 = v12 | a6;
  v17 = (v12 ^ (v12 | a6)) & a20;
  if ((v16 & 1) != 0 || (a20 & 1) != 0)
    return v17 & 1;
  else
    return static CGFloat.==~ infix(_:_:)(*(double *)&a5, a19) & 1;
}

uint64_t sub_1EC0C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

Swift::String *PlayerNotification_PeriodicUpdate.unsafeMutableAddressor()
{
  return &PlayerNotification_PeriodicUpdate;
}

Swift::String *PlayerNotification_PlaystateDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_PlaystateDidChange;
}

Swift::String *PlayerNotification_AutoStopModeDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_AutoStopModeDidChange;
}

Swift::String *PlayerNotification_PlayerPathDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_PlayerPathDidChange;
}

Swift::String *PlayerNotification_CurrentChapterDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_CurrentChapterDidChange;
}

Swift::String *PlayerNotification_LoadedDurationDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_LoadedDurationDidChange;
}

Swift::String *PlayerNotification_PlayerVolumeDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_PlayerVolumeDidChange;
}

Swift::String *PlayerNotification_JumpDurationDidChange.unsafeMutableAddressor()
{
  return &PlayerNotification_JumpDurationDidChange;
}

_UNKNOWN **static PlayerPlaybackSpeed.allCases.getter()
{
  return &off_1C52C8;
}

float PlayerPlaybackSpeed.rawValue.getter(char a1)
{
  return flt_16BA1C[a1];
}

Swift::Int sub_1ECC0()
{
  char *v0;

  return sub_1ED0C(0, *v0);
}

void sub_1ECCC(uint64_t a1)
{
  char *v1;

  sub_1ECD4(a1, *v1);
}

void sub_1ECD4(uint64_t a1, char a2)
{
  Hasher._combine(_:)(dword_16BA04[a2]);
}

Swift::Int sub_1ED04(uint64_t a1)
{
  char *v1;

  return sub_1ED0C(a1, *v1);
}

Swift::Int sub_1ED0C(uint64_t a1, char a2)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(dword_16BA04[a2]);
  return Hasher._finalize()();
}

uint64_t sub_1ED58@<X0>(float *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s12NowPlayingUI19PlayerPlaybackSpeedO8rawValueACSgSf_tcfC_0(*a1);
  *a2 = result;
  return result;
}

float sub_1ED80@<S0>(float *a1@<X8>)
{
  char *v1;
  float result;

  result = flt_16BA1C[*v1];
  *a1 = result;
  return result;
}

void sub_1ED98(_QWORD *a1@<X8>)
{
  *a1 = &off_1C52C8;
}

BOOL sub_1EDA8(char *a1, char *a2)
{
  return flt_16BA1C[*a1] == flt_16BA1C[*a2];
}

void PlayerAutoStopMode.hash(into:)(uint64_t a1, Swift::UInt64 a2, char a3)
{
  Swift::UInt64 v4;

  if ((a3 & 1) != 0)
    __asm { BR              X9 }
  Hasher._combine(_:)(1uLL);
  if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = a2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
}

uint64_t static PlayerAutoStopMode.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    return ((uint64_t (*)(void))((char *)&loc_1EE78 + 4 * byte_16B854[a1]))();
  if ((a4 & 1) != 0)
    return 0;
  return *(double *)&a1 == *(double *)&a3;
}

Swift::Int PlayerAutoStopMode.hashValue.getter(Swift::UInt64 a1, char a2)
{
  char v3;
  _QWORD v5[9];

  v3 = a2 & 1;
  Hasher.init(_seed:)(v5, 0);
  PlayerAutoStopMode.hash(into:)((uint64_t)v5, a1, v3);
  return Hasher._finalize()();
}

Swift::Int sub_1EF18()
{
  uint64_t v0;
  Swift::UInt64 v1;
  char v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  PlayerAutoStopMode.hash(into:)((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1EF64(uint64_t a1)
{
  uint64_t v1;

  PlayerAutoStopMode.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

Swift::Int sub_1EF70(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  char v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  PlayerAutoStopMode.hash(into:)((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1EFB8(uint64_t a1, uint64_t a2)
{
  double v2;

  v2 = *(double *)a1;
  if (*(_BYTE *)(a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1EFE8 + 4 * byte_16B858[*(_QWORD *)&v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(double *)a2;
}

uint64_t PlayerPlaybackSpeed.localizedName.getter()
{
  void *v0;
  Class isa;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Swift::String v16;

  if (qword_1F9460 != -1)
    swift_once(&qword_1F9460, sub_1F5CC);
  v0 = (void *)qword_1FA990;
  isa = Float._bridgeToObjectiveC()().super.super.isa;
  v2 = objc_msgSend(v0, "stringForObjectValue:", isa);

  if (v2)
  {
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._countAndFlagsBits = 0xD00000000000006BLL;
  v16._object = (void *)0x80000000001847E0;
  v7._object = (void *)0x80000000001847C0;
  v7._countAndFlagsBits = 0xD000000000000013;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v16);

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  *(_QWORD *)(v11 + 64) = sub_1F6B8();
  v12 = 3157553;
  if (v5)
    v12 = v3;
  v13 = 0xE300000000000000;
  if (v5)
    v13 = v5;
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  v14 = static String.localizedStringWithFormat(_:_:)(v9._countAndFlagsBits, v9._object, v11);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v11);
  return v14;
}

uint64_t PlayerAutoStopMode.localizedName.getter(uint64_t a1, char a2)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  const char *v11;
  unint64_t v12;
  unint64_t v13;
  double v14;
  void *v15;
  Class isa;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t countAndFlagsBits;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  Swift::String v34;
  Swift::String v35;

  if ((a2 & 1) != 0)
  {
    if ((unint64_t)(a1 - 2) >= 2)
    {
      if (*(double *)&a1 == 0.0)
      {
        v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v31 = 0xE000000000000000;
        v12 = 6710863;
        v13 = 0xE300000000000000;
LABEL_14:
        v21._countAndFlagsBits = 0;
        v21._object = (void *)0xE000000000000000;
        v22 = 0;
        countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, (NSBundle)v10, v21, *(Swift::String *)(&v31 - 1))._countAndFlagsBits;

        return countAndFlagsBits;
      }
      v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v31 = 0xE000000000000000;
      v11 = "When Current Chapter Ends";
    }
    else
    {
      v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v31 = 0xE000000000000000;
      v11 = "When Current Episode Ends";
    }
    v13 = (unint64_t)(v11 - 32) | 0x8000000000000000;
    v12 = 0xD000000000000019;
    goto LABEL_14;
  }
  if (*(double *)&a1 == 3600.0)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v34._object = (void *)0xE600000000000000;
    v3._countAndFlagsBits = 0x72756F48206925;
    v3._object = (void *)0xE700000000000000;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v34._countAndFlagsBits = 0x72756F482031;
    v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v34);

    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_16B3D0;
    *(_QWORD *)(v7 + 56) = &type metadata for Int;
    *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v7 + 32) = 1;
    v8 = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
    swift_bridgeObjectRelease(v5._object);
    swift_bridgeObjectRelease(v7);
    return v8;
  }
  else
  {
    v14 = *(double *)&a1 / 60.0;
    if (qword_1F9460 != -1)
      swift_once(&qword_1F9460, sub_1F5CC);
    v15 = (void *)qword_1FA990;
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    v17 = objc_msgSend(v15, "stringForObjectValue:", isa);

    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

    }
    else
    {
      v32 = 0;
      v33 = 0xE000000000000000;
      Double.write<A>(to:)(&v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v14);
      v18 = v32;
      v20 = v33;
    }
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v35._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0x74756E694D204025;
    v25._object = (void *)0xEA00000000007365;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v35);

    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = xmmword_16B3D0;
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_1F6B8();
    *(_QWORD *)(v29 + 32) = v18;
    *(_QWORD *)(v29 + 40) = v20;
    v30 = static String.localizedStringWithFormat(_:_:)(v27._countAndFlagsBits, v27._object, v29);
    swift_bridgeObjectRelease(v27._object);
    swift_bridgeObjectRelease(v29);
    return v30;
  }
}

id sub_1F5CC()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v0, "setMinimumFractionDigits:", 0);
  objc_msgSend(v0, "setMaximumFractionDigits:", 2);
  result = objc_msgSend(v0, "setNumberStyle:", 1);
  qword_1FA990 = (uint64_t)v0;
  return result;
}

uint64_t _s12NowPlayingUI19PlayerPlaybackSpeedO8rawValueACSgSf_tcfC_0(float a1)
{
  unsigned int v2;

  if (a1 == 0.75)
    return 0;
  if (a1 == 1.0)
    return 1;
  if (a1 == 1.25)
    return 2;
  if (a1 == 1.5)
    return 3;
  if (a1 == 2.0)
    v2 = 5;
  else
    v2 = 6;
  if (a1 == 1.75)
    return 4;
  else
    return v2;
}

unint64_t sub_1F6B8()
{
  unint64_t result;

  result = qword_1FA998;
  if (!qword_1FA998)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1FA998);
  }
  return result;
}

unint64_t sub_1F700()
{
  unint64_t result;

  result = qword_201690;
  if (!qword_201690)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayerPlaybackSpeed, &type metadata for PlayerPlaybackSpeed);
    atomic_store(result, &qword_201690);
  }
  return result;
}

unint64_t sub_1F748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FA9A0;
  if (!qword_1FA9A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FA9A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1FA9A0);
  }
  return result;
}

unint64_t sub_1F798()
{
  unint64_t result;

  result = qword_1FA9B0;
  if (!qword_1FA9B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayerAutoStopMode, &type metadata for PlayerAutoStopMode);
    atomic_store(result, (unint64_t *)&qword_1FA9B0);
  }
  return result;
}

uint64_t _s9AlignmentOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayerPlaybackSpeed(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1F8B8 + 4 * byte_16B861[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1F8EC + 4 * byte_16B85C[v4]))();
}

uint64_t sub_1F8EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F8F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1F8FCLL);
  return result;
}

uint64_t sub_1F908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1F910);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1F914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F91C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayerPlaybackSpeed()
{
  return &type metadata for PlayerPlaybackSpeed;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Artwork.CornerTreatment(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Artwork.CornerTreatment(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1F99C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1F9B8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerAutoStopMode()
{
  return &type metadata for PlayerAutoStopMode;
}

uint64_t sub_1F9E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (**v35)();
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42[16];
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;

  v2 = v1;
  v41 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA9F0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA9F8);
  *(_QWORD *)&v38 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA00);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA08);
  __chkstk_darwin(v40);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA10);
  v15 = sub_27A8C(&qword_1FAA18, &qword_1FAA10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  NowPlayingQueue.init(content:)(sub_2469C, v42, v14, v15);
  type metadata accessor for PodcastsUIKitSwiftUIBridge(0);
  v16 = swift_retain(*(_QWORD *)(*(_QWORD *)v1 + 16));
  v17 = PodcastsUIKitSwiftUIBridge.__allocating_init(asPartOf:responder:)(v16, 0);
  v18 = sub_27A8C(&qword_1FAA20, &qword_1FA9F0, (uint64_t)&protocol conformance descriptor for NowPlayingQueue<A>);
  View.withPodcastsBridge(_:)(v17, v3, v18);
  v19 = swift_release(v17);
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v19);
  v21 = static Alignment.center.getter(v20);
  v23 = v22;
  v24 = &v11[*(int *)(v9 + 36)];
  sub_20480(v2);
  v25 = (uint64_t *)&v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FAA28) + 36)];
  *v25 = v21;
  v25[1] = v23;
  v26 = (*(uint64_t (**)(char *, char *, _QWORD))(v38 + 32))(v11, v8, v39);
  v27 = static Animation.default.getter(v26);
  v28 = *(_QWORD *)(v2 + 24);
  KeyPath = swift_getKeyPath(&unk_16BAF0);
  v30 = swift_getKeyPath(&unk_16BB18);
  static Published.subscript.getter(v44, v28, KeyPath, v30);
  swift_release(KeyPath);
  swift_release(v30);
  v38 = v44[1];
  v39 = v44[0];
  v31 = v45;
  v32 = v46;
  v37 = v47;
  sub_2808C((uint64_t)v11, (uint64_t)v13, &qword_1FAA00);
  v33 = &v13[*(int *)(v40 + 36)];
  *(_QWORD *)v33 = v27;
  *(_OWORD *)(v33 + 8) = v39;
  *(_OWORD *)(v33 + 24) = v38;
  *((_QWORD *)v33 + 5) = v31;
  *((_QWORD *)v33 + 6) = v32;
  *(_OWORD *)(v33 + 56) = v37;
  sub_9944((uint64_t)v11, &qword_1FAA00);
  v34 = v41;
  sub_2808C((uint64_t)v13, v41, &qword_1FAA08);
  v35 = (void (**)())(v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FAA30) + 36));
  *v35 = sub_20694;
  v35[1] = 0;
  v35[2] = 0;
  v35[3] = 0;
  return sub_9944((uint64_t)v13, &qword_1FAA08);
}

uint64_t sub_1FD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  void (*v43)(char *, char *, uint64_t, __n128);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  void (*v49)(char *, uint64_t);
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA58);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA60);
  v58 = *(_QWORD *)(v61 - 8);
  v6 = __chkstk_darwin(v61);
  v60 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v54 - v9;
  v11 = __chkstk_darwin(v8);
  v57 = (char *)&v54 - v12;
  v13 = *(_QWORD *)(a1 + 32);
  if (v13)
  {
    __chkstk_darwin(v11);
    *(&v54 - 2) = a1;
    v14 = type metadata accessor for NowPlayingMediaPlayerController();
    v15 = type metadata accessor for ChaptersList(0);
    v16 = sub_8330(&qword_1FAA70, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingMediaPlayerController, (uint64_t)&protocol conformance descriptor for NowPlayingMediaPlayerController);
    v17 = sub_8330(&qword_1FAA78, type metadata accessor for ChaptersList, (uint64_t)&unk_16F9F8);
    v18 = swift_retain(v13);
    NowPlayingQueuePlayingItem.init(controller:supplementary:)(v18, sub_24B28, &v54 - 4, v14, v15, v16, v17);
    v19 = (_OWORD *)swift_allocObject(&unk_1C8370, 80, 7);
    v20 = *(_OWORD *)(a1 + 16);
    v19[1] = *(_OWORD *)a1;
    v19[2] = v20;
    v21 = *(_OWORD *)(a1 + 48);
    v19[3] = *(_OWORD *)(a1 + 32);
    v19[4] = v21;
    sub_24B7C((uint64_t *)a1);
    v22 = sub_27A8C(&qword_1FAA80, &qword_1FAA58, (uint64_t)&protocol conformance descriptor for NowPlayingQueuePlayingItem<A, B>);
    v23 = v56;
    View.withSizing(callback:)(sub_24B74, v19, v56, v22);
    v24 = swift_release(v19);
    (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v5, v23, v24);
    v25 = v57;
    v26 = v58;
    v27 = v61;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v10, v61);
    v28 = *(_QWORD *)a1;
    v29 = *(_QWORD *)(a1 + 24);
    KeyPath = swift_getKeyPath(&unk_16BAF0);
    v31 = swift_getKeyPath(&unk_16BB18);
    swift_retain(v28);
    static Published.subscript.getter(v62, v29, KeyPath, v31);
    swift_release(KeyPath);
    swift_release(v31);
    v32 = v62[0];
    v33 = v63;
    v34 = v64;
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v33);
    v35 = swift_getKeyPath(&unk_16BB80);
    v36 = swift_getKeyPath(&unk_16BBA8);
    static Published.subscript.getter(v62, v29, v35, v36);
    swift_release(v35);
    swift_release(v36);
    LOBYTE(v14) = v62[0];
    v37 = swift_getKeyPath(&unk_16BAF0);
    v38 = swift_getKeyPath(&unk_16BB18);
    swift_retain(v28);
    static Published.subscript.getter(v62, v29, v37, v38);
    swift_release(v37);
    swift_release(v38);
    v39 = v62[0];
    v40 = v63;
    v41 = v65;
    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v39);
    v42 = swift_bridgeObjectRelease(v40);
    v43 = *(void (**)(char *, char *, uint64_t, __n128))(v26 + 16);
    v44 = v60;
    v43(v60, v25, v27, v42);
    v45 = v59;
    ((void (*)(uint64_t, char *, uint64_t))v43)(v59, v44, v27);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA88);
    v47 = v45 + *(int *)(v46 + 48);
    *(_QWORD *)v47 = v28;
    *(_QWORD *)(v47 + 8) = v34;
    *(_BYTE *)(v47 + 16) = v14;
    v48 = (uint64_t *)(v45 + *(int *)(v46 + 64));
    *v48 = v28;
    v48[1] = v41;
    v49 = *(void (**)(char *, uint64_t))(v26 + 8);
    swift_retain_n(v28, 2);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v41);
    v49(v25, v27);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v41);
    swift_release_n(v28, 2);
    return ((uint64_t (*)(char *, uint64_t))v49)(v44, v27);
  }
  else
  {
    v51 = *(_QWORD *)(a1 + 40);
    v52 = type metadata accessor for NowPlayingMediaPlayerController();
    v53 = sub_8330(&qword_1FAA68, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingMediaPlayerController, (uint64_t)&protocol conformance descriptor for NowPlayingMediaPlayerController);
    result = EnvironmentObject.error()(0, v51, v52, v53);
    __break(1u);
  }
  return result;
}

uint64_t sub_201AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[8];
  __int128 v29;

  v4 = type metadata accessor for ChaptersList(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = *((_OWORD *)a1 + 1);
  v8 = *((_QWORD *)&v29 + 1);
  KeyPath = swift_getKeyPath(&unk_16BAF0);
  v10 = swift_getKeyPath(&unk_16BB18);
  static Published.subscript.getter(v28, v8, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  v11 = v28[0];
  v12 = v28[3];
  v13 = v28[6];
  swift_bridgeObjectRelease(v28[7]);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  v28[0] = v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFA0);
  v15 = sub_27A8C(&qword_1FAA40, &qword_1FBFA0, (uint64_t)&protocol conformance descriptor for [A]);
  LOBYTE(v12) = Collection.isNotEmpty.getter(v14, v15);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
    v16 = *a1;
    v17 = a1[1];
    *v7 = *a1;
    swift_retain(v16);
    sub_24D30((uint64_t)&v29);
    v18 = type metadata accessor for QueueViewModel(0);
    v19 = sub_8330(&qword_1FAA90, type metadata accessor for QueueViewModel, (uint64_t)&unk_16FE20);
    swift_retain(v17);
    v7[1] = ObservedObject.init(wrappedValue:)(v8, v18, v19);
    v7[2] = v20;
    v21 = type metadata accessor for NowPlayingViewModel.PlaybackPosition(0);
    v22 = sub_8330(&qword_1FAA98, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    v7[3] = ObservedObject.init(wrappedValue:)(v17, v21, v22);
    v7[4] = v23;
    v24 = (_QWORD *)((char *)v7 + *(int *)(v4 + 28));
    *v24 = swift_getKeyPath(&unk_16BBC8);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    swift_storeEnumTagMultiPayload(v24, v25, 0);
    sub_25680((uint64_t)v7, a2, type metadata accessor for ChaptersList);
    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v26, 1, v4);
}

uint64_t sub_203EC(double a1, double a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v7;
  double v8;
  uint64_t result;
  double v10[9];

  if (a1 > 0.0)
  {
    v10[1] = v5;
    v10[2] = v4;
    v10[7] = v2;
    v10[8] = v3;
    if (a2 > 0.0)
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA48);
      State.wrappedValue.getter(v10, v7);
      v8 = v10[0];
      if (v10[0] <= a2)
        v8 = a2;
      v10[0] = v8;
      return State.wrappedValue.setter(v10, v7);
    }
  }
  return result;
}

uint64_t sub_20480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE v20[8];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA38);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(a1 + 24);
  v6 = sub_A2378();
  KeyPath = swift_getKeyPath(&unk_16BB38);
  v8 = swift_getKeyPath(&unk_16BB60);
  static Published.subscript.getter(&v22, v5, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = v22;
  v10 = swift_getKeyPath(&unk_16BAF0);
  v11 = swift_getKeyPath(&unk_16BB18);
  static Published.subscript.getter(&v22, v5, v10, v11);
  swift_release(v10);
  swift_release(v11);
  v12 = v22;
  v13 = v23;
  v14 = v24;
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)&v22 = v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFA0);
  v16 = sub_27A8C(&qword_1FAA40, &qword_1FBFA0, (uint64_t)&protocol conformance descriptor for [A]);
  LOBYTE(v15) = Collection.isNotEmpty.getter(v15, v16);
  swift_bridgeObjectRelease(v12);
  v22 = *(_OWORD *)(a1 + 48);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA48);
  State.wrappedValue.getter(&v21, v17);
  v20[0] = v6;
  v20[1] = v9;
  v20[2] = v15 & 1;
  LOBYTE(v13) = sub_A2378();
  v18 = sub_24AE4();
  View.accessibilityHidden(_:)((v13 & 1) == 0, &type metadata for NowPlayingQueuePlaceholderIfEmpty, v18);
  ModifiedContent<>.accessibilitySortPriority(_:)(v2, 5.0);
  return sub_9944((uint64_t)v4, &qword_1FAA38);
}

void sub_20694()
{
  char *v0;
  NSString v1;
  void *v2;
  Class isa;
  char *v4;
  NSString v5;
  id v6;

  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v0 = off_202B48;
  swift_bridgeObjectRetain(off_202B48);
  v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v0);
  LOBYTE(v0) = objc_msgSend(v6, "BOOLForKey:", v1);

  if ((v0 & 1) != 0)
  {
    v2 = v6;
  }
  else
  {
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v4 = off_202B48;
    swift_bridgeObjectRetain(off_202B48);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    objc_msgSend(v6, "setValue:forKey:", isa, v5);

    v2 = v5;
  }

}

uint64_t sub_20794@<X0>(uint64_t a1@<X8>)
{
  return sub_1F9E8(a1);
}

uint64_t sub_207CC@<X0>(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a2;
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  __chkstk_darwin(v5);
  v38 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ParagraphTypesetting(0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAAD0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAAD8);
  v12 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAAE0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAAE8);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 || (a1 & 0x10100) == 0x10100)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v41, 1, 1, v18);
  v22 = ContentUnavailableView.init(label:description:actions:)(sub_20B4C, 0, sub_20CD4, 0, UIScreen.Dimensions.size.getter, 0, &type metadata for Text, &type metadata for Text, &type metadata for EmptyView, &protocol witness table for Text, &protocol witness table for Text, &protocol witness table for EmptyView);
  static ParagraphTypesetting.balanced.getter(v22);
  v23 = sub_27A8C(&qword_1FAAF0, &qword_1FAAD0, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v24 = v35;
  View.paragraphTypesetting(_:isEnabled:)(v9, 1, v35, v23);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v24);
  v25 = v34;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v34);
  v26 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v26 = 0;
  *((double *)v26 + 1) = a3;
  v27 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  v28 = v38;
  static AccessibilityChildBehavior.combine.getter(v27);
  v29 = sub_25350();
  View.accessibilityElement(children:)(v28, v15, v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v40);
  sub_9944((uint64_t)v17, &qword_1FAAE0);
  v30 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v41, v21, v18);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v30, 0, 1, v18);
}

void sub_20B4C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD v33[5];

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000014, 0x8000000000184930);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = static Font.body.getter(v3, v4);
  v11 = Text.font(_:)(v10, v3, v5, v9, v7);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release(v10);
  sub_25404(v3, v5, v9);
  v18 = swift_bridgeObjectRelease(v7);
  v19 = Text.bold()(v11, v13, v15 & 1, v17, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  sub_25404(v11, v13, v15 & 1);
  v26 = swift_bridgeObjectRelease(v17);
  v33[0] = static HierarchicalShapeStyle.primary.getter(v26);
  v27 = Text.foregroundStyle<A>(_:)(v33, v19, v21, v25, v23, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v29 = v28;
  LOBYTE(v13) = v30;
  v32 = v31;
  sub_25404(v19, v21, v25);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)a1 = v27;
  *(_QWORD *)(a1 + 8) = v29;
  *(_BYTE *)(a1 + 16) = v13 & 1;
  *(_QWORD *)(a1 + 24) = v32;
}

void sub_20CD4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD v25[3];

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000002FLL, 0x8000000000184900);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = static Font.body.getter(v3, v4);
  v11 = Text.font(_:)(v10, v3, v5, v9, v7);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release(v10);
  sub_25404(v3, v5, v9);
  v18 = swift_bridgeObjectRelease(v7);
  v25[0] = static HierarchicalShapeStyle.secondary.getter(v18);
  v19 = Text.foregroundStyle<A>(_:)(v25, v11, v13, v15 & 1, v17, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v21 = v20;
  LOBYTE(v7) = v22;
  v24 = v23;
  sub_25404(v11, v13, v15 & 1);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v24;
}

uint64_t sub_20E20()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_20E38@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  int v2;
  int v3;
  int v4;

  if (*((_BYTE *)v1 + 1))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)v1;
  if (*((_BYTE *)v1 + 2))
    v4 = 0x10000;
  else
    v4 = 0;
  return sub_207CC(v3 | v4, a1, v1[1]);
}

uint64_t sub_20E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB88);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v42 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB90);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB20);
  v14 = sub_27A8C(&qword_1FAB28, &qword_1FAB20, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v13, v14) & 1) != 0)
  {
    v44 = a2;
    v15 = swift_allocObject(&unk_1C85C8, 33, 7);
    v39 = &v33;
    v40 = v9;
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = a2;
    *(_BYTE *)(v15 + 32) = a3 & 1;
    v38 = a3 & 1;
    __chkstk_darwin(v15);
    v37 = &v30;
    v36 = type metadata accessor for HardQueueHeaderView(0);
    v35 = type metadata accessor for RowContent(0);
    v34 = sub_8330(&qword_1FAB98, type metadata accessor for HardQueueHeaderView, (uint64_t)&unk_16BF48);
    v33 = sub_27A8C(&qword_1FAB38, &qword_1FAB20, (uint64_t)&protocol conformance descriptor for [A]);
    v16 = sub_8330(&qword_1FAB40, type metadata accessor for RowContent, (uint64_t)&unk_16BFE8);
    v17 = v10;
    v18 = a4;
    v19 = sub_8330(&qword_1FAB48, type metadata accessor for RowContent, (uint64_t)&unk_16BF98);
    v20 = sub_25490();
    swift_bridgeObjectRetain_n(a2, 2);
    swift_retain(a1);
    v31 = v19;
    v32 = v20;
    a4 = v18;
    v10 = v17;
    v21 = v42;
    NowPlayingQueueSection<>.init<A, B>(_:rowContent:header:)(&v44, sub_256CC, v15, sub_256D8, v37, v36, v13, v35, v34, v33, v16, v31, v32);
    v22 = swift_allocObject(&unk_1C85F0, 33, 7);
    *(_QWORD *)(v22 + 16) = a1;
    *(_QWORD *)(v22 + 24) = a2;
    *(_BYTE *)(v22 + 32) = v38;
    v9 = v40;
    v23 = swift_allocObject(&unk_1C8618, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_25500;
    *(_QWORD *)(v23 + 24) = v22;
    v24 = v41;
    v25 = v43;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v12, v21, v43);
    v26 = &v12[*(int *)(v9 + 36)];
    *(_QWORD *)v26 = sub_281EC;
    *((_QWORD *)v26 + 1) = v23;
    v27 = *(void (**)(char *, uint64_t))(v24 + 8);
    swift_bridgeObjectRetain(a2);
    swift_retain(a1);
    v27(v21, v25);
    sub_982C((uint64_t)v12, a4, &qword_1FAB90);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a4, v28, 1, v9);
}

uint64_t sub_211D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v26 = a3;
  v5 = (int *)type metadata accessor for RowContent(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)v7 = a2;
  *((_QWORD *)v7 + 1) = v8;
  *((_QWORD *)v7 + 2) = v9;
  *((_QWORD *)v7 + 3) = v10;
  LOBYTE(a1) = *(_BYTE *)(a1 + 24);
  v7[32] = a1;
  *((_QWORD *)v7 + 5) = v11;
  *((_QWORD *)v7 + 6) = v12;
  *((_QWORD *)v7 + 7) = v13;
  *((_QWORD *)v7 + 8) = v14;
  *((_QWORD *)v7 + 9) = v15;
  v7[80] = v16;
  *((_QWORD *)v7 + 11) = v17;
  *((_WORD *)v7 + 48) = 257;
  *((_QWORD *)v7 + 13) = swift_getKeyPath(&unk_16BD58);
  v7[112] = 0;
  v18 = &v7[v5[9]];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_16BD88);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v20 = &v7[v5[10]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_16BDB8);
  v20[8] = 0;
  v21 = &v7[v5[11]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_16BE08);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  sub_25680((uint64_t)v7, v26, type metadata accessor for RowContent);
  swift_retain(v25);
  v23 = v8;
  sub_1B140(v9, v10, a1);
  swift_retain(v17);
  swift_bridgeObjectRetain(v12);
  return swift_bridgeObjectRetain(v14);
}

uint64_t sub_2137C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char v9;
  _QWORD v10[2];

  *(_QWORD *)a4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a4 + 8) = a1;
  *(_BYTE *)(a4 + 16) = a3;
  v9 = 0;
  swift_retain(a1);
  State.init(wrappedValue:)(v10, &v9, &type metadata for Bool);
  v5 = v10[1];
  *(_BYTE *)(a4 + 24) = v10[0];
  *(_QWORD *)(a4 + 32) = v5;
  v6 = (_QWORD *)(a4 + *(int *)(type metadata accessor for HardQueueHeaderView(0) + 32));
  *v6 = swift_getKeyPath(&unk_16BE70);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  return swift_storeEnumTagMultiPayload(v6, v7, 0);
}

uint64_t sub_21414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E6C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_21420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v74 = a1;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB00);
  __chkstk_darwin(v75);
  v76 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB08);
  v73 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v72 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB10);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v63 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB18);
  v77 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2;
  v78 = a2;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB20);
  v19 = sub_27A8C(&qword_1FAB28, &qword_1FAB20, (uint64_t)&protocol conformance descriptor for [A]);
  v20 = Collection.isNotEmpty.getter(v18, v19);
  if ((v20 & 1) != 0)
  {
    v69 = v18;
    v70 = v8;
    v64 = v11;
    v65 = v13;
    v66 = v14;
    v67 = a3;
    v71 = v6;
    v21 = static Podcasts.isBlueMoonEnabled()(v20);
    v68 = v16;
    v23 = v72;
    v22 = v73;
    v24 = v74;
    v25 = a2;
    v78 = a2;
    if ((v21 & 1) != 0)
    {
      v26 = swift_allocObject(&unk_1C8550, 32, 7);
      *(_QWORD *)(v26 + 16) = v24;
      *(_QWORD *)(v26 + 24) = v17;
      v27 = type metadata accessor for RowContent(0);
      v28 = sub_2544C();
      v63 = sub_27A8C(&qword_1FAB38, &qword_1FAB20, (uint64_t)&protocol conformance descriptor for [A]);
      v29 = sub_8330(&qword_1FAB40, type metadata accessor for RowContent, (uint64_t)&unk_16BFE8);
      v30 = sub_8330(&qword_1FAB48, type metadata accessor for RowContent, (uint64_t)&unk_16BF98);
      v31 = sub_25490();
      swift_bridgeObjectRetain_n(v25, 2);
      swift_retain(v24);
      NowPlayingQueueSection<>.init<A, B>(_:rowContent:header:)(&v78, sub_254DC, v26, UIScreen.Dimensions.size.getter, 0, &type metadata for SoftQueueHeaderView, v69, v27, v28, v63, v29, v30, v31);
      v32 = swift_allocObject(&unk_1C8578, 32, 7);
      *(_QWORD *)(v32 + 16) = v24;
      *(_QWORD *)(v32 + 24) = v25;
      v33 = swift_allocObject(&unk_1C85A0, 32, 7);
      *(_QWORD *)(v33 + 16) = sub_25500;
      *(_QWORD *)(v33 + 24) = v32;
      v34 = (uint64_t)v64;
      v35 = v71;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v64, v23, v71);
      v36 = v22;
      v37 = v70;
      v38 = (_QWORD *)(v34 + *(int *)(v70 + 36));
      *v38 = sub_25548;
      v38[1] = v33;
      v39 = *(void (**)(char *, uint64_t))(v36 + 8);
      swift_bridgeObjectRetain(v25);
      swift_retain(v24);
      v39(v23, v35);
      v40 = v34;
      v41 = (uint64_t)v65;
      sub_982C(v40, (uint64_t)v65, &qword_1FAB10);
      v42 = v76;
      sub_2808C(v41, v76, &qword_1FAB10);
      swift_storeEnumTagMultiPayload(v42, v75, 0);
      v43 = sub_27084(&qword_1FAB58, &qword_1FAB10, &qword_1FAB60, &qword_1FAB08);
      v44 = sub_27A8C(&qword_1FAB60, &qword_1FAB08, (uint64_t)&protocol conformance descriptor for NowPlayingQueueSection<A, B>);
      v45 = (uint64_t)v68;
      _ConditionalContent<>.init(storage:)(v42, v37, v35, v43, v44);
      sub_9944(v41, &qword_1FAB10);
    }
    else
    {
      v47 = swift_allocObject(&unk_1C8528, 32, 7);
      *(_QWORD *)(v47 + 16) = v24;
      *(_QWORD *)(v47 + 24) = v17;
      v48 = type metadata accessor for RowContent(0);
      v49 = sub_2544C();
      v50 = sub_27A8C(&qword_1FAB38, &qword_1FAB20, (uint64_t)&protocol conformance descriptor for [A]);
      v51 = sub_8330(&qword_1FAB40, type metadata accessor for RowContent, (uint64_t)&unk_16BFE8);
      v52 = sub_8330(&qword_1FAB48, type metadata accessor for RowContent, (uint64_t)&unk_16BF98);
      v53 = sub_25490();
      v54 = v25;
      v55 = v53;
      swift_bridgeObjectRetain_n(v54, 2);
      swift_retain(v24);
      NowPlayingQueueSection<>.init<A, B>(_:rowContent:header:)(&v78, sub_2541C, v47, UIScreen.Dimensions.size.getter, 0, &type metadata for SoftQueueHeaderView, v69, v48, v49, v50, v51, v52, v55);
      v56 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 16);
      v57 = v22;
      v58 = v76;
      v59 = v71;
      v56(v76, v23, v71);
      swift_storeEnumTagMultiPayload(v58, v75, 1);
      v60 = sub_27084(&qword_1FAB58, &qword_1FAB10, &qword_1FAB60, &qword_1FAB08);
      v61 = sub_27A8C(&qword_1FAB60, &qword_1FAB08, (uint64_t)&protocol conformance descriptor for NowPlayingQueueSection<A, B>);
      v45 = (uint64_t)v68;
      _ConditionalContent<>.init(storage:)(v58, v70, v59, v60, v61);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v23, v59);
    }
    a3 = v67;
    sub_982C(v45, v67, &qword_1FAB18);
    v46 = 0;
    v14 = v66;
  }
  else
  {
    v46 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(a3, v46, 1, v14);
}

uint64_t sub_21A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>)
{
  int *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v29 = a4;
  v7 = (int *)type metadata accessor for RowContent(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)a1;
  v11 = *(void **)(a1 + 8);
  v12 = *(void **)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_BYTE *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)v9 = a2;
  *((_QWORD *)v9 + 1) = v10;
  *((_QWORD *)v9 + 2) = v11;
  *((_QWORD *)v9 + 3) = v12;
  LOBYTE(a1) = *(_BYTE *)(a1 + 24);
  v9[32] = a1;
  *((_QWORD *)v9 + 5) = v13;
  *((_QWORD *)v9 + 6) = v14;
  *((_QWORD *)v9 + 7) = v15;
  *((_QWORD *)v9 + 8) = v16;
  v20 = v16;
  *((_QWORD *)v9 + 9) = v17;
  v9[80] = v18;
  *((_QWORD *)v9 + 11) = v19;
  v9[96] = 0;
  v9[97] = a3;
  *((_QWORD *)v9 + 13) = swift_getKeyPath(&unk_16BD58);
  v9[112] = 0;
  v21 = &v9[v7[9]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_16BD88);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v23 = &v9[v7[10]];
  *(_QWORD *)v23 = swift_getKeyPath(&unk_16BDB8);
  v23[8] = 0;
  v24 = &v9[v7[11]];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_16BE08);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
  swift_storeEnumTagMultiPayload(v24, v25, 0);
  sub_25680((uint64_t)v9, v29, type metadata accessor for RowContent);
  swift_retain(v28);
  v26 = v10;
  sub_1B140(v11, v12, a1);
  swift_retain(v19);
  swift_bridgeObjectRetain(v14);
  return swift_bridgeObjectRetain(v20);
}

uint64_t sub_21BD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_21420(*v1, v1[1], a1);
}

double sub_21BD8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t KeyPath;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t *v111;
  void (*v112)(char *, uint64_t);
  void *v113;
  uint64_t *v114;
  void *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  double result;
  _QWORD v134[2];
  __int16 v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  char *v140;
  uint64_t *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  _QWORD v177[2];
  unsigned __int8 v178;
  uint64_t v179;
  uint64_t v180;
  Swift::String v181;

  v170 = a1;
  v173 = a2;
  v2 = type metadata accessor for BorderlessButtonStyle(0);
  v167 = *(_QWORD *)(v2 - 8);
  v168 = v2;
  __chkstk_darwin(v2);
  v166 = (char *)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for BlendMode(0);
  v143 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v142 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE60);
  __chkstk_darwin(v144);
  v141 = (uint64_t *)((char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v161 = type metadata accessor for ColorSchemeContrast(0);
  v160 = *(_QWORD *)(v161 - 8);
  v6 = __chkstk_darwin(v161);
  v159 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v158 = (uint64_t)&v136 - v8;
  v157 = type metadata accessor for HardQueueHeaderView(0);
  v146 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v147 = v9;
  v148 = (uint64_t)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FADF0);
  v151 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v150 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE68);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v152 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE70);
  __chkstk_darwin(v149);
  v156 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE78);
  __chkstk_darwin(v164);
  v165 = (uint64_t)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE80);
  v174 = *(_QWORD *)(v169 - 8);
  v14 = __chkstk_darwin(v169);
  v163 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v162 = (char *)&v136 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE88);
  v18 = __chkstk_darwin(v17);
  v172 = (uint64_t)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v136 - v20;
  v22 = LocalizedStringKey.init(stringLiteral:)(0x6575657551, 0xE500000000000000);
  v135 = 256;
  v181._object = 0;
  v23 = Text.init(_:tableName:bundle:comment:)(v22);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  v30 = static Font.body.getter(v23, v24);
  v31 = Text.font(_:)(v30, v23, v25, v29, v27);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_release(v30);
  v51 = (char *)(v35 & 1);
  sub_25404(v23, v25, v29);
  v38 = swift_bridgeObjectRelease(v27);
  v39 = Text.bold()(v31, v33, v51, v37, v38);
  v41 = v40;
  v43 = v42;
  v45 = v44 & 1;
  sub_25404(v31, v33, (char)v51);
  v46 = swift_bridgeObjectRelease(v37);
  v47 = static Color.primary.getter(v46);
  v171 = Text.foregroundColor(_:)(v47, v39, v41, v45, v43);
  v49 = v48;
  LODWORD(v51) = v50;
  v53 = v52;
  swift_release(v47);
  sub_25404(v39, v41, v45);
  v54 = swift_bridgeObjectRelease(v43);
  v55 = v169;
  v56 = v170;
  v57 = 1;
  v58 = v174;
  if (*(_BYTE *)(v170 + 16) == 1)
  {
    v137 = v49;
    v138 = (int)v51;
    v139 = v53;
    v140 = v21;
    v59 = v169;
    v60 = LocalizedStringKey.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v67 = v148;
    sub_278B8(v56, v148, type metadata accessor for HardQueueHeaderView);
    v68 = *(unsigned __int8 *)(v146 + 80);
    v69 = (v68 + 16) & ~v68;
    v70 = swift_allocObject(&unk_1C86D8, v69 + v147, v68 | 7);
    sub_25680(v67, v70 + v69, type metadata accessor for HardQueueHeaderView);
    v71 = v150;
    Button<>.init(_:action:)(v60, v62, v64 & 1, v66, sub_27900, v70);
    v72 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v181._countAndFlagsBits = 0xD00000000000001ELL;
    v181._object = (void *)0x8000000000184990;
    v73._object = (void *)0x8000000000184970;
    v73._countAndFlagsBits = 0xD000000000000017;
    v74._countAndFlagsBits = 0;
    v74._object = (void *)0xE000000000000000;
    v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v181);

    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
    v77 = swift_allocObject(v76, 72, 7);
    *(_OWORD *)(v77 + 16) = xmmword_16B3D0;
    v78 = *(_QWORD *)v56;
    *(_QWORD *)(v77 + 56) = &type metadata for Int;
    *(_QWORD *)(v77 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v77 + 32) = v78;
    v79 = static String.localizedStringWithFormat(_:_:)(v75._countAndFlagsBits, v75._object, v77);
    v81 = v80;
    swift_bridgeObjectRelease(v75._object);
    swift_bridgeObjectRelease(v77);
    v179 = v79;
    v180 = v81;
    v82 = *(_QWORD *)(v56 + 32);
    v175 = *(_BYTE *)(v56 + 24);
    v176 = v82;
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
    v84 = State.projectedValue.getter(v177, v83);
    v85 = v177[0];
    v86 = v177[1];
    v87 = v178;
    __chkstk_darwin(v84);
    v88 = (void *)sub_27A8C(&qword_1FADE8, &qword_1FADF0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v134[1] = sub_11CEC();
    v181._object = v88;
    v134[0] = v88;
    v89 = v153;
    v90 = v152;
    ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), _QWORD *, uint64_t, void *, uint64_t))View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:))(&v179, v85, v86, v87, 1, sub_27914, v134, v153, &type metadata for String, v153);
    swift_release(v86);
    swift_release(v85);
    v91 = swift_bridgeObjectRelease(v180);
    v92 = (*(uint64_t (**)(char *, uint64_t, __n128))(v151 + 8))(v71, v89, v91);
    v94 = static Font.body.getter(v92, v93);
    KeyPath = swift_getKeyPath(&unk_16C060);
    v96 = v154;
    v97 = (uint64_t)v156;
    v98 = v155;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v156, v90, v155);
    v99 = (uint64_t *)(v97 + *(int *)(v149 + 36));
    *v99 = KeyPath;
    v99[1] = v94;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v90, v98);
    v100 = v158;
    sub_562AC(v158);
    v101 = v160;
    v102 = v159;
    v103 = v161;
    (*(void (**)(char *, _QWORD, uint64_t))(v160 + 104))(v159, enum case for ColorSchemeContrast.standard(_:), v161);
    LOBYTE(v94) = static ColorSchemeContrast.== infix(_:_:)(v100, v102);
    v104 = *(void (**)(char *, uint64_t))(v101 + 8);
    v104(v102, v103);
    v105 = ((uint64_t (*)(uint64_t, uint64_t))v104)(v100, v103);
    if ((v94 & 1) != 0)
    {
      if (qword_1F9450 != -1)
        swift_once(&qword_1F9450, sub_1547C);
      v106 = qword_210038;
      v107 = v143;
      v108 = v142;
      v109 = v145;
      (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v142, enum case for BlendMode.plusLighter(_:), v145);
      v110 = (void *)v144;
      v111 = v141;
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))((char *)v141 + *(int *)(v144 + 36), v108, v109);
      *v111 = v106;
      v112 = *(void (**)(char *, uint64_t))(v107 + 8);
      swift_retain(v106);
      v112(v108, v109);
      v113 = (void *)sub_27A8C((unint64_t *)&qword_1FAED8, &qword_1FAE60, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
      v114 = v111;
      v115 = v110;
    }
    else
    {
      v177[0] = static Color.accentColor.getter(v105);
      v115 = &type metadata for Color;
      v113 = &protocol witness table for Color;
      v114 = v177;
    }
    v116 = AnyShapeStyle.init<A>(_:)(v114, v115, v113);
    v117 = v140;
    v118 = v174;
    v49 = v137;
    v119 = v165;
    sub_2808C(v97, v165, &qword_1FAE70);
    v120 = v164;
    *(_QWORD *)(v119 + *(int *)(v164 + 36)) = v116;
    v121 = sub_9944(v97, &qword_1FAE70);
    v122 = v166;
    BorderlessButtonStyle.init()(v121);
    v123 = sub_27924();
    v124 = sub_8330(&qword_1FAED0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v125 = v163;
    v126 = v120;
    v127 = v168;
    View.buttonStyle<A>(_:)(v122, v126, v168, v123, v124);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v122, v127);
    sub_9944(v119, &qword_1FAE78);
    v128 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
    v51 = v162;
    v128(v162, v125, v59);
    v128(v117, v51, v59);
    v57 = 0;
    v55 = v59;
    v21 = v117;
    v58 = v118;
    v53 = v139;
    LOBYTE(v51) = v138;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v58 + 56))(v21, v57, 1, v55, v54);
  v129 = v172;
  sub_2808C((uint64_t)v21, v172, &qword_1FAE88);
  v130 = v173;
  v131 = v171;
  *v173 = v171;
  v130[1] = v49;
  *((_BYTE *)v130 + 16) = v51 & 1;
  v130[3] = v53;
  v130[4] = 0;
  *((_BYTE *)v130 + 40) = 1;
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE90);
  sub_2808C(v129, (uint64_t)v130 + *(int *)(v132 + 64), &qword_1FAE88);
  sub_278A8(v131, v49, v51 & 1);
  swift_bridgeObjectRetain(v53);
  sub_9944((uint64_t)v21, &qword_1FAE88);
  sub_9944(v129, &qword_1FAE88);
  sub_25404(v131, v49, v51 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v53).n128_u64[0];
  return result;
}

void sub_22768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[9];
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (*(uint64_t *)a1 >= 5)
  {
    v11 = *(_QWORD *)(a1 + 32);
    v14[1] = *(_BYTE *)(a1 + 24);
    v15 = v11;
    v14[0] = 1;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
    State.wrappedValue.setter(v14, v12);
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 8);
    v6 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
    type metadata accessor for MainActor(0);
    v7 = swift_retain(v5);
    v8 = static MainActor.shared.getter(v7);
    v9 = (_QWORD *)swift_allocObject(&unk_1C8750, 40, 7);
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v5;
    v10 = sub_F0BB8((uint64_t)v4, (uint64_t)&unk_1FAEE8, (uint64_t)v9);
    swift_release(v10);
  }
}

uint64_t sub_22890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a2;
  v3 = type metadata accessor for HardQueueHeaderView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE20);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = LocalizedStringKey.init(stringLiteral:)(0x7551207261656C43, 0xEB00000000657565);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  static ButtonRole.destructive.getter();
  v16 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_278B8(a1, (uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HardQueueHeaderView);
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_1C8700, v18 + v5, v17 | 7);
  sub_25680((uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for HardQueueHeaderView);
  return Button<>.init(_:role:action:)(v9, v11, v13 & 1, v15, v8, sub_27B88, v19);
}

double sub_22A14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = swift_retain(v5);
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1C8728, 40, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v5;
  v10 = sub_F0BB8((uint64_t)v4, (uint64_t)&unk_1FAEE0, (uint64_t)v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_22AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for AccessibilityTraits(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE48);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE50);
  v10 = sub_21BD8(v0, (uint64_t *)&v8[*(int *)(v9 + 44)]);
  static AccessibilityTraits.isHeader.getter(v10);
  v11 = sub_27A8C(&qword_1FAE58, &qword_1FAE48, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityAddTraits(_:)(v4, v5, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_9944((uint64_t)v8, &qword_1FAE48);
}

__n128 sub_22C28@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __n128 result;
  _OWORD v42[9];

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x8000000000184950);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = static Font.body.getter(v3, v4);
  v11 = Text.font(_:)(v10, v3, v5, v9, v7);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release(v10);
  sub_25404(v3, v5, v9);
  v18 = swift_bridgeObjectRelease(v7);
  v19 = Text.bold()(v11, v13, v15 & 1, v17, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  sub_25404(v11, v13, v15 & 1);
  v26 = swift_bridgeObjectRelease(v17);
  v27 = static Color.primary.getter(v26);
  v28 = Text.foregroundColor(_:)(v27, v19, v21, v25, v23);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  swift_release(v27);
  sub_25404(v19, v21, v25);
  v35 = swift_bridgeObjectRelease(v23);
  v36 = static Alignment.leading.getter(v35);
  sub_10A448(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v42, 0.0, 1, 0.0, 1, v36, v37, v28, v30, v32 & 1, v34);
  sub_25404(v28, v30, v32 & 1);
  swift_bridgeObjectRelease(v34);
  v38 = v42[7];
  *(_OWORD *)(a1 + 96) = v42[6];
  *(_OWORD *)(a1 + 112) = v38;
  *(_OWORD *)(a1 + 128) = v42[8];
  v39 = v42[3];
  *(_OWORD *)(a1 + 32) = v42[2];
  *(_OWORD *)(a1 + 48) = v39;
  v40 = v42[5];
  *(_OWORD *)(a1 + 64) = v42[4];
  *(_OWORD *)(a1 + 80) = v40;
  result = (__n128)v42[1];
  *(_OWORD *)a1 = v42[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  _BYTE v11[152];
  _OWORD v12[8];
  __int128 v13;
  _BYTE v14[151];
  char v15;
  _OWORD v16[10];
  uint64_t v17;

  v0 = type metadata accessor for AccessibilityTraits(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static HorizontalAlignment.center.getter(v2);
  sub_22C28((uint64_t)v12);
  *(_OWORD *)&v14[103] = v12[6];
  *(_OWORD *)&v14[87] = v12[5];
  *(_OWORD *)&v14[39] = v12[2];
  *(_OWORD *)&v14[23] = v12[1];
  *(_OWORD *)&v14[119] = v12[7];
  *(_OWORD *)&v14[135] = v13;
  *(_OWORD *)&v14[55] = v12[3];
  *(_OWORD *)&v14[71] = v12[4];
  *(_OWORD *)&v14[7] = v12[0];
  *(_OWORD *)&v11[97] = *(_OWORD *)&v14[96];
  *(_OWORD *)&v11[113] = *(_OWORD *)&v14[112];
  *(_OWORD *)&v11[129] = *(_OWORD *)&v14[128];
  *(_OWORD *)&v11[33] = *(_OWORD *)&v14[32];
  *(_OWORD *)&v11[49] = *(_OWORD *)&v14[48];
  *(_OWORD *)&v11[65] = *(_OWORD *)&v14[64];
  *(_OWORD *)&v11[81] = *(_OWORD *)&v14[80];
  *(_OWORD *)&v11[1] = *(_OWORD *)v14;
  v15 = 1;
  v10 = (unint64_t)v5;
  v11[0] = 1;
  *(_QWORD *)&v11[144] = *((_QWORD *)&v13 + 1);
  *(_OWORD *)&v11[17] = *(_OWORD *)&v14[16];
  static AccessibilityTraits.isHeader.getter(*(double *)v14);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAD68);
  v7 = sub_27A8C(&qword_1FAD70, &qword_1FAD68, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityAddTraits(_:)(v4, v6, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v16[8] = *(_OWORD *)&v11[112];
  v16[9] = *(_OWORD *)&v11[128];
  v17 = *(_QWORD *)&v11[144];
  v16[4] = *(_OWORD *)&v11[48];
  v16[5] = *(_OWORD *)&v11[64];
  v16[6] = *(_OWORD *)&v11[80];
  v16[7] = *(_OWORD *)&v11[96];
  v16[0] = v10;
  v16[1] = *(_OWORD *)v11;
  v16[2] = *(_OWORD *)&v11[16];
  v16[3] = *(_OWORD *)&v11[32];
  return sub_2714C((uint64_t)v16);
}

uint64_t sub_23008@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  void (*v50)(_BYTE *, uint64_t);
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  char v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  char v120;
  _BYTE v121[12];
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD v157[4];
  _QWORD v158[5];
  _QWORD v159[2];
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;

  v2 = (uint64_t)v1;
  v156 = a1;
  v3 = type metadata accessor for AppEntityVisualState(0);
  v154 = *(_QWORD *)(v3 - 8);
  v155 = v3;
  __chkstk_darwin(v3);
  v153 = &v121[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v146 = *(_QWORD *)(v5 - 8);
  v147 = v5;
  __chkstk_darwin(v5);
  v144 = &v121[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v130 = type metadata accessor for RowContent(0);
  v7 = *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64);
  v133 = *(_QWORD *)(v130 - 8);
  v134 = v7;
  __chkstk_darwin(v130);
  v132 = &v121[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for LayoutDirection(0);
  v128 = *(_QWORD *)(v9 - 8);
  v129 = v9;
  v10 = __chkstk_darwin(v9);
  v127 = &v121[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v126 = &v121[-v12];
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAD78);
  v138 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v135 = &v121[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAD80);
  __chkstk_darwin(v137);
  v136 = &v121[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAD88);
  v16 = *(_QWORD *)(v15 - 8);
  v141 = v15;
  v142 = v16;
  __chkstk_darwin(v15);
  v139 = &v121[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAD90);
  v143 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v131 = &v121[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAD98);
  __chkstk_darwin(v149);
  v152 = &v121[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FADA0);
  v150 = *(_QWORD *)(v20 - 8);
  v151 = v20;
  __chkstk_darwin(v20);
  v148 = &v121[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = (void *)v1[1];
  v22 = (void *)v1[2];
  v24 = (void *)v1[3];
  v26 = v1[5];
  v25 = v1[6];
  v27 = *(_QWORD *)(v2 + 56);
  v28 = *(_QWORD *)(v2 + 64);
  v29 = *(_QWORD *)(v2 + 72);
  v30 = *(_BYTE *)(v2 + 80);
  v31 = *(_QWORD *)(v2 + 88);
  v32 = *(_BYTE *)(v2 + 32);
  v160 = (uint64_t)v23;
  v161 = (uint64_t)v22;
  v162 = (unint64_t)v24;
  LOBYTE(v163) = v32;
  v164 = v26;
  v165 = v25;
  v166 = v27;
  v167 = v28;
  v168 = v29;
  v169 = v30;
  v170 = v31;
  v158[2] = v2;
  v171 = v26;
  *(_QWORD *)&v172 = v25;
  swift_bridgeObjectRetain(v25);
  v33 = v23;
  sub_1B140(v22, v24, v32);
  v34 = sub_11CEC();
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v28);
  swift_retain(v31);
  v35 = Text.init<A>(_:)(&v171, &type metadata for String, v34);
  v124 = v36;
  v125 = v35;
  v122 = v37;
  v123 = v38;
  v39 = *(_BYTE *)(v2 + 32);
  v40 = *(_QWORD *)(v2 + 56);
  v41 = *(_QWORD *)(v2 + 64);
  v42 = *(_QWORD *)(v2 + 72);
  v43 = *(_BYTE *)(v2 + 80);
  v44 = *(_QWORD *)(v2 + 88);
  v171 = *(_QWORD *)(v2 + 8);
  v172 = *(_OWORD *)(v2 + 16);
  v173 = v39;
  v174 = v26;
  v175 = v25;
  v176 = v40;
  v177 = v41;
  v178 = v42;
  v179 = v43;
  v180 = v44;
  v45 = v126;
  sub_564C4((uint64_t)v126);
  v47 = v127;
  v46 = v128;
  v48 = v129;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v128 + 104))(v127, enum case for LayoutDirection.rightToLeft(_:), v129);
  v49 = v47;
  LOBYTE(v47) = static LayoutDirection.== infix(_:_:)(v45, v47);
  v50 = *(void (**)(_BYTE *, uint64_t))(v46 + 8);
  v50(v49, v48);
  v50(v45, v48);
  v51 = sub_B9C20();
  v53 = v52;
  v54 = sub_A2510(v47 & 1, v51, v52);
  v56 = v55;
  swift_bridgeObjectRelease(v53);
  v159[0] = v54;
  v159[1] = v56;
  v57 = Text.init<A>(_:)(v159, &type metadata for String, v34);
  v59 = v58;
  LOBYTE(v56) = v60;
  v62 = v61;
  v63 = v132;
  sub_278B8(v2, (uint64_t)v132, type metadata accessor for RowContent);
  v64 = *(unsigned __int8 *)(v133 + 80);
  v65 = (v64 + 16) & ~v64;
  v66 = swift_allocObject(&unk_1C8660, v65 + v134, v64 | 7);
  sub_25680((uint64_t)v63, v66 + v65, type metadata accessor for RowContent);
  v67 = type metadata accessor for Artwork(0);
  v68 = sub_8330(&qword_1FADA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  v69 = sub_2738C();
  v120 = v56 & 1;
  v70 = v135;
  v71 = NowPlayingQueueRow.init(item:artwork:title:subtitle:action:)(&v160, sub_2736C, v158, v125, v124, v122 & 1, v123, v57, v59, v120, v62, sub_27378, v66, v67, &type metadata for QueueModel.Episode, v68, v69);
  v72 = static Alignment.center.getter(v71);
  v133 = v73;
  v134 = v72;
  v74 = *(_QWORD *)(v2 + 88);
  v75 = objc_allocWithZone((Class)UIView);
  swift_retain(v74);
  v76 = objc_msgSend(v75, "init");
  v77 = v138;
  v78 = (uint64_t)v136;
  v79 = v140;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v138 + 16))(v136, v70, v140);
  v80 = v137;
  v81 = (_QWORD *)(v78 + *(int *)(v137 + 36));
  *v81 = v74;
  v81[1] = v76;
  v81[2] = v134;
  v81[3] = v133;
  (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v70, v79);
  v157[2] = v2;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FADB8);
  v83 = sub_273D8();
  v84 = sub_27474();
  v85 = v139;
  View.swipeActions<A>(edge:allowsFullSwipe:content:)(1, 1, sub_273D0, v157, v80, v82, v83, v84);
  v86 = sub_9944(v78, &qword_1FAD80);
  v87 = v144;
  static AccessibilityChildBehavior.combine.getter(v86);
  v160 = v80;
  v161 = v82;
  v162 = v83;
  v163 = v84;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v160, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
  v89 = v131;
  v90 = v141;
  View.accessibilityElement(children:)(v87, v141, OpaqueTypeConformance2);
  (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v87, v147);
  v91 = (*(uint64_t (**)(_BYTE *, uint64_t))(v142 + 8))(v85, v90);
  v92 = static Edge.Set.trailing.getter(v91);
  v93 = sub_24148();
  v95 = v94;
  v96 = 0.0;
  v97 = 0;
  v98 = 0;
  v99 = 0;
  if ((v94 & 1) == 0)
  {
    v96 = EdgeInsets.init(_all:)(*(double *)&v93);
    v97 = v100;
    v98 = v101;
    v99 = v102;
  }
  v103 = v143;
  v104 = (uint64_t)v152;
  v105 = v145;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v143 + 16))(v152, v89, v145);
  v106 = v149;
  v107 = v104 + *(int *)(v149 + 36);
  *(_BYTE *)v107 = v92;
  *(double *)(v107 + 8) = v96;
  *(_QWORD *)(v107 + 16) = v97;
  *(_QWORD *)(v107 + 24) = v98;
  *(_QWORD *)(v107 + 32) = v99;
  *(_BYTE *)(v107 + 40) = v95 & 1;
  (*(void (**)(_BYTE *, uint64_t))(v103 + 8))(v89, v105);
  v108 = type metadata accessor for EpisodeEntity(0);
  v160 = ContentID.stringIdentifier.getter(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
  v161 = v109;
  v159[0] = _swiftEmptyArrayStorage;
  v110 = sub_8330(&qword_1FADF8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE00);
  v112 = sub_27A8C(&qword_1FAE08, &qword_1FAE00, (uint64_t)&protocol conformance descriptor for [A]);
  v113 = v153;
  v114 = v111;
  v115 = v155;
  dispatch thunk of SetAlgebra.init<A>(_:)(v159, v114, v112, v155, v110);
  v116 = sub_274F0();
  v117 = sub_8330(&qword_1FAE18, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  v118 = v148;
  View.appEntity<A>(entityType:identifier:state:)(v108, &v160, v113, v106, v108, v116, v117);
  (*(void (**)(_BYTE *, uint64_t))(v154 + 8))(v113, v115);
  swift_bridgeObjectRelease(v161);
  sub_9944(v104, &qword_1FAD98);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v150 + 32))(v156, v118, v151);
}

uint64_t sub_238B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[5];
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE38);
  __chkstk_darwin(v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE40);
  __chkstk_darwin(v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(a1 + 56);
  v16[2] = *(_OWORD *)(a1 + 40);
  v16[3] = v8;
  v16[4] = *(_OWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 88);
  v9 = *(_OWORD *)(a1 + 24);
  v16[0] = *(_OWORD *)(a1 + 8);
  v16[1] = v9;
  sub_23A24((uint64_t)v7, kMTPreferredArtworkSize, kMTPreferredArtworkSize);
  if (qword_1F9468 != -1)
    swift_once(&qword_1F9468, sub_24368);
  v10 = xmmword_1FA9B8;
  v11 = type metadata accessor for CropCode(0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v13 = static Alignment.top.getter(v12);
  return Artwork.init(artwork:fittingImageSize:isResizable:alignment:cropCodeOverride:contentMode:)(v7, 0, v13, v14, v4, 1, *(double *)&v10, *((double *)&v10 + 1));
}

uint64_t sub_23A24@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  id *v3;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _OWORD v36[4];

  type metadata accessor for ArtworkCrop(0);
  __chkstk_darwin();
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(*v3, "metadataObject");
  if (!v9)
    goto LABEL_8;
  v10 = v9;
  v11 = objc_msgSend(v9, "podcastEpisode");

  if (!v11)
    goto LABEL_8;
  v12 = objc_msgSend(v11, "showArtworkTemplateURL");
  if (!v12)
  {

LABEL_8:
    v31 = type metadata accessor for ArtworkModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 1, 1, v31);
  }
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v16 = v15;

  v17 = objc_msgSend(v11, "podcast");
  v25 = v17;
  if (v17
    && (v26 = objc_msgSend(v17, "identifiers"),
        v25,
        v25 = objc_msgSend(v26, "library"),
        v26,
        v25))
  {
    v27 = objc_msgSend(v25, "databaseID");
    swift_unknownObjectRelease(v25);
    v25 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v29 = v28;

    v30 = 1;
  }
  else
  {
    v29 = 0;
    v30 = 255;
  }
  v36[0] = xmmword_16BA40;
  memset(&v36[1], 0, 41);
  v33 = static ArtworkCrop.boundingBox.getter(v17, v18, v19, v20, v21, v22, v23, v24);
  BYTE2(v35) = 0;
  LOWORD(v35) = static ArtworkFormat.preferredFormat.getter(v33);
  ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)(v14, v16, v25, v29, v30, 0, 255, v36, a2, a3, 3, v8, 0, 0, v35, 0, 0);

  v34 = type metadata accessor for ArtworkModel(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a1, 0, 1, v34);
}

double sub_23CB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void *v28;

  v2 = type metadata accessor for PlaybackController.TransportCommand(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = (void *)a1[1];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE28);
  v12 = (_QWORD *)swift_allocObject(v11, 72, 7);
  *((_OWORD *)v12 + 1) = xmmword_16B3D0;
  v13 = type metadata accessor for PlaybackController.QueueCommand(0);
  v12[7] = v13;
  v12[8] = &protocol witness table for PlaybackController.QueueCommand;
  *__swift_allocate_boxed_opaque_existential_1(v12 + 4) = v10;
  (*(void (**)(void))(*(_QWORD *)(v13 - 8) + 104))();
  v14 = dispatch thunk of PlaybackController.isPlaying.getter(v10);
  if ((v14 & 1) != 0 || (static Podcasts.isBlueMoonEnabled()(v14) & 1) == 0)
  {
    v18 = 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for PlaybackController.TransportCommand.play(_:), v2);
    v16 = v12[2];
    v15 = v12[3];
    if (v16 >= v15 >> 1)
      v12 = sub_134DC0((_QWORD *)(v15 > 1), v16 + 1, 1, v12);
    v27 = v2;
    v28 = &protocol witness table for PlaybackController.TransportCommand;
    v17 = __swift_allocate_boxed_opaque_existential_1(&v26);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v17, v5, v2);
    v12[2] = v16 + 1;
    sub_27890(&v26, (uint64_t)&v12[5 * v16 + 4]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v18 = 257;
  }
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  type metadata accessor for MainActor(0);
  v20 = swift_retain(v9);
  v21 = static MainActor.shared.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_1C86B0, 56, 7);
  v22[2] = v21;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v9;
  v22[5] = v12;
  v22[6] = v18;
  v23 = sub_F0BC4((uint64_t)v8, (uint64_t)&unk_1FAE30, (uint64_t)v22);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_23F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for RowContent(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE20);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 97) == 1)
  {
    v24 = LocalizedStringKey.init(stringLiteral:)(0x535F45564F4D4552, 0xEF52414C55474E49);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    static ButtonRole.destructive.getter();
    v16 = type metadata accessor for ButtonRole(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
    sub_278B8(a1, (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RowContent);
    v17 = *(unsigned __int8 *)(v5 + 80);
    v18 = (v17 + 16) & ~v17;
    v19 = swift_allocObject(&unk_1C8688, v18 + v6, v17 | 7);
    sub_25680((uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for RowContent);
    Button<>.init(_:role:action:)(v24, v11, v13 & 1, v15, v9, sub_2774C, v19);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FADF0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
  }
  else
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FADF0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
}

uint64_t sub_24114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = dispatch thunk of PlaybackController.queueController.getter();
  dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(_:)(v1);
  return swift_release(v2);
}

uint64_t sub_24148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  if ((*(_BYTE *)(v0 + 96) & 1) == 0)
  {
    v8 = type metadata accessor for RowContent(0);
    sub_562D8((uint64_t)v6);
    v9 = type metadata accessor for DeviceMetrics.Layout(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      sub_2808C((uint64_t)v6, (uint64_t)v4, &qword_1FDE80);
      v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v4, v9);
      if (v11 == enum case for DeviceMetrics.Layout.compact(_:))
      {
        v12 = v0 + *(int *)(v8 + 40);
        v13 = *(_QWORD *)v12;
        v14 = *(_BYTE *)(v12 + 8);
        sub_2609C(*(_QWORD *)v12, v14);
        v15 = sub_56304(v13, v14);
        sub_261F4(v13, v14);
        v7 = v15 + -13.5;
        goto LABEL_11;
      }
      if (v11 == enum case for DeviceMetrics.Layout.regular(_:))
      {
        v7 = 16.0;
        goto LABEL_11;
      }
      if (v11 == enum case for DeviceMetrics.Layout.regularExtended(_:))
      {
        v16 = v0 + *(int *)(v8 + 40);
        v17 = *(_QWORD *)v16;
        v18 = *(_BYTE *)(v16 + 8);
        sub_2609C(*(_QWORD *)v16, v18);
        v19 = sub_56304(v17, v18);
        sub_261F4(v17, v18);
        v7 = v19;
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
    }
    v7 = 0.0;
LABEL_11:
    sub_9944((uint64_t)v6, &qword_1FDE80);
    return *(_QWORD *)&v7;
  }
  v7 = 0.0;
  return *(_QWORD *)&v7;
}

int64x2_t sub_24368()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_1FA9B8 = (__int128)result;
  return result;
}

id sub_24388()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextMenuInteractionView.Coordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextMenuInteractionView.Coordinator()
{
  return objc_opt_self(_TtCV12NowPlayingUIP33_C8BCF05C99D7B0078CF39713D7397BF626ContextMenuInteractionView11Coordinator);
}

uint64_t destroy for QueueView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  return swift_release(a1[7]);
}

uint64_t initializeWithCopy for QueueView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2[4];
  *(_QWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  v7 = a2[7];
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for QueueView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a1[4];
  v11 = a2[4];
  a1[4] = v11;
  swift_retain(v11);
  swift_release(v10);
  a1[5] = a2[5];
  a1[6] = a2[6];
  v12 = a1[7];
  v13 = a2[7];
  a1[7] = v13;
  swift_retain(v13);
  swift_release(v12);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for QueueView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(a1[3]);
  v5 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  a1[5] = *(_QWORD *)(a2 + 40);
  a1[6] = *(_QWORD *)(a2 + 48);
  v6 = a1[7];
  a1[7] = *(_QWORD *)(a2 + 56);
  swift_release(v6);
  return a1;
}

uint64_t _s10AttributesVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s10AttributesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueueView()
{
  return &type metadata for QueueView;
}

uint64_t sub_2468C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19D954, 1);
}

uint64_t sub_2469C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1FD34(*(_QWORD *)(v1 + 16), a1);
}

void *sub_246A4(uint64_t a1)
{
  uint64_t v1;

  return sub_280D0(a1, *(void **)(v1 + 8));
}

uint64_t sub_246C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t result;
  _BYTE v8[40];
  _OWORD v9[2];
  uint64_t v10;

  v3 = *v1;
  memset(v9, 0, sizeof(v9));
  v10 = 0;
  v4 = objc_allocWithZone((Class)type metadata accessor for ContextMenuInteractionView.Coordinator());
  sub_2808C((uint64_t)v9, (uint64_t)v8, &qword_1FAF20);
  v5 = swift_retain(v3);
  v6 = sub_61BD8(v5, (uint64_t)v8);
  swift_release(v3);
  result = sub_9944((uint64_t)v9, &qword_1FAF20);
  *a1 = v6;
  return result;
}

uint64_t sub_2475C(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_2479C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_28194();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_247EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_28194();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_2483C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_28194();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_24860()
{
  return EnvironmentValues.deviceMetrics.getter();
}

uint64_t sub_24880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24894(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for DeviceMetrics, (uint64_t (*)(char *))&EnvironmentValues.deviceMetrics.setter);
}

uint64_t sub_24894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  __chkstk_darwin();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

__n128 sub_24910@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16BAF0);
  v5 = swift_getKeyPath(&unk_16BB18);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v13;
  result = v11;
  v8 = v12;
  v9 = v14;
  *(_QWORD *)a2 = v10;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = v9;
  return result;
}

uint64_t sub_249B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  _QWORD v14[8];

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_16BAF0);
  v11 = swift_getKeyPath(&unk_16BB18);
  v14[0] = v2;
  v14[1] = v3;
  v14[2] = v5;
  v14[3] = v4;
  v14[4] = v7;
  v14[5] = v6;
  v14[6] = v8;
  v14[7] = v9;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_retain(v10);
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v14, v10, KeyPath, v11);
}

uint64_t sub_24A74@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24BF0(a1, (uint64_t)&unk_16BB38, (uint64_t)&unk_16BB60, a2);
}

uint64_t sub_24A88@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24BF0(a1, (uint64_t)&unk_16BB38, (uint64_t)&unk_16BB60, a2);
}

uint64_t sub_24AAC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_24CA0(a1, a2, a3, a4, (uint64_t)&unk_16BB38, (uint64_t)&unk_16BB60);
}

uint64_t sub_24AC0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_24CA0(a1, a2, a3, a4, (uint64_t)&unk_16BB38, (uint64_t)&unk_16BB60);
}

unint64_t sub_24AE4()
{
  unint64_t result;

  result = qword_1FAA50;
  if (!qword_1FAA50)
  {
    result = swift_getWitnessTable(&unk_16BD04, &type metadata for NowPlayingQueuePlaceholderIfEmpty);
    atomic_store(result, (unint64_t *)&qword_1FAA50);
  }
  return result;
}

uint64_t sub_24B28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_201AC(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_24B30()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_24B74(double a1, double a2)
{
  return sub_203EC(a1, a2);
}

uint64_t *sub_24B7C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  v5 = a1[4];
  swift_retain(a1[7]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_24BDC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24BF0(a1, (uint64_t)&unk_16BB80, (uint64_t)&unk_16BBA8, a2);
}

uint64_t sub_24BF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  result = swift_release(v8);
  *a4 = v10;
  return result;
}

uint64_t sub_24C68@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24BF0(a1, (uint64_t)&unk_16BB80, (uint64_t)&unk_16BBA8, a2);
}

uint64_t sub_24C8C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_24CA0(a1, a2, a3, a4, (uint64_t)&unk_16BB80, (uint64_t)&unk_16BBA8);
}

uint64_t sub_24CA0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_24D0C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_24CA0(a1, a2, a3, a4, (uint64_t)&unk_16BB80, (uint64_t)&unk_16BBA8);
}

uint64_t sub_24D30(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_24D58()
{
  return EnvironmentValues.deviceMetrics.getter();
}

uint64_t sub_24D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24894(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for DeviceMetrics, (uint64_t (*)(char *))&EnvironmentValues.deviceMetrics.setter);
}

uint64_t getEnumTagSinglePayload for NowPlayingQueuePlaceholderIfEmpty(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingQueuePlaceholderIfEmpty(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingQueuePlaceholderIfEmpty()
{
  return &type metadata for NowPlayingQueuePlaceholderIfEmpty;
}

uint64_t *sub_24E44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for NowPlayingSoftQueue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for NowPlayingSoftQueue(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork.BorderTreatment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Artwork.BorderTreatment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingSoftQueue()
{
  return &type metadata for NowPlayingSoftQueue;
}

uint64_t destroy for NowPlayingHardQueue(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t _s12NowPlayingUI19NowPlayingHardQueueVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for NowPlayingHardQueue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NowPlayingHardQueue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingHardQueue(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingHardQueue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingHardQueue()
{
  return &type metadata for NowPlayingHardQueue;
}

unint64_t sub_25164()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAAA0;
  if (!qword_1FAAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAA30);
    sub_251D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAAA0);
  }
  return result;
}

unint64_t sub_251D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAAA8;
  if (!qword_1FAAA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAA08);
    sub_25254();
    sub_27A8C(&qword_1FAAC0, &qword_1FAAC8, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAAA8);
  }
  return result;
}

unint64_t sub_25254()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FAAB0;
  if (!qword_1FAAB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAA00);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FA9F0);
    v2[1] = sub_27A8C(&qword_1FAA20, &qword_1FA9F0, (uint64_t)&protocol conformance descriptor for NowPlayingQueue<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.withPodcastsBridge(_:)>>, 1);
    sub_27A8C(&qword_1FAAB8, &qword_1FAA28, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAAB0);
  }
  return result;
}

uint64_t sub_25320(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DA50, 1);
}

uint64_t sub_25330(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DA28, 1);
}

uint64_t sub_25340(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DA00, 1);
}

unint64_t sub_25350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FAAF8;
  if (!qword_1FAAF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAAE0);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAAD0);
    v2[1] = sub_27A8C(&qword_1FAAF0, &qword_1FAAD0, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.paragraphTypesetting(_:isEnabled:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAAF8);
  }
  return result;
}

uint64_t sub_25404(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_25414()
{
  return objectdestroy_21Tm(32);
}

uint64_t sub_2541C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21A1C(a1, *(_QWORD *)(v2 + 16), 0, a2);
}

uint64_t type metadata accessor for RowContent(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FACC0, (uint64_t)&nominal type descriptor for RowContent);
}

unint64_t sub_2544C()
{
  unint64_t result;

  result = qword_1FAB30;
  if (!qword_1FAB30)
  {
    result = swift_getWitnessTable(&unk_16C010, &type metadata for SoftQueueHeaderView);
    atomic_store(result, (unint64_t *)&qword_1FAB30);
  }
  return result;
}

unint64_t sub_25490()
{
  unint64_t result;

  result = qword_1FAB50;
  if (!qword_1FAB50)
  {
    result = swift_getWitnessTable(&unk_16FFE0, &type metadata for QueueModel.Episode);
    atomic_store(result, (unint64_t *)&qword_1FAB50);
  }
  return result;
}

uint64_t sub_254D4()
{
  return objectdestroy_21Tm(32);
}

uint64_t sub_254DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21A1C(a1, *(_QWORD *)(v2 + 16), 1, a2);
}

uint64_t sub_254F8()
{
  return objectdestroy_21Tm(32);
}

void sub_25500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_B9A40(a1, a2, *(_QWORD *)(v2 + 24));
}

uint64_t sub_25524()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_25548(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
}

void sub_2556C(double *a1@<X8>)
{
  *a1 = EnvironmentValues.displayScale.getter();
}

uint64_t sub_25594(double *a1)
{
  return EnvironmentValues.displayScale.setter(*a1);
}

uint64_t sub_255B8()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_255D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24894(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

void sub_25604(double *a1@<X8>)
{
  *a1 = MCUINamespace<A>.nowPlayingHorizontalPadding.getter();
}

uint64_t sub_2562C(double *a1)
{
  return MCUINamespace<A>.nowPlayingHorizontalPadding.setter(*a1);
}

uint64_t sub_25660()
{
  return DeviceMetrics.layout.getter();
}

uint64_t sub_25680(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256C4()
{
  return objectdestroy_21Tm(33);
}

uint64_t sub_256CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_211D0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_256D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2137C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t type metadata accessor for HardQueueHeaderView(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FAC08, (uint64_t)&nominal type descriptor for HardQueueHeaderView);
}

uint64_t sub_256F8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_2572C()
{
  return objectdestroy_21Tm(33);
}

uint64_t objectdestroy_21Tm(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

ValueMetadata *type metadata accessor for SoftQueueHeaderView()
{
  return &type metadata for SoftQueueHeaderView;
}

uint64_t sub_25780(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v15);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = a2[4];
    v7 = *(int *)(a3 + 32);
    v8 = (uint64_t *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_QWORD *)(a1 + 32) = v6;
    swift_retain(v5);
    swift_retain(v6);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      v16 = *v9;
      *v8 = *v9;
      swift_retain(v16);
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_2587C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 32));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_258FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (uint64_t *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  swift_retain(v4);
  swift_retain(v5);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    v12 = *v8;
    *v7 = *v8;
    swift_retain(v12);
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_259C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v8);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 32);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)(a2 + v10);
    sub_9944(a1 + v10, &qword_1FABA0);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      v16 = *v12;
      *v11 = *v12;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  return a1;
}

uint64_t sub_25AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 32);
    v10 = (void *)(a1 + v9);
    v11 = (const void *)(a2 + v9);
    sub_9944(a1 + v9, &qword_1FABA0);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_25C7C);
}

uint64_t sub_25C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_25CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25D08);
}

uint64_t sub_25D08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_25D80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_16BED8;
  v4[3] = &unk_16BEF0;
  sub_26DB4(319, (unint64_t *)&qword_1FAC18, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_25E28(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    v9 = (void *)a2[1];
    v8 = (void *)a2[2];
    *(_QWORD *)(a1 + 8) = v9;
    v10 = (void *)a2[3];
    v11 = *((_BYTE *)a2 + 32);
    swift_retain(v5);
    v12 = v9;
    sub_1B140(v8, v10, v11);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v11;
    v13 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v13;
    v14 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v15 = a2[11];
    *(_QWORD *)(a1 + 88) = v15;
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    *(_BYTE *)(a1 + 97) = *((_BYTE *)a2 + 97);
    v16 = a2[13];
    LOBYTE(v9) = *((_BYTE *)a2 + 112);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    swift_retain(v15);
    sub_2609C(v16, (char)v9);
    *(_QWORD *)(a1 + 104) = v16;
    *(_BYTE *)(a1 + 112) = (_BYTE)v9;
    v17 = a3[9];
    v18 = (uint64_t *)(a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      v22 = 1;
    }
    else
    {
      v23 = *v19;
      *v18 = *v19;
      swift_retain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v22);
    v24 = a3[10];
    v25 = a1 + v24;
    v26 = (uint64_t)a2 + v24;
    v27 = *(_QWORD *)v26;
    v28 = *(_BYTE *)(v26 + 8);
    sub_2609C(*(_QWORD *)v26, v28);
    *(_QWORD *)v25 = v27;
    *(_BYTE *)(v25 + 8) = v28;
    v29 = a3[11];
    v30 = (uint64_t *)(a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
    if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
    {
      v33 = type metadata accessor for DeviceMetrics.Layout(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v34 + 16))(v30, v31, v33);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
      }
      v37 = v30;
      v38 = v32;
      v39 = 1;
    }
    else
    {
      v36 = *v31;
      *v30 = *v31;
      swift_retain(v36);
      v37 = v30;
      v38 = v32;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
  }
  return a1;
}

uint64_t sub_2609C(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

void sub_260A8(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(*(_QWORD *)a1);

  sub_1B164(*(void **)(a1 + 16), *(id *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 88));
  sub_261F4(*(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  v4 = (_QWORD *)(a1 + a2[9]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  sub_261F4(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  v7 = (_QWORD *)(a1 + a2[11]);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DeviceMetrics.Layout(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
}

uint64_t sub_261F4(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_26200(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *a2;
  v7 = (void *)a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = (void *)a2[2];
  v9 = (void *)a2[3];
  v10 = *((_BYTE *)a2 + 32);
  swift_retain(v6);
  v11 = v7;
  sub_1B140(v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  v12 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v12;
  v13 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v14 = a2[11];
  *(_QWORD *)(a1 + 88) = v14;
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_BYTE *)(a1 + 97) = *((_BYTE *)a2 + 97);
  v15 = a2[13];
  LOBYTE(v7) = *((_BYTE *)a2 + 112);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_retain(v14);
  sub_2609C(v15, (char)v7);
  *(_QWORD *)(a1 + 104) = v15;
  *(_BYTE *)(a1 + 112) = (_BYTE)v7;
  v16 = a3[9];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
    v21 = 1;
  }
  else
  {
    v22 = *v18;
    *v17 = *v18;
    swift_retain(v22);
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v19, v21);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = (uint64_t)a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_BYTE *)(v25 + 8);
  sub_2609C(*(_QWORD *)v25, v27);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v27;
  v28 = a3[11];
  v29 = (uint64_t *)(a1 + v28);
  v30 = (uint64_t *)((char *)a2 + v28);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for DeviceMetrics.Layout(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v35 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v33 + 16))(v29, v30, v32);
      v35 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
  }
  else
  {
    v36 = *v30;
    *v29 = *v30;
    swift_retain(v36);
    v35 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v31, v35);
  return a1;
}

uint64_t *sub_26448(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[1];
  v9 = (void *)a1[1];
  a1[1] = (uint64_t)v8;
  v10 = v8;

  v11 = (void *)a2[2];
  v12 = (void *)a2[3];
  v13 = *((_BYTE *)a2 + 32);
  sub_1B140(v11, v12, v13);
  v14 = (void *)a1[2];
  v15 = (void *)a1[3];
  a1[2] = (uint64_t)v11;
  a1[3] = (uint64_t)v12;
  v16 = *((_BYTE *)a1 + 32);
  *((_BYTE *)a1 + 32) = v13;
  sub_1B164(v14, v15, v16);
  a1[5] = a2[5];
  v17 = a2[6];
  v18 = a1[6];
  a1[6] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  a1[7] = a2[7];
  v19 = a2[8];
  v20 = a1[8];
  a1[8] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  a1[9] = a2[9];
  *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
  v21 = a1[11];
  v22 = a2[11];
  a1[11] = v22;
  swift_retain(v22);
  swift_release(v21);
  *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
  *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
  v23 = a2[13];
  LOBYTE(v12) = *((_BYTE *)a2 + 112);
  sub_2609C(v23, (char)v12);
  v24 = a1[13];
  v25 = *((_BYTE *)a1 + 112);
  a1[13] = v23;
  *((_BYTE *)a1 + 112) = (_BYTE)v12;
  sub_261F4(v24, v25);
  if (a1 != a2)
  {
    v26 = a3[9];
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    sub_9944((uint64_t)a1 + v26, &qword_1FAB78);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
      v31 = 1;
    }
    else
    {
      v32 = *v28;
      *v27 = *v28;
      swift_retain(v32);
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v29, v31);
  }
  v33 = a3[10];
  v34 = (uint64_t)a1 + v33;
  v35 = (uint64_t)a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *(_BYTE *)(v35 + 8);
  sub_2609C(*(_QWORD *)v35, v37);
  v38 = *(_QWORD *)v34;
  v39 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v37;
  sub_261F4(v38, v39);
  if (a1 != a2)
  {
    v40 = a3[11];
    v41 = (uint64_t *)((char *)a1 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    sub_9944((uint64_t)a1 + v40, &qword_1FAB80);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for DeviceMetrics.Layout(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        v47 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v45 + 16))(v41, v42, v44);
        v47 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
      }
    }
    else
    {
      v48 = *v42;
      *v41 = *v42;
      swift_retain(v48);
      v47 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v47);
  }
  return a1;
}

uint64_t sub_26724(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 24) = v6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[10];
  v14 = a3[11];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = (void *)(a1 + v14);
  v18 = (const void *)(a2 + v14);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DeviceMetrics.Layout(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v17, v18, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_2690C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = (void *)a1[1];
  a1[1] = a2[1];

  v8 = *((_BYTE *)a2 + 32);
  v9 = (void *)a1[2];
  v10 = (void *)a1[3];
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  v11 = *((_BYTE *)a1 + 32);
  *((_BYTE *)a1 + 32) = v8;
  sub_1B164(v9, v10, v11);
  v12 = a2[6];
  v13 = a1[6];
  a1[5] = a2[5];
  a1[6] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[8];
  v15 = a1[8];
  a1[7] = a2[7];
  a1[8] = v14;
  swift_bridgeObjectRelease(v15);
  a1[9] = a2[9];
  *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
  v16 = a1[11];
  a1[11] = a2[11];
  swift_release(v16);
  *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
  *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
  v17 = *((_BYTE *)a2 + 112);
  v18 = a1[13];
  v19 = *((_BYTE *)a1 + 112);
  a1[13] = a2[13];
  *((_BYTE *)a1 + 112) = v17;
  sub_261F4(v18, v19);
  if (a1 != a2)
  {
    v20 = a3[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_9944((uint64_t)a1 + v20, &qword_1FAB78);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload(v21, v23, 1);
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v25 = a3[10];
  v26 = (uint64_t)a1 + v25;
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = *v27;
  LOBYTE(v27) = *((_BYTE *)v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = (_BYTE)v27;
  sub_261F4(v29, v30);
  if (a1 != a2)
  {
    v31 = a3[11];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    sub_9944((uint64_t)a1 + v31, &qword_1FAB80);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
    if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
    {
      v35 = type metadata accessor for DeviceMetrics.Layout(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v33, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
      }
      swift_storeEnumTagMultiPayload(v32, v34, 1);
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_26B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_26B98);
}

uint64_t sub_26B98(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAC58);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAC60);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_26C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_26C4C);
}

char *sub_26C4C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAC58);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAC60);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_26CF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = "X";
  v6[2] = &unk_16BED8;
  v6[3] = &unk_16BED8;
  v6[4] = &unk_16BF30;
  sub_26DB4(319, &qword_1FACD0, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v6[6] = &unk_16BF30;
    sub_26E00(319);
    if (v5 <= 0x3F)
    {
      v6[7] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

void sub_26DB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_26E00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FACD8)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FDE80);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FACD8);
  }
}

unint64_t sub_26E5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FAD20;
  if (!qword_1FAD20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD28);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAAE0);
    v2[1] = sub_25350();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FAD20);
  }
  return result;
}

unint64_t sub_26EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAD30;
  if (!qword_1FAD30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD38);
    sub_26F50();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FAD30);
  }
  return result;
}

unint64_t sub_26F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAD40;
  if (!qword_1FAD40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAB18);
    sub_27084(&qword_1FAB58, &qword_1FAB10, &qword_1FAB60, &qword_1FAB08);
    sub_27A8C(&qword_1FAB60, &qword_1FAB08, (uint64_t)&protocol conformance descriptor for NowPlayingQueueSection<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAD40);
  }
  return result;
}

unint64_t sub_27000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAD48;
  if (!qword_1FAD48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD50);
    sub_27084(&qword_1FAD58, &qword_1FAB90, &qword_1FAD60, &qword_1FAB88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FAD48);
  }
  return result;
}

uint64_t sub_27084(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_27A8C(a3, a4, (uint64_t)&protocol conformance descriptor for NowPlayingQueueSection<A, B>);
    sub_27A8C(&qword_1FAB68, &qword_1FAB70, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2711C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DAC8, 1);
}

uint64_t sub_2712C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DAA0, 1);
}

uint64_t sub_2713C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DA78, 1);
}

uint64_t sub_2714C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  sub_25404(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_27188(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v22;
  int v23;
  uint64_t v24;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v24 = *(_QWORD *)(a1 + 56);
  v6 = *(void **)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v22 = *(unsigned __int8 *)(a2 + 80);
  v23 = *(unsigned __int8 *)(a1 + 80);
  sub_27330();
  if ((static NSObject.== infix(_:_:)(v2, v6) & 1) == 0)
    goto LABEL_8;
  if (v3 == v8 && v4 == v7
    || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v8, v7, 0), v12 = 0, (v11 & 1) != 0))
  {
    if (v24 == v10 && v5 == v9)
    {
      if (v23 != v22)
      {
LABEL_8:
        v12 = 0;
        return v12 & 1;
      }
    }
    else
    {
      v12 = 0;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v24, v5, v10, v9, 0) & 1) == 0 || ((v23 ^ v22) & 1) != 0)
        return v12 & 1;
    }
    v13 = objc_msgSend(v2, "contentItemIdentifier");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = objc_msgSend(v6, "contentItemIdentifier");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    if (v14 == v18 && v16 == v20)
    {
      v12 = 1;
      v20 = v16;
    }
    else
    {
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v20, 0);
    }
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
  }
  return v12 & 1;
}

unint64_t sub_27330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FA930;
  if (!qword_1FA930)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FA930);
  }
  return result;
}

uint64_t sub_2736C()
{
  uint64_t v0;

  return sub_238B4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_27378()
{
  return sub_27760(type metadata accessor for RowContent, (uint64_t (*)(uint64_t))sub_23CB4);
}

unint64_t sub_2738C()
{
  unint64_t result;

  result = qword_1FADB0;
  if (!qword_1FADB0)
  {
    result = swift_getWitnessTable(&unk_16FFB8, &type metadata for QueueModel.Episode);
    atomic_store(result, (unint64_t *)&qword_1FADB0);
  }
  return result;
}

uint64_t sub_273D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F14(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_273D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FADC0;
  if (!qword_1FADC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD80);
    sub_27A8C(&qword_1FADC8, &qword_1FAD78, (uint64_t)&protocol conformance descriptor for NowPlayingQueueRow<A, B>);
    sub_27A8C(&qword_1FADD0, &qword_1FADD8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FADC0);
  }
  return result;
}

unint64_t sub_27474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FADE0;
  if (!qword_1FADE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FADB8);
    sub_27A8C(&qword_1FADE8, &qword_1FADF0, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FADE0);
  }
  return result;
}

unint64_t sub_274F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = qword_1FAE10;
  if (!qword_1FAE10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD98);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD88);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD80);
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FADB8);
    v6 = sub_273D8();
    v7 = sub_27474();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAE10);
  }
  return result;
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for RowContent(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));

  sub_1B164(*(void **)(v6 + 16), *(id *)(v6 + 24), *(_BYTE *)(v6 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 64));
  swift_release(*(_QWORD *)(v0 + v4 + 88));
  sub_261F4(*(_QWORD *)(v6 + 104), *(_BYTE *)(v6 + 112));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB78);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  sub_261F4(*(_QWORD *)(v6 + v1[10]), *(_BYTE *)(v6 + v1[10] + 8));
  v10 = (_QWORD *)(v6 + v1[11]);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAB80);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DeviceMetrics.Layout(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_2774C()
{
  return sub_27760(type metadata accessor for RowContent, sub_24114);
}

uint64_t sub_27760(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

_QWORD *__swift_allocate_boxed_opaque_existential_1(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_277DC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_27810(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1FFBF4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_281D8;
  return sub_BBE20(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_27890(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_278A8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_278B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_27900()
{
  return sub_27760(type metadata accessor for HardQueueHeaderView, (uint64_t (*)(uint64_t))sub_22768);
}

uint64_t sub_27914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22890(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_27924()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAEA0;
  if (!qword_1FAEA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAE78);
    sub_279A8();
    sub_27A8C(&qword_1FAEC0, &qword_1FAEC8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAEA0);
  }
  return result;
}

unint64_t sub_279A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = qword_1FAEA8;
  if (!qword_1FAEA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAE70);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FADF0);
    v2[1] = &type metadata for String;
    v2[2] = v2[0];
    v3 = sub_27A8C(&qword_1FADE8, &qword_1FADF0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v4 = sub_11CEC();
    v5 = v3;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>, 1);
    sub_27A8C(&qword_1FAEB0, &qword_1FAEB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAEA8);
  }
  return result;
}

uint64_t sub_27A8C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_82Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for HardQueueHeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_27B88()
{
  return sub_27760(type metadata accessor for HardQueueHeaderView, (uint64_t (*)(uint64_t))sub_22A14);
}

uint64_t sub_27BA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1FFBFC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_281D8;
  return sub_BC598(a1, v4, v5, v6);
}

uint64_t objectdestroy_92Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_27C3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1FFBFC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_27CA8;
  return sub_BC598(a1, v4, v5, v6);
}

uint64_t sub_27CA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextMenuInteractionView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = (uint64_t)v4;
  swift_retain(v3);
  v5 = v4;
  return a1;
}

void destroy for ContextMenuInteractionView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

}

uint64_t *assignWithCopy for ContextMenuInteractionView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = (uint64_t)v6;
  v8 = v6;

  return a1;
}

_QWORD *assignWithTake for ContextMenuInteractionView(_QWORD *a1, _OWORD *a2)
{
  void *v4;

  swift_release(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamContainer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShazamContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuInteractionView()
{
  return &type metadata for ContextMenuInteractionView;
}

unint64_t sub_27E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAEF0;
  if (!qword_1FAEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAEF8);
    sub_27A8C(&qword_1FAD70, &qword_1FAD68, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAEF0);
  }
  return result;
}

uint64_t sub_27F10()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAD98);
  v1[1] = type metadata accessor for EpisodeEntity(255);
  v1[2] = sub_274F0();
  v1[3] = sub_8330(&qword_1FAE18, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeEntity, (uint64_t)&protocol conformance descriptor for EpisodeEntity);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.appEntity<A>(entityType:identifier:state:)>>, 1);
}

unint64_t sub_27F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAF08;
  if (!qword_1FAF08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAF10);
    sub_27A8C(&qword_1FAE58, &qword_1FAE48, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAF08);
  }
  return result;
}

void *sub_28038()
{
  return &protocol witness table for Never;
}

unint64_t sub_28048()
{
  unint64_t result;

  result = qword_1FAF18;
  if (!qword_1FAF18)
  {
    result = swift_getWitnessTable(&unk_16C090, &type metadata for ContextMenuInteractionView);
    atomic_store(result, (unint64_t *)&qword_1FAF18);
  }
  return result;
}

uint64_t sub_2808C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_280D0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v8;

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(a2, "setBackgroundColor:", v3);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF28);
  UIViewRepresentableContext.coordinator.getter(&v8, v4);
  v5 = v8;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v8);

  objc_msgSend(a2, "addInteraction:", v6);
  return a2;
}

unint64_t sub_28194()
{
  unint64_t result;

  result = qword_1FAF30;
  if (!qword_1FAF30)
  {
    result = swift_getWitnessTable(&unk_16C0E0, &type metadata for ContextMenuInteractionView);
    atomic_store(result, (unint64_t *)&qword_1FAF30);
  }
  return result;
}

uint64_t *sub_281F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v5);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      v23 = *v17;
      *v16 = *v17;
      swift_retain(v23);
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return a1;
}

double sub_28348(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  }
  return result;
}

uint64_t *sub_2841C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_retain(v6);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = *(int *)(a3 + 24);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  return a1;
}

uint64_t *sub_28548(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_9944((uint64_t)a1 + v8, (uint64_t *)&unk_1FE3C0);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    sub_9944((uint64_t)a1 + v15, &qword_1FABA0);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      v21 = *v17;
      *v16 = *v17;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
  }
  return a1;
}

_QWORD *sub_286A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_287D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_9944((uint64_t)a1 + v7, (uint64_t *)&unk_1FE3C0);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_9944((uint64_t)a1 + v12, &qword_1FABA0);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_28938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_28944);
}

uint64_t sub_28944(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_289EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_289F8);
}

char *sub_289F8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SpeakerContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1FAFA0;
  if (!qword_1FAFA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SpeakerContentView);
  return result;
}

void sub_28AD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_26DB4(319, (unint64_t *)&qword_1FAFB0, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceMetrics);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_26DB4(319, (unint64_t *)&qword_1FAC18, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_28B8C()
{
  return sub_8330(&qword_1FDF50, type metadata accessor for SpeakerContent, (uint64_t)&unk_171260);
}

uint64_t sub_28BB8(uint64_t a1)
{
  uint64_t result;

  result = sub_8330((unint64_t *)&unk_1FE390, type metadata accessor for SpeakerContentView, (uint64_t)&unk_16C1B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_28BF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DB18, 1);
}

uint64_t sub_28C04@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v27 = a1;
  v3 = type metadata accessor for SpeakerContentView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB008);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB010);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v9 = static Alignment.center.getter(v11);
  v9[1] = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB018);
  sub_28E24(v2, (uint64_t)v9 + *(int *)(v15 + 44));
  sub_278B8((uint64_t)v2, (uint64_t)v6, type metadata accessor for SpeakerContentView);
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = v17 + v5;
  v19 = v16 | 7;
  v20 = swift_allocObject(&unk_1C8928, v18, v16 | 7);
  sub_29888((uint64_t)v6, v20 + v17);
  sub_2808C((uint64_t)v9, (uint64_t)v13, &qword_1FB008);
  v21 = (uint64_t (**)())&v13[*(int *)(v10 + 36)];
  *v21 = sub_298CC;
  v21[1] = (uint64_t (*)())v20;
  v21[2] = 0;
  v21[3] = 0;
  sub_9944((uint64_t)v9, &qword_1FB008);
  sub_278B8((uint64_t)v2, (uint64_t)v6, type metadata accessor for SpeakerContentView);
  v22 = swift_allocObject(&unk_1C8950, v18, v19);
  sub_29888((uint64_t)v6, v22 + v17);
  v23 = v27;
  sub_2808C((uint64_t)v13, v27, &qword_1FB010);
  v24 = (_QWORD *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FB020) + 36));
  *v24 = 0;
  v24[1] = 0;
  v24[2] = sub_299E4;
  v24[3] = v22;
  return sub_9944((uint64_t)v13, &qword_1FB010);
}

uint64_t sub_28E24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, _QWORD, uint64_t);
  char v47;
  void (*v48)(_BYTE *, uint64_t);
  double v49;
  uint64_t v50;
  char v51;
  unsigned int *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __n128 v60;
  char v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  double *v70;
  uint64_t v71;
  char v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  double *v81;
  uint64_t v82;
  char v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  double *v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  __n128 v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE v108[4];
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD v139[2];

  v4 = type metadata accessor for DeviceMetrics.Padding(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v135 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DeviceMetrics(0);
  v133 = *(_QWORD *)(v7 - 8);
  v134 = v7;
  __chkstk_darwin(v7);
  v132 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v9);
  v123 = &v108[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v122 = type metadata accessor for BlendMode(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v119 = &v108[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for ColorSchemeContrast(0);
  v116 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = &v108[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v17 = &v108[-v16];
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB030);
  __chkstk_darwin(v117);
  v19 = &v108[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB038);
  __chkstk_darwin(v118);
  v124 = &v108[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB040);
  __chkstk_darwin(v120);
  v127 = &v108[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB048);
  __chkstk_darwin(v125);
  v128 = &v108[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB050);
  __chkstk_darwin(v126);
  v131 = &v108[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB058);
  v136 = *(_QWORD *)(v24 - 8);
  v137 = v24;
  v25 = __chkstk_darwin(v24);
  v130 = &v108[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  v129 = &v108[-v27];
  v138 = a1;
  v28 = *a1;
  KeyPath = swift_getKeyPath(&unk_16C228);
  v139[0] = v28;
  v30 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v139, KeyPath, v30);
  v31 = swift_release(KeyPath);
  if (*(_BYTE *)(v28 + 33) == 1)
  {
    v113 = v5;
    v114 = v4;
    v115 = a2;
    v32 = *(_QWORD *)(v28 + 24);
    v139[0] = *(_QWORD *)(v28 + 16);
    v139[1] = v32;
    v33 = sub_11CEC();
    swift_bridgeObjectRetain(v32);
    v34 = Text.init<A>(_:)(v139, &type metadata for String, v33);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    if (qword_1F9470 != -1)
      swift_once(&qword_1F9470, sub_29A2C);
    v110 = Text.font(_:)(qword_1FAF38, v34, v36, v38 & 1, v40);
    v42 = v41;
    v109 = v43;
    v111 = v44;
    sub_25404(v34, v36, v38 & 1);
    swift_bridgeObjectRelease(v40);
    v112 = type metadata accessor for SpeakerContentView(0);
    sub_562AC((uint64_t)v17);
    v45 = v116;
    v46 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v116 + 104);
    v46(v15, enum case for ColorSchemeContrast.increased(_:), v12);
    v47 = static ColorSchemeContrast.== infix(_:_:)(v17, v15);
    v48 = *(void (**)(_BYTE *, uint64_t))(v45 + 8);
    v48(v15, v12);
    v48(v17, v12);
    if ((v47 & 1) != 0)
    {
      v49 = 0.55;
    }
    else if (sub_C0D20())
    {
      v49 = 0.55;
    }
    else
    {
      v49 = 0.25;
    }
    sub_562AC((uint64_t)v17);
    v46(v15, enum case for ColorSchemeContrast.standard(_:), v12);
    v51 = static ColorSchemeContrast.== infix(_:_:)(v17, v15);
    v48(v15, v12);
    v48(v17, v12);
    v52 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    v53 = v121;
    if ((v51 & 1) == 0)
      v52 = (unsigned int *)&enum case for BlendMode.normal(_:);
    v54 = v119;
    v55 = v122;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v121 + 104))(v119, *v52, v122);
    v56 = (uint64_t)v123;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v53 + 16))(v123, v54, v55);
    sub_278B8(v56, (uint64_t)&v19[*(int *)(v117 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    v57 = v110;
    *(_QWORD *)v19 = v110;
    *((_QWORD *)v19 + 1) = v42;
    v58 = v109 & 1;
    v19[16] = v109 & 1;
    v59 = v111;
    *((_QWORD *)v19 + 3) = v111;
    *((double *)v19 + 4) = v49;
    sub_278A8(v57, v42, v58);
    swift_bridgeObjectRetain(v59);
    sub_29BA4(v56);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v54, v55);
    sub_25404(v57, v42, v58);
    v60 = swift_bridgeObjectRelease(v59);
    v61 = static Edge.Set.top.getter(v60);
    v62 = EdgeInsets.init(_all:)(13.0);
    v64 = v63;
    v66 = v65;
    v68 = v67;
    v69 = v124;
    sub_2808C((uint64_t)v19, (uint64_t)v124, &qword_1FB030);
    v70 = (double *)&v69[*(int *)(v118 + 36)];
    *(_BYTE *)v70 = v61;
    v70[1] = v62;
    *((_QWORD *)v70 + 2) = v64;
    *((_QWORD *)v70 + 3) = v66;
    *((_QWORD *)v70 + 4) = v68;
    *((_BYTE *)v70 + 40) = 0;
    v71 = sub_9944((uint64_t)v19, &qword_1FB030);
    v72 = static Edge.Set.bottom.getter(v71);
    v73 = EdgeInsets.init(_all:)(5.0);
    v75 = v74;
    v77 = v76;
    v79 = v78;
    v80 = v127;
    sub_2808C((uint64_t)v69, (uint64_t)v127, &qword_1FB038);
    v81 = (double *)&v80[*(int *)(v120 + 36)];
    *(_BYTE *)v81 = v72;
    v81[1] = v73;
    *((_QWORD *)v81 + 2) = v75;
    *((_QWORD *)v81 + 3) = v77;
    *((_QWORD *)v81 + 4) = v79;
    *((_BYTE *)v81 + 40) = 0;
    v82 = sub_9944((uint64_t)v69, &qword_1FB038);
    v83 = static Edge.Set.leading.getter(v82);
    v84 = v132;
    v85 = sub_56730((uint64_t)v132);
    v86 = v135;
    DeviceMetrics.padding.getter(v85);
    v87 = (*(uint64_t (**)(_BYTE *, uint64_t))(v133 + 8))(v84, v134);
    v88 = DeviceMetrics.Padding.horizontal.getter(v87);
    (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v86, v114);
    v89 = EdgeInsets.init(_all:)(v88);
    v91 = v90;
    v93 = v92;
    v95 = v94;
    v96 = v128;
    sub_2808C((uint64_t)v80, (uint64_t)v128, &qword_1FB040);
    v97 = (double *)&v96[*(int *)(v125 + 36)];
    *(_BYTE *)v97 = v83;
    v97[1] = v89;
    *((_QWORD *)v97 + 2) = v91;
    *((_QWORD *)v97 + 3) = v93;
    *((_QWORD *)v97 + 4) = v95;
    *((_BYTE *)v97 + 40) = 0;
    sub_9944((uint64_t)v80, &qword_1FB040);
    v98 = swift_getKeyPath(&unk_16C250);
    v99 = v131;
    sub_2808C((uint64_t)v96, (uint64_t)v131, &qword_1FB048);
    v100 = &v99[*(int *)(v126 + 36)];
    *(_QWORD *)v100 = v98;
    v100[8] = 0;
    sub_9944((uint64_t)v96, &qword_1FB048);
    v102 = static Alignment.leading.getter(v101);
    v103 = v130;
    sub_10A628(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v130, 0.0, 1, 0.0, 1, v102, v104);
    sub_9944((uint64_t)v99, &qword_1FB050);
    v105 = (uint64_t)v103;
    v106 = v129;
    sub_29BE8(v105, (uint64_t)v129);
    a2 = v115;
    sub_29BE8((uint64_t)v106, v115);
    v50 = 0;
  }
  else
  {
    v50 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v136 + 56))(a2, v50, 1, v137, v31);
}

double sub_29734(uint64_t *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double result;
  _QWORD v5[3];
  char v6;
  uint64_t v7;

  v1 = *a1;
  KeyPath = swift_getKeyPath(&unk_16C200);
  v5[2] = v1;
  v6 = 1;
  v7 = v1;
  v3 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_29D30, v5, (char *)&type metadata for () + 8, v3);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_297DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double result;
  _QWORD v5[3];
  char v6;
  uint64_t v7;

  v1 = *a1;
  KeyPath = swift_getKeyPath(&unk_16C200);
  v5[2] = v1;
  v6 = 0;
  v7 = v1;
  v3 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_29B80, v5, (char *)&type metadata for () + 8, v3);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_29888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpeakerContentView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_298CC()
{
  return sub_299F0((uint64_t (*)(uint64_t))sub_29734);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for SpeakerContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_299E4()
{
  return sub_299F0((uint64_t (*)(uint64_t))sub_297DC);
}

uint64_t sub_299F0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SpeakerContentView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_29A2C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.footnote(_:), v3);
  v7 = enum case for Font.Design.default(_:);
  v8 = type metadata accessor for Font.Design(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  v10 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  v11 = static Font.Weight.medium.getter(v10);
  v12 = static Font.system(_:design:weight:)(v6, v2, *(_QWORD *)&v11, 0);
  sub_9944((uint64_t)v2, &qword_1FB060);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_1FAF38 = v12;
  return result;
}

uint64_t sub_29B80()
{
  uint64_t v0;

  return sub_C0FD4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_29BA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_29BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_29C30()
{
  return sub_29C78(&qword_1FB068, &qword_1FB020, (void (*)(void))sub_29C5C);
}

uint64_t sub_29C5C()
{
  return sub_29C78(&qword_1FB070, &qword_1FB010, (void (*)(void))sub_29CE4);
}

uint64_t sub_29C78(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_29CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB078;
  if (!qword_1FB078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB008);
    result = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1FB078);
  }
  return result;
}

uint64_t sub_29D30()
{
  return sub_29B80();
}

_QWORD *initializeBufferWithCopyOfBuffer for MiniPlayerSublineView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for MiniPlayerSublineView(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for MiniPlayerSublineView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

_QWORD *assignWithTake for MiniPlayerSublineView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingTip()
{
  return &type metadata for NowPlayingTip;
}

uint64_t sub_29DF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DB80, 1);
}

double sub_29E08@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;

  KeyPath = swift_getKeyPath(&unk_16C2F0);
  v5 = swift_getKeyPath(&unk_16C318);
  v6 = swift_retain(a1);
  static Published.subscript.getter(&v31, v6, KeyPath, v5);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = v32;
  if ((_QWORD)v32)
  {
    v8 = v31;
    v24 = *((_QWORD *)&v31 + 1);
    v25 = v31;
    v9 = *((_QWORD *)&v32 + 1);
    v10 = v33;
    v11 = v34;
    v12 = v35;
    v23 = *((_QWORD *)&v34 + 1);
    LOBYTE(v26) = 0;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v10);
    swift_retain(v11);
    swift_retain(v12);
    State.init(wrappedValue:)(&v31, &v26, &type metadata for Bool);
    v13 = *((_QWORD *)&v31 + 1);
    *(_QWORD *)&v26 = v8;
    *((_QWORD *)&v26 + 1) = *((_QWORD *)&v8 + 1);
    *(_QWORD *)&v27 = v7;
    *((_QWORD *)&v27 + 1) = v9;
    v28 = v10;
    *(_QWORD *)&v29 = v11;
    *((_QWORD *)&v29 + 1) = v23;
    *(_QWORD *)&v30[0] = v12;
    *((_QWORD *)&v30[0] + 1) = v31;
    *(_QWORD *)&v30[1] = *((_QWORD *)&v31 + 1);
    BYTE8(v30[1]) = 1;
    v14 = sub_2AAC8();
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v10);
    swift_retain(v11);
    swift_retain(v12);
    swift_retain(v13);
    _ConditionalContent<>.init(storage:)(&v26, &type metadata for EmptyView, &type metadata for TipOverlayView, &protocol witness table for EmptyView, v14);
    sub_2AB0C(v25, v24, v7, v9, v10, *((uint64_t *)&v10 + 1), v11, v23, v12);
    swift_release(v13);
    swift_release(v12);
    swift_release(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v15 = sub_2AAC8();
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    memset(v30, 0, 25);
    _ConditionalContent<>.init(storage:)(&v26, &type metadata for EmptyView, &type metadata for TipOverlayView, &protocol witness table for EmptyView, v15);
  }
  result = *(double *)&v31;
  v17 = v32;
  v18 = v33;
  v19 = v34;
  v20 = v35;
  v21 = v36;
  v22 = v37;
  *(_OWORD *)a2 = v31;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_OWORD *)(a2 + 48) = v19;
  *(_OWORD *)(a2 + 64) = v20;
  *(_QWORD *)(a2 + 80) = v21;
  *(_BYTE *)(a2 + 88) = v22;
  return result;
}

double sub_2A038@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_29E08(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_2A040@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE v51[12];
  unsigned int v52;
  uint64_t v53;
  uint64_t (*v54)();
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _QWORD v70[2];
  unsigned __int8 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)();
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v2 = v1;
  v68 = a1;
  v60 = type metadata accessor for NowPlayingButtonID(0);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v58 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for NowPlayingGeometryIdentifier(0);
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  __chkstk_darwin(v4);
  v57 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB098);
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  __chkstk_darwin(v6);
  v69 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0A0);
  v62 = *(_QWORD *)(v63 - 8);
  v8 = __chkstk_darwin(v63);
  v61 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = static Color.clear.getter(v8);
  v11 = swift_allocObject(&unk_1C8AC0, 104, 7);
  v12 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(v11 + 48) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v11 + 64) = v12;
  *(_OWORD *)(v11 + 80) = *((_OWORD *)v2 + 4);
  *(_QWORD *)(v11 + 96) = *((_QWORD *)v2 + 10);
  v13 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v11 + 32) = v13;
  v73 = v10;
  LOBYTE(v74) = 0;
  v75 = sub_2AF28;
  v76 = v11;
  v77 = 0;
  v78 = 0;
  v72 = *(_OWORD *)(v2 + 72);
  sub_2AF30(v2);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  State.projectedValue.getter(v70, v14);
  v15 = v70[0];
  v16 = v70[1];
  v52 = v71;
  v17 = swift_allocObject(&unk_1C8AE8, 104, 7);
  v18 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(v17 + 48) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v17 + 64) = v18;
  *(_OWORD *)(v17 + 80) = *((_OWORD *)v2 + 4);
  *(_QWORD *)(v17 + 96) = *((_QWORD *)v2 + 10);
  v19 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v17 + 32) = v19;
  v20 = swift_allocObject(&unk_1C8B10, 104, 7);
  v21 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(v20 + 48) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v20 + 64) = v21;
  *(_OWORD *)(v20 + 80) = *((_OWORD *)v2 + 4);
  *(_QWORD *)(v20 + 96) = *((_QWORD *)v2 + 10);
  v22 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v20 + 32) = v22;
  v23 = swift_allocObject(&unk_1C8B38, 104, 7);
  v24 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(v23 + 48) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v23 + 64) = v24;
  *(_OWORD *)(v23 + 80) = *((_OWORD *)v2 + 4);
  *(_QWORD *)(v23 + 96) = *((_QWORD *)v2 + 10);
  v25 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v23 + 32) = v25;
  sub_2AF30(v2);
  sub_2AF30(v2);
  sub_2AF30(v2);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0A8);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0B0);
  v28 = sub_2AFEC();
  v53 = sub_27A8C(&qword_1FB0D8, &qword_1FB0B0, (uint64_t)&protocol conformance descriptor for BubbleTip<A, B, C>);
  v54 = (uint64_t (*)())v28;
  v55 = v27;
  v56 = v26;
  View.popover<A>(isPresented:permittedArrowDirections:isDismissable:passthroughViews:containerView:onAppear:onDismiss:content:)(v15, v16, v52, 2, 1, _swiftEmptyArrayStorage, 0, sub_2AF9C, v17, sub_2AFC0, v20, sub_2AFE4, v23, v26, v27, v28, v53);
  swift_release(v16);
  swift_release(v17);
  swift_release(v20);
  swift_release(v23);
  swift_release(v15);
  swift_release(v73);
  sub_145A0((uint64_t)v75, v76);
  v29 = sub_145A0(v77, v78);
  v30 = *v2;
  if (v30 >= 2)
  {
    v35 = v58;
    v36 = v59;
    v37 = v60;
    v33 = v57;
    if (v30 == 2)
    {
      v34 = static NowPlayingGeometryIdentifier.metadataEyebrow.getter(v29);
    }
    else
    {
      if (qword_1F9478 != -1)
        swift_once(&qword_1F9478, sub_35E2C);
      v38 = __swift_project_value_buffer(v37, (uint64_t)static NowPlayingButtonID.transcript);
      v39 = swift_beginAccess(v38, v70, 0, 0);
      v40 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v36 + 16))(v35, v38, v37, v39);
      NowPlayingButtonID.geometryID.getter(v40);
      v34 = (*(uint64_t (**)(_BYTE *, uint64_t))(v36 + 8))(v35, v37);
    }
  }
  else
  {
    v31 = v58;
    v32 = static NowPlayingButtonID.queue.getter(v29);
    v33 = v57;
    NowPlayingButtonID.geometryID.getter(v32);
    v34 = (*(uint64_t (**)(_BYTE *, uint64_t))(v59 + 8))(v31, v60);
  }
  v41 = static MatchedGeometryProperties.frame.getter(v34);
  v42 = static UnitPoint.center.getter();
  v44 = v43;
  v73 = v56;
  v74 = v55;
  v75 = v54;
  v76 = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v73, &opaque type descriptor for <<opaque return type of View.popover<A>(isPresented:permittedArrowDirections:isDismissable:passthroughViews:containerView:onAppear:onDismiss:content:)>>, 1);
  v46 = v61;
  v47 = v41;
  v48 = v65;
  v49 = v69;
  View.matchToNowPlayingView(_:properties:anchor:)(v33, v47, v65, OpaqueTypeConformance2, v42, v44);
  (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v33, v67);
  (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v49, v48);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v62 + 32))(v68, v46, v63);
}

uint64_t sub_2A5B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v26 - v13;
  sub_7748();
  v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()(v15);
  + infix(_:_:)(v12, 0.5);
  v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v12, v8);
  v16 = swift_allocObject(&unk_1C8B60, 104, 7);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v16 + 96) = *(_QWORD *)(a1 + 80);
  v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v16 + 32) = v18;
  aBlock[4] = sub_2B168;
  v31 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_2;
  v19 = _Block_copy(aBlock);
  v20 = v31;
  sub_2AF30((_QWORD *)a1);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_F52C();
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v24 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v8);
}

uint64_t sub_2A850(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BubbleImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1[1];
  v7 = a1[2];
  v9 = a1[3];
  v8 = a1[4];
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return BubbleTip.init<>(image:title:subtitle:actions:closeButtonHandler:)(v4, v6, v7, v9, v8, _swiftEmptyArrayStorage, 0, 0);
}

uint64_t sub_2A924@<X0>(uint64_t a1@<X8>)
{
  return sub_2A040(a1);
}

double sub_2A96C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[4];
  uint64_t v12;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16C2F0);
  v5 = swift_getKeyPath(&unk_16C318);
  static Published.subscript.getter(v11, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v12;
  result = *(double *)v11;
  v8 = v11[1];
  v9 = v11[2];
  v10 = v11[3];
  *(_OWORD *)a2 = v11[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_OWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 64) = v6;
  return result;
}

uint64_t sub_2A9FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t KeyPath;
  _QWORD v15[9];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  v11 = *a2;
  KeyPath = swift_getKeyPath(&unk_16C2F0);
  v13 = swift_getKeyPath(&unk_16C318);
  v15[0] = v2;
  v15[1] = v3;
  v15[2] = v4;
  v15[3] = v5;
  v15[4] = v6;
  v15[5] = v7;
  v15[6] = v8;
  v15[7] = v9;
  v15[8] = v10;
  sub_2AB5C(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  swift_retain(v11);
  return static Published.subscript.setter(v15, v11, KeyPath, v13);
}

unint64_t sub_2AAC8()
{
  unint64_t result;

  result = qword_1FB080;
  if (!qword_1FB080)
  {
    result = swift_getWitnessTable(&unk_16C348, &type metadata for TipOverlayView);
    atomic_store(result, (unint64_t *)&qword_1FB080);
  }
  return result;
}

uint64_t sub_2AB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    swift_release(a7);
    return swift_release(a9);
  }
  return result;
}

uint64_t sub_2AB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    swift_retain(a7);
    return swift_retain(a9);
  }
  return result;
}

uint64_t destroy for TipOverlayView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[6]);
  swift_release(a1[8]);
  return swift_release(a1[10]);
}

uint64_t initializeWithCopy for TipOverlayView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 32);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for TipOverlayView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_retain(v10);
  swift_release(v11);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v13;
  swift_retain(v13);
  swift_release(v12);
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for TipOverlayView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release(v7);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipOverlayView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipOverlayView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TipOverlayView()
{
  return &type metadata for TipOverlayView;
}

unint64_t sub_2AEA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB088;
  if (!qword_1FB088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB090);
    sub_2AAC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FB088);
  }
  return result;
}

uint64_t sub_2AF14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DBA8, 1);
}

uint64_t sub_2AF28()
{
  uint64_t v0;

  return sub_2A5B8(v0 + 16);
}

_QWORD *sub_2AF30(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  swift_retain(a1[10]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_2AF9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_2AFC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_2AFE4()
{
  uint64_t v0;

  return sub_2A850((_QWORD *)(v0 + 16));
}

unint64_t sub_2AFEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB0B8;
  if (!qword_1FB0B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB0A8);
    sub_2B058();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FB0B8);
  }
  return result;
}

unint64_t sub_2B058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB0C0;
  if (!qword_1FB0C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB0C8);
    sub_2B0C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FB0C0);
  }
  return result;
}

unint64_t sub_2B0C4()
{
  unint64_t result;

  result = qword_1FB0D0;
  if (!qword_1FB0D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AllowsHitTestingModifier, &type metadata for _AllowsHitTestingModifier);
    atomic_store(result, (unint64_t *)&qword_1FB0D0);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t objectdestroyTm_0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_2B168()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 88);
  v3 = 1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_2(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2B1CC()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB098);
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB0A8);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB0B0);
  v5 = sub_2AFEC();
  v6 = sub_27A8C(&qword_1FB0D8, &qword_1FB0B0, (uint64_t)&protocol conformance descriptor for BubbleTip<A, B, C>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.popover<A>(isPresented:permittedArrowDirections:isDismissable:passthroughViews:containerView:onAppear:onDismiss:content:)>>, 1);
  v3 = v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.matchToNowPlayingView(_:properties:anchor:)>>, 1);
}

uint64_t NowPlayingTabController.nowPlayingDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate, v4, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1, v2);
}

uint64_t NowPlayingTabController.nowPlayingDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*NowPlayingTabController.nowPlayingDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_2B3B0;
}

void sub_2B3B0(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

void NowPlayingTabController.__allocating_init(asPartOf:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  NowPlayingTabController.init(asPartOf:)(a1);
}

void NowPlayingTabController.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  _QWORD v21[5];
  _QWORD v22[7];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate;
  *(_QWORD *)(v3 + 8) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = sub_9BCB8(a1);
  v5 = qword_1F96B8;
  v6 = v4;
  if (v5 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v18, v7, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F8);
  v17 = v18;
  BaseObjectGraph.inject<A>(_:)(v21, v8, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB100);
  BaseObjectGraph.inject<A>(_:)(v22, v9, v9);
  v10 = type metadata accessor for EpisodeUpsellBannerDataProvider(0);
  BaseObjectGraph.inject<A>(_:)(&v19, v10, v10);
  swift_release(a1);
  v20 = v17;
  v22[5] = 0;
  v22[6] = v19;
  swift_beginAccess(&static NowPlayingDataProvider.shared, &v18, 33, 0);
  sub_2BDA0((uint64_t)&v20, (uint64_t)&static NowPlayingDataProvider.shared);
  swift_endAccess(&v18);
  *(_QWORD *)&v20 = swift_getObjectType(v6);
  v11 = v6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB108);
  String.init<A>(describing:)(&v20, v12);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setRestorationIdentifier:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  swift_beginAccess(&static NowPlayingDataProvider.shared, &v20, 33, 0);
  if ((_QWORD)static NowPlayingDataProvider.shared)
  {
    v16 = (void *)qword_210540;
    qword_210540 = (uint64_t)v11;
    swift_endAccess(&v20);
    swift_release(a1);

  }
  else
  {

    __break(1u);
  }
}

void NowPlayingTabController.__allocating_init(coder:)()
{
  objc_class *v0;
  char *v1;

  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingTabController.swift", 42, 2, 38, 0, 0);
  __break(1u);
}

void NowPlayingTabController.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingTabController.swift", 42, 2, 38, 0, 0);
  __break(1u);
}

void NowPlayingTabController.presentNowPlaying(animated:completion:)(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  char v13;
  void *v14;
  id v15;
  _BYTE v16[24];

  v4 = v3;
  v8 = v4 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate;
  swift_beginAccess(v4 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (!Strong
    || (v10 = Strong,
        v11 = *(_QWORD *)(v8 + 8),
        ObjectType = swift_getObjectType(Strong),
        v13 = (*(uint64_t (**)(_QWORD, void (*)(void), uint64_t, uint64_t, uint64_t))(v11 + 8))(a1 & 1, a2, a3, ObjectType, v11), swift_unknownObjectRelease(v10), (v13 & 1) == 0))
  {
    v14 = *(void **)(v4 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction);
    if (v14)
    {
      v15 = v14;
      sub_141DEC(a2, a3);

    }
    else
    {
      __break(1u);
    }
  }
}

void NowPlayingTabController.dismissNowPlaying(animated:completion:)(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  char *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  double v19;
  char *v20;
  char *v21;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[24];

  v4 = v3;
  v8 = v3 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate;
  swift_beginAccess(v3 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (!Strong
    || (v10 = Strong,
        v11 = *(_QWORD *)(v8 + 8),
        ObjectType = swift_getObjectType(Strong),
        LOBYTE(v11) = (*(uint64_t (**)(_QWORD, void (*)(void), uint64_t, uint64_t, uint64_t))(v11 + 16))(a1 & 1, a2, a3, ObjectType, v11), swift_unknownObjectRelease(v10), (v11 & 1) == 0))
  {
    v13 = *(char **)(v4 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction);
    if (!v13)
    {
      __break(1u);
      return;
    }
    v14 = *(char **)&v13[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController];
    if (v14)
    {
      if (a2)
      {
        aBlock[4] = a2;
        v23 = a3;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_F528;
        aBlock[3] = &block_descriptor_3;
        v15 = _Block_copy(aBlock);
        v16 = v23;
        v17 = v13;
        v18 = v14;
        sub_2BE00((uint64_t)a2, a3);
        *(_QWORD *)&v19 = swift_release(v16).n128_u64[0];
      }
      else
      {
        v20 = v13;
        v21 = v14;
        v15 = 0;
      }
      objc_msgSend(v14, "dismissViewControllerAnimated:completion:", a1 & 1, v15, v19);
      _Block_release(v15);

    }
    else
    {
      if (!a2)
        return;
      v14 = v13;
      a2();
    }

  }
}

Swift::Void __swiftcall NowPlayingTabController.encodeRestorableState(with:)(NSCoder with)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  objc_super v13;

  v3 = objc_msgSend(v1, "childViewControllers");
  v4 = sub_2BE10();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    if (v6)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(v5);
    v13.receiver = v1;
    v13.super_class = (Class)type metadata accessor for NowPlayingTabController();
    objc_msgSendSuper2(&v13, "encodeRestorableStateWithCoder:", with.super.isa);
    return;
  }
  if (v5 < 0)
    v12 = v5;
  else
    v12 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    goto LABEL_15;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "restorationIdentifier");
      if (v10)
      {
        v11 = v10;
        -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v9, v10);

        v9 = v11;
      }

    }
    goto LABEL_15;
  }
  __break(1u);
}

Swift::Void __swiftcall NowPlayingTabController.decodeRestorableState(with:)(NSCoder with)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for NowPlayingTabController();
  objc_msgSendSuper2(&v3, "decodeRestorableStateWithCoder:", with.super.isa);
}

uint64_t sub_2BD50()
{
  uint64_t v0;

  return sub_1EC0C(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTabController_nowPlayingDelegate);
}

id NowPlayingTabController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingTabController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_2BDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_3(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2BE00(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

unint64_t sub_2BE10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F9F30;
  if (!qword_1F9F30)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1F9F30);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingTabController()
{
  return objc_opt_self(_TtC12NowPlayingUI23NowPlayingTabController);
}

uint64_t sub_2BE6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2BE90()
{
  uint64_t v0;

  return sub_153D70(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2BEA0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_16C4A8);
  v2 = swift_getKeyPath(&unk_16C4D0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_2BF10@<X0>(_QWORD *a1@<X8>)
{
  return sub_2BF38((uint64_t)&unk_16C538, (uint64_t)&unk_16C560, a1);
}

uint64_t sub_2BF24@<X0>(_QWORD *a1@<X8>)
{
  return sub_2BF38((uint64_t)&unk_16C4F0, (uint64_t)&unk_16C518, a1);
}

uint64_t sub_2BF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  return swift_release(v7);
}

uint64_t sub_2BF94(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71[5];
  _QWORD v72[6];

  v63 = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v3);
  v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C8);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2D0);
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  __chkstk_darwin(v6);
  v65 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2D8);
  v58 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2E0);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2E8);
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2EDDC(a1, v72);
  sub_DF78((uint64_t)v72, (uint64_t)v71);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2F0);
  if (swift_dynamicCast(v19, v71, v20, v16, 6))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v21 = (void *)sub_300D8(*(void **)a1);
    v71[0] = v21;
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB330);
    v23 = sub_27A8C(&qword_1FBF00, (uint64_t *)&unk_1FB330, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_2F278, 0, v22, v20, v23);
    swift_release(v21);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB340);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_16B3D0;
    sub_DF78((uint64_t)v72, v25 + 32);
    v26 = sub_27A8C(&qword_1FB348, &qword_1FB2E0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v27 = v60;
    Publisher.prepend(_:)(v25, v60, v26);
    v28 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v12, v27, v28);
    v29 = sub_27A8C(&qword_1FB350, &qword_1FB2E8, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
    v30 = v62;
    v31 = (void *)Publisher.eraseToAnyPublisher()(v62, v29);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v30);
  }
  else
  {
    sub_DF78((uint64_t)v72, (uint64_t)v71);
    Just.init(_:)(v71, v20);
    v32 = sub_27A8C(&qword_1FB2F8, &qword_1FB2D8, (uint64_t)&protocol conformance descriptor for Just<A>);
    v31 = (void *)Publisher.eraseToAnyPublisher()(v8, v32);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v8);
  }
  v71[0] = v31;
  v33 = *(_QWORD *)(a1 + 8);
  v34 = *(_QWORD *)(a1 + 16);
  v35 = *(_QWORD *)(a1 + 32);
  v36 = *(_BYTE *)(a1 + 40);
  v37 = *(_BYTE *)(a1 + 24);
  v38 = swift_allocObject(&unk_1C8C88, 64, 7);
  *(_QWORD *)(v38 + 16) = v33;
  *(_QWORD *)(v38 + 24) = v34;
  *(_BYTE *)(v38 + 32) = v37;
  *(_QWORD *)(v38 + 40) = v35;
  *(_BYTE *)(v38 + 48) = v36;
  v39 = v63;
  *(_QWORD *)(v38 + 56) = v63;
  v40 = swift_allocObject(&unk_1C8CB0, 64, 7);
  *(_QWORD *)(v40 + 16) = v33;
  *(_QWORD *)(v40 + 24) = v34;
  *(_BYTE *)(v40 + 32) = v37;
  *(_QWORD *)(v40 + 40) = v35;
  *(_BYTE *)(v40 + 48) = v36;
  *(_QWORD *)(v40 + 56) = v39;
  v41 = swift_allocObject(&unk_1C8CD8, 64, 7);
  *(_QWORD *)(v41 + 16) = v33;
  *(_QWORD *)(v41 + 24) = v34;
  *(_BYTE *)(v41 + 32) = v37;
  *(_QWORD *)(v41 + 40) = v35;
  *(_BYTE *)(v41 + 48) = v36;
  *(_QWORD *)(v41 + 56) = v39;
  sub_2FE28(v33, v34, v37);
  sub_2FE28(v33, v34, v37);
  sub_2FE28(v33, v34, v37);
  swift_retain(v31);
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB300);
  v43 = sub_27A8C(&qword_1FC040, (uint64_t *)&unk_1FB300, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v44 = v64;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_2F6B4, v38, sub_2FA78, v40, sub_2FE10, v41, 0, 0, v42, v43);
  swift_release(v38);
  swift_release(v40);
  swift_release(v41);
  swift_release(v71[0]);
  v45 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v71[0] = (id)static OS_dispatch_queue.main.getter(v46);
  v47 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v48 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v67, 1, 1, v47);
  v49 = sub_27A8C(&qword_1FB318, &qword_1FB2C8, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  v50 = sub_2FE50();
  v51 = v65;
  v52 = v68;
  Publisher.receive<A>(on:options:)(v71, v48, v68, v45, v49, v50);
  sub_9944(v48, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v52);
  v53 = sub_27A8C(&qword_1FB328, &qword_1FB2D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v54 = v70;
  v55 = Publisher.eraseToAnyPublisher()(v70, v53);
  v56 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v51, v54, v56);
  __swift_destroy_boxed_opaque_existential_0(v72);
  return v55;
}

double sub_2C61C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41[3];
  char v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v40 = *v0;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB470);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB478);
  v37 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB480);
  v12 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  v39 = v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStatePublisher);
  v41[0] = v15;
  swift_retain(v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBF50);
  v17 = sub_27A8C(&qword_1FB490, (uint64_t *)&unk_1FBF50, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.removeDuplicates(by:)(sub_2C9FC, 0, v16, v17);
  swift_release(v15);
  memset(v41, 0, sizeof(v41));
  v42 = -1;
  v43 = 0;
  v44 = 1;
  v45 = 0u;
  v46 = 0u;
  v47 = 0;
  v48 = -1;
  v49 = 0;
  v50 = 1;
  v51 = 0;
  v52 = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB498);
  v19 = sub_27A8C(&qword_1FB4A0, &qword_1FB470, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  Publisher.scan<A>(_:_:)(v41, sub_2CA68, 0, v4, v18, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v41[0] = (id)static OS_dispatch_queue.main.getter(v21);
  v22 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v3, 1, 1, v22);
  v23 = sub_27A8C(&qword_1FB4A8, &qword_1FB478, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  v24 = sub_2FE50();
  Publisher.receive<A>(on:options:)(v41, v3, v8, v20, v23, v24);
  sub_9944((uint64_t)v3, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  v25 = swift_allocObject(&unk_1C8D28, 24, 7);
  v26 = v36;
  swift_weakInit(v25 + 16, v36);
  v27 = swift_allocObject(&unk_1C8D50, 32, 7);
  v28 = v40;
  *(_QWORD *)(v27 + 16) = v25;
  *(_QWORD *)(v27 + 24) = v28;
  v29 = swift_allocObject(&unk_1C8D78, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_308F8;
  *(_QWORD *)(v29 + 24) = v27;
  v30 = sub_27A8C((unint64_t *)&unk_1FB4B0, (uint64_t *)&unk_1FB480, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v31 = v38;
  v32 = Publisher<>.sink(receiveValue:)(sub_30924, v29, v38, v30);
  v33 = swift_release(v29);
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v14, v31, v33);
  v34 = *(_QWORD *)(v26 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStateSubscription);
  *(_QWORD *)(v26 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStateSubscription) = v32;
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

uint64_t sub_2C9FC(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1317D0(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), *(_QWORD *)(a1 + 48), *(id *)a2, a3, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40), *(_QWORD *)(a2 + 48)) & 1;
}

double sub_2CA68@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  double result;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v4 = a1[1];
  v27 = *a1;
  v28 = v4;
  v5 = a1[5];
  v31 = a1[4];
  v32 = v5;
  v6 = a1[7];
  v33 = a1[6];
  v34 = v6;
  v7 = a1[3];
  v29 = a1[2];
  v30 = v7;
  v8 = *(void **)a2;
  v9 = *(_QWORD *)(a2 + 16);
  v26 = *(_QWORD *)(a2 + 32);
  v25 = *(_BYTE *)(a2 + 40);
  v24 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 8);
  v23 = *(void **)(a2 + 56);
  v10 = v27;
  v11 = v28;
  v12 = v7;
  v13 = BYTE8(v28);
  v14 = *(_BYTE *)(a2 + 24);
  sub_339A4((uint64_t)&v27);

  sub_30458(*((uint64_t *)&v10 + 1), v11, v13);
  swift_unknownObjectRelease(v12);

  v15 = v32;
  v16 = BYTE8(v32);
  v17 = v33;
  v18 = BYTE8(v33);
  *(_OWORD *)a3 = v31;
  *(_QWORD *)(a3 + 16) = v15;
  *(_BYTE *)(a3 + 24) = v16;
  *(_QWORD *)(a3 + 32) = v17;
  *(_BYTE *)(a3 + 40) = v18;
  *(_OWORD *)(a3 + 48) = v34;
  *(_QWORD *)(a3 + 64) = v8;
  *(_QWORD *)(a3 + 72) = v22;
  *(_QWORD *)(a3 + 80) = v9;
  *(_BYTE *)(a3 + 88) = v14;
  *(_QWORD *)(a3 + 96) = v26;
  *(_BYTE *)(a3 + 104) = v25;
  *(_QWORD *)(a3 + 112) = v24;
  *(_QWORD *)(a3 + 120) = v23;
  v19 = v8;
  sub_2FE28(v22, v9, v14);
  v20 = v23;
  *(_QWORD *)&result = swift_unknownObjectRetain(v24).n128_u64[0];
  return result;
}

double sub_2CBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  id *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  char v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59[24];
  id v60;
  uint64_t v61;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v59, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v12 = Strong;
    v54 = a1;
    static Logger.nowPlayingArtwork.getter(Strong);
    v14 = *(void **)a2;
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(a2 + 8);
    v15 = *(_QWORD *)(a2 + 16);
    v16 = *(unsigned __int8 *)(a2 + 24);
    sub_982C(a2 + 48, (uint64_t)&v61, &qword_203B30);
    sub_982C(a2 + 56, (uint64_t)&v60, &qword_1FB3D0);
    v17 = v14;
    sub_2FE28((uint64_t)v13, v15, v16);
    sub_30974(&v61);
    sub_30508(&v60);
    v18 = v17;
    sub_2FE28((uint64_t)v13, v15, v16);
    sub_30974(&v61);
    sub_30508(&v60);
    v19 = v18;
    sub_2FE28((uint64_t)v13, v15, v16);
    sub_30974(&v61);
    sub_30508(&v60);
    v20 = v19;
    v21 = v9;
    v22 = v20;
    sub_2FE28((uint64_t)v13, v15, v16);
    sub_30974(&v61);
    v23 = sub_30508(&v60);
    v53 = v21;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    v52 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(52, -1);
      v50 = v7;
      v27 = v26;
      v48 = swift_slowAlloc(96, -1);
      v55 = v48;
      *(_DWORD *)v27 = 136316163;
      v47 = v24;
      v56 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v55);
      v49 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v27 + 4, v27 + 12);
      *(_WORD *)(v27 + 12) = 2160;
      v56 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v27 + 14, v27 + 22);
      *(_WORD *)(v27 + 22) = 2081;
      v46 = v27 + 24;
      v28 = v22;
      sub_2FE28((uint64_t)v13, v15, v16);
      sub_30974(&v61);
      sub_30508(&v60);
      v29 = sub_12FA38();
      v51 = v14;
      v31 = v30;

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);
      v56 = sub_C6F4(v29, v31, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v46, v27 + 32);

      swift_bridgeObjectRelease(v31);
      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);
      *(_WORD *)(v27 + 32) = 2160;
      v56 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v27 + 34, v27 + 42);
      *(_WORD *)(v27 + 42) = 2081;
      v56 = (uint64_t)v13;
      v57 = v15;
      v58 = v16;
      sub_2FE28((uint64_t)v13, v15, v16);
      v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
      v33 = String.init<A>(describing:)(&v56, v32);
      v35 = v34;
      v56 = sub_C6F4(v33, v34, &v55);
      v14 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v27 + 44, v27 + 52);

      swift_bridgeObjectRelease(v35);
      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);
      v36 = v47;
      _os_log_impl(&dword_0, v47, (os_log_type_t)v52, "%s [State Update] Received updated state=%{private,mask.hash}s for id=%{private,mask.hash}s", (uint8_t *)v27, 0x34u);
      v37 = v48;
      swift_arrayDestroy(v48, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v49);
    }
    else
    {

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);

      sub_30458((uint64_t)v13, v15, v16);
      sub_1B690(&v61);
      sub_30530(&v60);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v53, v6);
    }
    v38 = (uint64_t *)(v12 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions);
    swift_beginAccess(v12 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions, &v56, 1, 0);
    v39 = *v38;
    *v38 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v39);
    v40 = *(_QWORD *)(a2 + 32);
    v41 = *(unsigned __int8 *)(a2 + 40);
    sub_31E24(v14, (uint64_t)v13, v15, v16, v40, *(_BYTE *)(a2 + 40), (unsigned int *)&enum case for NowPlayingArtwork.Placement.primary(_:), (uint64_t)&unk_16C538);
    sub_31E24(v14, (uint64_t)v13, v15, v16, v40, v41, (unsigned int *)&enum case for NowPlayingArtwork.Placement.metadata(_:), (uint64_t)&unk_16C4F0);
    v42 = *(unsigned __int8 *)(v54 + 24);
    v43 = v16 == 255 && v42 == 255;
    if (v42 != 255 && v16 != 255)
    {
      v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 8);
      if ((v42 & 1) != 0)
      {
        v43 = v16 & (v44 == v13);
      }
      else if ((v16 & 1) != 0)
      {
        v43 = 0;
      }
      else
      {
        v45 = *(_QWORD *)(v54 + 16);
        if (v44 == v13 && v45 == v15)
          v43 = 1;
        else
          v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, v13, v15, 0);
      }
    }
    sub_3211C(v14, v13, v15, v16, v40, v41, (v43 & 1) == 0);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_2D228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__backdropImage;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__primaryArtworkData;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2B0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__metadataArtworkData, v4);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_legacyPlayer));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_imageProvider));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStatePublisher));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions));
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_backdropConnection, &qword_1FB2B8);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStateSubscription));
  return v0;
}

uint64_t sub_2D334()
{
  uint64_t v0;

  sub_2D228();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_2D358()
{
  return type metadata accessor for NowPlayingArtworkController(0);
}

uint64_t type metadata accessor for NowPlayingArtworkController(uint64_t a1)
{
  uint64_t result;

  result = qword_1FB1B8;
  if (!qword_1FB1B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingArtworkController);
  return result;
}

void sub_2D39C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;

  sub_2D488(319, &qword_1FB1C8, &qword_1FB1D0);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_2D488(319, &qword_1FB1D8, (uint64_t *)&unk_1FB1E0);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = &unk_16C440;
      v10 = &unk_16C458;
      v11 = &unk_16C458;
      v12 = (char *)&value witness table for Builtin.NativeObject + 64;
      v13 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v14 = &unk_16C470;
      v15 = &unk_16C488;
      swift_updateClassMetadata2(a1, 256, 10, &v6, a1 + 80);
    }
  }
}

void sub_2D488(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2D4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _BYTE v23[24];

  v6 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB360);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v23, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for NowPlayingArtwork.Placement.primary(_:), v6);
    v16 = sub_2D668(a1, (uint64_t)v9);
    v17 = swift_release(v15);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v17);
  }
  else
  {
    v22 = 0;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
    Just.init(_:)(&v22, v19);
    v20 = sub_27A8C(&qword_1FB378, &qword_1FB360, (uint64_t)&protocol conformance descriptor for Just<A>);
    v16 = Publisher.eraseToAnyPublisher()(v10, v20);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v21);
  }
  *a3 = v16;
  return result;
}

uint64_t sub_2D668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  double v31;
  double v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB360);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB368);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB370);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NowPlayingArtwork.Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_30868(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_9944((uint64_t)v15, (uint64_t *)&unk_1FB1E0);
    v46 = 0;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
    Just.init(_:)(&v46, v20);
    v21 = sub_27A8C(&qword_1FB378, &qword_1FB360, (uint64_t)&protocol conformance descriptor for Just<A>);
    v22 = Publisher.eraseToAnyPublisher()(v4, v21);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider + 24);
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider), v23);
    v25 = v41;
    ((void (*)(void))NowPlayingArtwork.Placement.preferredSize.getter)();
    v26 = dispatch thunk of NowPlayingArtworkProviding.fetch(for:placement:of:)(v19, v25, v23, v24);
    v46 = v26;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB388);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
    v29 = sub_27A8C(&qword_1FB390, &qword_1FB388, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_33A58, 0, v27, v28, v29);
    v30 = swift_release(v26);
    v31 = NowPlayingArtwork.Placement.preferredSize.getter(v30);
    v33 = (void *)sub_2DF3C(v31, v32);
    v46 = (uint64_t)v33;
    v34 = sub_27A8C(&qword_1FB398, &qword_1FB368, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v35 = v43;
    Publisher.replaceError(with:)(&v46, v43, v34);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v35);
    v36 = sub_27A8C((unint64_t *)&unk_1FB3A0, &qword_1FB370, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
    v37 = v45;
    v22 = Publisher.eraseToAnyPublisher()(v45, v36);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v37);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  return v22;
}

uint64_t sub_2D9FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&off_16C4A8);
  v5 = swift_getKeyPath(&unk_16C4D0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_2DA78(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&off_16C4A8);
  v5 = swift_getKeyPath(&unk_16C4D0);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_2DAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  char v28[24];
  char v29[24];

  v27 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
    goto LABEL_6;
  v18 = Strong;
  v19 = swift_beginAccess(a3 + 16, v28, 0, 0);
  if ((*(_BYTE *)(a3 + 16) & 1) != 0 || (a4 & 1) == 0)
  {
    swift_release(v18);
LABEL_6:
    v23 = sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
    Empty.init(completeImmediately:)(1, v23, &type metadata for Never, &protocol witness table for Never);
    v24 = sub_27A8C(&qword_1FB5B8, &qword_1FB5A8, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
    v20 = Publisher.eraseToAnyPublisher()(v9, v24);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
    goto LABEL_7;
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, enum case for NowPlayingArtwork.Placement.primary(_:), v13, v19);
  v20 = sub_330E0(a1, (uint64_t)v16);
  v21 = swift_release(v18);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v21);
LABEL_7:
  *v27 = v20;
  return result;
}

id sub_2DCC4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_2DCD0(void **a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  static Logger.nowPlayingArtwork.getter(v7);
  v11 = v10;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v22 = a3;
    v23 = v6;
    v24 = v5;
    v14 = swift_slowAlloc(22, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    v21 = swift_slowAlloc(32, -1);
    v26 = v21;
    *(_DWORD *)v14 = 136315394;
    v25 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v14 + 4, v14 + 12);
    *(_WORD *)(v14 + 12) = 2112;
    if (v10)
    {
      v25 = (uint64_t)v11;
      v16 = v11;
    }
    else
    {
      v25 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v14 + 14, v14 + 22);
    *v15 = v10;

    _os_log_impl(&dword_0, v12, v13, v22, (uint8_t *)v14, 0x16u);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
    swift_arrayDestroy(v15, 1, v18);
    swift_slowDealloc(v15, -1, -1);
    v19 = v21;
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v24);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t sub_2DF3C(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NowPlayingArtwork.Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) != enum case for NowPlayingArtwork.Data.model(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
  sub_3363C((uint64_t)v11, (uint64_t)v7);
  if (v7[64] == 255)
  {
    sub_33680((uint64_t)v7);
    return 0;
  }
  v12 = (void *)Color.color.getter(*((_QWORD *)v7 + 7));
  sub_2FF64(v12, a1, a2);
  v14 = v13;

  sub_33680((uint64_t)v7);
  return v14;
}

uint64_t sub_2E094(__n128 a1)
{
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v5;

  v1 = NowPlayingArtwork.Placement.preferredSize.getter(a1);
  v5 = sub_2DF3C(v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
  return Just.init(_:)(&v5, v3);
}

uint64_t sub_2E0F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(a4, v6, KeyPath, v8);
  swift_release(KeyPath);
  return swift_release(v8);
}

uint64_t sub_2E158(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v20;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v20 - v14;
  sub_30868(a1, (uint64_t)&v20 - v14);
  v16 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v18 = swift_getKeyPath(a6);
  sub_30868((uint64_t)v15, (uint64_t)v13);
  swift_retain(v16);
  static Published.subscript.setter(v13, v16, KeyPath, v18);
  return sub_9944((uint64_t)v15, (uint64_t *)&unk_1FB1E0);
}

uint64_t sub_2E254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for NowPlayingArtwork.Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_2E2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v44;
  int v45;
  int v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;

  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  v10 = __chkstk_darwin(v50);
  v49 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - v12;
  v14 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v51 - 8);
  v18 = __chkstk_darwin(v51);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.nowPlayingArtwork.getter(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  v52 = v13;
  sub_30868(a1, (uint64_t)v13);
  sub_2FE28(a3, a4, a5);
  v21 = sub_2FE28(a3, a4, a5);
  v53 = v20;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc(62, -1);
    v48 = swift_slowAlloc(128, -1);
    v58 = v48;
    *(_DWORD *)v25 = 136316419;
    v47 = v22;
    v55 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v58);
    v26 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 4, v25 + 12);
    *(_WORD *)(v25 + 12) = 2080;
    v45 = a5;
    v27 = NowPlayingArtwork.Placement.rawValue.getter(v26);
    v29 = v28;
    v55 = sub_C6F4(v27, v28, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 14, v25 + 22);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v30);
    *(_WORD *)(v25 + 22) = 2160;
    v55 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 24, v25 + 32);
    *(_WORD *)(v25 + 32) = 2081;
    v46 = v24;
    v31 = (uint64_t)v52;
    v32 = v49;
    sub_30868((uint64_t)v52, v49);
    v33 = String.init<A>(describing:)(v32, v50);
    v35 = v34;
    v55 = sub_C6F4(v33, v34, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 34, v25 + 42);
    swift_bridgeObjectRelease(v35);
    sub_9944(v31, (uint64_t *)&unk_1FB1E0);
    *(_WORD *)(v25 + 42) = 2160;
    v55 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 44, v25 + 52);
    *(_WORD *)(v25 + 52) = 2081;
    v55 = a3;
    v56 = a4;
    v36 = v45;
    v57 = v45;
    sub_2FE28(a3, a4, v45);
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
    v38 = String.init<A>(describing:)(&v55, v37);
    v40 = v39;
    v55 = sub_C6F4(v38, v39, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 54, v25 + 62);
    swift_bridgeObjectRelease(v40);
    sub_30458(a3, a4, v36);
    sub_30458(a3, a4, v36);
    v41 = v47;
    _os_log_impl(&dword_0, v47, (os_log_type_t)v46, "%s [ArtworkData/%s] Received output=%{private,mask.hash}s for id=%{private,mask.hash}s", (uint8_t *)v25, 0x3Eu);
    v42 = v48;
    swift_arrayDestroy(v48, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_9944((uint64_t)v52, (uint64_t *)&unk_1FB1E0);
    sub_30458(a3, a4, a5);
    sub_30458(a3, a4, a5);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v53, v51);
}

uint64_t sub_2E714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v9 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.nowPlayingArtwork.getter(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_2FE28(a3, a4, a5);
  v18 = sub_2FE28(a3, a4, a5);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  v40 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(42, -1);
    v39 = v14;
    v22 = v21;
    v37 = swift_slowAlloc(96, -1);
    v44 = v37;
    *(_DWORD *)v22 = 136315907;
    v35 = v19;
    v41 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v44);
    v38 = v17;
    v23 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v22 + 4, v22 + 12);
    *(_WORD *)(v22 + 12) = 2080;
    v36 = v13;
    v24 = NowPlayingArtwork.Placement.rawValue.getter(v23);
    v26 = v25;
    v41 = sub_C6F4(v24, v25, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v22 + 14, v22 + 22);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
    *(_WORD *)(v22 + 22) = 2160;
    v41 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v22 + 24, v22 + 32);
    *(_WORD *)(v22 + 32) = 2081;
    v41 = a3;
    v42 = a4;
    v43 = a5;
    sub_2FE28(a3, a4, a5);
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
    v29 = String.init<A>(describing:)(&v41, v28);
    v31 = v30;
    v41 = sub_C6F4(v29, v30, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v22 + 34, v22 + 42);
    swift_bridgeObjectRelease(v31);
    sub_30458(a3, a4, a5);
    sub_30458(a3, a4, a5);
    v32 = v35;
    _os_log_impl(&dword_0, v35, (os_log_type_t)v40, "%s [ArtworkData/%s] Received completion for id=%{private,mask.hash}s", (uint8_t *)v22, 0x2Au);
    v33 = v37;
    swift_arrayDestroy(v37, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v36);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_30458(a3, a4, a5);
    sub_30458(a3, a4, a5);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
}

uint64_t sub_2EA78(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v8 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.nowPlayingArtwork.getter(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_2FE28(a2, a3, a4);
  v17 = sub_2FE28(a2, a3, a4);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  v39 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(42, -1);
    v38 = v13;
    v21 = v20;
    v36 = swift_slowAlloc(96, -1);
    v43 = v36;
    *(_DWORD *)v21 = 136315907;
    v34 = v18;
    v40 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v43);
    v37 = v16;
    v22 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v21 + 4, v21 + 12);
    *(_WORD *)(v21 + 12) = 2080;
    v35 = v12;
    v23 = NowPlayingArtwork.Placement.rawValue.getter(v22);
    v25 = v24;
    v40 = sub_C6F4(v23, v24, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v21 + 14, v21 + 22);
    v26 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v26);
    *(_WORD *)(v21 + 22) = 2160;
    v40 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v21 + 24, v21 + 32);
    *(_WORD *)(v21 + 32) = 2081;
    v40 = a2;
    v41 = a3;
    v42 = a4;
    sub_2FE28(a2, a3, a4);
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
    v28 = String.init<A>(describing:)(&v40, v27);
    v30 = v29;
    v40 = sub_C6F4(v28, v29, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v21 + 34, v21 + 42);
    swift_bridgeObjectRelease(v30);
    sub_30458(a2, a3, a4);
    sub_30458(a2, a3, a4);
    v31 = v34;
    _os_log_impl(&dword_0, v34, (os_log_type_t)v39, "%s Received [ArtworkData/%s] cancellation for id=%{private,mask.hash}s", (uint8_t *)v21, 0x2Au);
    v32 = v36;
    swift_arrayDestroy(v36, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v35);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_30458(a2, a3, a4);
    sub_30458(a2, a3, a4);

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
}

void sub_2EDDC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  id *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)a1;
  if (!*(_QWORD *)a1)
  {
    a2[3] = type metadata accessor for NowPlayingStandardArtworkTreatment(0);
    a2[4] = sub_8330(&qword_1FC020, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingStandardArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingStandardArtworkTreatment);
    __swift_allocate_boxed_opaque_existential_1(a2);
    static NowPlayingArtworkTreatment<>.standard.getter();
    return;
  }
  sub_982C(a1 + 56, (uint64_t)&v31, &qword_1FB3D0);
  sub_982C((uint64_t)&v31, (uint64_t)&v32, &qword_1FB3D0);
  v10 = v32;
  if (v32)
  {
    v11 = v9;
    sub_30508(&v31);
    if ((objc_msgSend(v10, "isDeviceRoute") & 1) != 0)
    {
      v12 = sub_30530(&v31);
      if ((static Podcasts.isBlueMoonEnabled()(v12) & 1) == 0)
        goto LABEL_5;
    }
    else
    {
      v27 = objc_msgSend(v11, "artworkInfo");
      sub_30530(&v31);
      if (!v27)
      {
        a2[3] = type metadata accessor for NowPlayingStandardArtworkTreatment(0);
        a2[4] = sub_8330(&qword_1FC020, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingStandardArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingStandardArtworkTreatment);
        __swift_allocate_boxed_opaque_existential_1(a2);
        static NowPlayingArtworkTreatment<>.standard.getter();

        return;
      }

      if ((static Podcasts.isBlueMoonEnabled()(v28) & 1) == 0)
        goto LABEL_5;
    }
LABEL_9:
    v19 = *(_QWORD *)(a1 + 48);
    if (v19)
    {
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
      type metadata accessor for MainActor(0);
      v21 = swift_unknownObjectRetain_n(v19, 2);
      v22 = static MainActor.shared.getter(v21);
      v23 = (_QWORD *)swift_allocObject(&unk_1C8D00, 40, 7);
      v23[2] = v22;
      v23[3] = &protocol witness table for MainActor;
      v23[4] = v19;
      v24 = sub_F0D04((uint64_t)v8, (uint64_t)&unk_1FB450, (uint64_t)v23);
      a2[3] = type metadata accessor for NowPlayingMPCVideoArtworkTreatment(0);
      a2[4] = sub_8330(&qword_1FB458, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingMPCVideoArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingMPCVideoArtworkTreatment);
      __swift_allocate_boxed_opaque_existential_1(a2);
      static NowPlayingArtworkTreatment<>.mpcVideo(_:)(v24);

      swift_unknownObjectRelease(v19);
      swift_release(v24);
      return;
    }
    goto LABEL_11;
  }
  if ((static Podcasts.isBlueMoonEnabled()(v9) & 1) != 0)
    goto LABEL_9;
LABEL_5:
  if ((MPModelPodcastEpisode.isVideoEpisode.getter() & 1) != 0)
  {
    v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_legacyPlayer + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3
                                               + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_legacyPlayer));
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(ObjectType, v13);
    v16 = objc_msgSend((id)objc_opt_self(IMAVPlayer), "availableSpeeds");
    v17 = sub_F174(0, &qword_1FB3D8, AVPlaybackSpeed_ptr);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

    a2[3] = type metadata accessor for NowPlayingVideoPlayerArtworkTreatment(0);
    a2[4] = sub_8330(&qword_1FB3E0, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingVideoPlayerArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingVideoPlayerArtworkTreatment);
    __swift_allocate_boxed_opaque_existential_1(a2);
    static NowPlayingArtworkTreatment<>.videoPlayer(_:speeds:)(v15, v18);

    swift_bridgeObjectRelease(v18);
    return;
  }
LABEL_11:
  v30 = v9;
  if (*(_BYTE *)(a1 + 40))
    v25 = 0.0;
  else
    v25 = *(double *)(a1 + 32);
  v26 = sub_F174(0, &qword_1FB380, MPModelPodcastEpisode_ptr);
  if (NowPlayingArtworkDataProviding.shouldShowMetadataArtwork(at:)(v25))
  {
    a2[3] = type metadata accessor for NowPlayingStandardArtworkTreatment(0);
    a2[4] = sub_8330(&qword_1FC020, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingStandardArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingStandardArtworkTreatment);
    __swift_allocate_boxed_opaque_existential_1(a2);
    static NowPlayingArtworkTreatment<>.metadata.getter();
  }
  else
  {
    v30 = v9;
    if ((NowPlayingArtworkDataProviding.supportsShowPageTall.getter(v26, &protocol witness table for MPModelPodcastEpisode) & 1) != 0)
    {
      a2[3] = type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment(0);
      a2[4] = sub_8330(&qword_1FB358, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingBackgroundStaticArtworkTreatment);
      __swift_allocate_boxed_opaque_existential_1(a2);
      static NowPlayingArtworkTreatment<>.background(image:)(0);
    }
    else
    {
      a2[3] = type metadata accessor for NowPlayingStandardArtworkTreatment(0);
      a2[4] = sub_8330(&qword_1FC020, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingStandardArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingStandardArtworkTreatment);
      __swift_allocate_boxed_opaque_existential_1(a2);
      static NowPlayingArtworkTreatment<>.standard.getter();
    }
  }

}

uint64_t sub_2F278@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  a2[3] = type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment(0);
  a2[4] = sub_8330(&qword_1FB358, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingBackgroundStaticArtworkTreatment);
  __swift_allocate_boxed_opaque_existential_1(a2);
  return static NowPlayingArtworkTreatment<>.background(image:)(v3);
}

uint64_t sub_2F2D8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, int a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  _QWORD v45[5];

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.nowPlayingArtwork.getter(v14);
  sub_DF78(a1, (uint64_t)v45);
  sub_2FE28(a2, a3, a4);
  v17 = sub_2FE28(a2, a3, a4);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(62, -1);
    v37 = a5;
    v21 = v20;
    v40 = swift_slowAlloc(128, -1);
    v44 = v40;
    *(_DWORD *)v21 = 136316419;
    HIDWORD(v36) = a6;
    v41 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 4, v21 + 12);
    *(_WORD *)(v21 + 12) = 2082;
    v39 = v12;
    sub_DF78((uint64_t)v45, (uint64_t)&v41);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2F0);
    v23 = String.init<A>(describing:)(&v41, v22);
    v38 = v13;
    v25 = v24;
    v41 = sub_C6F4(v23, v24, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 14, v21 + 22);
    swift_bridgeObjectRelease(v25);
    __swift_destroy_boxed_opaque_existential_0(v45);
    *(_WORD *)(v21 + 22) = 2160;
    v41 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 24, v21 + 32);
    *(_WORD *)(v21 + 32) = 2081;
    v41 = a2;
    v42 = a3;
    v43 = a4;
    sub_2FE28(a2, a3, a4);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
    v27 = String.init<A>(describing:)(&v41, v26);
    v29 = v28;
    v41 = sub_C6F4(v27, v28, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 34, v21 + 42);
    swift_bridgeObjectRelease(v29);
    sub_30458(a2, a3, a4);
    sub_30458(a2, a3, a4);
    *(_WORD *)(v21 + 42) = 2160;
    v41 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 44, v21 + 52);
    *(_WORD *)(v21 + 52) = 2081;
    v41 = v37;
    LOBYTE(v42) = BYTE4(v36) & 1;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
    v31 = String.init<A>(describing:)(&v41, v30);
    v33 = v32;
    v41 = sub_C6F4(v31, v32, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 54, v21 + 62);
    swift_bridgeObjectRelease(v33);
    _os_log_impl(&dword_0, v18, v19, "%s [Treatment] Received treatment=%{public}s for id=%{private,mask.hash}s at elapsedTime=%{private,mask.hash}s.", (uint8_t *)v21, 0x3Eu);
    v34 = v40;
    swift_arrayDestroy(v40, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v39);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v45);
    sub_30458(a2, a3, a4);
    sub_30458(a2, a3, a4);

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
}

uint64_t sub_2F6A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_2F6B4(uint64_t a1)
{
  uint64_t v1;

  return sub_2F2D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_2F6CC(char *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, int a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v41 = a5;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  static Logger.nowPlayingArtwork.getter(v13);
  sub_2FE28(a2, a3, a4);
  v17 = sub_2FE28(a2, a3, a4);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(62, -1);
    v37 = a6;
    v21 = v20;
    v39 = swift_slowAlloc(128, -1);
    v45 = v39;
    *(_DWORD *)v21 = 136316419;
    v40 = v12;
    v42 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v21 + 4, v21 + 12);
    *(_WORD *)(v21 + 12) = 2082;
    LOBYTE(v42) = v16;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B8);
    v23 = String.init<A>(describing:)(&v42, v22);
    v38 = v11;
    v25 = v24;
    v42 = sub_C6F4(v23, v24, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v21 + 14, v21 + 22);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v21 + 22) = 2160;
    v42 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v21 + 24, v21 + 32);
    *(_WORD *)(v21 + 32) = 2081;
    v42 = a2;
    v43 = a3;
    v44 = a4;
    sub_2FE28(a2, a3, a4);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
    v27 = String.init<A>(describing:)(&v42, v26);
    v29 = v28;
    v42 = sub_C6F4(v27, v28, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v21 + 34, v21 + 42);
    swift_bridgeObjectRelease(v29);
    sub_30458(a2, a3, a4);
    sub_30458(a2, a3, a4);
    *(_WORD *)(v21 + 42) = 2160;
    v42 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v21 + 44, v21 + 52);
    *(_WORD *)(v21 + 52) = 2081;
    v42 = v41;
    LOBYTE(v43) = v37 & 1;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
    v31 = String.init<A>(describing:)(&v42, v30);
    v33 = v32;
    v42 = sub_C6F4(v31, v32, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v21 + 54, v21 + 62);
    swift_bridgeObjectRelease(v33);
    _os_log_impl(&dword_0, v18, v19, "%s Received treatment completion=%{public}s for id=%{private,mask.hash}s at elapsedTime=%{private,mask.hash}s.", (uint8_t *)v21, 0x3Eu);
    v34 = v39;
    swift_arrayDestroy(v39, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v38);
  }
  else
  {
    sub_30458(a2, a3, a4);
    sub_30458(a2, a3, a4);

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_2FA78(char *a1)
{
  uint64_t v1;

  return sub_2F6CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_2FA90(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.nowPlayingArtwork.getter(v12);
  sub_2FE28(a1, a2, a3);
  v15 = sub_2FE28(a1, a2, a3);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(52, -1);
    v33 = a4;
    v19 = v18;
    v35 = swift_slowAlloc(96, -1);
    v40 = v35;
    *(_DWORD *)v19 = 136316163;
    v32 = a5;
    v20 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, &v40);
    v36 = v10;
    v37 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 4, v19 + 12);
    *(_WORD *)(v19 + 12) = 2160;
    v37 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 14, v19 + 22);
    *(_WORD *)(v19 + 22) = 2081;
    v37 = a1;
    v38 = a2;
    v39 = a3;
    sub_2FE28(a1, a2, a3);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC010);
    v34 = v11;
    v22 = String.init<A>(describing:)(&v37, v21);
    v24 = v23;
    v37 = sub_C6F4(v22, v23, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 24, v19 + 32);
    swift_bridgeObjectRelease(v24);
    sub_30458(a1, a2, a3);
    sub_30458(a1, a2, a3);
    *(_WORD *)(v19 + 32) = 2160;
    v37 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 34, v19 + 42);
    *(_WORD *)(v19 + 42) = 2081;
    v37 = v33;
    LOBYTE(v38) = v32 & 1;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
    v26 = String.init<A>(describing:)(&v37, v25);
    v28 = v27;
    v37 = sub_C6F4(v26, v27, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 44, v19 + 52);
    swift_bridgeObjectRelease(v28);
    _os_log_impl(&dword_0, v16, v17, "%s Received treatment cancellation for id=%{private,mask.hash}s at elapsedTime=%{private,mask.hash}s.", (uint8_t *)v19, 0x34u);
    v29 = v35;
    swift_arrayDestroy(v35, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v14, v36);
  }
  else
  {
    sub_30458(a1, a2, a3);
    sub_30458(a1, a2, a3);

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_2F6A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1 & 1);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_2FE10()
{
  uint64_t v0;

  return sub_2FA90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_2FE28(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_2FE40(result, a2, a3 & 1);
  return result;
}

uint64_t sub_2FE40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t sub_2FE50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB320;
  if (!qword_1FB320)
  {
    v1 = sub_F174(255, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1FB320);
  }
  return result;
}

uint64_t sub_2FEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  return swift_task_switch(sub_2FF14, v7, v8);
}

uint64_t sub_2FF14()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[3];
  v2 = (_QWORD *)v0[2];
  swift_release(v0[4]);
  *v2 = v1;
  v4 = (uint64_t (*)(void))v0[1];
  swift_unknownObjectRetain(v1);
  return v4();
}

void sub_2FF64(void *a1, double a2, double a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v6 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", a2, a3);
  v7 = swift_allocObject(&unk_1C8E68, 40, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(double *)(v7 + 24) = a2;
  *(double *)(v7 + 32) = a3;
  v8 = swift_allocObject(&unk_1C8E90, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_336E0;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_33744;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_FDCF0;
  v12[3] = &block_descriptor_4;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = a1;
  swift_retain(v8);
  objc_msgSend(v6, "imageWithActions:", v9, swift_release(v10).n128_f64[0]);

  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 130, 520, 31, 1);
  swift_release(v7);
  swift_release(v8);
  if ((v6 & 1) != 0)
    __break(1u);
}

uint64_t sub_300D8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB360);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB368);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB370);
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for NowPlayingArtwork.Placement.showPageTall(_:), v13);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider + 24);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider), v18);
    v40[3] = sub_F174(0, &qword_1FB380, MPModelPodcastEpisode_ptr);
    v40[4] = &protocol witness table for MPModelPodcastEpisode;
    v40[0] = a1;
    v19 = a1;
    v21 = NowPlayingArtwork.Placement.preferredSize.getter(v20);
    v23 = dispatch thunk of NowPlayingArtworkProviding.fetch(for:dataProvider:at:of:)(v16, v40, v18, v17, 0.0, v21, v22);
    __swift_destroy_boxed_opaque_existential_0(v40);
    v40[0] = v23;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB388);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
    v26 = sub_27A8C(&qword_1FB390, &qword_1FB388, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_2DCC4, 0, v24, v25, v26);
    swift_release(v23);
    v40[0] = 0;
    v27 = sub_27A8C(&qword_1FB398, &qword_1FB368, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v28 = v37;
    Publisher.replaceError(with:)(v40, v37, v27);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v28);
    v29 = sub_27A8C((unint64_t *)&unk_1FB3A0, &qword_1FB370, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
    v30 = v39;
    v31 = Publisher.eraseToAnyPublisher()(v39, v29);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v30);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v40[0] = 0;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
    Just.init(_:)(v40, v32);
    v33 = sub_27A8C(&qword_1FB378, &qword_1FB360, (uint64_t)&protocol conformance descriptor for Just<A>);
    v31 = Publisher.eraseToAnyPublisher()(v3, v33);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v31;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_30458(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_2F6A4(result, a2, a3 & 1);
  return result;
}

uint64_t sub_30470()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_3049C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1FB3EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_27CA8;
  return sub_2FEA8(a1, v4, v5, v6);
}

id *sub_30508(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_30530(id *a1)
{

  return a1;
}

uint64_t sub_30558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40[2];

  v5 = v4;
  v37 = a3;
  v38 = a4;
  v36 = a2;
  v39 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2B0);
  v6 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v35 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEE0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__backdropImage;
  *(_QWORD *)&v40[0] = 0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
  Published.init(initialValue:)(v40, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  v21 = v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__primaryArtworkData;
  v22 = type metadata accessor for NowPlayingArtwork.Data(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v14, 1, 1, v22);
  sub_30868((uint64_t)v14, (uint64_t)v12);
  Published.init(initialValue:)(v12, v9);
  sub_9944((uint64_t)v14, (uint64_t *)&unk_1FB1E0);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v25 = v35;
  v24(v21, v8, v35);
  v26 = v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__metadataArtworkData;
  v23(v14, 1, 1, v22);
  sub_30868((uint64_t)v14, (uint64_t)v12);
  Published.init(initialValue:)(v12, v9);
  sub_9944((uint64_t)v14, (uint64_t *)&unk_1FB1E0);
  v24(v26, v8, v25);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions) = _swiftEmptyArrayStorage;
  v27 = v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_backdropConnection;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_QWORD *)(v27 + 32) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStateSubscription) = 0;
  v28 = (_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_legacyPlayer);
  v30 = v36;
  v29 = v37;
  *v28 = v36;
  v28[1] = v29;
  v31 = v38;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_nowPlayingItemStatePublisher) = v38;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB460);
  swift_unknownObjectRetain(v30);
  swift_retain(v31);
  BaseObjectGraph.inject<A>(_:)(v40, v32, v32);
  sub_27890(v40, v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_imageProvider);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB468);
  BaseObjectGraph.inject<A>(_:)(v40, v33, v33);
  sub_27890(v40, v5 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider);
  sub_2C61C();
  return v5;
}

uint64_t sub_30868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_308B0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_308D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_308F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2CBA8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_30900()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_30924(_OWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *, _OWORD *);
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[4];
  _OWORD v9[4];

  v2 = *(uint64_t (**)(_OWORD *, _OWORD *))(v1 + 16);
  v3 = a1[1];
  v8[0] = *a1;
  v8[1] = v3;
  v4 = a1[3];
  v8[2] = a1[2];
  v8[3] = v4;
  v5 = a1[5];
  v9[0] = a1[4];
  v9[1] = v5;
  v6 = a1[7];
  v9[2] = a1[6];
  v9[3] = v6;
  return v2(v8, v9);
}

_QWORD *sub_30974(_QWORD *a1)
{
  swift_unknownObjectRetain(*a1);
  return a1;
}

id sub_3099C(void *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, int a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t (*v53)(uint64_t, uint64_t);
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  id v80;
  void *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id result;
  _QWORD *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, char *, uint64_t);
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unsigned __int8 v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, uint64_t, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  __n128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  void (*v220)(char *, uint64_t, __n128);
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  char *v231;
  uint64_t v232;
  void (*v233)(char *, uint64_t, uint64_t);
  id v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239[8];
  char *v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  void *v245;

  v237 = a7;
  v212 = a6;
  v211 = a5;
  v230 = a4;
  v229 = a3;
  v228 = a2;
  v236 = *v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v231 = (char *)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingArtwork.Data(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v200 = (uint64_t *)((char *)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5E8);
  v201 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v199 = (char *)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5F0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v192 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v198 = (char *)&v192 - v21;
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5F8);
  v218 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v221 = (char *)&v192 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  __chkstk_darwin(v23);
  v25 = (char *)&v192 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB600);
  v206 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v205 = (char *)&v192 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB608);
  v209 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v207 = (char *)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v235 = *(_QWORD *)(v232 - 8);
  v28 = __chkstk_darwin(v232);
  v226 = (char *)&v192 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v227 = (char *)&v192 - v31;
  v32 = __chkstk_darwin(v30);
  v203 = (char *)&v192 - v33;
  v34 = __chkstk_darwin(v32);
  v220 = (void (*)(char *, uint64_t, __n128))((char *)&v192 - v35);
  v225 = v36;
  __chkstk_darwin(v34);
  v204 = (char *)&v192 - v37;
  v38 = type metadata accessor for Logger(0);
  v39 = __chkstk_darwin(v38);
  v40 = __chkstk_darwin(v39);
  v223 = (char *)&v192 - v41;
  v42 = __chkstk_darwin(v40);
  v222 = (char *)&v192 - v45;
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v25, 1, 1, v12);
    Just.init(_:)(v25, v23);
    v49 = sub_27A8C(&qword_1FB610, &qword_1FB5F0, (uint64_t)&protocol conformance descriptor for Just<A>);
    v50 = Publisher.eraseToAnyPublisher()(v16, v49);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    return (id)v50;
  }
  v192 = v44;
  v193 = v17;
  v194 = v16;
  v195 = v25;
  v215 = v43;
  v216 = v42;
  v196 = v13;
  v197 = v12;
  v217 = v23;
  v46 = a1;
  v47 = static Podcasts.isBlueMoonEnabled()(v46);
  v234 = v46;
  v214 = v9;
  v213 = v10;
  if ((v47 & 1) != 0)
  {
    v244 = sub_F174(0, &qword_1FB380, MPModelPodcastEpisode_ptr);
    v245 = &protocol witness table for MPModelPodcastEpisode;
    v243 = v46;
    v48 = v46;
  }
  else
  {
    v51 = *(_QWORD *)(v224 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_legacyPlayer + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v224
                                               + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_legacyPlayer));
    v53 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 208);
    v54 = v234;
    v55 = v53(ObjectType, v51);
    v244 = type metadata accessor for LegacyNowPlayingArtworkDataProvider(0);
    v245 = &protocol witness table for LegacyNowPlayingArtworkDataProvider;
    __swift_allocate_boxed_opaque_existential_1(&v243);
    v56 = v55;
    v46 = v234;
    LegacyNowPlayingArtworkDataProvider.init(episode:legacyPlayerItem:)(v54, v56);
  }
  v57 = objc_msgSend(v46, "artworkInfo");
  if (v57)
  {
    v58 = v57;
    v59 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v57, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v240 = (char *)v59;
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB638);
    v61 = sub_27A8C(&qword_1FB640, &qword_1FB638, (uint64_t)&protocol conformance descriptor for [A : B]);
    v62 = Collection.isNotEmpty.getter(v60, v61);
    if ((v62 & 1) != 0)
    {
      v63 = v222;
      static Logger.nowPlayingArtwork.getter(v62);
      v64 = v235;
      v65 = v204;
      v66 = v232;
      v233 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 16);
      v233(v204, v237, v232);
      v67 = swift_bridgeObjectRetain(v59);
      v68 = Logger.logObject.getter(v67);
      v69 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc(42, -1);
        v223 = (char *)swift_slowAlloc(96, -1);
        v240 = v223;
        *(_DWORD *)v70 = 136315907;
        v238 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, (uint64_t *)&v240);
        v71 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v70 + 4, v70 + 12);
        *(_WORD *)(v70 + 12) = 2080;
        v72 = NowPlayingArtwork.Placement.rawValue.getter(v71);
        v74 = v73;
        v238 = sub_C6F4(v72, v73, (uint64_t *)&v240);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v70 + 14, v70 + 22);
        v75 = swift_bridgeObjectRelease(v74);
        v220 = *(void (**)(char *, uint64_t, __n128))(v235 + 8);
        v220(v65, v66, v75);
        *(_WORD *)(v70 + 22) = 2160;
        v238 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v70 + 24, v70 + 32);
        *(_WORD *)(v70 + 32) = 2081;
        swift_bridgeObjectRetain(v59);
        v76 = Dictionary.description.getter(v59, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
        v78 = v77;
        swift_bridgeObjectRelease(v59);
        v238 = sub_C6F4(v76, v78, (uint64_t *)&v240);
        v64 = v235;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v70 + 34, v70 + 42);
        swift_bridgeObjectRelease_n(v59, 2);
        swift_bridgeObjectRelease(v78);
        v79 = v223;
        swift_arrayDestroy(v223, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v79, -1, -1);
        swift_slowDealloc(v70, -1, -1);

        (*(void (**)(char *, uint64_t))(v215 + 8))(v222, v216);
      }
      else
      {
        v220 = *(void (**)(char *, uint64_t, __n128))(v64 + 8);
        ((void (*)(char *, uint64_t))v220)(v65, v66);

        swift_bridgeObjectRelease_n(v59, 2);
        (*(void (**)(char *, uint64_t))(v215 + 8))(v63, v216);
      }
      v84 = v66;
      v122 = v217;
      v123 = v212;
      v124 = v210;
      v125 = v209;
      v126 = v208;
      sub_DF78(v224 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_artworkProvider, (uint64_t)&v240);
      v127 = v241;
      v128 = v242;
      __swift_project_boxed_opaque_existential_1(&v240, v241);
      sub_DF78((uint64_t)&v243, (uint64_t)&v238);
      v129.n128_u64[0] = v211;
      if ((v123 & 1) != 0)
        v129.n128_f64[0] = 0.0;
      v130 = dispatch thunk of NowPlayingArtworkProviding.data(for:dataProvider:at:)(v237, &v238, v127, v128, v129);
      __swift_destroy_boxed_opaque_existential_0(&v238);
      v238 = v130;
      v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB648);
      v132 = sub_27A8C(&qword_1FB650, &qword_1FB648, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v133 = v205;
      Publisher.map<A>(_:)(sub_2E250, 0, v131, v122, v132);
      swift_release(v130);
      __swift_destroy_boxed_opaque_existential_0(&v240);
      v134 = (uint64_t)v195;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v196 + 56))(v195, 1, 1, v197);
      v135 = sub_27A8C(&qword_1FB658, &qword_1FB600, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
      v136 = v207;
      Publisher.replaceError(with:)(v134, v126, v135);
      sub_9944(v134, (uint64_t *)&unk_1FB1E0);
      (*(void (**)(char *, uint64_t))(v206 + 8))(v133, v126);
      v137 = sub_27A8C(&qword_1FB660, &qword_1FB608, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
      v121 = Publisher.eraseToAnyPublisher()(v124, v137);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v136, v124);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease(v59);
    v46 = v234;
  }
  v80 = objc_msgSend(v46, "artworkCatalog");
  if (v80)
  {
    v81 = v80;
    v82 = v223;
    static Logger.nowPlayingArtwork.getter(v80);
    v64 = v235;
    v83 = (char *)v220;
    v84 = v232;
    v233 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 16);
    v233((char *)v220, v237, v232);
    v85 = v81;
    v86 = Logger.logObject.getter(v85);
    v87 = static os_log_type_t.default.getter();
    v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      v89 = swift_slowAlloc(42, -1);
      v90 = (_QWORD *)swift_slowAlloc(8, -1);
      v224 = swift_slowAlloc(64, -1);
      v240 = (char *)v224;
      *(_DWORD *)v89 = 136315907;
      LODWORD(v222) = v88;
      v238 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, (uint64_t *)&v240);
      v91 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v89 + 4, v89 + 12);
      *(_WORD *)(v89 + 12) = 2080;
      v92 = NowPlayingArtwork.Placement.rawValue.getter(v91);
      v94 = v93;
      v238 = sub_C6F4(v92, v93, (uint64_t *)&v240);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v89 + 14, v89 + 22);
      v95 = swift_bridgeObjectRelease(v94);
      v220 = *(void (**)(char *, uint64_t, __n128))(v235 + 8);
      v220(v83, v84, v95);
      *(_WORD *)(v89 + 22) = 2160;
      v238 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v89 + 24, v89 + 32);
      *(_WORD *)(v89 + 32) = 2113;
      v238 = (uint64_t)v85;
      v96 = v85;
      v64 = v235;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v89 + 34, v89 + 42);
      *v90 = v81;

      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
      swift_arrayDestroy(v90, 1, v97);
      swift_slowDealloc(v90, -1, -1);
      v98 = v224;
      swift_arrayDestroy(v224, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v89, -1, -1);

      v99 = (*(uint64_t (**)(char *, uint64_t))(v215 + 8))(v223, v216);
    }
    else
    {
      v220 = *(void (**)(char *, uint64_t, __n128))(v64 + 8);
      ((void (*)(char *, uint64_t))v220)(v83, v84);

      v99 = (*(uint64_t (**)(char *, uint64_t))(v215 + 8))(v82, v216);
    }
    v113 = v217;
    v114 = v219;
    v115 = v218;
    v116 = MPArtworkCatalog.artworkDataPublisher.getter(v99);
    v240 = (char *)v116;
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB620);
    v118 = sub_27A8C(&qword_1FB628, &qword_1FB620, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v119 = v221;
    Publisher.map<A>(_:)(sub_2E250, 0, v117, v113, v118);
    swift_release(v116);
    v120 = sub_27A8C(&qword_1FB630, &qword_1FB5F8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v121 = Publisher.eraseToAnyPublisher()(v114, v120);

    (*(void (**)(char *, uint64_t))(v115 + 8))(v119, v114);
    goto LABEL_26;
  }
  v100 = v192;
  static Logger.nowPlayingArtwork.getter(0);
  v101 = v235;
  v102 = v203;
  v84 = v232;
  v233 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 16);
  v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v233)(v203, v237, v232);
  v104 = Logger.logObject.getter(v103);
  v105 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v104, v105))
  {
    v106 = swift_slowAlloc(22, -1);
    v224 = swift_slowAlloc(64, -1);
    v240 = (char *)v224;
    *(_DWORD *)v106 = 136315394;
    v238 = sub_C6F4(0xD00000000000001ELL, 0x8000000000184B40, (uint64_t *)&v240);
    v107 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v106 + 4, v106 + 12);
    *(_WORD *)(v106 + 12) = 2080;
    v108 = NowPlayingArtwork.Placement.rawValue.getter(v107);
    v110 = v109;
    v238 = sub_C6F4(v108, v109, (uint64_t *)&v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v106 + 14, v106 + 22);
    v111 = swift_bridgeObjectRelease(v110);
    v220 = *(void (**)(char *, uint64_t, __n128))(v101 + 8);
    v220(v102, v84, v111);
    _os_log_impl(&dword_0, v104, v105, "%s [Artwork/%s] Falling back to using placeholder.", (uint8_t *)v106, 0x16u);
    v112 = v224;
    swift_arrayDestroy(v224, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v112, -1, -1);
    swift_slowDealloc(v106, -1, -1);
  }
  else
  {
    v220 = *(void (**)(char *, uint64_t, __n128))(v101 + 8);
    ((void (*)(char *, uint64_t))v220)(v102, v84);
  }

  (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v100, v216);
  v138 = v217;
  v139 = v197;
  v140 = v196;
  v141 = v194;
  v142 = v193;
  result = objc_msgSend((id)objc_opt_self(UIImage), "defaultPodcastArtwork");
  if (result)
  {
    v144 = v200;
    *v200 = result;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v140 + 104))(v144, enum case for NowPlayingArtwork.Data.image(_:), v139);
    v145 = v199;
    Just.init(_:)(v144, v139);
    v146 = v198;
    v147 = v202;
    Just.map<A>(_:)(sub_2E250, 0, v202, v138);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v145, v147);
    v148 = sub_27A8C(&qword_1FB610, &qword_1FB5F0, (uint64_t)&protocol conformance descriptor for Just<A>);
    v121 = Publisher.eraseToAnyPublisher()(v141, v148);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v146, v141);
    v64 = v235;
LABEL_26:
    v224 = v121;
    v240 = (char *)v121;
    v149 = v227;
    v150 = v237;
    v233(v227, v237, v84);
    v151 = *(unsigned __int8 *)(v64 + 80);
    v152 = (v151 + 16) & ~v151;
    v153 = v152;
    v235 = v152;
    v154 = v151 | 7;
    v155 = (v152 + v225 + 7) & 0xFFFFFFFFFFFFFFF8;
    v219 = v155;
    v156 = ((v152 + v225 + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
    v157 = v64;
    v158 = (v152 + v225 + 31) & 0xFFFFFFFFFFFFFFF8;
    v218 = v158;
    v222 = (char *)v156;
    v223 = (char *)(v151 | 7);
    v159 = swift_allocObject(&unk_1C8EE0, v156, v151 | 7);
    v160 = v159 + v153;
    v161 = *(void (**)(uint64_t, char *, uint64_t))(v157 + 32);
    v161(v160, v149, v84);
    v221 = (char *)v161;
    v162 = v159;
    v232 = v159;
    v163 = v159 + v155;
    v164 = v228;
    v165 = v229;
    *(_QWORD *)v163 = v228;
    *(_QWORD *)(v163 + 8) = v165;
    v166 = v84;
    v167 = v230;
    *(_BYTE *)(v163 + 16) = v230;
    *(_QWORD *)(v162 + v158) = v236;
    v168 = v149;
    v169 = v149;
    v170 = v150;
    v171 = v166;
    v172 = v233;
    ((void (*)(char *, uint64_t))v233)(v168, v170);
    v173 = swift_allocObject(&unk_1C8F08, v156, v154);
    v161(v173 + v235, v169, v171);
    v225 = v173;
    v174 = v219;
    v175 = v173 + v219;
    *(_QWORD *)v175 = v164;
    *(_QWORD *)(v175 + 8) = v165;
    *(_BYTE *)(v175 + 16) = v167;
    v176 = v218;
    v178 = v236;
    v177 = v237;
    *(_QWORD *)(v173 + v218) = v236;
    v172(v169, v177, v171);
    v179 = v226;
    v172(v226, (uint64_t)v169, v171);
    v180 = swift_allocObject(&unk_1C8F30, v222, v223);
    ((void (*)(uint64_t, char *, uint64_t))v221)(v180 + v235, v179, v171);
    v181 = v180 + v174;
    *(_QWORD *)v181 = v164;
    *(_QWORD *)(v181 + 8) = v165;
    *(_BYTE *)(v181 + 16) = v167;
    *(_QWORD *)(v180 + v176) = v178;
    sub_2FE28(v164, v165, v167);
    sub_2FE28(v164, v165, v167);
    sub_2FE28(v164, v165, v167);
    v182 = v224;
    swift_retain(v224);
    v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB518);
    v184 = sub_27A8C(&qword_1FB520, &qword_1FB518, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v191 = v183;
    v185 = v231;
    v186 = v232;
    v187 = v225;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_33768, v232, sub_337D0, v225, sub_338C0, v180, 0, 0, v191, v184);
    swift_release(v186);
    swift_release(v187);
    v188 = swift_release(v180);
    v220(v169, v171, v188);
    swift_release(v240);
    v189 = sub_27A8C(&qword_1FB618, &qword_1FB5E0, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
    v190 = v214;
    v50 = Publisher.eraseToAnyPublisher()(v214, v189);
    swift_release(v182);

    (*(void (**)(char *, uint64_t))(v213 + 8))(v185, v190);
    __swift_destroy_boxed_opaque_existential_0(&v243);
    return (id)v50;
  }
  __break(1u);
  return result;
}

double sub_31E24(void *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, char a6, unsigned int *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double result;
  _BYTE v38[4];
  int v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  id v46;

  v44 = a8;
  v42 = a5;
  v41 = a4;
  v40 = a3;
  v39 = a6 & 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v12);
  v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB668);
  v43 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = &v38[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 104))(v18, *a7, v15);
  v22 = a2;
  v23 = v8;
  v24 = sub_3099C(a1, v22, v40, v41, v42, v39, (uint64_t)v18);
  (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
  v45[0] = v24;
  v25 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v46 = (id)static OS_dispatch_queue.main.getter();
  v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v14, 1, 1, v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB518);
  v28 = sub_27A8C(&qword_1FB520, &qword_1FB518, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v29 = sub_2FE50();
  Publisher.receive<A>(on:options:)(&v46, v14, v27, v25, v28, v29);
  sub_9944((uint64_t)v14, &qword_1FB2C0);

  swift_release(v45[0]);
  KeyPath = swift_getKeyPath(v44);
  v45[0] = v8;
  v31 = sub_27A8C((unint64_t *)&unk_1FB670, &qword_1FB668, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v32 = Publisher<>.assign<A>(to:on:)(KeyPath, v45, v19, v31);
  v33 = swift_release(KeyPath);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v43 + 8))(v21, v19, v33);
  v34 = v23 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions;
  swift_beginAccess(v23 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions, v45, 33, 0);
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v36 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v34, v35, v36);
  swift_endAccess(v45);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

void sub_3211C(void *a1, void (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3, int a4, unint64_t a5, int a6, int a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  _QWORD *boxed_opaque_existential_1;
  unsigned int *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __n128 v67;
  uint64_t KeyPath;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  char *v82;
  __n128 v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  void *v123;
  void (*v124)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char v162[8];
  id v163[5];

  v147 = a7;
  LODWORD(v125) = a6;
  v157 = a5;
  LODWORD(v127) = a4;
  v126 = a3;
  v124 = a2;
  v123 = a1;
  v158 = *v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4C0);
  __chkstk_darwin(v8);
  v139 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4C8);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4D0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4D8);
  v149 = *(_QWORD *)(v13 - 8);
  v150 = v13;
  __chkstk_darwin(v13);
  v146 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4E0);
  v152 = *(_QWORD *)(v15 - 8);
  v153 = v15;
  __chkstk_darwin(v15);
  v151 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4E8);
  v155 = *(_QWORD *)(v17 - 8);
  v156 = v17;
  __chkstk_darwin(v17);
  v154 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v19);
  v21 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4F0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v122 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB4F8);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v128 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB500);
  v24 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v133 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB508);
  v148 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v160 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DispatchPredicate(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char **)((char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v134 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v34 = ((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v34, enum case for DispatchPredicate.onQueue(_:), v31);
  v35 = _dispatchPreconditionTest(_:)(v34);
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v34, v31);
  if ((v35 & 1) != 0)
  {
    v36 = type metadata accessor for Podcasts(0);
    v163[3] = (id)v36;
    v163[4] = (id)sub_8330(&qword_1FB510, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v163);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(boxed_opaque_existential_1, enum case for Podcasts.useShowPageTallForBackdrop(_:), v36);
    LOBYTE(v36) = isFeatureEnabled(_:)(v163);
    __swift_destroy_boxed_opaque_existential_0(v163);
    v38 = (unsigned int *)&enum case for NowPlayingArtwork.Placement.backdrop(_:);
    v121 = v28;
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 104);
    if ((v36 & 1) == 0)
      v38 = (unsigned int *)&enum case for NowPlayingArtwork.Placement.primary(_:);
    v40 = *v38;
    v119 = v30;
    v120 = v27;
    v39(v30, v40, v27);
    v41 = v159;
    v42 = sub_3099C(v123, (uint64_t)v124, v126, v127, v157, v125 & 1, (uint64_t)v30);
    v163[0] = v42;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB518);
    v127 = v24;
    v44 = sub_27A8C(&qword_1FB520, &qword_1FB518, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v45 = (void *)Publisher.share()(v43, v44);
    swift_release(v42);
    v163[0] = v45;
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB528);
    v47 = sub_27A8C(&qword_1FB530, &qword_1FB528, (uint64_t)&protocol conformance descriptor for Publishers.Share<A>);
    Publisher<>.makeConnectable()(v46, v47);
    swift_release(v45);
    v48 = swift_allocObject(&unk_1C8DA0, 17, 7);
    *(_BYTE *)(v48 + 16) = 0;
    v49 = v48;
    v50 = swift_allocObject(&unk_1C8D28, 24, 7);
    v51 = swift_weakInit(v50 + 16, v41);
    v52 = static Subscribers.Demand.unlimited.getter(v51);
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB330);
    v54 = sub_27A8C(&qword_1FB538, &qword_1FB508, (uint64_t)&protocol conformance descriptor for Publishers.MakeConnectable<A>);
    v126 = v54;
    v55 = sub_27A8C(&qword_1FBF00, (uint64_t *)&unk_1FB330, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v56 = v122;
    Publisher<>.flatMap<A>(maxPublishers:_:)(v52, sub_32FB4, v50, v161, v53, v54, v55);
    v57 = swift_release(v50);
    v58 = v134;
    v163[0] = (id)static OS_dispatch_queue.main.getter(v57);
    v59 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v124 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
    v124(v21, 1, 1, v59);
    v60 = sub_27A8C(&qword_1FB540, &qword_1FB4F0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
    v157 = sub_2FE50();
    v61 = v128;
    v62 = v130;
    Publisher.receive<A>(on:options:)(v163, v21, v130, v58, v60, v157);
    sub_9944((uint64_t)v21, &qword_1FB2C0);

    (*(void (**)(char *, uint64_t))(v129 + 8))(v56, v62);
    v63 = swift_allocObject(&unk_1C8DC8, 24, 7);
    *(_QWORD *)(v63 + 16) = v158;
    v64 = sub_27A8C(&qword_1FB548, &qword_1FB4F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v125 = v49;
    swift_retain(v49);
    v65 = v132;
    v66 = v133;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_32FCC, v63, sub_32FEC, v49, 0, 0, 0, 0, v132, v64);
    swift_release(v63);
    v67 = swift_release(v49);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v61, v65, v67);
    KeyPath = swift_getKeyPath(&off_16C4A8);
    v69 = v159;
    v163[0] = v159;
    v70 = sub_27A8C((unint64_t *)&unk_1FB550, &qword_1FB500, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
    v71 = v135;
    v72 = Publisher<>.assign<A>(to:on:)(KeyPath, v163, v135, v70);
    v73 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v127 + 8))(v66, v71, v73);
    v74 = &v69[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions];
    v132 = (uint64_t)&v69[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions];
    swift_beginAccess(&v69[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_subscriptions], v163, 33, 0);
    v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
    v135 = v75;
    v133 = (char *)sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v74, v75, v133);
    swift_endAccess(v163);
    swift_release(v72);
    v76 = v136;
    OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(0.3);
    v77 = v137;
    v78 = (uint64_t)v139;
    v79 = v138;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v139, 1, 1, v138);
    v163[0] = (id)static OS_dispatch_queue.main.getter(v80);
    v81 = v124;
    v124(v21, 1, 1, v59);
    v82 = v140;
    Publisher.delay<A>(for:tolerance:scheduler:options:)(v76, v78, v163, v21, v161, v58, v126, v157);
    sub_9944((uint64_t)v21, &qword_1FB2C0);

    sub_9944(v78, &qword_1FB4C0);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v79);
    v163[0] = (id)static OS_dispatch_queue.main.getter(v83);
    v81(v21, 1, 1, v59);
    v84 = sub_27A8C(&qword_1FB568, &qword_1FB4C8, (uint64_t)&protocol conformance descriptor for Publishers.Delay<A, B>);
    v85 = v143;
    v86 = v142;
    Publisher.receive<A>(on:options:)(v163, v21, v142, v58, v84, v157);
    sub_9944((uint64_t)v21, &qword_1FB2C0);

    (*(void (**)(char *, uint64_t))(v141 + 8))(v82, v86);
    v87 = swift_allocObject(&unk_1C8D28, 24, 7);
    v88 = v159;
    swift_weakInit(v87 + 16, v159);
    v89 = swift_allocObject(&unk_1C8DF0, 33, 7);
    v90 = v125;
    *(_QWORD *)(v89 + 16) = v87;
    *(_QWORD *)(v89 + 24) = v90;
    *(_BYTE *)(v89 + 32) = v147 & 1;
    v91 = swift_retain(v90);
    v92 = static Subscribers.Demand.unlimited.getter(v91);
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB570);
    v94 = sub_27A8C(&qword_1FB578, &qword_1FB4D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v95 = sub_27A8C(&qword_1FB580, &qword_1FB570, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v96 = v146;
    v97 = v92;
    v98 = v145;
    Publisher<>.flatMap<A>(maxPublishers:_:)(v97, sub_3305C, v89, v145, v93, v94, v95);
    v99 = swift_release(v89);
    (*(void (**)(char *, uint64_t, __n128))(v144 + 8))(v85, v98, v99);
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
    v101 = sub_27A8C(&qword_1FB588, &qword_1FB4D8, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
    v102 = v150;
    v103 = v151;
    Publisher.map<A>(_:)(sub_33A58, 0, v150, v100, v101);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v96, v102);
    v104 = swift_allocObject(&unk_1C8E18, 24, 7);
    *(_QWORD *)(v104 + 16) = v158;
    v105 = sub_27A8C(&qword_1FB590, &qword_1FB4E0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v106 = v153;
    v107 = v154;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_33078, v104, 0, 0, 0, 0, 0, 0, v153, v105);
    v108 = swift_release(v104);
    (*(void (**)(char *, uint64_t, __n128))(v152 + 8))(v103, v106, v108);
    v109 = swift_getKeyPath(&off_16C4A8);
    v163[0] = v88;
    v110 = sub_27A8C(&qword_1FB598, &qword_1FB4E8, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
    v111 = v156;
    v112 = Publisher<>.assign<A>(to:on:)(v109, v163, v156, v110);
    v113 = swift_release(v109);
    (*(void (**)(char *, uint64_t, __n128))(v155 + 8))(v107, v111, v113);
    v114 = v132;
    swift_beginAccess(v132, v163, 33, 0);
    AnyCancellable.store<A>(in:)(v114, v135, v133);
    swift_endAccess(v163);
    v115 = swift_release(v112);
    v117 = v160;
    v116 = v161;
    Publishers.MakeConnectable.connect()(v163, v161, v115);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v117, v116);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v119, v120);
    v118 = (uint64_t)&v88[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_backdropConnection];
    swift_beginAccess(&v88[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController_backdropConnection], v162, 33, 0);
    sub_33098((uint64_t)v163, v118);
    swift_endAccess(v162);
    swift_release(v90);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_32FA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_32FB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2D4D4(a1, v2, a2);
}

uint64_t sub_32FBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_32FCC(void **a1)
{
  uint64_t v1;

  return sub_2DCD0(a1, *(_QWORD *)(v1 + 16), "%s [Backdrop] Publishing image=%@.");
}

uint64_t sub_32FEC()
{
  uint64_t v0;
  uint64_t result;
  _BYTE v2[24];

  result = swift_beginAccess(v0 + 16, v2, 1, 0);
  *(_BYTE *)(v0 + 16) = 1;
  return result;
}

uint64_t sub_33030()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_3305C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2DAEC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_33068()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_33078(void **a1)
{
  uint64_t v1;

  return sub_2DCD0(a1, *(_QWORD *)(v1 + 16), "%s [Backdrop] Publishing placeholder=%@.");
}

uint64_t sub_33098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_330E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v43 = a2;
  v53 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A8);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v5 = *(_QWORD *)(v44 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v44);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5C0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v47 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5C8);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  __chkstk_darwin(v9);
  v49 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NowPlayingArtwork.Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  v18 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v42 - v19;
  sub_30868(v53, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_9944((uint64_t)v13, (uint64_t *)&unk_1FB1E0);
    v21 = sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
    Empty.init(completeImmediately:)(1, v21, &type metadata for Never, &protocol witness table for Never);
    v22 = sub_27A8C(&qword_1FB5B8, &qword_1FB5A8, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
    v23 = v46;
    v24 = Publisher.eraseToAnyPublisher()(v46, v22);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v4, v23);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v42 = v20;
    v25(v20, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    v26 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v43, v44);
    v27 = *(unsigned __int8 *)(v15 + 80);
    v28 = (v27 + 16) & ~v27;
    v29 = *(unsigned __int8 *)(v5 + 80);
    v30 = (v16 + v29 + v28) & ~v29;
    v31 = swift_allocObject(&unk_1C8E40, v30 + v6, v27 | v29 | 7);
    v25((char *)(v31 + v28), v18, v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v31 + v30, v7, v26);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB360);
    v33 = sub_27A8C(&qword_1FB378, &qword_1FB360, (uint64_t)&protocol conformance descriptor for Just<A>);
    v34 = v47;
    Deferred.init(createPublisher:)(sub_335D4, v31, v32, v33);
    v35 = sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
    v36 = sub_27A8C(&qword_1FB5D0, &qword_1FB5C0, (uint64_t)&protocol conformance descriptor for Deferred<A>);
    v38 = v49;
    v37 = v50;
    Publisher.compactMap<A>(_:)(sub_2DCC4, 0, v50, v35, v36);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v37);
    v39 = sub_27A8C(&qword_1FB5D8, &qword_1FB5C8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v40 = v52;
    v24 = Publisher.eraseToAnyPublisher()(v52, v39);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v40);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v42, v14);
  }
  return v24;
}

uint64_t sub_33520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for NowPlayingArtwork.Data(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_335D4()
{
  __n128 v0;

  type metadata accessor for NowPlayingArtwork.Data(0);
  type metadata accessor for NowPlayingArtwork.Placement(0);
  return sub_2E094(v0);
}

uint64_t sub_3363C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_33680(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_336BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_336E0(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;

  v3 = *(double *)(v1 + 24);
  v4 = *(double *)(v1 + 32);
  objc_msgSend(*(id *)(v1 + 16), "setFill");
  return objc_msgSend(a1, "fillRect:", 0.0, 0.0, v3, v4);
}

uint64_t sub_33734()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_33744(uint64_t a1)
{
  uint64_t v1;

  return sub_C80B0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_33768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for NowPlayingArtwork.Placement(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2E2B4(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(unsigned __int8 *)(v1 + v5 + 16));
}

uint64_t sub_337D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for NowPlayingArtwork.Placement(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2E714(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_BYTE *)(v1 + v5 + 16));
}

uint64_t objectdestroy_46Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v6 = v0 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v7 = *(unsigned __int8 *)(v6 + 16);
  if (v7 != 255)
    sub_2F6A4(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), v7 & 1);
  return swift_deallocObject(v0, ((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_338C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for NowPlayingArtwork.Placement(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + *(_QWORD *)(v1 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2EA78(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_BYTE *)(v0 + v3 + 16));
}

uint64_t sub_33914@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2E0F4(a1, (uint64_t)&unk_16C4F0, (uint64_t)&unk_16C518, a2);
}

uint64_t sub_33938(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_2E158(a1, a2, a3, a4, (uint64_t)&unk_16C4F0, (uint64_t)&unk_16C518);
}

uint64_t sub_3395C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2E0F4(a1, (uint64_t)&unk_16C538, (uint64_t)&unk_16C560, a2);
}

uint64_t sub_33980(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_2E158(a1, a2, a3, a4, (uint64_t)&unk_16C538, (uint64_t)&unk_16C560);
}

uint64_t sub_339A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(void **)(a1 + 56);
  v7 = *(void **)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v16 = *(void **)(a1 + 120);
  v17 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 88);
  v11 = *(id *)a1;
  sub_2FE28(v2, v3, v9);
  v12 = v7;
  swift_unknownObjectRetain(v4);
  v13 = v5;
  sub_2FE28(v6, v8, v10);
  v14 = v16;
  swift_unknownObjectRetain(v17);
  return a1;
}

Swift::Int sub_33A5C()
{
  void **v0;
  void *v1;
  id v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
  {
    v2 = v1;
    NSObject.hash(into:)(v4);

  }
  else
  {
    Hasher._combine(_:)(0xF4240uLL);
  }
  return Hasher._finalize()();
}

void sub_33AC0(uint64_t a1)
{
  id *v1;
  id v3;

  if (*v1)
  {
    v3 = *v1;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0xF4240uLL);
  }
}

void **_s5ColorOwCP(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void _s5ColorOwxx(id *a1)
{

}

void **_s5ColorOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **_s5ColorOwta(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s5ColorOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s5ColorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_33C64(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_33C7C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *_s5ColorOMa()
{
  return &_s5ColorON;
}

Swift::Int sub_33CAC(uint64_t a1)
{
  void **v1;
  void *v2;
  id v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
  {
    v3 = v2;
    NSObject.hash(into:)(v5);

  }
  else
  {
    Hasher._combine(_:)(0xF4240uLL);
  }
  return Hasher._finalize()();
}

id sub_33D0C(void **a1, void **a2)
{
  void *v2;
  void *v3;

  v2 = *a1;
  v3 = *a2;
  if (!v2)
    return (id)(v3 == 0);
  if (!v3)
    return 0;
  if (v2 == v3)
    return &dword_0 + 1;
  return objc_msgSend(v2, "isEqual:");
}

unint64_t sub_33D6C()
{
  unint64_t result;

  result = qword_1FB680;
  if (!qword_1FB680)
  {
    result = swift_getWitnessTable(&unk_16C588, &_s5ColorON);
    atomic_store(result, (unint64_t *)&qword_1FB680);
  }
  return result;
}

id sub_33E68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StatusBarBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StatusBarBackgroundView()
{
  return objc_opt_self(_TtC12NowPlayingUI23StatusBarBackgroundView);
}

uint64_t storeEnumTagSinglePayload for StatusBarBackgroundView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_33F04 + 4 * byte_16C5F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_33F38 + 4 * byte_16C5F0[v4]))();
}

uint64_t sub_33F38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_33F40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x33F48);
  return result;
}

uint64_t sub_33F54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x33F5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_33F60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_33F68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusBarBackgroundView.Style()
{
  return &type metadata for StatusBarBackgroundView.Style;
}

unint64_t sub_33F88()
{
  unint64_t result;

  result = qword_1FB6C0;
  if (!qword_1FB6C0)
  {
    result = swift_getWitnessTable(&unk_16C670, &type metadata for StatusBarBackgroundView.Style);
    atomic_store(result, (unint64_t *)&qword_1FB6C0);
  }
  return result;
}

_QWORD *sub_33FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  _OWORD v30[2];

  v8 = v7;
  v28 = *v7;
  v7[8] = &_swiftEmptySetSingleton;
  v16 = v7 + 8;
  v17 = (char *)v7 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___hostedContent;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB720);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___queueButton) = 0;
  *(_QWORD *)((char *)v8
            + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___transcriptButton) = 0;
  v8[2] = a1;
  v19 = type metadata accessor for PlaybackController(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v30, v19, v19);
  v8[3] = *(_QWORD *)&v30[0];
  v8[6] = a2;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F0);
  swift_retain(a2);
  BaseObjectGraph.inject<A>(_:)(v30, v20, v20);
  *((_OWORD *)v8 + 2) = v30[0];
  v8[7] = a3;
  v8[9] = a4;
  v8[10] = a6;
  *((_BYTE *)v8 + 88) = a7;
  *(_QWORD *)&v30[0] = a5;
  v21 = swift_allocObject(&unk_1C9138, 24, 7);
  swift_weakInit(v21 + 16, v8);
  v22 = swift_allocObject(&unk_1C9160, 32, 7);
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v28;
  swift_retain(a3);
  swift_retain(a4);
  swift_retain(a6);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
  v24 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v25 = Publisher<>.sink(receiveValue:)(sub_36D44, v22, v23, v24);
  swift_release(v22);
  v26 = swift_beginAccess(v16, v30, 33, 0);
  AnyCancellable.store(in:)(v16, v26);
  swift_endAccess(v30);
  swift_release(v25);
  swift_release(a1);
  swift_release(a2);
  swift_release(a3);
  swift_release(a4);
  swift_release(a5);
  swift_release(a6);
  return v8;
}

double sub_3421C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  double result;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a2 + 16;
  v13 = static Logger.nowPlaying.getter(v8);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(18, -1);
    v28 = v7;
    v17 = v16;
    v18 = swift_slowAlloc(32, -1);
    v30[0] = v18;
    *(_DWORD *)v17 = 136315394;
    v19 = _typeName(_:qualified:)(a3, 0);
    v21 = v20;
    v29 = sub_C6F4(v19, v20, v30);
    v27 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v17 + 12) = 1026;
    LODWORD(v29) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, (char *)&v29 + 4, v17 + 14, v17 + 18);
    _os_log_impl(&dword_0, v14, v15, "[%s]: [Transcript Button] Setting to enabled: %{BOOL,public}d", (uint8_t *)v17, 0x12u);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v27);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_beginAccess(v12, v30, 0, 0);
  Strong = swift_weakLoadStrong(v12);
  if (Strong)
  {
    v24 = Strong;
    v25 = sub_3443C();
    v26 = swift_release(v24);
    dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.setter(v11, v26);
    *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_3443C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = v0;
  v2 = type metadata accessor for NowPlayingHostedContentID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for NowPlayingButtonID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___transcriptButton;
  v11 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___transcriptButton);
  if (v11)
  {
    v12 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___transcriptButton);
  }
  else
  {
    if (qword_1F9478 != -1)
      swift_once(&qword_1F9478, sub_35E2C);
    v13 = __swift_project_value_buffer(v6, (uint64_t)static NowPlayingButtonID.transcript);
    v14 = swift_beginAccess(v13, v21, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v13, v6, v14);
    if (qword_1F9480 != -1)
      swift_once(&qword_1F9480, sub_35F0C);
    v15 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingHostedContentID.transcript);
    v16 = swift_beginAccess(v15, v20, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v15, v2, v16);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB928);
    swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
    v12 = NowPlayingHostedContentToggleButton.init(_:presenting:label:)(v9, v5, sub_34FA0, 0);
    v18 = *(_QWORD *)(v1 + v10);
    *(_QWORD *)(v1 + v10) = v12;
    swift_retain(v12);
    swift_release(v18);
    v11 = 0;
  }
  swift_retain(v11);
  return v12;
}

uint64_t sub_34624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB948);
  __chkstk_darwin(v4);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NowPlayingHostedContentID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB950);
  __chkstk_darwin(v10);
  v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB908);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v36 - v16;
  v18 = v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___hostedContent;
  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___hostedContent, v41, 0, 0);
  sub_2808C(v18, (uint64_t)v17, &qword_1FB908);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB720);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(a1, v17, v19);
  v36 = a1;
  v21 = sub_9944((uint64_t)v17, &qword_1FB908);
  static NowPlayingHostedContentID.queue.getter(v21);
  v22 = sub_36C44();
  ContentLookupItem<>.init(_:hostedContent:)(v9, sub_36C3C, v2, &type metadata for QueueView, v22);
  if (qword_1F9480 != -1)
    swift_once(&qword_1F9480, sub_35F0C);
  v23 = __swift_project_value_buffer(v6, (uint64_t)static NowPlayingHostedContentID.transcript);
  v24 = swift_beginAccess(v23, v40, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v23, v6, v24);
  v25 = swift_unownedRetainStrong(v2);
  v26 = swift_unownedRetain(v25);
  swift_release(v26);
  v27 = swift_allocObject(&unk_1C9110, 24, 7);
  *(_QWORD *)(v27 + 16) = v2;
  v28 = type metadata accessor for TranscriptViewController();
  v29 = sub_8330(&qword_1FB960, (uint64_t (*)(uint64_t))type metadata accessor for TranscriptViewController, (uint64_t)&unk_16EDC0);
  v30 = v37;
  ContentLookupItem<>.init<A>(_:viewController:)(v9, sub_36CAC, v27, v28, v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB968);
  v32 = sub_8330(&qword_1FB970, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentID);
  v33 = sub_27A8C(&qword_1FB978, &qword_1FB968, (uint64_t)&protocol conformance descriptor for NowPlayingHostedViewControllerStack<A>);
  v34 = v36;
  ContentLookup.init<A, B>(_:_:)(v38, v30, v6, &type metadata for QueueView, v31, v32, v22, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v15, v34, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
  swift_beginAccess(v18, v39, 33, 0);
  sub_36CB4((uint64_t)v15, v18);
  return swift_endAccess(v39);
}

uint64_t sub_349DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v3 = *(_QWORD *)(a1 + 56);
  v4 = swift_retain(v3);
  v5 = dispatch thunk of NowPlayingViewModel.playbackPosition.getter(v4);
  v6 = type metadata accessor for NowPlayingMediaPlayerController();
  v7 = sub_8330(&qword_1FAA68, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingMediaPlayerController, (uint64_t)&protocol conformance descriptor for NowPlayingMediaPlayerController);
  v8 = EnvironmentObject.init()(v6, v7);
  v10 = v9;
  v19 = 0;
  State.init(wrappedValue:)(v20, &v19, &type metadata for CGFloat);
  v11 = v20[0];
  v12 = v20[1];
  v13 = *(_QWORD *)(v3 + 24);
  v14 = type metadata accessor for QueueViewModel(0);
  v15 = sub_8330(&qword_1FAA90, type metadata accessor for QueueViewModel, (uint64_t)&unk_16FE20);
  v16 = swift_retain(v13);
  result = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  *a2 = v3;
  a2[1] = v5;
  a2[2] = result;
  a2[3] = v18;
  a2[4] = v8;
  a2[5] = v10;
  a2[6] = v11;
  a2[7] = v12;
  return result;
}

uint64_t NowPlayingHostedContentID.transcript.unsafeMutableAddressor()
{
  return sub_34F5C(&qword_1F9480, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)static NowPlayingHostedContentID.transcript, (uint64_t)sub_35F0C);
}

id sub_34B14(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v13;

  swift_unownedRetainStrong(a2);
  v4 = a2[2];
  swift_retain(v4);
  swift_release(a2);
  v5 = type metadata accessor for NowPlayingHostedContentSession(0);
  v13 = a1;
  v6 = BaseObjectGraph.satisfying<A>(_:with:)(v5, &v13, v5);
  swift_release(v4);
  swift_unownedRetainStrong(a2);
  v7 = a2[6];
  swift_retain(v7);
  swift_release(a2);
  swift_unownedRetainStrong(a2);
  v8 = a2[9];
  swift_retain(v8);
  swift_release(a2);
  swift_unownedRetainStrong(a2);
  v9 = a2[10];
  swift_retain(v9);
  swift_release(a2);
  v10 = objc_allocWithZone((Class)type metadata accessor for TranscriptViewController());
  v11 = sub_8DE38(v6, v7, v8, v9);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  return v11;
}

uint64_t sub_34C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for NowPlayingHostedContentID(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NowPlayingButtonID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___queueButton;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___queueButton);
  if (v9)
  {
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___queueButton);
  }
  else
  {
    v11 = static NowPlayingButtonID.queue.getter(0);
    static NowPlayingHostedContentID.queue.getter(v11);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB920);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v10 = NowPlayingHostedContentToggleButton.init(_:presenting:label:)(v7, v4, UIScreen.Dimensions.size.getter, 0);
    v13 = *(_QWORD *)(v1 + v8);
    *(_QWORD *)(v1 + v8) = v10;
    swift_retain(v10);
    swift_release(v13);
    v9 = 0;
  }
  swift_retain(v9);
  return v10;
}

uint64_t sub_34D44()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;

  v0 = type metadata accessor for IconOnlyLabelStyle(0);
  v17 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8F8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v19._object = (void *)0xE000000000000000;
  v8._object = (void *)0x8000000000184E20;
  v8._countAndFlagsBits = 0xD000000000000015;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  v18 = v10;
  v11 = sub_11CEC();
  v12 = Label<>.init<A>(_:systemImage:)(&v18, 0x6C75622E7473696CLL, 0xEB0000000074656CLL, &type metadata for String, v11);
  IconOnlyLabelStyle.init()(v12);
  v13 = sub_27A8C(&qword_1FB900, &qword_1FB8F8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v14 = sub_8330(&qword_1FB8E8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)(v2, v3, v0, v13, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t NowPlayingButtonID.transcript.unsafeMutableAddressor()
{
  return sub_34F5C(&qword_1F9478, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingButtonID, (uint64_t)static NowPlayingButtonID.transcript, (uint64_t)sub_35E2C);
}

uint64_t sub_34F5C(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = a2(0);
  return __swift_project_value_buffer(v6, a3);
}

uint64_t sub_34FA0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = swift_getKeyPath(&unk_16C898);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

void sub_34FE4(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6._object = (void *)0xE000000000000000;
  v3._object = (void *)0x8000000000184E00;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v6);

  *(Swift::String *)a1 = v5;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_35090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8F0);
  __chkstk_darwin(v31);
  v2 = (uint64_t *)((char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8D8);
  __chkstk_darwin(v28);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8C8);
  v9 = __chkstk_darwin(v30);
  v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v29 = (uint64_t)&v27 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_56764((uint64_t)v15);
  v16 = type metadata accessor for ToggleStyleConfiguration(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_9944((uint64_t)v15, &qword_1FB800);
  }
  else
  {
    v18 = ToggleStyleConfiguration.isOn.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    if ((v18 & 1) != 0)
    {
      v19 = Image.init(_:bundle:)(0xD000000000000024, 0x8000000000184DD0, 0);
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
      KeyPath = swift_getKeyPath(&unk_16C868);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v28 + 28), v8, v5);
      *v4 = KeyPath;
      v21 = v30;
      sub_2808C((uint64_t)v4, (uint64_t)v11 + *(int *)(v30 + 36), &qword_1FB8D8);
      *v11 = v19;
      swift_retain(v19);
      sub_9944((uint64_t)v4, &qword_1FB8D8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release(v19);
      v22 = (uint64_t)v11;
      v23 = v29;
      sub_982C(v22, v29, &qword_1FB8C8);
      sub_2808C(v23, (uint64_t)v2, &qword_1FB8C8);
      swift_storeEnumTagMultiPayload(v2, v31, 0);
      v24 = sub_36A74();
      _ConditionalContent<>.init(storage:)(v2, v21, &type metadata for Image, v24, &protocol witness table for Image);
      return sub_9944(v23, &qword_1FB8C8);
    }
  }
  *v2 = Image.init(systemName:)(0x75622E65746F7571, 0xEC000000656C6262);
  swift_storeEnumTagMultiPayload(v2, v31, 1);
  v26 = sub_36A74();
  return _ConditionalContent<>.init(storage:)(v2, v30, &type metadata for Image, v26, &protocol witness table for Image);
}

uint64_t sub_35414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;

  v1 = type metadata accessor for IconOnlyLabelStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8B0);
  v10 = sub_36A08();
  v11 = Label.init(title:icon:)(sub_34FE4, 0, sub_36A00, v15, &type metadata for Text, v9, &protocol witness table for Text, v10);
  IconOnlyLabelStyle.init()(v11);
  v12 = sub_27A8C(&qword_1FB8E0, &qword_1FB8A8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v13 = sub_8330(&qword_1FB8E8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)(v4, v5, v1, v12, v13);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_355A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char v92[24];
  char v93[24];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v81 = a1;
  v2 = type metadata accessor for NowPlayingButtonID(0);
  v91 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v89 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v84 = (char *)&v70 - v6;
  v7 = __chkstk_darwin(v5);
  v86 = (char *)&v70 - v8;
  __chkstk_darwin(v7);
  v83 = (char *)&v70 - v9;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB910);
  v10 = *(_QWORD *)(v82 - 8);
  v11 = __chkstk_darwin(v82);
  v85 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v88 = (uint64_t)&v70 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v70 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v70 - v19;
  if (*(_BYTE *)(v1 + 88) == 1)
    v21 = static Podcasts.areTranscriptsEnabled.getter(v18);
  else
    v21 = 0;
  v80 = type metadata accessor for NowPlayingRouteButton(0);
  v96 = static NowPlayingButton<>.route.getter();
  v95 = sub_34C30();
  v94 = sub_3443C();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB918);
  v23 = *(_QWORD *)(v10 + 72);
  v24 = *(unsigned __int8 *)(v10 + 80);
  v25 = (v24 + 32) & ~v24;
  v79 = 3 * v23;
  v75 = v22;
  v74 = v24 | 7;
  v26 = swift_allocObject(v22, v25 + 3 * v23, v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_16C6A0;
  v76 = v25;
  v73 = v26;
  v27 = v26 + v25;
  v78 = v21;
  if ((v21 & 1) != 0)
  {
    if (qword_1F9478 != -1)
      swift_once(&qword_1F9478, sub_35E2C);
    v28 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingButtonID.transcript);
    v29 = swift_beginAccess(v28, v92, 0, 0);
    v30 = v91;
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v91 + 16))(v27, v28, v2, v29);
    v31 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56);
    v32 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v31)(v27, 0, 1, v2);
  }
  else
  {
    v31 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v91 + 56);
    v32 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v26 + v25, 1, 1, v2);
  }
  static NowPlayingButtonID.route.getter(v32);
  v33 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v31)(v27 + v23, 0, 1, v2);
  v71 = 2 * v23;
  static NowPlayingButtonID.queue.getter(v33);
  v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31;
  v31(v27 + 2 * v23, 0, 1, v2);
  v90 = (char *)_swiftEmptyArrayStorage;
  v34 = 3;
  v72 = v27;
  v35 = v91;
  v87 = v23;
  do
  {
    sub_2808C(v27, (uint64_t)v20, &qword_1FB910);
    sub_982C((uint64_t)v20, (uint64_t)v17, &qword_1FB910);
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    if (v36(v17, 1, v2) == 1)
    {
      sub_9944((uint64_t)v17, &qword_1FB910);
    }
    else
    {
      v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v38 = v83;
      v37(v83, v17, v2);
      v37(v86, v38, v2);
      if ((swift_isUniquelyReferenced_nonNull_native(v90) & 1) == 0)
        v90 = (char *)sub_134EF4(0, *((_QWORD *)v90 + 2) + 1, 1, (unint64_t)v90);
      v40 = *((_QWORD *)v90 + 2);
      v39 = *((_QWORD *)v90 + 3);
      if (v40 >= v39 >> 1)
        v90 = (char *)sub_134EF4(v39 > 1, v40 + 1, 1, (unint64_t)v90);
      v41 = v90;
      *((_QWORD *)v90 + 2) = v40 + 1;
      v35 = v91;
      v37(&v41[((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v91 + 72) * v40], v86, v2);
      v23 = v87;
    }
    v27 += v23;
    --v34;
  }
  while (v34);
  v42 = v73;
  swift_setDeallocating(v73);
  swift_arrayDestroy(v72, *(_QWORD *)(v42 + 16), v82);
  swift_deallocClassInstance(v42, 32, 7);
  v43 = v76;
  v44 = swift_allocObject(v75, v76 + 4 * v23, v74);
  *(_OWORD *)(v44 + 16) = xmmword_16C6B0;
  v86 = (char *)v44;
  v45 = v44 + v43;
  static NowPlayingButtonID.route.getter(v44);
  v46 = 1;
  v47 = v77;
  v48 = v77(v45, 0, 1, v2);
  static NowPlayingButtonID.spacer.getter(v48);
  v47(v45 + v23, 0, 1, v2);
  v49 = v45 + v71;
  v50 = (uint64_t)v85;
  if ((v78 & 1) != 0)
  {
    if (qword_1F9478 != -1)
      swift_once(&qword_1F9478, sub_35E2C);
    v51 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingButtonID.transcript);
    v52 = swift_beginAccess(v51, v93, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v91 + 16))(v49, v51, v2, v52);
    v46 = 0;
  }
  v53 = v47(v49, v46, 1, v2);
  v54 = v45 + v79;
  static NowPlayingButtonID.queue.getter(v53);
  v47(v54, 0, 1, v2);
  v55 = (char *)_swiftEmptyArrayStorage;
  v56 = 4;
  v57 = v45;
  do
  {
    v58 = v88;
    sub_2808C(v57, v88, &qword_1FB910);
    sub_982C(v58, v50, &qword_1FB910);
    if (v36((char *)v50, 1, v2) == 1)
    {
      sub_9944(v50, &qword_1FB910);
    }
    else
    {
      v59 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
      v60 = v84;
      v59(v84, v50, v2);
      v59(v89, (uint64_t)v60, v2);
      if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
        v55 = (char *)sub_134EF4(0, *((_QWORD *)v55 + 2) + 1, 1, (unint64_t)v55);
      v62 = *((_QWORD *)v55 + 2);
      v61 = *((_QWORD *)v55 + 3);
      if (v62 >= v61 >> 1)
        v55 = (char *)sub_134EF4(v61 > 1, v62 + 1, 1, (unint64_t)v55);
      *((_QWORD *)v55 + 2) = v62 + 1;
      v59(&v55[((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(_QWORD *)(v91 + 72) * v62], (uint64_t)v89, v2);
      v50 = (uint64_t)v85;
      v23 = v87;
    }
    v57 += v23;
    --v56;
  }
  while (v56);
  v63 = v86;
  swift_setDeallocating(v86);
  swift_arrayDestroy(v45, *((_QWORD *)v63 + 2), v82);
  swift_deallocClassInstance(v63, 32, 7);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB920);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB928);
  v66 = sub_8330(&qword_1FB930, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingRouteButton, (uint64_t)&protocol conformance descriptor for NowPlayingRouteButton);
  v67 = sub_27A8C(&qword_1FB938, &qword_1FB920, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentToggleButton<A>);
  v68 = sub_27A8C(&qword_1FB940, &qword_1FB928, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentToggleButton<A>);
  return NowPlayingFooterConfiguration.init<A, B, C>(_:_:_:compact:regular:)(&v96, &v95, &v94, v90, v55, v80, v64, v65, v66, v67, v68);
}

_QWORD *sub_35D7C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___hostedContent, &qword_1FB908);
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___queueButton));
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingFooterButtonController____lazy_storage___transcriptButton));
  return v0;
}

uint64_t sub_35E08()
{
  uint64_t v0;

  sub_35D7C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_35E2C(uint64_t a1)
{
  return sub_35F28(a1, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingButtonID, static NowPlayingButtonID.transcript, (uint64_t (*)(uint64_t, unint64_t))&NowPlayingButtonID.init(_:));
}

uint64_t static NowPlayingButtonID.transcript.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_35FB4(&qword_1F9478, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingButtonID, (uint64_t)static NowPlayingButtonID.transcript, (uint64_t)sub_35E2C, a1);
}

uint64_t static NowPlayingButtonID.transcript.setter(uint64_t a1)
{
  return sub_36064(a1, &qword_1F9478, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingButtonID, (uint64_t)static NowPlayingButtonID.transcript, (uint64_t)sub_35E2C);
}

uint64_t (*static NowPlayingButtonID.transcript.modify(uint64_t a1))(_QWORD)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F9478 != -1)
    swift_once(&qword_1F9478, sub_35E2C);
  v2 = type metadata accessor for NowPlayingButtonID(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingButtonID.transcript);
  swift_beginAccess(v3, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_35F0C(uint64_t a1)
{
  return sub_35F28(a1, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingHostedContentID, static NowPlayingHostedContentID.transcript, (uint64_t (*)(uint64_t, unint64_t))&NowPlayingHostedContentID.init(_:));
}

uint64_t sub_35F28(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(uint64_t, unint64_t))
{
  uint64_t v6;

  v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  __swift_project_value_buffer(v6, (uint64_t)a3);
  return a4(0x697263736E617274, 0xEA00000000007470);
}

uint64_t static NowPlayingHostedContentID.transcript.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_35FB4(&qword_1F9480, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)static NowPlayingHostedContentID.transcript, (uint64_t)sub_35F0C, a1);
}

uint64_t sub_35FB4@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _BYTE v12[24];

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = __swift_project_value_buffer(v8, a3);
  v10 = swift_beginAccess(v9, v12, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8, v10);
}

uint64_t static NowPlayingHostedContentID.transcript.setter(uint64_t a1)
{
  return sub_36064(a1, &qword_1F9480, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)static NowPlayingHostedContentID.transcript, (uint64_t)sub_35F0C);
}

uint64_t sub_36064(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE v13[24];

  if (*a2 != -1)
    swift_once(a2, a5);
  v8 = a3(0);
  v9 = __swift_project_value_buffer(v8, a4);
  v10 = swift_beginAccess(v9, v13, 33, 0);
  v11 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 24))(v9, a1, v8, v10);
  swift_endAccess(v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v8);
}

uint64_t (*static NowPlayingHostedContentID.transcript.modify(uint64_t a1))(_QWORD)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1F9480 != -1)
    swift_once(&qword_1F9480, sub_35F0C);
  v2 = type metadata accessor for NowPlayingHostedContentID(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingHostedContentID.transcript);
  swift_beginAccess(v3, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_36184()
{
  return type metadata accessor for NowPlayingFooterButtonController(0);
}

uint64_t type metadata accessor for NowPlayingFooterButtonController(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FB708, (uint64_t)&nominal type descriptor for NowPlayingFooterButtonController);
}

void sub_361A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_16C748;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = &unk_16C760;
  sub_36978(319, &qword_1FB718, (uint64_t *)&unk_1FB720, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    v4[10] = &unk_16C778;
    v4[11] = &unk_16C778;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

uint64_t *sub_3626C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for ToggleStyleConfiguration(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v12 = a1;
      v13 = v6;
      v14 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v12 = a1;
      v13 = v6;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

void sub_36394(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for ToggleStyleConfiguration(0);
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
      (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(a1, v3);
  }
  else
  {
    swift_release(*a1);
  }
}

uint64_t *sub_36430(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ToggleStyleConfiguration(0);
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v9 = a1;
    v10 = v4;
    v11 = 1;
  }
  else
  {
    v8 = *a2;
    *a1 = *a2;
    swift_retain(v8);
    v9 = a1;
    v10 = v4;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  return a1;
}

uint64_t *sub_3652C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_9944((uint64_t)a1, &qword_1FB7F8);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ToggleStyleConfiguration(0);
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      v9 = a1;
      v10 = v4;
      v11 = 1;
    }
    else
    {
      v8 = *a2;
      *a1 = *a2;
      swift_retain(v8);
      v9 = a1;
      v10 = v4;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void *sub_36640(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ToggleStyleConfiguration(0);
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_36738(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_9944((uint64_t)a1, &qword_1FB7F8);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB7F8);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ToggleStyleConfiguration(0);
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_36848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_36854);
}

uint64_t sub_36854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_36894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_368A0);
}

uint64_t sub_368A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NowPlayingFooterButtonController.TranscriptsButtonLabel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FB868, (uint64_t)&nominal type descriptor for NowPlayingFooterButtonController.TranscriptsButtonLabel);
}

void sub_368F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_36978(319, (unint64_t *)&unk_1FB878, &qword_1FB800, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_36978(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

ValueMetadata *type metadata accessor for NowPlayingFooterButtonController.QueueButtonLabel()
{
  return &type metadata for NowPlayingFooterButtonController.QueueButtonLabel;
}

uint64_t sub_369E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DE30, 1);
}

uint64_t sub_369F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19DE08, 1);
}

uint64_t sub_36A00@<X0>(uint64_t a1@<X8>)
{
  return sub_35090(a1);
}

unint64_t sub_36A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB8B8;
  if (!qword_1FB8B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB8B0);
    sub_36A74();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FB8B8);
  }
  return result;
}

unint64_t sub_36A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB8C0;
  if (!qword_1FB8C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB8C8);
    sub_27A8C(&qword_1FB8D0, &qword_1FB8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FB8C0);
  }
  return result;
}

uint64_t sub_36AF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB800);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2808C(a1, (uint64_t)v4, &qword_1FB800);
  return EnvironmentValues.hostedContentToggleConfiguration.setter(v4);
}

uint64_t sub_36B78()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_36B98(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Image.Scale(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.imageScale.setter(v3);
}

uint64_t sub_36C18()
{
  return EnvironmentValues.hostedContentToggleConfiguration.getter();
}

uint64_t sub_36C3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_349DC(v1, a1);
}

unint64_t sub_36C44()
{
  unint64_t result;

  result = qword_1FB958;
  if (!qword_1FB958)
  {
    result = swift_getWitnessTable(&unk_16BA9C, &type metadata for QueueView);
    atomic_store(result, (unint64_t *)&qword_1FB958);
  }
  return result;
}

uint64_t sub_36C88()
{
  uint64_t v0;

  swift_unownedRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_36CAC(uint64_t a1)
{
  uint64_t v1;

  return sub_34B14(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_36CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_36CFC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_36D20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_36D44(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_3421C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_36D8C(uint64_t a1)
{
  return get_witness_table_qd0__7SwiftUI4ViewHD3_AaBPAAE10labelStyleyQrqd__AA05LabelE0Rd__lFQOyAA0F0VyAA4TextVAA19_ConditionalContentVyAA08ModifiedI0VyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAO5ScaleOGGAOGG_AA08IconOnlyfE0VQo_HOTm(a1, &qword_1FB8A8, &qword_1FB8E0);
}

uint64_t sub_36DA0(uint64_t a1)
{
  return get_witness_table_qd0__7SwiftUI4ViewHD3_AaBPAAE10labelStyleyQrqd__AA05LabelE0Rd__lFQOyAA0F0VyAA4TextVAA19_ConditionalContentVyAA08ModifiedI0VyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAO5ScaleOGGAOGG_AA08IconOnlyfE0VQo_HOTm(a1, &qword_1FB8F8, &qword_1FB900);
}

uint64_t get_witness_table_qd0__7SwiftUI4ViewHD3_AaBPAAE10labelStyleyQrqd__AA05LabelE0Rd__lFQOyAA0F0VyAA4TextVAA19_ConditionalContentVyAA08ModifiedI0VyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAO5ScaleOGGAOGG_AA08IconOnlyfE0VQo_HOTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  _QWORD v6[4];

  v6[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6[1] = type metadata accessor for IconOnlyLabelStyle(255);
  v6[2] = sub_27A8C(a3, a2, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v6[3] = sub_8330(&qword_1FB8E8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  return swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
}

uint64_t sub_36E5C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v5;

  result = (*(uint64_t (**)(void))(a2 + 32))();
  if ((v5 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return result;
}

uint64_t sub_36EAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v5;

  result = (*(uint64_t (**)(void))(a2 + 56))();
  if ((v5 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  return result;
}

uint64_t sub_36EFC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t KeyPath;
  unint64_t v14;
  double v15;
  char *v16;

  v5 = (*(uint64_t (**)(void))(a2 + 16))();
  if ((v6 & 1) != 0)
    return 0;
  v7 = *(double *)&v5;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if ((v9 & 1) != 0)
    return 0;
  v10 = *(double *)&v8;
  if (object_getClass(v2) != (Class)_TtC12NowPlayingUI11TextContent || v2 == 0)
  {
    v15 = v7 - v10;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_16C8F8);
    v16 = v2;
    v14 = sub_37070();
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v16, KeyPath, v14);
    swift_release(KeyPath);
    v15 = v7
        - v10
        - *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI11TextContent__durationFromPlayerStartTimeToFirstWordTime];
  }
  return *(_QWORD *)&v15;
}

uint64_t sub_36FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  double v6;
  double v7;
  char v8;
  uint64_t result;

  v4 = (*(uint64_t (**)(void))(a2 + 16))();
  if ((v5 & 1) != 0
    || (v6 = *(double *)&v4,
        v7 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2)),
        (v8 & 1) != 0))
  {
    *(double *)&result = 0.0;
  }
  else
  {
    *(double *)&result = v7 - v6;
  }
  return result;
}

unint64_t sub_37070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F9D58;
  if (!qword_1F9D58)
  {
    v1 = type metadata accessor for TextContent(255);
    result = swift_getWitnessTable(&unk_174808, v1);
    atomic_store(result, (unint64_t *)&qword_1F9D58);
  }
  return result;
}

uint64_t *MPULayoutSizeNoDimension.unsafeMutableAddressor()
{
  if (qword_1F9488 != -1)
    swift_once(&qword_1F9488, sub_370F8);
  return &MPULayoutSizeNoDimension;
}

double sub_370F8()
{
  double result;

  result = MTMPULayoutSizeNoDimension;
  MPULayoutSizeNoDimension = MTMPULayoutSizeNoDimension;
  return result;
}

uint64_t sub_37110()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_37130()
{
  return EnvironmentValues.mcui.getter();
}

uint64_t sub_37150(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC0E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.mcui.setter(v4);
}

uint64_t sub_371D0()
{
  return MCUINamespace<A>.deviceMetrics.getter();
}

uint64_t sub_371F0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for DeviceMetrics(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return MCUINamespace<A>.deviceMetrics.setter(v3);
}

uint64_t ContextActionsConfiguration.objectGraph.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t NowPlayingMediaPlayerController.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 320, 7);
  NowPlayingMediaPlayerController.init(asPartOf:)(a1);
  return v3;
}

uint64_t NowPlayingMediaPlayerController.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[3];

  v2 = v1;
  v4 = type metadata accessor for ImpressionsCalculator.Configuration(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicImpressionsTracker.Configuration(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NowPlayingViewModel.PlayerStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NowPlayingViewModel(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)(v1 + 16) = NowPlayingViewModel.init()();
  *(_QWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 160) = 0;
  *(_QWORD *)(v1 + 168) = 0;
  *(_QWORD *)(v1 + 176) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v1 + 184) = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for NowPlayingViewModel.PlayerStyle.mini(_:), v11);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F96E0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(_QWORD *)(v1 + 192) = CurrentValueSubject.init(_:)(v14);
  v17 = type metadata accessor for NowPlayingMiniPlayerSublineController(0);
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_QWORD *)(v1 + 280) = 0;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  v18 = (_QWORD *)swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v19 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(0);
  v18[2] = 0;
  v18[3] = 0;
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = sub_5C544();
  v18[5] = 0;
  v18[6] = 0;
  v18[4] = v20;
  v21 = (char *)v18
      + OBJC_IVAR____TtC12NowPlayingUI37NowPlayingMiniPlayerSublineController____lazy_storage___miniPlayerSubtitle;
  v22 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)(v2 + 288) = v18;
  v23 = type metadata accessor for TranscriptSyncingStateObserver(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v2 + 304) = TranscriptSyncingStateObserver.init()();
  *(_QWORD *)(v2 + 312) = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F0);
  BaseObjectGraph.inject<A>(_:)(v49, v24, v24);
  *(_OWORD *)(v2 + 32) = v49[0];
  v25 = type metadata accessor for PlaybackController(0);
  BaseObjectGraph.inject<A>(_:)(v49, v25, v25);
  *(_QWORD *)(v2 + 48) = *(_QWORD *)&v49[0];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB980);
  BaseObjectGraph.inject<A>(_:)(v49, v26, v26);
  sub_27890(v49, v2 + 56);
  v27 = type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = swift_retain(a1);
  *(_QWORD *)(v2 + 296) = sub_10D2EC(v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB988);
  BaseObjectGraph.inject<A>(_:)(v49, v29, v29);
  v30 = sub_27890(v49, v2 + 120);
  static DynamicImpressionsTracker.Configuration.default.getter(v30);
  v31 = BaseObjectGraph.addingImpressionsTracker(with:)(v10);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  static ImpressionsCalculator.Configuration.half.getter(v32);
  v33 = BaseObjectGraph.addingImpressionsCalculator(with:)(v6);
  v34 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v6, v48, v34);
  v35 = type metadata accessor for MetricsController(0);
  v36 = BaseObjectGraph.satisfying<A>(_:with:)(v35, sub_376F4, 0, v35);
  swift_release(v33);
  v37 = *(_QWORD *)(v2 + 296);
  *(_QWORD *)&v49[0] = v37;
  swift_retain(v37);
  v38 = BaseObjectGraph.satisfying<A>(_:with:)(v27, v49, v27);
  swift_release(v37);
  swift_release(v36);
  *(_QWORD *)(v2 + 24) = v38;
  swift_retain(v38);
  BaseObjectGraph.inject<A>(_:)(v49, v35, v35);
  swift_release(v38);
  v39 = *(_QWORD *)&v49[0];
  v40 = type metadata accessor for NowPlayingMetricsControllerWrapper();
  v41 = swift_allocObject(v40, 41, 7);
  *(_BYTE *)(v41 + 24) = 0;
  *(_QWORD *)(v41 + 32) = 0;
  *(_BYTE *)(v41 + 40) = 1;
  *(_QWORD *)(v41 + 16) = v39;
  *(_QWORD *)(v2 + 96) = v41;
  sub_DF78(v2 + 56, (uint64_t)v49);
  v42 = objc_allocWithZone((Class)type metadata accessor for NowPlayingContextInteractionDelegate());
  v43 = sub_61BD8(1, (uint64_t)v49);
  swift_release(a1);
  swift_beginAccess(v2 + 312, v49, 1, 0);
  v44 = *(_QWORD *)(v2 + 312);
  *(_QWORD *)(v2 + 312) = v43;
  swift_unknownObjectRelease(v44);
  return v2;
}

uint64_t sub_376F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for MetricsController(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain(a1);
  result = MetricsController.init(asPartOf:)(v5);
  *a2 = result;
  return result;
}

uint64_t NowPlayingMediaPlayerController.metricsController.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 96));
}

id sub_37758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for NowPlayingArtwork.Data(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 104);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 104);
LABEL_5:
    swift_retain(v9);
    return (id)v10;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for NowPlayingArtwork.Placement.primary(_:), v5);
  v11 = type metadata accessor for NowPlayingArtworkViewModel(0);
  v10 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  result = objc_msgSend((id)objc_opt_self(UIImage), "defaultPodcastArtwork");
  if (result)
  {
    *v4 = result;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for NowPlayingArtwork.Data.image(_:), v1);
    v13 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v2 + 32))(v10 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData, v4, v1);
    ObservationRegistrar.init()(v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v10 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel_placement, v8, v5);
    v14 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 104) = v10;
    swift_retain(v10);
    swift_release(v14);
    v9 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_378F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for NowPlayingArtwork.Data(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for NowPlayingArtwork.Placement(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 112);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 112);
LABEL_5:
    swift_retain(v9);
    return (id)v10;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for NowPlayingArtwork.Placement.metadata(_:), v5);
  v11 = type metadata accessor for NowPlayingArtworkViewModel(0);
  v10 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  result = objc_msgSend((id)objc_opt_self(UIImage), "defaultPodcastArtwork");
  if (result)
  {
    *v4 = result;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for NowPlayingArtwork.Data.image(_:), v1);
    v13 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v2 + 32))(v10 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData, v4, v1);
    ObservationRegistrar.init()(v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v10 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel_placement, v8, v5);
    v14 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 112) = v10;
    swift_retain(v10);
    swift_release(v14);
    v9 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_37A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 160);
  }
  else
  {
    v2 = sub_37AEC();
    v3 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 160) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_37AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  id v76[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v0);
  v75 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC050);
  v67 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v59 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC058);
  v4 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  v66 = v4;
  __chkstk_darwin(v3);
  v60 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC060);
  v7 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  v69 = v7;
  __chkstk_darwin(v6);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC068);
  v73 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v62 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC070);
  v74 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC078);
  v58 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD28);
  v63 = *(_QWORD *)(v57 - 8);
  v14 = v63;
  v15 = __chkstk_darwin(v57);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v56 - v19;
  v21 = dispatch thunk of PlaybackController.$currentRoute.getter(v18);
  v22 = (void *)dispatch thunk of PlaybackController.responsePublisher.getter(v21);
  v76[0] = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC080);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC088);
  v25 = sub_27A8C(&qword_1FC090, &qword_1FC080, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_3EF0C, 0, v23, v24, v25);
  swift_release(v22);
  v26 = sub_27A8C(&qword_1FC098, &qword_1FC078, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v27 = (void *)Publisher.eraseToAnyPublisher()(v11, v26);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v11);
  v76[0] = v27;
  v28 = v57;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v57);
  v29 = sub_27A8C(&qword_1FBD60, &qword_1FBD28, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  swift_retain(v27);
  v30 = v59;
  Publishers.CombineLatest.init(_:_:)(v76, v17, v23, v28, v25, v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC0A0);
  v32 = sub_27A8C(&qword_1FC0A8, &qword_1FC050, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v33 = v60;
  v34 = v64;
  Publisher.map<A>(_:)(sub_382CC, 0, v64, v31, v32);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v30, v34);
  v35 = v61;
  v36 = v65;
  Publishers.Map.map<A>(_:)(sub_38424, 0, v65, &type metadata for NowPlayingItemState);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v36);
  v37 = sub_27A8C(&qword_1FC0B0, &qword_1FC060, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v38 = sub_403EC();
  v39 = v62;
  v40 = v68;
  Publisher<>.removeDuplicates()(v68, v37, v38);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v40);
  v41 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v76[0] = (id)static OS_dispatch_queue.main.getter();
  v42 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v43 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v75, 1, 1, v42);
  v44 = sub_27A8C(&qword_1FC0C0, &qword_1FC068, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v45 = sub_3FD20((unint64_t *)&qword_1FB320, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v47 = v70;
  v46 = v71;
  Publisher.receive<A>(on:options:)(v76, v43, v71, v41, v44, v45);
  sub_9944(v43, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v46);
  v48 = sub_27A8C(&qword_1FC0C8, &qword_1FC070, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v49 = v72;
  v50 = (void *)Publisher.bufferedMulticast()(v72, v48);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v49);
  v76[0] = v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBF50);
  v52 = sub_27A8C(&qword_1FB490, (uint64_t *)&unk_1FBF50, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v53 = Publisher.eraseToAnyPublisher()(v51, v52);
  swift_release(v50);
  v54 = swift_release(v27);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v20, v28, v54);
  return v53;
}

id sub_38120@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  float v18;
  uint64_t v19;
  double v20;
  char v21;
  double v22;
  double v23;
  BOOL v24;
  double v25;
  id v26;
  id result;
  _QWORD v28[6];
  float v29;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0.0;
  if (!a1)
  {
    v12 = 0;
    goto LABEL_9;
  }
  v12 = MPCPlayerResponse.currentItem.getter(v8);
  v13 = objc_msgSend(a1, "tracklist");
  v14 = objc_msgSend(v13, "playingItem");

  if (!v14)
  {
LABEL_9:
    v21 = 1;
    goto LABEL_10;
  }
  objc_msgSend(v14, "duration");
  v15 = *(double *)&v28[1];
  v16 = *(double *)&v28[4];
  v17 = *(double *)&v28[5];
  v18 = v29;

  v19 = Date.init()();
  v20 = Date.timeIntervalSinceReferenceDate.getter(v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v21 = 0;
  v22 = v17 + (v20 - v15) * v18;
  if (v22 >= v16)
    v22 = v16;
  v23 = v22 * 1000.0;
  v24 = v22 <= 0.0;
  v25 = 0.0;
  if (!v24)
    v25 = v23;
  v11 = round(v25) / 1000.0;
LABEL_10:
  v26 = objc_msgSend(a1, "videoOutput");
  result = a2;
  *(_QWORD *)a3 = v12;
  *(double *)(a3 + 8) = v11;
  *(_BYTE *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v26;
  *(_QWORD *)(a3 + 32) = a2;
  return result;
}

double sub_382CC@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  double result;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v8;

  sub_38120(*a1, a1[1], (uint64_t)&v6);
  v3 = v7;
  result = *(double *)&v6;
  v5 = v8;
  *(_OWORD *)a2 = v6;
  *(_BYTE *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = v5;
  return result;
}

void sub_38318(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1)
  {
    v12 = a5;
    v13 = a1;
    v14 = swift_unknownObjectRetain(a4);
    v15 = MPModelObject.adamID.getter(v14);
    if ((v16 & 1) != 0)
    {
      v21 = v13;
      v22 = MPModelObject.uuid.getter();
      v24 = v23;

      if (v24)
        v17 = v22;
      else
        v17 = 0;
      if (v24)
        v18 = v24;
      else
        v18 = 0;
      if (v24)
        v19 = 0;
      else
        v19 = -1;
    }
    else
    {
      v17 = v15;

      v18 = 0;
      v19 = 1;
    }
  }
  else
  {
    v20 = a5;
    swift_unknownObjectRetain(a4);
    v17 = 0;
    v18 = 0;
    v19 = -1;
  }
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = v17;
  *(_QWORD *)(a6 + 16) = v18;
  *(_BYTE *)(a6 + 24) = v19;
  *(_QWORD *)(a6 + 32) = a2;
  *(_BYTE *)(a6 + 40) = a3 & 1;
  *(_QWORD *)(a6 + 48) = a4;
  *(_QWORD *)(a6 + 56) = a5;
}

double sub_38424@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;

  sub_38318(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), (uint64_t)v6);
  v3 = v6[1];
  *a2 = v6[0];
  a2[1] = v3;
  result = *(double *)&v7;
  v5 = v8;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_38470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 168);
  }
  else
  {
    v2 = sub_384CC();
    v3 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 168) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_384CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  id v83[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v0);
  v76 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD10);
  v3 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  v74 = v3;
  __chkstk_darwin(v2);
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD18);
  v79 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v72 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD20);
  v80 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v75 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD28);
  v68 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v64 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD30);
  v67 = *(_QWORD *)(v69 - 8);
  v8 = __chkstk_darwin(v69);
  v65 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v81 = (char *)&v61 - v10;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD38);
  __chkstk_darwin(v63);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD40);
  __chkstk_darwin(v61);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_204250);
  __chkstk_darwin(v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD48);
  v82 = *(_QWORD *)(v62 - 8);
  v18 = __chkstk_darwin(v62);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v61 - v22;
  v24 = dispatch thunk of PlaybackController.$nowPlayingItem.getter(v21);
  v25 = dispatch thunk of PlaybackController.$durationSnapshot.getter(v24);
  dispatch thunk of PlaybackController.$videoOutput.getter(v25);
  v26 = sub_27A8C(&qword_1FBC70, &qword_204250, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v27 = sub_27A8C(&qword_1FBD50, &qword_1FBD40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v28 = sub_27A8C(&qword_1FBD58, &qword_1FBD38, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v70 = v23;
  v29 = Publishers.Zip3.init(_:_:_:)(v17, v14, v12, v15, v61, v63, v26, v27, v28);
  v30 = v64;
  dispatch thunk of PlaybackController.$currentRoute.getter(v29);
  v31 = sub_27A8C(&qword_1FBD60, &qword_1FBD28, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v32 = sub_3FC9C();
  v33 = v81;
  v34 = v66;
  Publisher<>.removeDuplicates()(v66, v31, v32);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v30, v34);
  v35 = v62;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v20, v23, v62);
  v36 = v67;
  v37 = v65;
  v38 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v33, v69);
  v39 = sub_27A8C(&qword_1FBD88, &qword_1FBD48, (uint64_t)&protocol conformance descriptor for Publishers.Zip3<A, B, C>);
  v40 = sub_27A8C(&qword_1FBD90, &qword_1FBD30, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v41 = v71;
  Publishers.CombineLatest.init(_:_:)(v20, v37, v35, v38, v39, v40);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD98);
  v43 = sub_27A8C((unint64_t *)&unk_1FBDA0, &qword_1FBD10, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v45 = v72;
  v44 = v73;
  Publisher.map<A>(_:)(sub_38B8C, 0, v73, v42, v43);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v41, v44);
  v46 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v83[0] = (id)static OS_dispatch_queue.main.getter();
  v47 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v48 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v76, 1, 1, v47);
  v49 = sub_27A8C((unint64_t *)&unk_1FBDB0, &qword_1FBD18, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v50 = sub_3FD20((unint64_t *)&qword_1FB320, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v51 = v75;
  v52 = v77;
  Publisher.receive<A>(on:options:)(v83, v48, v77, v46, v49, v50);
  sub_9944(v48, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v79 + 8))(v45, v52);
  v53 = sub_27A8C(&qword_1FBDC0, &qword_1FBD20, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v54 = v78;
  v55 = (void *)Publisher.bufferedMulticast()(v78, v53);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v54);
  v83[0] = v55;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCC0);
  v57 = sub_27A8C(&qword_1FBCC8, &qword_1FBCC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v58 = Publisher.eraseToAnyPublisher()(v56, v57);
  v59 = swift_release(v55);
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v81, v38, v59);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v70, v35);
  return v58;
}

uint64_t sub_38B8C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  id v8;
  id v9;

  v3 = *((_QWORD *)a1 + 8);
  v2 = (void *)*((_QWORD *)a1 + 9);
  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a2 = *a1;
  *(_OWORD *)(a2 + 16) = v5;
  v6 = a1[3];
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_OWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 64) = v3;
  *(_QWORD *)(a2 + 72) = v2;
  v7 = (void *)v4;
  v8 = v2;
  v9 = v7;
  return swift_unknownObjectRetain(v3);
}

uint64_t NowPlayingMediaPlayerController.playerStylePublisher.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 192, v2, 0, 0);
  return swift_retain(*(_QWORD *)(v0 + 192));
}

uint64_t NowPlayingMediaPlayerController.playerStylePublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 192, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 192) = a1;
  return swift_release(v3);
}

uint64_t (*NowPlayingMediaPlayerController.playerStylePublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 192, a1, 33, 0);
  return j_j__swift_endAccess;
}

_QWORD *sub_38C80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 200);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 200);
  }
  else
  {
    v3 = v0;
    v4 = *(_QWORD *)(v0 + 24);
    v5 = type metadata accessor for NowPlayingMenuController();
    swift_allocObject(v5, 40, 7);
    v6 = swift_retain(v4);
    v2 = sub_93724(v6);
    swift_release(v4);
    v7 = *(_QWORD *)(v3 + 200);
    *(_QWORD *)(v3 + 200) = v2;
    swift_retain(v2);
    swift_release(v7);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_38D08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[26];
  if (v1)
  {
    v2 = v0[26];
  }
  else
  {
    v3 = v0;
    v4 = v0[3];
    v5 = v0[6];
    swift_retain(v4);
    swift_retain(v5);
    v6 = sub_38DF8();
    v7 = type metadata accessor for QueueViewModel(0);
    swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    v8 = sub_A29D8();
    v9 = type metadata accessor for NowPlayingQueueController();
    swift_allocObject(v9, 128, 7);
    v2 = sub_BDA40(v4, v8, v5, v6);
    swift_release(v4);
    swift_release(v8);
    swift_release(v5);
    swift_release(v6);
    v10 = v3[26];
    v3[26] = v2;
    swift_retain(v2);
    swift_release(v10);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_38DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBDC8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 216);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 216);
  }
  else
  {
    v8 = sub_38470();
    v14[1] = v8;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCC0);
    v10 = sub_27A8C(&qword_1FBCC8, &qword_1FBCC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_38F50, 0, v9, &type metadata for Bool, v10);
    swift_release(v8);
    v11 = sub_27A8C(&qword_1FBDD0, &qword_1FBDC8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v7 = Publisher.eraseToAnyPublisher()(v2, v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v12 = *(_QWORD *)(v1 + 216);
    *(_QWORD *)(v1 + 216) = v7;
    swift_retain(v7);
    swift_release(v12);
    v6 = 0;
  }
  swift_retain(v6);
  return v7;
}

id sub_38F50@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_38F68(a1, (SEL *)&selRef_isDeviceRoute, a2);
}

id sub_38F5C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_38F68(a1, (SEL *)&selRef_isAppleTVRoute, a2);
}

id sub_38F68@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, _BYTE *a3@<X8>)
{
  id result;

  result = *(id *)(a1 + 72);
  if (result)
    result = objc_msgSend(result, *a2);
  *a3 = (_BYTE)result;
  return result;
}

uint64_t sub_38F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBDC8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 224);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 224);
  }
  else
  {
    v8 = sub_38470();
    v14[1] = v8;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCC0);
    v10 = sub_27A8C(&qword_1FBCC8, &qword_1FBCC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_38F5C, 0, v9, &type metadata for Bool, v10);
    swift_release(v8);
    v11 = sub_27A8C(&qword_1FBDD0, &qword_1FBDC8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v7 = Publisher.eraseToAnyPublisher()(v2, v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v12 = *(_QWORD *)(v1 + 224);
    *(_QWORD *)(v1 + 224) = v7;
    swift_retain(v7);
    swift_release(v12);
    v6 = 0;
  }
  swift_retain(v6);
  return v7;
}

uint64_t sub_390F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBC98);
  v39 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCA0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCA8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v0 + 232);
  if (v17)
  {
    v18 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v36 = v8;
    v37 = v13;
    v19 = v0;
    v38 = v14;
    v41 = sub_38470();
    swift_beginAccess(*(_QWORD *)(v0 + 296)+ OBJC_IVAR____TtC12NowPlayingUI43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation, v40, 33, 0);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCB8);
    Published.projectedValue.getter(v20);
    swift_endAccess(v40);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCC0);
    v35 = v9;
    v22 = v21;
    v23 = sub_27A8C(&qword_1FBCC8, &qword_1FBCC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v34 = v5;
    v24 = v23;
    v25 = sub_27A8C(&qword_1FBCD0, &qword_1FBC98, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.combineLatest<A>(_:)(v3, v22, v1, v24, v25);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v1);
    swift_release(v41);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCD8);
    v27 = sub_27A8C(&qword_1FBCE0, &qword_1FBCA0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    Publisher.compactMap<A>(_:)(sub_39590, 0, v4, v26, v27);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v4);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCE8);
    v29 = v36;
    Publishers.CompactMap.map<A>(_:)(sub_3960C, 0, v36, v28);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v29);
    v30 = sub_27A8C((unint64_t *)&unk_1FBCF0, &qword_1FBCB0, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v31 = v37;
    v18 = Publisher.eraseToAnyPublisher()(v37, v30);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v31);
    v32 = *(_QWORD *)(v19 + 232);
    *(_QWORD *)(v19 + 232) = v18;
    swift_retain(v18);
    swift_release(v32);
    v17 = 0;
  }
  swift_retain(v17);
  return v18;
}

id sub_3942C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  id v11;
  void *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _BYTE v21[56];

  sub_982C(a2, (uint64_t)v21, (uint64_t *)&unk_1FBD00);
  v11 = a1;
  v12 = v11;
  if (a1
    && (v13 = objc_msgSend(v11, "identifiers"),
        v14 = objc_msgSend(v13, "isPlaceholder"),
        v13,
        v12,
        v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCD8);
    return (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a6, 1, 1, v15);
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCD8);
    v18 = (uint64_t)a6 + *(int *)(v17 + 48);
    *a6 = a1;
    sub_982C(a2, (uint64_t)(a6 + 1), (uint64_t *)&unk_1FBD00);
    a6[8] = a3;
    a6[9] = a4;
    sub_2808C(a5, v18, &qword_1FE0C0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a6, 0, 1, v17);
    v19 = v12;
    swift_unknownObjectRetain(a3);
    return a4;
  }
}

id sub_39590@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE v9[56];

  v4 = *(void **)a1;
  sub_982C(a1 + 8, (uint64_t)v9, (uint64_t *)&unk_1FBD00);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(void **)(a1 + 72);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCD8);
  return sub_3942C(v4, (uint64_t)v9, v5, v6, a1 + *(int *)(v7 + 48), a2);
}

uint64_t sub_3960C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 72);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBCD8);
  result = sub_3F570(v4, v5, a1 + *(int *)(v6 + 48));
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v9;
  *(_BYTE *)(a2 + 24) = v10 & 1;
  return result;
}

uint64_t sub_3966C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBC78);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 240);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 240);
  }
  else
  {
    v8 = sub_390F0();
    v14[1] = v8;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBC80);
    v10 = sub_27A8C(&qword_1FBC88, &qword_1FBC80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_397C4, 0, v9, &type metadata for Bool, v10);
    swift_release(v8);
    v11 = sub_27A8C(&qword_1FBC90, &qword_1FBC78, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v7 = Publisher.eraseToAnyPublisher()(v2, v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v12 = *(_QWORD *)(v1 + 240);
    *(_QWORD *)(v1 + 240) = v7;
    swift_retain(v7);
    swift_release(v12);
    v6 = 0;
  }
  swift_retain(v6);
  return v7;
}

uint64_t sub_397C4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8) != 0;
  return result;
}

_QWORD *sub_397D8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v1 = v0[31];
  if (v1)
  {
    v2 = (_QWORD *)v0[31];
  }
  else
  {
    v3 = v0;
    v5 = v0[2];
    v4 = v0[3];
    swift_retain(v4);
    swift_retain(v5);
    v6 = sub_38D08();
    v7 = v0[38];
    swift_retain(v7);
    v8 = sub_3966C();
    swift_beginAccess(v0 + 24, v15, 0, 0);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F96E0);
    v10 = sub_27A8C(&qword_1FBDD8, (uint64_t *)&unk_1F96E0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v11 = Publisher.eraseToAnyPublisher()(v9, v10);
    LOBYTE(v9) = sub_3F2EC();
    v12 = type metadata accessor for NowPlayingFooterButtonController(0);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v2 = sub_33FCC(v4, v5, v6, v7, v8, v11, v9 & 1);
    v13 = v3[31];
    v3[31] = v2;
    swift_retain(v2);
    swift_release(v13);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_39918()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[32];
  if (v1)
  {
    v2 = v0[32];
  }
  else
  {
    v3 = v0;
    v4 = v0[3];
    v5 = v0[4];
    v6 = v0[5];
    swift_retain(v4);
    swift_unknownObjectRetain(v5);
    v7 = sub_37A90();
    v8 = type metadata accessor for NowPlayingArtworkController(0);
    swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    v2 = sub_30558(v4, v5, v6, v7);
    swift_release(v4);
    swift_unknownObjectRelease(v5);
    swift_release(v7);
    v9 = v3[32];
    v3[32] = v2;
    swift_retain(v2);
    swift_release(v9);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_399E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[33];
  if (v1)
  {
    v2 = v0[33];
  }
  else
  {
    v3 = v0;
    v4 = v0[2];
    v6 = v0[5];
    v5 = v0[6];
    v7 = v0[4];
    swift_retain(v4);
    swift_retain(v5);
    swift_unknownObjectRetain(v7);
    v8 = sub_38DF8();
    v9 = sub_38F98();
    v10 = v0[38];
    v11 = type metadata accessor for NowPlayingTransportController(0);
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    swift_retain(v10);
    v2 = sub_15362C(v4, v5, v7, v6, v8, v9, v10);
    swift_release(v4);
    swift_release(v5);
    swift_unknownObjectRelease(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v10);
    v12 = v3[33];
    v3[33] = v2;
    swift_retain(v2);
    swift_release(v12);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_39AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 272);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 272);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = type metadata accessor for NowPlayingUpsellBannerController();
    v5 = swift_allocObject(v4, 88, 7);
    swift_retain(v3);
    swift_retain(v0);
    sub_3F740(v3, v0, v5);
    v2 = v6;
    swift_release(v3);
    swift_release(v0);
    v7 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v0 + 272) = v2;
    swift_retain(v2);
    swift_release(v7);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_39B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_204250);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 280);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 280);
  }
  else
  {
    v8 = sub_38D08();
    v9 = *(_QWORD *)(v8 + 24);
    swift_retain(v9);
    swift_release(v8);
    v10 = *(_QWORD *)(v1 + 16);
    v11 = swift_retain(v10);
    dispatch thunk of PlaybackController.$nowPlayingItem.getter(v11);
    v12 = sub_27A8C(&qword_1FBC70, &qword_204250, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v13 = Publisher.eraseToAnyPublisher()(v2, v12);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v14 = sub_3966C();
    v15 = sub_3F2EC();
    v16 = type metadata accessor for NowPlayingTipController(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    v7 = sub_104110(v9, v10, v13, v14, v15);
    v17 = *(_QWORD *)(v1 + 280);
    *(_QWORD *)(v1 + 280) = v7;
    swift_retain(v7);
    swift_release(v17);
    v6 = 0;
  }
  swift_retain(v6);
  return v7;
}

uint64_t NowPlayingMediaPlayerController.transcriptSyncingStateObserver.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 304));
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.metadataButtonAction()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  Class v33;
  __n128 v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  NSString v70;
  Class isa;
  char *v72;
  NSString v73;
  uint64_t v74;
  char *v75;
  objc_class *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81[24];

  v1 = v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v74 - v7;
  v80 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PreviewingPresentationHint(0);
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  __chkstk_darwin(v11);
  v77 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for NowPlayingViewModel.PlayerStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  v17 = swift_beginAccess(&static NowPlayingDataProvider.shared, v81, 0, 0);
  if (!(_QWORD)static NowPlayingDataProvider.shared)
    goto LABEL_30;
  v18 = (void *)qword_210540;
  if (!qword_210540)
    return;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 104))(v16, enum case for NowPlayingViewModel.PlayerStyle.mini(_:), v13, v17);
  v20 = sub_3F28C(&qword_1FAA70, v19, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingMediaPlayerController, (uint64_t)&protocol conformance descriptor for NowPlayingMediaPlayerController);
  v76 = v18;
  NowPlayingController.transition(to:animated:)(v16, 1, v2, v20);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v22 = dispatch thunk of PlaybackController.nowPlayingItem.getter(v21);
  if (!v22 || (v23 = (void *)v22, v24 = MPModelObject.uuid.getter(), v26 = v25, v23, !v26))
  {
    v36 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v22);
    if (v36)
    {
      v37 = v36;
      v38 = objc_msgSend(v36, "shareURL");

      if (v38)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v38);

        v39 = 0;
      }
      else
      {
        v39 = 1;
      }
      v40 = v80;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, v39, 1, v80);
      sub_982C((uint64_t)v6, (uint64_t)v8, (uint64_t *)&unk_1FB990);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v40) != 1)
      {
        v61 = v75;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v75, v8, v40);
        v62 = v1[10];
        v63 = v1[11];
        __swift_project_boxed_opaque_existential_1(v1 + 7, v62);
        v64 = v1[3];
        v66 = v77;
        v65 = v78;
        v67 = v79;
        (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for PreviewingPresentationHint.inferTab(_:), v79);
        v33 = v76;
        dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)(v64, v61, v76, v66, 0, v62, v63);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v61, v80);
        v35 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
        goto LABEL_24;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v80);
    }
    v41 = sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB990);
    v42 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v41);
    v33 = v76;
    if (!v42)
      goto LABEL_22;
    v43 = v42;
    v44 = objc_msgSend(v42, "podcast");

    if (!v44)
      goto LABEL_22;
    v46 = MPModelObject.adamID.getter(v45);
    v48 = v47;

    if ((v48 & 1) != 0)
      goto LABEL_22;
    if (v46 < 0)
    {
      __break(1u);
    }
    else
    {
      v50 = dispatch thunk of PlaybackController.nowPlayingItem.getter(v49);
      if (!v50)
        goto LABEL_22;
      v51 = (void *)v50;
      v52 = MPModelObject.adamID.getter(v50);
      v54 = v53;

      if ((v54 & 1) != 0)
        goto LABEL_22;
      if ((v52 & 0x8000000000000000) == 0)
      {
        v55 = v1[10];
        v56 = v1[11];
        __swift_project_boxed_opaque_existential_1(v1 + 7, v55);
        v57 = v1[3];
        v59 = v77;
        v58 = v78;
        v60 = v79;
        (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for PreviewingPresentationHint.inferTab(_:), v79);
        dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:and:from:presentationHint:suppressMetrics:)(v57, v52, v46, v33, v59, 0, v55, v56);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
LABEL_22:
        v35 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  v27 = v1[10];
  v28 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v27);
  v29 = v1[3];
  v31 = v77;
  v30 = v78;
  v32 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, enum case for PreviewingPresentationHint.inferTab(_:), v79);
  v33 = v76;
  dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:from:presentationHint:suppressMetrics:)(v29, v24, v26, v76, v31, 0, v27, v28);
  v34 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v31, v32, v34);
  v35 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
LABEL_24:
  v68 = v35;
  v69 = off_202B58;
  swift_bridgeObjectRetain(off_202B58);
  v70 = String._bridgeToObjectiveC()();
  LOBYTE(v69) = objc_msgSend(v68, "BOOLForKey:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

  if ((v69 & 1) == 0)
  {
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v72 = off_202B58;
    swift_bridgeObjectRetain(off_202B58);
    v73 = String._bridgeToObjectiveC()();
    objc_msgSend(v68, "setValue:forKey:", isa, v73, swift_bridgeObjectRelease(v72).n128_f64[0]);

    v33 = isa;
    v68 = v73;
  }

}

uint64_t NowPlayingMediaPlayerController.miniPlayerContextInteractionDelegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 312, v2, 0, 0);
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 312));
}

uint64_t NowPlayingMediaPlayerController.miniPlayerContextInteractionDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 312, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 312);
  *(_QWORD *)(v1 + 312) = a1;
  return swift_unknownObjectRelease(v3);
}

uint64_t (*NowPlayingMediaPlayerController.miniPlayerContextInteractionDelegate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 312, a1, 33, 0);
  return j__swift_endAccess;
}

_QWORD *NowPlayingMediaPlayerController.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[6]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 7);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 15);
  swift_release(v0[20]);
  swift_release(v0[21]);
  swift_bridgeObjectRelease(v0[22]);
  swift_release(v0[23]);
  swift_release(v0[24]);
  swift_release(v0[25]);
  swift_release(v0[26]);
  swift_release(v0[27]);
  swift_release(v0[28]);
  swift_release(v0[29]);
  swift_release(v0[30]);
  swift_release(v0[31]);
  swift_release(v0[32]);
  swift_release(v0[33]);
  swift_release(v0[34]);
  swift_release(v0[35]);
  swift_release(v0[36]);
  swift_release(v0[37]);
  swift_release(v0[38]);
  swift_unknownObjectRelease(v0[39]);
  return v0;
}

uint64_t NowPlayingMediaPlayerController.__deallocating_deinit()
{
  uint64_t v0;

  NowPlayingMediaPlayerController.deinit();
  return swift_deallocClassInstance(v0, 320, 7);
}

uint64_t sub_3A4F4(uint64_t a1, uint64_t a2)
{
  return sub_3A518(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.playPlayer());
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.play()()
{
  sub_3A568((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.playPlayer());
}

uint64_t sub_3A50C(uint64_t a1, uint64_t a2)
{
  return sub_3A518(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.pausePlayer());
}

uint64_t sub_3A518(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3[10];
  v6 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v5);
  return a3(v5, v6);
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.stop()()
{
  sub_3A568((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.pausePlayer());
}

uint64_t sub_3A568(uint64_t (*a1)(uint64_t, uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[10];
  v4 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v3);
  return a1(v3, v4);
}

uint64_t sub_3A5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3A5D0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.jumpBackward());
}

uint64_t NowPlayingMediaPlayerController.performLeadingTransportAction(_:)(uint64_t a1)
{
  return sub_3A62C(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.jumpBackward());
}

uint64_t sub_3A5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3A5D0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.jumpForward());
}

uint64_t sub_3A5D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  if (!(_BYTE)result)
  {
    v6 = v4[10];
    v7 = v4[11];
    __swift_project_boxed_opaque_existential_1(v4 + 7, v6);
    return a4(v6, v7);
  }
  return result;
}

uint64_t NowPlayingMediaPlayerController.performTrailingTransportAction(_:)(uint64_t a1)
{
  return sub_3A62C(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of EpisodeControllerProtocol.jumpForward());
}

uint64_t sub_3A62C(uint64_t result, uint64_t (*a2)(uint64_t, uint64_t))
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  if (!(_BYTE)result)
  {
    v4 = v2[10];
    v5 = v2[11];
    __swift_project_boxed_opaque_existential_1(v2 + 7, v4);
    return a2(v4, v5);
  }
  return result;
}

uint64_t NowPlayingMediaPlayerController.performTimeControlAction(_:)(double a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[10];
  v4 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v3);
  return dispatch thunk of EpisodeControllerProtocol.seekTo(time:)(v3, v4, a1);
}

uint64_t NowPlayingMediaPlayerController.primaryArtworkView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v3 = sub_37758();
  v4 = *(_QWORD *)(v1 + 24);
  KeyPath = swift_getKeyPath(&unk_16C930);
  v6 = swift_allocObject(&unk_1C91D8, 24, 7);
  swift_weakInit(v6 + 16, v1);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = sub_3F284;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  return swift_retain(v4);
}

uint64_t NowPlayingMediaPlayerController.metadataArtworkView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t KeyPath;

  v3 = sub_378F4();
  v4 = *(_QWORD *)(v1 + 24);
  KeyPath = swift_getKeyPath(&unk_16C930);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  return swift_retain(v4);
}

void NowPlayingMediaPlayerController.contextMenuButton()(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = sub_38C80();
  v4 = v2[3];
  v3 = v2[4];
  v5 = type metadata accessor for NowPlayingMenuController.ViewModel(0);
  v6 = sub_3F28C((unint64_t *)&unk_1FB9A0, 255, type metadata accessor for NowPlayingMenuController.ViewModel, (uint64_t)&unk_16F208);
  swift_retain(v4);
  swift_retain(v3);
  *a1 = ObservedObject.init(wrappedValue:)(v4, v5, v6);
  a1[1] = v7;
  v8 = type metadata accessor for NowPlayingMenuController.ContextMenu(0);
  v9 = (_QWORD *)((char *)a1 + *(int *)(v8 + 20));
  *v9 = swift_getKeyPath(&unk_16C998);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  swift_release(v2);
  *(_QWORD *)((char *)a1 + *(int *)(v8 + 24)) = v3;
}

uint64_t sub_3A884(uint64_t a1, uint64_t a2)
{
  return sub_3AB58(a1, a2, (uint64_t (*)(void))sub_397D8, (void (*)(void))sub_34624);
}

uint64_t NowPlayingMediaPlayerController.hostedContent.getter()
{
  return sub_3ABA8((uint64_t (*)(void))sub_397D8, (void (*)(void))sub_34624);
}

uint64_t sub_3A8AC(uint64_t a1, uint64_t a2)
{
  return sub_3AB58(a1, a2, (uint64_t (*)(void))sub_397D8, (void (*)(void))sub_355A4);
}

uint64_t NowPlayingMediaPlayerController.footerConfiguration.getter()
{
  return sub_3ABA8((uint64_t (*)(void))sub_397D8, (void (*)(void))sub_355A4);
}

void NowPlayingMediaPlayerController.leadingAccessoryButton()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v2 = sub_399E0();
  v3 = sub_151C60();
  v4 = type metadata accessor for NowPlayingSpeedPicker(0);
  v5 = *(int *)(v4 + 20);
  if (qword_1F9550 != -1)
    swift_once(&qword_1F9550, sub_F4410);
  v6 = type metadata accessor for NowPlayingButtonID(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_210288);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)a1 + v5, v7, v6);
  *((_BYTE *)a1 + *(int *)(v4 + 24)) = 1;
  type metadata accessor for CGSize(0);
  v19[0] = 0;
  v19[1] = 0;
  State.init(wrappedValue:)(v20, v19, v8);
  v9 = v20[0];
  v10 = v20[1];
  v11 = v20[2];
  v12 = *(_QWORD *)(v3 + 16);
  v13 = type metadata accessor for NowPlayingSpeedPicker.ViewModel(0);
  v14 = sub_3F28C(&qword_1FB9B0, 255, type metadata accessor for NowPlayingSpeedPicker.ViewModel, (uint64_t)&unk_172BB8);
  v15 = swift_retain(v12);
  v16 = ObservedObject.init(wrappedValue:)(v15, v13, v14);
  v18 = v17;
  swift_release(v2);
  *a1 = v3;
  a1[1] = v16;
  a1[2] = v18;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v11;
}

void NowPlayingMediaPlayerController.trailingAccessoryButton()(char *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_399E0();
  v3 = sub_151D18();
  v4 = type metadata accessor for NowPlayingSleepTimer(0);
  v5 = *(int *)(v4 + 20);
  if (qword_1F9490 != -1)
    swift_once(&qword_1F9490, sub_424B8);
  v6 = type metadata accessor for NowPlayingButtonID(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_210080);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&a1[v5], v7, v6);
  a1[*(int *)(v4 + 24)] = 1;
  v8 = v3[4];
  v9 = type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
  v10 = sub_3F28C(&qword_1FB9B8, 255, type metadata accessor for NowPlayingSleepTimer.ViewModel, (uint64_t)&unk_16CF48);
  v11 = swift_retain(v8);
  v12 = ObservedObject.init(wrappedValue:)(v11, v9, v10);
  v14 = v13;
  swift_release(v2);
  *(_QWORD *)a1 = v3;
  *((_QWORD *)a1 + 1) = v12;
  *((_QWORD *)a1 + 2) = v14;
}

uint64_t sub_3AB44(uint64_t a1, uint64_t a2)
{
  return sub_3AB58(a1, a2, sub_39AFC, (void (*)(void))sub_59A4C);
}

uint64_t sub_3AB58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void))
{
  uint64_t v5;

  v5 = a3();
  a4();
  return swift_release(v5);
}

uint64_t NowPlayingMediaPlayerController.bannerView()()
{
  return sub_3ABA8(sub_39AFC, (void (*)(void))sub_59A4C);
}

uint64_t sub_3ABA8(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v3;

  v3 = a1();
  a2();
  return swift_release(v3);
}

void NowPlayingMediaPlayerController.timeControlAccessoryView()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_399E0();
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_transcriptSyncingStateObserver);
  v4 = *(_QWORD *)(v2 + 16);
  swift_retain(v3);
  swift_retain(v4);
  v5 = sub_151D18();
  v6 = type metadata accessor for TranscriptSyncingStateObserver(0);
  v7 = sub_3F28C(&qword_1FB9C0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TranscriptSyncingStateObserver, (uint64_t)&protocol conformance descriptor for TranscriptSyncingStateObserver);
  v8 = ObservedObject.init(wrappedValue:)(v3, v6, v7);
  v10 = v9;
  swift_release(v2);
  *a1 = v8;
  a1[1] = v10;
  a1[2] = v4;
  a1[3] = (uint64_t)v5;
}

void NowPlayingMediaPlayerController.overlayView.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_39B9C();
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_tipViewModel);
  v4 = type metadata accessor for NowPlayingTipViewModel(0);
  v5 = sub_3F28C(&qword_1FB9C8, 255, type metadata accessor for NowPlayingTipViewModel, (uint64_t)&unk_1729F0);
  v6 = swift_retain(v3);
  v7 = ObservedObject.init(wrappedValue:)(v6, v4, v5);
  v9 = v8;
  swift_release(v2);
  *a1 = v7;
  a1[1] = v9;
}

uint64_t sub_3AD2C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = NowPlayingController.debugMenuItems.getter(*v1);
  *a1 = result & 1;
  return result;
}

double sub_3AD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_3ADAC();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

void sub_3ADAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  __n128 v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  __n128 v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  __n128 v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  _QWORD *v112;
  __n128 v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __n128 v127;
  void (*v128)(char *, uint64_t, __n128);
  _QWORD *v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  __n128 v134;
  uint64_t v135;
  uint64_t v136;
  __n128 v137;
  _QWORD *v138;
  __n128 v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __n128 v168;
  __n128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  __n128 v186;
  __n128 v187;
  __n128 v188;
  uint64_t v189;
  void (*v190)(_QWORD);
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __n128 v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  _QWORD *v199;
  __n128 v200;
  void (*v201)(char *, uint64_t, __n128);
  void (*v202)(char *, uint64_t);
  __n128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  __n128 v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  __n128 v218;
  _QWORD *v219;
  __n128 v220;
  char *v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(char *, uint64_t);
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  _QWORD *v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  void *v310;
  _QWORD *v311;
  _QWORD *v312;
  void *v313;
  id v314;
  char v315[8];

  v1 = v0;
  v306 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBDE0);
  v304 = *(_QWORD *)(v2 - 8);
  v305 = v2;
  __chkstk_darwin(v2);
  v303 = (char *)&v235 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBDE8);
  v301 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin(v302);
  v300 = (char *)&v235 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = type metadata accessor for NowPlayingHostedContentID(0);
  v295 = *(_QWORD *)(v299 - 8);
  __chkstk_darwin(v299);
  v298 = (char *)&v235 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v297 = type metadata accessor for NowPlayingViewModel.Metrics.Event(0);
  v309 = *(_QWORD *)(v297 - 8);
  __chkstk_darwin(v297);
  v296 = (char *)&v235 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBDF0);
  v287 = *(_QWORD *)(v289 - 8);
  __chkstk_darwin(v289);
  v286 = (char *)&v235 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBDF8);
  v290 = *(_QWORD *)(v291 - 8);
  __chkstk_darwin(v291);
  v288 = (char *)&v235 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBE00);
  v293 = *(v294 - 1);
  __chkstk_darwin(v294);
  v292 = (char *)&v235 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v10);
  v285 = (char *)&v235 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB470);
  v272 = *(_QWORD *)(v273 - 8);
  __chkstk_darwin(v273);
  v271 = (char *)&v235 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE10);
  v275 = *(_QWORD *)(v276 - 8);
  __chkstk_darwin(v276);
  v274 = (char *)&v235 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE18);
  v278 = *(_QWORD *)(v280 - 8);
  __chkstk_darwin(v280);
  v277 = (char *)&v235 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE20);
  v281 = *(_QWORD *)(v282 - 8);
  __chkstk_darwin(v282);
  v279 = (char *)&v235 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE28);
  v284 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v283 = (char *)&v235 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE30);
  v262 = *(_QWORD *)(v266 - 8);
  __chkstk_darwin(v266);
  v265 = (char *)&v235 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE38);
  v263 = *(_QWORD *)(v268 - 8);
  __chkstk_darwin(v268);
  v267 = (char *)&v235 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE40);
  v264 = *(_QWORD *)(v270 - 8);
  __chkstk_darwin(v270);
  v269 = (char *)&v235 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE48);
  v254 = *(_QWORD *)(v255 - 8);
  __chkstk_darwin(v255);
  v253 = (char *)&v235 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE50);
  v250 = *(_QWORD *)(v252 - 8);
  __chkstk_darwin(v252);
  v249 = (char *)&v235 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE58);
  v257 = *(_QWORD *)(v258 - 8);
  __chkstk_darwin(v258);
  v256 = (char *)&v235 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE60);
  v260 = *(_QWORD *)(v261 - 8);
  __chkstk_darwin(v261);
  v259 = (char *)&v235 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v246 = *(_QWORD *)(v251 - 8);
  __chkstk_darwin(v251);
  v248 = (char *)&v235 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD40);
  v241 = *(_QWORD *)(v308 - 8);
  __chkstk_darwin(v308);
  v307 = (char *)&v235 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE68);
  v243 = *(_QWORD *)(v244 - 8);
  __chkstk_darwin(v244);
  v242 = (char *)&v235 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE70);
  v247 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v245 = (char *)&v235 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBE78);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v235 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBE80);
  v240 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v235 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v311 = v0 + 22;
  swift_beginAccess(v0 + 22, v315, 0, 0);
  v38 = v0[22];
  if ((v38 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v38 + 16))
      return;
    goto LABEL_8;
  }
  if (v38 < 0)
    v39 = v38;
  else
    v39 = v38 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v38);
  v40 = __CocoaSet.count.getter(v39);
  swift_bridgeObjectRelease(v38);
  if (!v40)
  {
LABEL_8:
    v237 = v16;
    v41 = v1[6];
    v314 = (id)dispatch thunk of PlaybackController.isPlayingPublisher.getter(v37);
    KeyPath = swift_getKeyPath(&unk_16CCF0);
    v313 = (void *)v1[2];
    v235 = v28;
    v43 = v313;
    v310 = v313;
    swift_retain(v313);
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
    v312 = v1;
    v45 = v44;
    v46 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v47 = Publisher<>.assign<A>(to:on:)(KeyPath, &v313, v45, v46);
    swift_release(v43);
    swift_release(KeyPath);
    swift_release(v314);
    v48 = v311;
    v49 = swift_beginAccess(v311, &v314, 33, 0);
    AnyCancellable.store(in:)(v48, v49);
    swift_endAccess(&v314);
    v50 = swift_release(v47);
    dispatch thunk of PlaybackController.$preferredJumpInterval.getter(v50);
    v51 = sub_27A8C(&qword_1FBE98, &qword_1FBE78, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v52 = sub_3FDB0();
    Publisher<>.removeDuplicates()(v30, v51, v52);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    v53 = swift_getKeyPath(&unk_16CD20);
    v54 = (void *)sub_399E0();
    v314 = v54;
    v55 = sub_27A8C(&qword_1FBEB8, (uint64_t *)&unk_1FBE80, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v56 = Publisher<>.assign<A>(to:on:)(v53, &v314, v34, v55);
    swift_release(v54);
    v57 = swift_release(v53);
    (*(void (**)(char *, uint64_t, __n128))(v240 + 8))(v36, v34, v57);
    v58 = swift_beginAccess(v48, &v314, 33, 0);
    AnyCancellable.store(in:)(v48, v58);
    swift_endAccess(&v314);
    swift_release(v56);
    v59 = v307;
    v240 = v41;
    dispatch thunk of PlaybackController.$durationSnapshot.getter(v60);
    v61 = sub_27A8C(&qword_1FBD50, &qword_1FBD40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v62 = sub_3FE94();
    v63 = v242;
    v64 = v308;
    v239 = v61;
    Publisher<>.removeDuplicates()(v308, v61, v62);
    v238 = *(void (**)(char *, uint64_t))(v241 + 8);
    v238(v59, v64);
    v65 = v248;
    OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(0.3);
    v66 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v241 = v66;
    v68 = (void *)static OS_dispatch_queue.main.getter(v67);
    v314 = v68;
    v69 = sub_27A8C(&qword_1FBED0, &qword_1FBE68, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v70 = sub_3FD20((unint64_t *)&qword_1FB320, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v71 = v245;
    v72 = v244;
    v73 = v66;
    v74 = v70;
    v236 = v70;
    Publisher.throttle<A>(for:scheduler:latest:)(v65, &v314, 1, v244, v73, v69, v70);

    v246 = *(_QWORD *)(v246 + 8);
    v75 = v251;
    ((void (*)(char *, uint64_t))v246)(v65, v251);
    (*(void (**)(char *, uint64_t))(v243 + 8))(v63, v72);
    v76 = swift_getKeyPath(&unk_16CD48);
    v77 = (void *)sub_399E0();
    v314 = v77;
    v78 = sub_27A8C(&qword_1FBED8, &qword_1FBE70, (uint64_t)&protocol conformance descriptor for Publishers.Throttle<A, B>);
    v79 = v235;
    v80 = Publisher<>.assign<A>(to:on:)(v76, &v314, v235, v78);
    swift_release(v77);
    v81 = swift_release(v76);
    (*(void (**)(char *, uint64_t, __n128))(v247 + 8))(v71, v79, v81);
    v82 = swift_beginAccess(v48, &v314, 33, 0);
    AnyCancellable.store(in:)(v48, v82);
    swift_endAccess(&v314);
    swift_release(v80);
    v83 = sub_39918();
    swift_beginAccess(v83 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__backdropImage, &v314, 33, 0);
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEE0);
    v85 = v249;
    Published.projectedValue.getter(v84);
    swift_endAccess(&v314);
    swift_release(v83);
    v86 = swift_allocObject(&unk_1C9220, 32, 7);
    *(_QWORD *)(v86 + 16) = sub_3D1E8;
    *(_QWORD *)(v86 + 24) = 0;
    v87 = sub_27A8C(&qword_1FBEE8, &qword_1FBE50, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v88 = v253;
    v89 = v252;
    Publisher.removeDuplicates(by:)(sub_3FF5C, v86, v252, v87);
    swift_release(v86);
    v90 = sub_27A8C((unint64_t *)&unk_1FBEF0, &qword_1FBE48, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v91 = v255;
    v92 = (void *)Publisher.eraseToAnyPublisher()(v255, v90);
    (*(void (**)(char *, uint64_t))(v254 + 8))(v88, v91);
    (*(void (**)(char *, uint64_t))(v250 + 8))(v85, v89);
    v314 = v92;
    OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(0.3);
    v93 = v241;
    v95 = (void *)static OS_dispatch_queue.main.getter(v94);
    v313 = v95;
    v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB330);
    v97 = sub_27A8C(&qword_1FBF00, (uint64_t *)&unk_1FB330, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v98 = v256;
    Publisher.throttle<A>(for:scheduler:latest:)(v65, &v313, 1, v96, v93, v97, v74);

    ((void (*)(char *, uint64_t))v246)(v65, v75);
    swift_release(v314);
    v99 = swift_allocObject(&unk_1C9248, 24, 7);
    v100 = v306;
    *(_QWORD *)(v99 + 16) = v306;
    v101 = v100;
    v102 = sub_27A8C(&qword_1FBF08, &qword_1FBE58, (uint64_t)&protocol conformance descriptor for Publishers.Throttle<A, B>);
    v103 = v258;
    v104 = v259;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_3FF7C, v99, 0, 0, 0, 0, 0, 0, v258, v102);
    v105 = swift_release(v99);
    (*(void (**)(char *, uint64_t, __n128))(v257 + 8))(v98, v103, v105);
    v106 = swift_getKeyPath(&unk_16CD70);
    v107 = v310;
    v314 = v310;
    v108 = sub_27A8C((unint64_t *)&unk_1FBF10, &qword_1FBE60, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
    swift_retain(v107);
    v109 = v261;
    v110 = Publisher<>.assign<A>(to:on:)(v106, &v314, v261, v108);
    swift_release(v107);
    v111 = swift_release(v106);
    (*(void (**)(char *, uint64_t, __n128))(v260 + 8))(v104, v109, v111);
    v112 = v311;
    v113 = swift_beginAccess(v311, &v314, 33, 0);
    AnyCancellable.store(in:)(v112, v113);
    swift_endAccess(&v314);
    swift_release(v110);
    v114 = sub_39918();
    swift_beginAccess(v114 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__primaryArtworkData, &v314, 33, 0);
    v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2B0);
    v115 = v265;
    Published.projectedValue.getter(v261);
    swift_endAccess(&v314);
    swift_release(v114);
    v116 = sub_27A8C(&qword_1FBF20, &qword_1FBE30, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v260 = v116;
    v259 = (char *)sub_3FFD8();
    v117 = v267;
    v118 = v266;
    Publisher<>.removeDuplicates()(v266, v116, v259);
    v262 = *(_QWORD *)(v262 + 8);
    ((void (*)(char *, uint64_t))v262)(v115, v118);
    v119 = swift_allocObject(&unk_1C9270, 24, 7);
    *(_QWORD *)(v119 + 16) = v101;
    v258 = sub_27A8C(&qword_1FBF40, &qword_1FBE38, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v120 = v268;
    v121 = v269;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_40068, v119, 0, 0, 0, 0, 0, 0, v268, v258);
    v122 = swift_release(v119);
    v263 = *(_QWORD *)(v263 + 8);
    ((void (*)(char *, uint64_t, __n128))v263)(v117, v120, v122);
    v123 = swift_allocObject(&unk_1C91D8, 24, 7);
    swift_weakInit(v123 + 16, v312);
    v124 = sub_27A8C(&qword_1FBF48, &qword_1FBE40, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
    v125 = v270;
    v126 = Publisher<>.sink(receiveValue:)(sub_40090, v123, v270, v124);
    v127 = swift_release(v123);
    v128 = *(void (**)(char *, uint64_t, __n128))(v264 + 8);
    v128(v121, v125, v127);
    v129 = v311;
    v130 = swift_beginAccess(v311, &v314, 33, 0);
    AnyCancellable.store(in:)(v129, v130);
    swift_endAccess(&v314);
    swift_release(v126);
    v131 = sub_39918();
    swift_beginAccess(v131 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingArtworkController__metadataArtworkData, &v314, 33, 0);
    Published.projectedValue.getter(v261);
    swift_endAccess(&v314);
    swift_release(v131);
    Publisher<>.removeDuplicates()(v118, v260, v259);
    ((void (*)(char *, uint64_t))v262)(v115, v118);
    v132 = swift_allocObject(&unk_1C9298, 24, 7);
    *(_QWORD *)(v132 + 16) = v306;
    v133 = v312;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_400C0, v132, 0, 0, 0, 0, 0, 0, v120, v258);
    v134 = swift_release(v132);
    ((void (*)(char *, uint64_t, __n128))v263)(v117, v120, v134);
    v135 = swift_allocObject(&unk_1C91D8, 24, 7);
    swift_weakInit(v135 + 16, v133);
    v136 = Publisher<>.sink(receiveValue:)(sub_400E8, v135, v125, v124);
    v137 = swift_release(v135);
    v128(v121, v125, v137);
    v138 = v311;
    v139 = swift_beginAccess(v311, &v314, 33, 0);
    AnyCancellable.store(in:)(v138, v139);
    swift_endAccess(&v314);
    swift_release(v136);
    v140 = (void *)sub_37A90();
    v314 = v140;
    v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBF50);
    v142 = sub_27A8C(&qword_1FB490, (uint64_t *)&unk_1FBF50, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v143 = v271;
    Publisher.removeDuplicates(by:)(sub_2C9FC, 0, v141, v142);
    swift_release(v140);
    v144 = swift_allocObject(&unk_1C91D8, 24, 7);
    swift_weakInit(v144 + 16, v133);
    v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBF60);
    v146 = sub_27A8C(&qword_1FB4A0, &qword_1FB470, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v147 = v274;
    v148 = v273;
    Publisher.map<A>(_:)(sub_40108, v144, v273, v145, v146);
    v149 = swift_release(v144);
    (*(void (**)(char *, uint64_t, __n128))(v272 + 8))(v143, v148, v149);
    v150 = sub_27A8C(&qword_1FBF70, &qword_1FBE10, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v151 = sub_27A8C(&qword_1FBF78, (uint64_t *)&unk_1FBF60, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v152 = v277;
    v153 = v276;
    Publisher<>.switchToLatest()(v276, v150, v151);
    v154.n128_f64[0] = (*(double (**)(char *, uint64_t))(v275 + 8))(v147, v153);
    v155 = v241;
    v314 = (id)static OS_dispatch_queue.main.getter(v154);
    v156 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v157 = (uint64_t)v285;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v285, 1, 1, v156);
    v158 = sub_27A8C(&qword_1FBF80, &qword_1FBE18, (uint64_t)&protocol conformance descriptor for Publishers.SwitchToLatest<A, B>);
    v159 = v279;
    v160 = v280;
    Publisher.receive<A>(on:options:)(&v314, v157, v280, v155, v158, v236);
    sub_9944(v157, &qword_1FB2C0);

    (*(void (**)(char *, uint64_t))(v278 + 8))(v152, v160);
    v161 = sub_27A8C(&qword_1FBF88, &qword_1FBE20, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v162 = v283;
    v163 = v282;
    Publisher.removeDuplicates(by:)(sub_3DE18, 0, v282, v161);
    (*(void (**)(char *, uint64_t))(v281 + 8))(v159, v163);
    v164 = swift_allocObject(&unk_1C91D8, 24, 7);
    swift_weakInit(v164 + 16, v133);
    v165 = sub_27A8C(&qword_1FBF90, &qword_1FBE28, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v166 = v237;
    v167 = Publisher<>.sink(receiveValue:)(sub_40110, v164, v237, v165);
    v168 = swift_release(v164);
    (*(void (**)(char *, uint64_t, __n128))(v284 + 8))(v162, v166, v168);
    v169 = swift_beginAccess(v138, &v314, 33, 0);
    AnyCancellable.store(in:)(v138, v169);
    swift_endAccess(&v314);
    swift_release(v167);
    v170 = sub_38D08();
    v171 = *(_QWORD *)(v170 + 24);
    swift_retain(v171);
    swift_release(v170);
    swift_beginAccess(v171 + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__queue, &v314, 33, 0);
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBF98);
    v173 = v286;
    Published.projectedValue.getter(v172);
    swift_endAccess(&v314);
    swift_release(v171);
    v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFA0);
    v175 = sub_27A8C(&qword_1FBFA8, &qword_1FBDF0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v176 = v288;
    v177 = v289;
    Publisher.map<A>(_:)(sub_3E6D8, 0, v289, v174, v175);
    (*(void (**)(char *, uint64_t))(v287 + 8))(v173, v177);
    v178 = sub_27A8C(&qword_1FBFB0, &qword_1FBDF8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v179 = sub_40118();
    v180 = v292;
    v181 = v291;
    Publisher<>.removeDuplicates()(v291, v178, v179);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v176, v181);
    v182 = swift_allocObject(&unk_1C92C0, 24, 7);
    swift_weakInit(v182 + 16, v310);
    v183 = sub_27A8C(&qword_1FBFC8, (uint64_t *)&unk_1FBE00, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v184 = v294;
    v185 = Publisher<>.sink(receiveValue:)(sub_401C0, v182, v294, v183);
    v186 = swift_release(v182);
    (*(void (**)(char *, _QWORD *, __n128))(v293 + 8))(v180, v184, v186);
    v187 = swift_beginAccess(v138, &v314, 33, 0);
    AnyCancellable.store(in:)(v138, v187);
    swift_endAccess(&v314);
    v188 = swift_release(v185);
    v189 = NowPlayingViewModel.metrics.getter(v188);
    v190 = *(void (**)(_QWORD))(v309 + 104);
    v191 = v296;
    LODWORD(v306) = enum case for NowPlayingViewModel.Metrics.Event.toggle(_:);
    v192 = v297;
    v294 = v190;
    v190(v296);
    if (qword_1F9480 != -1)
      swift_once(&qword_1F9480, sub_35F0C);
    v193 = v299;
    v194 = __swift_project_value_buffer(v299, (uint64_t)static NowPlayingHostedContentID.transcript);
    v195 = swift_beginAccess(v194, &v314, 0, 0);
    v196 = v295;
    v197 = v298;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v295 + 16))(v298, v194, v193, v195);
    v198 = swift_allocObject(&unk_1C91D8, 24, 7);
    v199 = v312;
    swift_weakInit(v198 + 16, v312);
    swift_retain(v198);
    NowPlayingViewModel.Metrics.on(_:for:handler:)(v191, v197, sub_401C8, v198);
    swift_release(v189);
    v200 = swift_release(v198);
    v201 = *(void (**)(char *, uint64_t, __n128))(v196 + 8);
    v201(v197, v193, v200);
    v202 = *(void (**)(char *, uint64_t))(v309 + 8);
    v202(v191, v192);
    v203 = swift_release(v198);
    v204 = NowPlayingViewModel.metrics.getter(v203);
    v205 = ((uint64_t (*)(char *, _QWORD, uint64_t))v294)(v191, v306, v192);
    static NowPlayingHostedContentID.queue.getter(v205);
    v206 = swift_allocObject(&unk_1C91D8, 24, 7);
    swift_weakInit(v206 + 16, v199);
    swift_retain(v206);
    NowPlayingViewModel.Metrics.on(_:for:handler:)(v191, v197, sub_401E8, v206);
    swift_release(v204);
    v207 = swift_release(v206);
    v201(v197, v193, v207);
    v202(v191, v192);
    swift_release(v206);
    v208 = v199;
    v209 = sub_390F0();
    v313 = (void *)v209;
    v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBC80);
    v211 = sub_27A8C(&qword_1FBC88, &qword_1FBC80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v212 = v300;
    Publisher.removeDuplicates(by:)(sub_3E97C, 0, v210, v211);
    swift_release(v209);
    v213 = swift_allocObject(&unk_1C91D8, 24, 7);
    swift_weakInit(v213 + 16, v208);
    v214 = swift_allocObject(&unk_1C92E8, 32, 7);
    *(_QWORD *)(v214 + 16) = sub_40208;
    *(_QWORD *)(v214 + 24) = v213;
    v215 = sub_27A8C(&qword_1FBFD0, &qword_1FBDE8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v216 = v302;
    v217 = Publisher<>.sink(receiveValue:)(sub_40214, v214, v302, v215);
    v218 = swift_release(v214);
    (*(void (**)(char *, uint64_t, __n128))(v301 + 8))(v212, v216, v218);
    v219 = v311;
    v220 = swift_beginAccess(v311, &v313, 33, 0);
    AnyCancellable.store(in:)(v219, v220);
    swift_endAccess(&v313);
    swift_release(v217);
    v221 = v307;
    dispatch thunk of PlaybackController.$durationSnapshot.getter(v222);
    type metadata accessor for MPCPlayerItemDurationSnapshot(0);
    v223 = v303;
    v224 = v308;
    Publisher.compactMap<A>(_:)(sub_3ED98, 0, v308, v225, v239);
    v238(v221, v224);
    v226 = sub_27A8C(&qword_1FBFD8, &qword_1FBDE0, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v227 = v305;
    v228 = Publisher.eraseToAnyPublisher()(v305, v226);
    v229 = (*(uint64_t (**)(char *, uint64_t))(v304 + 8))(v223, v227);
    v230 = dispatch thunk of PlaybackController.transportCommandPerformedPublisher.getter(v229);
    v231 = swift_allocObject(&unk_1C92C0, 24, 7);
    swift_weakInit(v231 + 16, v310);
    v232 = _s23SkippedDurationObserverCMa();
    swift_allocObject(v232, 208, 15);
    v233 = sub_FAD28(v228, v230, (uint64_t)sub_40244, v231);
    v234 = v208[23];
    v208[23] = v233;
    swift_release(v234);
  }
}

uint64_t sub_3CB30(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of NowPlayingViewModel.isBannerVisible.setter(a2);
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.willTransitionToMiniPlayer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[24];

  v1 = v0;
  v2 = type metadata accessor for NowPlayingViewModel.PlayerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_39B9C();
  sub_102900();
  swift_release(v6);
  v7 = *(_QWORD *)(v1 + 96);
  MetricsController.observe(lifecycleEvent:)(2);
  v8 = type metadata accessor for PageContextTracker(0);
  v9 = static PageContextTracker.shared.getter(v8);
  v10 = PageContextTracker.value.getter();
  v12 = v11;
  swift_release(v9);
  v14 = static MetricsPageContext.nowPlaying.getter(v13);
  v16 = v15;
  if (!v12)
    goto LABEL_7;
  if (v10 == v14 && v12 == v15)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v16);
LABEL_6:
    v19 = static PageContextTracker.shared.getter(v17);
    PageContextTracker.pop()();
    v16 = v20;
    swift_release(v19);
LABEL_7:
    swift_bridgeObjectRelease(v16);
    goto LABEL_8;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v15, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  if ((v18 & 1) != 0)
    goto LABEL_6;
LABEL_8:
  *(_BYTE *)(v7 + 24) = 0;
  v21 = swift_beginAccess(v1 + 192, v25, 0, 0);
  v22 = *(_QWORD *)(v1 + 192);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, enum case for NowPlayingViewModel.PlayerStyle.mini(_:), v2, v21);
  swift_retain(v22);
  CurrentValueSubject.send(_:)(v5);
  v23 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v23);
}

Swift::Void __swiftcall NowPlayingMediaPlayerController.didTransitionToFullScreenPlayer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  NSString v11;
  id v12;
  Class isa;
  char *v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  _BYTE v23[24];

  v1 = v0;
  v2 = type metadata accessor for NowPlayingViewModel.PlayerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  __chkstk_darwin(v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v10 = off_202B38;
  swift_bridgeObjectRetain(off_202B38);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "integerForKey:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    v14 = off_202B38;
    swift_bridgeObjectRetain(off_202B38);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v16 = sub_39B9C();
    sub_102A6C();
    swift_release(v16);
    v17 = *(_QWORD *)(v1 + 96);
    dispatch thunk of NowPlayingViewModel.selectedContent.getter(v18);
    sub_E67C8((uint64_t)v8);
    MetricsController.observe(lifecycleEvent:)(1);
    *(_BYTE *)(v17 + 24) = 1;
    sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
    v19 = swift_beginAccess(v1 + 192, v23, 0, 0);
    v20 = *(_QWORD *)(v1 + 192);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v5, enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:), v2, v19);
    swift_retain(v20);
    CurrentValueSubject.send(_:)(v5);
    v21 = swift_release(v20);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v21);
  }
}

double NowPlayingMediaPlayerController.didUpdateSelectedContent(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  double result;

  v4 = dispatch thunk of PlaybackController.nowPlayingItem.getter(a1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = MPModelObject.adamID.getter(v4);
    v8 = v7;

    v9 = v8 & 1;
  }
  else
  {
    v6 = 0;
    v9 = 1;
  }
  v10 = sub_E68FC(a1);
  v12 = v11;
  v14 = sub_E68FC(a2);
  v15 = v13;
  if (v10 == v14 && v12 == v13)
  {
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v12);
    if ((v16 & 1) == 0)
    {
      sub_E67C8(a2);
      sub_E613C(v6, v9, a2);
    }
  }
  v17 = type metadata accessor for NowPlayingHostedContentID(0);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a2, 1, v17);
  v19 = sub_39B9C();
  if (v18 == 1)
    sub_102A6C();
  else
    sub_102900();
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_3D080(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v13[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEA8);
  v5 = __chkstk_darwin(v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v13[-v8 - 8];
  sub_2808C(a1, (uint64_t)&v13[-v8 - 8], &qword_1FBEA8);
  v10 = *a2 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_preferredJumpInterval;
  swift_beginAccess(v10, v13, 33, 0);
  sub_40430((uint64_t)v9, v10);
  swift_endAccess(v13);
  sub_2808C(v10, (uint64_t)v7, &qword_1FBEA8);
  sub_152260((uint64_t)v7);
  sub_9944((uint64_t)v7, &qword_1FBEA8);
  return sub_9944((uint64_t)v9, &qword_1FBEA8);
}

void sub_3D18C(uint64_t a1, _QWORD *a2)
{
  _BYTE v3[56];

  sub_982C(a1, (uint64_t)v3, (uint64_t *)&unk_1FBD00);
  sub_982C((uint64_t)v3, *a2 + 80, (uint64_t *)&unk_1FBD00);
  sub_15201C((uint64_t)v3);
}

id sub_3D1E8(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, "isEqual:", *a2);
}

uint64_t sub_3D20C(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  static Logger.artwork.getter(v4);
  v8 = v7;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v18 = v3;
    v19 = v2;
    v11 = swift_slowAlloc(32, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    v17 = swift_slowAlloc(32, -1);
    v21 = v17;
    *(_DWORD *)v11 = 136315651;
    v20 = sub_C6F4(0xD000000000000022, 0x8000000000185260, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 4, v11 + 12);
    *(_WORD *)(v11 + 12) = 2160;
    v20 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 14, v11 + 22);
    *(_WORD *)(v11 + 22) = 2113;
    if (v7)
    {
      v20 = (uint64_t)v8;
      v13 = v8;
    }
    else
    {
      v20 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 24, v11 + 32);
    *v12 = v7;

    _os_log_impl(&dword_0, v9, v10, "%s [Backdrop] Updating backdrop image to %{private,mask.hash}@.", (uint8_t *)v11, 0x20u);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
    swift_arrayDestroy(v12, 1, v15);
    swift_slowDealloc(v12, -1, -1);
    v16 = v17;
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_3D49C(uint64_t a1, uint64_t a2, const char *a3, const char *a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  void (*v40)(_BYTE *, uint64_t, __n128);
  uint64_t v41;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  const char *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a4;
  v46 = a3;
  v5 = (const char *)type metadata accessor for Logger(0);
  v47 = *((_QWORD *)v5 - 1);
  v6 = __chkstk_darwin(v5);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v42[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  __chkstk_darwin(v11);
  v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for NowPlayingArtwork.Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = &v42[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v20 = &v42[-v19];
  sub_2808C(a1, (uint64_t)v13, (uint64_t *)&unk_1FB1E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v21 = sub_9944((uint64_t)v13, (uint64_t *)&unk_1FB1E0);
    v22 = static Logger.artwork.getter(v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = v5;
      v27 = swift_slowAlloc(32, -1);
      v49 = v27;
      *(_DWORD *)v25 = 136315138;
      v48 = sub_C6F4(0xD000000000000022, 0x8000000000185260, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v25 + 4, v25 + 12);
      _os_log_impl(&dword_0, v23, v24, v45, v25, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      return (*(uint64_t (**)(_BYTE *, const char *))(v47 + 8))(v10, v26);
    }
    else
    {

      return (*(uint64_t (**)(_BYTE *, const char *))(v47 + 8))(v10, v5);
    }
  }
  else
  {
    v45 = v5;
    v29 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v20, v13, v14);
    static Logger.artwork.getter(v29);
    v30 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16))(v18, v20, v14);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc(32, -1);
      v44 = swift_slowAlloc(64, -1);
      v49 = v44;
      *(_DWORD *)v34 = 136315651;
      v48 = sub_C6F4(0xD000000000000022, 0x8000000000185260, &v49);
      v43 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v34 + 4, v34 + 12);
      *(_WORD *)(v34 + 12) = 2160;
      v48 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v34 + 14, v34 + 22);
      *(_WORD *)(v34 + 22) = 2081;
      v35 = sub_3F28C((unint64_t *)&unk_1FC0D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingArtwork.Data, (uint64_t)&protocol conformance descriptor for NowPlayingArtwork.Data);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v14, v35);
      v38 = v37;
      v48 = sub_C6F4(v36, v37, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v34 + 24, v34 + 32);
      v39 = swift_bridgeObjectRelease(v38);
      v40 = *(void (**)(_BYTE *, uint64_t, __n128))(v15 + 8);
      v40(v18, v14, v39);
      _os_log_impl(&dword_0, v31, (os_log_type_t)v43, v46, (uint8_t *)v34, 0x20u);
      v41 = v44;
      swift_arrayDestroy(v44, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

      v40 = *(void (**)(_BYTE *, uint64_t, __n128))(v15 + 8);
      ((void (*)(_BYTE *, uint64_t))v40)(v18, v14);
    }
    (*(void (**)(_BYTE *, const char *))(v47 + 8))(v8, v45);
    return ((uint64_t (*)(_BYTE *, uint64_t))v40)(v20, v14);
  }
}

double sub_3D940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v9 = a3();
    swift_release(v8);
    sub_56F98(a1);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t sub_3D9BC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t result;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  _OWORD v34[4];
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  id v44;
  _QWORD v45[3];
  uint64_t v46;
  id v47[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFF8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC000);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[1];
  v40 = *a1;
  v41 = v14;
  v15 = a1[3];
  v42 = a1[2];
  v43 = v15;
  a2 += 16;
  swift_beginAccess(a2, &v39, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v17 = Strong;
    v18 = sub_39918();
    v19 = sub_2BF94((uint64_t)&v40);
    swift_release(v18);
    v46 = v19;
    sub_982C((uint64_t)&v40, (uint64_t)v47, (uint64_t *)&unk_203B20);
    sub_982C((uint64_t)&v40 + 8, (uint64_t)v34, (uint64_t *)&unk_1FC010);
    sub_982C((uint64_t)&v43, (uint64_t)v45, &qword_203B30);
    sub_982C((uint64_t)&v43 + 8, (uint64_t)&v36, &qword_1FB3D0);
    v20 = (_OWORD *)swift_allocObject(&unk_1C9310, 80, 7);
    v21 = v41;
    v20[1] = v40;
    v20[2] = v21;
    v22 = v43;
    v20[3] = v42;
    v20[4] = v22;
    sub_30508(v47);
    sub_40368((uint64_t)v34);
    sub_30974(v45);
    sub_30508((id *)&v36);
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB300);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC028);
    v25 = sub_27A8C(&qword_1FC040, (uint64_t *)&unk_1FB300, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_403E4, v20, v23, v24, v25);
    swift_release(v20);
    swift_release(v46);
    v26 = sub_27A8C(&qword_1FC048, &qword_1FBFF8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v27 = Publisher.eraseToAnyPublisher()(v6, v26);
    v28 = swift_release(v17);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v28);
  }
  else
  {
    sub_982C((uint64_t)&v40, (uint64_t)&v44, (uint64_t *)&unk_203B20);
    sub_982C((uint64_t)&v40 + 8, (uint64_t)v45, (uint64_t *)&unk_1FC010);
    sub_982C((uint64_t)&v43, (uint64_t)&v46, &qword_203B30);
    sub_982C((uint64_t)&v43 + 8, (uint64_t)v47, &qword_1FB3D0);
    v37 = type metadata accessor for NowPlayingStandardArtworkTreatment(0);
    v38 = sub_3F28C(&qword_1FC020, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingStandardArtworkTreatment, (uint64_t)&protocol conformance descriptor for NowPlayingStandardArtworkTreatment);
    __swift_allocate_boxed_opaque_existential_1(&v36);
    sub_30508(&v44);
    sub_40368((uint64_t)v45);
    sub_30974(&v46);
    v30 = sub_30508(v47);
    static NowPlayingArtworkTreatment<>.standard.getter(v30);
    v34[0] = v40;
    v34[1] = v41;
    v34[2] = v42;
    v34[3] = v43;
    sub_27890(&v36, (uint64_t)&v35);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC028);
    Just.init(_:)(v34, v31);
    v32 = sub_27A8C((unint64_t *)&unk_1FC030, (uint64_t *)&unk_1FC000, (uint64_t)&protocol conformance descriptor for Just<A>);
    v27 = Publisher.eraseToAnyPublisher()(v10, v32);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v33);
  }
  *a3 = v27;
  return result;
}

id *sub_3DD68@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  id v7;
  uint64_t v8;
  _BYTE v9[24];
  id v10;

  v4 = a2[1];
  *a3 = *a2;
  a3[1] = v4;
  v5 = a2[3];
  a3[2] = a2[2];
  a3[3] = v5;
  sub_DF78(a1, (uint64_t)(a3 + 4));
  sub_982C((uint64_t)a2, (uint64_t)&v10, (uint64_t *)&unk_203B20);
  sub_982C((uint64_t)a2 + 8, (uint64_t)v9, (uint64_t *)&unk_1FC010);
  sub_982C((uint64_t)(a2 + 3), (uint64_t)&v8, &qword_203B30);
  sub_982C((uint64_t)a2 + 56, (uint64_t)&v7, &qword_1FB3D0);
  sub_30508(&v10);
  sub_40368((uint64_t)v9);
  sub_30974(&v8);
  return sub_30508(&v7);
}

uint64_t sub_3DE18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unsigned __int8 v16;
  char v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v28;
  id v29;
  id v30;
  id v31;
  unsigned __int8 v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  _QWORD v39[5];
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43[2];
  _QWORD v44[6];

  v4 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  sub_DF78(a1 + 64, (uint64_t)v43);
  sub_27890(v43, (uint64_t)v44);
  v9 = a2 + 64;
  v10 = *(void **)a2;
  v35 = *(_QWORD *)(a2 + 8);
  v36 = *(_QWORD *)(a2 + 16);
  v34 = *(_BYTE *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(void **)(a2 + 56);
  v37 = v11;
  sub_DF78(v9, (uint64_t)v43);
  sub_27890(v43, (uint64_t)v39);
  v33 = v5;
  v32 = v6;
  if (v4)
  {
    if (v10)
    {
      sub_F174(0, &qword_1FB380, MPModelPodcastEpisode_ptr);
      v13 = v4;
      sub_2FE28(v3, v5, v6);
      v30 = v7;
      v14 = v10;
      swift_unknownObjectRetain(v8);
      v15 = v35;
      v16 = v34;
      sub_2FE28(v35, v36, v34);
      v29 = v12;
      swift_unknownObjectRetain(v37);
      v17 = static NSObject.== infix(_:_:)(v13, v14);
      sub_DF78((uint64_t)v44, (uint64_t)v40);
      sub_DF78((uint64_t)v39, (uint64_t)v38);
      if ((v17 & 1) == 0)
      {
        v24 = 0;
        v20 = v30;
        v31 = v13;
        v18 = v14;
        v21 = v36;
LABEL_10:
        v22 = v29;
        v23 = v37;
        goto LABEL_11;
      }
      v28 = v14;
LABEL_9:
      v31 = v13;
      v25 = v41;
      v26 = v42;
      __swift_project_boxed_opaque_existential_1(v40, v41);
      v24 = NowPlayingArtworkTreatment.isEqual(_:)(v38, v25, v26);
      v15 = v35;
      v21 = v36;
      v16 = v34;
      v20 = v30;
      v18 = v28;
      goto LABEL_10;
    }
  }
  else if (!v10)
  {
    sub_2FE28(v3, v5, v6);
    v30 = v7;
    swift_unknownObjectRetain(v8);
    sub_2FE28(v35, v36, v34);
    v29 = v12;
    swift_unknownObjectRetain(v37);
    sub_DF78((uint64_t)v44, (uint64_t)v40);
    sub_DF78((uint64_t)v39, (uint64_t)v38);
    v13 = 0;
    v28 = 0;
    goto LABEL_9;
  }
  v31 = v4;
  sub_2FE28(v3, v5, v6);
  v18 = v10;
  swift_unknownObjectRetain(v8);
  v19 = v12;
  v20 = v7;
  v15 = v35;
  v21 = v36;
  v16 = v34;
  sub_2FE28(v35, v36, v34);
  v22 = v19;
  v23 = v37;
  swift_unknownObjectRetain(v37);
  sub_DF78((uint64_t)v44, (uint64_t)v40);
  sub_DF78((uint64_t)v39, (uint64_t)v38);
  v24 = 0;
LABEL_11:

  sub_30458(v15, v21, v16);
  swift_unknownObjectRelease(v23);
  sub_30458(v3, v33, v32);

  swift_unknownObjectRelease(v8);
  __swift_destroy_boxed_opaque_existential_0(v38);
  __swift_destroy_boxed_opaque_existential_0(v39);
  __swift_destroy_boxed_opaque_existential_0(v44);
  __swift_destroy_boxed_opaque_existential_0(v40);
  return v24 & 1;
}

uint64_t sub_3E120(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  id v13;
  id v14;
  __int128 v15[2];
  _QWORD v16[5];
  _BYTE v17[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = a1 + 64;
    v7 = *(void **)a1;
    v8 = *(_QWORD *)(a1 + 8);
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(void **)(a1 + 56);
    v12 = *(_BYTE *)(a1 + 24);
    sub_DF78(v6, (uint64_t)v15);
    sub_27890(v15, (uint64_t)v16);
    v13 = v7;
    sub_2FE28(v8, v9, v12);
    v14 = v11;
    swift_unknownObjectRetain(v10);
    sub_3E220(v7, (uint64_t)v16);

    swift_release(v5);
    sub_30458(v8, v9, v12);

    swift_unknownObjectRelease(v10);
    return __swift_destroy_boxed_opaque_existential_0(v16);
  }
  return result;
}

void sub_3E220(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  char v59;
  __int128 v60[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
  __chkstk_darwin(v6);
  v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  __chkstk_darwin(v9);
  v11 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE8);
  __chkstk_darwin(v12);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NowPlayingPodcastItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v20 = dispatch thunk of NowPlayingViewModel.isPlaying.setter(0);
    dispatch thunk of NowPlayingViewModel.clearCurrentItem()(v20);
    v21 = sub_39AFC();
    sub_59C00(0);
    swift_release(v21);
    return;
  }
  sub_DF78(a2, (uint64_t)v60);
  v19 = a1;
  sub_B26D4(v19, v60, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {

    sub_9944((uint64_t)v14, &qword_1FBFE8);
    return;
  }
  v57 = v8;
  v56[0] = v15;
  sub_4024C((uint64_t)v14, (uint64_t)v18);
  v22 = sub_39AFC();
  v23 = v19;
  sub_59C00(a1);
  swift_release(v22);

  v24 = *((_QWORD *)v18 + 3);
  v25 = *((_QWORD *)v18 + 4);
  v58 = v3[36];
  v26 = *(_QWORD *)(v58 + 32);
  KeyPath = swift_getKeyPath(&unk_16CDA0);
  v28 = swift_getKeyPath(&unk_16CDC8);
  *(_QWORD *)&v60[0] = v24;
  *((_QWORD *)&v60[0] + 1) = v25;
  swift_bridgeObjectRetain_n(v25, 2);
  swift_retain(v26);
  v29 = static Published.subscript.setter(v60, v26, KeyPath, v28);
  v30 = MPModelObject.adamID.getter(v29);
  if ((v31 & 1) == 0)
  {
    *(_QWORD *)&v60[0] = v30;
    v32 = sub_40324();
    v33 = BinaryInteger.description.getter(&type metadata for UInt64, v32);
    sub_5C788(v33, v34);
  }
  swift_bridgeObjectRelease(v25);
  v35 = sub_38C80();
  v36 = v23;
  sub_91138(a1);
  swift_release(v35);

  v37 = v3[12];
  v38 = v36;
  v39 = MPModelObject.adamID.getter(v38);
  LOBYTE(v35) = v40;

  v41 = v35 & 1;
  v42 = v3[2];
  dispatch thunk of NowPlayingViewModel.selectedContent.getter();
  v43 = *(_BYTE *)(v37 + 40);
  v56[1] = v42;
  if ((v43 & 1) != 0)
  {
    v44 = v56[0];
    if (v41)
      goto LABEL_13;
  }
  else
  {
    v44 = v56[0];
    if (!v41 && *(_QWORD *)(v37 + 32) == v39)
      goto LABEL_13;
  }
  *(_QWORD *)(v37 + 32) = v39;
  *(_BYTE *)(v37 + 40) = v41 != 0;
  sub_E613C(v39, v41, (uint64_t)v11);
LABEL_13:
  sub_9944((uint64_t)v11, (uint64_t *)&unk_1FB9D0);
  swift_beginAccess(v3 + 39, v60, 0, 0);
  v45 = v3[39];
  if (v45)
  {
    v46 = type metadata accessor for NowPlayingContextInteractionDelegate();
    if (swift_dynamicCastClass(v45, v46))
    {
      v47 = v3[3];
      swift_unknownObjectRetain(v45);
      NowPlayingContextInteractionDelegate.updateMenuProvider(asPartOf:for:)(v47, v38);
      swift_unknownObjectRelease(v45);
    }
  }
  v48 = (uint64_t)v57;
  sub_5B3B8((uint64_t)v57);
  v49 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  sub_40298(v48, (uint64_t)&v18[*(int *)(v44 + 48)]);
  v50 = sub_39B9C();
  v51 = &v18[*(int *)(v44 + 40)];
  v52 = *((_QWORD *)v51 + 3);
  __swift_project_boxed_opaque_existential_1(v51, v52);
  LOBYTE(v52) = sub_3EE2C(v52);
  v53 = swift_getKeyPath(&unk_16CDE8);
  v54 = swift_getKeyPath(&unk_16CE10);
  v59 = v52 & 1;
  static Published.subscript.setter(&v59, v50, v53, v54);
  v55 = sub_3F28C(&qword_1FBFF0, 255, type metadata accessor for NowPlayingPodcastItem, (uint64_t)&unk_170A48);
  dispatch thunk of NowPlayingViewModel.updateCurrentItem<A>(_:)(v18, v44, v55);
  NowPlayingStoreTranscriptIdentifierProvider.updateForEpisode(_:shouldForce:completion:)(v38, 0, 0, 0);

  sub_402E8((uint64_t)v18);
}

uint64_t sub_3E6D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

void sub_3E6E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  int64_t v11;
  _QWORD *v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _BYTE v20[24];

  v4 = type metadata accessor for NowPlayingTimeControlSegment(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(_QWORD *)(v8 + 16);
    v12 = _swiftEmptyArrayStorage;
    if (v11)
    {
      v19 = _swiftEmptyArrayStorage;
      sub_A9A68(0, v11, 0);
      v12 = v19;
      v13 = (double *)(v8 + 56);
      do
      {
        v14 = *((_QWORD *)v13 - 2);
        v15 = *((_QWORD *)v13 - 1);
        v16 = *v13;
        swift_bridgeObjectRetain(v15);
        NowPlayingTimeControlSegment.init(title:startTime:)(v14, v15, v16);
        v19 = v12;
        v18 = v12[2];
        v17 = v12[3];
        if (v18 >= v17 >> 1)
        {
          sub_A9A68(v17 > 1, v18 + 1, 1);
          v12 = v19;
        }
        v12[2] = v18 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, v7, v4);
        v13 += 5;
        --v11;
      }
      while (v11);
    }
    dispatch thunk of NowPlayingViewModel.timeControlSegments.setter(v12);
    swift_release(v10);
  }
}

uint64_t sub_3E870(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v6 = type metadata accessor for MetricsData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for ClickMetricsEvent(0);
  v10 = a3(a1);
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(Strong + 96);
    swift_retain(v13);
    v14 = swift_release(v12);
    dispatch thunk of MetricsEvent.metricsData.getter(v14);
    MetricsController.process(_:)(v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release(v13);
  }
  return swift_release(v10);
}

uint64_t sub_3E97C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  char v12;
  uint64_t v13;

  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 24);
  if (!v3)
  {
    if (v6)
      v12 = 1;
    else
      v12 = *((_BYTE *)a1 + 24);
    if (v6)
      v13 = 0;
    else
      v13 = *(unsigned __int8 *)(a2 + 24);
    if ((v12 & 1) != 0)
      return v13;
    return (v4 == v7) & ~(_DWORD)v8;
  }
  if (!v6)
    return 0;
  v9 = *a1;
  if (v9 == *(_QWORD *)a2 && v3 == v6)
  {
    if ((v5 & 1) != 0)
      return v8;
    return (v4 == v7) & ~(_DWORD)v8;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v3, *(_QWORD *)a2, v6, 0);
  if (!(v5 & 1 | ((v11 & 1) == 0)))
    return (v4 == v7) & ~(_DWORD)v8;
  return v11 & v8;
}

void sub_3EA18(uint64_t a1, unint64_t a2, uint8_t *a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  char v48[24];

  v38 = a3;
  v39 = a1;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  v43 = v9;
  __chkstk_darwin(v8);
  v44 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AssetLifetime(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NetworkTaskPriority(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptRequest(0);
  v40 = *(_QWORD *)(v19 - 8);
  v41 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v48, 0, 0);
  Strong = swift_weakLoadStrong(a5);
  if (Strong)
  {
    v23 = (_QWORD *)Strong;
    if ((a4 & 1) != 0 || !a2)
    {
      swift_release(Strong);
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for NetworkTaskPriority.utility(_:), v15);
      (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for AssetLifetime.opportunistic(_:), v11);
      v47 = 0;
      memset(v46, 0, sizeof(v46));
      swift_bridgeObjectRetain_n(a2, 2);
      v24 = v39;
      v25 = TranscriptRequest.init(episodeAdamID:ttmlIdentifier:priority:lifetime:trace:)(v38, v39, a2, v18, v14, v46);
      v26 = v44;
      static Logger.transcripts.getter(v25);
      v27 = swift_bridgeObjectRetain(a2);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.default.getter();
      v30 = os_log_type_enabled(v28, v29);
      v31 = v42;
      if (v30)
      {
        v32 = (uint8_t *)swift_slowAlloc(12, -1);
        v33 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v46[0] = v33;
        *(_DWORD *)v32 = 136315138;
        v38 = v32 + 4;
        swift_bridgeObjectRetain(a2);
        v45 = sub_C6F4(v24, a2, (uint64_t *)v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v38, v32 + 12);
        swift_bridgeObjectRelease_n(a2, 3);
        _os_log_impl(&dword_0, v28, v29, "[NowPlayingMediaPlayerController]: Requesting transcript for player item with transcript identifier: %s.", v32, 0xCu);
        swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v31);
      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v31);
      }
      v34 = v23[18];
      v35 = v23[19];
      __swift_project_boxed_opaque_existential_1(v23 + 15, v34);
      v36 = dispatch thunk of TranscriptProvider.prefetch(request:)(v21, v34, v35);
      swift_release(v23);
      v37 = swift_release(v36);
      (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v21, v41, v37);
    }
  }
}

__n128 sub_3ED98@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 48) = v2;
  return result;
}

uint64_t sub_3EDB4(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = dispatch thunk of NowPlayingViewModel.playbackPosition.getter();
    v7 = swift_release(v5);
    dispatch thunk of NowPlayingViewModel.PlaybackPosition.notifyJumped(by:)(v7, a2);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_3EE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for MetadataButtonStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a1);
  v12 = swift_dynamicCast(v8, v10, a1, v4, 6);
  if ((_DWORD)v12)
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v12;
}

void sub_3EF0C(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;

  v3 = *a1;
  if (*a1)
  {
    v4 = v3;
    if ((MPCPlayerResponse.isSystemPodcastsResponse.getter() & 1) == 0)
    {

      v3 = 0;
    }
  }
  *a2 = v3;
}

uint64_t sub_3EF58(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _sSo29MPCPlayerItemDurationSnapshota12NowPlayingUIE2eeoiySbAB_ABtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_3EFB0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16CDE8);
  v5 = swift_getKeyPath(&unk_16CE10);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_3F02C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16CDE8);
  v5 = swift_getKeyPath(&unk_16CE10);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_3F09C(unint64_t a1, unint64_t a2, uint64_t (*a3)(unint64_t *, unint64_t *))
{
  char v3;
  id v6;
  id v7;
  unint64_t v9;
  unint64_t v10;

  v3 = (a1 | a2) == 0;
  if (a1 && a2)
  {
    v9 = a2;
    v10 = a1;
    v6 = (id)a2;
    v7 = (id)a1;
    v3 = a3(&v10, &v9);

  }
  return v3 & 1;
}

double sub_3F11C(uint64_t a1)
{
  return (double)a1;
}

uint64_t _sSo29MPCPlayerItemDurationSnapshota12NowPlayingUIE2eeoiySbAB_ABtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16)
    && *(double *)(a1 + 24) == *(double *)(a2 + 24)
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && *(float *)(a1 + 40) == *(float *)(a2 + 40)
    && *(float *)(a1 + 44) == *(float *)(a2 + 44)
    && ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0)
  {
    return (((*(_BYTE *)(a1 + 49) & 1) == 0) ^ *(unsigned __int8 *)(a2 + 49)) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for NowPlayingMediaPlayerController()
{
  return objc_opt_self(_TtC12NowPlayingUI31NowPlayingMediaPlayerController);
}

uint64_t sub_3F1E8()
{
  return EnvironmentValues.mcui.getter();
}

uint64_t sub_3F20C()
{
  return MCUINamespace<A>.deviceMetrics.getter();
}

uint64_t sub_3F230@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = DeviceMetrics.size.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_3F260()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_3F284()
{
  uint64_t v0;

  return sub_3AD58(v0);
}

uint64_t sub_3F28C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3F2CC()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

BOOL sub_3F2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  int domain_answer;
  int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v20[-v5 - 8];
  v19 = 0;
  domain_answer = os_eligibility_get_domain_answer(121, &v19, 0, 0, 0);
  if (domain_answer)
  {
    v8 = domain_answer;
    v9 = static Logger.transcripts.getter();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 67109120;
      LODWORD(v21) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, (char *)&v21 + 4, v12 + 4, v12 + 8);
      _os_log_impl(&dword_0, v10, v11, "OSEligibility error code %d encountered while getting OS_ELIGIBILITY_DOMAIN_PODCASTS_TRANSCRIPTS", v12, 8u);
      swift_slowDealloc(v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  else
  {
    v14 = static Logger.transcripts.getter();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v17 = 134217984;
      swift_beginAccess(&v19, v20, 0, 0);
      v21 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 4, v17 + 12);
      _os_log_impl(&dword_0, v15, v16, "eligibility is %llu for OS_ELIGIBILITY_DOMAIN_PODCASTS_TRANSCRIPTS", v17, 0xCu);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    swift_beginAccess(&v19, &v21, 0, 0);
    return v19 == 4 || v19 == 1;
  }
}

uint64_t sub_3F570(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptRequestInformation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return 0;
  if (objc_msgSend(a2, "isDeviceRoute"))
  {
    if (a1)
    {
      v13 = objc_msgSend(a1, "transcriptIdentifier");
      if (v13)
      {
        v14 = v13;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v17 = v16;

        MPModelObject.adamID.getter(v18);
        if ((v19 & 1) == 0)
          return v15;
        swift_bridgeObjectRelease(v17);
      }
    }
    sub_2808C(a3, (uint64_t)v8, &qword_1FE0C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v15 = TranscriptRequestInformation.ttmlIdentifier.getter(v21);
      v22 = TranscriptRequestInformation.episodeAdamId.getter();
      AdamID.init(_:)(v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return v15;
    }
    sub_9944((uint64_t)v8, &qword_1FE0C0);
  }
  return 0;
}

void sub_3F740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v9, 0, 0);
  if ((_QWORD)static NowPlayingDataProvider.shared)
  {
    v6 = qword_210548;
    *(_QWORD *)(a3 + 24) = qword_210548;
    *(_QWORD *)(a3 + 48) = 0;
    swift_unknownObjectWeakInit(a3 + 40, 0);
    *(_OWORD *)(a3 + 72) = 0u;
    *(_OWORD *)(a3 + 56) = 0u;
    *(_QWORD *)(a3 + 16) = a1;
    v7 = type metadata accessor for MetricsController(0);
    swift_retain(v6);
    swift_retain(a1);
    BaseObjectGraph.inject<A>(_:)(&v8, v7, v7);
    *(_QWORD *)(a3 + 32) = v8;
    *(_QWORD *)(a3 + 48) = &off_1C91F0;
    swift_unknownObjectWeakAssign(a3 + 40, a2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_3F848(uint64_t a1, uint64_t a2)
{
  return sub_3F28C(&qword_1FAA68, a2, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingMediaPlayerController, (uint64_t)&protocol conformance descriptor for NowPlayingMediaPlayerController);
}

uint64_t sub_3F874(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.bannerView()>>, 1);
}

uint64_t sub_3F884(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.contextMenuButton()>>, 1);
}

void *sub_3F894()
{
  return &protocol witness table for EmptyView;
}

uint64_t sub_3F8A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.footerConfiguration>>, 2);
}

uint64_t sub_3F8B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.footerConfiguration>>, 3);
}

uint64_t sub_3F8C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.hostedContent>>, 1);
}

uint64_t sub_3F8D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.leadingAccessoryButton()>>, 1);
}

uint64_t sub_3F8E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.metadataArtworkView>>, 1);
}

uint64_t sub_3F8F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.overlayView>>, 1);
}

uint64_t sub_3F900(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.primaryArtworkView>>, 1);
}

uint64_t sub_3F910(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.timeControlAccessoryView()>>, 1);
}

uint64_t sub_3F920(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NowPlayingMediaPlayerController.trailingAccessoryButton()>>, 1);
}

uint64_t sub_3F930()
{
  return sub_3FA84(&qword_1FBBC0, &qword_1FBBC8, (void (*)(void))sub_3F964);
}

unint64_t sub_3F964()
{
  unint64_t result;

  result = qword_1FBBD0;
  if (!qword_1FBBD0)
  {
    result = swift_getWitnessTable(&unk_16DA04, &type metadata for NowPlayingArtworkView);
    atomic_store(result, (unint64_t *)&qword_1FBBD0);
  }
  return result;
}

uint64_t sub_3F9AC()
{
  return sub_3F28C(&qword_1FBBD8, 255, type metadata accessor for NowPlayingMenuController.ContextMenu, (uint64_t)&unk_16F1B8);
}

unint64_t sub_3F9E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FBBE0;
  if (!qword_1FBBE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FBBE8);
    sub_3FA84(&qword_1FBBF0, &qword_1FBBF8, (void (*)(void))sub_3FAEC);
    sub_27A8C(&qword_1FBC18, &qword_1FBC20, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FBBE0);
  }
  return result;
}

uint64_t sub_3FA84(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3FAEC()
{
  return sub_3FA84(&qword_1FBC00, &qword_1FBC08, (void (*)(void))sub_3FB10);
}

unint64_t sub_3FB10()
{
  unint64_t result;

  result = qword_1FBC10;
  if (!qword_1FBC10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingEpisodeUpsellBannerWrapper, &type metadata for NowPlayingEpisodeUpsellBannerWrapper);
    atomic_store(result, (unint64_t *)&qword_1FBC10);
  }
  return result;
}

unint64_t sub_3FB58()
{
  unint64_t result;

  result = qword_1FBC28;
  if (!qword_1FBC28)
  {
    result = swift_getWitnessTable(&unk_175710, &type metadata for TimeControlAccessoryViewWrapper);
    atomic_store(result, (unint64_t *)&qword_1FBC28);
  }
  return result;
}

uint64_t sub_3FB9C()
{
  return sub_27A8C(&qword_1FBC30, &qword_1FBC38, (uint64_t)&protocol conformance descriptor for ContentLookup2<A, B, C>);
}

uint64_t sub_3FBC8()
{
  return sub_3F28C(&qword_1FBC40, 255, type metadata accessor for NowPlayingSpeedPicker, (uint64_t)&unk_172B28);
}

uint64_t sub_3FBF8()
{
  return sub_3F28C(&qword_1FBC48, 255, type metadata accessor for NowPlayingSleepTimer, (uint64_t)&unk_16CEB8);
}

uint64_t sub_3FC28()
{
  return sub_27A8C(&qword_1FBC50, &qword_1FBC58, (uint64_t)&protocol conformance descriptor for NowPlayingFooterContent<A>);
}

unint64_t sub_3FC58()
{
  unint64_t result;

  result = qword_1FBC60;
  if (!qword_1FBC60)
  {
    result = swift_getWitnessTable(&unk_16C29C, &type metadata for NowPlayingTip);
    atomic_store(result, (unint64_t *)&qword_1FBC60);
  }
  return result;
}

unint64_t sub_3FC9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FBD68;
  if (!qword_1FBD68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB3D0);
    sub_3FD20(&qword_1FBD78, &qword_1FBD80, MPAVRoute_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FBD68);
  }
  return result;
}

uint64_t sub_3FD20(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_F174(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3FD60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = dispatch thunk of NowPlayingViewModel.isPlaying.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_3FD8C(unsigned __int8 *a1)
{
  return dispatch thunk of NowPlayingViewModel.isPlaying.setter(*a1);
}

unint64_t sub_3FDB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FBEA0;
  if (!qword_1FBEA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FBEA8);
    sub_3F28C(&qword_1FBEB0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackController.PreferredJumpInterval, (uint64_t)&protocol conformance descriptor for PlaybackController.PreferredJumpInterval);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FBEA0);
  }
  return result;
}

uint64_t sub_3FE30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC12NowPlayingUI29NowPlayingTransportController_preferredJumpInterval;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_2808C(v3, a2, &qword_1FBEA8);
}

unint64_t sub_3FE94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FBEC0;
  if (!qword_1FBEC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1FBD00);
    sub_3F28C(&qword_1FBEC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerItemDurationSnapshot, (uint64_t)&protocol conformance descriptor for MPCPlayerItemDurationSnapshot);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FBEC0);
  }
  return result;
}

__n128 sub_3FF14@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v2;
  unint64_t v3;
  __n128 v4;
  __n128 result;

  v2 = *a1;
  v3 = (*a1)[8].n128_u64[0];
  v4 = (*a1)[6];
  *a2 = (*a1)[5];
  a2[1] = v4;
  result = v2[7];
  a2[2] = result;
  a2[3].n128_u64[0] = v3;
  return result;
}

uint64_t sub_3FF38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3FF5C(unint64_t *a1, unint64_t *a2)
{
  uint64_t v2;

  return sub_3F09C(*a1, *a2, *(uint64_t (**)(unint64_t *, unint64_t *))(v2 + 16));
}

uint64_t sub_3FF6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3FF7C(void **a1)
{
  return sub_3D20C(a1);
}

uint64_t sub_3FF84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = dispatch thunk of NowPlayingViewModel.backdropImage.getter();
  *a1 = result;
  return result;
}

uint64_t sub_3FFAC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return dispatch thunk of NowPlayingViewModel.backdropImage.setter(v1);
}

unint64_t sub_3FFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FBF28;
  if (!qword_1FBF28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1FB1E0);
    sub_3F28C(&qword_1FBF38, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingArtwork.Data, (uint64_t)&protocol conformance descriptor for NowPlayingArtwork.Data);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FBF28);
  }
  return result;
}

uint64_t sub_40058()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_40068(uint64_t a1)
{
  uint64_t v1;

}

double sub_40090(uint64_t a1)
{
  uint64_t v1;

  return sub_3D940(a1, v1, (uint64_t (*)(void))sub_37758);
}

uint64_t sub_400B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_400C0(uint64_t a1)
{
  uint64_t v1;

}

double sub_400E8(uint64_t a1)
{
  uint64_t v1;

  return sub_3D940(a1, v1, (uint64_t (*)(void))sub_378F4);
}

uint64_t sub_40108@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_3D9BC(a1, v2, a2);
}

uint64_t sub_40110(uint64_t a1)
{
  uint64_t v1;

  return sub_3E120(a1, v1);
}

unint64_t sub_40118()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FBFB8;
  if (!qword_1FBFB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FBFA0);
    sub_4017C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1FBFB8);
  }
  return result;
}

unint64_t sub_4017C()
{
  unint64_t result;

  result = qword_1FBFC0;
  if (!qword_1FBFC0)
  {
    result = swift_getWitnessTable(&unk_170018, &type metadata for QueueModel.Chapter);
    atomic_store(result, (unint64_t *)&qword_1FBFC0);
  }
  return result;
}

void sub_401C0(uint64_t *a1)
{
  uint64_t v1;

  sub_3E6E4(a1, v1);
}

uint64_t sub_401C8(uint64_t a1)
{
  uint64_t v1;

  return sub_3E870(a1, v1, (uint64_t (*)(uint64_t))&static ClickMetricsEvent.makeTranscriptFooterButtonClickEvent(isOn:));
}

uint64_t sub_401E8(uint64_t a1)
{
  uint64_t v1;

  return sub_3E870(a1, v1, (uint64_t (*)(uint64_t))&static ClickMetricsEvent.makeQueueFooterButtonClickEvent(isOn:));
}

void sub_40208(uint64_t a1, unint64_t a2, uint8_t *a3, char a4)
{
  uint64_t v4;

  sub_3EA18(a1, a2, a3, a4 & 1, v4);
}

uint64_t sub_40214(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_40244(double a1)
{
  uint64_t v1;

  return sub_3EDB4(v1, a1);
}

uint64_t sub_4024C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingPodcastItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_40298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_402E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NowPlayingPodcastItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_40324()
{
  unint64_t result;

  result = qword_200C50;
  if (!qword_200C50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt64, &type metadata for UInt64);
    atomic_store(result, (unint64_t *)&qword_200C50);
  }
  return result;
}

uint64_t sub_40368(uint64_t a1)
{
  sub_2FE28(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_40398()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255)
    sub_2F6A4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1 & 1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 80, 7);
}

id *sub_403E4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_3DD68(a1, (_OWORD *)(v2 + 16), a2);
}

unint64_t sub_403EC()
{
  unint64_t result;

  result = qword_1FC0B8;
  if (!qword_1FC0B8)
  {
    result = swift_getWitnessTable(&unk_174D10, &type metadata for NowPlayingItemState);
    atomic_store(result, (unint64_t *)&qword_1FC0B8);
  }
  return result;
}

uint64_t sub_40430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBEA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_40480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)();
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (**v60)();
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char *v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (**v76)(uint64_t);
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t OpaqueTypeConformance2;
  uint64_t v91;
  __n128 v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128[8];
  uint64_t v129;
  char v130;
  char v131;
  char v132;
  char v133[8];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[2];

  v5 = a2;
  v96 = a2;
  v95 = a1;
  v127 = a4;
  v7 = type metadata accessor for AccessibilityChildBehavior(0);
  v125 = *(_QWORD *)(v7 - 8);
  v126 = v7;
  __chkstk_darwin(v7);
  v124 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC318);
  v122 = *(_QWORD *)(v9 - 8);
  v123 = v9;
  __chkstk_darwin(v9);
  v120 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for AutomaticHoverEffect(0);
  v114 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for ContentShapeKinds(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v103 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC320);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC328);
  __chkstk_darwin(v98);
  v16 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC330);
  __chkstk_darwin(v99);
  v97 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC338);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v102 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC340);
  __chkstk_darwin(v107);
  v104 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC348);
  __chkstk_darwin(v113);
  v111 = (uint64_t)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC350);
  __chkstk_darwin(v117);
  v116 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC358);
  v121 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v118 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_16CF80);
  v24 = swift_getKeyPath(&unk_16CFA8);
  v25 = swift_retain(a3);
  static Published.subscript.getter(v137, v25, KeyPath, v24);
  swift_release(a3);
  swift_release(KeyPath);
  swift_release(v24);
  v26 = v137[0];
  swift_retain(a3);
  LOBYTE(KeyPath) = sub_41AFC();
  swift_release(a3);
  v27 = swift_getKeyPath(&unk_16CFC8);
  v134 = a1;
  v135 = v5;
  v136 = a3;
  v129 = v27;
  v130 = 0;
  v131 = v26;
  LOBYTE(v5) = KeyPath & 1;
  v132 = KeyPath & 1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC360);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC368);
  v30 = sub_4273C();
  v31 = sub_27A8C(&qword_1FC388, &qword_1FC368, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v32 = Menu.init(content:label:)(sub_42704, v133, sub_42710, v128, v28, v29, v30, v31);
  v33 = static Alignment.center.getter(v32);
  v35 = v34;
  v36 = v100;
  v37 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v16, v14, v101);
  v38 = &v16[*(int *)(v98 + 36)];
  v115 = v27;
  *(_QWORD *)v38 = v27;
  v38[8] = 0;
  v38[9] = v26;
  v38[10] = v5;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  v39 = *(uint64_t (**)(char *, uint64_t))(v36 + 8);
  swift_retain(v27);
  v40 = v39(v14, v37);
  v41 = v103;
  static ContentShapeKinds.hoverEffect.getter(v40);
  v42 = v99;
  v43 = (uint64_t)v97;
  v44 = &v97[*(int *)(v99 + 36)];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC390);
  v46 = v105;
  v47 = v106;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(&v44[*(int *)(v45 + 40)], v41, v106);
  *(_OWORD *)v44 = xmmword_16CE30;
  v44[16] = 0;
  sub_2808C((uint64_t)v16, v43, &qword_1FC328);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v47);
  v48 = sub_9944((uint64_t)v16, &qword_1FC328);
  v49 = v110;
  static CustomHoverEffect<>.automatic.getter(v48);
  v50 = sub_42830();
  v51 = sub_8330(&qword_201650, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v52 = v102;
  v53 = v112;
  View.hoverEffect<A>(_:isEnabled:)(v49, 1, v42, v112, v50, v51);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v49, v53);
  sub_9944(v43, &qword_1FC330);
  v54 = (void (*)())swift_allocObject(&unk_1C9528, 40, 7);
  v55 = v95;
  v56 = v96;
  *((_QWORD *)v54 + 2) = v95;
  *((_QWORD *)v54 + 3) = v56;
  *((_QWORD *)v54 + 4) = a3;
  v57 = v108;
  v58 = (uint64_t)v104;
  v59 = v109;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v104, v52, v109);
  v60 = (void (**)())(v58 + *(int *)(v107 + 36));
  *v60 = sub_42954;
  v60[1] = v54;
  v60[2] = 0;
  v60[3] = 0;
  v61 = *(void (**)(char *, uint64_t))(v57 + 8);
  swift_retain(a3);
  swift_retain(v55);
  v61(v52, v59);
  v62 = swift_getKeyPath(&unk_16CF80);
  v63 = swift_getKeyPath(&unk_16CFA8);
  v64 = swift_retain(a3);
  static Published.subscript.getter(v137, v64, v62, v63);
  swift_release(a3);
  swift_release(v62);
  swift_release(v63);
  LOBYTE(v57) = v137[0];
  v65 = swift_getKeyPath(&unk_16CFF8);
  v66 = swift_allocObject(&unk_1C9550, 17, 7);
  *(_BYTE *)(v66 + 16) = (v57 & 1) == 0;
  v67 = v111;
  sub_2808C(v58, v111, &qword_1FC340);
  v68 = (uint64_t *)(v67 + *(int *)(v113 + 36));
  *v68 = v65;
  v68[1] = (uint64_t)sub_4298C;
  v68[2] = v66;
  sub_9944(v58, &qword_1FC340);
  swift_beginAccess(a3 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__sleepTimerMode, v137, 33, 0);
  swift_retain(a3);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC3C8);
  v70 = v120;
  Published.projectedValue.getter(v69);
  swift_endAccess(v137);
  swift_release(a3);
  v71 = (void (*)(uint64_t))swift_allocObject(&unk_1C9578, 40, 7);
  *((_QWORD *)v71 + 2) = v55;
  *((_QWORD *)v71 + 3) = v56;
  *((_QWORD *)v71 + 4) = a3;
  v72 = v116;
  sub_2808C(v67, v116, &qword_1FC348);
  v73 = v117;
  v75 = v122;
  v74 = v123;
  (*(void (**)(uint64_t, char *, uint64_t))(v122 + 16))(v72 + *(int *)(v117 + 52), v70, v123);
  v76 = (void (**)(uint64_t))(v72 + *(int *)(v73 + 56));
  *v76 = sub_429C4;
  v76[1] = v71;
  v77 = *(void (**)(char *, uint64_t))(v75 + 8);
  swift_retain(a3);
  swift_retain(v55);
  v77(v70, v74);
  v78 = sub_9944(v67, &qword_1FC348);
  v79 = v124;
  static AccessibilityChildBehavior.combine.getter(v78);
  v80 = sub_27A8C(&qword_1FC3D0, &qword_1FC350, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
  v81 = v118;
  View.accessibilityElement(children:)(v79, v73, v80);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v79, v126);
  sub_9944(v72, &qword_1FC350);
  v82 = LocalizedStringKey.init(stringLiteral:)(0x6954207065656C53, 0xEB0000000072656DLL);
  v83 = Text.init(_:tableName:bundle:comment:)(v82);
  v85 = v84;
  v87 = v86;
  v89 = v88 & 1;
  v137[0] = v73;
  v137[1] = v80;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v137, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v91 = v119;
  View.accessibilityLabel(_:)(v83, v85, v89, v87, v119, OpaqueTypeConformance2);
  swift_release(v115);
  sub_25404(v83, v85, v89);
  v92 = swift_bridgeObjectRelease(v87);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v121 + 8))(v81, v91, v92);
}

double sub_40E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[3];
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
  v6 = sub_8330(&qword_1FB9B8, type metadata accessor for NowPlayingSleepTimer.ViewModel, (uint64_t)&unk_16CF48);
  v7 = ObservedObject.projectedValue.getter(a2, a3, v5, v6);
  KeyPath = swift_getKeyPath(&unk_16D028);
  ObservedObject.Wrapper.subscript.getter(&v14, KeyPath, v7, v6);
  swift_release(KeyPath);
  swift_release(v7);
  v9 = v14;
  v10 = v15;
  v12[0] = v14;
  v12[1] = v15;
  v12[2] = v16;
  v13 = v17;
  swift_retain(v14);
  swift_retain(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1FC3D8);
  sub_42A04();
  sub_42A48();
  Picker.init(selection:label:content:)(v12);
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_40FEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16D028);
  v5 = swift_getKeyPath(&unk_16D0B8);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_41070(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_16D028);
  v6 = swift_getKeyPath(&unk_16D0B8);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

uint64_t sub_410F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_16D050);
  v5 = swift_getKeyPath(&unk_16D078);
  v6 = swift_retain(a3);
  static Published.subscript.getter(&v14, v6, KeyPath, v5);
  swift_release(a3);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = swift_getKeyPath(&unk_16D0A0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC150);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC3F8);
  v10 = sub_27A8C(&qword_1FC430, (uint64_t *)&unk_1FC150, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_42A04();
  v12 = sub_42AAC();
  return ForEach<>.init(_:id:content:)(&v14, v7, sub_4120C, 0, v8, v9, v10, v11, v12);
}

uint64_t sub_4120C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int16 v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)a1;
  v4 = *(unsigned __int8 *)(a1 + 8);
  result = PlayerAutoStopMode.localizedName.getter(*(_QWORD *)a1, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 32) = v3;
  *(_BYTE *)(a2 + 40) = v4;
  *(_BYTE *)(a2 + 41) = 0;
  *(_QWORD *)(a2 + 48) = v3;
  *(_WORD *)(a2 + 56) = v4;
  *(_BYTE *)(a2 + 58) = 0;
  return result;
}

uint64_t sub_4126C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_40480(*v1, v1[1], v1[2], a1);
}

uint64_t sub_41278@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;

  v72 = a1;
  v73 = a3;
  v71 = a2 & 1;
  v69 = a2;
  v70 = HIWORD(a2) & 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for Font.TextStyle(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IconOnlyLabelStyle(0);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8F8);
  v56 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC450);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC458);
  __chkstk_darwin(v58);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC460);
  __chkstk_darwin(v59);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC468);
  v67 = *(_QWORD *)(v20 - 8);
  v68 = v20;
  __chkstk_darwin(v20);
  v55 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC470);
  __chkstk_darwin(v22);
  v66 = (uint64_t)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC478);
  __chkstk_darwin(v64);
  v65 = (uint64_t)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = Label.init(title:icon:)(sub_41838, 0, sub_418B8, 0, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
  IconOnlyLabelStyle.init()(v25);
  v26 = sub_27A8C(&qword_1FB900, &qword_1FB8F8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v27 = sub_8330(&qword_1FB8E8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)(v10, v11, v8, v26, v27);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v11);
  v28 = v60;
  v29 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v7, enum case for Font.TextStyle.subheadline(_:), v62);
  v30 = type metadata accessor for Font.Design(0);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
  v32 = static Font.Weight.bold.getter(v31);
  v33 = static Font.system(_:design:weight:)(v7, v5, *(_QWORD *)&v32, 0);
  sub_9944((uint64_t)v5, &qword_1FB060);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v29);
  KeyPath = swift_getKeyPath(&unk_16D148);
  v35 = v61;
  v36 = v63;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v17, v15, v63);
  v37 = (uint64_t *)&v17[*(int *)(v58 + 36)];
  *v37 = KeyPath;
  v37[1] = v33;
  v38 = v15;
  v39 = v55;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v36);
  if ((v69 & 0x100) != 0)
    v40 = 1.0;
  else
    v40 = 0.17;
  sub_2808C((uint64_t)v17, (uint64_t)v19, &qword_1FC458);
  v41 = v59;
  *(double *)&v19[*(int *)(v59 + 36)] = v40;
  sub_9944((uint64_t)v17, &qword_1FC458);
  v42 = sub_42F90();
  View.glowEffect(isActive:)(v70, v41, v42);
  sub_9944((uint64_t)v19, &qword_1FC460);
  v43 = v72;
  v44 = v71;
  sub_2609C(v72, v71);
  v45 = sub_569B8(v43, v44);
  v46 = sub_261F4(v43, v44);
  if ((v45 & 1) != 0)
    v47 = static Alignment.center.getter(v46);
  else
    v47 = static Alignment.trailing.getter(v46);
  v49 = v66;
  v50 = sub_10A680(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v66, 0.0, 1, INFINITY, 0, v47, v48);
  (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v39, v68, v50);
  v51 = v65;
  sub_2808C(v49, v65, &qword_1FC470);
  v52 = v51 + *(int *)(v64 + 36);
  *(_QWORD *)v52 = 0xC024000000000000;
  *(_BYTE *)(v52 + 8) = 0;
  sub_9944(v49, &qword_1FC470);
  return sub_43104(v51, v73);
}

uint64_t sub_41838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = LocalizedStringKey.init(stringLiteral:)(0x6954207065656C53, 0xEB0000000072656DLL);
  result = Text.init(_:tableName:bundle:comment:)(v2);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_418B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)(0x7A7A7A2E6E6F6F6DLL, 0xED00006C6C69662ELL);
  *a1 = result;
  return result;
}

uint64_t sub_418FC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16D028);
  v2 = swift_getKeyPath(&unk_16D0B8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_41970()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16D050);
  v2 = swift_getKeyPath(&unk_16D078);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_419E0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16CF80);
  v2 = swift_getKeyPath(&unk_16CFA8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_41A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v1 + 10))
    v2 = 0x10000;
  else
    v2 = 0;
  if (*(_BYTE *)(v1 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_41278(*(_QWORD *)v1, v2 | v3 | *(unsigned __int8 *)(v1 + 8), a1);
}

uint64_t sub_41A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for NowPlayingButtonID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_41ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain(v2);
  return swift_retain(v4);
}

uint64_t sub_41AFC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_16CF80);
  v2 = swift_getKeyPath(&unk_16CFA8);
  static Published.subscript.getter(&v9, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  if (v9 == 1)
  {
    v3 = swift_getKeyPath(&unk_16D028);
    v4 = swift_getKeyPath(&unk_16D0B8);
    static Published.subscript.getter(&v7, v0, v3, v4);
    swift_release(v3);
    swift_release(v4);
    v5 = v8 ^ 1 | (v7 != 0);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_41BDC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BYTE v13[24];

  swift_beginAccess(v4 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__sleepTimerMode, v13, 33, 0);
  v11 = a1;
  v12 = a2 & 1;
  Published.init(initialValue:)(&v11, &type metadata for PlayerAutoStopMode);
  swift_endAccess(v13);
  swift_beginAccess(v4 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__availableSleepTimerOptions, v13, 33, 0);
  v11 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC150);
  Published.init(initialValue:)(&v11, v9);
  swift_endAccess(v13);
  swift_beginAccess(v4 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__isEnabled, v13, 33, 0);
  LOBYTE(v11) = a4;
  Published.init(initialValue:)(&v11, &type metadata for Bool);
  swift_endAccess(v13);
  return v4;
}

uint64_t sub_41CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__sleepTimerMode;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC3C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__availableSleepTimerOptions;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC438);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV12NowPlayingUI20NowPlayingSleepTimer9ViewModel__isEnabled;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_41D9C()
{
  return type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
}

uint64_t type metadata accessor for NowPlayingSleepTimer.ViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FC130, (uint64_t)&nominal type descriptor for NowPlayingSleepTimer.ViewModel);
}

void sub_41DB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_41ED0(319, &qword_1FC140, (uint64_t)&type metadata for PlayerAutoStopMode);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_41E78(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_41ED0(319, (unint64_t *)&qword_2013A0, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 3, v8, a1 + 80);
      }
    }
  }
}

void sub_41E78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FC148)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1FC150);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FC148);
  }
}

void sub_41ED0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *sub_41F14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for NowPlayingButtonID(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain(v4);
    swift_retain(v8);
    v13(v10, v11, v12);
    *((_BYTE *)v7 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t sub_41FE0(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  swift_release(a1[2]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for NowPlayingButtonID(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_42030(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v7 = *a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = a2[2];
  a1[2] = v8;
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for NowPlayingButtonID(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain(v7);
  swift_retain(v8);
  v13(v10, v11, v12);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_420D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  a1[1] = a2[1];
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for NowPlayingButtonID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_4217C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for NowPlayingButtonID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_421FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_release(v8);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for NowPlayingButtonID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_4228C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_42298);
}

uint64_t sub_42298(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NowPlayingButtonID(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_42314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_42320);
}

char *sub_42320(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NowPlayingButtonID(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingSleepTimer(uint64_t a1)
{
  return sub_256F8(a1, qword_1FC2D0, (uint64_t)&nominal type descriptor for NowPlayingSleepTimer);
}

uint64_t sub_423A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_16CE88;
  result = type metadata accessor for NowPlayingButtonID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_16CEA0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_42428()
{
  unint64_t result;

  result = qword_1FC310;
  if (!qword_1FC310)
  {
    result = swift_getWitnessTable(&unk_16CEF8, &type metadata for NowPlayingSleepTimer.ContentView);
    atomic_store(result, (unint64_t *)&qword_1FC310);
  }
  return result;
}

uint64_t sub_4246C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19E210, 1);
}

uint64_t sub_4247C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingSleepTimer.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_424B8()
{
  uint64_t v0;

  v0 = type metadata accessor for NowPlayingButtonID(0);
  __swift_allocate_value_buffer(v0, qword_210080);
  __swift_project_value_buffer(v0, (uint64_t)qword_210080);
  return NowPlayingButtonID.init(_:)(0x6D69547065656C73, 0xEA00000000007265);
}

uint64_t sub_42518@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16D050);
  v5 = swift_getKeyPath(&unk_16D078);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_42594(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16D050);
  v5 = swift_getKeyPath(&unk_16D078);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_4260C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16CF80);
  v5 = swift_getKeyPath(&unk_16CFA8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_4268C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16CF80);
  v5 = swift_getKeyPath(&unk_16CFA8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_42704()
{
  uint64_t *v0;

  return sub_40E9C(v0[2], v0[3], v0[4]);
}

uint64_t sub_42710@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 25);
  v5 = *(_BYTE *)(v1 + 26);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  return sub_2609C(v2, v3);
}

unint64_t sub_4273C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC370;
  if (!qword_1FC370)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC360);
    sub_427A8();
    sub_427EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC370);
  }
  return result;
}

unint64_t sub_427A8()
{
  unint64_t result;

  result = qword_1FC378;
  if (!qword_1FC378)
  {
    result = swift_getWitnessTable(&unk_16D0F4, &type metadata for NowPlayingSleepTimer.SleepTimerLabel);
    atomic_store(result, (unint64_t *)&qword_1FC378);
  }
  return result;
}

unint64_t sub_427EC()
{
  unint64_t result;

  result = qword_1FC380;
  if (!qword_1FC380)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, (unint64_t *)&qword_1FC380);
  }
  return result;
}

unint64_t sub_42830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC398;
  if (!qword_1FC398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC330);
    sub_428B4();
    sub_27A8C(&qword_1FC3C0, &qword_1FC390, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC398);
  }
  return result;
}

unint64_t sub_428B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC3A0;
  if (!qword_1FC3A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC328);
    sub_27A8C(&qword_1FC3A8, &qword_1FC320, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    sub_27A8C(&qword_1FC3B0, &qword_1FC3B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC3A0);
  }
  return result;
}

void sub_42954()
{
  sub_143538();
}

uint64_t sub_4297C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_4298C(_BYTE *a1)
{
  uint64_t v1;

  return sub_F46FC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_429C4(uint64_t a1)
{
  sub_14467C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_429F8()
{
  uint64_t *v0;

  return sub_410F0(v0[2], v0[3], v0[4]);
}

unint64_t sub_42A04()
{
  unint64_t result;

  result = qword_1FC3E0;
  if (!qword_1FC3E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayerAutoStopMode, &type metadata for PlayerAutoStopMode);
    atomic_store(result, (unint64_t *)&qword_1FC3E0);
  }
  return result;
}

unint64_t sub_42A48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC3E8;
  if (!qword_1FC3E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC3D8);
    sub_42AAC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC3E8);
  }
  return result;
}

unint64_t sub_42AAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC3F0;
  if (!qword_1FC3F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC3F8);
    sub_42B30();
    sub_27A8C(&qword_1FC420, &qword_1FC428, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC3F0);
  }
  return result;
}

unint64_t sub_42B30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC400;
  if (!qword_1FC400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC408);
    sub_27A8C(&qword_1FC410, &qword_1FC418, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC400);
  }
  return result;
}

uint64_t destroy for NowPlayingSleepTimer.SleepTimerLabel(uint64_t a1)
{
  return sub_261F4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s12NowPlayingUI20NowPlayingSleepTimerV15SleepTimerLabelVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2609C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  return a1;
}

uint64_t assignWithCopy for NowPlayingSleepTimer.SleepTimerLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2609C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_261F4(v6, v7);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for NowPlayingSleepTimer.SleepTimerLabel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_261F4(v6, v7);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingSleepTimer.SleepTimerLabel(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 11))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingSleepTimer.SleepTimerLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingSleepTimer.SleepTimerLabel()
{
  return &type metadata for NowPlayingSleepTimer.SleepTimerLabel;
}

uint64_t destroy for NowPlayingSleepTimer.ContentView(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[2]);
}

uint64_t *_s12NowPlayingUI20NowPlayingSleepTimerV11ContentViewVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for NowPlayingSleepTimer.ContentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

uint64_t *assignWithTake for NowPlayingSleepTimer.ContentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingSleepTimer.ContentView()
{
  return &type metadata for NowPlayingSleepTimer.ContentView;
}

unint64_t sub_42EAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FC440;
  if (!qword_1FC440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC448);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC350);
    v2[1] = sub_27A8C(&qword_1FC3D0, &qword_1FC350, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC440);
  }
  return result;
}

uint64_t sub_42F78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19E238, 1);
}

unint64_t sub_42F90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC480;
  if (!qword_1FC480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC460);
    sub_42FFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC480);
  }
  return result;
}

unint64_t sub_42FFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1FC488;
  if (!qword_1FC488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC458);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB8F8);
    v2[1] = type metadata accessor for IconOnlyLabelStyle(255);
    v2[2] = sub_27A8C(&qword_1FB900, &qword_1FB8F8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v2[3] = sub_8330(&qword_1FB8E8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    sub_27A8C(&qword_1FAEB0, &qword_1FAEB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC488);
  }
  return result;
}

uint64_t sub_43104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_43150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FC490;
  if (!qword_1FC490)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC478);
    sub_431D4();
    sub_27A8C((unint64_t *)&unk_2018D0, &qword_1FC4A0, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC490);
  }
  return result;
}

unint64_t sub_431D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FC498;
  if (!qword_1FC498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC470);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FC460);
    v2[1] = sub_42F90();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.glowEffect(isActive:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FC498);
  }
  return result;
}

void destroy for TranscriptContentViewState(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

_QWORD *_s12NowPlayingUI26TranscriptContentViewStateOwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  LODWORD(v4) = -1;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
    v4 = *(void **)a2;
  if ((int)v4 - 1 < 0)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *a1 = v3;
    a1[1] = v5;
    v6 = v3;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

uint64_t assignWithCopy for TranscriptContentViewState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  id v10;
  id v12;

  v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
    LODWORD(v6) = -1;
  else
    v6 = *(void **)a1;
  v7 = (_DWORD)v6 - 1;
  v8 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
    v5 = *(void **)a2;
  v9 = (_DWORD)v5 - 1;
  if (v7 < 0)
  {
    if (v9 < 0)
    {
      *(_QWORD *)a1 = v8;
      v12 = v8;

      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      return a1;
    }

    goto LABEL_11;
  }
  if ((v9 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v10 = v8;
  return a1;
}

uint64_t assignWithTake for TranscriptContentViewState(uint64_t a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    v5 = *(void **)a1;
  if ((int)v5 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *(_QWORD *)a1 = *a2;

      *(_QWORD *)(a1 + 8) = a2[1];
      return a1;
    }

  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptContentViewState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptContentViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_4349C(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_434C0(_QWORD *result, unsigned int a2)
{
  uint64_t v2;

  if (a2 > 0x7FFFFFFE)
  {
    v2 = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptContentViewState()
{
  return &type metadata for TranscriptContentViewState;
}

void sub_434FC(uint64_t a1, char *a2, Swift::UInt64 a3)
{
  char *v6;
  Swift::UInt64 v7;

  if (a2 == (_BYTE *)&dword_0 + 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if (a2)
    {
      Hasher._combine(_:)(1u);
      v6 = a2;
      NSObject.hash(into:)(a1);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    if ((a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v7 = a3;
    else
      v7 = 0;
    Hasher._combine(_:)(v7);
    sub_4375C(a2);
  }
}

Swift::Int sub_435A0(char *a1, Swift::UInt64 a2)
{
  char *v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  if (a1 == (_BYTE *)&dword_0 + 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if (a1)
    {
      Hasher._combine(_:)(1u);
      v4 = a1;
      NSObject.hash(into:)(v7);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v5 = a2;
    else
      v5 = 0;
    Hasher._combine(_:)(v5);
    sub_4375C(a1);
  }
  return Hasher._finalize()();
}

Swift::Int sub_4364C()
{
  uint64_t v0;

  return sub_435A0(*(char **)v0, *(_QWORD *)(v0 + 8));
}

void sub_43654(uint64_t a1)
{
  uint64_t v1;

  sub_434FC(a1, *(char **)v1, *(_QWORD *)(v1 + 8));
}

Swift::Int sub_4365C(uint64_t a1)
{
  char **v1;
  char *v2;
  Swift::UInt64 v3;
  char *v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = (Swift::UInt64)v1[1];
  Hasher.init(_seed:)(v7, a1);
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if (v2)
    {
      Hasher._combine(_:)(1u);
      v4 = v2;
      NSObject.hash(into:)(v7);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v5 = v3;
    else
      v5 = 0;
    Hasher._combine(_:)(v5);
    sub_4375C(v2);
  }
  return Hasher._finalize()();
}

BOOL sub_43700(uint64_t a1, uint64_t a2)
{
  return sub_4376C(*(char **)a1, *(_QWORD *)(a1 + 8), *(char **)a2, *(_QWORD *)(a2 + 8));
}

unint64_t sub_43718()
{
  unint64_t result;

  result = qword_1FC4A8;
  if (!qword_1FC4A8)
  {
    result = swift_getWitnessTable(&unk_16D1AC, &type metadata for TranscriptContentViewState);
    atomic_store(result, (unint64_t *)&qword_1FC4A8);
  }
  return result;
}

void sub_4375C(id a1)
{
  if (a1 != (char *)&dword_0 + 1)

}

BOOL sub_4376C(char *a1, uint64_t a2, char *a3, uint64_t a4)
{
  char v10;

  if (a1 == (_BYTE *)&dword_0 + 1)
    return a3 == (_BYTE *)&dword_0 + 1;
  if (a3 == (_BYTE *)&dword_0 + 1)
    return 0;
  if (a1)
  {
    if (!a3)
      return 0;
    type metadata accessor for StringTextRange();
    sub_15450(a3);
    sub_15450(a1);
    v10 = static NSObject.== infix(_:_:)(a1, a3);
    sub_4375C(a3);
    sub_4375C(a1);
    if ((v10 & 1) == 0)
      return 0;
  }
  else if (a3)
  {
    sub_4375C(0);
    return 0;
  }
  return *(double *)&a2 == *(double *)&a4;
}

uint64_t sub_43848(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "\b";
  v2[1] = &unk_16D260;
  v2[2] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 88);
}

id sub_438A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSString v8;
  objc_class *v9;
  objc_super v11;

  v1 = *v0;
  v2 = swift_isaMask;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v0 + qword_1FC4B0);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(uint64_t *)((char *)v0 + qword_1FC4B8 + 8);
    swift_bridgeObjectRetain(v7);
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "removeObserver:forKeyPath:context:", v0, v8, 0, swift_bridgeObjectRelease(v7).n128_f64[0]);

    swift_unknownObjectRelease(v6);
  }
  v9 = (objc_class *)type metadata accessor for KeyValueObserver(0, *(uint64_t *)((char *)&stru_20.filesize + (v2 & v1)), v4, v5);
  v11.receiver = v0;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, "dealloc");
}

id sub_43974(void *a1)
{
  id v1;

  v1 = a1;
  return sub_438A0();
}

double sub_43998(uint64_t a1)
{
  double result;

  sub_1EC0C(a1 + qword_1FC4B0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1FC4B8 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_1FC4C0 + 8)).n128_u64[0];
  return result;
}

void sub_439E8(uint64_t a1, NSString a2, uint64_t a3, Class isa, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  objc_class *v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  _QWORD v24[3];
  uint64_t v25;

  v10 = swift_isaMask & *v5;
  sub_43DCC(a3, (uint64_t)v24);
  if (v25)
  {
    if ((swift_dynamicCast(&v22, v24, (char *)&type metadata for Any + 8, *(_QWORD *)(v10 + 80), 6) & 1) != 0)
    {
      v11 = v22;
      (*(void (**)(uint64_t, Class))((char *)v5 + qword_1FC4C0))(v22, isa);
      swift_unknownObjectRelease(v11);
      return;
    }
  }
  else
  {
    sub_43D44((uint64_t)v24);
  }
  if (a2)
    a2 = String._bridgeToObjectiveC()();
  sub_43DCC(a3, (uint64_t)v24);
  v14 = v25;
  if (!v25)
  {
    v19 = 0;
    if (!isa)
      goto LABEL_10;
    goto LABEL_9;
  }
  v15 = __swift_project_boxed_opaque_existential_1(v24, v25);
  v16 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v18);
  v19 = _bridgeAnythingToObjectiveC<A>(_:)(v18, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
  __swift_destroy_boxed_opaque_existential_0(v24);
  if (isa)
  {
LABEL_9:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_43D84();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
LABEL_10:
  v20 = (objc_class *)type metadata accessor for KeyValueObserver(0, *(_QWORD *)(v10 + 80), v12, v13);
  v23.receiver = v5;
  v23.super_class = v20;
  objc_msgSendSuper2(&v23, "observeValueForKeyPath:ofObject:change:context:", a2, v19, isa, a5);

  swift_unknownObjectRelease(v19);
}

uint64_t sub_43BE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  objc_class *v18;
  id v19;
  id v20;
  _OWORD v22[2];

  if (a3)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v12 = v11;
    if (a4)
      goto LABEL_3;
LABEL_6:
    memset(v22, 0, sizeof(v22));
    v19 = a5;
    v20 = a1;
    if (a5)
      goto LABEL_4;
LABEL_7:
    v18 = 0;
    goto LABEL_8;
  }
  v10 = 0;
  v12 = 0;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  swift_unknownObjectRetain(a4);
  v13 = a5;
  v14 = a1;
  _bridgeAnyObjectToAny(_:)(v22, a4);
  swift_unknownObjectRelease(a4);
  if (!a5)
    goto LABEL_7;
LABEL_4:
  type metadata accessor for NSKeyValueChangeKey(0);
  v16 = v15;
  v17 = sub_43D84();
  v18 = (objc_class *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a5, v16, (char *)&type metadata for Any + 8, v17);

LABEL_8:
  sub_439E8(v10, v12, (uint64_t)v22, v18, a6);

  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v12);
  return sub_43D44((uint64_t)v22);
}

void sub_43CF0()
{
  sub_43D18();
}

uint64_t type metadata accessor for KeyValueObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyValueObserver);
}

void sub_43D18()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.KeyValueObserver", 29, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_43D44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_43D84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F9828;
  if (!qword_1F9828)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = swift_getWitnessTable(&unk_169380, v1);
    atomic_store(result, (unint64_t *)&qword_1F9828);
  }
  return result;
}

uint64_t sub_43DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

id sub_43F24(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  objc_super v14;
  _QWORD v15[3];
  uint64_t v16;

  sub_2808C(a1, (uint64_t)v15, &qword_1FD880);
  v5 = v16;
  if (v16)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v15, v16);
    v7 = *(_QWORD *)(v5 - 8);
    __chkstk_darwin(v6);
    v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_0(v15);
  }
  else
  {
    v10 = 0;
  }
  v11 = (objc_class *)type metadata accessor for PanGestureRecognizer();
  v14.receiver = v2;
  v14.super_class = v11;
  v12 = objc_msgSendSuper2(&v14, "initWithTarget:action:", v10, a2);
  swift_unknownObjectRelease(v10);
  sub_43D44(a1);
  return v12;
}

id sub_440A4()
{
  return sub_4AC44(0, type metadata accessor for PanGestureRecognizer);
}

uint64_t type metadata accessor for PanGestureRecognizer()
{
  return objc_opt_self(_TtC12NowPlayingUIP33_FA232F067623283ED0BBB5857CB78B8620PanGestureRecognizer);
}

id sub_44104()
{
  id v0;
  NSString v1;
  Swift::String v2;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "_setLayoutDebuggingIdentifier:", v1);

  sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
  v2._object = (void *)0x8000000000182D50;
  v2._countAndFlagsBits = 0xD000000000000018;
  isa = UIImage.init(imageLiteralResourceName:)(v2).super.isa;
  objc_msgSend(v0, "setImage:", isa);

  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  objc_msgSend(v0, "setTintColor:", qword_210330);
  return v0;
}

void sub_44218()
{
  qword_1FC550 = 0x4014000000000000;
}

void sub_44228(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  NSString v7;
  uint64_t v8;
  id v9;
  NSString v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  NSString v24;
  uint64_t v25;
  id v26;
  NSString v27;
  uint64_t v28;
  id v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t inited;
  void *v52;
  void *v53;
  void *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t i;
  id v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  double (*v76)(uint64_t, uint64_t);
  id v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  void *v82;
  id v83;
  id v84;
  NSString *v85;
  void *v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  double (*v91)(uint64_t, uint64_t);
  id v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  id v97;
  id v98;
  NSString *v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  double (*v104)(uint64_t, uint64_t);
  id v105;
  double v106;
  id v107;
  id v108;
  NSString *v109;
  id v110;
  void *v111;
  uint64_t v112;
  void *v113;
  id v114;
  id v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  id v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  double v148;
  id v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  double v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  __n128 v161;
  _QWORD *v162;
  uint64_t v163;
  id v164;
  id v165;
  id v166;
  id v167;
  uint64_t v168;
  void *v169;
  void *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  NSString v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v196;
  char v197[120];
  objc_super v198;

  v2 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide;
  v3 = objc_allocWithZone((Class)UILayoutGuide);
  v4 = v1;
  *(_QWORD *)&v1[v2] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "_setLayoutDebuggingIdentifier:", v7);

  if (qword_1F9630 != -1)
    swift_once(&qword_1F9630, sub_FE5E8);
  objc_msgSend(v6, "setBackgroundColor:", qword_2103A8);
  *(_QWORD *)&v4[v5] = v6;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferUnselectedColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferSelectedColor] = 0;
  v8 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "_setLayoutDebuggingIdentifier:", v10);

  *(_QWORD *)&v4[v8] = v9;
  v11 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "_setLayoutDebuggingIdentifier:", v13);

  v14 = objc_msgSend(v12, "layer");
  objc_msgSend(v14, "setMaskedCorners:", 10);

  if (qword_1F9640 != -1)
    swift_once(&qword_1F9640, sub_FE610);
  objc_msgSend(v12, "setBackgroundColor:", qword_2103B8);
  *(_QWORD *)&v4[v11] = v12;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobAlpha] = 0x3FF0000000000000;
  v15 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView;
  *(_QWORD *)&v4[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView;
  *(_QWORD *)&v4[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeActivityIndicator;
  v18 = objc_msgSend(objc_allocWithZone((Class)MTActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  objc_msgSend(v18, "_setStyle:", 8);
  objc_msgSend(v18, "setHidesWhenStopped:", 1);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = v18;
  v21 = objc_msgSend(v19, "secondaryLabelColor");
  objc_msgSend(v20, "setColor:", v21);

  *(_QWORD *)&v4[v17] = v20;
  v22 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel;
  v23 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "_setLayoutDebuggingIdentifier:", v24);

  *(_QWORD *)&v4[v22] = v23;
  v25 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel;
  v26 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "_setLayoutDebuggingIdentifier:", v27);

  *(_QWORD *)&v4[v25] = v26;
  v28 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel;
  v29 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "_setLayoutDebuggingIdentifier:", v30);

  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  objc_msgSend(v29, "setTextColor:", qword_210330);
  *(_QWORD *)&v4[v28] = v29;
  v31 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveBackground;
  *(_QWORD *)&v4[v31] = sub_44104();
  v32 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferingIndicator;
  type metadata accessor for PlayerIndeterminateActivityIndicator();
  *(_QWORD *)&v4[v32] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_labelAlpha] = 0x3FF0000000000000;
  v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_selectedElapsedTime] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_detailedScrubbingEnabled] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController] = 0;
  v33 = &v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v34 = &v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_detailScrubSpeed];
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_nextItemObserver] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_backgroundObserver] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_foregroundObserver] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_loadedDurationObserver] = 0;
  v35 = &v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot];
  *(_OWORD *)v35 = 0u;
  *((_OWORD *)v35 + 1) = 0u;
  *((_OWORD *)v35 + 2) = 0u;
  *((_QWORD *)v35 + 6) = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_lastTargetTimestamp] = 0;
  v36 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeFormatter;
  v37 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v37, "setStyle:", 1);
  *(_QWORD *)&v4[v36] = v37;
  v38 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeFormatter;
  v39 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v39, "setStyle:", 2);
  *(_QWORD *)&v4[v38] = v39;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_percentLoaded] = 0;
  sub_DF78((uint64_t)a1, (uint64_t)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics]);

  v198.receiver = v4;
  v198.super_class = (Class)type metadata accessor for PlayerTimeControl();
  v40 = objc_msgSendSuper2(&v198, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v40, "setSemanticContentAttribute:", 1);
  sub_F174(0, &qword_1FC7C8, CADisplayLink_ptr);
  v41 = swift_allocObject(&unk_1C98C0, 24, 7);
  swift_unknownObjectUnownedInit(v41 + 16, v40);
  v42 = sub_12F338((uint64_t)sub_4ACC0, v41);
  v43 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink;
  v44 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink);
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink) = v42;

  v45 = *(void **)((char *)v40 + v43);
  if (!v45)
  {
    __break(1u);
    goto LABEL_32;
  }
  v46 = (void *)objc_opt_self(NSRunLoop);
  v47 = v45;
  v48 = objc_msgSend(v46, "mainRunLoop");
  objc_msgSend(v47, "addToRunLoop:forMode:", v48, NSRunLoopCommonModes);

  v49 = *(void **)((char *)v40 + v43);
  if (!v49)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v49, "setPaused:", 1);
  v50 = *(void **)((char *)v40 + v43);
  if (!v50)
  {
LABEL_33:
    __break(1u);
    return;
  }
  objc_msgSend(v50, "setPreferredFramesPerSecond:", 30);
  v193 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  inited = swift_initStackObject(v193, v197);
  *(_OWORD *)(inited + 16) = xmmword_16D2A0;
  v52 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack);
  *(_QWORD *)(inited + 32) = v52;
  v53 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack);
  *(_QWORD *)(inited + 40) = v53;
  v54 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack);
  *(_QWORD *)(inited + 48) = v54;
  v190 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel;
  v55 = *(_QWORD **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel);
  *(_QWORD *)(inited + 56) = v55;
  v56 = *(_QWORD **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeActivityIndicator);
  *(_QWORD *)(inited + 64) = v56;
  v57 = *(_QWORD **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveBackground);
  *(_QWORD *)(inited + 72) = v57;
  v185 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel;
  v58 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel);
  *(_QWORD *)(inited + 80) = v58;
  v194 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel;
  v186 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel);
  *(_QWORD *)(inited + 88) = v186;
  v192 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView;
  v187 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView);
  *(_QWORD *)(inited + 96) = v187;
  v191 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView;
  v188 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView);
  *(_QWORD *)(inited + 104) = v188;
  v189 = *(void **)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferingIndicator);
  *(_QWORD *)(inited + 112) = v189;
  v196 = inited;
  specialized Array._endMutation()(inited);
  if ((v196 & 0xC000000000000001) != 0 || *(_QWORD *)((char *)&dword_10 + (v196 & 0xFFFFFFFFFFFFF8)) >= 0xBuLL)
  {
    v59 = v52;
    v60 = v53;
    v61 = v54;
    v62 = v55;
    v63 = v56;
    v64 = v57;
    v65 = v58;
    v66 = v186;
    v67 = v187;
    v68 = v188;
    v69 = v189;
    for (i = 4; i != 15; ++i)
    {
      if ((v196 & 0xC000000000000001) != 0)
        v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v196);
      else
        v71 = *(id *)(v196 + 8 * i);
      v72 = v71;
      objc_msgSend(v71, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v72, "setUserInteractionEnabled:", 0);
      objc_msgSend(v40, "addSubview:", v72);

    }
    swift_bridgeObjectRelease(v196);
    v73 = *(void **)((char *)v40 + v190);
    v74 = a1[3];
    v75 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v74);
    v76 = *(double (**)(uint64_t, uint64_t))(v75 + 16);
    v77 = v73;
    v78 = v76(v74, v75);
    v79 = a1[3];
    v80 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v79);
    v81 = (*(double (**)(uint64_t, uint64_t))(v80 + 40))(v79, v80);
    v82 = (void *)objc_opt_self(UIApplication);
    v83 = objc_msgSend(v82, "sharedApplication");
    v84 = objc_msgSend(v83, "preferredContentSizeCategory");

    LODWORD(v83) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v84);
    if ((_DWORD)v83)
    {
      v85 = UIFontTextStyleBody;
      v78 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v85, v78);

    }
    v86 = (void *)objc_opt_self(UIFont);
    v87 = objc_msgSend(v86, "monospacedDigitSystemFontOfSize:weight:", v78, v81);
    objc_msgSend(v77, "setFont:", v87);

    v88 = *(void **)((char *)v40 + v194);
    v89 = a1[3];
    v90 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v89);
    v91 = *(double (**)(uint64_t, uint64_t))(v90 + 16);
    v92 = v88;
    v93 = v91(v89, v90);
    v94 = a1[3];
    v95 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v94);
    v96 = (*(double (**)(uint64_t, uint64_t))(v95 + 40))(v94, v95);
    v97 = objc_msgSend(v82, "sharedApplication");
    v98 = objc_msgSend(v97, "preferredContentSizeCategory");

    LODWORD(v97) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v98);
    if ((_DWORD)v97)
    {
      v99 = UIFontTextStyleBody;
      v93 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v99, v93);

    }
    v55 = &unk_1FC000;
    v100 = objc_msgSend(v86, "monospacedDigitSystemFontOfSize:weight:", v93, v96);
    objc_msgSend(v92, "setFont:", v100);

    v101 = *(void **)((char *)v40 + v185);
    v102 = a1[3];
    v103 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v102);
    v104 = *(double (**)(uint64_t, uint64_t))(v103 + 16);
    v105 = v101;
    v106 = v104(v102, v103);
    v107 = objc_msgSend(v82, "sharedApplication");
    v108 = objc_msgSend(v107, "preferredContentSizeCategory");

    LODWORD(v107) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v108);
    if ((_DWORD)v107)
    {
      v109 = UIFontTextStyleBody;
      v106 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v109, v106);

    }
    v57 = &unk_1FC000;
    v56 = &unk_1FC000;
    v110 = objc_msgSend(v86, "systemFontOfSize:weight:", v106, UIFontWeightHeavy);
    objc_msgSend(v105, "setFont:", v110);

    if (qword_1F9638 == -1)
      goto LABEL_24;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1F9638, sub_FE5FC);
LABEL_24:
  v111 = (void *)qword_2103B0;
  v112 = v56[178];
  v113 = *(void **)((char *)v40 + v112);
  *(_QWORD *)((char *)v40 + v112) = qword_2103B0;
  v114 = v111;

  v115 = objc_msgSend((id)qword_210330, "colorWithAlphaComponent:", 0.3);
  v116 = v55[179];
  v117 = *(void **)((char *)v40 + v116);
  *(_QWORD *)((char *)v40 + v116) = v115;

  objc_msgSend(v40, "addLayoutGuide:", *(_QWORD *)((char *)v40 + v57[176]));
  v118 = swift_allocObject(v193, 64, 7);
  *(_OWORD *)(v118 + 16) = xmmword_16D2B0;
  v119 = objc_msgSend(*(id *)((char *)v40 + v191), "widthAnchor");
  v120 = a1;
  v121 = a1[3];
  v122 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v121);
  (*(void (**)(uint64_t, uint64_t))(v122 + 56))(v121, v122);
  v123 = objc_msgSend(v119, "constraintEqualToConstant:");

  *(_QWORD *)(v118 + 32) = v123;
  v124 = objc_msgSend(*(id *)((char *)v40 + v191), "heightAnchor");
  v125 = a1[3];
  v126 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v126 + 56))(v125, v126);
  v128 = objc_msgSend(v124, "constraintEqualToConstant:", v127);

  *(_QWORD *)(v118 + 40) = v128;
  v129 = objc_msgSend(*(id *)((char *)v40 + v192), "widthAnchor");
  v130 = a1[3];
  v131 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v131 + 64))(v130, v131);
  v132 = objc_msgSend(v129, "constraintEqualToConstant:");

  *(_QWORD *)(v118 + 48) = v132;
  v133 = objc_msgSend(*(id *)((char *)v40 + v192), "heightAnchor");
  v134 = a1[3];
  v135 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v135 + 64))(v134, v135);
  v137 = objc_msgSend(v133, "constraintEqualToConstant:", v136);

  *(_QWORD *)(v118 + 56) = v137;
  specialized Array._endMutation()(v138);
  v139 = *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints);
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints) = v118;
  swift_bridgeObjectRelease(v139);
  v140 = swift_allocObject(v193, 64, 7);
  *(_OWORD *)(v140 + 16) = xmmword_16D2B0;
  v141 = objc_msgSend(*(id *)((char *)v40 + v191), "widthAnchor");
  v142 = a1[3];
  v143 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v143 + 72))(v142, v143);
  v144 = objc_msgSend(v141, "constraintEqualToConstant:");

  *(_QWORD *)(v140 + 32) = v144;
  v145 = objc_msgSend(*(id *)((char *)v40 + v191), "heightAnchor");
  v146 = a1[3];
  v147 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v147 + 72))(v146, v147);
  v149 = objc_msgSend(v145, "constraintEqualToConstant:", v148);

  *(_QWORD *)(v140 + 40) = v149;
  v150 = objc_msgSend(*(id *)((char *)v40 + v192), "widthAnchor");
  v151 = a1[3];
  v152 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v152 + 80))(v151, v152);
  v153 = objc_msgSend(v150, "constraintEqualToConstant:");

  *(_QWORD *)(v140 + 48) = v153;
  v154 = objc_msgSend(*(id *)((char *)v40 + v192), "heightAnchor");
  v155 = a1[3];
  v156 = a1[4];
  __swift_project_boxed_opaque_existential_1(v120, v120[3]);
  (*(void (**)(uint64_t, uint64_t))(v156 + 80))(v155, v156);
  v158 = objc_msgSend(v154, "constraintEqualToConstant:", v157);

  *(_QWORD *)(v140 + 56) = v158;
  specialized Array._endMutation()(v159);
  v160 = *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackingConstraints);
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackingConstraints) = v140;
  v161 = swift_bridgeObjectRelease(v160);
  (*(void (**)(__n128))&stru_248.segname[(swift_isaMask & *v40) + 16])(v161);
  v162 = v40;

  objc_msgSend(v162, "setTintColor:", qword_2103A8);
  v163 = qword_1F9608;
  v164 = *(id *)((char *)v40 + v192);
  if (v163 != -1)
    swift_once(&qword_1F9608, sub_FE490);
  objc_msgSend(v164, "setBackgroundColor:", qword_210380);

  v165 = *(id *)((char *)v40 + v194);
  v166 = objc_msgSend(v162, "tintColor");
  objc_msgSend(v165, "setTextColor:", v166);

  v167 = objc_msgSend(objc_allocWithZone((Class)MTDetailScrubController), "initWithScrubbingControl:", v162);
  v168 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController;
  v169 = *(void **)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController);
  *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController) = v167;

  v170 = *(void **)((char *)v162 + v168);
  if (v170)
    objc_msgSend(v170, "setDelegate:", v162);
  v171 = (void *)MTApplicationDidEnterBackgroundNotification;
  v172 = swift_allocObject(&unk_1C98C0, 24, 7);
  swift_unknownObjectUnownedInit(v172 + 16, v162);
  v173 = type metadata accessor for NotificationObserver();
  swift_allocObject(v173, 56, 7);
  v174 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v171, 0, 1, (uint64_t)sub_4AD04, v172);
  v175 = *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_backgroundObserver);
  *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_backgroundObserver) = v174;
  swift_release(v175);
  v176 = (void *)MTApplicationWillEnterForegroundNotification;
  v177 = swift_allocObject(&unk_1C98C0, 24, 7);
  swift_unknownObjectUnownedInit(v177 + 16, v162);
  swift_allocObject(v173, 56, 7);
  v178 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v176, 0, 1, (uint64_t)sub_4AD0C, v177);
  v179 = *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_foregroundObserver);
  *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_foregroundObserver) = v178;
  swift_release(v179);
  v180 = String._bridgeToObjectiveC()();
  v181 = swift_allocObject(&unk_1C98C0, 24, 7);
  swift_unknownObjectUnownedInit(v181 + 16, v162);
  swift_allocObject(v173, 56, 7);
  v182 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v180, 0, 1, (uint64_t)sub_4AD14, v181);
  v183 = *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_loadedDurationObserver);
  *(_QWORD *)((char *)v162 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_loadedDurationObserver) = v182;
  swift_release(v183);
  sub_48F68();
  v184 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PanGestureRecognizer()), "initWithTarget:action:", v162, "panGestureRecognized:");
  objc_msgSend(v162, "addGestureRecognizer:", v184);

  __swift_destroy_boxed_opaque_existential_0(a1);
}

void sub_45690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  char *v4;
  id v5;

  v2 = a2 + 16;
  Strong = (_BYTE *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  Strong[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] = 1;

  v4 = (char *)swift_unknownObjectUnownedLoadStrong(v2);
  v5 = *(id *)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];

  objc_msgSend(v5, "setPaused:", 1);
}

void sub_4570C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  char *v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  id v13;

  v2 = a2 + 16;
  Strong = (_BYTE *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  Strong[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] = 0;

  v4 = (char *)swift_unknownObjectUnownedLoadStrong(v2);
  v5 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];
  v13 = v5;

  if (v5)
  {
    v6 = (char *)swift_unknownObjectUnownedLoadStrong(v2);
    v7 = objc_msgSend(v6, "window");

    if (v7
      && (v8 = v6[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48], v8 != 2))
    {
      v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 40];
      v11 = v6[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded];

      v12 = (v10 & 0x7FFFFFFF) == 0;
      if ((v11 & 1) != 0)
        v12 = v11 ^ 1;
      if ((v8 & 1) != 0)
        v9 = v11 ^ 1u;
      else
        v9 = v12;
    }
    else
    {

      v9 = 0;
    }
    objc_msgSend(v13, "setPaused:", v9);

  }
}

id sub_45840()
{
  char *v0;
  id result;
  objc_super v2;

  result = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];
  if (result)
  {
    objc_msgSend(result, "invalidate");
    v2.receiver = v0;
    v2.super_class = (Class)type metadata accessor for PlayerTimeControl();
    return objc_msgSendSuper2(&v2, "dealloc");
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_45AE0()
{
  char *v0;
  char *v1;
  void *v2;
  NSString v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  int IsAccessibilityContentSizeCategory;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  id v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  id v111;
  double v112;
  id v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  id v119;
  double v120;
  id v121;
  id v122;
  id v123;
  id v124;
  void *v125;
  void *v126;
  void *v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  Class isa;
  uint64_t v146;
  uint64_t v147;
  id v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  _QWORD v153[3];
  uint64_t v154;
  uint64_t v155;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "_setLayoutDebuggingIdentifier:", v3);

  v4 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView];
  v5 = String._bridgeToObjectiveC()();
  v149 = v4;
  objc_msgSend(v4, "_setLayoutDebuggingIdentifier:", v5);

  v6 = objc_msgSend(v2, "centerXAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  v9 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint;
  v10 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint] = v8;

  v151 = v9;
  v12 = *(void **)&v1[v9];
  if (!v12)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  LODWORD(v11) = 1132068864;
  objc_msgSend(v12, "setPriority:", v11);
  v152 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack];
  v13 = objc_msgSend(v152, "leadingAnchor");
  v14 = objc_msgSend(v2, "centerXAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, -1.0);

  v16 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint];
  v150 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint] = v15;

  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v18 = objc_msgSend(v17, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v18);
  v20 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
  v21 = objc_msgSend(v20, "bottomAnchor");
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics];
  sub_DF78((uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)v153);
  v24 = v154;
  v23 = v155;
  __swift_project_boxed_opaque_existential_1(v153, v154);
  LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v24, v23);
  __swift_destroy_boxed_opaque_existential_0(v153);
  v25 = &selRef_topAnchor;
  if ((v17 & 1) != 0)
    v25 = &selRef_bottomAnchor;
  v26 = objc_msgSend(v1, *v25);
  v147 = v22;
  v148 = v20;
  if (IsAccessibilityContentSizeCategory)
  {
    if (qword_1F9498 != -1)
      swift_once(&qword_1F9498, sub_44218);
    v27 = *(double *)&qword_1FC550;
  }
  else
  {
    sub_DF78(v22, (uint64_t)v153);
    v28 = v154;
    v29 = v155;
    __swift_project_boxed_opaque_existential_1(v153, v154);
    v27 = (*(double (**)(uint64_t, uint64_t))(v29 + 48))(v28, v29);
    __swift_destroy_boxed_opaque_existential_0(v153);
  }
  v30 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v26, v27);

  v31 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint];
  v146 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint] = v30;

  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v33 = swift_allocObject(v32, 288, 7);
  *(_OWORD *)(v33 + 16) = xmmword_16D2C0;
  v34 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel];
  v35 = objc_msgSend(v34, "centerYAnchor");
  v36 = objc_msgSend(v1, "centerYAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v33 + 32) = v37;
  v38 = objc_msgSend(v34, "centerXAnchor");
  v39 = objc_msgSend(v1, "centerXAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v33 + 40) = v40;
  v41 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveBackground];
  v42 = objc_msgSend(v41, "centerXAnchor");
  v43 = objc_msgSend(v34, "centerXAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v33 + 48) = v44;
  v45 = objc_msgSend(v41, "centerYAnchor");
  v46 = objc_msgSend(v34, "centerYAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v33 + 56) = v47;
  v48 = objc_msgSend(v41, "widthAnchor");
  v49 = objc_msgSend(v34, "widthAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 32.0);

  *(_QWORD *)(v33 + 64) = v50;
  v51 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack];
  v52 = objc_msgSend(v51, "leadingAnchor");
  v53 = objc_msgSend(v1, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v33 + 72) = v54;
  v55 = objc_msgSend(v51, "trailingAnchor");
  v56 = objc_msgSend(v2, "centerXAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v33 + 80) = v57;
  v58 = objc_msgSend(v51, "centerYAnchor");
  v59 = objc_msgSend(v1, "centerYAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v33 + 88) = v60;
  v61 = objc_msgSend(v51, "heightAnchor");
  v62 = objc_msgSend(v61, "constraintEqualToConstant:", 3.0);

  *(_QWORD *)(v33 + 96) = v62;
  v63 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack];
  v64 = objc_msgSend(v63, "leadingAnchor");
  v65 = objc_msgSend(v51, "leadingAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v33 + 104) = v66;
  v67 = objc_msgSend(v63, "centerYAnchor");
  v68 = objc_msgSend(v1, "centerYAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v33 + 112) = v69;
  v70 = objc_msgSend(v63, "heightAnchor");
  v71 = objc_msgSend(v70, "constraintEqualToConstant:", 3.0);

  *(_QWORD *)(v33 + 120) = v71;
  v72 = objc_msgSend(v152, "trailingAnchor");
  v73 = objc_msgSend(v1, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  *(_QWORD *)(v33 + 128) = v74;
  v75 = objc_msgSend(v152, "centerYAnchor");
  v76 = objc_msgSend(v1, "centerYAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

  *(_QWORD *)(v33 + 136) = v77;
  v78 = objc_msgSend(v152, "heightAnchor");
  v79 = objc_msgSend(v78, "constraintEqualToConstant:", 3.0);

  *(_QWORD *)(v33 + 144) = v79;
  v80 = *(void **)&v1[v150];
  if (!v80)
    goto LABEL_14;
  *(_QWORD *)(v33 + 152) = v80;
  v81 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide];
  v82 = v80;
  v83 = objc_msgSend(v81, "leadingAnchor");
  v84 = objc_msgSend(v51, "leadingAnchor");
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

  *(_QWORD *)(v33 + 160) = v85;
  v86 = objc_msgSend(v81, "trailingAnchor");
  v87 = objc_msgSend(v152, "trailingAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

  *(_QWORD *)(v33 + 168) = v88;
  v89 = objc_msgSend(v81, "topAnchor");
  v90 = objc_msgSend(v51, "topAnchor");
  v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

  *(_QWORD *)(v33 + 176) = v91;
  v92 = objc_msgSend(v81, "bottomAnchor");
  v93 = objc_msgSend(v51, "bottomAnchor");
  v94 = objc_msgSend(v92, "constraintEqualToAnchor:", v93);

  *(_QWORD *)(v33 + 184) = v94;
  v95 = *(void **)&v1[v151];
  if (!v95)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_QWORD *)(v33 + 192) = v95;
  v96 = v95;
  v97 = objc_msgSend(v2, "centerYAnchor");
  v98 = objc_msgSend(v1, "centerYAnchor");
  v99 = objc_msgSend(v97, "constraintEqualToAnchor:", v98);

  *(_QWORD *)(v33 + 200) = v99;
  v100 = objc_msgSend(v149, "centerYAnchor");
  v101 = objc_msgSend(v1, "centerYAnchor");
  v102 = objc_msgSend(v100, "constraintEqualToAnchor:", v101);

  *(_QWORD *)(v33 + 208) = v102;
  v103 = objc_msgSend(v149, "centerXAnchor");
  v104 = objc_msgSend(v2, "centerXAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

  *(_QWORD *)(v33 + 216) = v105;
  v106 = objc_msgSend(v2, "leadingAnchor");
  v107 = objc_msgSend(v51, "leadingAnchor");
  sub_DF78(v22, (uint64_t)v153);
  v108 = v154;
  v109 = v155;
  __swift_project_boxed_opaque_existential_1(v153, v154);
  v110 = (*(double (**)(uint64_t, uint64_t))(v109 + 56))(v108, v109);
  __swift_destroy_boxed_opaque_existential_0(v153);
  v111 = objc_msgSend(v106, "constraintGreaterThanOrEqualToAnchor:constant:", v107, v110 * -0.5);

  LODWORD(v112) = 1144750080;
  v113 = objc_msgSend(v111, "withPriority:", v112);

  *(_QWORD *)(v33 + 224) = v113;
  v114 = objc_msgSend(v2, "trailingAnchor");
  v115 = objc_msgSend(v152, "trailingAnchor");
  sub_DF78(v147, (uint64_t)v153);
  v116 = v154;
  v117 = v155;
  __swift_project_boxed_opaque_existential_1(v153, v154);
  v118 = (*(double (**)(uint64_t, uint64_t))(v117 + 56))(v116, v117) * 0.5;
  __swift_destroy_boxed_opaque_existential_0(v153);
  v119 = objc_msgSend(v114, "constraintLessThanOrEqualToAnchor:constant:", v115, v118);

  LODWORD(v120) = 1144750080;
  v121 = objc_msgSend(v119, "withPriority:", v120);

  *(_QWORD *)(v33 + 232) = v121;
  v122 = objc_msgSend(v148, "leadingAnchor");
  v123 = objc_msgSend(v1, "leadingAnchor");
  v124 = objc_msgSend(v122, "constraintEqualToAnchor:", v123);

  *(_QWORD *)(v33 + 240) = v124;
  v125 = *(void **)&v1[v146];
  if (v125)
  {
    v126 = (void *)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v33 + 248) = v125;
    v127 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeActivityIndicator];
    v128 = v125;
    v129 = objc_msgSend(v127, "leadingAnchor");
    v130 = objc_msgSend(v1, "leadingAnchor");
    v131 = objc_msgSend(v129, "constraintEqualToAnchor:", v130);

    *(_QWORD *)(v33 + 256) = v131;
    v132 = objc_msgSend(v127, "centerYAnchor");
    v133 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
    v134 = objc_msgSend(v133, "centerYAnchor");
    v135 = objc_msgSend(v132, "constraintEqualToAnchor:", v134);

    *(_QWORD *)(v33 + 264) = v135;
    v136 = objc_msgSend(v133, "trailingAnchor");
    v137 = objc_msgSend(v1, "trailingAnchor");
    v138 = objc_msgSend(v136, "constraintEqualToAnchor:", v137);

    *(_QWORD *)(v33 + 272) = v138;
    v139 = objc_msgSend(v133, "bottomAnchor");
    v140 = objc_msgSend(v148, "bottomAnchor");
    v141 = objc_msgSend(v139, "constraintEqualToAnchor:", v140);

    *(_QWORD *)(v33 + 280) = v141;
    v153[0] = v33;
    specialized Array._endMutation()(v142);
    v143 = swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints]);
    sub_A5528(v143);
    v144 = v153[0];
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v126, "activateConstraints:", isa, swift_bridgeObjectRelease(v144).n128_f64[0]);

    return;
  }
LABEL_16:
  __break(1u);
}

void sub_46ACC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView);
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setCornerRadius:", CGRectGetWidth(v11) * 0.5);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView);
  v4 = objc_msgSend(v3, "layer");
  objc_msgSend(v3, "bounds");
  objc_msgSend(v4, "setCornerRadius:", CGRectGetWidth(v12) * 0.5);

  v5 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack);
  v6 = objc_msgSend(v5, "layer");
  objc_msgSend(v5, "bounds");
  objc_msgSend(v6, "setCornerRadius:", CGRectGetHeight(v13) * 0.5);

  v7 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack);
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v7, "bounds");
  objc_msgSend(v8, "setCornerRadius:", CGRectGetHeight(v14) * 0.5);

  v9 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack);
  v10 = objc_msgSend(v9, "layer");
  objc_msgSend(v9, "bounds");
  objc_msgSend(v10, "setCornerRadius:", CGRectGetHeight(v15) * 0.5);

}

id sub_46C7C()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t *v3;
  objc_super v5;
  CGRect v6;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PlayerTimeControl();
  v1 = objc_msgSendSuper2(&v5, "layoutSubviews");
  (*(void (**)(id))((char *)&stru_248.offset + (swift_isaMask & *v0)))(v1);
  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide), "layoutFrame");
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack);
  CGRectGetWidth(v6);
  objc_msgSend(v2, "frame");
  objc_msgSend(v2, "setFrame:");
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking))
    v3 = &OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferSelectedColor;
  else
    v3 = &OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferUnselectedColor;
  return objc_msgSend(v2, "setBackgroundColor:", *(_QWORD *)((char *)v0 + *v3));
}

void sub_46DA4()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for PlayerTimeControl();
  objc_msgSendSuper2(&v6, "didMoveToWindow");
  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "window");

    if (v3
      && (v4 = v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48], v4 != 2))
    {
      v5 = v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] ^ 1u;
      if ((v4 & 1) == 0 && !v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded])
        v5 = (*(_DWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v2, "setPaused:", v5);

  }
}

double sub_46FD0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  _BOOL8 v9;
  double result;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  float v16;
  double v17;
  double v18;
  double v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  objc_msgSend(v4, "bounds");
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  v9 = CGRectEqualToRect(v20, v22);
  if (!v9)
  {
    v11 = &v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot];
    if (v4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48] != 2)
    {
      v12 = *((double *)v11 + 3);
      v13 = 0.0;
      if (v12 > 0.0)
      {
        v14 = *((double *)v11 + 4);
        v15 = *(double *)v11;
        v16 = *((float *)v11 + 10);
        v17 = v14 + (static Date.timeIntervalSinceReferenceDate.getter(v9) - v15) * v16;
        if (v17 >= v12)
          v17 = v12;
        v18 = fmax(v17, 0.0) / v12;
        if (v18 <= 1.0)
          v13 = v18;
        else
          v13 = 1.0;
      }
      objc_msgSend(v4, "bounds");
      v19 = CGRectGetWidth(v21) * v13;
      sub_4869C(v19);
    }
  }
  return result;
}

CGFloat sub_4710C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_DF78(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics, (uint64_t)v6);
  v1 = v7;
  v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v6);
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v4);
  return UIViewNoIntrinsicMetric;
}

void sub_471EC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for PlayerTimeControl();
  objc_msgSendSuper2(&v10, "tintColorDidChange");

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
  v2 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v1, "setBackgroundColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
  v4 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v3, "setTextColor:", v4);

  v5 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
  v6 = objc_msgSend(v0, "tintColor");
  objc_msgSend(v5, "setTextColor:", v6);

  v7 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack];
  if (v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] == 1)
  {
    v8 = objc_msgSend(v0, "tintColor");
  }
  else
  {
    if (qword_1F9630 != -1)
      swift_once(&qword_1F9630, sub_FE5E8);
    v8 = (id)qword_2103A8;
  }
  v9 = v8;
  objc_msgSend(v7, "setBackgroundColor:", v8);

}

id sub_473DC(uint64_t a1, CGFloat a2, CGFloat a3)
{
  char *v3;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  CGFloat v22;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  objc_super v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  CGPoint v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView], "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (uint64_t)&v3[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics];
  sub_DF78((uint64_t)&v3[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)v32);
  v16 = v33;
  v17 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  v18 = (*(double (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  sub_DF78(v15, (uint64_t)v29);
  v19 = v30;
  v20 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
  v22 = v21;
  v36.origin.x = v8;
  v36.origin.y = v10;
  v36.size.width = v12;
  v36.size.height = v14;
  v37 = CGRectInset(v36, v18, v22);
  x = v37.origin.x;
  y = v37.origin.y;
  width = v37.size.width;
  height = v37.size.height;
  __swift_destroy_boxed_opaque_existential_0(v29);
  __swift_destroy_boxed_opaque_existential_0(v32);
  v38.origin.x = x;
  v38.origin.y = y;
  v38.size.width = width;
  v38.size.height = height;
  v35.x = a2;
  v35.y = a3;
  if (CGRectContainsPoint(v38, v35))
    return &dword_0 + 1;
  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for PlayerTimeControl();
  return objc_msgSendSuper2(&v28, "pointInside:withEvent:", a1, a2, a3);
}

id sub_47680(char a1)
{
  char *v1;
  int v2;
  id result;
  void *v4;
  unsigned int v5;
  double v6;
  double v7;
  void *v8;

  v2 = a1 & 1;
  result = objc_msgSend(v1, "isEnabled");
  if ((_DWORD)result != v2)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView];
    v5 = objc_msgSend(v1, "isEnabled");
    v6 = 0.0;
    v7 = 0.0;
    if (v5)
      v7 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobAlpha];
    objc_msgSend(v4, "setAlpha:", v7);
    v8 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
    if (objc_msgSend(v1, "isEnabled"))
      v6 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobAlpha];
    return objc_msgSend(v8, "setAlpha:", v6);
  }
  return result;
}

void sub_47754()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;
  void *v3;
  char v4;
  BOOL v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  Class isa;
  uint64_t v11;
  Class v12;
  id v13;
  id v14;

  v1 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking;
  v2 = v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking];
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
  v4 = v2 ^ 1;
  v5 = v2 == 0;
  if (v2)
    v6 = &OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints;
  else
    v6 = &OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackingConstraints;
  v7 = *v6;
  v8 = *(_QWORD *)&v0[v7];
  if (v5)
    v9 = &OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints;
  else
    v9 = &OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackingConstraints;
  swift_bridgeObjectRetain(*(_QWORD *)&v0[v7]);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v11 = *(_QWORD *)&v0[*v9];
  swift_bridgeObjectRetain(v11);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  sub_47F04(0, v4);
  v13 = 0;
  if ((v0[v1] & 1) == 0)
  {
    if (qword_1F9630 != -1)
      swift_once(&qword_1F9630, sub_FE5E8);
    v13 = (id)qword_2103A8;
  }
  v14 = v13;
  objc_msgSend(v0, "setTintColor:");

}

void sub_478E0(void *a1)
{
  char *v1;
  char *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  CGFloat v25;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  CGPoint v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v2 = v1;
  objc_msgSend(a1, "locationInView:", v2);
  v5 = v4;
  v7 = v6;
  switch((unint64_t)objc_msgSend(a1, "state"))
  {
    case 1uLL:
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView], "frame");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v18 = (uint64_t)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics];
      sub_DF78((uint64_t)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)v39);
      v19 = v40;
      v20 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
      sub_DF78(v18, (uint64_t)v36);
      v22 = v37;
      v23 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
      v25 = v24;
      v43.origin.x = v11;
      v43.origin.y = v13;
      v43.size.width = v15;
      v43.size.height = v17;
      v44 = CGRectInset(v43, v21, v25);
      x = v44.origin.x;
      y = v44.origin.y;
      width = v44.size.width;
      height = v44.size.height;
      __swift_destroy_boxed_opaque_existential_0(v36);
      __swift_destroy_boxed_opaque_existential_0(v39);
      v45.origin.x = x;
      v45.origin.y = y;
      v45.size.width = width;
      v45.size.height = height;
      v42.x = v5;
      v42.y = v7;
      if (CGRectContainsPoint(v45, v42))
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController], "beginTrackingWithLocation:", v5, v7);
      else

      break;
    case 2uLL:
      if (v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] == 1)
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController], "continueTrackingWithLocation:", v5, v7);
      break;
    case 3uLL:
      if (v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] == 1)
      {
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController], "endTrackingWithLocation:", v5, v7);
        if (v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48] != 2)
        {
          v31 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint];
          if (!v31)
          {
            __break(1u);
            JUMPOUT(0x47C34);
          }
          v32 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 24];
          objc_msgSend(v31, "constant");
          v34 = v33;
          objc_msgSend(v2, "bounds");
          v35 = v32 * (v34 / CGRectGetWidth(v46));
          *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_selectedElapsedTime] = v35;
          objc_msgSend(v2, "sendActionsForControlEvents:", v35, v30);
        }
      }
      break;
    case 4uLL:
      if (v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] == 1)
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController], "cancelTracking", v8, v9);
      break;
    default:
      return;
  }
}

uint64_t sub_47CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_145A0(v4, v5);
}

double sub_47D88()
{
  uint64_t v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  CGFloat v16;
  double v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  CGRect v25;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView), "frame");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics;
  sub_DF78(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics, (uint64_t)v22);
  v10 = v23;
  v11 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  sub_DF78(v9, (uint64_t)v19);
  v13 = v20;
  v14 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  v16 = v15;
  v25.origin.x = v2;
  v25.origin.y = v4;
  v25.size.width = v6;
  v25.size.height = v8;
  *(_QWORD *)&v17 = (unint64_t)CGRectInset(v25, v12, v16);
  __swift_destroy_boxed_opaque_existential_0(v19);
  __swift_destroy_boxed_opaque_existential_0(v22);
  return v17;
}

uint64_t sub_47F04(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_detailScrubSpeed);
  *v3 = a1;
  *((_BYTE *)v3 + 8) = a2 & 1;
  result = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController);
  if (result)
  {
    result = (uint64_t)objc_msgSend((id)result, "detailedScrubbingEnabled");
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2
                                                          + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler + 8);
      v7 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking);
      if ((result & 1) != 0)
      {
        v8 = *v3;
        v9 = *((unsigned __int8 *)v3 + 8);
LABEL_10:
        swift_retain(v6);
        v5(v7, v8, v9);
        return sub_145A0((uint64_t)v5, v6);
      }
      v8 = 0;
LABEL_9:
      v9 = 1;
      goto LABEL_10;
    }
  }
  else
  {
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2
                                                          + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler);
    if (v5)
    {
      v8 = 0;
      v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler + 8);
      v7 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking);
      goto LABEL_9;
    }
  }
  return result;
}

id sub_480B4(_BYTE *a1)
{
  void *v2;
  uint64_t (*v3)();
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  _BYTE *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[3];
  void *v39;
  uint64_t (*v40)();
  _QWORD *v41;

  a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] = 1;
  sub_47754();
  sub_DF78((uint64_t)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)aBlock);
  v2 = v39;
  v3 = v40;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v39);
  v4 = (*((uint64_t (**)(void *, uint64_t (*)()))v3 + 12))(v2, v3);
  __swift_destroy_boxed_opaque_existential_0(aBlock);
  if ((v4 & 1) != 0)
  {
    v5 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
    objc_msgSend(v5, "bounds");
    objc_msgSend(a1, "convertRect:fromCoordinateSpace:", v5);
    v36 = v7;
    v37 = v6;
    v34 = v9;
    v35 = v8;
    v10 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
    objc_msgSend(v10, "bounds");
    objc_msgSend(a1, "convertRect:fromCoordinateSpace:", v10);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v19 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
    objc_msgSend(v19, "bounds");
    objc_msgSend(a1, "convertRect:fromCoordinateSpace:", v19);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v28 = (void *)objc_opt_self(UIView);
    v29 = (_QWORD *)swift_allocObject(&unk_1C9A78, 120, 7);
    v29[2] = v37;
    v29[3] = v36;
    v29[4] = v35;
    v29[5] = v34;
    v29[6] = v12;
    v29[7] = v14;
    v29[8] = v16;
    v29[9] = v18;
    v29[10] = a1;
    v29[11] = v21;
    v29[12] = v23;
    v29[13] = v25;
    v29[14] = v27;
    v40 = sub_4BFB4;
    v41 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    v39 = &block_descriptor_38;
    v30 = _Block_copy(aBlock);
    v31 = v41;
    v32 = a1;
    swift_release(v31);
    objc_msgSend(v28, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v30, 0, 0.5, 0.0, 1.0, 500.0, 30.0, 0.0);
    _Block_release(v30);
  }
  return objc_msgSend(a1, "layoutIfNeeded");
}

id sub_4834C(_BYTE *a1)
{
  void *v2;
  uint64_t (*v3)();
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  _BYTE *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[3];
  void *v39;
  uint64_t (*v40)();
  _QWORD *v41;

  a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] = 0;
  sub_47754();
  sub_DF78((uint64_t)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)aBlock);
  v2 = v39;
  v3 = v40;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v39);
  v4 = (*((uint64_t (**)(void *, uint64_t (*)()))v3 + 12))(v2, v3);
  __swift_destroy_boxed_opaque_existential_0(aBlock);
  if ((v4 & 1) != 0)
  {
    v5 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
    objc_msgSend(v5, "bounds");
    objc_msgSend(a1, "convertRect:fromCoordinateSpace:", v5);
    v36 = v7;
    v37 = v6;
    v34 = v9;
    v35 = v8;
    v10 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
    objc_msgSend(v10, "bounds");
    objc_msgSend(a1, "convertRect:fromCoordinateSpace:", v10);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v19 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
    objc_msgSend(v19, "bounds");
    objc_msgSend(a1, "convertRect:fromCoordinateSpace:", v19);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v28 = (void *)objc_opt_self(UIView);
    v29 = (_QWORD *)swift_allocObject(&unk_1C99D8, 120, 7);
    v29[2] = v37;
    v29[3] = v36;
    v29[4] = v35;
    v29[5] = v34;
    v29[6] = v12;
    v29[7] = v14;
    v29[8] = v16;
    v29[9] = v18;
    v29[10] = a1;
    v29[11] = v21;
    v29[12] = v23;
    v29[13] = v25;
    v29[14] = v27;
    v40 = sub_4BFB4;
    v41 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    v39 = &block_descriptor_25;
    v30 = _Block_copy(aBlock);
    v31 = v41;
    v32 = a1;
    swift_release(v31);
    objc_msgSend(v28, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v30, 0, 0.5, 0.0, 1.0, 500.0, 30.0, 0.0);
    _Block_release(v30);
  }
  return objc_msgSend(a1, "layoutIfNeeded");
}

void sub_48594(uint64_t a1, char *a2)
{
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(void **)&a2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];
  if (v2)
  {
    v7 = v2;
    v4 = objc_msgSend(a2, "window");

    if (v4
      && (v5 = a2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48], v5 != 2))
    {
      v6 = a2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] ^ 1u;
      if ((v5 & 1) == 0 && !a2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded])
        v6 = (*(_DWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v7, "setPaused:", v6);

  }
  else
  {
    __break(1u);
  }
}

void sub_4869C(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  void *v10;
  double v11;
  double Width;
  double v13;
  double v14;
  void *v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  CGRect v29;
  CGRect v30;

  v2 = v1;
  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = (char *)objc_msgSend(v8, "userInterfaceIdiom");

  if (v9 != (_BYTE *)&dword_4 + 1 || (v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] & 1) != 0)
  {
    v10 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint];
    if (v10)
    {
      if (a1 < 0.0)
        v11 = 0.0;
      else
        v11 = a1;
      v28 = v10;
      objc_msgSend(v2, "bounds");
      Width = CGRectGetWidth(v29);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView], "frame");
      v14 = Width + v13 * 0.5;
      if (v14 >= v11)
        v14 = v11;
      objc_msgSend(v28, "setConstant:", v14);

      return;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v15 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint];
  if (!v15)
    goto LABEL_21;
  if (a1 < 0.0)
    v16 = 0.0;
  else
    v16 = a1;
  v17 = v15;
  objc_msgSend(v2, "bounds");
  v18 = CGRectGetWidth(v30);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView], "frame");
  if (v18 + v19 * 0.5 >= v16)
    v20 = v16;
  else
    v20 = v18 + v19 * 0.5;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for FloatingPointRoundingRule.up(_:), v4);
  v21 = objc_msgSend(v2, "traitCollection");
  objc_msgSend(v21, "displayScale");
  v23 = v22;

  if (v23 < COERCE_DOUBLE(1))
  {
    v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v24, "scale");
    v23 = v25;

  }
  v26 = sub_FA914((uint64_t)v7, v23, v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v17, "setConstant:", v26);

}

id sub_4893C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  double v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "window");

    if (v3
      && (v4 = v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48], v4 != 2))
    {
      v5 = v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] ^ 1u;
      if ((v4 & 1) == 0 && !v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded])
        v5 = (*(_DWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 40] & 0x7FFFFFFF) == 0;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v2, "setPaused:", v5);

  }
  result = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController];
  if (result)
  {
    v7 = 0.0;
    if (v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48] != 2)
      v7 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 24];
    return objc_msgSend(result, "setDuration:", v7);
  }
  return result;
}

void sub_48A34(void *a1)
{
  char *v1;
  char *v2;
  double v3;
  double v4;
  double v5;
  float v6;
  uint64_t v7;
  double v8;
  double v9;
  float v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  float v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGRect v21;
  CGRect v22;

  v2 = &v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot];
  if (v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48] == 2
    || (v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] & 1) != 0)
  {
    if (a1)
      objc_msgSend(a1, "setPaused:", 1);
  }
  else
  {
    v3 = *((double *)v2 + 3);
    v4 = *((double *)v2 + 4);
    v5 = *(double *)v2;
    v6 = *((float *)v2 + 10);
    v8 = static Date.timeIntervalSinceReferenceDate.getter(a1);
    v9 = vabdd_f64(v8, *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_lastTargetTimestamp]);
    v10 = fabsf(v6);
    if (v10 <= 1.0)
      v10 = 1.0;
    if (1.0 / v10 <= v9)
    {
      *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_lastTargetTimestamp] = v8;
      v11 = v4 + (v8 - v5) * v6;
      if (v11 >= v3)
        v11 = v3;
      v12 = fmax(v11, 0.0);
      sub_48BB4(v12, v3 - v12);
    }
    if (v2[48] != 2)
    {
      v13 = *((double *)v2 + 3);
      if (v13 <= 0.0)
      {
        objc_msgSend(v1, "bounds");
        v20 = CGRectGetWidth(v22) * 0.0;
      }
      else
      {
        v14 = *((double *)v2 + 4);
        v15 = *(double *)v2;
        v16 = *((float *)v2 + 10);
        v17 = v14 + (static Date.timeIntervalSinceReferenceDate.getter(v7) - v15) * v16;
        if (v17 >= v13)
          v17 = v13;
        v18 = fmax(v17, 0.0) / v13;
        if (v18 <= 1.0)
          v19 = v18;
        else
          v19 = 1.0;
        objc_msgSend(v1, "bounds");
        v20 = CGRectGetWidth(v21) * v19;
      }
      sub_4869C(v20);
    }
  }
}

void sub_48BB4(double a1, double a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  void *v10;
  id v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  Swift::String v21;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel);
  if (a1 > 0.0 || a2 > 0.0)
  {
    v13 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeFormatter), "stringFromSeconds:");
    if (!v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v15 = v14;
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
    }
    objc_msgSend(v4, "setText:", v13);

    v16 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel);
    v11 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeFormatter), "stringFromSeconds:", a2);
    if (!v11)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v18 = v17;
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
      v11 = v19;
    }
    v12 = v16;
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21._object = (void *)0xE000000000000000;
    v6._object = (void *)0x8000000000185B10;
    v6._countAndFlagsBits = 0xD000000000000010;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v21)._object;

    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v4, "setText:", v9);

    v10 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel);
    v11 = objc_msgSend(v4, "text");
    v12 = v10;
  }
  v20 = v11;
  objc_msgSend(v12, "setText:");

}

id sub_48D98(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13)
{
  double MinX;
  void *v29;
  void *v30;
  double MaxX;
  void *v32;
  void *v34;
  CGAffineTransform v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  MinX = CGRectGetMinX(*(CGRect *)&a2);
  v37.origin.x = a6;
  v37.origin.y = a7;
  v37.size.width = a8;
  v37.size.height = a9;
  if (MinX <= CGRectGetMaxX(v37) && *(_BYTE *)(a1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking) == 1)
  {
    v29 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel);
    CGAffineTransformMakeTranslation(&v36, 0.0, 10.0);
    objc_msgSend(v29, "setTransform:", &v36);
  }
  else
  {
    v30 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel);
    v36.a = 1.0;
    v36.b = 0.0;
    v36.c = 0.0;
    v36.d = 1.0;
    v36.tx = 0.0;
    v36.ty = 0.0;
    objc_msgSend(v30, "setTransform:", &v36);
  }
  v38.origin.x = a2;
  v38.origin.y = a3;
  v38.size.width = a4;
  v38.size.height = a5;
  MaxX = CGRectGetMaxX(v38);
  v39.origin.x = a10;
  v39.origin.y = a11;
  v39.size.width = a12;
  v39.size.height = a13;
  if (CGRectGetMinX(v39) <= MaxX && *(_BYTE *)(a1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking) == 1)
  {
    v32 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel);
    CGAffineTransformMakeTranslation(&v36, 0.0, 10.0);
    return objc_msgSend(v32, "setTransform:", &v36);
  }
  else
  {
    v34 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel);
    v36.a = 1.0;
    v36.b = 0.0;
    v36.c = 0.0;
    v36.d = 1.0;
    v36.tx = 0.0;
    v36.ty = 0.0;
    return objc_msgSend(v34, "setTransform:", &v36);
  }
}

uint64_t sub_48F68()
{
  char *v0;
  char *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;
  char v7;
  double v8;
  double v9;
  double v10;
  _QWORD v12[14];
  char v13[24];

  v1 = v0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v13, 0, 0);
  result = sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v12, (uint64_t *)&unk_1FC7F0);
  v3 = v12[0];
  if (v12[0])
  {
    v4 = v12[1];
    swift_unknownObjectRetain(v12[0]);
    sub_4AE24((uint64_t)v12);
    ObjectType = swift_getObjectType(v3);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96))(ObjectType, v4);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 176))(ObjectType, v4);
    if ((v6 & 1) == 0 || (v7 & 1) != 0)
    {
      *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_percentLoaded] = 0;
    }
    else
    {
      v8 = (*(double (**)(uint64_t, uint64_t))(v4 + 136))(ObjectType, v4);
      v9 = v8 / (*(double (**)(uint64_t, uint64_t))(v4 + 144))(ObjectType, v4);
      v10 = 0.0;
      if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&v9 & 0xFFFFFFFFFFFFFLL) == 0)
      {
        if (v9 > 0.0)
          v10 = v9;
        if (v10 >= 1.0)
          v10 = 1.0;
      }
      *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_percentLoaded] = v10;
    }
    objc_msgSend(v1, "setNeedsLayout");
    return swift_unknownObjectRelease(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_490E4(uint64_t a1)
{
  char *v1;
  char *v2;
  unint64_t v4;
  int v5;
  id v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  CGFloat Width;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  char v48;
  uint64_t v49;
  char v50[24];
  double v51;
  uint64_t v52;
  unint64_t v53;
  double v54[3];
  double v55;
  double v56;
  float v57;
  char v58;
  double aBlock[3];
  double v60;
  double v61;
  uint64_t v62;
  char v63;
  char v64[48];
  char v65;
  CGRect v66;

  v2 = v1;
  sub_4AD4C(a1, (uint64_t)v50);
  v43 = v51;
  v5 = v52;
  v4 = v53;
  sub_4AD4C(a1, (uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot]);
  v6 = sub_4893C();
  v7 = static Date.timeIntervalSinceReferenceDate.getter(v6);
  v41 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_lastTargetTimestamp;
  v42 = a1;
  *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_lastTargetTimestamp] = v7;
  sub_4AD4C(a1, (uint64_t)v64);
  if (v65 == 2)
  {
    v5 = 0;
    v48 = 0;
    LOBYTE(v49) = 0;
  }
  else
  {
    v48 = v65 & 1;
    v49 = (v4 >> 8) & 1;
  }
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_16B2E0;
  v46 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveBackground];
  v47 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel];
  *(_QWORD *)(v9 + 32) = v46;
  *(_QWORD *)(v9 + 40) = v47;
  *(_QWORD *)&aBlock[0] = v9;
  specialized Array._endMutation()(v9);
  v10 = aBlock[0];
  v11 = swift_allocObject(v8, 88, 7);
  *(_OWORD *)(v11 + 16) = xmmword_16D2D0;
  v12 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack];
  v13 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack];
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  v14 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack];
  v15 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
  *(_QWORD *)(v11 + 48) = v14;
  *(_QWORD *)(v11 + 56) = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
  v17 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView];
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 72) = v17;
  v44 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
  *(_QWORD *)(v11 + 80) = v44;
  *(_QWORD *)&aBlock[0] = v11;
  specialized Array._endMutation()(v11);
  v18 = aBlock[0];
  v45 = (id)objc_opt_self(UIView);
  v19 = swift_allocObject(&unk_1C98E8, 49, 7);
  *(double *)(v19 + 16) = v10;
  *(_BYTE *)(v19 + 24) = v48;
  *(_DWORD *)(v19 + 28) = v5;
  *(double *)(v19 + 32) = v18;
  *(_QWORD *)(v19 + 40) = v2;
  *(_BYTE *)(v19 + 48) = v49;
  v61 = COERCE_DOUBLE(sub_4ADC8);
  v62 = v19;
  *(_QWORD *)&aBlock[0] = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock[1] = 1107296256;
  *(_QWORD *)&aBlock[2] = sub_F528;
  v60 = COERCE_DOUBLE(&block_descriptor_5);
  v20 = _Block_copy(aBlock);
  v21 = v62;
  v22 = v46;
  v23 = v47;
  v24 = v12;
  v25 = v13;
  v26 = v14;
  v27 = v15;
  v28 = v16;
  v29 = v17;
  v30 = v44;
  v31 = v2;
  swift_release(v21);
  v32 = 0.0;
  objc_msgSend(v45, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v20, 0, 1.0, 0.0, 1.0, 300.0, 24.0, 0.0);
  _Block_release(v20);

  if ((v31[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] & 1) == 0)
  {
    sub_4AD4C(v42, (uint64_t)aBlock);
    if (v63 == 2)
    {
      v33 = v41;
    }
    else
    {
      v33 = v41;
      if (v43 > 0.0)
      {
        v34 = v61 + (*(double *)&v2[v41] - aBlock[0]) * *(float *)&v62;
        if (v34 >= v60)
          v34 = v60;
        v35 = fmax(v34, 0.0) / v43;
        if (v35 <= 1.0)
          v32 = v35;
        else
          v32 = 1.0;
      }
    }
    objc_msgSend(v31, "bounds", v41);
    Width = CGRectGetWidth(v66);
    sub_4869C(Width * v32);
    v37 = *(double *)&v2[v33];
    sub_4AD4C(v42, (uint64_t)v54);
    v38 = 0.0;
    v39 = 0.0;
    if (v58 != 2)
    {
      v40 = v56 + (v37 - v54[0]) * v57;
      if (v40 >= v55)
        v40 = v55;
      v39 = fmax(v40, 0.0);
      v38 = v43;
    }
    sub_48BB4(v39, v38 - v39);
  }
}

id sub_494B8(uint64_t a1, unsigned __int8 a2, uint64_t a3, char *a4, char a5, float a6)
{
  uint64_t v10;
  id result;
  uint64_t v12;
  double v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  uint64_t v21;
  char **v22;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v16);
    v10 = (uint64_t)result;
    if (!result)
      goto LABEL_15;
  }
  else
  {
    v10 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = (id)swift_bridgeObjectRetain(a1);
    if (!v10)
      goto LABEL_15;
  }
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v12 = 0;
  if (a6 <= 0.0)
    v13 = 0.0;
  else
    v13 = 1.0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
    else
      v14 = *(id *)(a1 + 8 * v12 + 32);
    v15 = v14;
    ++v12;
    objc_msgSend(v14, "setHidden:", (a2 ^ 1) & 1);
    objc_msgSend(v15, "setAlpha:", v13);

  }
  while (v10 != v12);
LABEL_15:
  swift_bridgeObjectRelease(a1);
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v21 = a3;
    else
      v21 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v21);
    v17 = (uint64_t)result;
    if (result)
    {
LABEL_17:
      if (v17 >= 1)
      {
        for (i = 0; i != v17; ++i)
        {
          if ((a3 & 0xC000000000000001) != 0)
            v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a3);
          else
            v19 = *(id *)(a3 + 8 * i + 32);
          v20 = v19;
          objc_msgSend(v19, "setHidden:", a2 & 1);

        }
        goto LABEL_27;
      }
LABEL_32:
      __break(1u);
      return result;
    }
  }
  else
  {
    v17 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    result = (id)swift_bridgeObjectRetain(a3);
    if (v17)
      goto LABEL_17;
  }
LABEL_27:
  result = (id)swift_bridgeObjectRelease(a3);
  if ((a2 & 1) == 0)
  {

    v22 = &selRef_startAnimating;
    if ((a5 & 1) == 0)
      v22 = &selRef_stopAnimating;
    objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeActivityIndicator], *v22);
    return objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel], "setHidden:", a5 & 1);
  }
  return result;
}

id sub_497F4(double a1)
{
  char *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  CGFloat Width;
  id result;
  CGRect v9;

  if (v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48] != 2)
  {
    v3 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 24];
    v4 = v3 - a1;
    v5 = a1 / v3;
    if (v5 <= 1.0)
      v6 = v5;
    else
      v6 = 1.0;
    objc_msgSend(v1, "bounds");
    Width = CGRectGetWidth(v9);
    sub_4869C(v6 * Width);
    sub_48BB4(a1, v4);
    *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_selectedElapsedTime] = a1;
    return objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
  }
  return result;
}

uint64_t type metadata accessor for PlayerTimeControl()
{
  return objc_opt_self(_TtC12NowPlayingUI17PlayerTimeControl);
}

void sub_4996C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView);
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setCornerRadius:", 2.0);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setMaskedCorners:", 3);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView);
  v5 = objc_msgSend(v4, "layer");
  objc_msgSend(v5, "setCornerRadius:", 2.0);

  v6 = objc_msgSend(v4, "layer");
  objc_msgSend(v6, "setMaskedCorners:", 3);

}

void sub_49A60()
{
  char *v0;
  void *v1;
  void *v2;
  NSString v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  int IsAccessibilityContentSizeCategory;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  id v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  double v122;
  id v123;
  id v124;
  id v125;
  id v126;
  double v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  void *v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  void *v141;
  id v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  id v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  double v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  Class isa;
  uint64_t v159;
  id v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  id v165;
  id v166;
  id v167;
  _QWORD v168[3];
  uint64_t v169;
  uint64_t v170;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "_setLayoutDebuggingIdentifier:", v3);

  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView);
  v5 = String._bridgeToObjectiveC()();
  v160 = v4;
  objc_msgSend(v4, "_setLayoutDebuggingIdentifier:", v5);

  v166 = v2;
  v6 = objc_msgSend(v2, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  v9 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint;
  v10 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint) = v8;

  v162 = v9;
  v12 = *(void **)((char *)v1 + v9);
  if (!v12)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  LODWORD(v11) = 1132068864;
  objc_msgSend(v12, "setPriority:", v11);
  v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v14);
  v16 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel);
  v17 = objc_msgSend(v16, "bottomAnchor");
  v18 = (uint64_t)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics;
  sub_DF78((uint64_t)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics, (uint64_t)v168);
  v19 = v169;
  v20 = v170;
  __swift_project_boxed_opaque_existential_1(v168, v169);
  LOBYTE(v13) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v19, v20);
  __swift_destroy_boxed_opaque_existential_0(v168);
  v21 = &selRef_topAnchor;
  if ((v13 & 1) != 0)
    v21 = &selRef_bottomAnchor;
  v22 = objc_msgSend(v1, *v21);
  v163 = v18;
  v164 = v16;
  if (IsAccessibilityContentSizeCategory)
  {
    if (qword_1F9498 != -1)
      swift_once(&qword_1F9498, sub_44218);
    v23 = *(double *)&qword_1FC550;
  }
  else
  {
    sub_DF78(v18, (uint64_t)v168);
    v24 = v169;
    v25 = v170;
    __swift_project_boxed_opaque_existential_1(v168, v169);
    v23 = (*(double (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
    __swift_destroy_boxed_opaque_existential_0(v168);
  }
  v26 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v22, v23);

  v27 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint);
  v159 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint) = v26;

  v165 = *(id *)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack);
  v28 = objc_msgSend(v165, "leadingAnchor");
  v29 = objc_msgSend(v166, "centerXAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, 0.0);

  v161 = (char *)OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint;
  v31 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint) = v30;

  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v33 = swift_allocObject(v32, 320, 7);
  *(_OWORD *)(v33 + 16) = xmmword_16D2E0;
  v34 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel);
  v35 = objc_msgSend(v34, "centerYAnchor");
  v36 = objc_msgSend(v1, "centerYAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v33 + 32) = v37;
  v38 = objc_msgSend(v34, "centerXAnchor");
  v39 = objc_msgSend(v1, "centerXAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v33 + 40) = v40;
  v41 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveBackground);
  v42 = objc_msgSend(v41, "centerXAnchor");
  v43 = objc_msgSend(v34, "centerXAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v33 + 48) = v44;
  v45 = objc_msgSend(v41, "centerYAnchor");
  v46 = objc_msgSend(v34, "centerYAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v33 + 56) = v47;
  v48 = objc_msgSend(v41, "widthAnchor");
  v49 = objc_msgSend(v34, "widthAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 32.0);

  *(_QWORD *)(v33 + 64) = v50;
  v51 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack);
  v52 = objc_msgSend(v51, "leadingAnchor");
  v53 = objc_msgSend(v1, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v33 + 72) = v54;
  v55 = objc_msgSend(v51, "trailingAnchor");
  v56 = objc_msgSend(v166, "trailingAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v56, -2.0);

  *(_QWORD *)(v33 + 80) = v57;
  v58 = objc_msgSend(v51, "centerYAnchor");
  v59 = objc_msgSend(v1, "centerYAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v33 + 88) = v60;
  v61 = objc_msgSend(v51, "heightAnchor");
  v62 = objc_msgSend(v61, "constraintEqualToConstant:", 3.0);

  *(_QWORD *)(v33 + 96) = v62;
  v63 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack);
  v64 = objc_msgSend(v63, "leadingAnchor");
  v65 = objc_msgSend(v51, "leadingAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v33 + 104) = v66;
  v67 = objc_msgSend(v63, "centerYAnchor");
  v68 = objc_msgSend(v1, "centerYAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v33 + 112) = v69;
  v70 = objc_msgSend(v63, "heightAnchor");
  v71 = objc_msgSend(v70, "constraintEqualToConstant:", 3.0);

  *(_QWORD *)(v33 + 120) = v71;
  v72 = objc_msgSend(v165, "trailingAnchor");
  v73 = objc_msgSend(v1, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  *(_QWORD *)(v33 + 128) = v74;
  v75 = objc_msgSend(v165, "centerYAnchor");
  v76 = objc_msgSend(v1, "centerYAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

  *(_QWORD *)(v33 + 136) = v77;
  v78 = objc_msgSend(v165, "heightAnchor");
  v79 = objc_msgSend(v78, "constraintEqualToConstant:", 3.0);

  *(_QWORD *)(v33 + 144) = v79;
  v80 = *(void **)&v161[(_QWORD)v1];
  if (!v80)
    goto LABEL_14;
  *(_QWORD *)(v33 + 152) = v80;
  v81 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide);
  v82 = v80;
  v83 = objc_msgSend(v81, "leadingAnchor");
  v84 = objc_msgSend(v51, "leadingAnchor");
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

  *(_QWORD *)(v33 + 160) = v85;
  v86 = objc_msgSend(v81, "trailingAnchor");
  v87 = objc_msgSend(v165, "trailingAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

  *(_QWORD *)(v33 + 168) = v88;
  v89 = objc_msgSend(v81, "topAnchor");
  v90 = objc_msgSend(v51, "topAnchor");
  v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

  *(_QWORD *)(v33 + 176) = v91;
  v92 = objc_msgSend(v81, "bottomAnchor");
  v93 = objc_msgSend(v51, "bottomAnchor");
  v94 = objc_msgSend(v92, "constraintEqualToAnchor:", v93);

  *(_QWORD *)(v33 + 184) = v94;
  v95 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferingIndicator);
  v96 = objc_msgSend(v95, "leadingAnchor");
  v97 = objc_msgSend(v81, "leadingAnchor");
  v98 = objc_msgSend(v96, "constraintEqualToAnchor:", v97);

  *(_QWORD *)(v33 + 192) = v98;
  v99 = objc_msgSend(v95, "trailingAnchor");
  v100 = objc_msgSend(v81, "trailingAnchor");
  v101 = objc_msgSend(v99, "constraintEqualToAnchor:", v100);

  *(_QWORD *)(v33 + 200) = v101;
  v102 = objc_msgSend(v95, "topAnchor");
  v103 = objc_msgSend(v81, "topAnchor");
  v104 = objc_msgSend(v102, "constraintEqualToAnchor:", v103);

  *(_QWORD *)(v33 + 208) = v104;
  v105 = objc_msgSend(v95, "bottomAnchor");
  v106 = objc_msgSend(v81, "bottomAnchor");
  v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

  *(_QWORD *)(v33 + 216) = v107;
  v108 = *(void **)((char *)v1 + v162);
  if (!v108)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_QWORD *)(v33 + 224) = v108;
  v109 = v108;
  v110 = objc_msgSend(v166, "bottomAnchor");
  v111 = objc_msgSend(v51, "bottomAnchor");
  v112 = objc_msgSend(v110, "constraintEqualToAnchor:", v111);

  *(_QWORD *)(v33 + 232) = v112;
  v113 = objc_msgSend(v160, "bottomAnchor");
  v114 = objc_msgSend(v166, "bottomAnchor");
  v115 = objc_msgSend(v113, "constraintEqualToAnchor:", v114);

  *(_QWORD *)(v33 + 240) = v115;
  v116 = objc_msgSend(v160, "centerXAnchor");
  v117 = objc_msgSend(v166, "centerXAnchor");
  v118 = objc_msgSend(v116, "constraintEqualToAnchor:", v117);

  *(_QWORD *)(v33 + 248) = v118;
  v119 = objc_msgSend(v166, "leadingAnchor");
  v120 = objc_msgSend(v51, "leadingAnchor");
  v121 = objc_msgSend(v119, "constraintGreaterThanOrEqualToAnchor:constant:", v120, 1.0);

  LODWORD(v122) = 1144750080;
  v123 = objc_msgSend(v121, "withPriority:", v122);

  *(_QWORD *)(v33 + 256) = v123;
  v124 = objc_msgSend(v166, "trailingAnchor");
  v125 = objc_msgSend(v165, "trailingAnchor");
  v126 = objc_msgSend(v124, "constraintLessThanOrEqualToAnchor:constant:", v125, -1.0);

  LODWORD(v127) = 1144750080;
  v128 = objc_msgSend(v126, "withPriority:", v127);

  *(_QWORD *)(v33 + 264) = v128;
  v129 = objc_msgSend(v164, "leadingAnchor");
  v130 = objc_msgSend(v1, "leadingAnchor");
  sub_DF78(v163, (uint64_t)v168);
  v131 = v169;
  v132 = v170;
  __swift_project_boxed_opaque_existential_1(v168, v169);
  (*(void (**)(uint64_t, uint64_t))(v132 + 104))(v131, v132);
  v133 = objc_msgSend(v129, "constraintEqualToAnchor:constant:", v130);

  __swift_destroy_boxed_opaque_existential_0(v168);
  *(_QWORD *)(v33 + 272) = v133;
  v134 = *(void **)((char *)v1 + v159);
  if (v134)
  {
    v167 = (id)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v33 + 280) = v134;
    v135 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeActivityIndicator);
    v136 = v134;
    v137 = objc_msgSend(v135, "leadingAnchor");
    v138 = objc_msgSend(v1, "leadingAnchor");
    v139 = objc_msgSend(v137, "constraintEqualToAnchor:", v138);

    *(_QWORD *)(v33 + 288) = v139;
    v140 = objc_msgSend(v135, "centerYAnchor");
    v141 = *(void **)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel);
    v142 = objc_msgSend(v141, "centerYAnchor");
    v143 = objc_msgSend(v140, "constraintEqualToAnchor:", v142);

    *(_QWORD *)(v33 + 296) = v143;
    v144 = objc_msgSend(v141, "trailingAnchor");
    v145 = objc_msgSend(v1, "trailingAnchor");
    sub_DF78(v163, (uint64_t)v168);
    v146 = v169;
    v147 = v170;
    __swift_project_boxed_opaque_existential_1(v168, v169);
    (*(void (**)(uint64_t, uint64_t))(v147 + 112))(v146, v147);
    v148 = objc_msgSend(v144, "constraintEqualToAnchor:constant:", v145);

    __swift_destroy_boxed_opaque_existential_0(v168);
    *(_QWORD *)(v33 + 304) = v148;
    v149 = objc_msgSend(v141, "bottomAnchor");
    v150 = objc_msgSend(v164, "bottomAnchor");
    sub_DF78(v163, (uint64_t)v168);
    v151 = v169;
    v152 = v170;
    __swift_project_boxed_opaque_existential_1(v168, v169);
    (*(void (**)(uint64_t, uint64_t))(v152 + 112))(v151, v152);
    v154 = objc_msgSend(v149, "constraintEqualToAnchor:constant:", v150, v153);

    v155 = __swift_destroy_boxed_opaque_existential_0(v168);
    *(_QWORD *)(v33 + 312) = v154;
    v168[0] = v33;
    specialized Array._endMutation()(v155);
    v156 = swift_bridgeObjectRetain(*(_QWORD *)((char *)v1
                                              + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints));
    sub_A5528(v156);
    v157 = v168[0];
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v167, "activateConstraints:", isa, swift_bridgeObjectRelease(v157).n128_f64[0]);

    return;
  }
LABEL_16:
  __break(1u);
}

id sub_4AC38(uint64_t a1)
{
  return sub_4AC44(a1, type metadata accessor for MacPlayerTimeControl);
}

id sub_4AC44(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for MacPlayerTimeControl()
{
  return objc_opt_self(_TtC12NowPlayingUI20MacPlayerTimeControl);
}

uint64_t sub_4AC9C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_4ACC0(void *a1)
{
  uint64_t v1;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v1 + 16);
  sub_48A34(a1);

}

void sub_4AD04(uint64_t a1)
{
  uint64_t v1;

  sub_45690(a1, v1);
}

void sub_4AD0C(uint64_t a1)
{
  uint64_t v1;

  sub_4570C(a1, v1);
}

void sub_4AD14()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  sub_48F68();

}

uint64_t sub_4AD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FBD00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4AD94()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 49, 7);
}

id sub_4ADC8()
{
  uint64_t v0;

  return sub_494B8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40), *(_BYTE *)(v0 + 48), *(float *)(v0 + 28));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_5(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double MPCPlayerItemDurationSnapshotGetElapsedTimeForCurrentTime(uint64_t a1, double a2)
{
  double v2;

  v2 = *(double *)(a1 + 32) + (a2 - *(double *)a1) * *(float *)(a1 + 40);
  if (v2 >= *(double *)(a1 + 24))
    v2 = *(double *)(a1 + 24);
  return fmax(v2, 0.0);
}

uint64_t sub_4AE24(uint64_t a1)
{
  destroy for NowPlayingDataProvider(a1);
  return a1;
}

void sub_4AE58()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  uint64_t v5;
  id v6;
  NSString v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  NSString v21;
  uint64_t v22;
  id v23;
  NSString v24;
  uint64_t v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;

  v1 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackLayoutGuide;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v2 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTrack;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "_setLayoutDebuggingIdentifier:", v4);

  if (qword_1F9630 != -1)
    swift_once(&qword_1F9630, sub_FE5E8);
  objc_msgSend(v3, "setBackgroundColor:", qword_2103A8);
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferUnselectedColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferSelectedColor] = 0;
  v5 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferTrack;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "_setLayoutDebuggingIdentifier:", v7);

  *(_QWORD *)&v0[v5] = v6;
  v8 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrack;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "_setLayoutDebuggingIdentifier:", v10);

  v11 = objc_msgSend(v9, "layer");
  objc_msgSend(v11, "setMaskedCorners:", 10);

  if (qword_1F9640 != -1)
    swift_once(&qword_1F9640, sub_FE610);
  objc_msgSend(v9, "setBackgroundColor:", qword_2103B8);
  *(_QWORD *)&v0[v8] = v9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobAlpha] = 0x3FF0000000000000;
  v12 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobKnockoutView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v14 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeActivityIndicator;
  v15 = objc_msgSend(objc_allocWithZone((Class)MTActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  objc_msgSend(v15, "_setStyle:", 8);
  objc_msgSend(v15, "setHidesWhenStopped:", 1);
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "secondaryLabelColor");
  objc_msgSend(v17, "setColor:", v18);

  *(_QWORD *)&v0[v14] = v17;
  v19 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel;
  v20 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "_setLayoutDebuggingIdentifier:", v21);

  *(_QWORD *)&v0[v19] = v20;
  v22 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel;
  v23 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "_setLayoutDebuggingIdentifier:", v24);

  *(_QWORD *)&v0[v22] = v23;
  v25 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel;
  v26 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "_setLayoutDebuggingIdentifier:", v27);

  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  objc_msgSend(v26, "setTextColor:", qword_210330);
  *(_QWORD *)&v0[v25] = v26;
  v28 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveBackground;
  *(_QWORD *)&v0[v28] = sub_44104();
  v29 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_bufferingIndicator;
  v30 = type metadata accessor for PlayerIndeterminateActivityIndicator();
  *(_QWORD *)&v0[v29] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v30)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_defaultConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_trackingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTrackLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_labelAlpha] = 0x3FF0000000000000;
  v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_selectedElapsedTime] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_detailedScrubbingEnabled] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController] = 0;
  v31 = &v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler];
  *v31 = 0;
  v31[1] = 0;
  v32 = &v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_detailScrubSpeed];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobViewXConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_nextItemObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_backgroundObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_foregroundObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_loadedDurationObserver] = 0;
  v33 = &v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot];
  *(_OWORD *)v33 = 0u;
  *((_OWORD *)v33 + 1) = 0u;
  *((_OWORD *)v33 + 2) = 0u;
  *((_QWORD *)v33 + 6) = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_isBackgrounded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_lastTargetTimestamp] = 0;
  v34 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeFormatter;
  v35 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v35, "setStyle:", 1);
  *(_QWORD *)&v0[v34] = v35;
  v36 = OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeFormatter;
  v37 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v37, "setStyle:", 2);
  *(_QWORD *)&v0[v36] = v37;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_percentLoaded] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/PlayerTimeControl.swift", 36, 2, 181, 0);
  __break(1u);
}

void sub_4B4B4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  int IsAccessibilityContentSizeCategory;
  void *v6;
  uint64_t v7;
  id v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double (*v12)(uint64_t, uint64_t);
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  id v23;
  NSString *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  id v34;
  id v35;
  NSString *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v4);
  v6 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabelBottomAnchorConstraint];
  if (v6)
  {
    if (IsAccessibilityContentSizeCategory)
    {
      v7 = qword_1F9498;
      v8 = v6;
      if (v7 != -1)
        swift_once(&qword_1F9498, sub_44218);
      v9 = *(double *)&qword_1FC550;
    }
    else
    {
      sub_DF78((uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)v45);
      v10 = v46;
      v11 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      v12 = *(double (**)(uint64_t, uint64_t))(v11 + 48);
      v13 = v6;
      v9 = v12(v10, v11);
      __swift_destroy_boxed_opaque_existential_0(v45);
    }
    objc_msgSend(v6, "setConstant:", v9);

    v14 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
    v15 = (uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics];
    sub_DF78((uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)v45);
    v16 = v46;
    v17 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v18 = (*(double (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    sub_DF78(v15, (uint64_t)v42);
    v19 = v43;
    v20 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    v22 = objc_msgSend(v2, "sharedApplication");
    v23 = objc_msgSend(v22, "preferredContentSizeCategory");

    LODWORD(v22) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v23);
    if ((_DWORD)v22)
    {
      v24 = UIFontTextStyleBody;
      v18 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v24, v18);

    }
    v25 = (void *)objc_opt_self(UIFont);
    v26 = objc_msgSend(v25, "monospacedDigitSystemFontOfSize:weight:", v18, v21);
    __swift_destroy_boxed_opaque_existential_0(v42);
    __swift_destroy_boxed_opaque_existential_0(v45);
    objc_msgSend(v14, "setFont:", v26);

    v27 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
    sub_DF78(v15, (uint64_t)v45);
    v28 = v46;
    v29 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v30 = (*(double (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    sub_DF78(v15, (uint64_t)v42);
    v31 = v43;
    v32 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    v33 = (*(double (**)(uint64_t, uint64_t))(v32 + 40))(v31, v32);
    v34 = objc_msgSend(v2, "sharedApplication");
    v35 = objc_msgSend(v34, "preferredContentSizeCategory");

    LODWORD(v34) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v35);
    if ((_DWORD)v34)
    {
      v36 = UIFontTextStyleBody;
      v30 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v36, v30);

    }
    v37 = objc_msgSend(v25, "monospacedDigitSystemFontOfSize:weight:", v30, v33);
    __swift_destroy_boxed_opaque_existential_0(v42);
    __swift_destroy_boxed_opaque_existential_0(v45);
    objc_msgSend(v27, "setFont:", v37);

    v38 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_liveLabel];
    sub_DF78(v15, (uint64_t)v45);
    v39 = v46;
    v40 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v41 = objc_msgSend(v25, "systemFontOfSize:weight:", (*(double (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40), UIFontWeightHeavy);
    __swift_destroy_boxed_opaque_existential_0(v45);
    objc_msgSend(v38, "setFont:", v41);

    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    objc_msgSend(v1, "setNeedsUpdateConstraints");
    objc_msgSend(v1, "setNeedsLayout");
  }
  else
  {
    __break(1u);
  }
}

void sub_4B93C(float a1)
{
  char *v1;
  char *v2;
  double v4;
  void *v5;
  uint64_t (*v6)();
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  char *v34;
  void *v35;
  double v36;
  float v37;
  double v38;
  double v39;
  CGFloat Width;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[3];
  void *v48;
  uint64_t (*v49)();
  _QWORD *v50;
  CGRect v51;

  if (v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 48] != 2)
  {
    v2 = v1;
    v4 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_durationSnapshot + 24];
    sub_DF78((uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_metrics], (uint64_t)aBlock);
    v5 = v48;
    v6 = v49;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v48);
    v7 = (*((uint64_t (**)(void *, uint64_t (*)()))v6 + 12))(v5, v6);
    __swift_destroy_boxed_opaque_existential_0(aBlock);
    if ((v7 & 1) != 0)
    {
      v8 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_knobView];
      objc_msgSend(v8, "bounds");
      objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v8);
      v45 = v10;
      v46 = v9;
      v43 = v12;
      v44 = v11;
      v13 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_elapsedTimeLabel];
      objc_msgSend(v13, "bounds");
      objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v13);
      v41 = v15;
      v42 = v14;
      v17 = v16;
      v19 = v18;
      v20 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_remainingTimeLabel];
      objc_msgSend(v20, "bounds");
      objc_msgSend(v2, "convertRect:fromCoordinateSpace:", v20);
      v21 = v4;
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v29 = v28;
      v30 = (void *)objc_opt_self(UIView);
      v31 = (_QWORD *)swift_allocObject(&unk_1C9AC8, 120, 7);
      v31[2] = v46;
      v31[3] = v45;
      v31[4] = v44;
      v31[5] = v43;
      v31[6] = v42;
      v31[7] = v17;
      v31[8] = v19;
      v31[9] = v41;
      v31[10] = v2;
      v31[11] = v23;
      v31[12] = v25;
      v4 = v21;
      v31[13] = v27;
      v31[14] = v29;
      v49 = sub_4BFB4;
      v50 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F528;
      v48 = &block_descriptor_45;
      v32 = _Block_copy(aBlock);
      v33 = v50;
      v34 = v2;
      swift_release(v33);
      objc_msgSend(v30, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v32, 0, 0.5, 0.0, 1.0, 500.0, 30.0, 0.0);
      _Block_release(v32);
    }
    v35 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController];
    if (v35)
    {
      objc_msgSend(v35, "duration");
      v37 = v36;
    }
    else
    {
      v37 = 0.0;
    }
    v38 = (float)(a1 / v37);
    if (v38 <= 1.0)
      v39 = (float)(a1 / v37);
    else
      v39 = 1.0;
    objc_msgSend(v2, "bounds");
    Width = CGRectGetWidth(v51);
    sub_4869C(Width * v39);
    sub_48BB4(v4 * v38, v4 - v4 * v38);
  }
}

uint64_t sub_4BBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_detailScrubSpeed);
  *v2 = a1;
  *((_BYTE *)v2 + 8) = 0;
  result = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubController);
  if (result)
  {
    result = (uint64_t)objc_msgSend((id)result, "detailedScrubbingEnabled");
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1
                                                          + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler);
    if (v4)
    {
      v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler + 8);
      v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking);
      if ((result & 1) != 0)
      {
        v7 = *v2;
        v8 = *((unsigned __int8 *)v2 + 8);
LABEL_10:
        swift_retain(v5);
        v4(v6, v7, v8);
        return sub_145A0((uint64_t)v4, v5);
      }
      v7 = 0;
LABEL_9:
      v8 = 1;
      goto LABEL_10;
    }
  }
  else
  {
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1
                                                          + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler);
    if (v4)
    {
      v7 = 0;
      v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_scrubbingDidChangeHandler + 8);
      v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl__tracking);
      goto LABEL_9;
    }
  }
  return result;
}

void sub_4BCF0()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[5];
  uint64_t v8;

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI17PlayerTimeControl_displayLink];
  if (v1)
  {
    objc_msgSend(v1, "setPaused:", 1);
    v2 = (void *)objc_opt_self(UIView);
    v3 = swift_allocObject(&unk_1C9A28, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v7[4] = sub_4BFB8;
    v8 = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_F528;
    v7[3] = &block_descriptor_31;
    v4 = _Block_copy(v7);
    v5 = v8;
    v6 = v0;
    swift_release(v5);
    objc_msgSend(v2, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v4, 0, 1.0, 0.0, 1.0, 300.0, 24.0, 0.0);
    _Block_release(v4);
  }
  else
  {
    __break(1u);
  }
}

void sub_4BDFC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1C9938, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v14 = sub_4BF5C;
  v15 = v2;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_F528;
  v13 = &block_descriptor_13;
  v3 = _Block_copy(&v10);
  v4 = v15;
  v5 = v0;
  swift_release(v4);
  v6 = swift_allocObject(&unk_1C9988, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v14 = sub_4BF88;
  v15 = v6;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_153D78;
  v13 = &block_descriptor_19;
  v7 = _Block_copy(&v10);
  v8 = v15;
  v9 = v5;
  swift_release(v8);
  objc_msgSend(v1, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v3, v7, 1.0, 0.0, 1.0, 300.0, 30.0, 0.0);
  _Block_release(v7);
  _Block_release(v3);
}

id sub_4BF5C()
{
  uint64_t v0;

  return sub_4834C(*(_BYTE **)(v0 + 16));
}

uint64_t sub_4BF64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_4BF88(uint64_t a1)
{
  uint64_t v1;

  sub_48594(a1, *(char **)(v1 + 16));
}

uint64_t sub_4BF90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 120, 7);
}

id sub_4BFB8()
{
  uint64_t v0;

  return sub_480B4(*(_BYTE **)(v0 + 16));
}

id sub_4BFC0()
{
  uint64_t v0;

  return sub_48D98(*(_QWORD *)(v0 + 80), *(CGFloat *)(v0 + 16), *(CGFloat *)(v0 + 24), *(CGFloat *)(v0 + 32), *(CGFloat *)(v0 + 40), *(CGFloat *)(v0 + 48), *(CGFloat *)(v0 + 56), *(CGFloat *)(v0 + 64), *(CGFloat *)(v0 + 72), *(CGFloat *)(v0 + 88), *(CGFloat *)(v0 + 96), *(CGFloat *)(v0 + 104), *(CGFloat *)(v0 + 112));
}

unint64_t sub_4C000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200C40;
  if (!qword_200C40)
  {
    v1 = sub_F174(255, &qword_1FC800, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_200C40);
  }
  return result;
}

char *sub_4C0A0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  double v30;
  double v31;
  char *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char *result;
  uint64_t i;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  objc_super v52;

  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_customView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_image] = 0;
  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_title];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_message];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionTitle];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionHandler];
  *v12 = 0;
  v12[1] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButtonSizingMode] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint] = 0x4079000000000000;
  v13 = &v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textDrawingCache] = 0;
  v14 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textStackView;
  v15 = _s9StackViewCMa();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15));
  v17 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v16, "init");
  v18 = (uint64_t *)&v17[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents];
  *v18 = sub_4D8F8();
  v18[1] = v19;
  v18[2] = v20;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionEventHandler] = 0;
  v21 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton;
  v22 = type metadata accessor for MultilineButton();
  *(_QWORD *)&v17[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22)), "init");
  v23 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_imageView;
  v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", 0);
  objc_msgSend(v24, "setContentMode:", 1);
  objc_msgSend(v24, "setHidden:", 1);
  *(_QWORD *)&v17[v23] = v24;

  v52.receiver = v17;
  v52.super_class = (Class)type metadata accessor for InformativeView();
  v25 = objc_msgSendSuper2(&v52, "initWithFrame:", a1, a2, a3, a4);
  v26 = qword_1F9580;
  v27 = (char *)v25;
  if (v26 != -1)
    swift_once(&qword_1F9580, sub_FDE14);
  objc_msgSend(v27, "setBackgroundColor:", qword_210308);
  v28 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton;
  v29 = *(char **)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton];
  if (v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButtonSizingMode])
    v30 = 8.0;
  else
    v30 = 4.0;
  v31 = *(double *)&v29[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundCornerRadius];
  *(double *)&v29[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundCornerRadius] = v30;
  v32 = v29;
  if ((static CGFloat.==~ infix(_:_:)(v30, v31) & 1) == 0)
    sub_B85BC();

  v33 = *(void **)&v27[v28];
  v34 = swift_allocObject(&unk_1C9C50, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16, v27);
  v35 = sub_C80D0(v33, 64, (uint64_t)sub_4DFC4, v34);
  v36 = *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionEventHandler];
  *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionEventHandler] = v35;
  swift_release(v36);
  v37 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textStackView;
  v38 = *(void **)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textStackView];
  v39 = _s5CacheCMa();
  swift_allocObject(v39, 104, 7);
  v40 = v38;
  sub_F8EC();
  v42 = v41;
  v43 = *(_QWORD *)&v40[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache];
  *(_QWORD *)&v40[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = v41;
  swift_retain(v41);
  sub_4E06C(v43);

  swift_release(v43);
  swift_release(v42);
  v44 = *(void **)&v27[v37];
  v45 = *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents + 16];
  if (!((unint64_t)v45 >> 62))
  {
    v46 = *(_QWORD *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents + 16], 2);
    result = v44;
    if (v46)
      goto LABEL_10;
LABEL_20:
    swift_bridgeObjectRelease_n(v45, 2);

    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v27[v28]);
    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_imageView]);
    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v27[v37]);

    return v27;
  }
  if (v45 < 0)
    v50 = *(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents + 16];
  else
    v50 = v45 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v27[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents + 16], 2);
  v51 = v44;
  result = (char *)_CocoaArrayWrapper.endIndex.getter(v50);
  v46 = (uint64_t)result;
  if (!result)
    goto LABEL_20;
LABEL_10:
  if (v46 >= 1)
  {
    for (i = 0; i != v46; ++i)
    {
      if ((v45 & 0xC000000000000001) != 0)
      {
        v49 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v45);
      }
      else
      {
        v49 = *(_QWORD **)(v45 + 8 * i + 32);
        swift_retain(v49);
      }
      sub_4E250(v49);
      swift_release(v49);
    }
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

void sub_4C4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionHandler + 8);
      v7 = swift_retain(v6);
      v5(v7);
      sub_145A0((uint64_t)v5, v6);
    }

  }
}

uint64_t sub_4C5DC(uint64_t result, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v10;

  v3 = v2;
  v4 = (uint64_t *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_title];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_title + 8];
  if (!v5)
  {
    if (!a2)
      return result;
    v5 = 0;
    v6 = 0;
    v8 = 0xE000000000000000;
    goto LABEL_12;
  }
  v6 = *v4;
  if (!a2)
  {
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_title + 8];
LABEL_12:
    swift_bridgeObjectRetain(v5);
    sub_5129C(v6, v8);
    result = (uint64_t)objc_msgSend(v2, "setNeedsLayout");
    v9 = *(void (**)(char *))&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler];
    if (v9)
    {
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler + 8];
      swift_retain(v10);
      v9(v3);
      return sub_145A0((uint64_t)v9, v10);
    }
    return result;
  }
  if (v6 != result || v5 != a2)
  {
    result = _stringCompareWithSmolCheck(_:_:expecting:)(*v4, *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_title + 8], result, a2, 0);
    v8 = v5;
    if ((result & 1) == 0)
      goto LABEL_12;
  }
  return result;
}

id sub_4C6EC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  v3 = a1 + *a3;
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 8));
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

uint64_t sub_4C758(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  if (a3)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = (uint64_t *)&a1[*a4];
  v11 = *v10;
  v12 = v10[1];
  *v10 = v8;
  v10[1] = v9;
  v13 = a1;
  a5(v11, v12);

  return swift_bridgeObjectRelease(v12);
}

uint64_t sub_4C7C8(uint64_t result, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v10;

  v3 = v2;
  v4 = (uint64_t *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_message];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_message + 8];
  if (!v5)
  {
    if (!a2)
      return result;
    v5 = 0;
    v6 = 0;
    v8 = 0xE000000000000000;
    goto LABEL_12;
  }
  v6 = *v4;
  if (!a2)
  {
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_message + 8];
LABEL_12:
    swift_bridgeObjectRetain(v5);
    sub_5129C(v6, v8);
    result = (uint64_t)objc_msgSend(v2, "setNeedsLayout");
    v9 = *(void (**)(char *))&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler];
    if (v9)
    {
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler + 8];
      swift_retain(v10);
      v9(v3);
      return sub_145A0((uint64_t)v9, v10);
    }
    return result;
  }
  if (v6 != result || v5 != a2)
  {
    result = _stringCompareWithSmolCheck(_:_:expecting:)(*v4, *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_message + 8], result, a2, 0);
    v8 = v5;
    if ((result & 1) == 0)
      goto LABEL_12;
  }
  return result;
}

id sub_4C8D0(double a1, double a2)
{
  char *v2;
  id v5;
  char *v6;
  double v7;
  void *v8;

  v5 = objc_msgSend(v2, "traitCollection");
  v6 = (char *)objc_msgSend(v5, "horizontalSizeClass");

  if (v6 == (_BYTE *)&dword_0 + 2)
  {
    v7 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint];
    if (v7 < a1 && v7 > 0.0)
      a1 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint];
  }
  v8 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_customView];
  if (v8)
    return objc_msgSend(v8, "sizeThatFits:", a1, a2);
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_image])
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_imageView], "sizeThatFits:", a1, 80.0);
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionTitle + 8])
  {
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionHandler])
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton], "sizeThatFits:", a1, a2);
  }
  return objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textStackView], "sizeThatFits:", a1, a2);
}

void sub_4CAC4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat Width;
  uint64_t v33;
  double v34;
  CGFloat v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  double v55;
  CGFloat v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  CGFloat v64;
  void *v65;
  double v66;
  double v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  id v89;
  void *v90;
  uint64_t v91;
  CGFloat MidY;
  CGFloat v93;
  double v94;
  CGFloat v95;
  double v96;
  double height;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  objc_super v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;

  v1 = v0;
  v2 = type metadata accessor for CGRect.LayoutAxis(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for InformativeView();
  v106.receiver = v0;
  v106.super_class = v6;
  objc_msgSendSuper2(&v106, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = objc_msgSend(v0, "traitCollection");
  v105 = UITraitCollection.safeDisplayScale.getter();
  objc_msgSend(v1, "music_inheritedLayoutInsets");
  v17 = v16;
  v19 = v18;
  v20 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
  v102 = v8;
  v103 = v10;
  v104 = v12;
  v101 = v14;
  v21 = UIEdgeInsetsInsetRect(v8, v10, v12, v14, v17, v19);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = v26;
  v29 = v24;
  v30 = v22;
  v31 = v21;
  if (objc_msgSend(v15, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v107.origin.x = v21;
    v107.origin.y = v23;
    v107.size.width = v25;
    v107.size.height = v27;
    Width = CGRectGetWidth(v107);
    v33 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint;
    v34 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint];
    v28 = v27;
    v29 = v25;
    v30 = v23;
    v31 = v21;
    if (v34 < Width)
    {
      v28 = v27;
      v29 = v25;
      v30 = v23;
      v31 = v21;
      if (v34 > 0.0)
      {
        v108.origin.x = v21;
        v108.origin.y = v23;
        v108.size.width = v25;
        v108.size.height = v27;
        v35 = CGRectGetWidth(v108);
        v36 = CGFloat.roundValue(scale:)(v105, (v35 - *(double *)&v1[v33]) * 0.5);
        v31 = UIEdgeInsetsInsetRect(v21, v23, v25, v27, 0.0, v36);
        v30 = v37;
        v29 = v38;
        v28 = v39;
      }
    }
  }
  v40 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_customView];
  if (v40)
  {
    v41 = v40;
    v42 = objc_msgSend(v41, "sizeThatFits:", v29, v28);
    v44 = v43;
    v46 = v45;
    static CGRect.LayoutAxis.allAxes.getter(v42);
    v47 = CGRect.centeringAlong(axes:bounds:scale:)(v5, v102, v103, v104, v101, v105, v31, v30, v44, v46);
    v49 = v48;
    v51 = v50;
    v53 = v52;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v41, "setFrame:", v47, v49, v51, v53);

    v15 = v41;
  }
  else
  {
    v54 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_image];
    v96 = 0.0;
    if (v54)
    {
      v109.origin.x = v31;
      v109.origin.y = v30;
      v109.size.width = v29;
      v109.size.height = v28;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_imageView], "sizeThatFits:", CGRectGetWidth(v109), 80.0);
      v98 = v25;
      v56 = v55;
      v110.origin.x = v31;
      v110.origin.y = v30;
      v110.size.width = v29;
      v110.size.height = v28;
      v111.size.width = CGRectGetWidth(v110);
      v111.origin.x = 0.0;
      v111.origin.y = 0.0;
      v99 = v111.size.width;
      v100 = v56;
      v111.size.height = v56;
      v25 = v98;
      v28 = v28 - CGRectGetHeight(v111);
    }
    else
    {
      v99 = 0.0;
      v100 = 0.0;
    }
    v57 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionTitle + 8];
    v93 = v27;
    if (v57 && *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionHandler])
    {
      v58 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButtonSizingMode;
      if (v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButtonSizingMode] == 1)
      {
        v112.origin.x = v31;
        v112.origin.y = v30;
        v112.size.width = v29;
        v112.size.height = v28;
        v59 = CGRectGetWidth(v112);
      }
      else
      {
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton], "sizeThatFits:", v29, v28);
      }
      v60 = v59;
      if (v1[v58])
        v61 = 50.0;
      else
        v61 = 32.0;
      v62 = 0;
      v63 = 0;
      v94 = v60;
      v96 = v61;
      v28 = v28 - CGRectGetHeight(*(CGRect *)(&v60 - 2));
    }
    else
    {
      v94 = 0.0;
    }
    v113.origin.x = v31;
    v113.origin.y = v30;
    v113.size.width = v29;
    v113.size.height = v28;
    v64 = CGRectGetWidth(v113);
    v65 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textStackView];
    objc_msgSend(v65, "sizeThatFits:", v29, v28);
    v95 = v30;
    v66 = v105;
    v114.size.height = CGFloat.roundValue(scale:)(v105, v67);
    v114.origin.x = 0.0;
    v114.origin.y = 0.0;
    height = v114.size.height;
    v98 = v64;
    v114.size.width = v64;
    v68 = v28 - CGRectGetHeight(v114);
    if (v68 <= 0.0)
    {
      v74 = v101;
      v73 = v102;
      v76 = v103;
      v75 = v104;
      v72 = v95;
    }
    else
    {
      v115.origin.x = v21;
      v115.origin.y = v23;
      v115.size.width = v25;
      v69 = v93;
      v115.size.height = v93;
      MidY = CGRectGetMidY(v115);
      v116.origin.x = v21;
      v116.origin.y = v23;
      v116.size.width = v25;
      v116.size.height = v69;
      v70 = CGRectGetHeight(v116);
      v117.origin.x = v31;
      v117.origin.y = v95;
      v117.size.width = v29;
      v117.size.height = v68;
      v71 = CGRectGetHeight(v117);
      v72 = CGFloat.floorValue(scale:)(v66, MidY + (v70 - v71) * -0.5);
      v74 = v101;
      v73 = v102;
      v76 = v103;
      v75 = v104;
    }
    v118.origin.x = v31;
    v118.origin.y = v72;
    v118.size.width = v99;
    v118.size.height = v100;
    v77 = v72 + CGRectGetHeight(v118);
    v119.origin.x = v31;
    v119.origin.y = v77;
    v119.size.height = height;
    v119.size.width = v98;
    v78 = v77 + CGRectGetHeight(v119);
    if ((v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButtonSizingMode] & 1) != 0)
    {
      if (qword_1F94A0 != -1)
        swift_once(&qword_1F94A0, sub_4D500);
      v105 = UIEdgeInsetsInsetRect(v31, v78, v94, v96, *(double *)&xmmword_1FC808, *((double *)&xmmword_1FC808 + 1));
      v101 = v79;
      v96 = v80;
      v82 = v81;
      v84 = v103;
      v83 = v104;
      v85 = v102;
    }
    else
    {
      static CGRect.LayoutAxis.horizontal.getter();
      v105 = CGRect.centeringAlong(axes:bounds:scale:)(v5, v73, v76, v75, v74, v105, v31, v78, v94, v96);
      v83 = v75;
      v101 = v86;
      v84 = v76;
      v96 = v87;
      v85 = v73;
      v82 = v88;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    v89 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_imageView];
    CGRect.applyingLayoutDirection(_:inBounds:)(v20, v85, v84, v83, v74, v31, v72, v99, v100);
    objc_msgSend(v89, "setFrame:");

    v90 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton];
    CGRect.applyingLayoutDirection(_:inBounds:)(v20, v85, v84, v83, v74, v105, v101, v96, v82);
    objc_msgSend(v90, "setFrame:");
    CGRect.applyingLayoutDirection(_:inBounds:)(v20, v85, v84, v83, v74, v31, v77, v98, height);
    objc_msgSend(v65, "setFrame:");
  }

}

void sub_4D29C(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void (*v11)(char *);
  uint64_t v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for InformativeView();
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v3 = objc_msgSend(a1, "horizontalSizeClass");
    if (!v3)
    {
      v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v5 = objc_msgSend(v4, "traitCollection");

      v3 = objc_msgSend(v5, "horizontalSizeClass");
    }
  }
  else
  {
    v3 = 0;
  }
  v6 = objc_msgSend(v1, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");
  if (!v7)
  {
    v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v10 = objc_msgSend(v9, "traitCollection");

    v8 = objc_msgSend(v10, "horizontalSizeClass");
    if (!a1)
      goto LABEL_10;
LABEL_9:
    if (v3 == v8)
      return;
    goto LABEL_10;
  }
  v8 = v7;

  if (a1)
    goto LABEL_9;
LABEL_10:
  if (*(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint] > 0.0)
  {
    objc_msgSend(v1, "setNeedsLayout");
    v11 = *(void (**)(char *))&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler];
    if (v11)
    {
      v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler + 8];
      swift_retain(v12);
      v11(v1);
      sub_145A0((uint64_t)v11, v12);
    }
  }
}

double sub_4D500()
{
  double result;

  result = 0.0;
  xmmword_1FC808 = xmmword_16D360;
  *(_OWORD *)&qword_1FC818 = xmmword_16D360;
  return result;
}

id sub_4D528()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InformativeView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for InformativeView()
{
  return objc_opt_self(_TtC12NowPlayingUI15InformativeView);
}

uint64_t destroy for TitleSectionHeaderView.TextComponents(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t *_s12NowPlayingUI22TitleSectionHeaderViewC14TextComponentsVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for TitleSectionHeaderView.TextComponents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for TitleSectionHeaderView.TextComponents(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for InformativeView.TextComponents()
{
  return &type metadata for InformativeView.TextComponents;
}

uint64_t storeEnumTagSinglePayload for InformativeView.ButtonSizingMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_4D830 + 4 * byte_16D3A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_4D864 + 4 * byte_16D3A0[v4]))();
}

uint64_t sub_4D864(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_4D86C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x4D874);
  return result;
}

uint64_t sub_4D880(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x4D888);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_4D88C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_4D894(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InformativeView.ButtonSizingMode()
{
  return &type metadata for InformativeView.ButtonSizingMode;
}

unint64_t sub_4D8B4()
{
  unint64_t result;

  result = qword_1FC8C8;
  if (!qword_1FC8C8)
  {
    result = swift_getWitnessTable(&unk_16D434, &type metadata for InformativeView.ButtonSizingMode);
    atomic_store(result, (unint64_t *)&qword_1FC8C8);
  }
  return result;
}

uint64_t sub_4D8F8()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v30;
  id v31;
  id v32;
  id v33;

  v0 = (void *)objc_opt_self(MTMPUFontDescriptor);
  v1 = objc_msgSend(v0, "fontDescriptorWithTextStyle:leadingAdjustment:weight:", 19, 1, 2);
  if (qword_1F95B0 != -1)
    swift_once(&qword_1F95B0, sub_FDF98);
  v2 = (void *)qword_210338;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "clearColor");
  v6 = objc_msgSend(v1, "typeSafeCopy");

  v7 = v4;
  v8 = v6;
  v9 = v5;
  v10 = objc_msgSend(v0, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    if (qword_1F95C8 != -1)
      swift_once(&qword_1F95C8, sub_FE0E0);
    v11 = &qword_210350;
  }
  else
  {
    if (qword_1F95C0 != -1)
      swift_once(&qword_1F95C0, sub_FE034);
    v11 = &qword_210348;
  }
  v12 = *v11;
  v13 = (id)*v11;
  v14 = objc_msgSend(v3, "clearColor");
  v15 = objc_msgSend(v10, "typeSafeCopy");

  v16 = v13;
  v30 = v15;
  v17 = v14;
  v18 = (void *)objc_opt_self(UIApplication);
  v33 = v8;
  v32 = v7;
  v31 = v9;
  v19 = objc_msgSend(v18, "sharedApplication");
  v20 = v9;
  v21 = v7;
  v22 = objc_msgSend(v19, "preferredContentSizeCategory");

  LODWORD(v19) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v22);
  if ((_DWORD)v19)
    v23 = 3;
  else
    v23 = 2;
  v24 = _s9StackViewC9ComponentCMa();
  v25 = swift_allocObject(v24, 280, 7);
  *(_QWORD *)(v25 + 128) = 0;
  *(_QWORD *)(v25 + 136) = 0xE000000000000000;
  *(_QWORD *)(v25 + 240) = 0;
  *(_QWORD *)(v25 + 248) = 0xE000000000000000;
  *(_QWORD *)(v25 + 264) = 0;
  *(_QWORD *)(v25 + 272) = 0;
  *(_QWORD *)(v25 + 256) = 0;
  *(_QWORD *)(v25 + 16) = 0x656C746974;
  *(_QWORD *)(v25 + 24) = 0xE500000000000000;
  *(_QWORD *)(v25 + 32) = v8;
  *(_QWORD *)(v25 + 40) = v21;
  *(_QWORD *)(v25 + 48) = v20;
  *(_OWORD *)(v25 + 56) = xmmword_16D370;
  *(_QWORD *)(v25 + 72) = 0;
  *(_QWORD *)(v25 + 80) = 0;
  *(_QWORD *)(v25 + 88) = 0x3F8000003F000000;
  *(_QWORD *)(v25 + 96) = v23;
  *(_QWORD *)(v25 + 104) = 0;
  *(_OWORD *)(v25 + 112) = xmmword_16D380;
  *(_QWORD *)(v25 + 144) = v8;
  *(_QWORD *)(v25 + 152) = v21;
  *(_QWORD *)(v25 + 160) = v20;
  *(_OWORD *)(v25 + 168) = xmmword_16D370;
  *(_QWORD *)(v25 + 184) = 0;
  *(_QWORD *)(v25 + 192) = 0;
  *(_QWORD *)(v25 + 200) = 0x3F8000003F000000;
  *(_QWORD *)(v25 + 208) = v23;
  *(_QWORD *)(v25 + 216) = 0;
  *(_OWORD *)(v25 + 224) = xmmword_16D380;
  v26 = swift_allocObject(v24, 280, 7);
  *(_QWORD *)(v26 + 128) = 0;
  *(_QWORD *)(v26 + 136) = 0xE000000000000000;
  *(_QWORD *)(v26 + 240) = 0;
  *(_QWORD *)(v26 + 248) = 0xE000000000000000;
  *(_QWORD *)(v26 + 264) = 0;
  *(_QWORD *)(v26 + 272) = 0;
  *(_QWORD *)(v26 + 256) = 0;
  *(_QWORD *)(v26 + 16) = 0x656C746974627573;
  *(_QWORD *)(v26 + 24) = 0xE800000000000000;
  *(_QWORD *)(v26 + 32) = v30;
  *(_QWORD *)(v26 + 40) = v12;
  *(_QWORD *)(v26 + 48) = v14;
  *(_QWORD *)(v26 + 56) = 3;
  *(_QWORD *)(v26 + 64) = 0;
  *(_QWORD *)(v26 + 72) = 0;
  *(_QWORD *)(v26 + 80) = 0;
  *(_QWORD *)(v26 + 88) = 0x3F8000003F000000;
  *(_QWORD *)(v26 + 96) = 0;
  *(_QWORD *)(v26 + 104) = 0;
  *(_OWORD *)(v26 + 112) = xmmword_16D390;
  *(_QWORD *)(v26 + 144) = v30;
  *(_QWORD *)(v26 + 152) = v12;
  *(_QWORD *)(v26 + 160) = v14;
  *(_QWORD *)(v26 + 168) = 3;
  *(_QWORD *)(v26 + 176) = 0;
  *(_QWORD *)(v26 + 184) = 0;
  *(_QWORD *)(v26 + 192) = 0;
  *(_QWORD *)(v26 + 200) = 0x3F8000003F000000;
  *(_QWORD *)(v26 + 208) = 0;
  *(_QWORD *)(v26 + 216) = 0;
  *(_OWORD *)(v26 + 224) = xmmword_16D390;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_16B2E0;
  *(_QWORD *)(v28 + 32) = v25;
  *(_QWORD *)(v28 + 40) = v26;
  specialized Array._endMutation()(v28);
  swift_retain(v25);
  swift_retain(v26);

  return v25;
}

void sub_4DCE8()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_customView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_image] = 0;
  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_title];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_message];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionTitle];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionHandler];
  *v4 = 0;
  v4[1] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButtonSizingMode] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_regularWidthConstraint] = 0x4079000000000000;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textDrawingCache] = 0;
  v6 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textStackView;
  v7 = _s9StackViewCMa();
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
  v8 = (uint64_t *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents];
  *v8 = sub_4D8F8();
  v8[1] = v9;
  v8[2] = v10;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionEventHandler] = 0;
  v11 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_actionButton;
  v12 = type metadata accessor for MultilineButton();
  *(_QWORD *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "init");
  v13 = OBJC_IVAR____TtC12NowPlayingUI15InformativeView_imageView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", 0);
  objc_msgSend(v14, "setContentMode:", 1);
  objc_msgSend(v14, "setHidden:", 1);
  *(_QWORD *)&v0[v13] = v14;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/InformativeView.swift", 34, 2, 42, 0);
  __break(1u);
}

id sub_4DEA0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id result;
  void (*v7)(char *);
  uint64_t v8;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_textComponents];
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  LODWORD(v3) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v4);
  v5 = 2;
  if ((_DWORD)v3)
    v5 = 3;
  *(_QWORD *)(v2 + 96) = v5;
  sub_50F0C();
  result = objc_msgSend(v1, "setNeedsLayout");
  v7 = *(void (**)(char *))&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler];
  if (v7)
  {
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI15InformativeView_layoutInvalidationHandler + 8];
    swift_retain(v8);
    v7(v1);
    return (id)sub_145A0((uint64_t)v7, v8);
  }
  return result;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_4DFA0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_4DFC4(uint64_t a1)
{
  uint64_t v1;

  sub_4C4F4(a1, v1);
}

id MPCPlayerResponseItem.podcastEpisode.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  result = objc_msgSend(v0, "metadataObject");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "flattenedGenericObject");
    v4 = objc_msgSend(v3, "anyObject");

    if (v4)
    {
      v5 = objc_opt_self(MPModelPodcastEpisode);
      result = (id)swift_dynamicCastObjCClass(v4, v5);
      if (result)
        return result;

    }
    return 0;
  }
  return result;
}

double sub_4E06C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v2 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache);
  if (!a1)
  {
    if (!v3)
      return result;
    goto LABEL_9;
  }
  if (v3)
    v4 = a1 == v3;
  else
    v4 = 0;
  if (!v4)
  {
    if (!v3)
    {
LABEL_12:
      v9 = *(_QWORD *)(v2
                     + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCacheInvalidationNotificationObserver);
      *(_QWORD *)(v2
                + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCacheInvalidationNotificationObserver) = v3;
      swift_retain(v3);
      swift_release(v9);
      v10 = (uint64_t *)(v2 + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics);
      swift_beginAccess(v10, v13, 1, 0);
      v11 = *v10;
      *v10 = (uint64_t)&_swiftEmptyDictionarySingleton;
      swift_release(v3);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
      return result;
    }
LABEL_9:
    v5 = qword_1F9440;
    swift_retain(v3);
    if (v5 != -1)
      swift_once(&qword_1F9440, sub_FC24);
    v6 = (void *)qword_210028;
    v7 = swift_allocObject(&unk_1C9E50, 24, 7);
    swift_unknownObjectUnownedInit(v7 + 16, v2);
    v8 = type metadata accessor for NotificationObserver();
    swift_allocObject(v8, 56, 7);
    v3 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v6, v3, 1, (uint64_t)sub_52000, v7);
    goto LABEL_12;
  }
  return result;
}

void sub_4E1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  char *v4;
  uint64_t v5;
  void *v6;
  char v7[24];

  v2 = a2 + 16;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = &Strong[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics];
  swift_beginAccess(&Strong[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics], v7, 1, 0);
  v5 = *(_QWORD *)v4;
  *(_QWORD *)v4 = &_swiftEmptyDictionarySingleton;

  swift_bridgeObjectRelease(v5);
  v6 = (void *)swift_unknownObjectUnownedLoadStrong(v2);
  objc_msgSend(v6, "setNeedsLayout");

}

id sub_4E250(_QWORD *a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id result;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  char v29[24];

  v2 = v1;
  v5 = a1[2];
  v4 = (void *)a1[3];
  v6 = &v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents], v29, 0, 0);
  v7 = *(_QWORD *)v6;
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  swift_bridgeObjectRetain(v4);
  if (v8
    && (swift_bridgeObjectRetain(v4),
        swift_bridgeObjectRetain(v7),
        sub_139E60(v5, (uint64_t)v4),
        v10 = v9,
        swift_bridgeObjectRelease(v4),
        swift_bridgeObjectRelease(v7),
        (v10 & 1) != 0))
  {
    _StringGuts.grow(_:)(104);
    v24._object = (void *)0x8000000000186000;
    v24._countAndFlagsBits = 0xD000000000000064;
    String.append(_:)(v24);
    v25._countAndFlagsBits = v5;
    v25._object = v4;
    String.append(_:)(v25);
    v26._countAndFlagsBits = 11810;
    v26._object = (void *)0xE200000000000000;
    String.append(_:)(v26);
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "NowPlayingUI/TextStackView.swift", 32, 2, 135, 0);
    __break(1u);
  }
  else
  {
    v11 = swift_allocObject(&unk_1C9EF0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16, v2);
    v12 = a1[32];
    v13 = a1[33];
    a1[32] = sub_5263C;
    a1[33] = v11;
    sub_145A0(v12, v13);
    v14 = &v2[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents];
    swift_beginAccess(&v2[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents], &v28, 33, 0);
    v15 = swift_retain(a1);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v14 & 0xFFFFFFFFFFFFFF8));
    v16 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v14 & 0xFFFFFFFFFFFFFF8));
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, a1);
    specialized Array._endMutation()(v18);
    swift_endAccess(&v28);
    swift_beginAccess(v6, &v28, 33, 0);
    swift_retain(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v6);
    v27 = *(_QWORD *)v6;
    *(_QWORD *)v6 = 0x8000000000000000;
    sub_13D8C8((uint64_t)a1, v5, (uint64_t)v4, isUniquelyReferenced_nonNull_native);
    v20 = *(_QWORD *)v6;
    *(_QWORD *)v6 = v27;
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v20);
    swift_endAccess(&v28);
    v21 = &v2[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics];
    swift_beginAccess(&v2[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics], &v28, 1, 0);
    v22 = *(_QWORD *)v21;
    *(_QWORD *)v21 = &_swiftEmptyDictionarySingleton;
    return objc_msgSend(v2, "setNeedsLayout", swift_bridgeObjectRelease(v22).n128_f64[0]);
  }
  return result;
}

void sub_4E4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (uint64_t *)(Strong + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics);
    swift_beginAccess(Strong + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics, &v7, 1, 0);
    v6 = *v5;
    *v5 = (uint64_t)&_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v4, "setNeedsLayout");

  }
}

void sub_4E57C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  double v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  __int128 *v17;
  uint64_t i;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  unsigned __int8 *v57;
  _QWORD *v58;
  int v59;
  double v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  unsigned __int8 *v69;
  uint64_t *v70;
  int v71;
  uint64_t v72;
  _BYTE v73[24];
  _OWORD v74[8];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  char v86[24];
  char v87[24];
  uint64_t v88;
  objc_super v89;
  double v90[8];
  _QWORD v91[17];

  v1 = v0;
  v89.receiver = v0;
  v89.super_class = (Class)_s9StackViewCMa();
  objc_msgSendSuper2(&v89, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = objc_msgSend(v0, "traitCollection");
  v11 = UITraitCollection.safeDisplayScale.getter();

  objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
  sub_4F378(v90, v3, v5, v7, v9, v11);
  v71 = v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_isDisabled];
  v12 = &v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents], v87, 0, 0);
  v13 = swift_bridgeObjectRetain(*(_QWORD *)v12);
  sub_B70AC(v13);
  v88 = v14;
  v15 = *(_QWORD *)(*(_QWORD *)&v90[0] + 16);
  if (!v15)
  {
    v64 = v14;
    goto LABEL_55;
  }
  v69 = v1;
  v16 = (uint64_t *)&v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_recycledTextDrawingViews];
  v17 = (__int128 *)(*(_QWORD *)&v90[0] + 32);
  sub_5266C(v90);
  v70 = v16;
  swift_beginAccess(v16, v86, 0, 0);
  for (i = v15 - 1; ; --i)
  {
    v19 = *v17;
    v20 = v17[2];
    v76 = v17[1];
    v77 = v20;
    v75 = v19;
    v21 = v17[3];
    v22 = v17[4];
    v23 = v17[6];
    v80 = v17[5];
    v81 = v23;
    v78 = v21;
    v79 = v22;
    v24 = v17[7];
    v25 = v17[8];
    v26 = v17[10];
    v84 = v17[9];
    v85 = v26;
    v82 = v24;
    v83 = v25;
    v27 = v75;
    v29 = *((_QWORD *)&v76 + 1);
    v28 = v76;
    v30 = v20;
    if ((BYTE8(v20) & 1) == 0)
      break;
    sub_524D4((uint64_t)&v75);
    swift_retain(v27);
    sub_11B84((void *)v28, v29, v30, 1);
    v31 = objc_msgSend((id)v28, "string");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    sub_11BEC((void *)v28, v29, v30, 1);
    swift_bridgeObjectRelease(v34);
    v29 = v34;
    if ((v34 & 0x2000000000000000) != 0)
      goto LABEL_10;
    v28 = v32;
LABEL_7:
    v35 = *(unsigned __int8 **)(v27 + 272);
    if ((v28 & 0xFFFFFFFFFFFFLL) != 0)
      goto LABEL_8;
LABEL_11:
    if (v35)
    {
      v37 = v35;
      if ((objc_msgSend(v37, "isHidden") & 1) == 0)
      {
        objc_msgSend(v37, "setHidden:", 1);
        swift_release(v27);
        sub_52534((uint64_t)&v75);

        if (!i)
          goto LABEL_53;
        goto LABEL_46;
      }
      swift_release(v27);

    }
    else
    {
      swift_release(v27);
    }
    sub_52534((uint64_t)&v75);
    if (!i)
      goto LABEL_53;
LABEL_46:
    v17 += 11;
  }
  sub_524D4((uint64_t)&v75);
  swift_retain(v27);
  sub_11B84((void *)v28, v29, v30, 0);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v30);
  if ((v29 & 0x2000000000000000) == 0)
    goto LABEL_7;
LABEL_10:
  v35 = *(unsigned __int8 **)(v27 + 272);
  if ((v29 & 0xF00000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (v35)
  {
    v36 = v35;
    goto LABEL_38;
  }
  v38 = *v70;
  if (!((unint64_t)*v70 >> 62))
  {
    v39 = *(_QWORD *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*v70);
    if (v39)
      goto LABEL_16;
LABEL_36:
    swift_bridgeObjectRelease(v38);
    v52 = _s4ViewCMa();
    v53 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v52)), "init");
    v54 = (void *)objc_opt_self(UIColor);
    v50 = v53;
    v55 = objc_msgSend(v54, "clearColor");
    objc_msgSend(v50, "setBackgroundColor:", v55);

    objc_msgSend(v69, "addSubview:", v50);
    v42 = v50;
LABEL_37:

    v56 = *(void **)(v27 + 272);
    *(_QWORD *)(v27 + 272) = v42;
    v36 = v42;

    v35 = 0;
LABEL_38:
    v57 = v35;
    if (objc_msgSend(v36, "isHidden"))
      objc_msgSend(v36, "setHidden:", 0);
    v74[4] = v80;
    v74[5] = v81;
    v74[6] = v82;
    v74[7] = v83;
    v74[0] = v76;
    v74[1] = v77;
    v74[2] = v78;
    v74[3] = v79;
    UIScreen.Dimensions.size.getter(v74);
    sub_523EC((uint64_t)v74, (uint64_t)v91);
    sub_11BB4((uint64_t)&v76);
    v58 = sub_147500(v91);
    v59 = v36[OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View_isDisabled];
    v36[OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View_isDisabled] = v71;
    if (v71 != v59)
    {
      v60 = 1.0;
      if ((v71 & 1) != 0)
        UIInterfaceGetContentDisabledAlpha(v58, 1.0);
      objc_msgSend(v36, "setAlpha:", v60);
    }
    __asm { BR              X9 }
  }
  if (v38 < 0)
    v51 = *v70;
  else
    v51 = v38 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v70);
  v39 = _CocoaArrayWrapper.endIndex.getter(v51);
  if (!v39)
    goto LABEL_36;
LABEL_16:
  v40 = v39 - 1;
  if (__OFSUB__(v39, 1))
  {
    __break(1u);
    goto LABEL_57;
  }
  if ((v38 & 0xC000000000000001) == 0)
  {
    if ((v40 & 0x8000000000000000) == 0)
    {
      if (v40 < *(_QWORD *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8)))
      {
        v41 = *(id *)(v38 + 8 * v40 + 32);
        goto LABEL_21;
      }
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      JUMPOUT(0x4EDB4);
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v38);
LABEL_21:
  v42 = v41;
  swift_bridgeObjectRelease(v38);
  swift_beginAccess(v70, v74, 33, 0);
  v43 = *v70;
  if ((unint64_t)*v70 >> 62)
  {
    if (v43 < 0)
      v61 = *v70;
    else
      v61 = v43 & 0xFFFFFFFFFFFFFF8;
    v62 = v42;
    swift_bridgeObjectRetain(v43);
    v63 = _CocoaArrayWrapper.endIndex.getter(v61);
    swift_bridgeObjectRelease(v43);
    if (v63)
    {
LABEL_23:
      v46 = *v70;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v70);
      *v70 = v46;
      if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v46 < 0 || (v46 & 0x4000000000000000) != 0)
      {
        isUniquelyReferenced_nonNull_bridgeObject = sub_135E78(v46);
        v46 = isUniquelyReferenced_nonNull_bridgeObject;
        *v70 = isUniquelyReferenced_nonNull_bridgeObject;
      }
      v48 = *(_QWORD *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8));
      if (v48)
      {
        v49 = v48 - 1;
        v50 = *(id *)((char *)&stru_20.cmd + 8 * v49 + (v46 & 0xFFFFFFFFFFFFFF8));
        *(_QWORD *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8)) = v49;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
        swift_endAccess(v74);

        goto LABEL_37;
      }
      goto LABEL_59;
    }
  }
  else
  {
    v44 = *(_QWORD *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFF8));
    v45 = v42;
    if (v44)
      goto LABEL_23;
  }
  __break(1u);
LABEL_53:
  sub_52644(v90);
  v64 = v88;
  v1 = v69;
LABEL_55:
  v65 = &v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics], v74, 1, 0);
  v66 = *(_QWORD *)v65;
  *(_QWORD *)v65 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v66);
  swift_beginAccess(v65, v73, 33, 0);
  *(CGFloat *)&v75 = v3;
  *((CGFloat *)&v75 + 1) = v5;
  *(CGFloat *)&v76 = v7;
  *((CGFloat *)&v76 + 1) = v9;
  *(double *)&v77 = v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v65);
  v72 = *(_QWORD *)v65;
  *(_QWORD *)v65 = 0x8000000000000000;
  sub_13DA24((uint64_t)v90, (uint64_t)&v75, isUniquelyReferenced_nonNull_native);
  v68 = *(_QWORD *)v65;
  *(_QWORD *)v65 = v72;
  swift_bridgeObjectRelease(v68);
  swift_endAccess(v73);
  sub_4F0E4(v64);
  swift_bridgeObjectRelease(v64);
}

Swift::Int sub_4EF80()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = *((_QWORD *)v0 + 4);
  Hasher.init(_seed:)(v8, 0);
  sub_51AE4(v1, v2, v3, v4);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v5;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  return Hasher._finalize()();
}

void sub_4EFF8()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = *((_QWORD *)v0 + 4);
  sub_51AE4(v1, v2, v3, v4);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v5;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
}

Swift::Int sub_4F034(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  _QWORD v9[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = *((_QWORD *)v1 + 4);
  Hasher.init(_seed:)(v9, a1);
  sub_51AE4(v2, v3, v4, v5);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v6;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

uint64_t sub_4F0A8(CGRect *a1, CGRect *a2)
{
  double x;
  double v3;
  uint64_t result;

  x = a1[1].origin.x;
  v3 = a2[1].origin.x;
  LODWORD(result) = CGRectEqualToRect(*a1, *a2);
  if (x == v3)
    return result;
  else
    return 0;
}

void sub_4F0E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v2 = a1;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents);
  v30 = (_QWORD *)(v1 + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_recycledTextDrawingViews);
  swift_bridgeObjectRetain(a1);
  swift_beginAccess(v7, v32, 0, 0);
  v8 = 0;
  v9 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v11 = v10 | (v8 << 6);
LABEL_21:
    v15 = *v7;
    if (*(_QWORD *)(*v7 + 16))
    {
      v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v11);
      v17 = *v16;
      v18 = v16[1];
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v15);
      v19 = sub_139E60(v17, v18);
      if ((v20 & 1) != 0)
      {
        v21 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v19);
        swift_retain(v21);
        swift_bridgeObjectRelease(v18);
        *(_QWORD *)&v22 = swift_bridgeObjectRelease(v15).n128_u64[0];
        v23 = *(void **)(v21 + 272);
        if (v23)
        {
          v24 = v3;
          v25 = v2;
          *(_QWORD *)(v21 + 272) = 0;
          objc_msgSend(v23, "setHidden:", 1, v22);
          swift_beginAccess(v30, v31, 33, 0);
          v26 = v23;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
          v28 = *(_QWORD *)((char *)&dword_10 + (*v30 & 0xFFFFFFFFFFFFFF8));
          v27 = *(_QWORD *)((char *)&dword_18 + (*v30 & 0xFFFFFFFFFFFFFF8));
          if (v28 >= v27 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
          v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
          specialized Array._endMutation()(v29);
          swift_endAccess(v31);
          swift_release(v21);

          v2 = v25;
          v3 = v24;
        }
        else
        {
          swift_release(v21);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v15);
      }
    }
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 >= v9)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  ++v8;
  if (v13)
    goto LABEL_20;
  v8 = v12 + 1;
  if (v12 + 1 >= v9)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v8);
  if (v13)
    goto LABEL_20;
  v8 = v12 + 2;
  if (v12 + 2 >= v9)
    goto LABEL_28;
  v13 = *(_QWORD *)(v3 + 8 * v8);
  if (v13)
  {
LABEL_20:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_21;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
  {
LABEL_28:
    swift_release(v2);
    return;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v9)
      goto LABEL_28;
    v13 = *(_QWORD *)(v3 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

void sub_4F378(double *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, double a6@<D4>)
{
  unint64_t v6;
  unint64_t isEscapingClosureAtFileLocation;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  void *v42;
  uint64_t (*v43)(uint64_t, unint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  CGFloat v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  void *v76;
  id v77;
  double v78;
  id v79;
  double v80;
  double v81;
  double v82;
  void *v83;
  uint64_t v84;
  void *v85;
  _OWORD *v86;
  id v87;
  void (*v88)(uint64_t, uint64_t, uint64_t, _BYTE *);
  char v89;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  CGFloat v96;
  double v97;
  double v98;
  char *v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  unint64_t v105;
  unint64_t v106;
  __int128 v107;
  _OWORD *v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _QWORD *v112;
  CGPoint v113;
  CGPoint v114;
  CGPoint v115;
  CGPoint v116;
  CGPoint v117;
  __int128 v118;
  double v119;
  double v120;
  uint64_t v121;
  int v122;
  CGPoint *v123;
  CGPoint v124;
  CGPoint v125;
  CGPoint v126;
  CGPoint v127;
  CGPoint v128;
  CGPoint v129;
  CGPoint v130;
  CGSize v131;
  CGFloat v132;
  CGFloat v133;
  CGSize v134;
  double v135;
  CGFloat v136;
  double v137;
  uint64_t v138;
  CGPoint v139;
  CGPoint v140;
  CGPoint v141;
  CGPoint v142;
  CGPoint v143;
  __int128 v144;
  CGSize v145;
  __int128 v146;
  CGPoint v147;
  CGFloat x;
  double v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  double v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  CGPoint v162;
  CGPoint v163;
  CGPoint v164;
  CGPoint v165;
  __int128 v166;
  __int128 v167;
  CGSize v168;
  CGPoint v169;
  CGSize v170;
  char v171;
  CGFloat v172;
  CGFloat MinX;
  CGFloat MinY;
  double v175;
  unint64_t v176;
  unint64_t v177;
  _OWORD *v178;
  CGPoint v179;
  CGPoint v180;
  CGPoint v181;
  CGPoint v182;
  CGPoint v183;
  __int128 v184;
  __int128 v185;
  CGSize v186;
  double MaxX;
  double v188;
  double Width;
  double v190;
  double v191;
  uint64_t v192;
  CGPoint *v193;
  CGPoint v194;
  CGPoint v195;
  CGPoint v196;
  CGPoint v197;
  CGPoint v198;
  CGPoint v199;
  CGPoint v200;
  CGSize v201;
  CGFloat y;
  CGFloat v203;
  CGFloat v204;
  CGFloat height;
  CGFloat v206;
  double v207;
  double v208;
  double MaxY;
  uint64_t v210;
  CGPoint *v211;
  CGPoint v212;
  CGPoint v213;
  CGPoint v214;
  CGPoint v215;
  CGPoint v216;
  CGPoint v217;
  CGPoint v218;
  CGSize v219;
  CGPoint v220;
  CGSize v221;
  CGFloat v222;
  double v223;
  double v224;
  void *v225;
  void *v226;
  double v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  double v232;
  double v233;
  uint64_t v234;
  double v235;
  id v236;
  double v237;
  double v238;
  double v239;
  double v240;
  void *v241;
  double v242;
  void *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  int v248;
  uint64_t v249;
  void *v250;
  void *v251;
  double v252;
  int v253;
  void *v254;
  id v255;
  double v256;
  id v257;
  double v258;
  double v259;
  double v260;
  CGPoint v261;
  CGPoint v262;
  CGPoint v263;
  __int128 v264;
  __int128 v265;
  CGSize v266;
  CGPoint v267;
  uint64_t v268;
  uint64_t v269;
  __int128 v270;
  __int128 v271;
  CGPoint v272;
  CGPoint v273;
  CGPoint v274;
  CGPoint v275;
  CGPoint v276;
  CGPoint v277;
  CGFloat v278;
  CGFloat v279;
  CGFloat v280;
  double v281;
  double v282;
  double v283;
  double v284;
  CGFloat v285;
  double v286;
  double v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  double v294;
  double v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  double v300;
  uint64_t v301;
  uint64_t v302;
  double v303;
  _QWORD *v304;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v306;
  double *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  NSAttributedStringKey v312;
  _QWORD *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  double *v317;
  double v318;
  uint64_t v319;
  _OWORD *v320;
  CGFloat v321;
  CGFloat v322;
  char *v323;
  uint64_t v324;
  double v325;
  CGFloat v326;
  CGFloat v327;
  CGFloat v328;
  unint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void *v332;
  double v333;
  void (*v334)(uint64_t, uint64_t, uint64_t, _BYTE *);
  CGFloat v335;
  double v336;
  CGFloat v337;
  CGFloat v338;
  CGFloat v339;
  double v340;
  double v341;
  __int128 v342;
  CGPoint v343;
  CGPoint v344;
  CGPoint v345;
  CGPoint v346;
  CGPoint v347;
  CGPoint v348;
  __int128 v349;
  __int128 v350;
  CGPoint v351;
  CGSize v352;
  CGPoint v353;
  CGPoint v354;
  CGPoint v355;
  CGPoint v356;
  CGPoint v357;
  CGPoint v358;
  CGPoint v359;
  _OWORD v360[2];
  CGPoint v361;
  CGSize v362;
  _OWORD v363[8];
  _BYTE v364[104];
  double v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  _OWORD v374[6];
  double v375;
  _OWORD v376[8];
  _BYTE v377[128];
  uint64_t v378;
  _OWORD v379[8];
  uint64_t v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  _QWORD v389[5];
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  CGRect v396;
  CGRect v397;
  CGRect v398;
  CGRect v399;
  CGRect v400;
  CGRect v401;
  CGRect v402;
  CGRect v403;
  CGRect v404;
  CGRect v405;
  CGRect v406;
  CGRect v407;
  CGRect v408;
  CGRect v409;
  CGRect v410;
  CGRect v411;
  CGRect v412;
  CGRect v413;
  CGRect v414;
  CGRect v415;
  CGRect v416;
  CGRect v417;
  CGRect v418;
  CGRect v419;
  CGRect v420;
  CGRect v421;
  CGRect v422;
  CGRect v423;
  CGRect v424;

  isEscapingClosureAtFileLocation = v6;
  v317 = a1;
  v13 = type metadata accessor for CGRect.LayoutAxis(0);
  v315 = *(_QWORD *)(v13 - 8);
  v316 = v13;
  __chkstk_darwin(v13);
  v314 = (char *)&v310 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD0);
  __chkstk_darwin(v15);
  v323 = (char *)&v310 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)(v6 + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics);
  swift_beginAccess(v17, &v380, 0, 0);
  v313 = v17;
  v18 = *v17;
  *(CGFloat *)v389 = a2;
  v321 = a3;
  v322 = a5;
  *(CGFloat *)&v389[1] = a3;
  *(CGFloat *)&v389[2] = a4;
  *(CGFloat *)&v389[3] = a5;
  v325 = a6;
  *(double *)&v389[4] = a6;
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain(v18);
    v19 = sub_13A08C((uint64_t)v389);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(v18 + 56) + (v19 << 6);
      v22 = *(double *)v21;
      v23 = *(double *)(v21 + 8);
      v24 = *(double *)(v21 + 16);
      v26 = *(double *)(v21 + 24);
      v25 = *(double *)(v21 + 32);
      v27 = *(double *)(v21 + 40);
      v28 = *(double *)(v21 + 48);
      v29 = *(double *)(v21 + 56);
      swift_bridgeObjectRetain(*(_QWORD *)v21);
      swift_bridgeObjectRelease(v18);
LABEL_98:
      v307 = v317;
      *v317 = v22;
      v307[1] = v23;
      v307[2] = v24;
      v307[3] = v26;
      v307[4] = v25;
      v307[5] = v27;
      v307[6] = v28;
      v307[7] = v29;
      return;
    }
    swift_bridgeObjectRelease(v18);
  }
  v25 = 0.0;
  v324 = *(_QWORD *)(isEscapingClosureAtFileLocation
                   + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache);
  if (!v324)
  {
    v138 = 0;
    v319 = 0;
    v29 = 0.0;
    v22 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    v26 = 0.0;
    v28 = 0.0;
    v27 = 0.0;
    v24 = 0.0;
    v23 = 0.0;
LABEL_97:
    v353.x = v22;
    v353.y = v23;
    v354.x = v24;
    v354.y = v26;
    v355.x = v25;
    v355.y = v27;
    v356.x = v28;
    v356.y = v29;
    v304 = v313;
    swift_beginAccess(v313, &v342, 33, 0);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v22, 2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v304);
    *(_QWORD *)&v379[0] = *v304;
    *v304 = 0x8000000000000000;
    sub_13DA24((uint64_t)&v353, (uint64_t)v389, isUniquelyReferenced_nonNull_native);
    v306 = *v304;
    *v304 = *(_QWORD *)&v379[0];
    swift_bridgeObjectRelease(v306);
    swift_endAccess(&v342);
    swift_bridgeObjectRelease(*(_QWORD *)&v22);
    sub_145A0(v138, v319);
    goto LABEL_98;
  }
  sub_523D4(v379);
  v30 = (uint64_t *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents);
  swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents, &v378, 0, 0);
  v31 = *v30;
  if ((unint64_t)*v30 >> 62)
  {
LABEL_102:
    if (v31 < 0)
      v309 = v31;
    else
      v309 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_retain(v324);
    swift_bridgeObjectRetain(v31);
    v32 = _CocoaArrayWrapper.endIndex.getter(v309);
  }
  else
  {
    v32 = *(_QWORD *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFF8));
    swift_retain(v324);
    swift_bridgeObjectRetain(v31);
  }
  v333 = a2;
  v311 = isEscapingClosureAtFileLocation;
  if (!v32)
  {
    swift_bridgeObjectRelease(v31);
    sub_523EC((uint64_t)v379, (uint64_t)v377);
    v334 = 0;
    v335 = 0.0;
    v319 = 0;
    v34 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    v121 = _swiftEmptyArrayStorage[2];
    if (!v121)
    {
LABEL_65:
      sub_5244C((uint64_t)v377);
      swift_release(v324);
      v26 = 0.0;
      v28 = 0.0;
      v27 = 0.0;
      v24 = 0.0;
      v22 = v34;
      v23 = 0.0;
LABEL_96:
      v138 = (uint64_t)v334;
      v29 = v335;
      goto LABEL_97;
    }
LABEL_60:
    v122 = *(unsigned __int8 *)(v311 + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_verticalAlignment);
    v338 = v34;
    if (!v122)
    {
      v139 = *(CGPoint *)(*(_QWORD *)&v34 + 32);
      v140 = *(CGPoint *)(*(_QWORD *)&v34 + 64);
      v141 = *(CGPoint *)(*(_QWORD *)&v34 + 80);
      v142 = *(CGPoint *)(*(_QWORD *)&v34 + 112);
      v357 = *(CGPoint *)(*(_QWORD *)&v34 + 96);
      v358 = v142;
      v355 = v140;
      v356 = v141;
      v143 = *(CGPoint *)(*(_QWORD *)&v34 + 128);
      v144 = *(_OWORD *)(*(_QWORD *)&v34 + 144);
      v145 = *(CGSize *)(*(_QWORD *)&v34 + 192);
      v146 = *(_OWORD *)(*(_QWORD *)&v34 + 160);
      v361 = *(CGPoint *)(*(_QWORD *)&v34 + 176);
      v362 = v145;
      v360[0] = v144;
      v360[1] = v146;
      v359 = v143;
      v147 = *(CGPoint *)(*(_QWORD *)&v34 + 48);
      v353 = v139;
      v354 = v147;
      x = v139.x;
      v149 = *(double *)&v144;
      v151 = *(_OWORD *)(*(_QWORD *)&v139.x + 64);
      v150 = *(_OWORD *)(*(_QWORD *)&v139.x + 80);
      v152 = *(_OWORD *)(*(_QWORD *)&x + 96);
      v376[5] = *(_OWORD *)(*(_QWORD *)&x + 112);
      v376[4] = v152;
      v376[2] = v151;
      v376[3] = v150;
      v153 = *(_OWORD *)(*(_QWORD *)&x + 48);
      v376[0] = *(_OWORD *)(*(_QWORD *)&x + 32);
      v376[1] = v153;
      v154 = *(_QWORD *)(*(_QWORD *)&x + 128);
      v155 = *(_QWORD *)(*(_QWORD *)&x + 136);
      sub_524D4((uint64_t)&v353);
      swift_retain(*(_QWORD *)&x);
      sub_11D30(v376, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      swift_bridgeObjectRetain(v155);
      v156 = sub_FD4F8(v154, v155);
      swift_bridgeObjectRelease(v155);
      v157 = sub_11D30(v376, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
      v137 = CGFloat.ceilingValue(scale:)(v157, v325, v156 - v149);
      swift_release(*(_QWORD *)&x);
LABEL_67:
      sub_52534((uint64_t)&v353);
      v158 = *(_QWORD *)(*(_QWORD *)&v34 + 16);
      if (v158)
      {
LABEL_68:
        swift_bridgeObjectRetain(*(_QWORD *)&v34);
        v159 = v158 - 1;
        v22 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
        v160 = 32;
        v26 = 0.0;
        while (1)
        {
          v161 = *(_OWORD *)(*(_QWORD *)&v34 + v160);
          v162 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 32);
          v343 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 16);
          v344 = v162;
          v342 = v161;
          v163 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 48);
          v164 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 64);
          v165 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 96);
          v347 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 80);
          v348 = v165;
          v345 = v163;
          v346 = v164;
          v166 = *(_OWORD *)(*(_QWORD *)&v34 + v160 + 112);
          v167 = *(_OWORD *)(*(_QWORD *)&v34 + v160 + 128);
          v168 = *(CGSize *)(*(_QWORD *)&v34 + v160 + 160);
          v351 = *(CGPoint *)(*(_QWORD *)&v34 + v160 + 144);
          v352 = v168;
          v349 = v166;
          v350 = v167;
          v169 = v351;
          v170 = v168;
          v171 = BYTE8(v342);
          v172 = *(double *)&v342;
          sub_524D4((uint64_t)&v342);
          v411.origin = v169;
          v411.size = v170;
          MinX = CGRectGetMinX(v411);
          v412.origin = v169;
          v412.size = v170;
          MinY = CGRectGetMinY(v412);
          v353.x = v172;
          v175 = v137 + MinY;
          LOBYTE(v353.y) = v171;
          v358 = v347;
          v359 = v348;
          v360[0] = v349;
          v360[1] = v350;
          v354 = v343;
          v355 = v344;
          v356 = v345;
          v357 = v346;
          v361.x = MinX;
          v361.y = v137 + MinY;
          v362 = v170;
          sub_524D4((uint64_t)&v342);
          sub_524D4((uint64_t)&v353);
          if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v22) & 1) == 0)
            v22 = COERCE_DOUBLE(sub_135220(0, *(_QWORD *)(*(_QWORD *)&v22 + 16) + 1, 1, *(_QWORD **)&v22));
          v177 = *(_QWORD *)(*(_QWORD *)&v22 + 16);
          v176 = *(_QWORD *)(*(_QWORD *)&v22 + 24);
          if (v177 >= v176 >> 1)
            v22 = COERCE_DOUBLE(sub_135220((_QWORD *)(v176 > 1), v177 + 1, 1, *(_QWORD **)&v22));
          *(_QWORD *)(*(_QWORD *)&v22 + 16) = v177 + 1;
          v178 = (_OWORD *)(*(_QWORD *)&v22 + 176 * v177);
          v179 = v353;
          v180 = v355;
          v178[3] = v354;
          v178[4] = v180;
          v178[2] = v179;
          v181 = v356;
          v182 = v357;
          v183 = v359;
          v178[7] = v358;
          v178[8] = v183;
          v178[5] = v181;
          v178[6] = v182;
          v184 = v360[0];
          v185 = v360[1];
          v186 = v362;
          v178[11] = v361;
          v178[12] = v186;
          v178[9] = v184;
          v178[10] = v185;
          v34 = v338;
          if (((1 << v171) & 0x15) != 0)
          {
            v413.origin.x = MinX;
            v413.origin.y = v175;
            v413.size = v170;
            MaxX = CGRectGetMaxX(v413);
            v414.origin.x = v333;
            v414.origin.y = v321;
            v414.size.height = v322;
            v414.size.width = a4;
            v188 = CGRectGetMinX(v414);
            sub_52534((uint64_t)&v342);
            sub_52534((uint64_t)&v353);
            Width = MaxX - v188;
          }
          else if (((1 << v171) & 0x22) != 0)
          {
            v415.origin.x = v333;
            v415.origin.y = v321;
            v415.size.height = v322;
            v415.size.width = a4;
            v190 = CGRectGetMaxX(v415);
            v416.origin.x = MinX;
            v416.origin.y = v175;
            v416.size = v170;
            v191 = CGRectGetMinX(v416);
            sub_52534((uint64_t)&v342);
            sub_52534((uint64_t)&v353);
            Width = v190 - v191;
          }
          else
          {
            v417.origin.x = MinX;
            v417.origin.y = v175;
            v417.size = v170;
            Width = CGRectGetWidth(v417);
            sub_52534((uint64_t)&v342);
            sub_52534((uint64_t)&v353);
          }
          if (v26 <= Width)
            v26 = Width;
          if (!v159)
            break;
          --v159;
          v160 += 176;
        }
        swift_bridgeObjectRelease(*(_QWORD *)&v34);
        if (*(_QWORD *)(*(_QWORD *)&v22 + 16))
        {
LABEL_83:
          v27 = *(double *)(*(_QWORD *)&v22 + 144);
          v23 = v27 + CGRectGetMinY(*(CGRect *)(*(_QWORD *)&v22 + 176));
          v192 = *(_QWORD *)(*(_QWORD *)&v22 + 16);
          if (v192)
          {
            v193 = (CGPoint *)(*(_QWORD *)&v22 + 176 * v192);
            v194 = v193[-9];
            v195 = v193[-7];
            v354 = v193[-8];
            v355 = v195;
            v353 = v194;
            v196 = v193[-6];
            v197 = v193[-5];
            v198 = v193[-3];
            v358 = v193[-4];
            v359 = v198;
            v356 = v196;
            v357 = v197;
            v199 = v193[-2];
            v200 = v193[-1];
            v201 = (CGSize)v193[1];
            v361 = *v193;
            v362 = v201;
            v360[0] = v199;
            v360[1] = v200;
            y = v361.y;
            v203 = v201.width;
            v204 = a4;
            height = v201.height;
            v206 = v361.x;
            v341 = v23;
            v207 = v199.y;
            sub_524D4((uint64_t)&v353);
            v418.origin.x = v333;
            v418.origin.y = v321;
            v418.size.height = v322;
            v418.size.width = v204;
            v208 = CGRectGetHeight(v418);
            v419.origin.x = v206;
            v419.origin.y = y;
            v419.size.width = v203;
            v419.size.height = height;
            v28 = v207;
            v23 = v341;
            MaxY = CGRectGetMaxY(v419);
            sub_52534((uint64_t)&v353);
            v24 = v28 + v208 - MaxY;
            v210 = *(_QWORD *)(*(_QWORD *)&v34 + 16);
            if (!v210)
            {
LABEL_85:
              sub_5244C((uint64_t)v377);
              swift_bridgeObjectRelease(*(_QWORD *)&v34);
              swift_release(v324);
              v25 = 0.0;
              goto LABEL_96;
            }
LABEL_95:
            v261 = *(CGPoint *)(*(_QWORD *)&v34 + 80);
            v262 = *(CGPoint *)(*(_QWORD *)&v34 + 96);
            v263 = *(CGPoint *)(*(_QWORD *)&v34 + 128);
            v347 = *(CGPoint *)(*(_QWORD *)&v34 + 112);
            v348 = v263;
            v345 = v261;
            v346 = v262;
            v264 = *(_OWORD *)(*(_QWORD *)&v34 + 144);
            v265 = *(_OWORD *)(*(_QWORD *)&v34 + 160);
            v266 = *(CGSize *)(*(_QWORD *)&v34 + 192);
            v351 = *(CGPoint *)(*(_QWORD *)&v34 + 176);
            v352 = v266;
            v349 = v264;
            v350 = v265;
            v267 = *(CGPoint *)(*(_QWORD *)&v34 + 48);
            v342 = *(_OWORD *)(*(_QWORD *)&v34 + 32);
            v343 = v267;
            v344 = *(CGPoint *)(*(_QWORD *)&v34 + 64);
            v338 = v266.width;
            v339 = v351.y;
            v268 = v342;
            v336 = v351.x;
            v337 = v266.height;
            v340 = *(double *)&v264;
            v269 = *(_QWORD *)&v34 + 32 + 176 * v210;
            v271 = *(_OWORD *)(v269 - 64);
            v270 = *(_OWORD *)(v269 - 48);
            v272 = *(CGPoint *)(v269 - 32);
            v362 = *(CGSize *)(v269 - 16);
            v274 = *(CGPoint *)(v269 - 160);
            v273 = *(CGPoint *)(v269 - 144);
            v353 = *(CGPoint *)(v269 - 176);
            v354 = v274;
            v355 = v273;
            v275 = *(CGPoint *)(v269 - 80);
            v277 = *(CGPoint *)(v269 - 128);
            v276 = *(CGPoint *)(v269 - 112);
            v358 = *(CGPoint *)(v269 - 96);
            v359 = v275;
            v356 = v277;
            v357 = v276;
            v360[1] = v270;
            v361 = v272;
            v360[0] = v271;
            v278 = v272.y;
            v333 = v362.height;
            v279 = v362.width;
            v280 = v353.x;
            v281 = v24;
            v282 = v27;
            v283 = v23;
            v284 = v28;
            v285 = v272.x;
            v341 = *((double *)&v271 + 1);
            sub_524D4((uint64_t)&v342);
            sub_524D4((uint64_t)&v353);
            v422.origin.x = v285;
            v28 = v284;
            v23 = v283;
            v27 = v282;
            v24 = v281;
            v422.origin.y = v278;
            v422.size.width = v279;
            v422.size.height = v333;
            v286 = CGRectGetMaxY(v422);
            v423.origin.x = v336;
            v423.size.height = v337;
            v423.size.width = v338;
            v423.origin.y = v339;
            v287 = v286 - CGRectGetMinY(v423) + 0.0;
            v288 = *(_OWORD *)(v268 + 64);
            v289 = *(_OWORD *)(v268 + 80);
            v290 = *(_OWORD *)(v268 + 112);
            v374[4] = *(_OWORD *)(v268 + 96);
            v374[5] = v290;
            v374[2] = v288;
            v374[3] = v289;
            v291 = *(_OWORD *)(v268 + 48);
            v374[0] = *(_OWORD *)(v268 + 32);
            v374[1] = v291;
            v292 = *(_QWORD *)(v268 + 128);
            v293 = *(_QWORD *)(v268 + 136);
            swift_retain(v268);
            sub_11D30(v374, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
            swift_bridgeObjectRetain(v293);
            v294 = sub_FD4F8(v292, v293);
            swift_bridgeObjectRelease(v293);
            sub_11D30(v374, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
            v295 = v287 + v294 - v340;
            v296 = *(_OWORD *)(*(_QWORD *)&v280 + 64);
            v297 = *(_OWORD *)(*(_QWORD *)&v280 + 80);
            v298 = *(_OWORD *)(*(_QWORD *)&v280 + 112);
            v370 = *(_OWORD *)(*(_QWORD *)&v280 + 96);
            v371 = v298;
            v368 = v296;
            v369 = v297;
            v299 = *(_OWORD *)(*(_QWORD *)&v280 + 48);
            v366 = *(_OWORD *)(*(_QWORD *)&v280 + 32);
            v367 = v299;
            v300 = v34;
            v301 = *(_QWORD *)(*(_QWORD *)&v280 + 128);
            v302 = *(_QWORD *)(*(_QWORD *)&v280 + 136);
            swift_retain(*(_QWORD *)&v280);
            sub_11D30(&v366, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
            swift_bridgeObjectRetain(v302);
            v303 = sub_FD5D4(v301, v302);
            sub_5244C((uint64_t)v377);
            swift_release(v268);
            swift_release(*(_QWORD *)&v280);
            sub_52534((uint64_t)&v342);
            swift_bridgeObjectRelease(v302);
            swift_release(v324);
            sub_11D30(&v366, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
            sub_52534((uint64_t)&v353);
            swift_bridgeObjectRelease(*(_QWORD *)&v300);
            v25 = v295 + v303 - v341;
            goto LABEL_96;
          }
LABEL_94:
          v24 = 0.0;
          v28 = 0.0;
          v210 = *(_QWORD *)(*(_QWORD *)&v34 + 16);
          if (!v210)
            goto LABEL_85;
          goto LABEL_95;
        }
LABEL_93:
        v23 = 0.0;
        v27 = 0.0;
        goto LABEL_94;
      }
LABEL_92:
      v22 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
      v26 = 0.0;
      if (_swiftEmptyArrayStorage[2])
        goto LABEL_83;
      goto LABEL_93;
    }
    if (v122 == 1)
    {
      v123 = (CGPoint *)(*(_QWORD *)&v34 + 176 * v121);
      v124 = v123[-9];
      v125 = v123[-7];
      v354 = v123[-8];
      v355 = v125;
      v353 = v124;
      v126 = v123[-6];
      v127 = v123[-5];
      v128 = v123[-3];
      v358 = v123[-4];
      v359 = v128;
      v356 = v126;
      v357 = v127;
      v129 = v123[-2];
      v130 = v123[-1];
      v131 = (CGSize)v123[1];
      v361 = *v123;
      v362 = v131;
      v360[0] = v129;
      v360[1] = v130;
      v133 = v361.y;
      v132 = v361.x;
      v134 = v131;
      sub_524D4((uint64_t)&v353);
      v409.origin.x = a2;
      v409.origin.y = v321;
      v409.size.height = v322;
      v409.size.width = a4;
      v135 = CGRectGetMaxY(v409);
      v410.origin.x = v132;
      v410.origin.y = v133;
      v410.size = v134;
      v136 = CGRectGetMaxY(v410);
      v137 = CGFloat.roundValue(scale:)(v325, (v135 - v136) * 0.5);
      goto LABEL_67;
    }
    v211 = (CGPoint *)(*(_QWORD *)&v34 + 176 * v121);
    v212 = v211[-9];
    v213 = v211[-7];
    v354 = v211[-8];
    v355 = v213;
    v353 = v212;
    v214 = v211[-6];
    v215 = v211[-5];
    v216 = v211[-3];
    v358 = v211[-4];
    v359 = v216;
    v356 = v214;
    v357 = v215;
    v217 = v211[-2];
    v218 = v211[-1];
    v219 = (CGSize)v211[1];
    v361 = *v211;
    v362 = v219;
    v360[0] = v217;
    v360[1] = v218;
    v220 = v361;
    v221 = v219;
    v222 = v353.x;
    swift_retain(*(_QWORD *)&v353.x);
    sub_524D4((uint64_t)&v353);
    v420.origin.x = a2;
    v420.origin.y = v321;
    v420.size.height = v322;
    v420.size.width = a4;
    v223 = CGRectGetMaxY(v420);
    v421.origin = v220;
    v421.size = v221;
    v224 = v223 - CGRectGetMaxY(v421);
    v226 = *(void **)(*(_QWORD *)&v222 + 32);
    v225 = *(void **)(*(_QWORD *)&v222 + 40);
    v228 = *(void **)(*(_QWORD *)&v222 + 48);
    v227 = *(double *)(*(_QWORD *)&v222 + 56);
    v230 = *(uint64_t *)(*(_QWORD *)&v222 + 64);
    v229 = *(uint64_t *)(*(_QWORD *)&v222 + 72);
    v231 = *(_QWORD *)(*(_QWORD *)&v222 + 80);
    v232 = *(double *)(*(_QWORD *)&v222 + 88);
    v233 = *(double *)(*(_QWORD *)&v222 + 120);
    v234 = *(_QWORD *)(*(_QWORD *)&v222 + 136);
    v340 = *(double *)&v229;
    v341 = v227;
    if ((v231 & 0x80000000) != 0)
    {
      v248 = v231;
      v330 = *(_QWORD *)(*(_QWORD *)&v222 + 128);
      v249 = v234;
      swift_bridgeObjectRetain(v234);
      v332 = v226;
      v250 = v226;
      v336 = *(double *)&v225;
      v337 = *(double *)&v230;
      v251 = v225;
      v252 = v341;
      v253 = v248;
      v339 = v232;
      sub_10B0C(v250, v251, v228, *(uint64_t *)&v341, v230, v229, v248);
      swift_retain(*(_QWORD *)&v252);
      v254 = (void *)((uint64_t (*)(uint64_t, uint64_t))v228)(v330, v249);
      v255 = objc_msgSend(v254, "MTMPU_tallestFontFromAttributes");

      if (!v255)
      {
        swift_release(*(_QWORD *)&v222);
        v308 = *(_QWORD *)&v341;
        swift_release(*(_QWORD *)&v341);
        sub_52534((uint64_t)&v353);
        swift_bridgeObjectRelease(v249);
        sub_10B64(v332, *(void **)&v336, v228, v308, *(uint64_t *)&v337, *(uint64_t *)&v340, v253);
        v260 = v233 + 0.0;
LABEL_91:
        v137 = v224 - v260;
        v34 = v338;
        v158 = *(_QWORD *)(*(_QWORD *)&v338 + 16);
        if (v158)
          goto LABEL_68;
        goto LABEL_92;
      }
      objc_msgSend(v255, "_scaledValueForValue:", v233);
      v238 = v256;
      v257 = v255;
      objc_msgSend(v257, "descender");
      v240 = v258;
      swift_release(*(_QWORD *)&v222);

      v259 = v341;
      swift_release(*(_QWORD *)&v341);
      sub_52534((uint64_t)&v353);
      swift_bridgeObjectRelease(v249);
      v241 = v332;
      v242 = v336;
      v245 = *(_QWORD *)&v337;
      v243 = v228;
      v244 = *(_QWORD *)&v259;
      v246 = *(_QWORD *)&v340;
      v247 = v253;
    }
    else
    {
      v331 = v234;
      swift_bridgeObjectRetain(v234);
      v235 = v341;
      sub_10B0C(v226, v225, v228, *(uint64_t *)&v341, v230, v229, v231);
      v236 = v226;
      objc_msgSend(v236, "scaledValueForValue:", v233);
      v238 = v237;
      objc_msgSend(v236, "preferredFontDescender");
      v240 = v239;
      swift_release(*(_QWORD *)&v222);

      sub_52534((uint64_t)&v353);
      swift_bridgeObjectRelease(v331);
      v241 = v226;
      v242 = *(double *)&v225;
      v243 = v228;
      v244 = *(_QWORD *)&v235;
      v245 = v230;
      v246 = *(_QWORD *)&v340;
      v247 = v231;
    }
    sub_10B64(v241, *(void **)&v242, v243, v244, v245, v246, v247);
    v260 = v238 + v240;
    goto LABEL_91;
  }
  v331 = v32 - 1;
  if (v32 >= 1)
  {
    v329 = isEscapingClosureAtFileLocation
         + OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_exclusionRectangle;
    v332 = (void *)(v31 & 0xC000000000000001);
    sub_523EC((uint64_t)v379, (uint64_t)&v342);
    v334 = 0;
    v335 = 0.0;
    v319 = 0;
    v33 = 0.0;
    v312 = NSParagraphStyleAttributeName;
    v320 = (_OWORD *)((char *)&v353.x + 7);
    v34 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    v35 = 0.0;
    v36 = 0.0;
    v336 = 0.0;
    v37 = v322;
    v341 = v321;
    v330 = v31;
    while (1)
    {
      v339 = v33;
      if (v332)
      {
        v38 = specialized _ArrayBuffer._getElementSlowPath(_:)(*(_QWORD *)&v33, v31);
      }
      else
      {
        v38 = *(_QWORD *)(v31 + 8 * *(_QWORD *)&v33 + 32);
        swift_retain(v38);
      }
      v39 = *(_OWORD *)(v38 + 48);
      v390 = *(_OWORD *)(v38 + 32);
      v391 = v39;
      v40 = *(_OWORD *)(v38 + 80);
      v392 = *(_OWORD *)(v38 + 64);
      v393 = v40;
      v41 = *(_OWORD *)(v38 + 112);
      v394 = *(_OWORD *)(v38 + 96);
      v395 = v41;
      v42 = (void *)v390;
      v337 = *((double *)&v391 + 1);
      v43 = (uint64_t (*)(uint64_t, unint64_t))v391;
      v31 = v40;
      v44 = *(_QWORD *)(v38 + 128);
      isEscapingClosureAtFileLocation = *(_QWORD *)(v38 + 136);
      v340 = v37;
      if ((v31 & ~((int)v31 >> 31)) != 0)
      {
        *(_QWORD *)&v353.x = v44;
        *(_QWORD *)&v353.y = isEscapingClosureAtFileLocation;
        if ((v40 & ~((int)v40 >> 31)) == 1)
        {
          sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
          sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
          v45 = swift_bridgeObjectRetain(isEscapingClosureAtFileLocation);
          v46 = (uint64_t)v323;
          static Locale.current.getter(v45);
          v47 = type metadata accessor for Locale(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
          v48 = sub_11CEC();
          v49 = StringProtocol.uppercased(with:)(v46, &type metadata for String, v48);
        }
        else
        {
          sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
          sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
          v51 = swift_bridgeObjectRetain(isEscapingClosureAtFileLocation);
          v46 = (uint64_t)v323;
          static Locale.current.getter(v51);
          v52 = type metadata accessor for Locale(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v46, 0, 1, v52);
          v53 = sub_11CEC();
          v49 = StringProtocol.lowercased(with:)(v46, &type metadata for String, v53);
        }
        v44 = v49;
        v54 = v50;
        sub_9944(v46, &qword_1FCAD0);
        swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
        isEscapingClosureAtFileLocation = v54;
      }
      else
      {
        sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
        sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
        swift_bridgeObjectRetain(isEscapingClosureAtFileLocation);
      }
      v55 = HIBYTE(isEscapingClosureAtFileLocation) & 0xF;
      if ((isEscapingClosureAtFileLocation & 0x2000000000000000) == 0)
        v55 = v44 & 0xFFFFFFFFFFFFLL;
      if (v55)
      {
        v326 = v36;
        v327 = v35;
        v328 = v25;
        v56 = a4;
        v57 = a2;
        if ((*(_BYTE *)(v329 + 32) & 1) == 0)
        {
          v59 = *(double *)(v329 + 16);
          v58 = *(double *)(v329 + 24);
          v61 = *(double *)v329;
          v60 = *(double *)(v329 + 8);
          v396.origin.x = *(CGFloat *)v329;
          v396.origin.y = v60;
          v396.size.width = v59;
          v396.size.height = v58;
          v424.origin.x = a2;
          v424.size.height = v340;
          v424.origin.y = v341;
          v424.size.width = a4;
          v397 = CGRectIntersection(v396, v424);
          v56 = a4;
          v57 = a2;
          if (!CGRectIsNull(v397))
          {
            v398.origin.x = v61;
            v398.origin.y = v60;
            v398.size.width = v59;
            v398.size.height = v58;
            v318 = CGRectGetMinX(v398);
            v399.origin.x = a2;
            v63 = v340;
            v62 = v341;
            v399.origin.y = v341;
            v399.size.width = a4;
            v399.size.height = v340;
            v64 = v318 - CGRectGetMinX(v399);
            v400.origin.x = a2;
            v400.origin.y = v62;
            v56 = v64;
            v400.size.width = a4;
            v400.size.height = v63;
            v65 = CGRectGetMaxX(v400);
            v401.origin.x = v61;
            v401.origin.y = v60;
            v401.size.width = v59;
            v401.size.height = v58;
            v66 = v65 - CGRectGetMaxX(v401);
            v57 = a2;
            if (v66 >= v56)
            {
              v402.origin.x = a2;
              v402.size.height = v340;
              v402.origin.y = v341;
              v402.size.width = a4;
              v57 = CGRectGetWidth(v402) - v66 + a2;
              v56 = v66;
            }
          }
        }
        v338 = v34;
        if ((v31 & 0x80000000) != 0)
        {
          v75 = v337;
          swift_retain(*(_QWORD *)&v337);
          v76 = (void *)v43(v44, isEscapingClosureAtFileLocation);
          v77 = objc_msgSend(v76, "MTMPU_tallestFontFromAttributes");

          a2 = v333;
          v73 = v340;
          if (v77)
          {
            objc_msgSend(v77, "_scaledValueForValue:", *(double *)&v395);
            v70 = v78;
            v79 = v77;
            objc_msgSend(v79, "ascender");
            v72 = v80;

            swift_release(*(_QWORD *)&v75);
          }
          else
          {
            swift_release(*(_QWORD *)&v75);
            v72 = 0.0;
            v70 = *(double *)&v395;
          }
        }
        else
        {
          v67 = *(double *)&v395;
          sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
          v68 = v42;
          objc_msgSend(v68, "scaledValueForValue:", v67);
          v70 = v69;
          objc_msgSend(v68, "preferredFontAscender");
          v72 = v71;

          sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
          a2 = v333;
          v73 = v340;
        }
        v81 = CGFloat.roundValue(scale:)(v325, v70 - v72);
        sub_523EC((uint64_t)&v342, (uint64_t)v374);
        if (sub_52434((uint64_t)v374) == 1)
          v25 = v73;
        else
          v25 = v73 + v375 - v81;
        v82 = *(double *)(v324 + 32);
        v83 = *(void **)(v324 + 48);
        v84 = *(_QWORD *)(v324 + 56);
        v85 = *(void **)(v324 + 64);
        v86 = *(_OWORD **)(v324 + 72);
        v87 = *(id *)(v324 + 40);
        sub_10BBC(v44, isEscapingClosureAtFileLocation, COERCE_DOUBLE(&v390), v87, v83, v84, v85, v86, &v381, v56, v25, v82);
        v370 = v385;
        v371 = v386;
        v372 = v387;
        v373 = v388;
        v366 = v381;
        v367 = v382;
        v368 = v383;
        v369 = v384;
        swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);

        if (__OFADD__(*(_QWORD *)&v335, (_QWORD)v388))
        {
          __break(1u);
LABEL_101:
          __break(1u);
          goto LABEL_102;
        }
        *(_QWORD *)&v335 += v388;
        if ((v31 & 0x80000000) != 0)
        {
          v364[0] = 0;
          if (BYTE8(v382) == 1)
          {
            v337 = *(double *)&v382;
            v318 = *((double *)&v381 + 1);
            v90 = (void *)v381;
            v91 = (id)v381;
            v92 = objc_msgSend(v91, "length");
            v93 = swift_allocObject(&unk_1C9E78, 24, 7);
            *(_QWORD *)(v93 + 16) = v364;
            sub_145A0((uint64_t)v334, v319);
            v94 = swift_allocObject(&unk_1C9EA0, 32, 7);
            v31 = (uint64_t)sub_525A4;
            *(_QWORD *)(v94 + 16) = sub_525A4;
            *(_QWORD *)(v94 + 24) = v93;
            *(_QWORD *)&v355.x = sub_525BC;
            *(_QWORD *)&v355.y = v94;
            *(_QWORD *)&v353.x = _NSConcreteStackBlock;
            *(_QWORD *)&v353.y = 1107296256;
            *(_QWORD *)&v354.x = sub_1472A0;
            *(_QWORD *)&v354.y = &block_descriptor_6;
            v95 = _Block_copy(&v353);
            v96 = v355.y;
            swift_retain(v94);
            *(_QWORD *)&v97 = swift_release(*(_QWORD *)&v96).n128_u64[0];
            objc_msgSend(v91, "enumerateAttribute:inRange:options:usingBlock:", v312, 0, v92, 0, v95, v97);
            sub_11BEC(v90, *(uint64_t *)&v318, *(uint64_t *)&v337, 1);
            _Block_release(v95);
            isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v94, "", 122, 464, 192, 1);
            swift_release(v94);
            if ((isEscapingClosureAtFileLocation & 1) != 0)
              goto LABEL_101;
            v89 = v364[0];
            v88 = sub_525A4;
            v319 = v93;
          }
          else
          {
            v89 = 0;
            v88 = v334;
          }
          v31 = v330;
          v34 = v338;
          v74 = v339;
        }
        else
        {
          v88 = v334;
          v34 = v338;
          v74 = v339;
          v31 = v330;
          v89 = LOBYTE(v337);
        }
        v35 = *((double *)&v384 + 1);
        v25 = *(double *)&v384;
        v334 = v88;
        if (((1 << v89) & 0x15) != 0)
        {
          v403.origin.x = v57;
          v403.origin.y = v341;
          v403.size.width = v56;
          v403.size.height = v73;
          v36 = CGRectGetMinX(v403);
        }
        else if (((1 << v89) & 0x22) != 0)
        {
          v404.origin.x = v57;
          v404.origin.y = v341;
          v404.size.width = v56;
          v404.size.height = v73;
          v98 = CGRectGetMaxX(v404);
          v405.origin.x = 0.0;
          v405.origin.y = 0.0;
          v405.size.width = v25;
          v405.size.height = v35;
          v36 = v98 - CGRectGetWidth(v405);
        }
        else
        {
          v99 = v314;
          static CGRect.LayoutAxis.horizontal.getter();
          v36 = CGRect.centeringAlong(axes:bounds:scale:)(v99, a2, v341, a4, v73, v325, 0.0, 0.0, v25, v35);
          v25 = v100;
          v35 = v101;
          (*(void (**)(char *, uint64_t))(v315 + 8))(v99, v316);
        }
        sub_523EC((uint64_t)&v342, (uint64_t)v364);
        if (sub_52434((uint64_t)v364) == 1)
        {
          v406.origin.x = a2;
          v406.origin.y = v341;
          v406.size.width = a4;
          v406.size.height = v73;
          v336 = CGRectGetMinY(v406);
          v102 = 0.0;
        }
        else
        {
          sub_523EC((uint64_t)&v342, (uint64_t)&v353);
          sub_11BB4((uint64_t)&v353);
          v407.origin.x = v326;
          v407.size.height = v327;
          v407.origin.y = v336;
          v407.size.width = v328;
          v103 = CGRectGetMaxY(v407);
          v408.origin.y = v81 + v103 - v365;
          v408.origin.x = v36;
          v336 = v408.origin.y;
          v408.size.width = v25;
          v408.size.height = v35;
          v104 = CGRectGetMinY(v408);
          sub_5244C((uint64_t)&v342);
          v102 = v104 - v103 + 0.0;
        }
        swift_retain(v38);
        sub_11BB4((uint64_t)&v381);
        if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v34) & 1) == 0)
          v34 = COERCE_DOUBLE(sub_135220(0, *(_QWORD *)(*(_QWORD *)&v34 + 16) + 1, 1, *(_QWORD **)&v34));
        v106 = *(_QWORD *)(*(_QWORD *)&v34 + 16);
        v105 = *(_QWORD *)(*(_QWORD *)&v34 + 24);
        if (v106 >= v105 >> 1)
          v34 = COERCE_DOUBLE(sub_135220((_QWORD *)(v105 > 1), v106 + 1, 1, *(_QWORD **)&v34));
        v107 = v367;
        v108 = v320;
        *v320 = v366;
        v108[1] = v107;
        v109 = v369;
        v108[2] = v368;
        v108[3] = v109;
        v110 = v373;
        v108[6] = v372;
        v108[7] = v110;
        v111 = v371;
        v108[4] = v370;
        v108[5] = v111;
        *(_QWORD *)(*(_QWORD *)&v34 + 16) = v106 + 1;
        v112 = (_QWORD *)(*(_QWORD *)&v34 + 176 * v106);
        v112[4] = v38;
        *((_BYTE *)v112 + 40) = v89;
        *(CGPoint *)((char *)v112 + 41) = v353;
        v113 = v354;
        v114 = v355;
        v115 = v356;
        *(CGPoint *)((char *)v112 + 105) = v357;
        *(CGPoint *)((char *)v112 + 89) = v115;
        *(CGPoint *)((char *)v112 + 73) = v114;
        *(CGPoint *)((char *)v112 + 57) = v113;
        v116 = v358;
        v117 = v359;
        v118 = v360[0];
        v112[21] = *(_QWORD *)((char *)v360 + 15);
        *(_OWORD *)((char *)v112 + 153) = v118;
        *(CGPoint *)((char *)v112 + 137) = v117;
        *(CGPoint *)((char *)v112 + 121) = v116;
        v117.x = v336;
        *((double *)v112 + 22) = v36;
        v112[23] = *(_QWORD *)&v117.x;
        *((double *)v112 + 24) = v25;
        *((double *)v112 + 25) = v35;
        v116.x = v36;
        *(double *)&v118 = v25;
        v119 = v35;
        v120 = CGRectGetHeight(*(CGRect *)&v116.x);
        sub_5244C((uint64_t)&v342);
        sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
        sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
        swift_release(v38);
        v341 = v341 + v102 + v120;
        v37 = v73 - (v102 + v120);
        v363[4] = v370;
        v363[5] = v371;
        v363[6] = v372;
        v363[7] = v373;
        v363[0] = v366;
        v363[1] = v367;
        v363[2] = v368;
        v363[3] = v369;
        UIScreen.Dimensions.size.getter(v363);
        sub_523EC((uint64_t)v363, (uint64_t)v376);
      }
      else
      {
        swift_bridgeObjectRelease(isEscapingClosureAtFileLocation);
        sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
        sub_11D30(&v390, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
        swift_release(v38);
        sub_523EC((uint64_t)&v342, (uint64_t)v376);
        v31 = v330;
        v74 = v339;
        v37 = v340;
      }
      if (v331 == *(_QWORD *)&v74)
        break;
      sub_523EC((uint64_t)v376, (uint64_t)&v342);
      *(_QWORD *)&v33 = *(_QWORD *)&v74 + 1;
    }
    swift_bridgeObjectRelease(v31);
    sub_523EC((uint64_t)v376, (uint64_t)v377);
    v25 = 0.0;
    v121 = *(_QWORD *)(*(_QWORD *)&v34 + 16);
    if (!v121)
      goto LABEL_65;
    goto LABEL_60;
  }
  __break(1u);
}

void sub_50B0C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, _BYTE *a5)
{
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  _BYTE v11[24];
  uint64_t v12;

  sub_43DCC(a1, (uint64_t)v11);
  if (v12)
  {
    v7 = sub_525DC();
    if ((swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
    {
      v8 = v10;
      v9 = objc_msgSend(v10, "alignment");
      if ((unint64_t)v9 >= 5)
      {
        objc_msgSend(v8, "alignment");
        *a5 = 0;
      }
      else
      {
        *a5 = 0x2010300uLL >> (8 * v9);
      }
      *a4 = 1;

    }
  }
  else
  {
    sub_9944((uint64_t)v11, &qword_1FD880);
  }
}

id sub_50BDC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = 0;
  v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_verticalAlignment] = 1;
  v9 = &v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_exclusionRectangle];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v9[32] = 1;
  v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_isDisabled] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents] = _swiftEmptyArrayStorage;
  v10 = OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents;
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_C9FF8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v11[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_recycledTextDrawingViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCacheInvalidationNotificationObserver] = 0;
  v11[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView__isDisabled] = 0;
  v12 = OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics;
  *(_QWORD *)&v11[v12] = sub_CA110((uint64_t)_swiftEmptyArrayStorage);

  v14.receiver = v11;
  v14.super_class = (Class)_s9StackViewCMa();
  return objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
}

id sub_50D18(void *a1)
{
  _BYTE *v1;
  char *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = 0;
  v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_verticalAlignment] = 1;
  v3 = &v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_exclusionRectangle];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v3[32] = 1;
  v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_isDisabled] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents] = _swiftEmptyArrayStorage;
  v4 = OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents;
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_C9FF8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v5[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_recycledTextDrawingViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCacheInvalidationNotificationObserver] = 0;
  v5[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView__isDisabled] = 0;
  v6 = OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics;
  *(_QWORD *)&v5[v6] = sub_CA110((uint64_t)_swiftEmptyArrayStorage);

  v9.receiver = v5;
  v9.super_class = (Class)_s9StackViewCMa();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_50E44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s9StackViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s9StackViewCMa()
{
  return objc_opt_self(_TtCV12NowPlayingUI14DeprecatedText9StackView);
}

void sub_50F0C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  _QWORD v73[3];
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  uint64_t v79;

  v1 = (void *)v0[18];
  v2 = (void *)v0[19];
  v3 = (void *)v0[20];
  v4 = v0[21];
  v5 = v0[22];
  v6 = v0[23];
  v7 = v0[24];
  v8 = v0[25];
  v10 = v0[26];
  v9 = v0[27];
  v12 = *((double *)v0 + 28);
  v11 = *((double *)v0 + 29);
  v13 = (void *)v0[4];
  v14 = (void *)v0[5];
  v15 = (void *)v0[6];
  v16 = v0[7];
  v17 = v0[8];
  v18 = v0[9];
  v20 = v0[10];
  v19 = v0[11];
  v22 = v0[12];
  v21 = v0[13];
  v24 = *((double *)v0 + 14);
  v23 = *((double *)v0 + 15);
  if ((v7 & 0x80000000) == 0)
  {
    v66[0] = v0[18];
    v66[1] = v2;
    v66[2] = v3;
    v67 = v4;
    v68 = v5;
    v69 = v6;
    v70 = v7;
    v71 = HIDWORD(v7);
    v72 = v8;
    if ((v20 & 0x80000000) != 0)
      goto LABEL_16;
    v55 = v22;
    v56 = v10;
    v53 = v21;
    v54 = v9;
    v73[0] = v13;
    v73[1] = v14;
    v73[2] = v15;
    v74 = v16;
    v75 = v17;
    v76 = v18;
    v77 = v20;
    v78 = HIDWORD(v20);
    v79 = v19;
    v57 = v14;
    v58 = v13;
    v61 = v15;
    v62 = v17;
    v59 = v16;
    v60 = v18;
    sub_10B0C(v13, v14, v15, v16, v17, v18, v20);
    v63 = v3;
    v64 = v4;
    v25 = v4;
    v26 = v5;
    v65 = v6;
    sub_10B0C(v1, v2, v3, v25, v5, v6, v7);
    if ((sub_746EC((uint64_t)v66, (uint64_t)v73) & 1) == 0)
      goto LABEL_15;
    goto LABEL_10;
  }
  if ((v20 & 0x80000000) == 0)
    goto LABEL_16;
  v64 = v0[21];
  v65 = v0[23];
  v63 = (void *)v0[20];
  v59 = v0[7];
  v60 = v0[9];
  v61 = (void *)v0[6];
  v62 = v0[8];
  v57 = (void *)v0[5];
  v58 = (void *)v0[4];
  v53 = v0[13];
  v54 = v0[27];
  v55 = v0[12];
  v56 = v0[26];
  if (v1 == v13 && v2 == v14)
  {
    sub_10B0C(v1, v2, v15, v16, v17, v18, v20);
    v27 = v4;
    v26 = v5;
    sub_10B0C(v1, v2, v3, v27, v5, v6, v7);
LABEL_10:
    if (v56 == v55 && v54 == v53 && (static CGFloat.==~ infix(_:_:)(v12, v24) & 1) != 0)
    {
      v32 = static CGFloat.==~ infix(_:_:)(v11, v23);
      sub_10B64(v58, v57, v61, v59, v62, v60, v20);
      sub_10B64(v1, v2, v63, v64, v26, v65, v7);
      if ((v32 & 1) != 0)
        return;
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  v28 = (void *)v0[4];
  v29 = v0[7];
  v51 = v0[22];
  v30 = v0[9];
  v31 = (void *)v0[5];
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, v13, v14, 0);
  sub_10B0C(v28, v31, v61, v29, v62, v30, v20);
  v26 = v51;
  sub_10B0C(v1, v2, v63, v64, v51, v65, v7);
  if ((v52 & 1) != 0)
    goto LABEL_10;
LABEL_15:
  sub_10B64(v58, v57, v61, v59, v62, v60, v20);
  sub_10B64(v1, v2, v63, v64, v26, v65, v7);
LABEL_16:
  v33 = (void *)v0[4];
  v34 = (void *)v0[5];
  v35 = (void *)v0[6];
  v36 = v0[7];
  v37 = v0[8];
  v38 = v0[9];
  v39 = v0[10];
  v40 = v0[13];
  v41 = (void *)v0[18];
  v42 = (void *)v0[19];
  v43 = (void *)v0[20];
  v44 = v0[21];
  v45 = v0[22];
  v46 = v0[23];
  v47 = v0[24];
  v0[18] = v33;
  v0[19] = v34;
  v0[20] = v35;
  v0[21] = v36;
  v0[22] = v37;
  v0[23] = v38;
  v0[24] = v39;
  *(_OWORD *)(v0 + 25) = *(_OWORD *)(v0 + 11);
  v0[27] = v40;
  *((_OWORD *)v0 + 14) = *((_OWORD *)v0 + 7);
  sub_10B0C(v33, v34, v35, v36, v37, v38, v39);
  sub_10B64(v41, v42, v43, v44, v45, v46, v47);
  v48 = (void (*)(uint64_t))v0[32];
  if (v48)
  {
    v49 = v0[33];
    v50 = swift_retain(v49);
    v48(v50);
    sub_145A0((uint64_t)v48, v49);
  }
}

void sub_5129C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  v3 = v2[17];
  v2[16] = a1;
  v2[17] = a2;
  swift_bridgeObjectRelease(v3);
  v4 = v2[30];
  v5 = v2[31];
  v7 = v2[16];
  v6 = v2[17];
  v8 = v4 == v7 && v5 == v6;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2[16], v2[17], 0) & 1) == 0)
  {
    v9 = v2[31];
    v2[30] = v7;
    v2[31] = v6;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRelease(v9);
    v10 = (void (*)(uint64_t))v2[32];
    if (v10)
    {
      v11 = v2[33];
      v12 = swift_retain(v11);
      v10(v12);
      sub_145A0((uint64_t)v10, v11);
    }
  }
}

void sub_5133C(uint64_t a1)
{
  double *v1;
  double *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  Swift::UInt v15;
  Swift::UInt v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::UInt v20;
  Swift::UInt v21;
  Swift::UInt v22;
  uint64_t v23;

  v2 = v1;
  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v2 + 3);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)*((_QWORD *)v2 + 4);
  v7 = (void *)*((_QWORD *)v2 + 5);
  v8 = (void *)*((_QWORD *)v2 + 6);
  v9 = *((_QWORD *)v2 + 8);
  v10 = *((_QWORD *)v2 + 9);
  v11 = *((_QWORD *)v2 + 10);
  v13 = v2[14];
  v12 = v2[15];
  v22 = *((_QWORD *)v2 + 13);
  v23 = *((_QWORD *)v2 + 7);
  v21 = *((_QWORD *)v2 + 12);
  sub_10B0C(v6, v7, v8, v23, v9, v10, v11);
  if ((v11 & 0x80000000) != 0)
  {
    v14 = String.hashValue.getter(v6, v7);
    Hasher._combine(_:)(~v14);
  }
  else
  {
    sub_7487C(a1);
  }
  Hasher._combine(_:)(v21);
  Hasher._combine(_:)(v22);
  v15 = CGFloat.roundInteger.getter(v13);
  Hasher._combine(_:)(v15);
  v16 = CGFloat.roundInteger.getter(v12);
  Hasher._combine(_:)(v16);
  sub_10B64(v6, v7, v8, v23, v9, v10, v11);
  v17 = *((_QWORD *)v2 + 16);
  v18 = *((_QWORD *)v2 + 17);
  swift_bridgeObjectRetain(v18);
  String.hash(into:)(a1, v17, v18);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = *((_QWORD *)v2 + 34);
  if (v20)
    v20 = UnsafeMutableRawPointer.hashValue.getter(v19);
  Hasher._combine(_:)(v20);
}

uint64_t sub_514EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_10B64(*(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  sub_10B64(*(void **)(v0 + 144), *(void **)(v0 + 152), *(void **)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  sub_145A0(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));

  return v0;
}

uint64_t sub_51550()
{
  uint64_t v0;

  sub_514EC();
  return swift_deallocClassInstance(v0, 280, 7);
}

uint64_t _s9StackViewC9ComponentCMa()
{
  return objc_opt_self(_TtCCV12NowPlayingUI14DeprecatedText9StackView9Component);
}

Swift::Int sub_51590()
{
  double *v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  Swift::UInt v15;
  Swift::UInt v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::UInt v20;
  Swift::UInt v22;
  Swift::UInt v23;
  _QWORD v24[12];
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t v30;

  v1 = v0;
  Hasher.init(_seed:)(v24, 0);
  v2 = *((_QWORD *)v0 + 2);
  v3 = *((_QWORD *)v1 + 3);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v24, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = (void *)*((_QWORD *)v1 + 4);
  v5 = (void *)*((_QWORD *)v1 + 5);
  v7 = (void *)*((_QWORD *)v1 + 6);
  v6 = *((_QWORD *)v1 + 7);
  v8 = *((_QWORD *)v1 + 8);
  v9 = *((_QWORD *)v1 + 9);
  v10 = *((_QWORD *)v1 + 10);
  v11 = *((_QWORD *)v1 + 11);
  v13 = v1[14];
  v12 = v1[15];
  v22 = *((_QWORD *)v1 + 12);
  v23 = *((_QWORD *)v1 + 13);
  if ((v10 & 0x80000000) != 0)
  {
    sub_10B0C(v4, v5, v7, v6, v8, v9, v10);
    v14 = String.hashValue.getter(v4, v5);
    Hasher._combine(_:)(~v14);
  }
  else
  {
    *(double *)&v24[9] = v1[4];
    v24[10] = v5;
    v24[11] = v7;
    v25 = v6;
    v26 = v8;
    v27 = v9;
    v28 = v10;
    v29 = HIDWORD(v10);
    v30 = v11;
    sub_10B0C(v4, v5, v7, v6, v8, v9, v10);
    sub_7487C((uint64_t)v24);
  }
  Hasher._combine(_:)(v22);
  Hasher._combine(_:)(v23);
  v15 = CGFloat.roundInteger.getter(v13);
  Hasher._combine(_:)(v15);
  v16 = CGFloat.roundInteger.getter(v12);
  Hasher._combine(_:)(v16);
  sub_10B64(v4, v5, v7, v6, v8, v9, v10);
  v17 = *((_QWORD *)v1 + 16);
  v18 = *((_QWORD *)v1 + 17);
  swift_bridgeObjectRetain(v18);
  String.hash(into:)(v24, v17, v18);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = *((_QWORD *)v1 + 34);
  if (v20)
    v20 = UnsafeMutableRawPointer.hashValue.getter(v19);
  Hasher._combine(_:)(v20);
  return Hasher._finalize()();
}

uint64_t _s9StackViewC22StackViewLayoutMetricsVwxx(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t _s9StackViewC22StackViewLayoutMetricsVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *_s9StackViewC22StackViewLayoutMetricsVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t *_s9StackViewC22StackViewLayoutMetricsVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  a1[7] = a2[7];
  return a1;
}

ValueMetadata *_s9StackViewC22StackViewLayoutMetricsVMa()
{
  return &_s9StackViewC22StackViewLayoutMetricsVN;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *_s9StackViewC21LayoutMetricsCacheKeyVMa()
{
  return &_s9StackViewC21LayoutMetricsCacheKeyVN;
}

uint64_t _s9StackViewC17VerticalAlignmentOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_51904 + 4 * byte_16D475[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_51938 + 4 * byte_16D470[v4]))();
}

uint64_t sub_51938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_51940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x51948);
  return result;
}

uint64_t sub_51954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x5195CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_51960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_51968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9StackViewC17VerticalAlignmentOMa()
{
  return &_s9StackViewC17VerticalAlignmentON;
}

unint64_t sub_51988()
{
  unint64_t result;

  result = qword_1FCAB8;
  if (!qword_1FCAB8)
  {
    result = swift_getWitnessTable(&unk_16D564, &_s9StackViewC17VerticalAlignmentON);
    atomic_store(result, (unint64_t *)&qword_1FCAB8);
  }
  return result;
}

unint64_t sub_519D0()
{
  unint64_t result;

  result = qword_1FCAC0;
  if (!qword_1FCAC0)
  {
    result = swift_getWitnessTable(&unk_16D58C, &_s9StackViewC21LayoutMetricsCacheKeyVN);
    atomic_store(result, (unint64_t *)&qword_1FCAC0);
  }
  return result;
}

Swift::Int sub_51A14()
{
  return sub_51590();
}

void sub_51A34(uint64_t a1)
{
  sub_5133C(a1);
}

Swift::Int sub_51A54(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_5133C((uint64_t)v2);
  return Hasher._finalize()();
}

BOOL sub_51A90(double **a1, double **a2)
{
  return sub_51B60(*a1, *a2);
}

unint64_t sub_51AA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCAC8;
  if (!qword_1FCAC8)
  {
    v1 = _s9StackViewC9ComponentCMa();
    result = swift_getWitnessTable(&unk_16D5F4, v1);
    atomic_store(result, (unint64_t *)&qword_1FCAC8);
  }
  return result;
}

void sub_51AE4(double a1, double a2, double a3, double a4)
{
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat x;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  CGRect v11;

  v11 = CGRectStandardize(*(CGRect *)&a1);
  y = v11.origin.y;
  width = v11.size.width;
  height = v11.size.height;
  if ((*(_QWORD *)&v11.origin.x & 0x7FFFFFFFFFFFFFFFLL) != 0)
    x = v11.origin.x;
  else
    x = 0.0;
  Hasher._combine(_:)(*(Swift::UInt64 *)&x);
  if ((*(_QWORD *)&y & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&y;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((*(_QWORD *)&width & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = *(_QWORD *)&width;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  if ((*(_QWORD *)&height & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = *(_QWORD *)&height;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
}

BOOL sub_51B60(double *a1, double *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  int v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned __int8 v50;
  void *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BOOL8 v78;
  void *v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  _QWORD v115[3];
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  int v120;
  uint64_t v121;
  _QWORD v122[3];
  char v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  if (a1 == a2)
    return 1;
  v129 = v7;
  v130 = v6;
  v131 = v5;
  v132 = v4;
  v133 = v2;
  v134 = v3;
  v10 = *((_QWORD *)a1 + 2);
  v11 = *((_QWORD *)a1 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = *((_QWORD *)a2 + 3);
  if (v10 != v12 || v11 != v13)
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    v16 = 0;
    if ((v15 & 1) == 0)
      goto LABEL_30;
  }
  v18 = (void *)*((_QWORD *)a1 + 4);
  v17 = (void *)*((_QWORD *)a1 + 5);
  v19 = (void *)*((_QWORD *)a1 + 6);
  v20 = *((_QWORD *)a1 + 7);
  v21 = *((_QWORD *)a1 + 8);
  v22 = *((_QWORD *)a1 + 9);
  v23 = *((_QWORD *)a1 + 10);
  v24 = *((_QWORD *)a1 + 11);
  v26 = *((_QWORD *)a1 + 12);
  v25 = *((_QWORD *)a1 + 13);
  v28 = a1[14];
  v27 = a1[15];
  v30 = (void *)*((_QWORD *)a2 + 4);
  v29 = (void *)*((_QWORD *)a2 + 5);
  v32 = (void *)*((_QWORD *)a2 + 6);
  v31 = *((_QWORD *)a2 + 7);
  v34 = *((_QWORD *)a2 + 8);
  v33 = *((_QWORD *)a2 + 9);
  v35 = *((_QWORD *)a2 + 10);
  v36 = *((_QWORD *)a2 + 11);
  v38 = *((_QWORD *)a2 + 12);
  v37 = *((_QWORD *)a2 + 13);
  v40 = a2[14];
  v39 = a2[15];
  if ((v23 & 0x80000000) != 0)
  {
    if ((v35 & 0x80000000) == 0)
      goto LABEL_29;
    v107 = (void *)*((_QWORD *)a1 + 4);
    v108 = *((_QWORD *)a1 + 8);
    v113 = (void *)*((_QWORD *)a2 + 6);
    v105 = (void *)*((_QWORD *)a2 + 4);
    v106 = (void *)*((_QWORD *)a2 + 5);
    v90 = *((_QWORD *)a2 + 13);
    v91 = *((_QWORD *)a1 + 13);
    v92 = *((_QWORD *)a2 + 12);
    v93 = *((_QWORD *)a1 + 12);
    v103 = *((_QWORD *)a2 + 7);
    v104 = (void *)*((_QWORD *)a1 + 5);
    v99 = *((_QWORD *)a2 + 9);
    v101 = *((_QWORD *)a2 + 8);
    if (v18 == v30 && v17 == v29)
    {
      v57 = (void *)*((_QWORD *)a1 + 4);
      v58 = *((_QWORD *)a1 + 10);
      v110 = *((_QWORD *)a2 + 10);
      sub_10B0C(v57, v17, v32, v31, v34, v33, v35);
      v59 = v17;
      v43 = v19;
      v60 = v19;
      v45 = v20;
      v61 = v20;
      v62 = v21;
      v48 = v22;
      v49 = v58;
      sub_10B0C(v57, v59, v60, v61, v62, v22, v58);
      v52 = v110;
      v51 = v113;
      v53 = v99;
      v54 = v101;
      v55 = v103;
    }
    else
    {
      v94 = (void *)*((_QWORD *)a1 + 6);
      v96 = *((_QWORD *)a1 + 7);
      v63 = (void *)*((_QWORD *)a2 + 4);
      v64 = *((_QWORD *)a2 + 7);
      v65 = (void *)*((_QWORD *)a2 + 5);
      v66 = *((_QWORD *)a2 + 8);
      v97 = *((_QWORD *)a1 + 10);
      v67 = *((_QWORD *)a2 + 9);
      v68 = *((_QWORD *)a2 + 10);
      v88 = _stringCompareWithSmolCheck(_:_:expecting:)(*((_QWORD *)a1 + 4), v17, v30, v29, 0);
      sub_10B0C(v63, v65, v113, v64, v66, v67, v68);
      v69 = v17;
      v43 = v94;
      v45 = v96;
      v48 = v22;
      v49 = v97;
      sub_10B0C(v107, v69, v94, v96, v108, v22, v97);
      v52 = v68;
      v53 = v99;
      v54 = v101;
      v55 = v103;
      v51 = v113;
      if ((v88 & 1) == 0)
      {
LABEL_27:
        sub_10B64(v105, v106, v51, v55, v54, v53, v52);
        v79 = v107;
        v83 = v108;
        v80 = v104;
        v81 = v43;
        v82 = v45;
        v84 = v48;
        v85 = v49;
        goto LABEL_28;
      }
    }
  }
  else
  {
    *(double *)v115 = a1[4];
    v115[1] = v17;
    v115[2] = v19;
    v116 = v20;
    v117 = v21;
    v118 = v22;
    v119 = v23;
    v120 = HIDWORD(v23);
    v121 = v24;
    if ((v35 & 0x80000000) != 0)
      goto LABEL_29;
    v92 = v38;
    v93 = v26;
    v90 = v37;
    v91 = v25;
    v122[0] = v30;
    v122[1] = v29;
    v122[2] = v32;
    v123 = v31;
    v124 = v34;
    v125 = v33;
    v126 = v35;
    v127 = HIDWORD(v35);
    v128 = v36;
    v105 = v30;
    v106 = v29;
    v109 = v35;
    v112 = v32;
    v100 = v34;
    v102 = v31;
    v98 = v33;
    v41 = v23;
    sub_10B0C(v30, v29, v32, v31, v34, v33, v35);
    v107 = v18;
    v108 = v21;
    v104 = v17;
    v42 = v17;
    v43 = v19;
    v44 = v19;
    v45 = v20;
    v46 = v20;
    v47 = v21;
    v48 = v22;
    v49 = v41;
    sub_10B0C(v18, v42, v44, v46, v47, v22, v41);
    v50 = sub_746EC((uint64_t)v115, (uint64_t)v122);
    v52 = v109;
    v51 = v112;
    v53 = v98;
    v54 = v100;
    v55 = v102;
    if ((v50 & 1) == 0)
      goto LABEL_27;
  }
  v111 = v52;
  v114 = v51;
  v95 = v43;
  v70 = v54;
  v89 = v48;
  if (v93 != v92 || v91 != v90 || (static CGFloat.==~ infix(_:_:)(v28, v40) & 1) == 0)
  {
    sub_10B64(v105, v106, v114, v55, v70, v53, v111);
    v79 = v107;
    v80 = v104;
    v81 = v95;
    v82 = v45;
    v83 = v108;
    v84 = v48;
    v85 = v49;
LABEL_28:
    sub_10B64(v79, v80, v81, v82, v83, v84, v85);
    goto LABEL_29;
  }
  v71 = static CGFloat.==~ infix(_:_:)(v27, v39);
  sub_10B64(v105, v106, v114, v55, v70, v53, v111);
  sub_10B64(v107, v104, v95, v45, v108, v89, v49);
  if ((v71 & 1) == 0)
  {
LABEL_29:
    v16 = 0;
    goto LABEL_30;
  }
  v72 = *((_QWORD *)a1 + 16);
  v73 = *((_QWORD *)a1 + 17);
  v74 = *((_QWORD *)a2 + 16);
  v75 = *((_QWORD *)a2 + 17);
  if (v72 == v74 && v73 == v75)
  {
    v76 = *((_QWORD *)a1 + 34);
    v77 = *((_QWORD *)a2 + 34);
    v78 = (v77 | v76) == 0;
    if (v77 && v76)
      return v76 == v77;
    return v78;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v74, v75, 0);
LABEL_30:
  v86 = *((_QWORD *)a1 + 34);
  v87 = *((_QWORD *)a2 + 34);
  v78 = v86 == 0;
  if (v87)
  {
    if (v86)
    {
      v78 = v86 == v87;
      if ((v16 & 1) != 0)
        return v78;
    }
  }
  else if ((v16 & 1) != 0)
  {
    return v78;
  }
  return 0;
}

uint64_t sub_51FDC()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_52000(uint64_t a1)
{
  uint64_t v1;

  sub_4E1C0(a1, v1);
}

void sub_52008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(_QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  void *v28;
  id v29;
  double v30;
  id v31;
  double v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  void *v41;
  id v42;
  id v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;

  v5 = UITraitCollection.safeDisplayScale.getter();
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    v7 = v6;
    if (v6)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v45 = a1;
  else
    v45 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v46 = _CocoaArrayWrapper.endIndex.getter(v45);
  if (!v46)
    goto LABEL_28;
  v6 = v46;
  swift_bridgeObjectRetain(a1);
  v7 = _CocoaArrayWrapper.endIndex.getter(v45);
  swift_bridgeObjectRelease(a1);
LABEL_3:
  v53 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
  }
  else if (v6 >= 1)
  {
    v8 = 0;
    v52 = a1 & 0xC000000000000001;
    v9 = 0.0;
    v47 = v6;
    v48 = a1;
    do
    {
      if (v52)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
      }
      else
      {
        v16 = *(_QWORD *)(a1 + 8 * v8 + 32);
        swift_retain();
      }
      v18 = *(void **)(v16 + 32);
      v17 = *(void **)(v16 + 40);
      v19 = *(uint64_t (**)(_QWORD, _QWORD))(v16 + 48);
      v20 = *(_QWORD *)(v16 + 56);
      v21 = *(_QWORD *)(v16 + 80);
      v56 = *(_QWORD *)(v16 + 96);
      v22 = *(double *)(v16 + 120);
      v60 = v19;
      v61 = v17;
      v58 = *(_QWORD *)(v16 + 72);
      v59 = *(_QWORD *)(v16 + 64);
      v57 = v21;
      if ((v21 & 0x80000000) != 0)
      {
        v27 = *(void **)(v16 + 32);
        swift_retain_n(v20, 2);
        swift_bridgeObjectRetain(v17);
        v28 = (void *)v19(a3, a4);
        v29 = objc_msgSend(v28, "MTMPU_tallestFontFromAttributes");

        if (v29)
        {
          objc_msgSend(v29, "_bodyLeading");
          v25 = v30;
          v31 = v29;
          objc_msgSend(v31, "_scaledValueForValue:", v22);
          v22 = v32;

          swift_release(v20);
        }
        else
        {
          swift_release(v20);
          v25 = 0.0;
        }
        v18 = v27;
      }
      else
      {
        sub_10B0C(v18, v17, v19, v20, *(_QWORD *)(v16 + 64), *(_QWORD *)(v16 + 72), v21);
        v23 = v18;
        objc_msgSend(v23, "preferredFontBodyLeading");
        v25 = v24;
        objc_msgSend(v23, "scaledValueForValue:", v22);
        v22 = v26;

      }
      v33 = *(void **)(v16 + 32);
      v34 = *(_QWORD *)(v16 + 80);
      v12 = *(double *)(v16 + 112);
      if ((v34 & 0x80000000) != 0)
      {
        v49 = v20;
        v51 = v18;
        v35 = *(void **)(v16 + 40);
        v36 = *(void **)(v16 + 48);
        v37 = *(_QWORD *)(v16 + 56);
        v38 = *(_QWORD *)(v16 + 64);
        v39 = *(_QWORD *)(v16 + 72);
        swift_bridgeObjectRetain(v35);
        swift_retain();
        v50 = v38;
        sub_10B0C(v33, v35, v36, v37, v38, v39, v34);
        v40 = swift_bridgeObjectRelease(v35);
        v41 = (void *)((uint64_t (*)(uint64_t, uint64_t, __n128))v36)(a3, a4, v40);
        v42 = objc_msgSend(v41, "MTMPU_tallestFontFromAttributes");

        if (v42)
        {
          v43 = v42;
          objc_msgSend(v43, "_scaledValueForValue:", v12);
          v12 = v44;

        }
        swift_release(v37);
        sub_10B64(v33, v35, v36, v37, v50, v39, v34);
        v6 = v47;
        a1 = v48;
        v18 = v51;
        v20 = v49;
      }
      else
      {
        v10 = objc_msgSend(*(id *)(v16 + 32), "scaledValueForValue:", *(double *)(v16 + 112));
        v12 = v11;
      }
      v13 = v8 + 1;
      v14 = -0.0;
      if (v53 == v8)
        v14 = v22;
      v15 = CGFloat.ceilingValue(scale:)(v10, v5, v14 + v25 * (double)v56 + v12 - v25);
      sub_10B64(v18, v61, v60, v20, v59, v58, v57);
      swift_release(v16);
      v9 = v9 + v15;
      ++v8;
    }
    while (v6 != v13);
    goto LABEL_28;
  }
  __break(1u);
}

double sub_523D4(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_523EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_52434(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_5244C(uint64_t a1)
{
  sub_524A4(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32));
  return a1;
}

void sub_524A4(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  if (a5)
  {
    sub_11BEC(a1, a2, a3, a4 & 1);

  }
}

uint64_t sub_524D4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  id v7;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  swift_retain(*(_QWORD *)a1);
  sub_11B84(v2, v3, v4, v5);
  v7 = v6;
  return a1;
}

uint64_t sub_52534(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  swift_release(*(_QWORD *)a1);
  sub_11BEC(v2, v3, v4, v5);

  return a1;
}

uint64_t sub_52594()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_525A4(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  sub_50B0C(a1, a2, a3, a4, *(_BYTE **)(v4 + 16));
}

uint64_t sub_525AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_525BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_147280(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_6(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_525DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCAE0;
  if (!qword_1FCAE0)
  {
    v1 = objc_opt_self(NSParagraphStyle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FCAE0);
  }
  return result;
}

uint64_t sub_52618()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_5263C()
{
  uint64_t v0;

  sub_4E4EC(v0);
}

_QWORD *sub_52644(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

_QWORD *sub_5266C(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

uint64_t _s9StackViewC14FittingMetricsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s9StackViewC14FittingMetricsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *_s9StackViewC14FittingMetricsVMa()
{
  return &_s9StackViewC14FittingMetricsVN;
}

void _s9StackViewC22ComponentLayoutMetricsVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  sub_11BEC(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));

}

uint64_t _s9StackViewC22ComponentLayoutMetricsVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = (void *)a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((_BYTE *)a2 + 40);
  swift_retain(v4);
  sub_11B84(v5, v6, v7, v8);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  v9 = (void *)a2[6];
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 80) = v11;
  v12 = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 112) = v12;
  v13 = *((_OWORD *)a2 + 10);
  *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
  *(_OWORD *)(a1 + 160) = v13;
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  v14 = v9;
  return a1;
}

uint64_t *_s9StackViewC22ComponentLayoutMetricsVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;
  id v16;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v6 = (void *)a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = *((_BYTE *)a2 + 40);
  sub_11B84(v6, v7, v8, v9);
  v10 = (void *)a1[2];
  v11 = a1[3];
  v12 = a1[4];
  v13 = *((_BYTE *)a1 + 40);
  a1[2] = (uint64_t)v6;
  a1[3] = v7;
  a1[4] = v8;
  *((_BYTE *)a1 + 40) = v9;
  sub_11BEC(v10, v11, v12, v13);
  v14 = (void *)a2[6];
  v15 = (void *)a1[6];
  a1[6] = (uint64_t)v14;
  v16 = v14;

  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t *_s9StackViewC22ComponentLayoutMetricsVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  __int128 v12;
  __int128 v13;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a2[4];
  v6 = *((_BYTE *)a2 + 40);
  v7 = (void *)a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = *((_BYTE *)a1 + 40);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  a1[4] = v5;
  *((_BYTE *)a1 + 40) = v6;
  sub_11BEC(v7, v8, v9, v10);
  v11 = (void *)a1[6];
  a1[6] = a2[6];

  a1[7] = a2[7];
  v12 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v12;
  v13 = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 7) = v13;
  a1[16] = a2[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
  a1[21] = a2[21];
  return a1;
}

uint64_t _s9StackViewC22ComponentLayoutMetricsVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9StackViewC22ComponentLayoutMetricsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s9StackViewC22ComponentLayoutMetricsVMa()
{
  return &_s9StackViewC22ComponentLayoutMetricsVN;
}

uint64_t destroy for ChapterCell(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for ChapterCell(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for ChapterCell(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  v8 = a2[6];
  v9 = a1[6];
  a1[6] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ChapterCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_release(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v8);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChapterCell(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChapterCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChapterCell()
{
  return &type metadata for ChapterCell;
}

uint64_t sub_52D14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19ECA0, 1);
}

id sub_52D24()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  result = objc_msgSend(v0, "setStyle:", 2);
  qword_1FCAF0 = (uint64_t)v0;
  return result;
}

id sub_52D70()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  objc_msgSend(v0, "setUnitsStyle:", 1);
  result = objc_msgSend(v0, "setAllowedUnits:", 96);
  qword_1FCAF8 = (uint64_t)v0;
  return result;
}

uint64_t sub_52DD0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[2];

  v84 = a2;
  v80 = type metadata accessor for ChapterText(0);
  v3 = __chkstk_darwin(v80);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v79 = (uint64_t)&v70 - v6;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB10);
  __chkstk_darwin(v81);
  v83 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for AnimationTimelineSchedule(0);
  v75 = *(_QWORD *)(v76 - 8);
  v8 = __chkstk_darwin(v76);
  v73 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v74 = (char *)&v70 - v10;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB18);
  v78 = *(_QWORD *)(v82 - 8);
  v11 = __chkstk_darwin(v82);
  v72 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v77 = (char *)&v70 - v13;
  v15 = *((_QWORD *)a1 + 4);
  v14 = *((_QWORD *)a1 + 5);
  v16 = *((_QWORD *)a1 + 6);
  v17 = *((double *)a1 + 7);
  v18 = *((double *)a1 + 8);
  v93[0] = a1[1];
  v19 = *((_QWORD *)&v93[0] + 1);
  KeyPath = swift_getKeyPath(&unk_16D700);
  v21 = swift_getKeyPath(&unk_16D728);
  swift_bridgeObjectRetain(v16);
  sub_24D30((uint64_t)v93);
  v71 = v19;
  static Published.subscript.getter(&v86, v19, KeyPath, v21);
  swift_release(KeyPath);
  swift_release(v21);
  sub_54C10((uint64_t)v93);
  v22 = v86;
  v23 = v87;
  v24 = v88;
  v26 = v89;
  v25 = v90;
  v27 = v91;
  swift_bridgeObjectRelease(v92);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v22);
  if (!v24)
  {
    swift_bridgeObjectRelease(0);
    v29 = v16;
LABEL_9:
    swift_bridgeObjectRelease(v29);
    v28 = (int *)v80;
    goto LABEL_10;
  }
  if (v15 != *((_QWORD *)&v22 + 1))
  {
    swift_bridgeObjectRelease(v16);
    v29 = v24;
    goto LABEL_9;
  }
  if (v14 == v23 && v24 == v16)
  {
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v24);
    v28 = (int *)v80;
    if (v17 != v26)
      goto LABEL_10;
  }
  else
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v23, v24, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v24);
    v28 = (int *)v80;
    if ((v46 & 1) == 0 || v17 != v26)
      goto LABEL_10;
  }
  if (v18 != v25)
  {
LABEL_10:
    v30 = *((_QWORD *)a1 + 9);
    v31 = (void *)objc_opt_self(UIFont);
    swift_bridgeObjectRetain(v16);
    v32 = objc_msgSend(v31, "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v32, "pointSize");
    v34 = v33;

    *(_QWORD *)v5 = v30;
    *((_QWORD *)v5 + 1) = v15;
    *((_QWORD *)v5 + 2) = v14;
    *((_QWORD *)v5 + 3) = v16;
    *((double *)v5 + 4) = v17;
    *((double *)v5 + 5) = v18;
    v5[48] = 0;
    *((_QWORD *)v5 + 7) = 0;
    v5[64] = 1;
    v35 = &v5[v28[8]];
    *(_QWORD *)v35 = swift_getKeyPath(&unk_16D748);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
    swift_storeEnumTagMultiPayload(v35, v36, 0);
    v37 = &v5[v28[9]];
    *(_QWORD *)v37 = swift_getKeyPath(&unk_16D778);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    swift_storeEnumTagMultiPayload(v37, v38, 0);
    v39 = &v5[v28[10]];
    v85 = v34 * 3.5;
    State.init(wrappedValue:)(&v86, &v85, &type metadata for CGFloat);
    v40 = *((_QWORD *)&v86 + 1);
    *(_QWORD *)v39 = v86;
    *((_QWORD *)v39 + 1) = v40;
    v41 = v79;
    sub_54C60((uint64_t)v5, v79);
    v42 = v83;
    sub_54CA4(v41, v83);
    swift_storeEnumTagMultiPayload(v42, v81, 1);
    v43 = sub_559E4(&qword_1FCB28, &qword_1FCB18, (void (*)(void))sub_54CE8, (uint64_t)&protocol conformance descriptor for <> TimelineView<A, B>);
    v44 = sub_8330(&qword_1FCB40, type metadata accessor for ChapterText, (uint64_t)&unk_16D860);
    _ConditionalContent<>.init(storage:)(v42, v82, v28, v43, v44);
    return sub_54D64(v41);
  }
  v86 = *a1;
  swift_retain(*((_QWORD *)&v86 + 1));
  v47 = dispatch thunk of NowPlayingViewModel.PlaybackPosition.isPaused.getter();
  sub_54C10((uint64_t)&v86);
  if ((v47 & 1) != 0)
  {
    v48 = 1;
  }
  else
  {
    v49 = swift_getKeyPath(&unk_16D7A8);
    v50 = swift_getKeyPath(&unk_16D7D0);
    v51 = swift_retain(v71);
    static Published.subscript.getter(&v85, v51, v49, v50);
    swift_release(v49);
    swift_release(v50);
    sub_54C10((uint64_t)v93);
    v48 = LOBYTE(v85) ^ 1;
  }
  v52 = v74;
  AnimationTimelineSchedule.init(minimumInterval:paused:)(0, 1, v48 & 1);
  v53 = (_OWORD *)swift_allocObject(&unk_1CA0F0, 96, 7);
  v54 = a1[3];
  v53[3] = a1[2];
  v53[4] = v54;
  v53[5] = a1[4];
  v55 = a1[1];
  v53[1] = *a1;
  v53[2] = v55;
  v56 = v75;
  v57 = v73;
  v58 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v73, v52, v76);
  v59 = swift_allocObject(&unk_1CA118, 32, 7);
  *(_QWORD *)(v59 + 16) = sub_54DDC;
  *(_QWORD *)(v59 + 24) = v53;
  sub_54E10(a1);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB38);
  v61 = sub_8330(&qword_1FCB48, (uint64_t (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule, (uint64_t)&protocol conformance descriptor for AnimationTimelineSchedule);
  v62 = sub_54CE8();
  v63 = v72;
  TimelineView<>.init(_:content:)(v57, sub_54E08, v59, v58, v60, v61, v62);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v58);
  v64 = v78;
  v65 = v77;
  v66 = v82;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v63, v82);
  v67 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v83, v65, v66);
  swift_storeEnumTagMultiPayload(v67, v81, 0);
  v68 = sub_559E4(&qword_1FCB28, &qword_1FCB18, (void (*)(void))sub_54CE8, (uint64_t)&protocol conformance descriptor for <> TimelineView<A, B>);
  v69 = sub_8330(&qword_1FCB40, type metadata accessor for ChapterText, (uint64_t)&unk_16D860);
  _ConditionalContent<>.init(storage:)(v67, v66, v28, v68, v69);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v66);
}

uint64_t sub_53504@<X0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  void *v25;
  id v26;
  double v27;
  double v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v51 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB50);
  __chkstk_darwin(v50);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for ChapterText(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v49 - v9;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *a1;
  swift_retain(*((_QWORD *)&v55 + 1));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB58);
  TimelineView.Context.date.getter(v15);
  v16 = dispatch thunk of NowPlayingViewModel.PlaybackPosition.elapsedTime(with:)(v14);
  sub_54C10((uint64_t)&v55);
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v19 = *((_QWORD *)a1 + 4);
  v18 = *((_QWORD *)a1 + 5);
  v20 = *((_QWORD *)a1 + 6);
  v22 = *((double *)a1 + 7);
  v21 = *((double *)a1 + 8);
  v23 = *((_QWORD *)a1 + 9);
  if (v22 > v16 || v16 >= v21)
  {
    v25 = (void *)objc_opt_self(UIFont);
    swift_bridgeObjectRetain(v20);
    v26 = objc_msgSend(v25, "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v26, "pointSize");
    v28 = v27;

    *(_QWORD *)v8 = v23;
    *((_QWORD *)v8 + 1) = v19;
    *((_QWORD *)v8 + 2) = v18;
    *((_QWORD *)v8 + 3) = v20;
    *((double *)v8 + 4) = v22;
    *((double *)v8 + 5) = v21;
    v8[48] = 0;
    *((_QWORD *)v8 + 7) = 0;
    v8[64] = 1;
    v29 = &v8[v5[8]];
    *(_QWORD *)v29 = swift_getKeyPath(&unk_16D748);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    v31 = &v8[v5[9]];
    *(_QWORD *)v31 = swift_getKeyPath(&unk_16D778);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    swift_storeEnumTagMultiPayload(v31, v32, 0);
    v33 = &v8[v5[10]];
    v52 = v28 * 3.5;
    State.init(wrappedValue:)(&v53, &v52, &type metadata for CGFloat);
    v34 = v54;
    *(_QWORD *)v33 = v53;
    *((_QWORD *)v33 + 1) = v34;
    sub_54C60((uint64_t)v8, (uint64_t)v10);
    sub_54CA4((uint64_t)v10, (uint64_t)v4);
    swift_storeEnumTagMultiPayload(v4, v50, 1);
    v35 = sub_8330(&qword_1FCB40, type metadata accessor for ChapterText, (uint64_t)&unk_16D860);
    v36 = v4;
LABEL_10:
    _ConditionalContent<>.init(storage:)(v36, v5, v5, v35, v35);
    return sub_54D64((uint64_t)v10);
  }
  v49 = v4;
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v16 < 9.22337204e18)
  {
    v37 = (uint64_t)v16;
    v38 = (void *)objc_opt_self(UIFont);
    swift_bridgeObjectRetain(v20);
    v39 = objc_msgSend(v38, "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v39, "pointSize");
    v41 = v40;

    *(_QWORD *)v8 = v23;
    *((_QWORD *)v8 + 1) = v19;
    *((_QWORD *)v8 + 2) = v18;
    *((_QWORD *)v8 + 3) = v20;
    *((double *)v8 + 4) = v22;
    *((double *)v8 + 5) = v21;
    v8[48] = 1;
    *((_QWORD *)v8 + 7) = v37;
    v8[64] = 0;
    v42 = &v8[v5[8]];
    *(_QWORD *)v42 = swift_getKeyPath(&unk_16D748);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
    swift_storeEnumTagMultiPayload(v42, v43, 0);
    v44 = &v8[v5[9]];
    *(_QWORD *)v44 = swift_getKeyPath(&unk_16D778);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    swift_storeEnumTagMultiPayload(v44, v45, 0);
    v46 = &v8[v5[10]];
    v52 = v41 * 3.5;
    State.init(wrappedValue:)(&v53, &v52, &type metadata for CGFloat);
    v47 = v54;
    *(_QWORD *)v46 = v53;
    *((_QWORD *)v46 + 1) = v47;
    sub_54C60((uint64_t)v8, (uint64_t)v10);
    v48 = (uint64_t)v49;
    sub_54CA4((uint64_t)v10, (uint64_t)v49);
    swift_storeEnumTagMultiPayload(v48, v50, 0);
    v35 = sub_8330(&qword_1FCB40, type metadata accessor for ChapterText, (uint64_t)&unk_16D860);
    v36 = (char *)v48;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_539C4@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB00);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[3];
  v19[2] = v1[2];
  v19[3] = v6;
  v19[4] = v1[4];
  v7 = v1[1];
  v19[0] = *v1;
  v19[1] = v7;
  v8 = sub_52DD0(v19, (uint64_t)v5);
  v9 = static Edge.Set.vertical.getter(v8);
  v10 = EdgeInsets.init(_all:)(10.0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_2808C((uint64_t)v5, a1, &qword_1FCB00);
  v17 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FCB08) + 36);
  *(_BYTE *)v17 = v9;
  *(double *)(v17 + 8) = v10;
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v16;
  *(_BYTE *)(v17 + 40) = 0;
  return sub_9944((uint64_t)v5, &qword_1FCB00);
}

uint64_t type metadata accessor for ChapterText(uint64_t a1)
{
  uint64_t result;

  result = qword_1FCBC0;
  if (!qword_1FCBC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChapterText);
  return result;
}

uint64_t sub_53AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  unsigned int *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[2];
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v60 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC38);
  __chkstk_darwin(v3);
  v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC40);
  __chkstk_darwin(v58);
  v59 = (uint64_t)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ChapterText(0);
  __chkstk_darwin(v7);
  v53 = (uint64_t)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BlendMode(0);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  v10 = __chkstk_darwin(v9);
  v54 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v55 = (char *)v52 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC48);
  __chkstk_darwin(v13);
  v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ColorSchemeContrast(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v52[0] = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)v52 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)v52 - v23;
  v52[1] = v7;
  sub_562AC((uint64_t)v52 - v23);
  v25 = v2;
  LODWORD(v2) = *(unsigned __int8 *)(v2 + 48);
  v26 = *(int *)(v13 + 48);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v24, v16);
  v15[v26] = v2;
  v27 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v15, v16);
  v29 = v27;
  v30 = enum case for ColorSchemeContrast.standard(_:);
  if ((_DWORD)v2 == 1)
  {
    if ((_DWORD)v27 == enum case for ColorSchemeContrast.standard(_:))
    {
      v31 = static Color.primary.getter(v28);
LABEL_11:
      v32 = v25;
      goto LABEL_12;
    }
    v33 = static Color.accentColor.getter(v27);
LABEL_10:
    v31 = v33;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    v29 = v30;
    goto LABEL_11;
  }
  if ((_DWORD)v27 != enum case for ColorSchemeContrast.standard(_:))
  {
    v33 = static Color.primary.getter(v28);
    goto LABEL_10;
  }
  v32 = v25;
  if (qword_1F9450 != -1)
    swift_once(&qword_1F9450, sub_1547C);
  v31 = qword_210038;
  swift_retain(qword_210038);
LABEL_12:
  v34 = v53;
  v35 = *(_BYTE *)(v32 + 48);
  sub_54CA4(v32, v53);
  if ((v35 & 1) != 0)
  {
    sub_54D64(v34);
LABEL_16:
    v41 = (unsigned int *)&enum case for BlendMode.normal(_:);
    goto LABEL_17;
  }
  sub_562AC((uint64_t)v22);
  v36 = v31;
  v37 = v52[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 104))(v52[0], v29, v16);
  v38 = static ColorSchemeContrast.== infix(_:_:)(v22, v37);
  v39 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v40 = v37;
  v31 = v36;
  v39(v40, v16);
  v39((uint64_t)v22, v16);
  sub_54D64(v34);
  if ((v38 & 1) == 0)
    goto LABEL_16;
  v41 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
LABEL_17:
  v43 = v56;
  v42 = v57;
  v44 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v54, *v41, v57);
  v45 = v55;
  v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v55, v44, v42);
  *(_QWORD *)v5 = static VerticalAlignment.firstTextBaseline.getter(v46);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC50);
  sub_53F64(v32, (uint64_t)&v5[*(int *)(v47 + 44)]);
  v48 = v59;
  sub_2808C((uint64_t)v5, v59, &qword_1FCC38);
  *(_QWORD *)(v48 + *(int *)(v58 + 36)) = v31;
  sub_9944((uint64_t)v5, &qword_1FCC38);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC58);
  v50 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v60 + *(int *)(v49 + 36), v45, v42);
  sub_55AFC(v48, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v45, v42);
}

void sub_53F64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  _BYTE *v54;
  void (*v55)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t);
  void *v68;
  _BYTE v69[4];
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  _OWORD v99[2];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _BYTE v106[24];
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  unsigned __int8 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  char v142;
  __int128 v143;

  v93 = type metadata accessor for ChapterText(0);
  v5 = *(_QWORD *)(v93 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v93);
  v7 = &v69[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC60);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v15 = __chkstk_darwin(v14);
  v20 = *(_QWORD *)a1 + 1;
  if (__OFADD__(*(_QWORD *)a1, 1))
  {
    __break(1u);
    v70 = static os_log_type_t.fault.getter(v15);
    v68 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v70, &dword_0, v68, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

  }
  else
  {
    v76 = v5;
    v77 = v6;
    v78 = &v69[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    v85 = v11;
    v86 = v9;
    v89 = v19;
    v90 = v8;
    v94 = &v69[-v16];
    v97 = v18;
    v92 = v17;
    *(_QWORD *)&v114 = v20;
    v21 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v95 = v22;
    v96 = v21;
    v24 = static Alignment.leading.getter(v23);
    _FrameLayout.init(width:height:alignment:)(&v125, 0x4040000000000000, 0, 0, 1, v24, v25);
    v84 = v125;
    v83 = v126;
    v82 = v127;
    v81 = v128;
    v79 = v130;
    v80 = v129;
    v27 = *(_QWORD *)(a1 + 16);
    v26 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)&v114 = v27;
    *((_QWORD *)&v114 + 1) = v26;
    v28 = sub_11CEC();
    swift_bridgeObjectRetain(v26);
    v29 = Text.init<A>(_:)(&v114, &type metadata for String, v28);
    v87 = v30;
    v88 = v29;
    v75 = v31;
    v91 = v32;
    if (*(_BYTE *)(a1 + 48) == 1 && (*(_BYTE *)(a1 + 64) & 1) == 0)
    {
      v33 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)&v98 = *(_QWORD *)(a1 + 56);
      *((_QWORD *)&v98 + 1) = v33;
      *(_QWORD *)&v99[0] = v27;
      *((_QWORD *)&v99[0] + 1) = v26;
      v99[1] = *(_OWORD *)(a1 + 32);
      LOBYTE(v100) = 0;
    }
    else
    {
      *(_QWORD *)&v98 = *(_QWORD *)(a1 + 8);
      *((_QWORD *)&v98 + 1) = v27;
      *(_QWORD *)&v99[0] = v26;
      *(_OWORD *)((char *)v99 + 8) = *(_OWORD *)(a1 + 32);
      *((_QWORD *)&v99[1] + 1) = 0;
      LOBYTE(v100) = 1;
    }
    v34 = sub_55B44();
    v35 = sub_55B88();
    swift_bridgeObjectRetain(v26);
    _ConditionalContent<>.init(storage:)(&v98, &type metadata for ActiveChapterTimeRemainingText, &type metadata for InactiveChapterTimeRemainingText, v34, v35);
    v71 = *((_QWORD *)&v114 + 1);
    v72 = v114;
    v9 = v116;
    v73 = *((_QWORD *)&v115 + 1);
    v74 = v115;
    v7 = (_BYTE *)*((_QWORD *)&v116 + 1);
    LOBYTE(v11) = v117;
    v36 = (uint64_t *)(a1 + *(int *)(v93 + 40));
    v37 = *v36;
    v38 = v36[1];
    *(_QWORD *)&v114 = v37;
    *((_QWORD *)&v114 + 1) = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA48);
    v40 = State.wrappedValue.getter(&v98, v39);
    v2 = v98;
    v8 = static Alignment.trailing.getter(v40);
    v6 = v41;
  }
  LODWORD(v93) = v75 & 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v131, v2, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v8, v6);
  v113 = (char)v11;
  v112 = v132;
  v111 = v134;
  v110 = v136;
  v109 = v138;
  v108 = v140;
  v107 = v142;
  *(_QWORD *)&v98 = v72;
  *((_QWORD *)&v98 + 1) = v71;
  *(_QWORD *)&v99[1] = v9;
  *((_QWORD *)&v99[1] + 1) = v7;
  LOBYTE(v100) = (_BYTE)v11;
  *((_QWORD *)&v100 + 1) = v131;
  LOBYTE(v101) = v132;
  *((_QWORD *)&v101 + 1) = v133;
  LOBYTE(v102) = v134;
  *((_QWORD *)&v102 + 1) = v135;
  LOBYTE(v103) = v136;
  *((_QWORD *)&v103 + 1) = v137;
  LOBYTE(v104) = v138;
  *((_QWORD *)&v104 + 1) = v139;
  LOBYTE(v105) = v140;
  *((_QWORD *)&v105 + 1) = v141;
  v106[0] = v142;
  *(_OWORD *)&v106[8] = v143;
  *(_QWORD *)&v99[0] = v74;
  *((_QWORD *)&v99[0] + 1) = v73;
  v42 = (uint64_t)v85;
  sub_56B70((uint64_t)v85);
  v43 = v78;
  sub_54CA4(a1, (uint64_t)v78);
  v44 = *(unsigned __int8 *)(v76 + 80);
  v45 = (v44 + 16) & ~v44;
  v46 = swift_allocObject(&unk_1CA140, v45 + v77, v44 | 7);
  sub_54C60((uint64_t)v43, v46 + v45);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC78);
  v48 = sub_55D18();
  v49 = sub_8330(&qword_1FCCA8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v51 = v89;
  v50 = v90;
  View.onChange<A>(of:initial:_:)(v42, 0, sub_55CEC, v46, v47, v90, v48, v49);
  v52 = swift_release(v46);
  (*(void (**)(uint64_t, uint64_t, __n128))(v86 + 8))(v42, v50, v52);
  v122 = v105;
  v123 = *(_OWORD *)v106;
  v124 = *(_QWORD *)&v106[16];
  v118 = v101;
  v119 = v102;
  v120 = v103;
  v121 = v104;
  v114 = v98;
  v115 = v99[0];
  v116 = v99[1];
  v117 = v100;
  sub_55E10((uint64_t)&v114);
  v53 = v97;
  v54 = v94;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v97 + 32))(v94, v51, v12);
  LOBYTE(v98) = 0;
  v55 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v53 + 16);
  v56 = v92;
  v55((uint64_t)v92, v54, v12);
  v57 = v95;
  v58 = v96;
  *(_QWORD *)a2 = v96;
  *(_QWORD *)(a2 + 8) = v57;
  *(_BYTE *)(a2 + 16) = 0;
  v59 = v84;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 32) = v59;
  *(_BYTE *)(a2 + 40) = v83;
  *(_QWORD *)(a2 + 48) = v82;
  *(_BYTE *)(a2 + 56) = v81;
  v60 = v79;
  *(_QWORD *)(a2 + 64) = v80;
  *(_QWORD *)(a2 + 72) = v60;
  v62 = v87;
  v61 = v88;
  *(_QWORD *)(a2 + 80) = v88;
  *(_QWORD *)(a2 + 88) = v62;
  LOBYTE(v48) = v93;
  *(_BYTE *)(a2 + 96) = v93;
  v63 = v91;
  *(_QWORD *)(a2 + 104) = v91;
  *(_QWORD *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = 1;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCCB0);
  v55(a2 + *(int *)(v64 + 80), v56, v12);
  v65 = v58;
  v66 = v95;
  sub_278A8(v65, v95, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  sub_278A8(v61, v62, v48);
  v67 = *(void (**)(_BYTE *, uint64_t))(v97 + 8);
  swift_bridgeObjectRetain(v63);
  v67(v94, v12);
  v67(v56, v12);
  sub_25404(v61, v62, v48);
  swift_bridgeObjectRelease(v63);
  sub_25404(v96, v66, v98);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
}

uint64_t sub_54620(uint64_t a1)
{
  id v2;
  double v3;
  double v4;
  double *v5;
  double v6;
  double v7;
  uint64_t v8;
  double v10[3];

  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v2, "pointSize");
  v4 = v3;

  v5 = (double *)(a1 + *(int *)(type metadata accessor for ChapterText(0) + 40));
  v6 = *v5;
  v7 = v5[1];
  v10[0] = v4 * 3.5;
  v10[1] = v6;
  v10[2] = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAA48);
  return State.wrappedValue.setter(v10, v8);
}

uint64_t sub_546D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.dynamicTypeSize.setter(v4);
}

void sub_54754(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v3 = *(_QWORD *)v1;
  v4 = *(double *)(v1 + 40);
  if (qword_1F94A8 != -1)
    swift_once(&qword_1F94A8, sub_52D24);
  v5 = objc_msgSend((id)qword_1FCAF0, "stringFromSeconds:", v4 - (double)v3);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v24[0] = v6;
  v24[1] = v8;
  v9 = sub_11CEC();
  v10 = Text.init<A>(_:)(v24, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = Text.monospacedDigit()();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_25404(v10, v12, v16);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = v19;
  *(_BYTE *)(a1 + 16) = v21 & 1;
  *(_QWORD *)(a1 + 24) = v23;
}

id sub_54874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id result;
  __int128 v27;
  __int128 v28;
  char v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  __int128 v72;
  char v73;

  v3 = *(double *)(v1 + 32) - *(double *)(v1 + 24);
  if (v3 >= 60.0)
  {
    if (qword_1F94B0 != -1)
      swift_once(&qword_1F94B0, sub_52D70);
    result = objc_msgSend((id)qword_1FCAF8, "stringFromTimeInterval:", v3);
    if (result)
    {
      v30 = result;
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v33 = v32;

      *(_QWORD *)&v71 = v31;
      *((_QWORD *)&v71 + 1) = v33;
      v34 = sub_11CEC();
      v35 = Text.init<A>(_:)(&v71, &type metadata for String, v34);
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v42 = (id)AXDurationStringForDurationWithSeconds(0, v3);
      v65 = a1;
      if (v42)
      {
        v43 = v42;
        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v46 = v45;

      }
      else
      {
        v44 = 0;
        v46 = 0xE000000000000000;
      }
      *(_QWORD *)&v71 = v44;
      *((_QWORD *)&v71 + 1) = v46;
      v47 = Text.init<A>(_:)(&v71, &type metadata for String, v34);
      v49 = v48;
      v51 = v50;
      v53 = v52 & 1;
      v54 = ((uint64_t (*)(void))Text.accessibilityLabel(_:))();
      v61 = v55;
      v63 = v54;
      v57 = v56;
      v59 = v58 & 1;
      sub_25404(v47, v49, v53);
      swift_bridgeObjectRelease(v51);
      sub_25404(v35, v37, v39 & 1);
      swift_bridgeObjectRelease(v41);
      v66 = v63;
      v67 = v57;
      v68 = v59;
      v69 = v61;
      v70 = 1;
      result = (id)_ConditionalContent<>.init(storage:)(&v66, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
      v27 = v71;
      v28 = v72;
      v29 = v73;
      a1 = v65;
    }
    else
    {
      v27 = 0uLL;
      v29 = -1;
      v28 = 0uLL;
    }
  }
  else
  {
    v4 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x80000000001860A0);
    v5 = Text.init(_:tableName:bundle:comment:)(v4);
    v7 = v6;
    v9 = v8;
    v11 = v10 & 1;
    v12 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000026, 0x8000000000186100);
    v13 = Text.init(_:tableName:bundle:comment:)(v12);
    v15 = v14;
    v17 = v16;
    v19 = v18 & 1;
    v20 = Text.accessibilityLabel(_:)(v13, v14);
    v62 = v21;
    v64 = a1;
    v22 = v20;
    v60 = v23;
    v25 = v24 & 1;
    sub_25404(v13, v15, v19);
    swift_bridgeObjectRelease(v17);
    sub_25404(v5, v7, v11);
    swift_bridgeObjectRelease(v9);
    v66 = v22;
    a1 = v64;
    v67 = v62;
    v68 = v25;
    v69 = v60;
    v70 = 0;
    result = (id)_ConditionalContent<>.init(storage:)(&v66, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v27 = v71;
    v28 = v72;
    v29 = v73;
  }
  *(_OWORD *)a1 = v27;
  *(_OWORD *)(a1 + 16) = v28;
  *(_BYTE *)(a1 + 32) = v29;
  return result;
}

id sub_54BD0@<X0>(uint64_t a1@<X8>)
{
  return sub_54874(a1);
}

uint64_t sub_54C10(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_54C38()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_54C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChapterText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_54CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChapterText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_54CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCB30;
  if (!qword_1FCB30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCB38);
    sub_8330(&qword_1FCB40, type metadata accessor for ChapterText, (uint64_t)&unk_16D860);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCB30);
  }
  return result;
}

uint64_t sub_54D64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ChapterText(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_54DA8()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_54DDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_53504((__int128 *)(v1 + 16), a1);
}

uint64_t sub_54DE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_54E08(uint64_t a1)
{
  uint64_t v1;

  return sub_D71BC(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *sub_54E10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[6];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_OWORD *sub_54E58(_OWORD *a1, uint64_t *a2, int *a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a2[3];
    *((_QWORD *)v4 + 2) = a2[2];
    *((_QWORD *)v4 + 3) = v7;
    v8 = *((_OWORD *)a2 + 2);
    *((_BYTE *)v4 + 48) = *((_BYTE *)a2 + 48);
    *((_QWORD *)v4 + 7) = a2[7];
    *((_BYTE *)v4 + 64) = *((_BYTE *)a2 + 64);
    v9 = a3[8];
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v4[2] = v8;
    swift_bridgeObjectRetain(v7);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v16 = *v11;
      *v10 = *v11;
      swift_retain(v16);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v17 = a3[9];
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      v22 = 1;
    }
    else
    {
      v23 = *v19;
      *v18 = *v19;
      swift_retain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v22);
    v24 = a3[10];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v15 = v26[1];
    *v25 = *v26;
    v25[1] = v15;
  }
  swift_retain(v15);
  return v4;
}

double sub_54FEC(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = (_QWORD *)(a1 + a2[8]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)(a1 + a2[9]);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[10] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_550C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = a3[8];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  *(_OWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v6);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  v15 = a3[9];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
    v20 = 1;
  }
  else
  {
    v21 = *v17;
    *v16 = *v17;
    swift_retain(v21);
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v20);
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain(v25);
  return a1;
}

uint64_t sub_55234(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  if (a1 != a2)
  {
    v9 = a3[8];
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)(a2 + v9);
    sub_9944(a1 + v9, &qword_1FCB20);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v11;
      *v10 = *v11;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v16 = a3[9];
    v17 = (uint64_t *)(a1 + v16);
    v18 = (uint64_t *)(a2 + v16);
    sub_9944(a1 + v16, &qword_1FABA0);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
  }
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v26 = v24[1];
  v27 = v25[1];
  v24[1] = v27;
  swift_retain(v27);
  swift_release(v26);
  return a1;
}

uint64_t sub_55400(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 24) = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[9];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_5556C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  if (a1 != a2)
  {
    v8 = a3[8];
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_9944(a1 + v8, &qword_1FCB20);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = a3[9];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_9944(a1 + v13, &qword_1FABA0);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v21 = v19[1];
  v19[1] = v20[1];
  swift_release(v21);
  return a1;
}

uint64_t sub_55718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_55724);
}

uint64_t sub_55724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB60);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_557CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_557D8);
}

uint64_t sub_557D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB60);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_5587C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[1] = "(";
  v6[2] = &unk_16D818;
  v6[3] = &unk_16D830;
  sub_26DB4(319, (unint64_t *)&unk_1FCBD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_26DB4(319, (unint64_t *)&qword_1FAC18, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_16D848;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

unint64_t sub_55958()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCC18;
  if (!qword_1FCC18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCB08);
    sub_559E4(&qword_1FCC20, &qword_1FCB00, (void (*)(void))sub_55A48, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCC18);
  }
  return result;
}

uint64_t sub_559E4(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_55A48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCC28;
  if (!qword_1FCC28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCC30);
    sub_559E4(&qword_1FCB28, &qword_1FCB18, (void (*)(void))sub_54CE8, (uint64_t)&protocol conformance descriptor for <> TimelineView<A, B>);
    sub_8330(&qword_1FCB40, type metadata accessor for ChapterText, (uint64_t)&unk_16D860);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCC28);
  }
  return result;
}

uint64_t sub_55AEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19ED10, 1);
}

uint64_t sub_55AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_55B44()
{
  unint64_t result;

  result = qword_1FCC68;
  if (!qword_1FCC68)
  {
    result = swift_getWitnessTable(&unk_16D950, &type metadata for ActiveChapterTimeRemainingText);
    atomic_store(result, (unint64_t *)&qword_1FCC68);
  }
  return result;
}

unint64_t sub_55B88()
{
  unint64_t result;

  result = qword_1FCC70;
  if (!qword_1FCC70)
  {
    result = swift_getWitnessTable(&unk_16D900, &type metadata for InactiveChapterTimeRemainingText);
    atomic_store(result, (unint64_t *)&qword_1FCC70);
  }
  return result;
}

uint64_t sub_55BCC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for ChapterText(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  v7 = (_QWORD *)(v0 + v4 + v1[8]);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB20);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[9]);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  swift_release(*(_QWORD *)(v6 + v1[10] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_55CEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChapterText(0) - 8) + 80);
  return sub_54620(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_55D18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCC80;
  if (!qword_1FCC80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCC78);
    sub_559E4(&qword_1FCC88, &qword_1FCC90, (void (*)(void))sub_55DA4, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCC80);
  }
  return result;
}

unint64_t sub_55DA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCC98;
  if (!qword_1FCC98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCCA0);
    sub_55B44();
    sub_55B88();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCC98);
  }
  return result;
}

uint64_t sub_55E10(uint64_t a1)
{
  sub_55E48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_55E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return swift_bridgeObjectRelease(a3);
  else
    return swift_bridgeObjectRelease(a4);
}

uint64_t destroy for TransportControlsController.ButtonConfiguration(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for QueueModel.Chapter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for QueueModel.Chapter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a2[2];
  v5 = a1[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for QueueModel.Chapter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueueModel.Chapter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueueModel.Chapter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InactiveChapterTimeRemainingText()
{
  return &type metadata for InactiveChapterTimeRemainingText;
}

uint64_t destroy for ActiveChapterTimeRemainingText(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for ActiveChapterTimeRemainingText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for ActiveChapterTimeRemainingText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a2[3];
  v5 = a1[3];
  a1[3] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for ActiveChapterTimeRemainingText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ActiveChapterTimeRemainingText()
{
  return &type metadata for ActiveChapterTimeRemainingText;
}

unint64_t sub_560E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCCB8;
  if (!qword_1FCCB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCC58);
    sub_56154();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCCB8);
  }
  return result;
}

unint64_t sub_56154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCCC0;
  if (!qword_1FCCC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCC40);
    sub_27A8C(&qword_1FCCC8, &qword_1FCC38, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_27A8C(&qword_1FCCD0, &qword_1FCCD8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCCC0);
  }
  return result;
}

uint64_t sub_561F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19ED60, 1);
}

uint64_t sub_56200(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19ED38, 1);
}

void *sub_56210()
{
  return &protocol witness table for Text;
}

uint64_t sub_5621C()
{
  return sub_559E4(&qword_1FCCE0, &qword_1FCCE8, (void (*)(void))sub_56250, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_56250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCCF0;
  if (!qword_1FCCF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCCF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCCF0);
  }
  return result;
}

uint64_t sub_562AC@<X0>(uint64_t a1@<X8>)
{
  return sub_564F8(&qword_1FABA0, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x80000000001861A0, a1);
}

uint64_t sub_562D8@<X0>(uint64_t a1@<X8>)
{
  return sub_56790(&qword_1FAB80, &qword_1FDE80, 0xD000000000000010, 0x80000000001861F0, a1);
}

double sub_56304(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_C6F4(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_261F4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_564C4@<X0>(uint64_t a1@<X8>)
{
  return sub_564F8(&qword_1FAB78, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_564F8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2808C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v28 = a4;
      v23 = swift_slowAlloc(12, -1);
      v29 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v32 = v25;
      *(_DWORD *)v24 = 136315138;
      v31 = sub_C6F4(v30, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v24 + 4, v24 + 12);
      _os_log_impl(&dword_0, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    v26 = swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

uint64_t sub_56730@<X0>(uint64_t a1@<X8>)
{
  return sub_564F8((uint64_t *)&unk_1FE3C0, (uint64_t (*)(_QWORD))&type metadata accessor for DeviceMetrics, 0x654D656369766544, 0xED00007363697274, a1);
}

uint64_t sub_56764@<X0>(uint64_t a1@<X8>)
{
  return sub_56790(&qword_1FB7F8, &qword_1FB800, 0xD000000000000022, 0x80000000001861C0, a1);
}

uint64_t sub_56790@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v19;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2808C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
    return sub_982C((uint64_t)v17, a5, a2);
  v19 = *v17;
  v20 = static os_log_type_t.fault.getter();
  v21 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v21, v20))
  {
    v27 = a4;
    v22 = swift_slowAlloc(12, -1);
    v28 = a5;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v31 = v24;
    *(_DWORD *)v23 = 136315138;
    v30 = sub_C6F4(v29, v27, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v23 + 4, v23 + 12);
    _os_log_impl(&dword_0, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v19);
  v25 = swift_release(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
}

uint64_t sub_569B8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_C6F4(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_261F4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_56B70@<X0>(uint64_t a1@<X8>)
{
  return sub_564F8(&qword_1FCB20, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_56BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) == 0)
  {
    v10 = swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v20 = v18;
      *(_DWORD *)v14 = 136315138;
      v17 = v14 + 4;
      v19 = sub_C6F4(0xD000000000000010, 0x8000000000186180, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v17, v14 + 12);
      _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      v15 = v18;
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    sub_5766C(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v20;
  }
  return a1;
}

uint64_t sub_56D88(uint64_t a1, char a2)
{
  return sub_56DDC(a1, a2, 0x747865546576694CLL, 0xE800000000000000);
}

uint64_t sub_56DA0(uint64_t a1, char a2)
{
  return sub_56DDC(a1, a2, 0x746E6F4374786554, 0xEB00000000746E65);
}

uint64_t sub_56DC0(uint64_t a1, char a2)
{
  return sub_56DDC(a1, a2, 0xD00000000000001DLL, 0x8000000000186210);
}

uint64_t sub_56DDC(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_retain();
  if ((a2 & 1) == 0)
  {
    v13 = static os_log_type_t.fault.getter(v12);
    v14 = static Log.runtimeIssuesLog.getter();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v23 = a4;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v18 = a3;
      v19 = v17;
      v25 = v17;
      *(_DWORD *)v16 = 136315138;
      v24 = sub_C6F4(v18, v23, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v16 + 4, v16 + 12);
      _os_log_impl(&dword_0, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v11, a1);
    v20 = swift_release(a1);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v20);
    return v25;
  }
  return a1;
}

id sub_56F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id result;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB1E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NowPlayingArtwork.Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2808C(a1, (uint64_t)v5, (uint64_t *)&unk_1FB1E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    goto LABEL_5;
  }
  result = objc_msgSend((id)objc_opt_self(UIImage), "defaultPodcastArtwork");
  if (result)
  {
    *v9 = result;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for NowPlayingArtwork.Data.image(_:), v6);
    sub_9944((uint64_t)v5, (uint64_t *)&unk_1FB1E0);
LABEL_5:
    KeyPath = swift_getKeyPath(&unk_16DA58);
    __chkstk_darwin(KeyPath);
    *(&v14 - 2) = v1;
    *(&v14 - 1) = (uint64_t)v9;
    v15 = v1;
    v12 = sub_8330(&qword_1FCE18, type metadata accessor for NowPlayingArtworkViewModel, (uint64_t)&unk_16D9E8);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v15, KeyPath, sub_5897C, &v14 - 4, (char *)&type metadata for () + 8, v12);
    v13 = swift_release(KeyPath);
    return (id)(*(uint64_t (**)(_QWORD *, uint64_t, __n128))(v7 + 8))(v9, v6, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_57190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_16DA58);
  v8[0] = v1;
  v4 = sub_8330(&qword_1FCE18, type metadata accessor for NowPlayingArtworkViewModel, (uint64_t)&unk_16D9E8);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v4);
  swift_release(KeyPath);
  v5 = v1 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData;
  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData, v8, 0, 0);
  v6 = type metadata accessor for NowPlayingArtwork.Data(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v5, v6);
}

uint64_t sub_57254@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16DA58);
  v9[0] = v3;
  v5 = sub_8330(&qword_1FCE18, type metadata accessor for NowPlayingArtworkViewModel, (uint64_t)&unk_16D9E8);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v3 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData;
  swift_beginAccess(v3 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData, v9, 0, 0);
  v7 = type metadata accessor for NowPlayingArtwork.Data(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v6, v7);
}

uint64_t sub_57318(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  _BYTE v13[16];
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;

  v4 = type metadata accessor for NowPlayingArtwork.Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_16DA58);
  v14 = v8;
  v15 = v7;
  v16 = v8;
  v10 = sub_8330(&qword_1FCE18, type metadata accessor for NowPlayingArtworkViewModel, (uint64_t)&unk_16D9E8);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v16, KeyPath, sub_588DC, v13, (char *)&type metadata for () + 8, v10);
  v11 = swift_release(KeyPath);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v11);
}

uint64_t sub_57424(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = a1 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData;
  swift_beginAccess(a1 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData, v6, 33, 0);
  v4 = type metadata accessor for NowPlayingArtwork.Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess(v6);
}

uint64_t sub_574A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData;
  v2 = type metadata accessor for NowPlayingArtwork.Data(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel_placement;
  v4 = type metadata accessor for NowPlayingArtwork.Placement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel___observationRegistrar;
  v6 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_57540()
{
  return type metadata accessor for NowPlayingArtworkViewModel(0);
}

uint64_t type metadata accessor for NowPlayingArtworkViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1FCD40;
  if (!qword_1FCD40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingArtworkViewModel);
  return result;
}

uint64_t sub_57584(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  result = type metadata accessor for NowPlayingArtwork.Data(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for NowPlayingArtwork.Placement(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for ObservationRegistrar(319);
      if (v5 <= 0x3F)
      {
        v6[2] = *(_QWORD *)(result - 8) + 64;
        result = swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
        if (!result)
          return 0;
      }
    }
  }
  return result;
}

uint64_t sub_57628(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t destroy for NowPlayingArtworkView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  return sub_5766C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_BYTE *)(a1 + 33));
}

uint64_t sub_5766C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t initializeWithCopy for NowPlayingArtworkView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 33);
  v8 = *((unsigned __int8 *)a2 + 32);
  swift_retain(v3);
  swift_retain(v4);
  sub_57628(v5, v6, v8, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = v7;
  return a1;
}

uint64_t *assignWithCopy for NowPlayingArtworkView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a2[3];
  v10 = *((_BYTE *)a2 + 33);
  v11 = *((unsigned __int8 *)a2 + 32);
  sub_57628(v8, v9, v11, v10);
  v12 = a1[2];
  v13 = a1[3];
  v14 = *((_BYTE *)a1 + 33);
  a1[2] = v8;
  a1[3] = v9;
  v15 = *((unsigned __int8 *)a1 + 32);
  *((_BYTE *)a1 + 32) = v11;
  *((_BYTE *)a1 + 33) = v10;
  sub_5766C(v12, v13, v15, v14);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for NowPlayingArtworkView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 33);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 33);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 33) = v6;
  sub_5766C(v7, v8, v10, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtworkView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingArtworkView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtworkView()
{
  return &type metadata for NowPlayingArtworkView;
}

uint64_t sub_5789C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19EDEC, 1);
}

void sub_578AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  int v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  double v45;
  double v46;
  double v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  char v54;
  char v55;
  double v56;
  uint64_t v57;
  char v58;
  char v59;
  double v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  __n128 v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  __int128 v90;
  unint64_t v91;
  id v92;
  __int128 v93;
  __int128 v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  unint64_t v106;
  char v107;
  __int128 v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  __n128 v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  __int128 v135;
  char v136;
  __int128 v137;
  __int128 v138;
  char v139;
  char v140[8];

  v130 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE38);
  __chkstk_darwin(v3);
  v118 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE40);
  __chkstk_darwin(v5);
  v116 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = (_QWORD *)type metadata accessor for Artwork(0);
  v120 = *(v127 - 1);
  __chkstk_darwin(v127);
  v119 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1FCDF8);
  v123 = *(v128 - 1);
  v8 = __chkstk_darwin(v128);
  v117 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v122 = (char *)&v113 - v10;
  v115 = type metadata accessor for ArtworkModel(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v124 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE00);
  __chkstk_darwin(v129);
  v132 = (uint64_t)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE08);
  __chkstk_darwin(v126);
  v14 = (uint64_t *)((char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE10);
  __chkstk_darwin(v131);
  v125 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Image.ResizingMode(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for NowPlayingArtwork.Data(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (id *)((char *)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121 = a1;
  v24 = *a1;
  KeyPath = swift_getKeyPath(&unk_16DA58);
  *(_QWORD *)&v137 = v24;
  v26 = sub_8330(&qword_1FCE18, type metadata accessor for NowPlayingArtworkViewModel, (uint64_t)&unk_16D9E8);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v137, KeyPath, v26);
  swift_release(KeyPath);
  v27 = v24 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData;
  v28 = swift_beginAccess(v24 + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingArtworkViewModel__artworkData, v140, 0, 0);
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v21 + 16))(v23, v27, v20, v28);
  v29 = (*(uint64_t (**)(id *, uint64_t))(v21 + 88))(v23, v20);
  if (v29 == enum case for NowPlayingArtwork.Data.image(_:))
  {
    (*(void (**)(id *, uint64_t))(v21 + 96))(v23, v20);
    v30 = *v23;
    v31 = Image.init(uiImage:)();
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for Image.ResizingMode.stretch(_:), v16);
    v32 = Image.resizable(capInsets:resizingMode:)(v19, v31, 0.0, 0.0, 0.0, 0.0);
    v33 = swift_release(v31);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v33);
    *v14 = v32;
    swift_storeEnumTagMultiPayload(v14, v126, 0);
    v34 = sub_8330(&qword_1FADA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    swift_retain(v32);
    *(_QWORD *)&v137 = v127;
    *((_QWORD *)&v137 + 1) = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v137, &opaque type descriptor for <<opaque return type of View.withPodcastsBridge(_:)>>, 1);
    v36 = (uint64_t)v125;
    _ConditionalContent<>.init(storage:)(v14, &type metadata for Image, v128, &protocol witness table for Image, OpaqueTypeConformance2);
    v37 = v132;
    sub_2808C(v36, v132, &qword_1FCE10);
    swift_storeEnumTagMultiPayload(v37, v129, 0);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE28);
    v39 = sub_586EC();
    v40 = sub_58794();
    _ConditionalContent<>.init(storage:)(v37, v131, v38, v39, v40);

    sub_9944(v36, &qword_1FCE10);
    swift_release(v32);
    return;
  }
  v113 = v14;
  if (v29 == enum case for NowPlayingArtwork.Data.model(_:))
  {
    (*(void (**)(id *, uint64_t))(v21 + 96))(v23, v20);
    v41 = v124;
    sub_3363C((uint64_t)v23, v124);
    v42 = v116;
    sub_58898(v41, v116);
    v43.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v114 + 56))(v42, 0, 1, v115);
    v44.n128_f64[0] = NowPlayingArtwork.Placement.preferredSize.getter(v43);
    v45 = v44.n128_f64[0];
    NowPlayingArtwork.Placement.preferredSize.getter(v44);
    v47 = v46;
    v48 = v121;
    v49 = v121[2];
    v50 = v121[3];
    v51 = *((unsigned __int8 *)v121 + 32);
    v52 = *((unsigned __int8 *)v121 + 33);
    sub_57628(v49, v50, v51, *((_BYTE *)v121 + 33));
    *(double *)&v53 = COERCE_DOUBLE(sub_56BA4(v49, v50, v51 | (v52 << 8)));
    v55 = v54;
    sub_5766C(v49, v50, v51, v52);
    v56 = *(double *)&v53;
    if ((v55 & 1) != 0)
      v56 = v45;
    if (v45 >= v56)
      v45 = v56;
    sub_57628(v49, v50, v51, v52);
    *(double *)&v57 = COERCE_DOUBLE(sub_56BA4(v49, v50, v51 | (v52 << 8)));
    v59 = v58;
    sub_5766C(v49, v50, v51, v52);
    v60 = *(double *)&v57;
    if ((v59 & 1) != 0)
      v60 = v47;
    if (v47 >= v60)
      v47 = v60;
    v61 = type metadata accessor for CropCode(0);
    v62 = v118;
    v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v118, 1, 1, v61);
    v64 = static Alignment.top.getter(v63);
    v65 = v119;
    Artwork.init(artwork:fittingImageSize:isResizable:alignment:cropCodeOverride:contentMode:)(v42, 1, v64, v66, v62, 1, v45, v47);
    type metadata accessor for PodcastsUIKitSwiftUIBridge(0);
    v67 = swift_retain(v48[1]);
    v68 = PodcastsUIKitSwiftUIBridge.__allocating_init(asPartOf:responder:)(v67, 0);
    v69 = sub_8330(&qword_1FADA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v70 = v117;
    v71 = v127;
    View.withPodcastsBridge(_:)(v68, v127, v69);
    v72 = swift_release(v68);
    (*(void (**)(char *, _QWORD *, __n128))(v120 + 8))(v65, v71, v72);
    v73 = v123;
    v74 = v122;
    v75 = v128;
    (*(void (**)(char *, char *, _QWORD *))(v123 + 32))(v122, v70, v128);
    v76 = v113;
    (*(void (**)(uint64_t *, char *, _QWORD *))(v73 + 16))(v113, v74, v75);
    swift_storeEnumTagMultiPayload(v76, v126, 1);
    *(_QWORD *)&v137 = v71;
    *((_QWORD *)&v137 + 1) = v69;
    v77 = swift_getOpaqueTypeConformance2(&v137, &opaque type descriptor for <<opaque return type of View.withPodcastsBridge(_:)>>, 1);
    v78 = (uint64_t)v125;
    _ConditionalContent<>.init(storage:)(v76, &type metadata for Image, v75, &protocol witness table for Image, v77);
    v79 = v132;
    sub_2808C(v78, v132, &qword_1FCE10);
    swift_storeEnumTagMultiPayload(v79, v129, 0);
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE28);
    v81 = sub_586EC();
    v82 = sub_58794();
    _ConditionalContent<>.init(storage:)(v79, v131, v80, v81, v82);
    sub_9944(v78, &qword_1FCE10);
    (*(void (**)(char *, _QWORD *))(v73 + 8))(v74, v75);
    sub_33680(v124);
  }
  else
  {
    if (v29 == enum case for NowPlayingArtwork.Data.catalog(_:))
    {
      (*(void (**)(id *, uint64_t))(v21 + 96))(v23, v20);
      v83 = *v23;
      v84 = (void *)objc_opt_self(UIImage);
      v85 = v83;
      v86 = objc_msgSend(v84, "defaultPodcastArtwork");
      v87 = v132;
      if (v86)
      {
        v88 = v86;
        v133 = 0;
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB1D0);
        State.init(wrappedValue:)(&v137, &v133, v89);
        v90 = v137;
        v133 = (uint64_t)v88;
        v134 = v85;
        v135 = v137;
        v136 = 0;
        v91 = sub_586A8();
        v92 = v85;
        v128 = v88;
        v127 = (id)v90;
        swift_retain(*((_QWORD *)&v90 + 1));
        _ConditionalContent<>.init(storage:)(&v133, &type metadata for ArtworkCatalogImage, &type metadata for Image, v91, &protocol witness table for Image);
        v93 = v137;
        v94 = v138;
        v95 = v139;
        *(_OWORD *)v87 = v137;
        *(_OWORD *)(v87 + 16) = v94;
        *(_BYTE *)(v87 + 32) = v95;
        swift_storeEnumTagMultiPayload(v87, v129, 1);
        sub_58800((void *)v93, *((void **)&v93 + 1), (void *)v94, *((uint64_t *)&v94 + 1), v95);
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE28);
        v97 = sub_586EC();
        v98 = sub_58794();
        _ConditionalContent<>.init(storage:)(v87, v131, v96, v97, v98);

        sub_58858((void *)v93, *((void **)&v93 + 1), (void *)v94, *((void **)&v94 + 1), v95);
        swift_release(*((_QWORD *)&v90 + 1));

        return;
      }
      __break(1u);
    }
    else
    {
      v99 = objc_msgSend((id)objc_opt_self(UIImage), "defaultPodcastArtwork");
      v101 = v131;
      v100 = v132;
      if (v99)
      {
        v102 = Image.init(uiImage:)();
        v103 = v16;
        (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for Image.ResizingMode.stretch(_:), v16);
        v104 = Image.resizable(capInsets:resizingMode:)(v19, v102, 0.0, 0.0, 0.0, 0.0);
        v105 = swift_release(v102);
        (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v103, v105);
        v133 = v104;
        v134 = 0;
        v135 = 0uLL;
        v136 = 1;
        v106 = sub_586A8();
        swift_retain(v104);
        _ConditionalContent<>.init(storage:)(&v133, &type metadata for ArtworkCatalogImage, &type metadata for Image, v106, &protocol witness table for Image);
        v107 = v139;
        v108 = v138;
        *(_OWORD *)v100 = v137;
        *(_OWORD *)(v100 + 16) = v108;
        *(_BYTE *)(v100 + 32) = v107;
        swift_storeEnumTagMultiPayload(v100, v129, 1);
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE28);
        v110 = sub_586EC();
        v111 = sub_58794();
        _ConditionalContent<>.init(storage:)(v100, v101, v109, v110, v111);
        v112 = swift_release(v104);
        (*(void (**)(id *, uint64_t, __n128))(v21 + 8))(v23, v20, v112);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_5844C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _OWORD v22[2];
  __int16 v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCDD8);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCDE0);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_OWORD *)(v0 + 16);
  v22[0] = *(_OWORD *)v0;
  v22[1] = v8;
  v23 = *(_WORD *)(v0 + 32);
  v9 = static Color.clear.getter(v5);
  v10 = static Alignment.center.getter(v9);
  v12 = v11;
  sub_578AC(v22, (uint64_t)v3);
  v13 = (uint64_t *)&v3[*(int *)(v1 + 36)];
  *v13 = v10;
  v13[1] = v12;
  sub_2808C((uint64_t)v3, (uint64_t)v7 + *(int *)(v4 + 36), &qword_1FCDD8);
  *v7 = v9;
  sub_9944((uint64_t)v3, &qword_1FCDD8);
  v14 = LocalizedStringKey.init(stringLiteral:)(0x2074736163646F50, 0xEF6B726F77747241);
  v16 = v15;
  LOBYTE(v1) = v17;
  v19 = v18;
  v20 = sub_585E8();
  View.accessibilityLabel(_:)(v14, v16, v1 & 1, v19, v4, v20);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v16);
  return sub_9944((uint64_t)v7, &qword_1FCDE0);
}

unint64_t sub_585E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCDE8;
  if (!qword_1FCDE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCDE0);
    sub_58654();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCDE8);
  }
  return result;
}

unint64_t sub_58654()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCDF0;
  if (!qword_1FCDF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCDD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCDF0);
  }
  return result;
}

unint64_t sub_586A8()
{
  unint64_t result;

  result = qword_1FCE20;
  if (!qword_1FCE20)
  {
    result = swift_getWitnessTable(&unk_16DAA4, &type metadata for ArtworkCatalogImage);
    atomic_store(result, (unint64_t *)&qword_1FCE20);
  }
  return result;
}

unint64_t sub_586EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FCE30;
  if (!qword_1FCE30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCE10);
    v2[0] = type metadata accessor for Artwork(255);
    v2[1] = sub_8330(&qword_1FADA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.withPodcastsBridge(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCE30);
  }
  return result;
}

unint64_t sub_58794()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCE38;
  if (!qword_1FCE38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCE28);
    sub_586A8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCE38);
  }
  return result;
}

id sub_58800(void *a1, void *a2, void *a3, uint64_t a4, char a5)
{
  id v8;
  id v9;

  if ((a5 & 1) != 0)
    return (id)swift_retain(a1);
  swift_retain(a4);
  v8 = a1;
  v9 = a2;
  return a3;
}

uint64_t sub_58858(void *a1, void *a2, void *a3, void *a4, char a5)
{
  if ((a5 & 1) == 0)
  {

    a1 = a4;
  }
  return swift_release(a1);
}

uint64_t sub_58898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_588DC()
{
  uint64_t v0;

  return sub_57424(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_588F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCE40;
  if (!qword_1FCE40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCE48);
    sub_585E8();
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCE40);
  }
  return result;
}

uint64_t sub_5897C()
{
  return sub_588DC();
}

uint64_t destroy for ArtworkCatalogImage(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ArtworkCatalogImage(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v7 = v3;
  v8 = v4;
  v9 = v6;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for ArtworkCatalogImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for ArtworkCatalogImage(uint64_t a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkCatalogImage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkCatalogImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkCatalogImage()
{
  return &type metadata for ArtworkCatalogImage;
}

uint64_t sub_58B80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19EE30, 1);
}

uint64_t sub_58B90@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *v21;
  unint64_t v22;
  void *v23;
  unint64_t v24;
  id v25;
  id v26;
  char *v27;
  void (*v28)();
  uint64_t v29;
  uint64_t v30;
  void (**v31)();
  void (*v32)(char *, uint64_t);
  id v33;
  id v34;
  id v35;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;

  v43 = a5;
  v9 = type metadata accessor for Image.ResizingMode(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE50);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE58);
  __chkstk_darwin(v39);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = (uint64_t)a3;
  v45 = a4;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE60);
  State.wrappedValue.getter(&v46, v16);
  if (!v46)
    v17 = a1;
  v18 = Image.init(uiImage:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Image.ResizingMode.stretch(_:), v9);
  v19 = Image.resizable(capInsets:resizingMode:)(v12, v18, 0.0, 0.0, 0.0, 0.0);
  v20 = swift_release(v18);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  v44 = v19;
  v46 = a2;
  v21 = (_QWORD *)swift_allocObject(&unk_1CA410, 48, 7);
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = a3;
  v21[5] = a4;
  v22 = sub_59864();
  v23 = a1;
  v24 = sub_598A0();
  v25 = a2;
  v26 = v23;
  v38 = a3;
  swift_retain(a4);
  v27 = v41;
  View.onChange<A>(of:initial:_:)(&v46, 0, sub_59858, v21, &type metadata for Image, v22, &protocol witness table for Image, v24);
  swift_release(v21);

  swift_release(v44);
  v28 = (void (*)())swift_allocObject(&unk_1CA438, 48, 7);
  *((_QWORD *)v28 + 2) = v26;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = a3;
  *((_QWORD *)v28 + 5) = a4;
  v29 = v40;
  v30 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v15, v27, v42);
  v31 = (void (**)())&v15[*(int *)(v39 + 36)];
  *v31 = sub_598EC;
  v31[1] = v28;
  v31[2] = 0;
  v31[3] = 0;
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v33 = v25;
  v34 = v26;
  v35 = v38;
  swift_retain(a4);
  v32(v27, v30);
  return sub_598F8((uint64_t)v15, v43);
}

void sub_58E64(uint64_t *a1, uint64_t *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;

  v10 = *a1;
  v11 = *a2;
  sub_59864();
  if ((static NSObject.== infix(_:_:)(v10, v11) & 1) == 0)
    sub_58EE8(a3, a4, a5, a6);
}

void sub_58EE8(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[5];
  _QWORD *v43;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.artwork.getter(v10);
  swift_retain(a4);
  v13 = a1;
  v14 = a2;
  v15 = v13;
  v16 = v14;
  v17 = a3;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc(32, -1);
    v38 = v9;
    v22 = v21;
    v35 = (_QWORD *)swift_slowAlloc(8, -1);
    v37 = swift_slowAlloc(32, -1);
    aBlock[0] = v37;
    *(_DWORD *)v22 = 136315651;
    v40 = a4;
    v41 = sub_C6F4(0xD000000000000017, 0x8000000000186250, aBlock);
    v39 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock, v22 + 4, v22 + 12);
    *(_WORD *)(v22 + 12) = 2160;
    v41 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock, v22 + 14, v22 + 22);
    *(_WORD *)(v22 + 22) = 2113;
    HIDWORD(v34) = v20;
    v41 = (uint64_t)v16;
    v23 = v16;
    v36 = v8;
    v24 = v23;
    v17 = v39;
    a4 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock, v22 + 24, v22 + 32);
    v25 = v35;
    *v35 = v16;
    swift_release(a4);

    _os_log_impl(&dword_0, v18, BYTE4(v34), "%s Loading artwork for catalog=%{private,mask.hash}@.", (uint8_t *)v22, 0x20u);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
    swift_arrayDestroy(v25, 1, v26);
    swift_slowDealloc(v25, -1, -1);
    v27 = v37;
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v36);
  }
  else
  {

    swift_release(a4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v28 = (_QWORD *)swift_allocObject(&unk_1CA460, 48, 7);
  v28[2] = v15;
  v28[3] = v16;
  v28[4] = a3;
  v28[5] = a4;
  aBlock[4] = (uint64_t)sub_59980;
  v43 = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_597D4;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  v29 = _Block_copy(aBlock);
  v30 = v43;
  v31 = v15;
  v32 = v16;
  v33 = v17;
  swift_retain(a4);
  objc_msgSend(v32, "requestImageWithCompletion:", v29, swift_release(v30).n128_f64[0]);
  _Block_release(v29);
}

uint64_t sub_59264(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  _QWORD *v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _BYTE v54[12];
  int v55;
  os_log_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v54[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = &v54[-v18];
  if (a2)
  {
    static Logger.artwork.getter(v17);
    v62 = a6;
    swift_retain(a6);
    v20 = a3;
    v21 = a4;
    v22 = v20;
    v23 = v21;
    v24 = a5;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc(32, -1);
      LODWORD(v58) = v27;
      v29 = v28;
      v57 = (_QWORD *)swift_slowAlloc(8, -1);
      v59 = swift_slowAlloc(32, -1);
      v64[0] = v59;
      *(_DWORD *)v29 = 136315651;
      v60 = (void *)v12;
      v63 = sub_C6F4(0xD000000000000017, 0x8000000000186250, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v29 + 4, v29 + 12);
      *(_WORD *)(v29 + 12) = 2160;
      v63 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v29 + 14, v29 + 22);
      *(_WORD *)(v29 + 22) = 2113;
      v61 = v13;
      v63 = (uint64_t)v23;
      v30 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v29 + 24, v29 + 32);
      v31 = v57;
      *v57 = v23;
      swift_release(v62);

      _os_log_impl(&dword_0, v25, (os_log_type_t)v58, "%s Unable to load artwork for catalog=%{private,mask.hash}@.", (uint8_t *)v29, 0x20u);
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
      swift_arrayDestroy(v31, 1, v32);
      swift_slowDealloc(v31, -1, -1);
      v33 = v59;
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      return (*(uint64_t (**)(_BYTE *, void *))(v61 + 8))(v16, v60);
    }
    else
    {

      swift_release(v62);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v12);
    }
  }
  else
  {
    v61 = v13;
    static Logger.artwork.getter(v17);
    swift_retain(a6);
    v35 = a3;
    v36 = a4;
    v37 = v35;
    v38 = v36;
    v39 = a5;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter();
    v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = swift_slowAlloc(32, -1);
      v58 = v39;
      v44 = v43;
      v57 = (_QWORD *)swift_slowAlloc(8, -1);
      v59 = swift_slowAlloc(32, -1);
      v64[0] = v59;
      *(_DWORD *)v44 = 136315651;
      v62 = a6;
      v63 = sub_C6F4(0xD000000000000017, 0x8000000000186250, v64);
      v56 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v44 + 4, v44 + 12);
      *(_WORD *)(v44 + 12) = 2160;
      v63 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v44 + 14, v44 + 22);
      *(_WORD *)(v44 + 22) = 2113;
      v60 = a5;
      v63 = (uint64_t)v38;
      v45 = v38;
      v55 = v42;
      v46 = a1;
      v47 = v45;
      a6 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v44 + 24, v44 + 32);
      v48 = v57;
      *v57 = v38;
      swift_release(a6);

      a1 = v46;
      a5 = v60;
      v49 = v56;
      _os_log_impl(&dword_0, v56, (os_log_type_t)v55, "%s Successfully loaded artwork for catalog=%{private,mask.hash}@.", (uint8_t *)v44, 0x20u);
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
      swift_arrayDestroy(v48, 1, v50);
      swift_slowDealloc(v48, -1, -1);
      v51 = v59;
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

      swift_release(a6);
    }
    (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v19, v12);
    v64[0] = (uint64_t)a5;
    v64[1] = a6;
    v63 = (uint64_t)a1;
    v52 = a1;
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE60);
    return State.wrappedValue.setter(&v63, v53);
  }
}

void sub_597D4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_59848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_58B90(*(void **)v1, *(void **)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_59858(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  sub_58E64(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

unint64_t sub_59864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCE68;
  if (!qword_1FCE68)
  {
    v1 = objc_opt_self(MPArtworkCatalog);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FCE68);
  }
  return result;
}

unint64_t sub_598A0()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1FCE70;
  if (!qword_1FCE70)
  {
    v1 = sub_59864();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1FCE70);
  }
  return result;
}

void sub_598EC()
{
  uint64_t v0;

  sub_58EE8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_598F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCE58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_59980(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_59264(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_7(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_599A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1FCE78;
  if (!qword_1FCE78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCE58);
    v2[0] = &type metadata for Image;
    v2[1] = sub_59864();
    v2[2] = &protocol witness table for Image;
    v2[3] = sub_598A0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FCE78);
  }
  return result;
}

void sub_59A4C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v27 = *(_QWORD *)(v1 + 16);
  swift_retain(v27);
  v3 = sub_59FBC();
  v4 = type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(0);
  v5 = sub_8330((unint64_t *)&qword_1FCF50, type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel, (uint64_t)&unk_16E000);
  v25 = ObservedObject.init(wrappedValue:)(v3, v4, v5);
  v26 = v6;
  v7 = swift_allocObject(&unk_1CA4E8, 24, 7);
  v8 = swift_weakInit(v7 + 16, v1);
  v9 = static Alignment.center.getter(v8);
  _FrameLayout.init(width:height:alignment:)(&v28, 0, 1, 0x4050000000000000, 0, v9, v10);
  v11 = v28;
  v12 = v29;
  v13 = v30;
  v14 = v31;
  v23 = v33;
  v24 = v32;
  v15 = static AnyTransition.push(from:)(2);
  v16 = static AnyTransition.opacity.getter();
  v17 = AnyTransition.combined(with:)(v16, v15);
  swift_release(v15);
  swift_release(v16);
  v18 = static AnyTransition.push(from:)(0);
  v19 = static AnyTransition.opacity.getter();
  v20 = AnyTransition.combined(with:)(v19, v18);
  swift_release(v18);
  v21 = swift_release(v19);
  v22 = static AnyTransition.asymmetric(insertion:removal:)(v17, v20, v21);
  swift_release(v17);
  swift_release(v20);
  *(_QWORD *)a1 = v27;
  *(_QWORD *)(a1 + 8) = v25;
  *(_QWORD *)(a1 + 16) = v26;
  *(_QWORD *)(a1 + 24) = sub_5B0EC;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v24;
  *(_QWORD *)(a1 + 96) = v23;
  *(_QWORD *)(a1 + 104) = v22;
}

void sub_59C00(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = v1;
  if (!a1)
    goto LABEL_14;
  v6 = (uint64_t)a1;
  v7 = objc_msgSend(a1, "podcast");
  if (!v7)
    goto LABEL_14;
  v8 = v7;
  v9 = MPModelObject.adamID.getter(v7);
  v11 = v10;

  if ((v11 & 1) != 0)
    goto LABEL_14;
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  v13 = MPModelObject.adamID.getter(v12);
  if ((v14 & 1) != 0)
    goto LABEL_14;
  v2 = v13;
  if (v13 < 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v11 = v5[3];
  if (v11)
  {
    swift_retain(v11);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v4 = v15;
    v3 = v16;
    v17 = v5[9];
    if (v17)
    {
      if ((v18 = v5[8], v15 == v18) && v17 == v16
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v18, v17, 0) & 1) != 0)
      {
        if (v5[7])
        {
          swift_release(v11);
          swift_bridgeObjectRelease(v3);
          return;
        }
      }
    }
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 5);
    if (Strong)
    {
      v26 = Strong;
      v27 = *(_QWORD *)(Strong + 288);
      v28 = static Animation.default.getter(Strong);
      withAnimation<A>(_:_:)(v28, sub_5B0FC, v27, (char *)&type metadata for () + 8);
      swift_unknownObjectRelease(v26);
      swift_release(v28);
    }
    sub_5A338();
    v29 = v5[7];
    if (v29)
    {
      v30 = swift_retain(v5[7]);
      v6 = dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.subscriptions.getter(v30);
      swift_release(v29);
    }
    else
    {
      v6 = (uint64_t)_swiftEmptyArrayStorage;
    }
    if (!((unint64_t)v6 >> 62))
    {
      v31 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
      if (v31)
      {
LABEL_23:
        if (v31 < 1)
        {
          __break(1u);
          return;
        }
        if ((v6 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v31; ++i)
          {
            v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
            AnyCancellable.cancel()();
            swift_unknownObjectRelease(v33);
          }
        }
        else
        {
          v34 = 0;
          do
          {
            v35 = *(_QWORD *)(v6 + 8 * v34++ + 32);
            swift_retain(v35);
            AnyCancellable.cancel()();
            swift_release(v35);
          }
          while (v31 != v34);
        }
      }
LABEL_30:
      swift_bridgeObjectRelease(v6);
      v36 = v5[4];
      v37 = type metadata accessor for NowPlayingEpisodeUpsellBannerProvider(0);
      swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
      swift_retain(v11);
      swift_retain(v36);
      swift_bridgeObjectRetain(v3);
      v38 = NowPlayingEpisodeUpsellBannerProvider.init(dataProvider:metricsController:episodeAdamId:presentationType:)(v11, v36, v4, v3, 2);
      v39 = v5[7];
      v5[7] = v38;
      swift_release(v39);
      v40 = v5[9];
      v5[8] = v4;
      v5[9] = v3;
      swift_bridgeObjectRelease(v40);
      v41 = v5[7];
      if (v41)
      {
        v42 = swift_allocObject(&unk_1CA4E8, 24, 7);
        swift_weakInit(v42 + 16, v5);
        swift_retain(v41);
        swift_retain(v42);
        dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.nowPlayingEpisodeUpsellBannerPublisher(episodeStoreTrackId:podcastStoreTrackId:imageFetchCompletion:)(v2, v9, sub_5B114, v42);
        swift_release(v41);
        swift_release_n(v42, 2);
      }
      swift_release(v11);
      return;
    }
LABEL_36:
    if (v6 < 0)
      v43 = v6;
    else
      v43 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v31 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v6);
    if (v31)
      goto LABEL_23;
    goto LABEL_30;
  }
LABEL_14:
  v19 = v5[9];
  v5[8] = 0;
  v5[9] = 0;
  swift_bridgeObjectRelease(v19);
  v20 = v5[7];
  v5[7] = 0;
  swift_release(v20);
  sub_5A338();
  v21 = swift_unknownObjectWeakLoadStrong(v5 + 5);
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)(v21 + 288);
    v24 = static Animation.default.getter(v21);
    withAnimation<A>(_:_:)(v24, sub_5B0FC, v23, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v22);
    swift_release(v24);
  }
}

uint64_t sub_59FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF60);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(v0 + 80);
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 80);
  }
  else
  {
    v13 = type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(0);
    v12 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    v14 = v12 + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel__bannerModel;
    v15 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
    sub_2808C((uint64_t)v10, (uint64_t)v8, &qword_1FCF58);
    Published.init(initialValue:)(v8, v5);
    sub_9944((uint64_t)v10, &qword_1FCF58);
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v14, v4, v1);
    v16 = (_QWORD *)(v12
                   + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock);
    *v16 = UIScreen.Dimensions.size.getter;
    v16[1] = 0;
    v17 = (_QWORD *)(v12
                   + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock);
    *v17 = UIScreen.Dimensions.size.getter;
    v17[1] = 0;
    v18 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 80) = v12;
    swift_retain(v12);
    swift_release(v18);
    v11 = 0;
  }
  swift_retain(v11);
  return v12;
}

uint64_t sub_5A184(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v2 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v20, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v10 = result;
    v11 = sub_59FBC();
    swift_release(v10);
    KeyPath = swift_getKeyPath(&unk_16DBA8);
    v13 = swift_getKeyPath(&off_16DBD0);
    static Published.subscript.getter(v8, v11, KeyPath, v13);
    swift_release(v11);
    swift_release(KeyPath);
    v14 = swift_release(v13);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 48))(v8, 1, v2, v14))
    {
      return sub_9944((uint64_t)v8, &qword_1FCF58);
    }
    else
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v3 + 16))(v5, v8, v2);
      v15 = sub_9944((uint64_t)v8, &qword_1FCF58);
      v16 = (void (*)(uint64_t))NowPlayingEpisodeUpsellBannerModel.onBannerAppearBlock.getter(v15);
      v18 = v17;
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v16)
      {
        v16(result);
        return sub_145A0((uint64_t)v16, v18);
      }
    }
  }
  return result;
}

double sub_5A338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t Strong;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  v2 = __chkstk_darwin(v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v22[-v5];
  v7 = sub_59FBC();
  v8 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  KeyPath = swift_getKeyPath(&unk_16DBA8);
  v10 = swift_getKeyPath(&off_16DBD0);
  sub_2808C((uint64_t)v6, (uint64_t)v4, &qword_1FCF58);
  swift_retain(v7);
  static Published.subscript.setter(v4, v7, KeyPath, v10);
  sub_9944((uint64_t)v6, &qword_1FCF58);
  swift_release(v7);
  v11 = sub_59FBC();
  v12 = (_QWORD *)(v11
                 + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock);
  v13 = *(_QWORD *)(v11
                  + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock
                  + 8);
  *v12 = UIScreen.Dimensions.size.getter;
  v12[1] = 0;
  swift_release(v11);
  swift_release(v13);
  v14 = sub_59FBC();
  v15 = (_QWORD *)(v14
                 + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock);
  v16 = *(_QWORD *)(v14
                  + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock
                  + 8);
  *v15 = UIScreen.Dimensions.size.getter;
  v15[1] = 0;
  swift_release(v14);
  swift_release(v16);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 40);
  if (Strong)
  {
    v19 = Strong;
    v20 = __chkstk_darwin(Strong);
    *(_QWORD *)&v22[-16] = v20;
    v22[-8] = 0;
    v21 = static Animation.default.getter(v20);
    withAnimation<A>(_:_:)(v21, sub_5B3A4, &v22[-32], (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v19);
    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  return result;
}

void sub_5A528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  void (*v59)(char *, char *, uint64_t, __n128);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t, __n128);
  __n128 v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)();
  uint64_t v90;
  uint64_t v91;
  uint64_t (**v92)();
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t (**v98)();
  __n128 v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t (*v103)();
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108[24];
  char v109[24];
  char v110[24];
  char v111[32];
  _BYTE v112[24];
  _BYTE v113[32];

  v107 = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v105 = (char *)&v100 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v100 - v10;
  v12 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v100 - v17;
  v19 = a2 + 16;
  sub_2808C(a1, (uint64_t)v11, &qword_1FCF58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_9944((uint64_t)v11, &qword_1FCF58);
    swift_beginAccess(a2 + 16, v113, 0, 0);
    Strong = swift_weakLoadStrong(a2 + 16);
    if (Strong)
    {
      v21 = Strong;
      sub_5A338();
      swift_release(v21);
    }
    swift_beginAccess(a2 + 16, v112, 0, 0);
    v22 = swift_weakLoadStrong(a2 + 16);
    if (v22)
    {
      v23 = v22;
      v24 = swift_unknownObjectWeakLoadStrong(v22 + 40);
      if (v24)
      {
        v25 = v24;
        v26 = *(_QWORD *)(v24 + 288);
        v27 = static Animation.default.getter(v24);
        withAnimation<A>(_:_:)(v27, sub_5B0FC, v26, (char *)&type metadata for () + 8);
        swift_release(v23);
        swift_unknownObjectRelease(v25);
        swift_release(v27);
        return;
      }
      goto LABEL_26;
    }
  }
  else
  {
    v104 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v104(v18, v11, v12);
    swift_beginAccess(a2 + 16, v113, 0, 0);
    v28 = swift_weakLoadStrong(a2 + 16);
    v101 = v7;
    if (v28)
    {
      v29 = v28;
      v30 = v16;
      v31 = swift_unknownObjectWeakLoadStrong(v28 + 40);
      swift_release(v29);
      if (v31)
      {
        v33 = __chkstk_darwin(v32);
        *(&v100 - 2) = v31;
        *((_BYTE *)&v100 - 8) = 1;
        v34 = static Animation.default.getter(v33);
        v35 = v107;
        withAnimation<A>(_:_:)(v34, sub_5B11C, &v100 - 4, (char *)&type metadata for () + 8);
        v107 = v35;
        swift_unknownObjectRelease(v31);
        swift_release(v34);
      }
      v16 = v30;
    }
    if ((NowPlayingEpisodeUpsellBannerModel.shouldShowMiniHint.getter() & 1) != 0)
    {
      swift_beginAccess(v19, v112, 0, 0);
      v36 = swift_weakLoadStrong(v19);
      if (v36)
      {
        v37 = v36;
        v38 = swift_unknownObjectWeakLoadStrong(v36 + 40);
        v39 = swift_release(v37);
        if (v38)
        {
          v40 = NowPlayingEpisodeUpsellBannerModel.subscriptionTitle.getter(v39);
          v42 = v41;
          v103 = (uint64_t (*)())&v100;
          v43 = __chkstk_darwin(v40);
          *(&v100 - 4) = v44;
          *(&v100 - 3) = v43;
          *(&v100 - 2) = v45;
          v46 = v16;
          v47 = static Animation.default.getter(v43);
          withAnimation<A>(_:_:)(v47, sub_5B20C, &v100 - 6, (char *)&type metadata for () + 8);
          swift_unknownObjectRelease(v38);
          v48 = v47;
          v16 = v46;
          swift_release(v48);
          swift_bridgeObjectRelease(v42);
        }
      }
    }
    else
    {
      swift_beginAccess(v19, v112, 0, 0);
      v49 = swift_weakLoadStrong(v19);
      if (v49)
      {
        v50 = v49;
        v51 = swift_unknownObjectWeakLoadStrong(v49 + 40);
        if (v51)
        {
          v52 = v51;
          v53 = *(_QWORD *)(v51 + 288);
          v54 = static Animation.default.getter(v51);
          withAnimation<A>(_:_:)(v54, sub_5B0FC, v53, (char *)&type metadata for () + 8);
          swift_release(v50);
          swift_unknownObjectRelease(v52);
          v55 = v54;
        }
        else
        {
          v55 = v50;
        }
        swift_release(v55);
      }
    }
    v56 = swift_allocObject(&unk_1CA4E8, 24, 7);
    swift_beginAccess(v19, v111, 0, 0);
    v57 = swift_weakLoadStrong(v19);
    swift_weakInit(v56 + 16, v57);
    v58 = swift_release(v57);
    v59 = *(void (**)(char *, char *, uint64_t, __n128))(v13 + 16);
    v59(v16, v18, v12, v58);
    v60 = *(unsigned __int8 *)(v13 + 80);
    v107 = v19;
    v102 = v18;
    v61 = v16;
    v62 = (v60 + 24) & ~v60;
    v63 = v62 + v106;
    v64 = v60 | 7;
    v65 = swift_allocObject(&unk_1CA510, v62 + v106, v60 | 7);
    *(_QWORD *)(v65 + 16) = v56;
    v103 = (uint64_t (*)())v65;
    v66 = (void (*)(uint64_t, char *, uint64_t))v104;
    v104((char *)(v65 + v62), v61, v12);
    v67 = swift_allocObject(&unk_1CA4E8, 24, 7);
    v68 = swift_weakLoadStrong(v107);
    v106 = v13;
    v69 = v68;
    swift_weakInit(v67 + 16, v68);
    v70 = v69;
    v71 = v59;
    v72 = swift_release(v70);
    v73 = v102;
    v71(v61, v102, v12, v72);
    v74 = swift_allocObject(&unk_1CA538, v63, v64);
    *(_QWORD *)(v74 + 16) = v67;
    v75 = v61;
    v76 = v73;
    v77 = v107;
    v66(v74 + v62, v75, v12);
    swift_beginAccess(v77, v110, 0, 0);
    v78 = swift_weakLoadStrong(v77);
    if (v78)
    {
      v79 = v78;
      v80 = sub_59FBC();
      v81 = swift_release(v79);
      v82 = (uint64_t)v105;
      v71(v105, v76, v12, v81);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v82, 0, 1, v12);
      KeyPath = swift_getKeyPath(&unk_16DBA8);
      v84 = swift_getKeyPath(&off_16DBD0);
      v85 = (uint64_t)v101;
      sub_2808C(v82, (uint64_t)v101, &qword_1FCF58);
      swift_retain(v80);
      static Published.subscript.setter(v85, v80, KeyPath, v84);
      sub_9944(v82, &qword_1FCF58);
      swift_release(v80);
    }
    v86 = v76;
    v87 = v106;
    swift_beginAccess(v77, v109, 0, 0);
    v88 = swift_weakLoadStrong(v77);
    v89 = v103;
    if (v88)
    {
      v90 = v88;
      v91 = sub_59FBC();
      swift_release(v90);
      v92 = (uint64_t (**)())(v91
                           + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock);
      v93 = *(_QWORD *)(v91
                      + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock
                      + 8);
      *v92 = sub_5B13C;
      v92[1] = v89;
      swift_retain(v89);
      swift_release(v91);
      swift_release(v93);
    }
    swift_beginAccess(v77, v108, 0, 0);
    v94 = swift_weakLoadStrong(v77);
    if (v94)
    {
      v95 = v94;
      v96 = sub_59FBC();
      swift_release(v89);
      v97 = swift_release(v95);
      (*(void (**)(char *, uint64_t, __n128))(v87 + 8))(v86, v12, v97);
      v98 = (uint64_t (**)())(v96
                           + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock);
      v23 = *(_QWORD *)(v96
                      + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock
                      + 8);
      *v98 = sub_5B1C0;
      v98[1] = (uint64_t (*)())v74;
      swift_release(v96);
LABEL_26:
      swift_release(v23);
      return;
    }
    swift_release(v74);
    v99 = swift_release(v89);
    (*(void (**)(char *, uint64_t, __n128))(v87 + 8))(v86, v12, v99);
  }
}

double sub_5ACA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v25[3];
  uint64_t v26;
  _BYTE v27[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = NowPlayingEpisodeUpsellBannerModel.primaryAction.getter();
    if (v5)
    {
      v6 = v5;
      v7 = NowPlayingEpisodeUpsellBannerModel.dismissBannerAction.getter();
      if (v7)
      {
        v8 = v7;
        v9 = type metadata accessor for NowPlayingUpsellBannerController();
        v26 = v9;
        v25[0] = v4;
        swift_retain(v6);
        swift_retain(v4);
        v10 = sub_5B228(v6, (uint64_t)v25, 0, v4);
        swift_release(v10);
        sub_9944((uint64_t)v25, &qword_1FD880);
        swift_release(v6);
        v26 = v9;
        v25[0] = v4;
        swift_retain(v4);
        v11 = swift_retain(v8);
        v12 = sub_5B228(v11, (uint64_t)v25, 0, v4);
        swift_release(v12);
        sub_9944((uint64_t)v25, &qword_1FD880);
        swift_release(v8);
        v13 = swift_unknownObjectWeakLoadStrong(v4 + 40);
        if (v13)
        {
          v14 = v13;
          v23 = __chkstk_darwin(v13);
          v24 = 0;
          v15 = static Animation.default.getter(v23);
          withAnimation<A>(_:_:)(v15, sub_5B3A4, &v22, (char *)&type metadata for () + 8);
          swift_unknownObjectRelease(v14);
          swift_release(v15);
        }
        v17 = swift_unknownObjectWeakLoadStrong(v4 + 40);
        if (v17)
        {
          v18 = v17;
          v19 = *(_QWORD *)(v17 + 288);
          v20 = static Animation.default.getter(v17);
          withAnimation<A>(_:_:)(v20, sub_5B0FC, v19, (char *)&type metadata for () + 8);
          swift_release(v6);
          swift_release(v8);
          swift_release(v4);
          swift_unknownObjectRelease(v18);
          v21 = v20;
LABEL_12:
          *(_QWORD *)&result = swift_release(v21).n128_u64[0];
          return result;
        }
        swift_release(v6);
        v16 = v8;
      }
      else
      {
        v16 = v6;
      }
      swift_release(v16);
    }
    v21 = v4;
    goto LABEL_12;
  }
  return result;
}

double sub_5AEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[4];
  _BYTE v20[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = NowPlayingEpisodeUpsellBannerModel.instrumentedDismissBannerAction.getter();
    if (v5)
    {
      v6 = v5;
      v19[3] = type metadata accessor for NowPlayingUpsellBannerController();
      v19[0] = v4;
      swift_retain(v6);
      swift_retain(v4);
      v7 = sub_5B228(v6, (uint64_t)v19, 0, v4);
      swift_release(v7);
      sub_9944((uint64_t)v19, &qword_1FD880);
      swift_release(v6);
      v8 = swift_unknownObjectWeakLoadStrong(v4 + 40);
      if (v8)
      {
        v9 = v8;
        v17 = __chkstk_darwin(v8);
        v18 = 0;
        v10 = static Animation.default.getter(v17);
        withAnimation<A>(_:_:)(v10, sub_5B3A4, &v16, (char *)&type metadata for () + 8);
        swift_unknownObjectRelease(v9);
        swift_release(v10);
      }
      v11 = swift_unknownObjectWeakLoadStrong(v4 + 40);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)(v11 + 288);
        v14 = static Animation.default.getter(v11);
        withAnimation<A>(_:_:)(v14, sub_5B0FC, v13, (char *)&type metadata for () + 8);
        swift_release(v6);
        swift_release(v4);
        swift_unknownObjectRelease(v12);
        v15 = v14;
LABEL_9:
        *(_QWORD *)&result = swift_release(v15).n128_u64[0];
        return result;
      }
      swift_release(v6);
    }
    v15 = v4;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_5B054()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  sub_1EC0C((uint64_t)(v0 + 5));
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[10]);
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for NowPlayingUpsellBannerController()
{
  return objc_opt_self(_TtC12NowPlayingUI32NowPlayingUpsellBannerController);
}

uint64_t sub_5B0C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_5B0EC()
{
  uint64_t v0;

  return sub_5A184(v0);
}

uint64_t sub_5B0FC()
{
  uint64_t v0;

  return sub_5C9B8(v0);
}

void sub_5B114(uint64_t a1)
{
  uint64_t v1;

  sub_5A528(a1, v1);
}

uint64_t sub_5B11C()
{
  uint64_t v0;

  return sub_3CB30(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_5B13C()
{
  return sub_5B1CC((uint64_t (*)(_QWORD, uint64_t))sub_5ACA8);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_5B1C0()
{
  return sub_5B1CC((uint64_t (*)(_QWORD, uint64_t))sub_5AEB8);
}

uint64_t sub_5B1CC(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_5B20C()
{
  uint64_t *v0;

  return sub_5C8E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_5B228(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v21[32];
  _QWORD v22[5];
  _QWORD v23[5];

  v8 = type metadata accessor for ActionPerformer(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23[3] = type metadata accessor for Action(0);
  v23[4] = sub_8330((unint64_t *)&unk_2034C0, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
  v23[0] = a1;
  type metadata accessor for ActionRunnerOptions(0);
  v12 = *(_QWORD *)(a4 + 16);
  swift_retain(a1);
  v13 = swift_retain(v12);
  v14 = BaseObjectGraph.__allocating_init(_:)(v13);
  sub_2808C(a2, (uint64_t)v21, &qword_1FD880);
  v15 = a3;
  ActionOrigin.init(sender:view:)(v22, v21, a3);
  v16 = ActionRunnerOptions.withActionOrigin(_:)(v22);
  sub_9944((uint64_t)v22, &qword_1FCF68);
  swift_release(v14);
  sub_DF78((uint64_t)v23, (uint64_t)v22);
  swift_retain(v16);
  v17 = ActionPerformer.init(_:asPartOf:)(v22, v16);
  v18 = ActionPerformer.callAsFunction()(v17);
  v19 = swift_release(v16);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v19);
  __swift_destroy_boxed_opaque_existential_0(v23);
  return v18;
}

uint64_t sub_5B3A4()
{
  return sub_5B11C();
}

uint64_t sub_5B3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  unint64_t v15;
  _QWORD v17[9];
  _BYTE v18[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v17 - v8;
  v10 = v2 + OBJC_IVAR____TtC12NowPlayingUI37NowPlayingMiniPlayerSublineController____lazy_storage___miniPlayerSubtitle;
  swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI37NowPlayingMiniPlayerSublineController____lazy_storage___miniPlayerSubtitle, v18, 0, 0);
  sub_5D10C(v10, (uint64_t)v9);
  v11 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v9, v11);
  sub_5D0CC((uint64_t)v9);
  v13 = *(_QWORD *)(v2 + 32);
  Hasher.init(_seed:)(v17, 0);
  swift_retain(v13);
  NowPlayingMiniPlayerSublineViewModel.hash(into:)((uint64_t)v17);
  v14 = Hasher._finalize()();
  swift_release(v13);
  v17[0] = v14;
  v15 = sub_5D178();
  static NowPlayingViewModel.MiniPlayerSubtitle.customView<A, B>(id:content:)(v17, sub_5D154, v2, &type metadata for Int, &type metadata for MiniPlayerSublineView, &protocol witness table for Int, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  swift_beginAccess(v10, v17, 33, 0);
  sub_40298((uint64_t)v7, v10);
  return swift_endAccess(v17);
}

BOOL static PerformableContextActions.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void PerformableContextActions.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int PerformableContextActions.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t property wrapper backing initializer of NowPlayingMiniPlayerSublineViewModel.sublineState(char a1)
{
  char v2;

  v2 = a1 & 1;
  return Published.init(initialValue:)(&v2, &type metadata for NowPlayingMiniPlayerSublineViewModel.SublineState);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.sublineState.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16DC00);
  v2 = swift_getKeyPath(&unk_16DC28);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_5B6A4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v5 = swift_getKeyPath(&unk_16DC28);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_5B724(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v5 = swift_getKeyPath(&unk_16DC28);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.sublineState.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  v2 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v4 = swift_getKeyPath(&unk_16DC28);
  v6 = v2;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*NowPlayingMiniPlayerSublineViewModel.sublineState.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_16DC28);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_5B87C;
}

uint64_t NowPlayingMiniPlayerSublineViewModel.$sublineState.getter()
{
  return sub_5BF0C(&OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__sublineState, &qword_1FCF78);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.$sublineState.setter(uint64_t a1)
{
  return sub_5BF8C(a1, &qword_1FCF80, &OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__sublineState, &qword_1FCF78);
}

void (*NowPlayingMiniPlayerSublineViewModel.$sublineState.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF80);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__sublineState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF78);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_5B978;
}

uint64_t NowPlayingMiniPlayerSublineViewModel.standardSublineText.getter()
{
  return sub_5BBE0((uint64_t)&unk_16DC48, (uint64_t)&unk_16DC70);
}

double sub_5B994@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_5BC5C(a1, (uint64_t)&unk_16DC48, (uint64_t)&unk_16DC70, a2);
}

double sub_5B9A8@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_5BC5C(a1, (uint64_t)&unk_16DC48, (uint64_t)&unk_16DC70, a2);
}

uint64_t sub_5B9CC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_5BD0C(a1, a2, a3, a4, (uint64_t)&unk_16DC48, (uint64_t)&unk_16DC70);
}

uint64_t sub_5B9E0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_5BD0C(a1, a2, a3, a4, (uint64_t)&unk_16DC48, (uint64_t)&unk_16DC70);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.standardSublineText.setter(uint64_t a1, uint64_t a2)
{
  return sub_5BDC0(a1, a2, (uint64_t)&unk_16DC48, (uint64_t)&unk_16DC70);
}

uint64_t (*NowPlayingMiniPlayerSublineViewModel.standardSublineText.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_16DC48);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_16DC70);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_5B87C;
}

uint64_t NowPlayingMiniPlayerSublineViewModel.$standardSublineText.getter()
{
  return sub_5BF0C(&OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__standardSublineText, &qword_1FCF98);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.$standardSublineText.setter(uint64_t a1)
{
  return sub_5BF8C(a1, &qword_1FCFA0, &OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__standardSublineText, &qword_1FCF98);
}

void (*NowPlayingMiniPlayerSublineViewModel.$standardSublineText.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCFA0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__standardSublineText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF98);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_5B978;
}

uint64_t _s12NowPlayingUI0aB26MiniPlayerSublineViewModelC20hintSubscriptionNameSSSgvpfP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF88);
  return Published.init(initialValue:)(v4, v2);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.hintSubscriptionName.getter()
{
  return sub_5BBE0((uint64_t)&unk_16DC90, (uint64_t)&unk_16DCB8);
}

uint64_t sub_5BBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

double sub_5BC48@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_5BC5C(a1, (uint64_t)&unk_16DC90, (uint64_t)&unk_16DCB8, a2);
}

double sub_5BC5C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  __int128 v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  result = *(double *)&v10;
  *a4 = v10;
  return result;
}

double sub_5BCD4@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_5BC5C(a1, (uint64_t)&unk_16DC90, (uint64_t)&unk_16DCB8, a2);
}

uint64_t sub_5BCF8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_5BD0C(a1, a2, a3, a4, (uint64_t)&unk_16DC90, (uint64_t)&unk_16DCB8);
}

uint64_t sub_5BD0C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[2];

  v8 = *a1;
  v7 = a1[1];
  v9 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v11 = swift_getKeyPath(a6);
  v13[0] = v8;
  v13[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_retain(v9);
  return static Published.subscript.setter(v13, v9, KeyPath, v11);
}

uint64_t sub_5BD88(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_5BD0C(a1, a2, a3, a4, (uint64_t)&unk_16DC90, (uint64_t)&unk_16DCB8);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.hintSubscriptionName.setter(uint64_t a1, uint64_t a2)
{
  return sub_5BDC0(a1, a2, (uint64_t)&unk_16DC90, (uint64_t)&unk_16DCB8);
}

uint64_t sub_5BDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v11[2];

  KeyPath = swift_getKeyPath(a3);
  v9 = swift_getKeyPath(a4);
  v11[0] = a1;
  v11[1] = a2;
  swift_retain(v4);
  return static Published.subscript.setter(v11, v4, KeyPath, v9);
}

uint64_t (*NowPlayingMiniPlayerSublineViewModel.hintSubscriptionName.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_16DC90);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_16DCB8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_5B87C;
}

void sub_5BEAC(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.$hintSubscriptionName.getter()
{
  return sub_5BF0C(&OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__hintSubscriptionName, &qword_1FCF98);
}

uint64_t sub_5BF0C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t NowPlayingMiniPlayerSublineViewModel.$hintSubscriptionName.setter(uint64_t a1)
{
  return sub_5BF8C(a1, &qword_1FCFA0, &OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__hintSubscriptionName, &qword_1FCF98);
}

uint64_t sub_5BF8C(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[24];

  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_beginAccess(v4 + *a3, v15, 33, 0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter(v11, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

void (*NowPlayingMiniPlayerSublineViewModel.$hintSubscriptionName.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCFA0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__hintSubscriptionName;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF98);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_5B978;
}

void sub_5C12C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

void NowPlayingMiniPlayerSublineViewModel.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::UInt v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::UInt v13;
  Swift::UInt v14;
  uint64_t v15;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v5 = swift_getKeyPath(&unk_16DC28);
  static Published.subscript.getter(&v14, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  Hasher._combine(_:)(v14);
  v6 = swift_getKeyPath(&unk_16DC48);
  v7 = swift_getKeyPath(&unk_16DC70);
  static Published.subscript.getter(&v14, v2, v6, v7);
  swift_release(v7);
  swift_release(v6);
  v8 = v15;
  if (v15)
  {
    v9 = v14;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v8);
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v10 = swift_getKeyPath(&unk_16DC90);
  v11 = swift_getKeyPath(&unk_16DCB8);
  static Published.subscript.getter(&v14, v2, v10, v11);
  swift_release(v11);
  swift_release(v10);
  v12 = v15;
  if (v15)
  {
    v13 = v14;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v12);
    String.hash(into:)(a1, v13, v12);
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t NowPlayingMiniPlayerSublineViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__sublineState;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__standardSublineText;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF98);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__hintSubscriptionName, v4);
  return v0;
}

uint64_t NowPlayingMiniPlayerSublineViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__sublineState;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__standardSublineText;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF98);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__hintSubscriptionName, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

Swift::Int NowPlayingMiniPlayerSublineViewModel.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  NowPlayingMiniPlayerSublineViewModel.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_5C544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *, uint64_t);
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF98);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__sublineState;
  LOBYTE(v15) = 0;
  Published.init(initialValue:)(&v15, &type metadata for NowPlayingMiniPlayerSublineViewModel.SublineState);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  v10 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__standardSublineText;
  v15 = 0;
  v16 = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF88);
  Published.init(initialValue:)(&v15, v11);
  v12 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v12(v10, v4, v1);
  v13 = v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingMiniPlayerSublineViewModel__hintSubscriptionName;
  v15 = 0;
  v16 = 0;
  Published.init(initialValue:)(&v15, v11);
  v12(v13, v4, v1);
  return v0;
}

uint64_t sub_5C6A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_5C6E0(uint64_t *a1, uint64_t *a2)
{
  return _s12NowPlayingUI0aB26MiniPlayerSublineViewModelC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

Swift::Int sub_5C6EC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  NowPlayingMiniPlayerSublineViewModel.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

void sub_5C72C(uint64_t a1)
{
  NowPlayingMiniPlayerSublineViewModel.hash(into:)(a1);
}

Swift::Int sub_5C74C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  NowPlayingMiniPlayerSublineViewModel.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_5C788(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;

  v3 = v2[2];
  v4 = v2[3];
  v2[2] = result;
  v2[3] = a2;
  if (a2)
  {
    if (v4)
    {
      v5 = v3 == result && v4 == a2;
      if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)(result, a2, v3, v4, 0) & 1) != 0)
        return swift_bridgeObjectRelease(v4);
    }
  }
  else if (!v4)
  {
    return result;
  }
  v6 = v2[4];
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v8 = swift_getKeyPath(&unk_16DC28);
  v9 = 0;
  swift_retain(v6);
  static Published.subscript.setter(&v9, v6, KeyPath, v8);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_5C844()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[6];
  if (v1)
  {
    v2 = v0[5];
  }
  else
  {
    v3 = v0[4];
    v4 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(0);
    v5 = sub_5D1BC((unint64_t *)&qword_1FD210, (uint64_t)&protocol conformance descriptor for NowPlayingMiniPlayerSublineViewModel);
    v6 = swift_retain(v3);
    v2 = ObservedObject.init(wrappedValue:)(v6, v4, v5);
    v7 = v0[6];
    v0[5] = v2;
    v0[6] = v8;
    swift_retain(v8);
    swift_release(v7);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_5C8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v6 = *(_QWORD *)(a1 + 32);
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v8 = swift_getKeyPath(&unk_16DC28);
  LOBYTE(v13[0]) = 1;
  swift_retain(v6);
  static Published.subscript.setter(v13, v6, KeyPath, v8);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = swift_getKeyPath(&unk_16DC90);
  v11 = swift_getKeyPath(&unk_16DCB8);
  v13[0] = a2;
  v13[1] = a3;
  swift_bridgeObjectRetain(a3);
  swift_retain(v9);
  return static Published.subscript.setter(v13, v9, v10, v11);
}

uint64_t sub_5C9B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v5;

  v1 = *(_QWORD *)(a1 + 32);
  KeyPath = swift_getKeyPath(&unk_16DC00);
  v3 = swift_getKeyPath(&unk_16DC28);
  v5 = 0;
  swift_retain(v1);
  return static Published.subscript.setter(&v5, v1, KeyPath, v3);
}

uint64_t sub_5CA24()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  sub_5D0CC((uint64_t)v0+ OBJC_IVAR____TtC12NowPlayingUI37NowPlayingMiniPlayerSublineController____lazy_storage___miniPlayerSubtitle);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t _s12NowPlayingUI0aB26MiniPlayerSublineViewModelC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  KeyPath = swift_getKeyPath(&unk_16DC00);
  v5 = swift_getKeyPath(&unk_16DC28);
  static Published.subscript.getter(&v24, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  LODWORD(v5) = v24;
  v6 = swift_getKeyPath(&unk_16DC00);
  v7 = swift_getKeyPath(&unk_16DC28);
  static Published.subscript.getter(&v24, a2, v6, v7);
  swift_release(v6);
  swift_release(v7);
  if ((_DWORD)v5 == v24)
  {
    v9 = swift_getKeyPath(&unk_16DC48);
    v10 = swift_getKeyPath(&unk_16DC70);
    static Published.subscript.getter(&v24, a1, v9, v10);
    swift_release(v9);
    swift_release(v10);
    v12 = v24;
    v11 = v25;
    v13 = swift_getKeyPath(&unk_16DC48);
    v14 = swift_getKeyPath(&unk_16DC70);
    static Published.subscript.getter(&v24, a2, v13, v14);
    swift_release(v13);
    swift_release(v14);
    v15 = v25;
    if (v11)
    {
      if (!v25)
      {
LABEL_17:
        v8 = 0;
        goto LABEL_20;
      }
      if (v12 == v24 && v11 == v25)
      {
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v15);
      }
      else
      {
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v11, v24, v25, 0);
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v15);
        v8 = 0;
        if ((v16 & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v25)
    {
      v8 = 0;
      v11 = v25;
LABEL_20:
      swift_bridgeObjectRelease(v11);
      return v8 & 1;
    }
    v17 = swift_getKeyPath(&unk_16DC90);
    v18 = swift_getKeyPath(&unk_16DCB8);
    static Published.subscript.getter(&v24, a1, v17, v18);
    swift_release(v17);
    swift_release(v18);
    v20 = v24;
    v19 = v25;
    v21 = swift_getKeyPath(&unk_16DC90);
    v22 = swift_getKeyPath(&unk_16DCB8);
    static Published.subscript.getter(&v24, a2, v21, v22);
    swift_release(v21);
    swift_release(v22);
    v11 = v25;
    if (v19)
    {
      if (v25)
      {
        if (v20 == v24 && v19 == v25)
        {
          swift_bridgeObjectRelease(v19);
          v8 = 1;
        }
        else
        {
          v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v19, v24, v25, 0);
          swift_bridgeObjectRelease(v19);
        }
      }
      else
      {
        v8 = 0;
        v11 = v19;
      }
      goto LABEL_20;
    }
    if (!v25)
    {
      v8 = 1;
      return v8 & 1;
    }
    goto LABEL_17;
  }
  v8 = 0;
  return v8 & 1;
}

unint64_t sub_5CD50()
{
  unint64_t result;

  result = qword_1FCFB0;
  if (!qword_1FCFB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingMiniPlayerSublineViewModel.SublineState, &type metadata for NowPlayingMiniPlayerSublineViewModel.SublineState);
    atomic_store(result, (unint64_t *)&qword_1FCFB0);
  }
  return result;
}

uint64_t sub_5CD94()
{
  return sub_5D1BC(&qword_1FCFB8, (uint64_t)&protocol conformance descriptor for NowPlayingMiniPlayerSublineViewModel);
}

uint64_t type metadata accessor for NowPlayingMiniPlayerSublineViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FCFE8, (uint64_t)&nominal type descriptor for NowPlayingMiniPlayerSublineViewModel);
}

uint64_t sub_5CDCC()
{
  return type metadata accessor for NowPlayingMiniPlayerSublineViewModel(0);
}

void sub_5CDD4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_5CE5C();
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_5CEB0(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_updateClassMetadata2(a1, 256, 3, &v6, a1 + 80);
    }
  }
}

void sub_5CE5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1FCFF8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for NowPlayingMiniPlayerSublineViewModel.SublineState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1FCFF8);
  }
}

void sub_5CEB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FD000)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCF88);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FD000);
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingMiniPlayerSublineViewModel.SublineState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_5CF54 + 4 * byte_16DBF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_5CF88 + 4 * byte_16DBF0[v4]))();
}

uint64_t sub_5CF88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_5CF90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x5CF98);
  return result;
}

uint64_t sub_5CFA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x5CFACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_5CFB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5CFB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingMiniPlayerSublineViewModel.SublineState()
{
  return &type metadata for NowPlayingMiniPlayerSublineViewModel.SublineState;
}

uint64_t sub_5CFD4()
{
  return type metadata accessor for NowPlayingMiniPlayerSublineController(0);
}

uint64_t type metadata accessor for NowPlayingMiniPlayerSublineController(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FD160, (uint64_t)&nominal type descriptor for NowPlayingMiniPlayerSublineController);
}

void sub_5CFF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_16DE78;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_16DE78;
  sub_5D078(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_5D078(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FD170)
  {
    v2 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FD170);
  }
}

uint64_t sub_5D0CC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5D10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5D154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_5C844();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_5D178()
{
  unint64_t result;

  result = qword_1FD208;
  if (!qword_1FD208)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MiniPlayerSublineView, &type metadata for MiniPlayerSublineView);
    atomic_store(result, (unint64_t *)&qword_1FD208);
  }
  return result;
}

uint64_t sub_5D1BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

char *NowPlayingEpisodeUpsellBannerView.__allocating_init(asPartOf:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return NowPlayingEpisodeUpsellBannerView.init(asPartOf:)(a1);
}

char *NowPlayingEpisodeUpsellBannerView.init(asPartOf:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  id v11;
  char *v12;
  void *v13;
  CGFloat leading;
  CGFloat bottom;
  CGFloat trailing;
  id v17;
  uint64_t v19;
  NSDirectionalEdgeInsets v20;

  v3 = type metadata accessor for EpisodeUpsellBannerView.EpisodeUpsellBannerType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = qword_1FD218;
  v8 = objc_allocWithZone((Class)UIImageView);
  v9 = v1;
  *(_QWORD *)&v1[v7] = objc_msgSend(v8, "init");
  v10 = &v9[direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;

  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for EpisodeUpsellBannerView.EpisodeUpsellBannerType.iOSNowPlaying(_:), v3);
  v11 = (id)EpisodeUpsellBannerView.init(frame:bannerType:)(v6, 0.0, 0.0, 0.0, 0.0);
  dispatch thunk of EpisodeUpsellBannerView.bind(to:)(a1);

  v12 = (char *)v11;
  v13 = (void *)EpisodeUpsellBannerView.artworkContainerView.getter();

  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v17 = *(id *)&v12[qword_1FD218];
  v20.top = NSDirectionalEdgeInsetsZero.top;
  v20.leading = leading;
  v20.bottom = bottom;
  v20.trailing = trailing;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)((UIView)v17, 0, v20);

  swift_release(a1);
  return v12;
}

uint64_t NowPlayingEpisodeUpsellBannerView.onAppearBlock.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock);
  swift_beginAccess(v0 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock, v4, 0, 0);
  v2 = *v1;
  sub_2BE00(*v1, v1[1]);
  return v2;
}

uint64_t NowPlayingEpisodeUpsellBannerView.onAppearBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_145A0(v6, v7);
}

uint64_t (*NowPlayingEpisodeUpsellBannerView.onAppearBlock.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t NowPlayingEpisodeUpsellBannerView.apply(title:showSpecificUpsellCopy:genericUpsellCopy:tapBannerBlock:tapCloseButtonBlock:onAppearBlock:channelImage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[3];

  v20 = a10;
  v21 = a11;
  v22 = a9;
  if (a4)
  {
    v32[0] = a3;
    v32[1] = a4;
    v31 = a8;
    v25 = sub_5DAB0();
    v26 = Collection.isNotEmpty.getter(&type metadata for String, v25);
    v22 = a9;
    v20 = a10;
    a8 = v31;
    v21 = a11;
    if ((v26 & 1) != 0)
    {
      a5 = 0;
      a6 = 0;
      a1 = a3;
      a2 = a4;
    }
  }
  dispatch thunk of EpisodeUpsellBannerView.apply(primaryText:secondaryText:tapBannerBlock:tapCloseButtonBlock:)(a1, a2, a5, a6, a7, a8, v22, v20);
  objc_msgSend(*(id *)(v13 + qword_1FD218), "setImage:", a13);
  v27 = (uint64_t *)(v13 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock);
  swift_beginAccess(v13 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock, v32, 1, 0);
  v28 = *v27;
  v29 = v27[1];
  *v27 = v21;
  v27[1] = a12;
  sub_2BE00(v21, a12);
  return sub_145A0(v28, v29);
}

void NowPlayingEpisodeUpsellBannerView.init(frame:bannerType:)()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.NowPlayingEpisodeUpsellBannerView", 46, "init(frame:bannerType:)", 23, 0);
  __break(1u);
}

uint64_t sub_5D624()
{
  uint64_t v0;

  return sub_145A0(*(_QWORD *)(v0 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock), *(_QWORD *)(v0 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock + 8));
}

id NowPlayingEpisodeUpsellBannerView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_5D688(uint64_t a1)
{

  return sub_145A0(*(_QWORD *)(a1 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock), *(_QWORD *)(a1 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock + 8));
}

uint64_t property wrapper backing initializer of NowPlayingEpisodeUpsellBannerWrapper.viewModel(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(0);
  v3 = sub_5DB08();
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

char *NowPlayingEpisodeUpsellBannerWrapper.makeUIView(context:)(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_allocWithZone((Class)type metadata accessor for NowPlayingEpisodeUpsellBannerView(0));
  v4 = swift_retain(a2);
  return NowPlayingEpisodeUpsellBannerView.init(asPartOf:)(v4);
}

uint64_t NowPlayingEpisodeUpsellBannerWrapper.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_5DB64(a1, a2, a5);
}

char *sub_5D73C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for NowPlayingEpisodeUpsellBannerView(0));
  v3 = swift_retain(v1);
  return NowPlayingEpisodeUpsellBannerView.init(asPartOf:)(v3);
}

uint64_t sub_5D774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_5DB64(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_5D780@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16E038);
  v4 = swift_getKeyPath(&unk_16E060);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_5D7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_5E1C4();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_5D834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_5E1C4();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_5D884(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_5E1C4();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_5D8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel__bannerModel;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock
                          + 8));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock
                          + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_5D924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_5D960@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16E038);
  v5 = swift_getKeyPath(&unk_16E060);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_5D9C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v14 - v8;
  sub_5E13C(a1, (uint64_t)&v14 - v8);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_16E038);
  v12 = swift_getKeyPath(&unk_16E060);
  sub_5E13C((uint64_t)v9, (uint64_t)v7);
  swift_retain(v10);
  static Published.subscript.setter(v7, v10, KeyPath, v12);
  return sub_5E184((uint64_t)v9);
}

unint64_t sub_5DAB0()
{
  unint64_t result;

  result = qword_2034B0;
  if (!qword_2034B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_2034B0);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FD2A8, (uint64_t)&nominal type descriptor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel);
}

unint64_t sub_5DB08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FCF50;
  if (!qword_1FCF50)
  {
    v1 = type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(255);
    result = swift_getWitnessTable(&unk_16E000, v1);
    atomic_store(result, (unint64_t *)&qword_1FCF50);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingEpisodeUpsellBannerView(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FD228, (uint64_t)&nominal type descriptor for NowPlayingEpisodeUpsellBannerView);
}

uint64_t sub_5DB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD v74[3];

  v67 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  v5 = __chkstk_darwin(v4);
  v66 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v63 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v63 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v63 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v63 - v17;
  __chkstk_darwin(v16);
  v20 = (uint64_t *)((char *)&v63 - v19);
  KeyPath = swift_getKeyPath(&unk_16E038);
  v22 = swift_getKeyPath(&unk_16E060);
  static Published.subscript.getter(v20, a3, KeyPath, v22);
  swift_release(KeyPath);
  swift_release(v22);
  sub_5E13C((uint64_t)v20, (uint64_t)v18);
  v23 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v18, 1, v23) == 1)
  {
    sub_5E184((uint64_t)v18);
    v64 = 0;
    v65 = 0;
  }
  else
  {
    v64 = NowPlayingEpisodeUpsellBannerModel.subscriptionTitle.getter(v26);
    v65 = v27;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v23);
  }
  sub_5E13C((uint64_t)v20, (uint64_t)v15);
  if (v25(v15, 1, v23) == 1)
  {
    sub_5E184((uint64_t)v15);
    v63 = 0;
    v73 = 0;
  }
  else
  {
    v63 = NowPlayingEpisodeUpsellBannerModel.showSpecificUpsellCopy.getter();
    v73 = v28;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v23);
  }
  sub_5E13C((uint64_t)v20, (uint64_t)v12);
  if (v25(v12, 1, v23) == 1)
  {
    sub_5E184((uint64_t)v12);
    v68 = 0;
    v29 = 0;
  }
  else
  {
    v68 = NowPlayingEpisodeUpsellBannerModel.genericUpsellCopy.getter();
    v29 = v30;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v23);
  }
  v31 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock
                  + 8);
  v71 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_primaryActionBlock);
  v32 = a3 + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock;
  v34 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtCV12NowPlayingUI36NowPlayingEpisodeUpsellBannerWrapper9ViewModel_tapCloseButtonBlock);
  v33 = *(_QWORD *)(v32 + 8);
  sub_5E13C((uint64_t)v20, (uint64_t)v9);
  v35 = v25(v9, 1, v23);
  swift_retain(v31);
  v36 = swift_retain(v33);
  v72 = v20;
  v69 = v33;
  v70 = v34;
  v37 = v29;
  if (v35 == 1)
  {
    sub_5E184((uint64_t)v9);
    v38 = 0;
    v39 = 0;
  }
  else
  {
    v38 = NowPlayingEpisodeUpsellBannerModel.onBannerAppearBlock.getter(v36);
    v39 = v40;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v23);
  }
  v41 = (uint64_t)v66;
  sub_5E13C((uint64_t)v72, (uint64_t)v66);
  v42 = v25((char *)v41, 1, v23);
  v43 = v31;
  if (v42 == 1)
  {
    sub_5E184(v41);
    v66 = 0;
  }
  else
  {
    v66 = (char *)NowPlayingEpisodeUpsellBannerModel.channelImage.getter();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v41, v23);
  }
  v44 = v67;
  v45 = v64;
  v46 = v65;
  v47 = v73;
  if (v73)
  {
    v48 = v65;
    v49 = v39;
    v50 = v38;
    v51 = v63;
    v74[0] = v63;
    v74[1] = v73;
    v52 = sub_5DAB0();
    v53 = Collection.isNotEmpty.getter(&type metadata for String, v52);
    v54 = v68;
    if ((v53 & 1) != 0)
    {
      v54 = 0;
      v55 = 0;
    }
    else
    {
      v55 = v37;
    }
    if ((v53 & 1) != 0)
      v45 = v51;
    v38 = v50;
    v39 = v49;
    v46 = v48;
    if ((v53 & 1) != 0)
      v56 = v47;
    else
      v56 = v48;
  }
  else
  {
    v55 = v37;
    v56 = v65;
    v54 = v68;
  }
  v57 = v69;
  dispatch thunk of EpisodeUpsellBannerView.apply(primaryText:secondaryText:tapBannerBlock:tapCloseButtonBlock:)(v45, v56, v54, v55, v71, v43, v70, v69);
  v58 = v66;
  objc_msgSend(*(id *)(v44 + qword_1FD218), "setImage:", v66);
  v59 = (uint64_t *)(v44 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock);
  swift_beginAccess(v44 + direct field offset for NowPlayingEpisodeUpsellBannerView.onAppearBlock, v74, 1, 0);
  v60 = *v59;
  v61 = v59[1];
  *v59 = v38;
  v59[1] = v39;
  sub_2BE00(v38, v39);
  sub_145A0(v60, v61);

  sub_145A0(v38, v39);
  swift_bridgeObjectRelease(v73);
  swift_release(v43);
  swift_release(v57);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v46);
  return sub_5E184((uint64_t)v72);
}

uint64_t sub_5DFEC(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_16DFB8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + class metadata base offset for NowPlayingEpisodeUpsellBannerView);
}

uint64_t sub_5E040()
{
  return type metadata accessor for NowPlayingEpisodeUpsellBannerView(0);
}

ValueMetadata *type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper()
{
  return &type metadata for NowPlayingEpisodeUpsellBannerWrapper;
}

uint64_t sub_5E058()
{
  return type metadata accessor for NowPlayingEpisodeUpsellBannerWrapper.ViewModel(0);
}

void sub_5E060(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_5E0DC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_5E0DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FD2B8)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FCF58);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FD2B8);
  }
}

uint64_t sub_5E13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5E184(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_5E1C4()
{
  unint64_t result;

  result = qword_1FD3A8;
  if (!qword_1FD3A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingEpisodeUpsellBannerWrapper, &type metadata for NowPlayingEpisodeUpsellBannerWrapper);
    atomic_store(result, (unint64_t *)&qword_1FD3A8);
  }
  return result;
}

id sub_5E208()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 0, 0, 0.2);
  qword_2100C0 = (uint64_t)result;
  return result;
}

id sub_5E248()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 125.0, 30.0, 0.0, 0.0);
  qword_2100C8 = (uint64_t)result;
  return result;
}

id sub_5E294()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 225.0, 50.0, 0.0, 0.0);
  qword_2100D0 = (uint64_t)result;
  return result;
}

__n128 sub_5E2E4()
{
  __n128 result;
  __int128 v1;

  result = *(__n128 *)&UIEdgeInsetsZero.top;
  v1 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  xmmword_2100E0 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)&qword_2100F0 = v1;
  return result;
}

void sub_5E300(id a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  void (*v51)(_QWORD *);
  uint64_t v52;
  void (*v53)(_QWORD *);
  uint64_t v54;
  void (*v55)(_QWORD *);
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD *);
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD *);
  uint64_t v60;
  uint64_t v61;
  objc_class *v62;
  id v63;
  uint64_t v64;
  objc_super v65;
  void **aBlock;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t (*v70)();
  uint64_t v71;
  objc_super v72;
  char *v73;

  v2 = v1;
  v3 = a1;
  if ((v1[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_hasDonated] & 1) != 0)
  {
    v65.receiver = v1;
    v65.super_class = (Class)type metadata accessor for NowPlayingFormSheetAnimationController();
    v4 = objc_msgSendSuper2(&v65, "interruptibleAnimatorForTransition:", v3);
    return;
  }
  v64 = OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_hasDonated;
  v5 = (char *)_swiftEmptyArrayStorage;
  v73 = (char *)_swiftEmptyArrayStorage;
  v6 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (v6)
  {
    v7 = v6;
    ObjectType = swift_getObjectType(v6);
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PalettePresentationTransitioning);
    if (v9)
      v10 = v9;
    else
      v10 = 0;
    if (v9)
      v11 = v7;
    else
      v11 = 0;
    if (v11)
    {
      v12 = v3;
      v13 = v7;
      v5 = sub_135348(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v15 = *((_QWORD *)v5 + 2);
      v14 = *((_QWORD *)v5 + 3);
      if (v15 >= v14 >> 1)
        v5 = sub_135348((char *)(v14 > 1), v15 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v15 + 1;
      v16 = &v5[16 * v15];
      *((_QWORD *)v16 + 4) = v11;
      *((_QWORD *)v16 + 5) = v10;

      v73 = v5;
      v3 = v12;
    }
    else
    {

    }
  }
  v17 = objc_msgSend(v3, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v17)
  {
    v18 = v17;
    v19 = swift_getObjectType(v17);
    v20 = swift_conformsToProtocol2(v19, &protocol descriptor for PalettePresentationTransitioning);
    if (v20)
      v21 = v20;
    else
      v21 = 0;
    if (v20)
      v22 = v18;
    else
      v22 = 0;
    if (v22)
    {
      v23 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = sub_135348(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      v25 = *((_QWORD *)v5 + 2);
      v24 = *((_QWORD *)v5 + 3);
      if (v25 >= v24 >> 1)
        v5 = sub_135348((char *)(v24 > 1), v25 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v25 + 1;
      v26 = &v5[16 * v25];
      *((_QWORD *)v26 + 4) = v22;
      *((_QWORD *)v26 + 5) = v21;

      v73 = v5;
    }
    else
    {

    }
  }
  v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_interaction];
  v28 = v27 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v27 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate);
  if (Strong)
  {
    v30 = Strong;
    v31 = *(_QWORD *)(v28 + 8);
    v32 = swift_getObjectType(Strong);
    v33 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 24))(v27, v32, v31);
    swift_unknownObjectRelease(v30);
  }
  else
  {
    v33 = _swiftEmptyArrayStorage;
  }
  v34 = sub_A4DA4((uint64_t)v33);
  swift_bridgeObjectRelease(v33);
  sub_A5534((uint64_t)v34);
  v35 = sub_A4EEC((uint64_t)v73);
  v36 = objc_msgSend(v2, "isReversed", swift_bridgeObjectRelease(v73).n128_f64[0]);
  v37 = sub_FCF94((uint64_t)v35, v36);
  v38 = objc_msgSend(v3, "isInteractive", swift_bridgeObjectRelease(v35).n128_f64[0]);
  v39 = swift_allocObject(&unk_1CAAD8, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v2);
  v40 = (_QWORD *)swift_allocObject(&unk_1CAB00, 40, 7);
  v40[2] = v37;
  v40[3] = v3;
  v40[4] = v39;
  swift_bridgeObjectRetain(v37);
  if (objc_msgSend(v2, "isReversed", swift_unknownObjectRetain(v3).n128_f64[0]))
  {
    v41 = swift_allocObject(&unk_1CAB28, 48, 7);
    *(_QWORD *)(v41 + 16) = v37;
    *(_BYTE *)(v41 + 24) = v38;
    *(_QWORD *)(v41 + 32) = sub_61028;
    *(_QWORD *)(v41 + 40) = v40;
    v70 = sub_61060;
    v71 = v41;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_F528;
    v69 = &block_descriptor_64;
    v42 = _Block_copy(&aBlock);
    v43 = v71;
    swift_retain(v40);
    objc_msgSend(v2, "setNoninteractiveAnimations:", v42, swift_release(v43).n128_f64[0]);
    _Block_release(v42);
    v44 = swift_allocObject(&unk_1CAB78, 32, 7);
    *(_QWORD *)(v44 + 16) = sub_61028;
    *(_QWORD *)(v44 + 24) = v40;
    v70 = sub_F2F8;
    v71 = v44;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_153D78;
    v69 = &block_descriptor_70;
    v45 = _Block_copy(&aBlock);
    v46 = v71;
    swift_retain(v40);
    objc_msgSend(v2, "setNoninteractiveCompletion:", v45, swift_release(v46).n128_f64[0]);
    _Block_release(v45);
LABEL_60:
    v62 = (objc_class *)type metadata accessor for NowPlayingFormSheetAnimationController();
    v72.receiver = v2;
    v72.super_class = v62;
    objc_msgSendSuper2(&v72, "interruptibleAnimatorForTransition:", v3);
    swift_release(v40);
    return;
  }
  v63 = v3;
  if (!((unint64_t)v37 >> 62))
  {
    v47 = *(_QWORD *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFF8));
    if (v47)
      goto LABEL_36;
LABEL_59:
    swift_bridgeObjectRelease(v37);
    v3 = v63;
    v2[v64] = 1;
    goto LABEL_60;
  }
  if (v37 < 0)
    v61 = v37;
  else
    v61 = v37 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v37);
  v47 = _CocoaArrayWrapper.endIndex.getter(v61);
  swift_bridgeObjectRelease(v37);
  if (!v47)
    goto LABEL_59;
LABEL_36:
  if (v47 >= 1)
  {
    v48 = 0;
    while (1)
    {
      if ((v37 & 0xC000000000000001) != 0)
      {
        v49 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v37);
        v50 = (_QWORD *)v49[5];
        if (v50)
          goto LABEL_44;
      }
      else
      {
        v49 = *(_QWORD **)(v37 + 8 * v48 + 32);
        swift_retain(v49);
        v50 = (_QWORD *)v49[5];
        if (v50)
        {
LABEL_44:
          v51 = (void (*)(_QWORD *))v50[9];
          if (v51)
          {
            v52 = v50[10];
            swift_retain(v50);
            sub_2BE00((uint64_t)v51, v52);
            v51(v49);
            sub_145A0((uint64_t)v51, v52);
            v53 = (void (*)(_QWORD *))v49[6];
            if (v53)
              goto LABEL_46;
          }
          else
          {
            swift_retain(v50);
            v53 = (void (*)(_QWORD *))v49[6];
            if (v53)
            {
LABEL_46:
              v54 = v49[7];
              swift_retain(v54);
              v53(v50);
              sub_145A0((uint64_t)v53, v54);
            }
          }
          v55 = (void (*)(_QWORD *))v50[7];
          if (v55)
          {
            v56 = v50[8];
            swift_retain(v56);
            v55(v49);
            sub_145A0((uint64_t)v55, v56);
          }
          v57 = (void (*)(uint64_t, _QWORD *))v49[8];
          if (v57)
          {
            v58 = v49[9];
            swift_retain(v58);
            v57(1, v50);
            sub_145A0((uint64_t)v57, v58);
          }
          v59 = (void (*)(uint64_t, _QWORD *))v50[11];
          if (v59)
          {
            v60 = v50[12];
            swift_retain(v60);
            v59(1, v49);
            sub_145A0((uint64_t)v59, v60);
          }
          swift_release(v49);
          v49 = v50;
        }
      }
      ++v48;
      swift_release(v49);
      if (v47 == v48)
        goto LABEL_59;
    }
  }
  __break(1u);
}

void sub_5E984(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void (*v28)(_QWORD *);
  uint64_t v29;
  _BYTE *Strong;
  void (*v31)(_QWORD, _QWORD *);
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39[24];

  if ((unint64_t)a2 >> 62)
  {
LABEL_28:
    if (a2 < 0)
      v35 = a2;
    else
      v35 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (v7)
      goto LABEL_3;
LABEL_32:
    swift_bridgeObjectRelease(a2);
    return;
  }
  v7 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a2);
  if (!v7)
    goto LABEL_32;
LABEL_3:
  v37 = a4 + 16;
  swift_beginAccess(a4 + 16, v39, 0, 0);
  v8 = 4;
  v36 = v7;
  while (1)
  {
    a4 = v8 - 4;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a2);
      v10 = v8 - 3;
      if (__OFADD__(a4, 1))
        goto LABEL_27;
    }
    else
    {
      v9 = *(_QWORD **)(a2 + 8 * v8);
      swift_retain(v9);
      v10 = v8 - 3;
      if (__OFADD__(a4, 1))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v11 = (_QWORD *)v9[5];
    if (v11)
      break;
LABEL_5:
    swift_release(v9);
    ++v8;
    if (v10 == v7)
      goto LABEL_32;
  }
  swift_retain(v9[5]);
  if ((a1 & 1) == 0)
  {
LABEL_22:
    v31 = (void (*)(_QWORD, _QWORD *))v9[8];
    if (v31)
    {
      v32 = v9[9];
      swift_retain(v32);
      v31(a1 & 1, v11);
      sub_145A0((uint64_t)v31, v32);
    }
    v33 = (void (*)(_QWORD, _QWORD *))v11[11];
    if (v33)
    {
      v34 = v11[12];
      swift_retain(v34);
      v33(a1 & 1, v9);
      sub_145A0((uint64_t)v33, v34);
    }
    swift_release(v9);
    v9 = v11;
    goto LABEL_5;
  }
  v12 = objc_msgSend(a3, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  v13 = v12;
  if (!v12)
  {
LABEL_18:
    v28 = (void (*)(_QWORD *))v11[7];
    if (v28)
    {
      v29 = v11[8];
      swift_retain(v29);
      v28(v9);
      sub_145A0((uint64_t)v28, v29);
    }
    Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v37);

    v7 = v36;
    if (Strong)
    {
      Strong[OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_hasDonated] = 1;

    }
    goto LABEL_22;
  }
  v14 = objc_msgSend(v12, "view");
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "snapshotViewAfterScreenUpdates:", 0);

    if (v16)
    {
      v17 = objc_msgSend(v13, "view");
      if (!v17)
        goto LABEL_34;
      v18 = v17;
      objc_msgSend(v17, "addSubview:", v16);

      v19 = objc_msgSend(a3, "containerView");
      objc_msgSend(v19, "frame");
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v27 = v26;

      objc_msgSend(v16, "setFrame:", v21, v23, v25, v27);
    }
    goto LABEL_18;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_5ECB0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void (*v12)(_QWORD *);
  uint64_t v13;
  void (*v14)(_QWORD *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v25;
  uint64_t (*v26)();
  unint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_22;
  v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  result = swift_bridgeObjectRetain(a1);
  if (v6)
  {
    do
    {
      if (v6 < 1)
      {
        __break(1u);
        return result;
      }
      v8 = 0;
      v9 = 0;
      v26 = 0;
      v27 = v5 & 0xC000000000000001;
      v22 = v5;
      while (1)
      {
        if (v27)
        {
          v10 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v5);
          v11 = (_QWORD *)v10[5];
          if (!v11)
            goto LABEL_6;
        }
        else
        {
          v10 = *(_QWORD **)(v5 + 8 * v9 + 32);
          swift_retain(v10);
          v11 = (_QWORD *)v10[5];
          if (!v11)
            goto LABEL_6;
        }
        v12 = (void (*)(_QWORD *))v11[9];
        if (v12)
        {
          v13 = v11[10];
          swift_retain(v11);
          sub_2BE00((uint64_t)v12, v13);
          v12(v10);
          sub_145A0((uint64_t)v12, v13);
          v14 = (void (*)(_QWORD *))v10[6];
          if (!v14)
            goto LABEL_15;
LABEL_14:
          v15 = v10[7];
          swift_retain(v15);
          v14(v11);
          sub_145A0((uint64_t)v14, v15);
          goto LABEL_15;
        }
        swift_retain(v11);
        v14 = (void (*)(_QWORD *))v10[6];
        if (v14)
          goto LABEL_14;
LABEL_15:
        if ((a2 & 1) == 0)
          break;
        swift_release(v10);
        v10 = v11;
LABEL_6:
        swift_release(v10);
LABEL_7:
        if (v6 == ++v9)
        {
          swift_bridgeObjectRelease(v5);
          v20 = (uint64_t)v26;
          return sub_145A0(v20, v8);
        }
      }
      v5 = v6;
      v16 = a2;
      v25 = (id)objc_opt_self(UIView);
      v17 = swift_allocObject(&unk_1CABC8, 32, 7);
      *(_QWORD *)(v17 + 16) = a3;
      *(_QWORD *)(v17 + 24) = a4;
      swift_retain(a4);
      sub_145A0((uint64_t)v26, v8);
      v18 = swift_allocObject(&unk_1CABF0, 32, 7);
      *(_QWORD *)(v18 + 16) = sub_61070;
      *(_QWORD *)(v18 + 24) = v17;
      aBlock[4] = sub_61110;
      v29 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F318;
      aBlock[3] = &block_descriptor_80;
      v19 = _Block_copy(aBlock);
      a2 = v29;
      swift_retain(v18);
      objc_msgSend(v25, "performWithoutAnimation:", v19, swift_release(a2).n128_f64[0]);
      swift_release(v10);
      swift_release(v11);
      _Block_release(v19);
      LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v18, "", 136, 83, 56, 1);
      swift_release(v18);
      if ((v19 & 1) == 0)
      {
        v26 = sub_61070;
        v8 = v17;
        a2 = v16;
        v6 = v5;
        v5 = v22;
        goto LABEL_7;
      }
      __break(1u);
LABEL_22:
      if (v5 < 0)
        v21 = v5;
      else
        v21 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      result = _CocoaArrayWrapper.endIndex.getter(v21);
      v6 = result;
    }
    while (result);
  }
  swift_bridgeObjectRelease(v5);
  v20 = 0;
  v8 = 0;
  return sub_145A0(v20, v8);
}

uint64_t sub_5EFF8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(char *);
  char v8;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_completionBlocks);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = result & 1;
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC12NowPlayingUI38NowPlayingFormSheetAnimationController_completionBlocks));
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v7 = (void (*)(char *))*(v5 - 1);
      v6 = *v5;
      v8 = v4;
      swift_retain(v6);
      v7(&v8);
      swift_release(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease(v2);
  }
  return result;
}

id sub_5F100()
{
  return sub_606B0(type metadata accessor for NowPlayingFormSheetAnimationController);
}

void sub_5F144(void *a1)
{
  char *v1;
  char *v2;
  unsigned int v4;
  const UITransitionContextViewKey *v5;
  id v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  objc_super v58;
  void **aBlock;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  char *v65;

  v2 = v1;
  v4 = objc_msgSend(v1, "isReversed");
  v5 = &UITransitionContextToViewKey;
  if (v4)
    v5 = &UITransitionContextFromViewKey;
  v6 = objc_msgSend(a1, "viewForKey:", *v5);
  if (v6)
  {
    v7 = v6;
    v8 = (char *)_swiftEmptyArrayStorage;
    v65 = (char *)_swiftEmptyArrayStorage;
    v9 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
    if (v9)
    {
      v10 = v9;
      ObjectType = swift_getObjectType(v9);
      v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PalettePresentationTransitioning);
      if (v12)
        v13 = v12;
      else
        v13 = 0;
      if (v12)
        v14 = v10;
      else
        v14 = 0;
      if (v14)
      {
        v15 = v10;
        v8 = sub_135348(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        v17 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        if (v17 >= v16 >> 1)
          v8 = sub_135348((char *)(v16 > 1), v17 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v17 + 1;
        v18 = &v8[16 * v17];
        *((_QWORD *)v18 + 4) = v14;
        *((_QWORD *)v18 + 5) = v13;

        v65 = v8;
      }
      else
      {

      }
    }
    v19 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (v19)
    {
      v20 = v19;
      v21 = swift_getObjectType(v19);
      v22 = swift_conformsToProtocol2(v21, &protocol descriptor for PalettePresentationTransitioning);
      if (v22)
        v23 = v22;
      else
        v23 = 0;
      if (v22)
        v24 = v20;
      else
        v24 = 0;
      if (v24)
      {
        v25 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_135348(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v27 = *((_QWORD *)v8 + 2);
        v26 = *((_QWORD *)v8 + 3);
        if (v27 >= v26 >> 1)
          v8 = sub_135348((char *)(v26 > 1), v27 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v27 + 1;
        v28 = &v8[16 * v27];
        *((_QWORD *)v28 + 4) = v24;
        *((_QWORD *)v28 + 5) = v23;

        v65 = v8;
      }
      else
      {

      }
    }
    v29 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_interaction];
    v30 = v29 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v29 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate);
    if (Strong)
    {
      v32 = Strong;
      v33 = *(_QWORD *)(v30 + 8);
      v34 = swift_getObjectType(Strong);
      v35 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 24))(v29, v34, v33);
      swift_unknownObjectRelease(v32);
    }
    else
    {
      v35 = _swiftEmptyArrayStorage;
    }
    v36 = sub_A4DA4((uint64_t)v35);
    swift_bridgeObjectRelease(v35);
    sub_A5534((uint64_t)v36);
    v37 = (uint64_t)v65;
    v38 = swift_bridgeObjectRetain(v65);
    v39 = sub_A4EEC(v38);
    v40 = objc_msgSend(v2, "isReversed", swift_bridgeObjectRelease(v65).n128_f64[0]);
    v41 = sub_FCF94((uint64_t)v39, v40);
    swift_bridgeObjectRelease(v39);
    v42 = swift_allocObject(&unk_1CA7E0, 24, 7);
    swift_unknownObjectWeakInit(v42 + 16, v2);
    v43 = (_QWORD *)swift_allocObject(&unk_1CA808, 56, 7);
    v43[2] = v42;
    v43[3] = v7;
    v43[4] = v37;
    v43[5] = a1;
    v43[6] = v41;
    swift_retain(v42);
    swift_bridgeObjectRetain(v41);
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v37);
    v44 = v7;
    v45 = objc_msgSend(a1, "isInteractive");
    v46 = swift_allocObject(&unk_1CA7E0, 24, 7);
    swift_unknownObjectWeakInit(v46 + 16, v2);
    v47 = swift_allocObject(&unk_1CA830, 72, 7);
    *(_QWORD *)(v47 + 16) = v46;
    *(_BYTE *)(v47 + 24) = v45;
    *(_QWORD *)(v47 + 32) = sub_60DF0;
    *(_QWORD *)(v47 + 40) = v43;
    *(_QWORD *)(v47 + 48) = v41;
    *(_QWORD *)(v47 + 56) = a1;
    *(_QWORD *)(v47 + 64) = v44;
    v63 = sub_60E44;
    v64 = v47;
    aBlock = _NSConcreteStackBlock;
    v60 = 1107296256;
    v61 = sub_F528;
    v62 = &block_descriptor_8;
    v48 = _Block_copy(&aBlock);
    v49 = v64;
    swift_bridgeObjectRetain(v41);
    swift_unknownObjectRetain(a1);
    v50 = v44;
    swift_retain(v43);
    objc_msgSend(v2, "setNoninteractiveAnimations:", v48, swift_release(v49).n128_f64[0]);
    _Block_release(v48);
    v51 = swift_allocObject(&unk_1CA880, 24, 7);
    *(_QWORD *)(v51 + 16) = v41;
    v63 = sub_60E98;
    v64 = v51;
    aBlock = _NSConcreteStackBlock;
    v60 = 1107296256;
    v61 = sub_153D78;
    v62 = &block_descriptor_13_0;
    v52 = _Block_copy(&aBlock);
    v53 = v64;
    swift_bridgeObjectRetain(v41);
    objc_msgSend(v2, "setNoninteractiveCompletion:", v52, swift_release(v53).n128_f64[0]);
    _Block_release(v52);
    v58.receiver = v2;
    v58.super_class = (Class)type metadata accessor for PalettePresentationAnimationController();
    v54 = objc_msgSendSuper2(&v58, "interruptibleAnimatorForTransition:", a1);
    v55 = objc_opt_self(UIViewPropertyAnimator);
    v56 = swift_dynamicCastObjCClass(v54, v55);
    if (!v56)
    {
      swift_unknownObjectRelease(v54);
      v56 = 0;
    }
    v57 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_ascentDescentAnimator];
    *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_ascentDescentAnimator] = v56;

    if ((v45 & 1) == 0)
      sub_5F6C0(v42, v50, v37, a1, v41);
    swift_release(v43);
    swift_bridgeObjectRelease(v37);

    swift_release(v42);
    swift_bridgeObjectRelease(v41);
  }
}

void sub_5F6C0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  char *v11;
  void *v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double Width;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  CGFloat *v42;
  uint64_t v43;
  char **v44;
  char *v45;
  char *v46;
  id v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void (*v57)(void *, uint64_t, char *, uint64_t, uint64_t, __n128);
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  void *v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  char *v78;
  void **aBlock;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  void *v82;
  void *v83;
  uint64_t v84;
  char v85[24];
  CGRect v86;
  CGRect v87;

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v85, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (char *)Strong;
    v12 = *(void **)(*(_QWORD *)(Strong
                               + OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_interaction)
                   + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_view);
    if (!v12)
    {
LABEL_32:

      return;
    }
    v13 = v12;
    v14 = (char *)objc_msgSend(v13, "superview");
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, "subviews");
      v17 = sub_60ED4();
      v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

      sub_ADA8C((uint64_t)v13, v18);
      v20 = v19;
      LOBYTE(v16) = v21;
      *(_QWORD *)&v22 = swift_bridgeObjectRelease(v18).n128_u64[0];
      if ((v16 & 1) == 0)
      {
        v76 = a3;
        v77 = v15;
        objc_msgSend(v13, "frame", v22);
        v24 = v23;
        v26 = v25;
        v28 = v27;
        v30 = v29;
        objc_msgSend(a2, "addSubview:", v13);
        v86.origin.x = v24;
        v86.origin.y = v26;
        v86.size.width = v28;
        v86.size.height = v30;
        Width = CGRectGetWidth(v86);
        v87.origin.x = v24;
        v87.origin.y = v26;
        v87.size.width = v28;
        v87.size.height = v30;
        objc_msgSend(v13, "setFrame:", 0.0, 0.0, Width, CGRectGetHeight(v87));
        if ((objc_msgSend(v11, "isReversed") & 1) != 0)
        {
          objc_msgSend(v13, "setAlpha:", 0.0);
          v32 = *(void **)&v11[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator];
          v33 = swift_allocObject(&unk_1CA9E8, 24, 7);
          *(_QWORD *)(v33 + 16) = v13;
          v83 = sub_60FC4;
          v84 = v33;
          aBlock = _NSConcreteStackBlock;
          v80 = 1107296256;
          v81 = sub_F528;
          v82 = &block_descriptor_40;
          v34 = _Block_copy(&aBlock);
          v35 = v84;
          v36 = v13;
          v37 = v32;
        }
        else
        {
          v38 = *(void **)&v11[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator];
          v39 = swift_allocObject(&unk_1CA948, 32, 7);
          *(_QWORD *)(v39 + 16) = v11;
          *(_QWORD *)(v39 + 24) = v13;
          v83 = sub_60F3C;
          v84 = v39;
          aBlock = _NSConcreteStackBlock;
          v80 = 1107296256;
          v81 = sub_F528;
          v82 = &block_descriptor_28;
          v34 = _Block_copy(&aBlock);
          v35 = v84;
          v40 = v13;
          v37 = v38;
          v41 = v11;
        }
        objc_msgSend(v37, "addAnimations:", v34, swift_release(v35).n128_f64[0]);
        _Block_release(v34);

        v42 = (CGFloat *)swift_allocObject(&unk_1CA998, 88, 7);
        *((_QWORD *)v42 + 2) = v77;
        *((_QWORD *)v42 + 3) = a2;
        *((_QWORD *)v42 + 4) = v13;
        *((_QWORD *)v42 + 5) = v20;
        v42[6] = v24;
        v42[7] = v26;
        v42[8] = v28;
        v42[9] = v30;
        *((_QWORD *)v42 + 10) = v11;
        v43 = swift_allocObject(&unk_1CA9C0, 32, 7);
        *(_QWORD *)(v43 + 16) = sub_60F80;
        *(_QWORD *)(v43 + 24) = v42;
        v44 = (char **)&v11[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks];
        swift_beginAccess(&v11[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks], &aBlock, 33, 0);
        v45 = *v44;
        v75 = v13;
        v11 = v11;
        v46 = v77;
        v47 = a2;
        swift_retain(v42);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v45);
        *v44 = v45;
        v78 = v46;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v45 = sub_13460C(0, *((_QWORD *)v45 + 2) + 1, 1, v45);
          *v44 = v45;
        }
        v50 = *((_QWORD *)v45 + 2);
        v49 = *((_QWORD *)v45 + 3);
        if (v50 >= v49 >> 1)
        {
          v45 = sub_13460C((char *)(v49 > 1), v50 + 1, 1, v45);
          *v44 = v45;
        }
        *((_QWORD *)v45 + 2) = v50 + 1;
        v51 = &v45[16 * v50];
        *((_QWORD *)v51 + 4) = sub_60F98;
        *((_QWORD *)v51 + 5) = v43;
        swift_endAccess(&aBlock);
        swift_release(v42);
        v52 = *(_QWORD *)(v76 + 16);
        if (v52)
        {
          swift_bridgeObjectRetain(v76);
          v53 = (uint64_t *)(v76 + 40);
          do
          {
            v54 = *(v53 - 1);
            v55 = *v53;
            ObjectType = swift_getObjectType(v54);
            v57 = *(void (**)(void *, uint64_t, char *, uint64_t, uint64_t, __n128))(v55 + 16);
            v58 = swift_unknownObjectRetain(v54);
            v57(a4, a5, v11, ObjectType, v55, v58);
            swift_unknownObjectRelease(v54);
            v53 += 2;
            --v52;
          }
          while (v52);
          swift_bridgeObjectRelease(v76);
        }
        if ((unint64_t)a5 >> 62)
        {
          if (a5 < 0)
            v74 = a5;
          else
            v74 = a5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a5);
          v59 = _CocoaArrayWrapper.endIndex.getter(v74);
          if (v59)
            goto LABEL_20;
        }
        else
        {
          v59 = *(_QWORD *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain(a5);
          if (v59)
          {
LABEL_20:
            if (v59 < 1)
            {
              __break(1u);
              return;
            }
            v60 = 0;
            do
            {
              if ((a5 & 0xC000000000000001) != 0)
              {
                v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(v60, a5);
              }
              else
              {
                v61 = *(_QWORD *)(a5 + 8 * v60 + 32);
                swift_retain(v61);
              }
              ++v60;
              v62 = objc_msgSend(a4, "containerView", v75);
              v63 = *(void **)(v61 + 32);
              objc_msgSend(v63, "bounds");
              objc_msgSend(v62, "convertRect:fromCoordinateSpace:", v63);
              v65 = v64;
              v67 = v66;
              v69 = v68;
              v71 = v70;

              v72 = *(void **)(v61 + 32);
              objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
              v73 = objc_msgSend(a4, "containerView");
              objc_msgSend(v73, "addSubview:", v72);

              objc_msgSend(*(id *)(v61 + 32), "setFrame:", v65, v67, v69, v71);
              swift_release(v61);
            }
            while (v59 != v60);
          }
        }

        swift_bridgeObjectRelease(a5);
        v15 = v78;
        goto LABEL_31;
      }

      v11 = v13;
    }
    else
    {
      v15 = v13;
    }
LABEL_31:

    v11 = v15;
    goto LABEL_32;
  }
}

void sub_5FCCC(uint64_t a1, void *a2)
{
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v4 = (void *)objc_opt_self(UIView);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator), "duration");
  v6 = v5;
  v7 = swift_allocObject(&unk_1CAA38, 24, 7);
  *(_QWORD *)(v7 + 16) = a2;
  v11[4] = sub_60FD8;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_F528;
  v11[3] = &block_descriptor_46;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = a2;
  swift_release(v9);
  objc_msgSend(v4, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v8, 0, v6, 0.0);
  _Block_release(v8);
}

void sub_5FDC8(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1CAA88, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v7[4] = sub_60FE0;
  v8 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_F528;
  v7[3] = &block_descriptor_52;
  v4 = _Block_copy(v7);
  v5 = v8;
  v6 = a1;
  swift_release(v5);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v4, 0.0, 0.5);
  _Block_release(v4);
}

uint64_t sub_5FE94(double a1, double a2, double a3, double a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, void *a10)
{
  uint64_t result;
  id v20;
  char *v21;
  char *v22;
  id v23;
  id v24;
  char *v25;

  sub_60ED4();
  result = static NSObject.== infix(_:_:)(a6, a7);
  if ((result & 1) == 0)
  {
    objc_msgSend(a6, "insertSubview:atIndex:", a8, a9);
    objc_msgSend(a8, "setFrame:", a1, a2, a3, a4);
    v20 = objc_msgSend(a7, "traitCollection");
    v21 = (char *)objc_msgSend(v20, "userInterfaceIdiom");
    if (v21 == (char *)-1)
    {
      v23 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v24 = objc_msgSend(v23, "traitCollection");

      v25 = (char *)objc_msgSend(v24, "userInterfaceIdiom");
      if (v25 != (_BYTE *)&dword_0 + 1)
        return (uint64_t)objc_msgSend(a8, "setAlpha:", 1.0);
    }
    else
    {
      v22 = v21;

      if (v22 != (_BYTE *)&dword_0 + 1)
        return (uint64_t)objc_msgSend(a8, "setAlpha:", 1.0);
    }
    result = (uint64_t)objc_msgSend(a10, "isReversed");
    if (!(_DWORD)result)
      return result;
    return (uint64_t)objc_msgSend(a8, "setAlpha:", 1.0);
  }
  return result;
}

uint64_t sub_60024(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v10;
  uint64_t result;
  double v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  void *v18;
  uint64_t v19;
  char isEscapingClosureAtFileLocation;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  double (*v28)(uint64_t);
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double MinY;
  double v52;
  double MinX;
  double v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v59;
  _QWORD aBlock[5];
  uint64_t v62;
  char v63[32];
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v63, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v10);
  if (!result)
    return result;
  v13 = (char *)result;
  if ((a2 & 1) != 0)
  {
    v14 = (void *)objc_opt_self(UIView);
    v15 = swift_allocObject(&unk_1CA8D0, 32, 7);
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = a4;
    v16 = swift_allocObject(&unk_1CA8F8, 32, 7);
    v17 = sub_F2F8;
    *(_QWORD *)(v16 + 16) = sub_F2F8;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_ECE4;
    v62 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F318;
    aBlock[3] = &block_descriptor_22;
    v18 = _Block_copy(aBlock);
    v19 = v62;
    swift_retain(a4);
    swift_retain(v16);
    objc_msgSend(v14, "performWithoutAnimation:", v18, swift_release(v19).n128_f64[0]);
    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 136, 217, 48, 1);
    *(_QWORD *)&v12 = swift_release(v16).n128_u64[0];
    v21 = a5;
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      goto LABEL_6;
    __break(1u);
  }
  v17 = 0;
  v15 = 0;
  v21 = a5;
LABEL_6:
  objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator], "startAnimation", v12);
  objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_easingAnimator], "startAnimation");
  v56 = (uint64_t)v17;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v55 = v21;
    else
      v55 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    result = _CocoaArrayWrapper.endIndex.getter(v55);
    v22 = result;
    if (result)
      goto LABEL_8;
LABEL_31:

    swift_bridgeObjectRelease(v21);
    return sub_145A0(v56, v15);
  }
  v22 = *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFF8));
  result = swift_bridgeObjectRetain(v21);
  if (!v22)
    goto LABEL_31;
LABEL_8:
  if (v22 >= 1)
  {
    v23 = 0;
    v24 = v21 & 0xC000000000000001;
    v59 = v21 & 0xC000000000000001;
    while (1)
    {
      if (v24)
      {
        v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v21);
        v27 = *(_QWORD *)(v26 + 40);
        if (v27)
          goto LABEL_17;
      }
      else
      {
        v26 = *(_QWORD *)(v21 + 8 * v23 + 32);
        swift_retain(v26);
        v27 = *(_QWORD *)(v26 + 40);
        if (v27)
        {
LABEL_17:
          v28 = *(double (**)(uint64_t))(v27 + 40);
          if (v28)
          {
            v29 = *(_QWORD *)(v27 + 48);
            swift_retain(v27);
            sub_2BE00((uint64_t)v28, v29);
            v30 = v28(v26);
            v32 = v31;
            v34 = v33;
            v36 = v35;
            sub_145A0((uint64_t)v28, v29);
            v37 = *(void (**)(uint64_t))(v27 + 72);
            if (v37)
            {
              v38 = *(_QWORD *)(v27 + 80);
              swift_retain(v38);
              v37(v26);
              sub_145A0((uint64_t)v37, v38);
            }
            v39 = *(void (**)(uint64_t))(v26 + 48);
            if (v39)
            {
              v40 = *(_QWORD *)(v26 + 56);
              swift_retain(v40);
              v39(v27);
              sub_145A0((uint64_t)v39, v40);
            }
            v41 = *(id *)(v27 + 32);
            v42 = objc_msgSend(a6, "containerView");
            objc_msgSend(v41, "convertRect:toCoordinateSpace:", v42, v30, v32, v34, v36);
            v44 = v43;
            v46 = v45;
            v48 = v47;
            v50 = v49;

            if (objc_msgSend(v13, "isReversed"))
            {
              objc_msgSend(a7, "frame");
              MinY = CGRectGetMinY(v64);
              objc_msgSend(v13, "sourceFrame");
              if (MinY != CGRectGetMinY(v65))
              {
                objc_msgSend(v13, "sourceFrame");
                v52 = CGRectGetMinY(v66);
                objc_msgSend(a7, "frame");
                v46 = v46 + v52 - CGRectGetMinY(v67);
              }
              objc_msgSend(a7, "frame");
              MinX = CGRectGetMinX(v68);
              objc_msgSend(v13, "sourceFrame");
              if (MinX != CGRectGetMinX(v69))
              {
                objc_msgSend(v13, "sourceFrame");
                v54 = CGRectGetMinX(v70);
                objc_msgSend(a7, "frame");
                v44 = v44 + v54 - CGRectGetMinX(v71);
              }
              v21 = a5;
            }
            v25 = *(id *)(v26 + 32);
            objc_msgSend(v25, "setFrame:", v44, v46, v48, v50);
            swift_release(v26);

            v26 = v27;
            v24 = v59;
          }
        }
      }
      ++v23;
      swift_release(v26);
      if (v22 == v23)
        goto LABEL_31;
    }
  }
  __break(1u);
  return result;
}

void sub_604DC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(_QWORD *);
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD *);
  uint64_t v11;
  void (*v12)(_QWORD, _QWORD *);
  uint64_t v13;
  uint64_t v14;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v14 = a2;
    else
      v14 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (v4)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(a2);
    return;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a2);
  if (!v4)
    goto LABEL_23;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a2);
        v7 = (_QWORD *)v6[5];
        if (v7)
          goto LABEL_11;
      }
      else
      {
        v6 = *(_QWORD **)(a2 + 8 * v5 + 32);
        swift_retain(v6);
        v7 = (_QWORD *)v6[5];
        if (v7)
        {
LABEL_11:
          if ((a1 & 1) != 0 && (v8 = (void (*)(_QWORD *))v7[7]) != 0)
          {
            v9 = v7[8];
            swift_retain(v7);
            sub_2BE00((uint64_t)v8, v9);
            v8(v6);
            sub_145A0((uint64_t)v8, v9);
            v10 = (void (*)(_QWORD, _QWORD *))v6[8];
            if (!v10)
              goto LABEL_17;
LABEL_16:
            v11 = v6[9];
            swift_retain(v11);
            v10(a1 & 1, v7);
            sub_145A0((uint64_t)v10, v11);
          }
          else
          {
            swift_retain(v7);
            v10 = (void (*)(_QWORD, _QWORD *))v6[8];
            if (v10)
              goto LABEL_16;
          }
LABEL_17:
          v12 = (void (*)(_QWORD, _QWORD *))v7[11];
          if (v12)
          {
            v13 = v7[12];
            swift_retain(v13);
            v12(a1 & 1, v6);
            sub_145A0((uint64_t)v12, v13);
          }
          swift_release(v6);
          v6 = v7;
        }
      }
      ++v5;
      swift_release(v6);
      if (v4 == v5)
        goto LABEL_23;
    }
  }
  __break(1u);
}

id sub_606A4()
{
  return sub_606B0(type metadata accessor for PalettePresentationAnimationController);
}

id sub_606B0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_607D8(char a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(char *);
  char v11;
  _BYTE v12[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks, v12, 0, 0);
  v5 = *v3;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = a1 & 1;
    swift_bridgeObjectRetain(v5);
    v8 = (uint64_t *)(v5 + 40);
    do
    {
      v10 = (void (*)(char *))*(v8 - 1);
      v9 = *v8;
      v11 = v7;
      swift_retain(v9);
      v10(&v11);
      swift_release(v9);
      v8 += 2;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease(v5);
  }
  return result;
}

void sub_608BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  char *v9;
  id v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v4 = v3;
  v8 = objc_msgSend(v4, "traitCollection");
  v9 = (char *)objc_msgSend(v8, "horizontalSizeClass");

  if (v9 == (_BYTE *)&dword_0 + 1)
  {
    v10 = objc_msgSend(v4, "viewControllerForColumn:", 3);
    if (v10)
    {
      v16 = v10;
      ObjectType = swift_getObjectType(v10);
      v12 = dynamic_cast_existential_2_conditional((uint64_t)v16, ObjectType, (uint64_t)&protocol descriptor for PalettePresentationInteractionDelegate, (uint64_t)&protocol descriptor for PalettePresentationTransitioning);
      if (v12)
      {
        v14 = v13;
        v15 = swift_getObjectType(v12);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(a1, a2, a3, v15, v14);
      }

    }
  }
}

_QWORD *sub_609C4()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (_BYTE *)&dword_0 + 1)
    return _swiftEmptyArrayStorage;
  v3 = objc_msgSend(v0, "viewControllerForColumn:", 3);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v4 = v3;
  ObjectType = swift_getObjectType(v3);
  v6 = dynamic_cast_existential_2_conditional((uint64_t)v4, ObjectType, (uint64_t)&protocol descriptor for PalettePresentationInteractionDelegate, (uint64_t)&protocol descriptor for PalettePresentationTransitioning);
  if (v6)
  {
    v8 = v7;
    v9 = swift_getObjectType(v6);
    v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v9);
  }
  else
  {
    v10 = _swiftEmptyArrayStorage;
  }

  return v10;
}

uint64_t sub_60AA0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  id v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = objc_msgSend(v3, "traitCollection");
  v7 = (char *)objc_msgSend(v6, "horizontalSizeClass");

  if (v7 != (_BYTE *)&dword_0 + 1)
    return 0;
  v8 = objc_msgSend(v3, "viewControllerForColumn:", 3);
  if (!v8)
    return 0;
  v9 = v8;
  ObjectType = swift_getObjectType(v8);
  v11 = dynamic_cast_existential_2_conditional((uint64_t)v9, ObjectType, (uint64_t)&protocol descriptor for PalettePresentationInteractionDelegate, (uint64_t)&protocol descriptor for PalettePresentationTransitioning);
  if (v11)
  {
    v13 = v12;
    v14 = swift_getObjectType(v11);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 + 8) + 16))(a1, a2 & 1, v14);
  }
  else
  {
    v15 = 0;
  }

  return v15;
}

uint64_t sub_60BA4(uint64_t a1, char a2)
{
  return sub_60AA0(a1, a2 & 1);
}

uint64_t type metadata accessor for NowPlayingFormSheetAnimationController()
{
  return objc_opt_self(_TtC12NowPlayingUI38NowPlayingFormSheetAnimationController);
}

uint64_t type metadata accessor for PalettePresentationAnimationController()
{
  return objc_opt_self(_TtC12NowPlayingUI38PalettePresentationAnimationController);
}

id sub_60BEC(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_ascentDescentAnimator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_interaction] = a1;
  v3 = objc_allocWithZone((Class)UICubicTimingParameters);
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v3, "init");
  v7 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v6, 0.5);

  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator] = v7;
  v8 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 3.0, 500.0, 1000.0, 0.0, 0.0);
  v9 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.187800005, 0.00230000005, 0.539900005, 0.962899983);
  objc_msgSend(v8, "setSpringCubicTimingParameters:", v9);

  v10 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringAnimator), "initWithDuration:timingParameters:", v8, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_easingAnimator] = v10;

  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for PalettePresentationAnimationController();
  return objc_msgSendSuper2(&v12, "init");
}

uint64_t sub_60D88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_60DAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_60DF0()
{
  uint64_t v0;

  sub_5F6C0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_60E00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_60E44()
{
  uint64_t v0;

  return sub_60024(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_60E74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_60E98(char a1)
{
  uint64_t v1;

  sub_604DC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_60EA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_60EC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_60ED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD4A0;
  if (!qword_1FD4A0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FD4A0);
  }
  return result;
}

uint64_t sub_60F10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_60F3C()
{
  uint64_t v0;

  sub_5FCCC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_60F44()
{
  id *v0;

  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_60F80(uint64_t a1)
{
  uint64_t v1;

  return sub_5FE94(*(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 80));
}

uint64_t sub_60F98(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_62744(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_60FA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_60FC4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

void sub_60FD8()
{
  uint64_t v0;

  sub_5FDC8(*(void **)(v0 + 16));
}

id sub_60FE0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

uint64_t sub_60FF4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_61028(char a1)
{
  uint64_t v1;

  sub_5E984(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_61034()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_61060()
{
  uint64_t v0;

  return sub_5ECB0(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_61070()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_61094()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = swift_conformsToProtocol2(a2, a3);
  if (result)
  {
    if (swift_conformsToProtocol2(a2, a4))
      return a1;
    else
      return 0;
  }
  return result;
}

uint64_t NowPlayingContextInteractionDelegate.updateMenuProvider(asPartOf:for:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v3 = v2;
  v34 = a1;
  v5 = type metadata accessor for InteractionContext.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a2;
  v18 = objc_msgSend(a2, "podcast");
  if (v18 && (v19 = v18, v20 = objc_msgSend(v18, "supportsSubscription"), v19, v20))
  {
    v21 = type metadata accessor for PresentationSource(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 1, 1, v21);
    swift_storeEnumTagMultiPayload(v11, v9, 13);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for InteractionContext.Origin.none(_:), v5);
    v22 = v34;
    swift_retain(v34);
    v23 = v33;
    InteractionContext.init(page:view:origin:)(v11, 7, v8);
    v24 = type metadata accessor for NowPlayingContextActionConfiguration(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = sub_AC0BC(v22, 0, v23, (uint64_t)v17, 0, 0, (uint64_t)v14);

    v26 = OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration;
    v27 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration) = v25;
    swift_release(v27);
    v28 = *(_QWORD *)(v3 + v26);
    v29 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider) = v28;
    swift_retain(v28);
    return sub_61410(v29);
  }
  else
  {
    v31 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration) = 0;
    swift_release(v31);
    v32 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider) = 1;
    return sub_61410(v32);
  }
}

uint64_t sub_61410(uint64_t result)
{
  if (result != 1)
    return swift_release(result);
  return result;
}

UITargetedPreview_optional __swiftcall NowPlayingContextInteractionDelegate.contextMenuInteraction(_:previewForHighlightingMenuWithConfiguration:)(UIContextMenuInteraction _, UIContextMenuConfiguration previewForHighlightingMenuWithConfiguration)
{
  objc_class *v2;
  Swift::Bool v3;
  UITargetedPreview_optional result;

  v2 = (objc_class *)sub_61EFC(_.super.isa);
  result.value.super.isa = v2;
  result.is_nil = v3;
  return result;
}

void NowPlayingContextInteractionDelegate.contextMenuInteraction(_:willPerformPreviewActionForMenuWith:animator:)(uint64_t a1, void *a2, void *a3)
{
  sub_61FD4(a2, a3);
}

void *sub_61444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v2 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v5 = (void *)ContextActionsConfiguration.previewViewController()();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    UIViewController.traitOverrides.getter();
    UIMutableTraits.userInterfaceLevel.setter(1, v2, &protocol witness table for UITraitOverrides);
    UIViewController.traitOverrides.setter(v4);

  }
  return v6;
}

Class sub_61504(int a1, uint64_t a2, id a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  UIMenuElementSize v12;
  Swift::String v13;
  Class isa;
  Swift::OpaquePointer v16;
  UIMenuElementSize aBlock[5];
  uint64_t v18;
  UIImage_optional v19;

  v4 = objc_msgSend(a3, "view");
  v5 = (void *)objc_opt_self(UIDeferredMenuElement);
  v6 = swift_allocObject(&unk_1CAD68, 32, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v4;
  aBlock[4] = (UIMenuElementSize)sub_62390;
  v18 = v6;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_926F8;
  aBlock[3] = (UIMenuElementSize)&block_descriptor_22_0;
  v7 = _Block_copy(aBlock);
  v8 = v18;
  swift_retain();
  v9 = v4;
  v10 = objc_msgSend(v5, "elementWithUncachedProvider:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  sub_62398();
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_16B2D0;
  *(_QWORD *)(v12 + 32) = v10;
  aBlock[0] = v12;
  specialized Array._endMutation()(v12);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v19.value.super.isa = 0;
  v19.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v19, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v16).super.super.isa;

  return isa;
}

void sub_61728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  id *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  id v22;
  void *v23;
  uint64_t v24;
  char v25;
  char v26;
  id v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for PreviewingPresentationHint(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
  {
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    goto LABEL_8;
  }
  v11 = (void *)Strong;
  v12 = Strong + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_episodeController;
  swift_beginAccess(Strong + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_episodeController, v34, 0, 0);
  sub_6230C(v12, (uint64_t)&v36);

  if (!*((_QWORD *)&v37 + 1))
  {
LABEL_8:
    sub_621F8((uint64_t)&v36);
    return;
  }
  sub_27890(&v36, (uint64_t)v39);
  v13 = (id *)(a2 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject);
  swift_beginAccess(a2 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject, &v36, 0, 0);
  v14 = *v13;
  v15 = MPModelObject.uuid.getter();
  v17 = v16;

  if (v17)
  {
    v18 = v40;
    v19 = v41;
    __swift_project_boxed_opaque_existential_1(v39, v40);
    v20 = *(_QWORD *)(a2 + 16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for PreviewingPresentationHint.inferTab(_:), v6);
    dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:from:presentationHint:suppressMetrics:)(v20, v15, v17, a3, v9, 0, v18, v19);
    v21 = swift_bridgeObjectRelease(v17);
LABEL_5:
    (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v9, v6, v21);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_0(v39);
    return;
  }
  v22 = objc_msgSend(*v13, "podcast");
  if (!v22)
    goto LABEL_6;
  v23 = v22;
  v24 = MPModelObject.adamID.getter(v22);
  v26 = v25;

  if ((v26 & 1) != 0)
    goto LABEL_6;
  if (v24 < 0)
  {
    __break(1u);
  }
  else
  {
    v27 = *v13;
    v28 = MPModelObject.adamID.getter(v27);
    v30 = v29;

    if ((v30 & 1) != 0)
      goto LABEL_6;
    if ((v28 & 0x8000000000000000) == 0)
    {
      v31 = v40;
      v32 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      v33 = *(_QWORD *)(a2 + 16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for PreviewingPresentationHint.inferTab(_:), v6);
      dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:and:from:presentationHint:suppressMetrics:)(v33, v28, v24, a3, v9, 0, v31, v32);
      goto LABEL_5;
    }
  }
  __break(1u);
}

id ContextActionsPresentationRegistration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void NowPlayingContextInteractionDelegate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.NowPlayingContextInteractionDelegate", 49, "init()", 6, 0);
  __break(1u);
}

id NowPlayingContextInteractionDelegate.__deallocating_deinit(uint64_t a1)
{
  return sub_4AC44(a1, type metadata accessor for NowPlayingContextInteractionDelegate);
}

id sub_61B78()
{
  return sub_4AC44(0, type metadata accessor for NowPlayingContextMenuConfiguration);
}

id sub_61BD8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  objc_super v11;
  _BYTE v12[24];

  *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration] = 0;
  v5 = OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider;
  *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider] = 1;
  v6 = (uint64_t)&v2[OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_episodeController];
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_QWORD *)(v6 + 32) = 0;
  v7 = *(_QWORD *)&v2[v5];
  *(_QWORD *)&v2[v5] = a1;
  v8 = v2;
  sub_62238(a1);
  sub_61410(v7);
  swift_beginAccess(v6, v12, 33, 0);
  sub_62248(a2, v6);
  swift_endAccess(v12);

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for NowPlayingContextInteractionDelegate();
  v9 = objc_msgSendSuper2(&v11, "init");
  sub_621F8(a2);
  return v9;
}

char *_s12NowPlayingUI0aB26ContextInteractionDelegateC011contextMenuE0_016configurationForH10AtLocationSo09UIContextH13ConfigurationCSgSo0mhE0C_So7CGPointVtF_0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *ObjCClassFromMetadata;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_menuProvider);
  if (v2 == 1)
    return 0;
  v5 = type metadata accessor for NowPlayingContextMenuConfiguration();
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextInteractionDelegate_contextActionConfiguration);
  v7 = swift_allocObject(&unk_1CACC8, 24, 7);
  *(_QWORD *)(v7 + 16) = v2;
  v8 = swift_allocObject(&unk_1CACF0, 32, 7);
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = a1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v5);
  v22 = sub_62378;
  v23 = v7;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_735CC;
  v21 = &block_descriptor_13_1;
  v10 = _Block_copy(&v18);
  v11 = v23;
  sub_62238(v2);
  sub_62238(v2);
  swift_retain();
  sub_62238(v2);
  swift_retain();
  v12 = a1;
  swift_retain();
  swift_retain();
  swift_release(v11);
  v22 = sub_62384;
  v23 = v8;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_8DB04;
  v21 = &block_descriptor_16;
  v13 = _Block_copy(&v18);
  v14 = v23;
  swift_retain();
  v15 = (char *)objc_msgSend(ObjCClassFromMetadata, "configurationWithIdentifier:previewProvider:actionProvider:", 0, v10, v13, swift_release(v14).n128_f64[0]);
  swift_release(v7);
  swift_release(v8);
  _Block_release(v13);
  _Block_release(v10);
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC12NowPlayingUIP33_51F693B05AE440B605BF23B767A044C434NowPlayingContextMenuConfiguration_config];
  *(_QWORD *)&v15[OBJC_IVAR____TtC12NowPlayingUIP33_51F693B05AE440B605BF23B767A044C434NowPlayingContextMenuConfiguration_config] = v6;
  swift_retain();
  v3 = v15;
  objc_msgSend(v3, "setPreferredMenuElementOrder:", 2, swift_release(v16).n128_f64[0]);

  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  sub_61410(v2);
  return v3;
}

id sub_61EFC(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = objc_msgSend(a1, "view");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:", v4, v2);

  }
  else
  {

    return 0;
  }
  return v6;
}

void sub_61FD4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t (*v12)(void);
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  _QWORD aBlock[5];
  _QWORD *v21;
  char v22[24];

  v3 = v2;
  v6 = type metadata accessor for NowPlayingContextMenuConfiguration();
  v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    v8 = *(_QWORD *)(v7
                   + OBJC_IVAR____TtC12NowPlayingUIP33_51F693B05AE440B605BF23B767A044C434NowPlayingContextMenuConfiguration_config);
    if (v8)
    {
      v9 = qword_1F96B8;
      v10 = a1;
      swift_retain(v8);
      if (v9 != -1)
        swift_once(&qword_1F96B8, sub_15D030);
      swift_beginAccess(&static NowPlayingDataProvider.shared, v22, 0, 0);
      if ((_QWORD)static NowPlayingDataProvider.shared)
      {
        v11 = (void *)qword_210540;
        if (qword_210540)
        {
          v12 = *(uint64_t (**)(void))(*(_QWORD *)v8 + 200);
          swift_retain(v8);
          v13 = v11;
          v14 = v12();
          objc_msgSend(a2, "setPreferredCommitStyle:", v14, swift_release(v8).n128_f64[0]);
          v15 = swift_allocObject(&unk_1CAC50, 24, 7);
          swift_unknownObjectWeakInit(v15 + 16, v3);
          v16 = (_QWORD *)swift_allocObject(&unk_1CAC78, 40, 7);
          v16[2] = v15;
          v16[3] = v8;
          v16[4] = v13;
          aBlock[4] = sub_622E8;
          v21 = v16;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_F528;
          aBlock[3] = &block_descriptor_9;
          v17 = _Block_copy(aBlock);
          v18 = v21;
          swift_retain(v8);
          v19 = v13;
          objc_msgSend(a2, "addCompletion:", v17, swift_release(v18).n128_f64[0]);
          _Block_release(v17);

          swift_release(v8);
        }
        else
        {

          swift_release(v8);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t type metadata accessor for NowPlayingContextInteractionDelegate()
{
  return objc_opt_self(_TtC12NowPlayingUI36NowPlayingContextInteractionDelegate);
}

uint64_t type metadata accessor for NowPlayingContextMenuConfiguration()
{
  return objc_opt_self(_TtC12NowPlayingUIP33_51F693B05AE440B605BF23B767A044C434NowPlayingContextMenuConfiguration);
}

uint64_t sub_621F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_62238(uint64_t result)
{
  if (result != 1)
    return swift_retain(result);
  return result;
}

uint64_t sub_62248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_62290()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_622B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_622E8()
{
  uint64_t *v0;

  sub_61728(v0[2], v0[3], v0[4]);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_9(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_6230C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_62354()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void *sub_62378()
{
  uint64_t v0;

  return sub_61444(*(_QWORD *)(v0 + 16));
}

Class sub_62384(int a1)
{
  uint64_t v1;

  return sub_61504(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

double sub_62390(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_92558(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

unint64_t sub_62398()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD540;
  if (!qword_1FD540)
  {
    v1 = objc_opt_self(UIMenu);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FD540);
  }
  return result;
}

uint64_t sub_623F0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_62454(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

BOOL sub_62518(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

id sub_62578()
{
  char *v0;
  void *v1;
  id v2;
  id result;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController];
  if (!v1)
    return &_swiftEmptyArrayStorage;
  v2 = v1;
  result = objc_msgSend(v2, "view");
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for PresentationDonationTarget();
    v6 = (_QWORD *)swift_allocObject(v5, 104, 7);
    v6[2] = 0x6B726F77747241;
    v6[3] = 0xE700000000000000;
    v6[4] = v4;
    v7 = swift_allocObject(&unk_1CB120, 32, 7);
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v0;
    v6[5] = sub_6E274;
    v6[6] = v7;
    v8 = v2;
    v9 = v0;
    sub_145A0(0, 0);
    v10 = swift_allocObject(&unk_1CB148, 32, 7);
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = v8;
    v6[9] = sub_6E27C;
    v6[10] = v10;
    v11 = v8;
    v12 = v9;
    sub_145A0(0, 0);
    v13 = swift_allocObject(&unk_1CB170, 24, 7);
    *(_QWORD *)(v13 + 16) = v11;
    v6[7] = sub_6E284;
    v6[8] = v13;
    v14 = v11;
    sub_145A0(0, 0);
    v15 = swift_allocObject(&unk_1CB198, 24, 7);
    *(_QWORD *)(v15 + 16) = v12;
    v6[11] = sub_6E28C;
    v6[12] = v15;
    v16 = v12;
    sub_145A0(0, 0);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_16B2D0;
    *(_QWORD *)(v18 + 32) = v6;
    v20 = v18;
    specialized Array._endMutation()(v18);
    v19 = v20;

    return (id)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_62744(unsigned __int8 *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

NSString sub_62768()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_210100 = (uint64_t)result;
  return result;
}

void sub_6279C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  NSString v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  NSString *v19;
  NSString v20;

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v13 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v13 < v7)
    {
      v14 = *(_QWORD *)(v3 + 8 * v13);
      ++v8;
      if (v14)
        goto LABEL_20;
      v8 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_24;
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (v14)
        goto LABEL_20;
      v8 = v13 + 2;
      if (v13 + 2 >= v7)
        goto LABEL_24;
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (v14)
      {
LABEL_20:
        v6 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v8 << 6); ; i = v11 | (v8 << 6))
        {
          v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i + 8);
          v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          if (v17 < 0)
          {
            ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17 & 0x7FFFFFFFFFFFFFFFLL);
            swift_bridgeObjectRetain(v16);
            v19 = UICollectionElementKindSectionHeader;
            v20 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v16);
            objc_msgSend(v1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v19, v20);

            if (!v6)
              goto LABEL_7;
          }
          else
          {
            v9 = ((uint64_t (*)(void))swift_getObjCClassFromMetadata)();
            swift_bridgeObjectRetain(v16);
            v10 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v16);
            objc_msgSend(v1, "registerClass:forCellWithReuseIdentifier:", v9, v10);

            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v11 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v15 = v13 + 3;
      if (v15 < v7)
      {
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (v14)
        {
          v8 = v15;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_26;
          if (v8 >= v7)
            break;
          v14 = *(_QWORD *)(v3 + 8 * v8);
          ++v15;
          if (v14)
            goto LABEL_20;
        }
      }
    }
LABEL_24:
    swift_release(a1);
    return;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_629C8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  void *v3;
  id v4;
  uint64_t Strong;
  void *v6;
  char *v7;
  id v8;
  char v9;
  objc_super v10;
  char v11[24];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, "setDataSource:", 0);
    objc_msgSend(v4, "setDelegate:", 0);

  }
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v11, 0, 0);
  if (!(_QWORD)static NowPlayingDataProvider.shared)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (!qword_210540)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  Strong = swift_unknownObjectWeakLoadStrong(qword_210540 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController);
  if (!Strong)
    goto LABEL_12;
  v6 = (void *)Strong;
  v7 = v1;
  v8 = v6;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) == 0)
    goto LABEL_12;
  if (!(_QWORD)static NowPlayingDataProvider.shared)
    goto LABEL_15;
  if (qword_210540)
  {
    swift_unknownObjectWeakAssign(qword_210540 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController, 0);
LABEL_12:
    v10.receiver = v1;
    v10.super_class = ObjectType;
    objc_msgSendSuper2(&v10, "dealloc");
    return;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_62D04()
{
  return type metadata accessor for NowPlayingViewController(0);
}

uint64_t type metadata accessor for NowPlayingViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1FD648;
  if (!qword_1FD648)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingViewController);
  return result;
}

void sub_62D48()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  double (*v54)(uint64_t, uint64_t);
  id v55;
  double v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSString v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  void *v82;
  void *v83;
  void *v84;
  objc_class *v85;
  id v86;
  id v87;
  uint64_t v88;
  void *v89;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  char v100[64];
  char v101[272];
  _QWORD v102[14];
  char v103[64];
  _BYTE v104[24];
  objc_super v105;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v105.receiver = v0;
  v105.super_class = ObjectType;
  objc_msgSendSuper2(&v105, "viewDidLoad");
  v2 = objc_msgSend(objc_allocWithZone((Class)MPCPlayerRequest), "init");
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setLabel:", v3);

  v4 = sub_A37BC();
  objc_msgSend(v2, "setPlayingItemProperties:", v4);
  v99 = v4;
  objc_msgSend(v2, "setQueueItemProperties:", v4);
  v102[3] = ObjectType;
  v102[4] = &off_1CAE68;
  v102[0] = v0;
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController];
  swift_beginAccess(&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController], v104, 33, 0);
  v7 = *(_QWORD *)(v5 + 24);
  v6 = *(_QWORD *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v7);
  v8 = *(_QWORD *)(v6 + 8);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16);
  v10 = v0;
  v9(v102, v7, v8);
  swift_endAccess(v104);
  v11 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController];
  objc_msgSend(v11, "setDelegate:", v10);
  objc_msgSend(v11, "setRequest:", v2);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD948);
  inited = swift_initStackObject(v12, v103);
  *(_OWORD *)(inited + 16) = xmmword_16B3D0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v104, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v102, (uint64_t *)&unk_1FC7F0);
  v14 = v102[0];
  if (!v102[0])
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v15 = v102[1];
  swift_unknownObjectRetain(v102[0]);
  sub_4AE24((uint64_t)v102);
  v16 = swift_getObjectType(v14);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
  swift_unknownObjectRelease(v14);
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(inited + 40) = 0xD000000000000012;
  *(_QWORD *)(inited + 48) = 0x8000000000186EB0;
  *(_BYTE *)(inited + 56) = 0;
  v18 = swift_allocObject(&unk_1CB2D8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v10);
  v97 = type metadata accessor for DeprecatedBinding();
  swift_allocObject(v97, 40, 7);
  v19 = DeprecatedBinding.init(_:configurationBlock:)(inited, (uint64_t)sub_7214C, v18);
  v20 = &v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_bindings];
  swift_beginAccess(&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_bindings], v102, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v20 & 0xFFFFFFFFFFFFFF8));
  v22 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v20 & 0xFFFFFFFFFFFFFF8));
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v19);
  specialized Array._endMutation()(v24);
  swift_endAccess(v102);
  v25 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v10, "dismissTapGestureRecognizerFired");
  v26 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_dismissalTapGestureRecognizer;
  v27 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_dismissalTapGestureRecognizer];
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_dismissalTapGestureRecognizer] = v25;

  v28 = *(void **)&v10[v26];
  if (!v28)
    goto LABEL_33;
  objc_msgSend(v28, "setDelegate:", v10);
  v29 = objc_msgSend(v10, "view");
  if (!v29)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (!*(_QWORD *)&v10[v26])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v30 = v29;
  v96 = v12;
  objc_msgSend(v29, "addGestureRecognizer:");

  v31 = objc_msgSend(v10, "view");
  if (!v31)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v32 = v31;
  v98 = v11;
  v33 = &v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics];
  v35 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24];
  v34 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32];
  __swift_project_boxed_opaque_existential_1(&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics], v35);
  (*(void (**)(uint64_t, uint64_t))(v34 + 48))(v35, v34);
  objc_msgSend(v32, "music_setLayoutInsets:");

  v36 = objc_msgSend(v10, "view");
  if (!v36)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v37 = v36;
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView]);

  v38 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingCollectionView()), "init");
  v39 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  v40 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView] = v38;

  v41 = *(void **)&v10[v39];
  if (!v41)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  objc_msgSend(v41, "setAlwaysBounceVertical:", 1);
  v42 = *(void **)&v10[v39];
  if (!v42)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v43 = (void *)objc_opt_self(UIColor);
  v44 = v42;
  v45 = objc_msgSend(v43, "clearColor");
  objc_msgSend(v44, "setBackgroundColor:", v45);

  v46 = *(void **)&v10[v39];
  if (!v46)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  objc_msgSend(v46, "setDelegate:", v10);
  v47 = *(void **)&v10[v39];
  if (!v47)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(v47, "setDataSource:", v10);
  v48 = *(void **)&v10[v39];
  if (!v48)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  objc_msgSend(v48, "setDragDelegate:", v10);
  v49 = *(void **)&v10[v39];
  if (!v49)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v50 = v2;
  objc_msgSend(v49, "setDropDelegate:", v10);
  v51 = *(void **)&v10[v39];
  if (!v51)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v52 = *((_QWORD *)v33 + 3);
  v53 = *((_QWORD *)v33 + 4);
  __swift_project_boxed_opaque_existential_1(v33, v52);
  v54 = *(double (**)(uint64_t, uint64_t))(v53 + 136);
  v55 = v51;
  v56 = v54(v52, v53);
  objc_msgSend(v55, "contentInset");
  objc_msgSend(v55, "setContentInset:", v56);

  v57 = objc_msgSend(v10, "view");
  if (!v57)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (!*(_QWORD *)&v10[v39])
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v58 = v57;
  v59 = v50;
  objc_msgSend(v57, "addSubview:");

  v60 = *(void **)&v10[v39];
  if (!v60)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD950);
  v62 = swift_initStackObject(v61, v101);
  *(_OWORD *)(v62 + 16) = xmmword_16E1A0;
  strcpy((char *)(v62 + 32), "ControlsHeader");
  *(_BYTE *)(v62 + 47) = -18;
  *(_QWORD *)(v62 + 48) = type metadata accessor for NowPlayingControlsHeader() | 0x8000000000000000;
  *(_QWORD *)(v62 + 56) = 0xD000000000000011;
  *(_QWORD *)(v62 + 64) = 0x8000000000186DF0;
  v63 = type metadata accessor for TitleSectionHeaderView();
  *(_QWORD *)(v62 + 72) = v63 | 0x8000000000000000;
  *(_QWORD *)(v62 + 80) = 0x65746F4E776F6853;
  *(_QWORD *)(v62 + 88) = 0xEF72656461654873;
  *(_QWORD *)(v62 + 96) = v63 | 0x8000000000000000;
  *(_QWORD *)(v62 + 104) = 0x6165486575657551;
  *(_QWORD *)(v62 + 112) = 0xEB00000000726564;
  *(_QWORD *)(v62 + 120) = v63 | 0x8000000000000000;
  strcpy((char *)(v62 + 128), "ChapterHeader");
  *(_WORD *)(v62 + 142) = -4864;
  *(_QWORD *)(v62 + 144) = v63 | 0x8000000000000000;
  *(_QWORD *)(v62 + 152) = 0x6C6C6543676E6F53;
  *(_QWORD *)(v62 + 160) = 0xE800000000000000;
  *(_QWORD *)(v62 + 168) = type metadata accessor for SongCell(0);
  *(_QWORD *)(v62 + 176) = 0x4372657470616843;
  *(_QWORD *)(v62 + 184) = 0xEB000000006C6C65;
  *(_QWORD *)(v62 + 192) = type metadata accessor for DeprecatedChapterCell(0);
  *(_QWORD *)(v62 + 200) = 0x6543726563617053;
  *(_QWORD *)(v62 + 208) = 0xEA00000000006C6CLL;
  *(_QWORD *)(v62 + 216) = sub_F174(0, &qword_1FD958, UICollectionViewTableCell_ptr);
  *(_QWORD *)(v62 + 224) = 0x7470697263736544;
  *(_QWORD *)(v62 + 232) = 0xEF6C6C65436E6F69;
  v64 = type metadata accessor for NowPlayingLyricsCell();
  *(_QWORD *)(v62 + 240) = v64;
  strcpy((char *)(v62 + 248), "ShowNotesCell");
  *(_WORD *)(v62 + 262) = -4864;
  *(_QWORD *)(v62 + 264) = v64;
  v65 = v60;
  v66 = sub_CA394(v62);
  sub_6279C(v66);

  swift_bridgeObjectRelease(v66);
  if ((static Podcasts.isBlueMoonEnabled()(v67) & 1) == 0)
  {
    v68 = swift_initStackObject(v96, v100);
    *(_OWORD *)(v68 + 16) = xmmword_16B3D0;
    v69 = String._bridgeToObjectiveC()();
    *(_QWORD *)(v68 + 40) = 0;
    *(_QWORD *)(v68 + 48) = 0;
    *(_QWORD *)(v68 + 32) = v69;
    *(_BYTE *)(v68 + 56) = 1;
    v70 = swift_allocObject(&unk_1CB508, 24, 7);
    swift_unknownObjectUnownedInit(v70 + 16, v10);
    swift_allocObject(v97, 40, 7);
    v71 = DeprecatedBinding.init(_:configurationBlock:)(v68, (uint64_t)sub_72154, v70);
    swift_beginAccess(v20, v102, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
    v74 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v20 & 0xFFFFFFFFFFFFFF8));
    v73 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v20 & 0xFFFFFFFFFFFFFF8));
    if (v74 >= v73 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v71);
    specialized Array._endMutation()(v75);
    swift_endAccess(v102);
  }
  objc_msgSend(v98, "beginAutomaticResponseLoading");
  v76 = (uint64_t)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration];
  v77 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 24];
  v78 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 32];
  __swift_project_boxed_opaque_existential_1(&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration], v77);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v78 + 64))(v77, v78) & 1) != 0)
  {
    v79 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_objectGraph];
    sub_DF78(v76, (uint64_t)v102);
    v80 = objc_allocWithZone((Class)type metadata accessor for NowPlayingControlsViewController());
    v81 = swift_retain();
    sub_1250F4(v81, v102);
    v83 = v82;
    objc_msgSend(v82, "loadViewIfNeeded", swift_release(v79).n128_f64[0]);
    objc_msgSend(v10, "addChildViewController:", v83);
    objc_msgSend(v83, "didMoveToParentViewController:", v10);
    v84 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController];
    *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController] = v83;

  }
  sub_DF78((uint64_t)v33, (uint64_t)v102);
  v85 = (objc_class *)type metadata accessor for LyricsTextViewController();
  v86 = objc_allocWithZone(v85);
  v87 = sub_1373AC(v102);
  v88 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionTextViewController;
  v89 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionTextViewController];
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionTextViewController] = v87;

  if (!*(_QWORD *)&v10[v88])
    goto LABEL_48;
  objc_msgSend(v10, "addChildViewController:");
  v90 = *(void **)&v10[v88];
  if (!v90)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  objc_msgSend(v90, "didMoveToParentViewController:", v10);
  sub_DF78((uint64_t)v33, (uint64_t)v102);
  v91 = objc_allocWithZone(v85);
  v92 = sub_1373AC(v102);
  v93 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesTextViewController;
  v94 = *(void **)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesTextViewController];
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesTextViewController] = v92;

  if (!*(_QWORD *)&v10[v93])
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  objc_msgSend(v10, "addChildViewController:");
  v95 = *(void **)&v10[v93];
  if (v95)
  {
    objc_msgSend(v95, "didMoveToParentViewController:", v10);

    return;
  }
LABEL_51:
  __break(1u);
}

void sub_6384C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[14];
  _BYTE v17[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v17, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v16, (uint64_t *)&unk_1FC7F0);
  v2 = v16[0];
  if (v16[0])
  {
    v3 = a1 + 16;
    v4 = v16[1];
    swift_unknownObjectRetain(v16[0]);
    sub_4AE24((uint64_t)v16);
    ObjectType = swift_getObjectType(v2);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v2);
    v7 = objc_msgSend(v6, "metadataPlayerPath");

    swift_beginAccess(v3, v16, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = *(id *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController);

      v11 = objc_msgSend(v10, "request");
      objc_msgSend(v11, "setPlayerPath:", v7);

    }
    swift_beginAccess(v3, &v15, 0, 0);
    v12 = swift_unknownObjectWeakLoadStrong(v3);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = *(id *)(v12 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController);

      objc_msgSend(v14, "setNeedsReloadForSignificantRequestChange");
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_63A00(uint64_t a1)
{
  char *Strong;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  char *v15;
  void *v16;
  id v17;
  id v18;

  v17 = (id)(a1 + 16);
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  v2 = *(_QWORD *)&Strong[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v3 = *(_QWORD *)(v2 + 16);
  v4 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  swift_bridgeObjectRetain(v2);
  if (!v3)
    goto LABEL_22;
  v5 = 0;
  do
  {
    if (v5 <= v3)
      v6 = v3;
    else
      v6 = v5;
    while (1)
    {
      if (v5 == v6)
        goto LABEL_27;
      v7 = *(unsigned __int8 *)(v2 + 32 + v5++);
      v8 = *(_QWORD *)&Strong[v4];
      if (!v8)
        break;
      v9 = *(_QWORD *)(v8 + 16);
      if (!v9)
        goto LABEL_6;
      if (*(unsigned __int8 *)(v8 + 32) == v7)
        break;
      if (v9 != 1)
      {
        v10 = 33;
        while (1)
        {
          v11 = v10 - 31;
          if (__OFADD__(v10 - 32, 1))
            break;
          if (*(unsigned __int8 *)(v8 + v10) == v7)
            goto LABEL_17;
          ++v10;
          if (v11 == v9)
            goto LABEL_6;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
LABEL_6:
      if (v5 == v3)
        goto LABEL_22;
    }
LABEL_17:
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v13 = _swiftEmptyArrayStorage[2];
    v12 = _swiftEmptyArrayStorage[3];
    if (v13 >= v12 >> 1)
      sub_A9B08(v12 > 1, v13 + 1, 1);
    _swiftEmptyArrayStorage[2] = v13 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v13) = v7;
  }
  while (v5 != v3);
LABEL_22:
  swift_bridgeObjectRelease(v2);

  v14 = sub_62518(3, (uint64_t)_swiftEmptyArrayStorage);
  swift_release(_swiftEmptyArrayStorage);
  if (v14)
  {
    v15 = (char *)swift_unknownObjectUnownedLoadStrong(v17);
    v16 = *(void **)&v15[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
    v18 = v16;

    if (v16)
    {
      objc_msgSend(v18, "reloadData");

    }
    else
    {
LABEL_28:
      __break(1u);
    }
  }
}

void sub_63C4C(char a1)
{
  void *v1;
  _BYTE v3[24];
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v4, "viewWillAppear:", a1 & 1);
  if (objc_msgSend(v1, "isBeingPresented"))
  {
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, v3, 0, 0);
    if ((_QWORD)static NowPlayingDataProvider.shared)
    {
      if (qword_210540)
      {
        swift_unknownObjectWeakAssign(qword_210540 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController, v1);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_63D58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v10[5];

  v1 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController____lazy_storage___prototypeShowNotesController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController____lazy_storage___prototypeShowNotesController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController____lazy_storage___prototypeShowNotesController);
  }
  else
  {
    v4 = v0;
    sub_DF78(v0 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics, (uint64_t)v10);
    v5 = objc_allocWithZone((Class)type metadata accessor for LyricsTextViewController());
    v6 = sub_1373AC(v10);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t sub_63DE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t (**v20)(_QWORD, _QWORD);
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t ObjectType;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  char *v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[24];
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  char v78[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodeTextInfoContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD868);
  __chkstk_darwin(v8);
  v70 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  v11 = __chkstk_darwin(v10);
  v69 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v61 - v13;
  v15 = type metadata accessor for NowPlayingEpisodeContextItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  v71 = v14;
  swift_beginAccess(&static NowPlayingDataProvider.shared, v78, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v75, (uint64_t *)&unk_1FC7F0);
  result = v75[0];
  if (v75[0])
  {
    v20 = (uint64_t (**)(_QWORD, _QWORD))v75[1];
    v73 = v75[0];
    swift_unknownObjectRetain(v75[0]);
    sub_4AE24((uint64_t)v75);
    v66 = a1;
    v21 = objc_msgSend(a1, "tracklist");
    v22 = sub_B61B8();

    v72 = v2;
    v68 = v4;
    if (v22)
    {
      v23 = objc_msgSend(v22, "metadataObject");

      if (v23)
      {
        v65 = v15;
        v24 = v7;
        v25 = objc_msgSend(v23, "flattenedGenericObject");
        v26 = objc_msgSend(v25, "anyObject");

        if (v26)
        {
          v27 = objc_opt_self(MPModelPodcastEpisode);
          v23 = (id)swift_dynamicCastObjCClass(v26, v27);
          v28 = v73;
          if (!v23)

        }
        else
        {
          v23 = 0;
          v28 = v73;
        }
        v7 = v24;
        v15 = v65;
LABEL_13:
        v29 = v18;
        ObjectType = swift_getObjectType(v28);
        v65 = v20[21](ObjectType, v20);
        v64 = v20[20](ObjectType, v20);
        v63 = v31;
        v67 = v5;
        if (v23)
        {
          v32 = v23;
          v33 = objc_msgSend(v23, "descriptionText");
          if (v33)
          {
            v34 = v33;
            v23 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
            v62 = v35;

            goto LABEL_19;
          }
          v23 = 0;
        }
        else
        {
          v32 = 0;
        }
        v62 = 0;
LABEL_19:
        v36 = v69;
        LODWORD(v69) = v20[19](ObjectType, v20);
        v37 = objc_msgSend(v66, "playerPath");
        v38 = objc_msgSend(v37, "route");

        if (v38)
        {
          v39 = objc_msgSend(v38, "isDeviceRoute");

          v40 = v32;
          if (v32)
          {
LABEL_21:
            v41 = v23;
            v42 = v7;
            v43 = v40;
            v44 = objc_msgSend(v40, "shareURL");
            if (v44)
            {
              v45 = v44;
              v46 = v15;
              static URL._unconditionallyBridgeFromObjectiveC(_:)(v44);

              v47 = type metadata accessor for URL(0);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v36, 0, 1, v47);
            }
            else
            {
              v46 = v15;
              v51 = type metadata accessor for URL(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v36, 1, 1, v51);
            }
            v48 = (uint64_t)v70;
            v52 = (uint64_t)v36;
            v50 = (uint64_t)v71;
            sub_982C(v52, (uint64_t)v71, (uint64_t *)&unk_1FB990);
            v66 = v43;
            v23 = v41;
            goto LABEL_27;
          }
        }
        else
        {
          v39 = 0;
          v40 = v32;
          if (v32)
            goto LABEL_21;
        }
        v42 = v7;
        v46 = v15;
        v48 = (uint64_t)v70;
        v49 = type metadata accessor for URL(v40);
        v50 = (uint64_t)v71;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v71, 1, 1, v49);
        v66 = 0;
LABEL_27:
        v53 = v29;
        NowPlayingEpisodeContextItem.init(notes:plainNotes:description:descriptionHasHTML:isLocal:episodeShareURL:)(v65, v64, v63, v23, v62, v69 & 1, v39, v50);
        sub_DF78(v72 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoProvider, (uint64_t)v75);
        v54 = v76;
        v55 = v77;
        __swift_project_boxed_opaque_existential_1(v75, v76);
        v56 = v16;
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v42, v53, v46);
        v57 = v67;
        v58 = v68;
        (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v42, enum case for EpisodeTextInfoContext.nowPlaying(_:), v68);
        dispatch thunk of EpisodeTextInfoProviderProtocol.textInfoDetailForContext(_:)(v42, v54, v55);

        swift_unknownObjectRelease(v73);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v58);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v46);
        v59 = type metadata accessor for EpisodeTextInfoDetail(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v48, 0, 1, v59);
        v60 = v72 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail;
        swift_beginAccess(v72 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail, v74, 33, 0);
        sub_71C5C(v48, v60);
        swift_endAccess(v74);
        return __swift_destroy_boxed_opaque_existential_0(v75);
      }
    }
    else
    {
      v23 = 0;
    }
    v28 = v73;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_64448(char a1)
{
  char *v1;
  id v3;
  char *v4;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v7, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (_BYTE *)&dword_0 + 1)
  {
    v5 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
    if (!v5)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v5, "flashScrollIndicators");
  }
  v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__viewDidAppearOnce] = 1;
  sub_64578();
  if ((sub_64B0C() & 1) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1F94D8 != -1)
      swift_once(&qword_1F94D8, sub_62768);
    objc_msgSend(v6, "postNotificationName:object:userInfo:", qword_210100, v1, 0);

  }
}

void sub_64578()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void (**v26)();
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  void *v56;
  _QWORD *v57;
  void *v58;
  _QWORD *v59;
  id v60;
  char *v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  char *v65;
  void **v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD *v71;
  CGRect v72;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 24];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration], v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3) & 1) != 0)
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections];
    if (v4)
    {
      if (sub_62518(0, v4))
      {
        v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
        if (!v5)
        {
          __break(1u);
          goto LABEL_31;
        }
        if (*(_BYTE *)(v5 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled) == 1)
        {
          v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          v7 = sub_F5648();

          if ((v7 & 1) == 0)
          {
            v8 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView;
            if (!*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView])
            {
              v9 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView;
              if (!*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView]
                && v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__viewDidAppearOnce] == 1)
              {
                v10 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingScrollingTipView()), "init");
                v11 = *(void **)&v1[v9];
                if (v11)
                  v12 = *(id *)&v1[v9];
                else
                  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
                v13 = objc_allocWithZone((Class)UIColor);
                v14 = v11;
                v15 = objc_msgSend(v13, "initWithWhite:alpha:", 0.0, 0.3);
                objc_msgSend(v12, "setBackgroundColor:", v15);

                v16 = v12;
                v17 = objc_msgSend(v1, "view");

                if (!v17 || (v17, v16 != v17))
                {
                  v18 = objc_msgSend(v1, "view");
                  if (!v18)
                  {
LABEL_34:
                    __break(1u);
                    goto LABEL_35;
                  }
                  v19 = v18;
                  objc_msgSend(v18, "addSubview:", v16);

                }
                v20 = objc_msgSend(v10, "superview");
                v21 = objc_msgSend(v1, "view");
                v22 = v21;
                if (v20)
                {

                  if (v22)
                  {

                    if (v20 == v22)
                      goto LABEL_25;
                  }
                }
                else
                {
                  if (!v21)
                    goto LABEL_25;

                }
                v23 = objc_msgSend(v1, "view");
                if (!v23)
                {
LABEL_35:
                  __break(1u);
                  return;
                }
                v24 = v23;
                objc_msgSend(v23, "addSubview:", v10);

LABEL_25:
                v25 = swift_allocObject(&unk_1CB2D8, 24, 7);
                swift_unknownObjectWeakInit(v25 + 16, v1);
                v26 = (void (**)())&v10[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler];
                v27 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler];
                v28 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler + 8];
                *v26 = sub_71CE8;
                v26[1] = (void (*)())v25;
                sub_145A0(v27, v28);
                v29 = *(void **)&v1[v8];
                *(_QWORD *)&v1[v8] = v10;
                v30 = v10;

                v31 = *(void **)&v1[v9];
                *(_QWORD *)&v1[v9] = v16;
                v32 = v16;

                v33 = objc_msgSend(v1, "view");
                if (v33)
                {
                  v34 = v33;
                  objc_msgSend(v33, "setNeedsLayout");

                  v35 = objc_msgSend(v1, "view");
                  if (v35)
                  {
                    v36 = v35;
                    objc_msgSend(v35, "layoutIfNeeded");

                    objc_msgSend(v30, "frame");
                    v38 = v37;
                    v40 = v39;
                    v42 = v41;
                    v44 = v43;
                    v45 = v30;
                    v46 = objc_msgSend(v1, "view");
                    if (v46)
                    {
                      v47 = v46;
                      objc_msgSend(v46, "bounds");
                      v49 = v48;
                      v51 = v50;
                      v53 = v52;
                      v55 = v54;

                      v72.origin.x = v49;
                      v72.origin.y = v51;
                      v72.size.width = v53;
                      v72.size.height = v55;
                      CGRectGetMaxY(v72);
                      objc_msgSend(v45, "frame");
                      objc_msgSend(v45, "setFrame:");

                      objc_msgSend(v32, "setAlpha:", 0.0);
                      v56 = (void *)objc_opt_self(UIView);
                      v57 = (_QWORD *)swift_allocObject(&unk_1CB300, 64, 7);
                      v57[2] = v32;
                      v57[3] = v45;
                      v57[4] = v38;
                      v57[5] = v40;
                      v57[6] = v42;
                      v57[7] = v44;
                      v70 = sub_71D1C;
                      v71 = v57;
                      v66 = _NSConcreteStackBlock;
                      v67 = 1107296256;
                      v68 = sub_F528;
                      v69 = &block_descriptor_84;
                      v58 = _Block_copy(&v66);
                      v59 = v71;
                      v60 = v32;
                      v61 = v45;
                      swift_release(v59);
                      v62 = swift_allocObject(&unk_1CB350, 24, 7);
                      *(_QWORD *)(v62 + 16) = v1;
                      v70 = sub_71D7C;
                      v71 = (_QWORD *)v62;
                      v66 = _NSConcreteStackBlock;
                      v67 = 1107296256;
                      v68 = sub_153D78;
                      v69 = &block_descriptor_90;
                      v63 = _Block_copy(&v66);
                      v64 = v71;
                      v65 = v1;
                      swift_release(v64);
                      objc_msgSend(v56, "animateWithDuration:delay:options:animations:completion:", 0, v58, v63, 0.35, 0.0);
                      _Block_release(v63);
                      _Block_release(v58);

                      return;
                    }
                    goto LABEL_33;
                  }
LABEL_32:
                  __break(1u);
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
LABEL_31:
                __break(1u);
                goto LABEL_32;
              }
            }
          }
        }
      }
    }
  }
}

id sub_64B0C()
{
  void *v0;
  id v1;
  id result;
  id v3;
  char *v4;

  v1 = objc_msgSend(v0, "presentingViewController");
  if (v1
    || (result = objc_msgSend(v0, "parentViewController"), (v1 = result) != 0))
  {
    v3 = objc_msgSend(v1, "traitCollection");
    v4 = (char *)objc_msgSend(v3, "horizontalSizeClass");

    return (id)(v4 == (_BYTE *)&dword_0 + 1);
  }
  return result;
}

void sub_64BE8(char a1)
{
  void *v1;
  uint64_t Strong;
  void *v4;
  char *v5;
  char v6;
  _BYTE v7[24];
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v8, "viewDidDisappear:", a1 & 1);
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v7, 0, 0);
  if (!(_QWORD)static NowPlayingDataProvider.shared)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!qword_210540)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  Strong = swift_unknownObjectWeakLoadStrong(qword_210540 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = v1;
    v6 = static NSObject.== infix(_:_:)(v5, v4);

    if ((v6 & 1) != 0)
    {
      if (objc_msgSend(v5, "isBeingDismissed"))
      {
        objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController], "endAutomaticResponseLoading");
        if ((_QWORD)static NowPlayingDataProvider.shared)
        {
          if (qword_210540)
          {
            swift_unknownObjectWeakAssign(qword_210540 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController, 0);
            return;
          }
LABEL_15:
          __break(1u);
          return;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
  }
}

void sub_64D78()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  id v40;
  char *v41;
  CGFloat Width;
  CGFloat Height;
  id v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  objc_super v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = type metadata accessor for CGRect.LayoutAxis(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74.receiver = v1;
  v74.super_class = ObjectType;
  objc_msgSendSuper2(&v74, "viewDidLayoutSubviews");
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = objc_msgSend(v1, "traitCollection");
  v18 = UITraitCollection.safeDisplayScale.getter();

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView], "setFrame:", v10, v12, v14, v16);
  v19 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  v20 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (!v20)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v20, "setFrame:", v10, v12, v14, v16);
  v21 = *(void **)&v1[v19];
  if (!v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v22 = v21;
  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  v24 = v23;
  objc_msgSend(v23, "safeAreaInsets");
  v26 = v25;

  objc_msgSend(v22, "verticalScrollIndicatorInsets");
  objc_msgSend(v22, "setVerticalScrollIndicatorInsets:", v26);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView], "setFrame:", v10, v12, v14, v16);
  v27 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView];
  if (!v27)
    return;
  v28 = v27;
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_17;
  v30 = v29;
  v31 = objc_msgSend(v29, "safeAreaLayoutGuide");

  objc_msgSend(v31, "layoutFrame");
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;

  v40 = objc_msgSend(v1, "traitCollection");
  v41 = (char *)objc_msgSend(v40, "userInterfaceIdiom");

  v72 = v18;
  if (v41 == (_BYTE *)&dword_0 + 1)
  {
    Width = 428.0;
  }
  else
  {
    v75.origin.x = v33;
    v75.origin.y = v35;
    v75.size.width = v37;
    v75.size.height = v39;
    Width = CGRectGetWidth(v75);
  }
  v76.origin.x = v33;
  v76.origin.y = v35;
  v76.size.width = v37;
  v76.size.height = v39;
  Height = CGRectGetHeight(v76);
  v44 = objc_msgSend(v1, "view");
  v70 = v37;
  v71 = v39;
  if (!v44)
    goto LABEL_18;
  v45 = v44;
  objc_msgSend(v44, "safeAreaInsets");
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;

  sub_B4DDC(Width, Height, v47, v49, v51, v53);
  v55 = v54;
  v77.origin.x = v33;
  v77.origin.y = v35;
  v77.size.width = Width;
  v77.size.height = Height;
  v56 = CGRectGetWidth(v77);
  v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201970);
  v58 = swift_allocObject(v57, ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ 2 * *(_QWORD *)(v4 + 72), *(unsigned __int8 *)(v4 + 80) | 7);
  *(_OWORD *)(v58 + 16) = xmmword_16E1B0;
  v59 = static CGRect.LayoutAxis.vertical.getter();
  static CGRect.LayoutAxis.horizontal.getter(v59);
  v73 = v58;
  v60 = sub_8330((unint64_t *)&qword_1FD930, (uint64_t (*)(uint64_t))&type metadata accessor for CGRect.LayoutAxis, (uint64_t)&protocol conformance descriptor for CGRect.LayoutAxis);
  v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201980);
  v62 = sub_720E4((unint64_t *)&qword_1FD940, (uint64_t *)&unk_201980);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v73, v61, v62, v3, v60);
  v63 = CGRect.centeringAlong(axes:bounds:scale:)(v6, v33, v35, v70, v71, v72, 0.0, 0.0, v56, v55);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v28, "setFrame:", v63, v65, v67, v69);

}

void sub_6524C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  _QWORD v12[5];
  uint64_t v13;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections] = a1;
  *(_QWORD *)&v3 = swift_bridgeObjectRelease(v2).n128_u64[0];
  v4 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (v5)
  {
    objc_msgSend(v5, "cancelInteractiveMovement", v3);
    v6 = *(void **)&v1[v4];
    if (v6)
    {
      objc_msgSend(v6, "reloadData");
      v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v8 = swift_allocObject(&unk_1CB288, 24, 7);
      *(_QWORD *)(v8 + 16) = v1;
      v12[4] = sub_71CA4;
      v13 = v8;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      v12[2] = sub_F528;
      v12[3] = &block_descriptor_75;
      v9 = _Block_copy(v12);
      v10 = v13;
      v11 = v1;
      objc_msgSend(v7, "_performBlockAfterCATransactionCommits:", v9, swift_release(v10).n128_f64[0]);
      _Block_release(v9);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_65374(unint64_t a1, int a2, char a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  void **v21;
  unsigned __int8 *v22;
  uint64_t v23;
  unsigned __int8 *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  id v32;
  void *v33;
  id v34;
  char v35;
  char v36;
  NSString *v37;
  char *v38;
  Class isa;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t (*v50)();
  void *v51;
  uint64_t i;
  unint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  unsigned __int8 *v62;
  id v63;
  void *v64;
  _QWORD *v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unsigned __int8 *v72;
  id v73;
  char *v74;
  int v75;
  uint64_t v76;
  char *v77;
  char v78[24];
  void **aBlock;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t (*v83)();
  uint64_t v84;
  _QWORD *v85;

  v76 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v76 - 8);
  v9 = __chkstk_darwin(v76);
  v77 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v67 - v11;
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v14 = swift_allocObject(&unk_1CB558, 32, 7);
  v15 = v14;
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  v16 = &qword_1FD000;
  if ((a3 & 1) == 0
    || (v17 = *(void **)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView]) == 0)
  {
    v32 = v13;
    goto LABEL_26;
  }
  v68 = v12;
  v75 = a1;
  v69 = v8;
  v70 = a2;
  v71 = v14;
  v18 = *(_QWORD *)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v19 = *(unsigned __int8 **)(v18 + 16);
  v20 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v67 = v13;
  v74 = a4;
  swift_bridgeObjectRetain(v18);
  v72 = v17;
  v21 = (void **)_swiftEmptyArrayStorage;
  v73 = (id)v18;
  if (!v19)
    goto LABEL_29;
  v22 = 0;
  v23 = v18 + 32;
  do
  {
    if (v22 <= v19)
      v24 = v19;
    else
      v24 = v22;
    while (1)
    {
      if (v22 == v24)
        goto LABEL_50;
      v25 = (v22++)[v23];
      v26 = *(_QWORD *)&a4[v20];
      if (!v26)
        break;
      v27 = *(_QWORD *)(v26 + 16);
      if (!v27)
        goto LABEL_8;
      if (*(unsigned __int8 *)(v26 + 32) == v25)
        break;
      if (v27 != 1)
      {
        v28 = 33;
        while (1)
        {
          v29 = v28 - 31;
          if (__OFADD__(v28 - 32, 1))
            break;
          if (*(unsigned __int8 *)(v26 + v28) == v25)
            goto LABEL_19;
          ++v28;
          if (v29 == v27)
            goto LABEL_8;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
LABEL_8:
      if (v22 == v19)
        goto LABEL_29;
    }
LABEL_19:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    aBlock = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_A9B08(0, (int64_t)v21[2] + 1, 1);
      v21 = aBlock;
    }
    a1 = (unint64_t)v21[2];
    v31 = (unint64_t)v21[3];
    v18 = a1 + 1;
    if (a1 >= v31 >> 1)
    {
      sub_A9B08(v31 > 1, a1 + 1, 1);
      v21 = aBlock;
    }
    v21[2] = (void *)v18;
    *((_BYTE *)v21 + a1 + 32) = v25;
  }
  while (v22 != v19);
LABEL_29:
  swift_bridgeObjectRelease(v73);

  LOBYTE(a1) = v75;
  v23 = sub_ADAA0(v75, (uint64_t)v21);
  v36 = v35;
  swift_release(v21);
  if ((v36 & 1) != 0)
  {

    v15 = v71;
    LOBYTE(a2) = v70;
    v16 = &qword_1FD000;
    goto LABEL_26;
  }
  v37 = UICollectionElementKindSectionHeader;
  v38 = v68;
  IndexPath.init(index:)(v23);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v20 = v69;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v76);
  v22 = v72;
  v40 = objc_msgSend(v72, "supplementaryViewForElementKind:atIndexPath:", v37, isa);

  if (!v40)
  {
LABEL_38:

    v15 = v71;
    LOBYTE(a2) = v70;
    LOBYTE(a1) = v75;
    v16 = &qword_1FD000;
LABEL_26:
    sub_65AAC(a2 & 1, a1);
    v33 = *(void **)&a4[v16[175]];
    if (v33)
    {
      v34 = v33;
      objc_msgSend(v34, "cancelInteractiveMovement");
      objc_msgSend(v34, "reloadData");
      swift_release(v15);

    }
    else
    {
      swift_release(v15);

    }
    return;
  }
  v41 = type metadata accessor for TitleSectionHeaderView();
  v42 = swift_dynamicCastClass(v40, v41);
  if (!v42)
  {

    goto LABEL_38;
  }
  a1 = v42;
  v85 = _swiftEmptyArrayStorage;
  v73 = v40;
  if (v75 != 3)
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD898);
    v48 = swift_allocObject(v47, ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72), *(unsigned __int8 *)(v20 + 80) | 7);
    *(_OWORD *)(v48 + 16) = xmmword_16B3D0;
    IndexPath.init(item:section:)(1, v23);
    v85 = (_QWORD *)v48;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_48;
  }
  v43 = static Podcasts.isBlueMoonEnabled()(v42);
  if ((v43 & 1) == 0)
  {
    v49 = &v74[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController];
    swift_beginAccess(&v74[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController], v78, 0, 0);
    sub_DF78((uint64_t)v49, (uint64_t)&aBlock);
    v51 = v82;
    v50 = v83;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v82);
    v45 = (*(uint64_t (**)(void *))(*((_QWORD *)v50 + 1) + 40))(v51);
    __swift_destroy_boxed_opaque_existential_0(&aBlock);
    v46 = v76;
    if ((v45 & 0x8000000000000000) == 0)
      goto LABEL_41;
    goto LABEL_55;
  }
  v44 = (unint64_t)sub_689B0(v43);
  v18 = v44;
  if (v44 >> 62)
  {
LABEL_51:
    if (v18 < 0)
      v66 = v18;
    else
      v66 = v18 & 0xFFFFFFFFFFFFFF8;
    v45 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v18);
    v46 = v76;
    if ((v45 & 0x8000000000000000) == 0)
      goto LABEL_41;
LABEL_55:
    __break(1u);
    return;
  }
  v45 = *(_QWORD *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRelease(v44);
  v46 = v76;
LABEL_41:
  if (v45)
  {
    for (i = 0; i != v45; ++i)
    {
      IndexPath.init(item:section:)(i, v23);
      v53 = (unint64_t)v85;
      v54 = swift_isUniquelyReferenced_nonNull_native(v85);
      v85 = (_QWORD *)v53;
      if ((v54 & 1) == 0)
      {
        v53 = sub_134B8C(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
        v85 = (_QWORD *)v53;
      }
      v56 = *(_QWORD *)(v53 + 16);
      v55 = *(_QWORD *)(v53 + 24);
      if (v56 >= v55 >> 1)
      {
        v53 = sub_134B8C(v55 > 1, v56 + 1, 1, v53);
        v85 = (_QWORD *)v53;
      }
      *(_QWORD *)(v53 + 16) = v56 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v53+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v56, v77, v46);
    }
  }
LABEL_48:
  v57 = swift_allocObject(&unk_1CB580, 72, 7);
  v58 = v71;
  *(_QWORD *)(v57 + 16) = sub_71F60;
  *(_QWORD *)(v57 + 24) = v58;
  *(_BYTE *)(v57 + 32) = v70 & 1;
  *(_QWORD *)(v57 + 40) = a1;
  *(_QWORD *)(v57 + 48) = v22;
  *(_QWORD *)(v57 + 56) = v23;
  *(_QWORD *)(v57 + 64) = &v85;
  v59 = swift_allocObject(&unk_1CB5A8, 32, 7);
  *(_QWORD *)(v59 + 16) = sub_71FA0;
  *(_QWORD *)(v59 + 24) = v57;
  v83 = sub_ECE4;
  v84 = v59;
  aBlock = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_F318;
  v82 = &block_descriptor_138;
  v60 = _Block_copy(&aBlock);
  v61 = v84;
  v62 = v22;
  swift_retain();
  v63 = v73;
  swift_release(v61);
  v83 = (uint64_t (*)())UIScreen.Dimensions.size.getter;
  v84 = 0;
  aBlock = _NSConcreteStackBlock;
  v80 = 1107296256;
  v81 = sub_153D78;
  v82 = &block_descriptor_141;
  v64 = _Block_copy(&aBlock);
  objc_msgSend(v62, "performBatchUpdates:completion:", v60, v64, swift_release(v84).n128_f64[0]);

  swift_release(v58);
  _Block_release(v64);
  _Block_release(v60);

  v65 = v85;
  swift_release(v57);
  swift_bridgeObjectRelease(v65);
}

uint64_t sub_65AAC(char a1, unsigned __int8 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];
  _QWORD v16[3];
  uint64_t v17;

  v4 = type metadata accessor for NSUserDefaults.Keys(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 - 1 >= 2)
  {
    if (a2 != 3)
      return result;
    if (qword_1F9568 != -1)
      swift_once(&qword_1F9568, sub_F57F8);
    v9 = qword_2102D0;
  }
  else
  {
    if (qword_1F9560 != -1)
      swift_once(&qword_1F9560, sub_F57D4);
    v9 = qword_2102B8;
  }
  v10 = __swift_project_value_buffer(v4, (uint64_t)v9);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v8, v10, v4);
  v11 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a1 & 1);
  v17 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
  v16[0] = v11;
  v12 = NSUserDefaults.Keys.rawValue.getter(v17);
  v14 = v13;
  sub_2808C((uint64_t)v16, (uint64_t)v15, &qword_1FD880);
  sub_F589C((uint64_t)v15, v12, v14);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  return sub_9944((uint64_t)v16, &qword_1FD880);
}

void sub_65C58(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t *a7)
{
  char v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  char **v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  Class isa;
  id v21;
  Swift::String v22;
  Swift::String v23;

  v10 = a3;
  a1(a3);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v10 & 1) != 0)
  {
    v22._object = (void *)0xE000000000000000;
    v12._object = (void *)0x8000000000186DA0;
    v12._countAndFlagsBits = 0xD000000000000025;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = 0;
    v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v22);

    if ((uint64_t)objc_msgSend(a5, "numberOfItemsInSection:", a6, sub_76358(v14._countAndFlagsBits, (uint64_t)v14._object)) <= 1)
    {
      v15 = &selRef_insertItemsAtIndexPaths_;
LABEL_6:
      v19 = *a7;
      type metadata accessor for IndexPath(0);
      swift_bridgeObjectRetain(v19);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a5, *v15, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

    }
  }
  else
  {
    v23._object = (void *)0xE000000000000000;
    v16._object = (void *)0x8000000000186D70;
    v16._countAndFlagsBits = 0xD000000000000025;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v23._countAndFlagsBits = 0;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v11, v17, v23);

    if ((uint64_t)objc_msgSend(a5, "numberOfItemsInSection:", a6, sub_76358(v18._countAndFlagsBits, (uint64_t)v18._object)) >= 2)
    {
      v15 = &selRef_deleteItemsAtIndexPaths_;
      goto LABEL_6;
    }
  }
  v21 = objc_msgSend(a5, "collectionViewLayout");
  objc_msgSend(v21, "invalidateLayout");

}

void sub_65E40(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  void *v7;
  double v8;
  id v9;

  objc_msgSend(a1, "contentOffset");
  v3 = v2;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 72))(v4, v5);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (v7)
  {
    if (v6 > v6 - v3)
      v8 = v6;
    else
      v8 = v6 - v3;
    v9 = v7;
    objc_msgSend(v9, "verticalScrollIndicatorInsets");
    objc_msgSend(v9, "setVerticalScrollIndicatorInsets:", v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_65F58(unsigned __int8 a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String *v43;
  uint64_t v44;
  uint64_t countAndFlagsBits;
  uint64_t object;
  unsigned __int8 v47;
  char v48;
  id v49;
  const char *v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  void (**v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (a1 - 1 >= 2)
  {
    if (a1 != 3)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003DLL, 0x8000000000186D10, "NowPlayingUI/NowPlayingViewController.swift", 43, 2, 513, 0);
      __break(1u);
      return;
    }
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v66 = 0xE000000000000000;
    v8 = 0x7372657470616843;
    v9 = 0xE800000000000000;
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v8 = 0xD000000000000013;
    v66 = 0xE000000000000000;
    v9 = 0x8000000000186D50;
  }
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v11 = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, (Swift::String_optional)0, (NSBundle)v7, v10, *(Swift::String *)(&v66 - 1));

  v13 = swift_allocObject(&unk_1CB2D8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v3);
  v14 = swift_allocObject(&unk_1CB4E0, 40, 7);
  *(_BYTE *)(v14 + 16) = a1;
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_textDrawingCache);
  *(_QWORD *)(v14 + 24) = v6;
  *(_QWORD *)(v14 + 32) = v13;
  v16 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache];
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache] = v15;
  swift_retain();
  v69 = v6;
  swift_retain();
  swift_release(v16);
  v68 = v3;
  v17 = (_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics);
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24);
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32);
  __swift_project_boxed_opaque_existential_1(v17, v19);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18);
  v21 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle;
  a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle] = v20;
  v22 = objc_msgSend(a2, "traitCollection");
  v23 = (char *)objc_msgSend(v22, "horizontalSizeClass");

  if (v23 == (_BYTE *)&dword_0 + 1)
  {
    a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = a2[v21];
    sub_78610();
  }
  v24 = v17[3];
  v25 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
  v27 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle;
  a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle] = v26;
  v28 = objc_msgSend(a2, "traitCollection");
  v29 = (char *)objc_msgSend(v28, "horizontalSizeClass");

  if (v29 == (_BYTE *)&dword_0 + 2)
  {
    a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = a2[v27];
    sub_78610();
  }
  else
  {

  }
  v30 = v17[3];
  v31 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v30);
  v32 = (*(double (**)(uint64_t, uint64_t))(v31 + 112))(v30, v31);
  v33 = &a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonOffset];
  *(double *)v33 = v32;
  *((_QWORD *)v33 + 1) = v34;
  v35 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(a2, "setBackgroundColor:", v35);

  v36 = v17[3];
  v37 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v36);
  v38 = (*(double (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
  v39 = &a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets];
  *(double *)v39 = v38;
  *((_QWORD *)v39 + 1) = v40;
  *((_QWORD *)v39 + 2) = v41;
  *((_QWORD *)v39 + 3) = v42;
  objc_msgSend(a2, "setNeedsLayout");
  v43 = (Swift::String *)&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title];
  v44 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title + 8];
  *v43 = v12;
  swift_bridgeObjectRelease(v44);
  countAndFlagsBits = v43->_countAndFlagsBits;
  object = (uint64_t)v43->_object;
  swift_bridgeObjectRetain(object);
  sub_5129C(countAndFlagsBits, object);
  objc_msgSend(a2, "setNeedsLayout");
  if ((*(_BYTE *)(v68 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_allowsSectionCollapse) & 1) != 0)
  {
    v47 = a1;
    v48 = sub_665E4(a1, (uint64_t)v69, v13);
    swift_release(v13);
    v49 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v67 = 0xE000000000000000;
    if ((v48 & 1) != 0)
      v50 = "HIDE_EPISODE_DESCRIPTION_BUTTON_TITLE";
    else
      v50 = "SHOW_EPISODE_DESCRIPTION_BUTTON_TITLE";
    v51._object = (void *)((unint64_t)(v50 - 32) | 0x8000000000000000);
    v51._countAndFlagsBits = 0xD000000000000025;
    v52._countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    v53 = 0;
    v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v49, v52, *(Swift::String *)(&v67 - 1));

    sub_76358(v54._countAndFlagsBits, (uint64_t)v54._object);
  }
  else
  {
    swift_release(v13);
    sub_76358(0, 0xE000000000000000);
    v47 = a1;
  }
  v55 = swift_allocObject(&unk_1CB508, 24, 7);
  swift_unknownObjectUnownedInit(v55 + 16, v68);
  v56 = swift_allocObject(&unk_1CB530, 48, 7);
  *(_QWORD *)(v56 + 16) = v55;
  *(_BYTE *)(v56 + 24) = v47;
  *(_QWORD *)(v56 + 32) = sub_71ED0;
  *(_QWORD *)(v56 + 40) = v14;
  v57 = (void (**)(uint64_t))&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler];
  v58 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler];
  v59 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler + 8];
  *v57 = sub_71F2C;
  v57[1] = (void (*)(uint64_t))v56;
  swift_retain();
  sub_145A0(v58, v59);
  v60 = (_QWORD *)(v68 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration);
  v61 = *(_QWORD *)(v68 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 24);
  v62 = *(_QWORD *)(v68 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 32);
  __swift_project_boxed_opaque_existential_1(v60, v60[3]);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v62 + 24))(v61, v62) & 1) != 0)
  {
    v63 = v60[3];
    v64 = v60[4];
    __swift_project_boxed_opaque_existential_1(v60, v63);
    v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64) & ((v47 - 1) < 2u);
    a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible] = v65;
    if (v65 != a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible])
    {
      a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible] = v65;
      objc_msgSend(a2, "setNeedsLayout");
    }
    a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isBottomHairlineVisible] = 1;
    if ((a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isBottomHairlineVisible] & 1) == 0)
    {
      a2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isBottomHairlineVisible] = 1;
      objc_msgSend(a2, "setNeedsLayout");
    }
  }
  swift_release(v14);

}

unint64_t sub_665E4(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  BOOL v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  unint64_t result;
  _BYTE v9[24];

  if (a1 - 1 >= 2)
  {
    if (a1 == 3)
    {
      return (unint64_t)sub_F5490() & 1;
    }
    else
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003DLL, 0x8000000000186D10, "NowPlayingUI/NowPlayingViewController.swift", 43, 2, 523, 0);
      __break(1u);
    }
  }
  else
  {
    if ((sub_F5474() & 1) != 0)
    {
      return 1;
    }
    else
    {
      v5 = a3 + 16;
      swift_beginAccess(v5, v9, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v5);
      if (Strong)
      {
        v7 = (void *)Strong;
        v4 = sub_666D0();

      }
      else
      {
        return 0;
      }
    }
    return v4;
  }
  return result;
}

BOOL sub_666D0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  _BOOL4 v6;
  id v7;
  _BOOL4 v8;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController), "response");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "tracklist");

    v4 = objc_msgSend(v3, "items");
    v5 = objc_msgSend(v4, "totalItemCount");

    v6 = (uint64_t)v5 > 1;
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = sub_F5664();

  return !v8 && !v6;
}

void sub_667B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  char v6;
  char *Strong;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v6 = a4();
  sub_65374(a3, (v6 & 1) == 0, 1, Strong);

}

void sub_66818(_BYTE *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String *v29;
  uint64_t v30;
  uint64_t countAndFlagsBits;
  uint64_t object;
  uint64_t v33;
  uint64_t v34;
  double v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  BOOL v54;
  double v55;
  id v56;
  void *v57;
  unsigned __int8 v58;
  char v59;
  char *v60;
  char **v61;
  char *v62;
  Swift::String v63;

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_textDrawingCache];
  v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache];
  *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache] = v4;
  swift_retain();
  swift_release(v5);
  v6 = &v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24];
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32];
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics], v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  v10 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle;
  a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle] = v9;
  v11 = objc_msgSend(a1, "traitCollection");
  v12 = (char *)objc_msgSend(v11, "horizontalSizeClass");

  if (v12 == (_BYTE *)&dword_0 + 1)
  {
    a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = a1[v10];
    sub_78610();
  }
  v13 = *((_QWORD *)v6 + 3);
  v14 = *((_QWORD *)v6 + 4);
  __swift_project_boxed_opaque_existential_1(v6, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  v16 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle;
  a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle] = v15;
  v17 = objc_msgSend(a1, "traitCollection");
  v18 = (char *)objc_msgSend(v17, "horizontalSizeClass");

  if (v18 == (_BYTE *)&dword_0 + 2)
  {
    a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = a1[v16];
    sub_78610();
  }
  else
  {

  }
  v19 = *((_QWORD *)v6 + 3);
  v20 = *((_QWORD *)v6 + 4);
  __swift_project_boxed_opaque_existential_1(v6, v19);
  v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 112))(v19, v20);
  v22 = &a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonOffset];
  *(double *)v22 = v21;
  *((_QWORD *)v22 + 1) = v23;
  v24 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(a1, "setBackgroundColor:", v24);

  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v63._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0x49545F4555455551;
  v26._object = (void *)0xEB00000000454C54;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v63);

  v29 = (Swift::String *)&a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title];
  v30 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title + 8];
  *v29 = v28;
  swift_bridgeObjectRelease(v30);
  countAndFlagsBits = v29->_countAndFlagsBits;
  object = (uint64_t)v29->_object;
  swift_bridgeObjectRetain(object);
  sub_5129C(countAndFlagsBits, object);
  objc_msgSend(a1, "setNeedsLayout");
  v33 = *((_QWORD *)v6 + 3);
  v34 = *((_QWORD *)v6 + 4);
  __swift_project_boxed_opaque_existential_1(v6, v33);
  v35 = (*(double (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
  v36 = &a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets];
  *(double *)v36 = v35;
  *((_QWORD *)v36 + 1) = v37;
  *((_QWORD *)v36 + 2) = v38;
  *((_QWORD *)v36 + 3) = v39;
  objc_msgSend(a1, "setNeedsLayout");
  v40 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 24];
  v41 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration + 32];
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration], v40);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41) & 1) == 0)
    return;
  v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v43 = *(_QWORD *)(v42 + 16);
  v44 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v62 = v2;
  swift_bridgeObjectRetain(v42);
  if (!v43)
    goto LABEL_28;
  v45 = 0;
  do
  {
    if (v45 <= v43)
      v46 = v43;
    else
      v46 = v45;
    while (1)
    {
      if (v45 == v46)
        goto LABEL_40;
      v47 = *(unsigned __int8 *)(v42 + 32 + v45++);
      v48 = *(_QWORD *)&v2[v44];
      if (!v48)
        break;
      v49 = *(_QWORD *)(v48 + 16);
      if (!v49)
        goto LABEL_12;
      if (*(unsigned __int8 *)(v48 + 32) == v47)
        break;
      if (v49 != 1)
      {
        v50 = 33;
        while (1)
        {
          v51 = v50 - 31;
          if (__OFADD__(v50 - 32, 1))
            break;
          if (*(unsigned __int8 *)(v48 + v50) == v47)
            goto LABEL_23;
          ++v50;
          if (v51 == v49)
            goto LABEL_12;
        }
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
LABEL_12:
      if (v45 == v43)
        goto LABEL_28;
    }
LABEL_23:
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v53 = _swiftEmptyArrayStorage[2];
    v52 = _swiftEmptyArrayStorage[3];
    if (v53 >= v52 >> 1)
      sub_A9B08(v52 > 1, v53 + 1, 1);
    _swiftEmptyArrayStorage[2] = v53 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v53) = v47;
  }
  while (v45 != v43);
LABEL_28:
  swift_bridgeObjectRelease(v42);

  v54 = sub_62518(3, (uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v55 = swift_release(_swiftEmptyArrayStorage).n128_u64[0];
  if (v54)
  {
    v56 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v57 = v56;
    if ((v62[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_allowsSectionCollapse] & 1) != 0)
    {
      v58 = sub_F5490();

      v59 = v58 & 1;
      a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible] = v58 & 1;
      v60 = &a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible];
      v61 = &selRef_boundingRectWithSize_options_attributes_context_;
      if ((v58 & 1) == a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible])
        goto LABEL_36;
LABEL_35:
      *v60 = v59;
      objc_msgSend(a1, v61[94], v55);
    }
    else
    {

      v59 = 1;
      a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible] = 1;
      v60 = &a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible];
      v61 = &selRef_boundingRectWithSize_options_attributes_context_;
      if ((a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible] & 1) == 0)
        goto LABEL_35;
    }
  }
  else
  {
    a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible] = 0;
    v60 = &a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible];
    v61 = &selRef_boundingRectWithSize_options_attributes_context_;
    if ((a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible] & 1) != 0)
    {
      v59 = 0;
      goto LABEL_35;
    }
  }
LABEL_36:
  a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isBottomHairlineVisible] = 1;
  if ((a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isBottomHairlineVisible] & 1) == 0)
  {
    a1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isBottomHairlineVisible] = 1;
    objc_msgSend(a1, v61[94]);
  }
}

void sub_66E00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[32];
  _QWORD v16[4];
  _BYTE v17[24];

  v2 = type metadata accessor for NSUserDefaults.Keys(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_66FB0();

  }
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  if (qword_1F9558 != -1)
    swift_once(&qword_1F9558, sub_F57B0);
  v9 = __swift_project_value_buffer(v2, (uint64_t)qword_2102A0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  v10 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", 1);
  v16[3] = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
  v16[0] = v10;
  v11 = NSUserDefaults.Keys.rawValue.getter();
  v13 = v12;
  sub_2808C((uint64_t)v16, (uint64_t)v15, &qword_1FD880);
  sub_F589C((uint64_t)v15, v11, v13);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_9944((uint64_t)v16, &qword_1FD880);

}

void sub_66FB0()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  char *v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView];
    if (v2)
    {
      v3 = (void *)objc_opt_self(UIView);
      v4 = (_QWORD *)swift_allocObject(&unk_1CB3A0, 40, 7);
      v4[2] = v2;
      v4[3] = v1;
      v4[4] = v0;
      v22 = sub_71D88;
      v23 = v4;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_F528;
      v21 = &block_descriptor_96;
      v5 = _Block_copy(&v18);
      v6 = v23;
      v7 = v1;
      v8 = v2;
      v9 = v7;
      v10 = v8;
      v11 = v0;
      swift_release(v6);
      v12 = (_QWORD *)swift_allocObject(&unk_1CB3F0, 40, 7);
      v12[2] = v9;
      v12[3] = v10;
      v12[4] = v11;
      v22 = sub_71DCC;
      v23 = v12;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_153D78;
      v21 = &block_descriptor_102;
      v13 = _Block_copy(&v18);
      v14 = v23;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      swift_release(v14);
      objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 0x10000, v5, v13, 0.35, 0.0);
      _Block_release(v13);
      _Block_release(v5);

    }
  }
}

void sub_67168(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  id v4;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (v2)
  {
    v4 = v2;
    objc_msgSend(v4, "contentSize");
    objc_msgSend(v4, "setContentOffset:animated:", 1, 0.0, fmin(floor(v3 * 0.25), 200.0));

  }
  else
  {
    __break(1u);
  }
}

id sub_671DC(void *a1, void *a2, void *a3)
{
  id result;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGRect v15;

  objc_msgSend(a1, "setAlpha:", 0.0);
  result = objc_msgSend(a3, "view");
  if (result)
  {
    v6 = result;
    objc_msgSend(result, "bounds");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v15.origin.x = v8;
    v15.origin.y = v10;
    v15.size.width = v12;
    v15.size.height = v14;
    CGRectGetMaxY(v15);
    objc_msgSend(a2, "frame");
    return objc_msgSend(a2, "setFrame:");
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_67298(int a1, id a2, void *a3, uint64_t a4)
{
  void *v6;
  void *v7;
  id result;

  objc_msgSend(a2, "removeFromSuperview");
  objc_msgSend(a3, "removeFromSuperview");
  v6 = *(void **)(a4 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView) = 0;

  v7 = *(void **)(a4 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView) = 0;

  result = *(id *)(a4 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (result)
    return objc_msgSend(result, "setContentOffset:animated:", 1, 0.0, 0.0);
  __break(1u);
  return result;
}

void sub_6735C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[28];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "(";
  v4[2] = "(";
  v4[3] = &unk_16E248;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = &unk_16E248;
  v4[6] = &unk_16E248;
  v4[7] = &unk_16E248;
  v4[8] = "(";
  v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[10] = &unk_16E248;
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = &unk_16E260;
  v4[13] = &unk_16E248;
  v4[14] = "(";
  sub_67448(319);
  if (v3 <= 0x3F)
  {
    v4[15] = *(_QWORD *)(v2 - 8) + 64;
    v4[16] = &unk_16E248;
    v4[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[18] = &unk_16E260;
    v4[19] = &unk_16E248;
    v4[20] = &unk_16E248;
    v4[21] = &unk_16E248;
    v4[22] = &unk_16E248;
    v4[23] = &unk_16E248;
    v4[24] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[25] = &unk_16E260;
    v4[26] = &unk_16E248;
    v4[27] = &unk_16E248;
    swift_updateClassMetadata2(a1, 256, 28, v4, a1 + 80);
  }
}

void sub_67448(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FD658)
  {
    v2 = type metadata accessor for EpisodeTextInfoDetail(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FD658);
  }
}

void sub_674A4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  id v59;
  id v60;
  Class isa;
  void (*v62)(char *, uint64_t);
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  _QWORD *v76;

  v2 = v1;
  v75 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v63 - v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v63 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v63 - v17;
  v19 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController], "response");
  if (!v19)
    return;
  v20 = v19;
  v21 = objc_msgSend(v19, "tracklist");

  if (!v21)
    return;
  v74 = v21;
  v22 = objc_msgSend(v21, "playingItemIndexPath");
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_28;
  }
  v23 = v22;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v22);

  v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v24(v8, v16, v9);
  v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v73(v8, 0, 1, v9);
  v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v72(v8, 1, v9) == 1)
  {
LABEL_28:

    v41 = (uint64_t)v8;
    goto LABEL_29;
  }
  v65 = v6;
  v66 = v10;
  v63 = v13;
  v64 = (void (*)(char *, uint64_t, uint64_t))v24;
  v67 = v18;
  v68 = v9;
  v25 = ((uint64_t (*)(char *, char *, uint64_t))v24)(v18, v8, v9);
  v71 = IndexPath.section.getter(v25);
  v26 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v27 = *(_QWORD *)(v26 + 16);
  v28 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v69 = v2;
  swift_bridgeObjectRetain(v26);
  v70 = v26;
  if (!v27)
  {
    v31 = _swiftEmptyArrayStorage;
    goto LABEL_32;
  }
  v29 = 0;
  v30 = v26 + 32;
  v31 = _swiftEmptyArrayStorage;
  do
  {
    if (v29 <= v27)
      v32 = v27;
    else
      v32 = v29;
    while (1)
    {
      if (v29 == v32)
        goto LABEL_46;
      v33 = *(unsigned __int8 *)(v30 + v29++);
      v34 = *(_QWORD *)&v2[v28];
      if (!v34)
        break;
      v35 = *(_QWORD *)(v34 + 16);
      if (!v35)
        goto LABEL_10;
      if (*(unsigned __int8 *)(v34 + 32) == v33)
        break;
      if (v35 != 1)
      {
        v36 = 33;
        while (1)
        {
          v37 = v36 - 31;
          if (__OFADD__(v36 - 32, 1))
            break;
          if (*(unsigned __int8 *)(v34 + v36) == v33)
            goto LABEL_21;
          ++v36;
          if (v37 == v35)
            goto LABEL_10;
        }
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
LABEL_10:
      if (v29 == v27)
        goto LABEL_32;
    }
LABEL_21:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
    v76 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_A9B08(0, v31[2] + 1, 1);
      v31 = v76;
    }
    v40 = v31[2];
    v39 = v31[3];
    if (v40 >= v39 >> 1)
    {
      sub_A9B08(v39 > 1, v40 + 1, 1);
      v31 = v76;
    }
    v31[2] = v40 + 1;
    *((_BYTE *)v31 + v40 + 32) = v33;
  }
  while (v29 != v27);
LABEL_32:
  swift_bridgeObjectRelease(v70);

  if ((v71 & 0x8000000000000000) != 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v43 = v67;
  v42 = v68;
  if (v71 >= v31[2])
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v44 = *((unsigned __int8 *)v31 + v71 + 32);
  v46 = swift_release(v31);
  if (v44 == 3)
  {
    (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v43, v42, v46);

    return;
  }
  v47 = IndexPath.item.getter(v45);
  v48 = v47 + 1;
  if (__OFADD__(v47, 1))
    goto LABEL_49;
  v49 = IndexPath.item.getter(v47);
  v50 = v49 + v48;
  if (__OFADD__(v49, v48))
  {
LABEL_50:
    __break(1u);
    return;
  }
  v51 = v74;
  v52 = objc_msgSend(v74, "items");
  v53 = objc_msgSend(v52, "totalItemCount");

  if (v50 >= (uint64_t)v53)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v42);

  }
  else
  {
    v54 = objc_msgSend(v51, "items");
    v55 = objc_msgSend(v54, "indexPathForGlobalIndex:", v50);

    if (v55)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v55);

      v57 = v64;
      v56 = (uint64_t)v65;
      v64(v65, (uint64_t)v16, v42);
      v73((char *)v56, 0, 1, v42);
      if (v72((char *)v56, 1, v42) != 1)
      {
        v58 = v63;
        v57(v63, v56, v42);
        v59 = v74;
        v60 = objc_msgSend(v74, "items");
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v60, "itemAtIndexPath:", isa);

        v62 = *(void (**)(char *, uint64_t))(v66 + 8);
        v62(v58, v42);
        v62(v43, v42);
        return;
      }
    }
    else
    {
      v56 = (uint64_t)v65;
      v73(v65, 1, 1, v42);
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v42);
    v41 = v56;
LABEL_29:
    sub_9944(v41, (uint64_t *)&unk_1FA950);
  }
}

void sub_67B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  char **v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  id v34;
  void *v35;
  char *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  char **v44;
  void *v45;
  char **v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  double v59;
  char **v60;
  Class isa;
  void *v62;
  id v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  void (*v71)(uint64_t, uint64_t, __n128);
  uint64_t v72;
  id v73;
  char **v74;
  uint64_t v75;
  char *v76;
  char *v77;
  id v78;
  char *v79;
  char *v80;
  id v81;
  _QWORD aBlock[5];
  uint64_t v83;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v72 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v72 - v11;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v77 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v80 = (char *)&v72 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v72 - v20;
  v75 = v22;
  __chkstk_darwin(v19);
  v24 = (char **)((char *)&v72 - v23);
  v25 = objc_msgSend((id)a2, "destinationIndexPath");
  v81 = (id)a2;
  v76 = v21;
  if (v25)
  {
    v26 = v25;
    v79 = v7;
    v27 = v10;
    v28 = a1;
    v29 = v24;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v25);

    v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v30(v12, v21, v13);
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v31(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v30((char *)v29, v12, v13);
      v24 = v29;
      a1 = v28;
      v10 = v27;
      v7 = v79;
      v32 = v31;
      a2 = (uint64_t)v81;
      goto LABEL_8;
    }
    v24 = v29;
    a1 = v28;
    v10 = v27;
    v7 = v79;
    v32 = v31;
    a2 = (uint64_t)v81;
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v32(v12, 1, 1, v13);
  }
  sub_9944((uint64_t)v12, (uint64_t *)&unk_1FA950);
  v33 = (char *)objc_msgSend((id)a1, "numberOfSections");
  if (__OFSUB__(v33, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  IndexPath.init(row:section:)(objc_msgSend((id)a1, "numberOfItemsInSection:", v33 - 1), v33 - 1);
LABEL_8:
  v34 = objc_msgSend((id)a2, "proposal");
  v35 = (void *)a2;
  v36 = (char *)objc_msgSend(v34, "operation");

  if (v36 != (_BYTE *)&dword_0 + 3)
  {
    (*(void (**)(char **, uint64_t))(v14 + 8))(v24, v13);
    return;
  }
  v74 = v24;
  v24 = &selRef_boundingRectWithSize_options_attributes_context_;
  v37 = objc_msgSend(v35, "items");
  v12 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD920);
  a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v12);

  if ((unint64_t)a2 >> 62)
  {
LABEL_27:
    if (a2 < 0)
      v65 = a2;
    else
      v65 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v66 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(a2);
    if (v66)
      goto LABEL_11;
LABEL_31:
    v67 = swift_bridgeObjectRelease(a2);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v32)(v10, 1, 1, v13, v67);
    goto LABEL_32;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_31;
LABEL_11:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_36;
    }
    v38 = *(void **)(a2 + 32);
    swift_unknownObjectRetain(v38);
  }
  v39 = objc_msgSend(v38, "sourceIndexPath", swift_bridgeObjectRelease(a2).n128_f64[0]);
  swift_unknownObjectRelease(v38);
  if (v39)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v39);

    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  v41 = v81;
  v32(v7, v40, 1, v13);
  sub_982C((uint64_t)v7, (uint64_t)v10, (uint64_t *)&unk_1FA950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
  {
    v79 = (char *)a1;
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 32);
    ((void (*)(char *, char *, uint64_t))v32)(v80, v10, v13);
    v42 = objc_msgSend(v41, v24[310]);
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v12);

    if (!((unint64_t)a1 >> 62))
    {
      v43 = (uint64_t)v80;
      if (*(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_21;
      goto LABEL_40;
    }
LABEL_36:
    if (a1 < 0)
      v68 = a1;
    else
      v68 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v69 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease(a1);
    v43 = (uint64_t)v80;
    if (v69)
    {
LABEL_21:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        v44 = v74;
      }
      else
      {
        v44 = v74;
        if (!*(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8)))
        {
LABEL_43:
          __break(1u);
          return;
        }
        v45 = *(void **)(a1 + 32);
        swift_unknownObjectRetain(v45);
      }
      v73 = objc_msgSend(v45, "dragItem", swift_bridgeObjectRelease(a1).n128_f64[0]);
      swift_unknownObjectRelease(v45);
      v46 = v44;
      sub_6E670(v43);
      v78 = (id)objc_opt_self(UIView);
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v48 = v76;
      v47(v76, v43, v13);
      v49 = v77;
      v47(v77, (uint64_t)v46, v13);
      v50 = *(unsigned __int8 *)(v14 + 80);
      v51 = (v50 + 24) & ~v50;
      v52 = (v75 + v50 + v51) & ~v50;
      v53 = swift_allocObject(&unk_1CB6C0, v52 + v75, v50 | 7);
      v54 = v79;
      *(_QWORD *)(v53 + 16) = v79;
      ((void (*)(uint64_t, char *, uint64_t))v32)(v53 + v51, v48, v13);
      ((void (*)(uint64_t, char *, uint64_t))v32)(v53 + v52, v49, v13);
      v55 = swift_allocObject(&unk_1CB6E8, 32, 7);
      *(_QWORD *)(v55 + 16) = sub_72090;
      *(_QWORD *)(v55 + 24) = v53;
      aBlock[4] = sub_61110;
      v83 = v55;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F318;
      aBlock[3] = &block_descriptor_163;
      v56 = _Block_copy(aBlock);
      v57 = v83;
      v58 = v54;
      swift_retain();
      *(_QWORD *)&v59 = swift_release(v57).n128_u64[0];
      objc_msgSend(v78, "performWithoutAnimation:", v56, v59);
      _Block_release(v56);
      LOBYTE(v49) = swift_isEscapingClosureAtFileLocation(v55, "", 119, 686, 44, 1);
      swift_release(v55);
      if ((v49 & 1) == 0)
      {
        v60 = v74;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v62 = v73;
        v63 = objc_msgSend(v81, "dropItem:toItemAtIndexPath:", v73, isa);

        swift_unknownObjectRelease(v63);
        v64 = *(void (**)(char *, uint64_t))(v14 + 8);
        v64(v80, v13);
        v64((char *)v60, v13);
        swift_release(v53);
        return;
      }
      __break(1u);
      goto LABEL_43;
    }
LABEL_40:
    v70 = swift_bridgeObjectRelease(a1);
    v71 = *(void (**)(uint64_t, uint64_t, __n128))(v14 + 8);
    v71(v43, v13, v70);
    ((void (*)(char **, uint64_t))v71)(v74, v13);
    return;
  }
LABEL_32:
  (*(void (**)(char **, uint64_t))(v14 + 8))(v74, v13);
  sub_9944((uint64_t)v10, (uint64_t *)&unk_1FA950);
}

void sub_682DC(void *a1)
{
  Class isa;
  Class v3;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "moveItemAtIndexPath:toIndexPath:", isa, v3);

}

void sub_68594(char *a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;

  v3 = v2;
  v6 = objc_msgSend(a2, "title");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0xE000000000000000;
  }
  v11 = objc_msgSend(a2, "isExplicitEpisode", sub_148A34(v8, v10));
  sub_1494A4(v11);
  objc_msgSend(a2, "duration");
  sub_148FE0(v12);
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics);
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24);
  v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 104))(v14, v15);
  v17 = *(_WORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle];
  *(_WORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI8SongCell_layoutStyle] = v16;
  sub_1495E0(v17);
  v18 = objc_msgSend(a2, "author");
  v19 = v18;
  if (v18)
  {
    v20 = objc_msgSend(v18, "name");

    if (v20)
    {
      v19 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v22 = v21;

      goto LABEL_9;
    }
    v19 = 0;
  }
  v22 = 0xE000000000000000;
LABEL_9:
  v23 = objc_msgSend(a2, "podcast", sub_148BE4((uint64_t)v19, v22));
  v24 = v23;
  if (v23)
  {
    v25 = objc_msgSend(v23, "title");

    if (v25)
    {
      v24 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v27 = v26;

      goto LABEL_14;
    }
    v24 = 0;
  }
  v27 = 0xE000000000000000;
LABEL_14:
  v28 = objc_msgSend(a1, "tableViewCell", sub_148DF4((uint64_t)v24, v27));
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, "setSeparatorStyle:", 1);

    v30 = objc_msgSend(a2, "artworkCatalog");
    v31 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog;
    v32 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog];
    *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog] = v30;
    v33 = v30;

    v34 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent];
    v35 = *(void **)&a1[v31];
    v36 = *(void **)(v34 + 80);
    *(_QWORD *)(v34 + 80) = v35;
    v37 = v35;
    sub_FFC90(v36);

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_689B0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;

  if ((static Podcasts.isBlueMoonEnabled()(a1) & 1) != 0)
  {
    v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController), "response");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "tracklist");

      v5 = sub_B61B8();
      if (v5)
      {
        v6 = objc_msgSend(v5, "metadataObject");
        if (v6
          && (v7 = v6,
              v8 = objc_msgSend(v6, "flattenedGenericObject"),
              v9 = objc_msgSend(v8, "anyObject"),
              v7,
              v8,
              v9))
        {
          v10 = objc_opt_self(MPModelPodcastEpisode);
          v11 = (void *)swift_dynamicCastObjCClass(v9, v10);

          if (!v11 || (v12 = objc_msgSend(v11, "chapters")) == 0)
          {
            v14 = _swiftEmptyArrayStorage;
            goto LABEL_14;
          }
          v5 = v12;
          v13 = sub_F174(0, (unint64_t *)&qword_203B50, MPModelPodcastChapter_ptr);
          v14 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v13);

        }
        else
        {
          v14 = _swiftEmptyArrayStorage;
        }
        v9 = v5;
LABEL_14:

        return v14;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void sub_68B2C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;

  v3 = v2;
  v26 = a1;
  v23 = type metadata accessor for CharacterSet(0);
  v22[3] = *(_QWORD *)(v23 - 8);
  v5 = __chkstk_darwin(v23);
  v22[2] = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a2;
  v24 = IndexPath.section.getter(v5);
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v8 = *(_QWORD *)(v7 + 16);
  v9 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v27 = v3;
  swift_bridgeObjectRetain(v7);
  if (!v8)
  {
    v11 = _swiftEmptyArrayStorage;
    goto LABEL_24;
  }
  v10 = 0;
  v11 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v10 <= v8)
      v12 = v8;
    else
      v12 = v10;
    while (1)
    {
      if (v10 == v12)
      {
        __break(1u);
        goto LABEL_29;
      }
      v13 = *(unsigned __int8 *)(v7 + 32 + v10++);
      v14 = *(_QWORD *)&v3[v9];
      if (!v14)
        goto LABEL_17;
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        if (*(unsigned __int8 *)(v14 + 32) == v13)
          goto LABEL_17;
        if (v15 != 1)
          break;
      }
LABEL_6:
      if (v10 == v8)
        goto LABEL_24;
    }
    v16 = 33;
    while (1)
    {
      v17 = v16 - 31;
      if (__OFADD__(v16 - 32, 1))
      {
        __break(1u);
        JUMPOUT(0x696E0);
      }
      if (*(unsigned __int8 *)(v14 + v16) == v13)
        break;
      ++v16;
      if (v17 == v15)
        goto LABEL_6;
    }
LABEL_17:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v28 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_A9B08(0, v11[2] + 1, 1);
      v11 = v28;
    }
    v20 = v11[2];
    v19 = v11[3];
    if (v20 >= v19 >> 1)
    {
      sub_A9B08(v19 > 1, v20 + 1, 1);
      v11 = v28;
    }
    v11[2] = v20 + 1;
    *((_BYTE *)v11 + v20 + 32) = v13;
    if (v10 == v8)
    {
LABEL_24:
      swift_bridgeObjectRelease(v7);

      if ((v24 & 0x8000000000000000) == 0)
      {
        if (v24 < v11[2])
        {
          v21 = *((unsigned __int8 *)v11 + v24 + 32);
          swift_release(v11);
          __asm { BR              X9 }
        }
LABEL_30:
        __break(1u);
        JUMPOUT(0x6A0A0);
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
}

void *sub_6A158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  double v24;
  void (*v25)(char *, uint64_t);
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  int v44;

  v1 = type metadata accessor for Date(0);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController), "response");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "tracklist");

    v7 = sub_B61B8();
    if (v7)
    {
      objc_msgSend(v7, "duration");
      v8 = v41;
      v9 = v42;
      v10 = v43;
      LODWORD(v11) = v44;

      v13 = (unint64_t)sub_689B0(v12);
      v14 = v13;
      if (v13 >> 62)
        goto LABEL_25;
      v15 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v13);
      for (; v15; v15 = _CocoaArrayWrapper.endIndex.getter(v36))
      {
        v39 = v14 & 0xC000000000000001;
        v16 = *(float *)&v11;
        v17 = 4;
        while (1)
        {
          v18 = v39
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v14)
              : *(id *)(v14 + 8 * v17);
          v19 = v18;
          v20 = v17 - 3;
          if (__OFADD__(v17 - 4, 1))
            break;
          v21 = objc_msgSend(v18, "startTime");
          v11 = v22;
          v23 = Date.init()(v21);
          v24 = Date.timeIntervalSinceReferenceDate.getter(v23);
          v25 = *(void (**)(char *, uint64_t))(v40 + 8);
          v25(v3, v1);
          v26 = v10 + (v24 - v8) * v16;
          if (v26 >= v9)
            v26 = v9;
          if (v26 <= 0.0)
            v27 = 0.0;
          else
            v27 = v26 * 1000.0;
          if (v11 <= round(v27) / 1000.0)
          {
            objc_msgSend(v19, "startTime");
            v29 = v28;
            v30 = objc_msgSend(v19, "duration");
            v32 = v29 + v31;
            v33 = Date.init()(v30);
            v11 = Date.timeIntervalSinceReferenceDate.getter(v33);
            v25(v3, v1);
            v34 = v10 + (v11 - v8) * v16;
            if (v34 >= v9)
              v34 = v9;
            v35 = v34 <= 0.0 ? 0.0 : v34 * 1000.0;
            if (round(v35) / 1000.0 < v32)
            {
              swift_bridgeObjectRelease_n(v14, 2);
              return v19;
            }
          }

          ++v17;
          if (v20 == v15)
            goto LABEL_29;
        }
        __break(1u);
LABEL_25:
        if (v14 < 0)
          v36 = v14;
        else
          v36 = v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v14);
      }
LABEL_29:
      swift_bridgeObjectRelease_n(v14, 2);
    }
  }
  return 0;
}

void sub_6A5B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;

  v5 = v4;
  v9 = IndexPath.section.getter(a1);
  v10 = IndexPath.section.getter(v9);
  if (v9 != v10)
  {
    v24 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a4, a2, v24);
    return;
  }
  v46 = a2;
  v48 = a3;
  v49 = a4;
  v50 = IndexPath.section.getter(v10);
  v47 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections;
  v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v12 = *(_QWORD *)(v11 + 16);
  v13 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v14 = v5;
  swift_bridgeObjectRetain(v11);
  if (!v12)
    goto LABEL_25;
  v15 = 0;
  do
  {
    if (v15 <= v12)
      v16 = v12;
    else
      v16 = v15;
    while (1)
    {
      if (v15 == v16)
        goto LABEL_59;
      v17 = *(unsigned __int8 *)(v11 + 32 + v15++);
      v18 = *(_QWORD *)&v5[v13];
      if (!v18)
        break;
      v19 = *(_QWORD *)(v18 + 16);
      if (!v19)
        goto LABEL_7;
      if (*(unsigned __int8 *)(v18 + 32) == v17)
        break;
      if (v19 != 1)
      {
        v20 = 33;
        while (1)
        {
          v21 = v20 - 31;
          if (__OFADD__(v20 - 32, 1))
            break;
          if (*(unsigned __int8 *)(v18 + v20) == v17)
            goto LABEL_18;
          ++v20;
          if (v21 == v19)
            goto LABEL_7;
        }
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
LABEL_7:
      if (v15 == v12)
        goto LABEL_25;
    }
LABEL_18:
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v23 = _swiftEmptyArrayStorage[2];
    v22 = _swiftEmptyArrayStorage[3];
    if (v23 >= v22 >> 1)
      sub_A9B08(v22 > 1, v23 + 1, 1);
    _swiftEmptyArrayStorage[2] = v23 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v23) = v17;
  }
  while (v15 != v12);
LABEL_25:
  swift_bridgeObjectRelease(v11);

  if ((v50 & 0x8000000000000000) != 0)
    goto LABEL_61;
  if (v50 >= _swiftEmptyArrayStorage[2])
  {
LABEL_62:
    __break(1u);
  }
  else
  {
    v25 = *((unsigned __int8 *)&_swiftEmptyArrayStorage[4] + v50);
    swift_release(_swiftEmptyArrayStorage);
    if (v25 >= 4)
    {
      v38 = sub_6F898(v48);
      v39 = type metadata accessor for IndexPath(0);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      if ((v38 & 1) == 0)
        goto LABEL_55;
      v41 = v49;
      v42 = v48;
    }
    else
    {
      v26 = *(_QWORD *)&v5[v47];
      v27 = *(_QWORD *)(v26 + 16);
      v28 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
      v51 = v14;
      swift_bridgeObjectRetain(v26);
      if (v27)
      {
        v29 = 0;
LABEL_30:
        if (v29 <= v27)
          v30 = v27;
        else
          v30 = v29;
        while (v29 != v30)
        {
          v31 = *(unsigned __int8 *)(v26 + 32 + v29++);
          v32 = *(_QWORD *)&v14[v28];
          if (!v32)
            goto LABEL_44;
          v33 = *(_QWORD *)(v32 + 16);
          if (v33)
          {
            if (*(unsigned __int8 *)(v32 + 32) == v31)
            {
LABEL_44:
              if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
                sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
              v37 = _swiftEmptyArrayStorage[2];
              v36 = _swiftEmptyArrayStorage[3];
              if (v37 >= v36 >> 1)
                sub_A9B08(v36 > 1, v37 + 1, 1);
              _swiftEmptyArrayStorage[2] = v37 + 1;
              *((_BYTE *)&_swiftEmptyArrayStorage[4] + v37) = v31;
              if (v29 != v27)
                goto LABEL_30;
              goto LABEL_52;
            }
            if (v33 != 1)
            {
              v34 = 33;
              do
              {
                v35 = v34 - 31;
                if (__OFADD__(v34 - 32, 1))
                  goto LABEL_58;
                if (*(unsigned __int8 *)(v32 + v34) == v31)
                  goto LABEL_44;
                ++v34;
              }
              while (v35 != v33);
            }
          }
          if (v29 == v27)
            goto LABEL_52;
        }
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
LABEL_52:
      swift_bridgeObjectRelease(v26);

      v43 = sub_ADAA0(4u, (uint64_t)_swiftEmptyArrayStorage);
      v45 = v44;
      swift_release(_swiftEmptyArrayStorage);
      if ((v45 & 1) == 0)
      {
        IndexPath.init(item:section:)(0, v43);
        return;
      }
      v39 = type metadata accessor for IndexPath(0);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
LABEL_55:
      v41 = v49;
      v42 = v46;
    }
    v40(v41, v42, v39);
  }
}

void sub_6AC84(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;

  v2 = IndexPath.count.getter(a1);
  if (v2 == 2)
  {
    v3 = IndexPath.section.getter(2);
  }
  else if (v2 <= 0)
  {
    v3 = NSNotFound.getter();
  }
  else
  {
    v3 = IndexPath.subscript.getter(0);
  }
  v17 = v3;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v5 = *(_QWORD *)(v4 + 16);
  v6 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v18 = v1;
  swift_bridgeObjectRetain(v4);
  if (!v5)
    goto LABEL_27;
  v7 = 0;
  while (1)
  {
    if (v7 <= v5)
      v8 = v5;
    else
      v8 = v7;
    while (1)
    {
      if (v7 == v8)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = *(unsigned __int8 *)(v4 + 32 + v7++);
      v10 = *(_QWORD *)&v1[v6];
      if (!v10)
        goto LABEL_22;
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        if (*(unsigned __int8 *)(v10 + 32) == v9)
          goto LABEL_22;
        if (v11 != 1)
          break;
      }
LABEL_11:
      if (v7 == v5)
        goto LABEL_27;
    }
    v12 = 33;
    while (1)
    {
      v13 = v12 - 31;
      if (__OFADD__(v12 - 32, 1))
      {
        __break(1u);
        JUMPOUT(0x6B1FCLL);
      }
      if (*(unsigned __int8 *)(v10 + v12) == v9)
        break;
      ++v12;
      if (v13 == v11)
        goto LABEL_11;
    }
LABEL_22:
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v15 = _swiftEmptyArrayStorage[2];
    v14 = _swiftEmptyArrayStorage[3];
    if (v15 >= v14 >> 1)
      sub_A9B08(v14 > 1, v15 + 1, 1);
    _swiftEmptyArrayStorage[2] = v15 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v15) = v9;
    if (v7 == v5)
    {
LABEL_27:
      swift_bridgeObjectRelease(v4);

      if ((v17 & 0x8000000000000000) == 0)
      {
        if (v17 < _swiftEmptyArrayStorage[2])
        {
          v16 = *((unsigned __int8 *)&_swiftEmptyArrayStorage[4] + v17);
          swift_release(_swiftEmptyArrayStorage);
          __asm { BR              X9 }
        }
LABEL_33:
        __break(1u);
        JUMPOUT(0x6B210);
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
}

void sub_6B310(void *a1, uint64_t a2)
{
  char *v2;
  _BYTE *v3;
  char *v4;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  double v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void (*v40)(uint64_t);
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  uint64_t v52;
  void *v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  id v58;
  Class v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  double v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  char *v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;
  char v85[24];
  _QWORD aBlock[3];
  void *v87;
  void (*v88)(uint64_t);
  uint64_t v89;

  v4 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

  v78 = a2;
  v79 = IndexPath.section.getter(v8);
  v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v10 = *(char **)(v9 + 16);
  v11 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v81 = v4;
  swift_bridgeObjectRetain(v9);
  v12 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v13 = 0;
    while (2)
    {
      if (v13 <= v10)
        v14 = v10;
      else
        v14 = v13;
      while (1)
      {
        if (v13 == v14)
        {
          __break(1u);
          goto LABEL_70;
        }
        v15 = (v13++)[v9 + 32];
        v16 = *(_QWORD *)&v4[v11];
        if (!v16)
          break;
        v17 = *(_QWORD *)(v16 + 16);
        if (v17)
        {
          if (*(unsigned __int8 *)(v16 + 32) == v15)
            break;
          if (v17 != 1)
          {
            v18 = 33;
            while (1)
            {
              v19 = v18 - 31;
              if (__OFADD__(v18 - 32, 1))
                break;
              if (*(unsigned __int8 *)(v16 + v18) == v15)
                goto LABEL_17;
              ++v18;
              if (v19 == v17)
                goto LABEL_6;
            }
            __break(1u);
            goto LABEL_57;
          }
        }
LABEL_6:
        if (v13 == v10)
          goto LABEL_22;
      }
LABEL_17:
      aBlock[0] = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      {
        sub_A9B08(0, v12[2] + 1, 1);
        v12 = (_QWORD *)aBlock[0];
      }
      v3 = (_BYTE *)v12[2];
      v20 = v12[3];
      if ((unint64_t)v3 >= v20 >> 1)
      {
        sub_A9B08(v20 > 1, (int64_t)(v3 + 1), 1);
        v12 = (_QWORD *)aBlock[0];
      }
      v12[2] = v3 + 1;
      v3[(_QWORD)v12 + 32] = v15;
      if (v13 != v10)
        continue;
      break;
    }
  }
LABEL_22:
  swift_bridgeObjectRelease(v9);
  v10 = v81;

  if ((v79 & 0x8000000000000000) != 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v79 >= v12[2])
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v21 = *((unsigned __int8 *)v12 + v79 + 32);
  *(_QWORD *)&v22 = swift_release(v12).n128_u64[0];
  if (v21 == 3)
  {
    v28 = objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController], "response", v22);
    if (!v28)
      return;
    v29 = v28;
    v30 = objc_msgSend(v28, "tracklist");

    v3 = sub_B61B8();
    if (!v3)
      return;
    v32 = static Podcasts.isBlueMoonEnabled()(v31);
    if ((v32 & 1) == 0)
    {
      v36 = (uint64_t)&v81[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController];
      swift_beginAccess(&v81[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController], v85, 0, 0);
      sub_DF78(v36, (uint64_t)v82);
      v37 = v83;
      v38 = v84;
      __swift_project_boxed_opaque_existential_1(v82, v83);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v38 + 16))(aBlock, v78, v37, v38);
      __swift_destroy_boxed_opaque_existential_0(v82);
      v39 = v87;
      v40 = v88;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v87);
      v41 = (*((double (**)(void *, void (*)(uint64_t)))v40 + 2))(v39, v40);
      __swift_destroy_boxed_opaque_existential_0(aBlock);
LABEL_63:
      v74 = objc_msgSend(v3, "seekCommand", v78);
      if (v74)
      {
        v75 = v74;
        v76 = objc_msgSend(v74, "changePositionToElapsedInterval:", v41);
        swift_unknownObjectRelease(v75);
      }
      else
      {
        v76 = 0;
      }
      objc_msgSend((id)objc_opt_self(MPCPlayerChangeRequest), "performRequest:completion:", v76, 0);

      goto LABEL_67;
    }
    v4 = (char *)IndexPath.row.getter(v32);
    v33 = static Podcasts.isBlueMoonEnabled()(v4);
    if ((v33 & 1) == 0)
    {
LABEL_57:
      v65 = (uint64_t)&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController];
      swift_beginAccess(&v10[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController], v82, 0, 0);
      sub_DF78(v65, (uint64_t)aBlock);
      v67 = v87;
      v66 = v88;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v87);
      v68 = (*(uint64_t (**)(void *))(*((_QWORD *)v66 + 1) + 40))(v67);
      v35 = __swift_destroy_boxed_opaque_existential_0(aBlock);
      if ((uint64_t)v4 >= v68)
      {
LABEL_67:

        return;
      }
LABEL_58:
      v69 = (unint64_t)sub_689B0(v35);
      v70 = IndexPath.row.getter(v69);
      if ((v69 & 0xC000000000000001) == 0)
      {
        if ((v70 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v70 < *(_QWORD *)((char *)&dword_10 + (v69 & 0xFFFFFFFFFFFFF8)))
        {
          v71 = *(id *)(v69 + 8 * v70 + 32);
LABEL_62:
          v72 = v71;
          objc_msgSend(v71, "startTime", swift_bridgeObjectRelease(v69).n128_f64[0]);
          v41 = v73;

          goto LABEL_63;
        }
        __break(1u);
        return;
      }
      v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v69);
      goto LABEL_62;
    }
    v9 = (uint64_t)sub_689B0(v33);
    if (!((unint64_t)v9 >> 62))
    {
      v34 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
      goto LABEL_36;
    }
LABEL_72:
    if (v9 < 0)
      v77 = v9;
    else
      v77 = v9 & 0xFFFFFFFFFFFFFF8;
    v34 = _CocoaArrayWrapper.endIndex.getter(v77);
LABEL_36:
    swift_bridgeObjectRelease(v9);
    if ((uint64_t)v4 >= v34)
      goto LABEL_67;
    goto LABEL_58;
  }
  if (v21 == 5)
  {
    v80 = objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController], "response", v22);
    if (v80)
    {
      sub_674A4(v78);
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend(v80, "tracklist");
        v26 = objc_msgSend(v25, "changeItemCommand");

        if (v26)
        {
          v27 = objc_msgSend(v26, "changeToItem:", v24);
          swift_unknownObjectRelease(v26);
        }
        else
        {
          v27 = 0;
        }
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD8A0);
        v43 = swift_allocObject(v42, 40, 7);
        *(_OWORD *)(v43 + 16) = xmmword_16B3D0;
        *(_QWORD *)(v43 + 32) = v27;
        aBlock[0] = v43;
        specialized Array._endMutation()(v43);
        v44 = aBlock[0];
        v82[0] = aBlock[0];
        v45 = v27;
        if ((static Podcasts.isBlueMoonEnabled()(v45) & 1) != 0 && objc_msgSend(v80, "state") != (char *)&dword_0 + 2)
        {
          v46 = objc_msgSend(v80, "play");
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
          v48 = *(_QWORD *)(v82[0] + 16);
          v47 = *(_QWORD *)(v82[0] + 24);
          if (v48 >= v47 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
          v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
          specialized Array._endMutation()(v49);
          v44 = v82[0];
        }
        aBlock[0] = _swiftEmptyArrayStorage;
        v50 = *(_QWORD *)(v44 + 16);
        if (v50)
        {
          swift_bridgeObjectRetain_n(v44, 2);
          for (i = 0; i != v50; ++i)
          {
            v53 = *(void **)(v44 + 8 * i + 32);
            if (v53)
            {
              v54 = v53;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
              v56 = *(_QWORD *)((char *)&dword_10 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
              v55 = *(_QWORD *)((char *)&dword_18 + (aBlock[0] & 0xFFFFFFFFFFFFFF8));
              if (v56 >= v55 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
              v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
              specialized Array._endMutation()(v52);
            }
          }
          swift_bridgeObjectRelease(v44);
          v57 = (_QWORD *)aBlock[0];
        }
        else
        {
          swift_bridgeObjectRetain(v44);
          v57 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v44);
        swift_bridgeObjectRelease(v44);
        v58 = objc_allocWithZone((Class)MPCPlayerChangeRequest);
        sub_F174(0, &qword_1FD8A8, MPCPlayerCommandRequest_ptr);
        v59 = Array._bridgeToObjectiveC()().super.isa;
        v60 = objc_msgSend(v58, "initWithCommandRequests:", v59, swift_bridgeObjectRelease(v57).n128_f64[0]);

        v61 = swift_allocObject(&unk_1CB620, 24, 7);
        *(_QWORD *)(v61 + 16) = v81;
        v88 = sub_71FC4;
        v89 = v61;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_6BDB4;
        v87 = &block_descriptor_147;
        v62 = _Block_copy(aBlock);
        v63 = v89;
        v64 = v81;
        objc_msgSend(v60, "performWithCompletion:", v62, swift_release(v63).n128_f64[0]);

        _Block_release(v62);
      }
      else
      {

      }
    }
  }
}

void sub_6BB0C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v12 = swift_allocObject(&unk_1CB670, 24, 7);
    *(_QWORD *)(v12 + 16) = a2;
    v13 = (void *)objc_opt_self(NSThread);
    v14 = a2;
    if (objc_msgSend(v13, "isMainThread"))
    {
      v15 = *(void **)&v14[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
      if (v15)
      {
        objc_msgSend(v15, "setContentOffset:animated:", 1, 0.0, 0.0);

        swift_release(v12);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
      v27 = v14;
      v26 = static OS_dispatch_queue.main.getter(v16);
      aBlock[4] = sub_71FCC;
      v29 = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F528;
      aBlock[3] = &block_descriptor_153;
      v25 = _Block_copy(aBlock);
      v17 = v29;
      swift_retain();
      swift_release(v17);
      static DispatchQoS.unspecified.getter(v18);
      aBlock[0] = _swiftEmptyArrayStorage;
      v19 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
      v21 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
      v23 = v25;
      v22 = (void *)v26;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v25);
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

      swift_release(v12);
    }
  }
}

void sub_6BDB4(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

_BYTE *sub_6BEB8(char *a1)
{
  _BYTE *v2;
  uint64_t v3;
  _BYTE *result;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TitleSectionHeaderView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_forSizing] = 1;
  objc_msgSend(v2, "setHidden:", 1);
  objc_msgSend(v2, "setUserInteractionEnabled:", 0);
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache];
  *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache] = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_textDrawingCache];
  swift_retain();
  result = objc_msgSend(a1, "view", swift_release(v3).n128_f64[0]);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "addSubview:", v2);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_6C174(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(id, id);
  id v7;
  id v8;

  v6 = *(void (**)(id, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(v8, v7);
  swift_release(v5);

}

id sub_6C2E8()
{
  _QWORD *v0;
  id result;

  result = *(id *)(*v0 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (result)
    return objc_msgSend(result, "reloadData");
  __break(1u);
  return result;
}

void sub_6C30C(char *a1, void (*a2)(uint64_t), uint64_t a3, void *a4)
{
  char *v4;
  _QWORD *v9;
  uint64_t v10;
  char **v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  id v22;
  char *v23;
  id v24;
  char *v25;
  char *v26;
  _BYTE v27[24];

  v4 = *(char **)&a1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (v4)
  {
    v9 = (_QWORD *)swift_allocObject(&unk_1CB440, 48, 7);
    v9[2] = a2;
    v9[3] = a3;
    v9[4] = a4;
    v9[5] = a1;
    if (v4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_hasInteractiveMovement] == 1)
    {
      v10 = swift_allocObject(&unk_1CB468, 32, 7);
      *(_QWORD *)(v10 + 16) = sub_72248;
      *(_QWORD *)(v10 + 24) = v9;
      v11 = (char **)&v4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers];
      swift_beginAccess(&v4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers], v27, 33, 0);
      v12 = *v11;
      swift_retain_n(a3, 2);
      v13 = a4;
      v14 = a1;
      v15 = v13;
      v16 = v14;
      v17 = v4;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      *v11 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_1344D4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        *v11 = v12;
      }
      v20 = *((_QWORD *)v12 + 2);
      v19 = *((_QWORD *)v12 + 3);
      if (v20 >= v19 >> 1)
      {
        v12 = sub_1344D4((char *)(v19 > 1), v20 + 1, 1, v12);
        *v11 = v12;
      }
      *((_QWORD *)v12 + 2) = v20 + 1;
      v21 = &v12[16 * v20];
      *((_QWORD *)v21 + 4) = sub_72310;
      *((_QWORD *)v21 + 5) = v10;
      swift_endAccess(v27);
    }
    else
    {
      swift_retain_n(a3, 2);
      v22 = a4;
      v23 = a1;
      v24 = v22;
      v25 = v23;
      v26 = v4;
      sub_6C508(a2, a3, v24, v25);
    }
    swift_release(a3);
    swift_release(v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_6C508(void (*a1)(uint64_t), uint64_t a2, id a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  unsigned __int8 v20;
  void *v21;
  id v22;
  unsigned __int8 v23;
  void *v24;
  void *v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  id v33;
  unsigned __int8 v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  char v39;
  void *v40;
  id v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  void *v53;
  id v54;
  char *v55;
  char *v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  unsigned int v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  void *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char v85;
  uint64_t v86;
  void *v87;
  unint64_t v88;
  unint64_t v89;
  unsigned int v90;
  unint64_t v91;
  unint64_t v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  id v99;
  unint64_t v100;
  unint64_t v101;
  id v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[3];
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118[24];
  char v119[24];
  char v120[32];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD868);
  v8 = __chkstk_darwin(v7);
  v112 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v108 - v11;
  v13 = __chkstk_darwin(v10);
  v113 = (uint64_t)&v108 - v14;
  a1(v13);
  v15 = objc_msgSend(a3, "response");
  if (!v15)
  {
    v18 = 0;
    v21 = 0;
    v24 = 0;
    goto LABEL_10;
  }
  v16 = v15;
  v17 = objc_opt_self(MPCPlayerResponse);
  v18 = (void *)swift_dynamicCastObjCClass(v16, v17);
  if (!v18)
  {
    v21 = 0;
LABEL_9:
    v24 = v18;
    swift_unknownObjectRelease(v16);
    v18 = 0;
    goto LABEL_10;
  }
  v19 = objc_msgSend(v18, "playerPath", swift_unknownObjectRetain(v16).n128_f64[0]);
  v20 = objc_msgSend(v19, "isSystemPodcastsPath");

  v21 = v18;
  if ((v20 & 1) == 0)
  {
    swift_unknownObjectRelease(v16);
    v21 = 0;
  }
  swift_unknownObjectRetain_n(v16, 2);
  v22 = objc_msgSend(v18, "playerPath");
  v23 = objc_msgSend(v22, "isSystemPodcastsPath");
  swift_unknownObjectRelease(v16);

  v24 = v18;
  if ((v23 & 1) == 0)
    goto LABEL_9;
LABEL_10:
  v25 = *(void **)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__systemPodcastsResponse];
  *(_QWORD *)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__systemPodcastsResponse] = v18;

  v26 = *(char **)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController];
  if (!v26)
    goto LABEL_38;
  v27 = v26;
  if (v24)
    v28 = objc_msgSend(v24, "playerPath");
  else
    v28 = 0;
  v29 = type metadata accessor for NowPlayingMetadataPlaceholder();
  swift_allocObject(v29, 40, 7);
  v30 = sub_1092B8(v28);
  v31 = *(_QWORD *)&v26[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder];
  *(_QWORD *)&v26[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder] = v30;
  swift_release(v31);
  if (!v24)
    goto LABEL_17;
  v32 = v24;
  v33 = objc_msgSend(v32, "playerPath");
  v34 = objc_msgSend(v33, "isSystemPodcastsPath");

  v35 = v24;
  if ((v34 & 1) == 0)
  {

LABEL_17:
    v35 = 0;
  }
  v36 = *(void **)&v26[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse];
  *(_QWORD *)&v26[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse] = v35;
  v37 = v35;

  sub_1218A8();
  v39 = static Podcasts.isBlueMoonEnabled()(v38);
  v40 = *(void **)&v26[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
  if ((v39 & 1) != 0)
  {
    if (v40)
    {
      v41 = a3;
      v42 = v40;
      v43 = objc_msgSend(v21, "videoOutput");
      v44 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput;
      v45 = *(_QWORD *)&v42[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput];
      *(_QWORD *)&v42[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = v43;
      swift_unknownObjectRetain(v43);
      swift_unknownObjectRelease(v45);
      v46 = *(id *)&v42[v44];
      if (v46)
        v46 = objc_msgSend(v46, "playerViewController");
      sub_F5B84(v46);

      swift_unknownObjectRelease(v43);
      a3 = v41;
    }
  }
  else if (v40)
  {
    if (v21)
    {
      v47 = qword_1F96B8;
      v48 = v40;
      v111 = v21;
      if (v47 != -1)
        swift_once(&qword_1F96B8, sub_15D030);
      v49 = a3;
      swift_beginAccess(&static NowPlayingDataProvider.shared, v118, 0, 0);
      sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v114, (uint64_t *)&unk_1FC7F0);
      v50 = v114[0];
      if (!v114[0])
        goto LABEL_91;
      v51 = v114[1];
      swift_unknownObjectRetain(v114[0]);
      sub_4AE24((uint64_t)v114);
      ObjectType = swift_getObjectType(v50);
      v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 248))(ObjectType, v51);

      swift_unknownObjectRelease(v50);
    }
    else
    {
      v49 = a3;
      v54 = v40;
      v53 = 0;
    }
    sub_F5B84(v53);

    a3 = v49;
  }
  if (a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_ownsArtworkView] == 1)
  {
    v55 = *(char **)&v26[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
    if (v55)
    {
      v56 = v55;
      if (v21)
        v57 = objc_msgSend(v21, "playerPath");
      else
        v57 = 0;
      sub_F5C70(v57);

      v26 = v55;
    }
  }

LABEL_38:
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD870);
  v59 = (_QWORD *)swift_allocObject(v58, 33, 7);
  *((_OWORD *)v59 + 1) = xmmword_16B3D0;
  *((_BYTE *)v59 + 32) = 0;
  if (!v21
    || (v60 = objc_msgSend(v21, "tracklist"),
        v61 = sub_B61B8(),
        v60,
        !v61))
  {

    goto LABEL_81;
  }
  v63 = static Podcasts.isBlueMoonEnabled()(v62);
  if ((v63 & 1) != 0)
  {
    v64 = (uint64_t)sub_689B0(v63);
    v65 = v64;
    if ((unint64_t)v64 >> 62)
    {
      if (v64 >= 0)
        v64 &= 0xFFFFFFFFFFFFFF8uLL;
      v109 = _CocoaArrayWrapper.endIndex.getter(v64);
    }
    else
    {
      v109 = *(_QWORD *)((char *)&dword_10 + (v64 & 0xFFFFFFFFFFFFF8));
    }
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v65).n128_u64[0];
  }
  else
  {
    v67 = (uint64_t)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController];
    swift_beginAccess(&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController], v120, 0, 0);
    sub_DF78(v67, (uint64_t)v114);
    v68 = v115;
    v69 = v116;
    __swift_project_boxed_opaque_existential_1(v114, v115);
    v109 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v69 + 8) + 40))(v68);
    __swift_destroy_boxed_opaque_existential_0(v114);
  }
  v70 = objc_msgSend(v21, "playerPath", v66);
  v71 = objc_msgSend(v70, "route");

  v110 = v61;
  if (v71)
  {
    v72 = objc_msgSend(v71, "isDeviceRoute");

  }
  else
  {
    v72 = 0;
  }
  v111 = a3;
  if (v24)
  {
    v73 = v24;
    sub_63DE8(v73);

  }
  v74 = &a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail];
  swift_beginAccess(&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail], v119, 0, 0);
  v75 = (uint64_t)v74;
  v76 = v113;
  sub_2808C(v75, v113, &qword_1FD868);
  sub_2808C(v76, (uint64_t)v12, &qword_1FD868);
  v77 = type metadata accessor for EpisodeTextInfoDetail(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  if (v79(v12, 1, v77) == 1)
  {
    sub_9944((uint64_t)v12, &qword_1FD868);
  }
  else
  {
    v80 = (void *)EpisodeTextInfoDetail.notes.getter();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v12, v77);

    if (v80)
    {
      v82 = v59[2];
      v81 = v59[3];
      a3 = v111;
      if (v82 >= v81 >> 1)
        v59 = sub_13535C((_QWORD *)(v81 > 1), v82 + 1, 1, v59);
      v83 = v109;
      v59[2] = v82 + 1;
      v84 = (char *)v59 + v82;
      v85 = 2;
      goto LABEL_63;
    }
  }
  v86 = v112;
  sub_2808C(v113, v112, &qword_1FD868);
  if (v79((char *)v86, 1, v77) != 1)
  {
    v87 = (void *)EpisodeTextInfoDetail.summary.getter();
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v86, v77);

    a3 = v111;
    if (!v87)
      goto LABEL_64;
    v89 = v59[2];
    v88 = v59[3];
    if (v89 >= v88 >> 1)
      v59 = sub_13535C((_QWORD *)(v88 > 1), v89 + 1, 1, v59);
    v83 = v109;
    v59[2] = v89 + 1;
    v84 = (char *)v59 + v89;
    v85 = 1;
LABEL_63:
    v84[32] = v85;
    goto LABEL_65;
  }
  sub_9944(v86, &qword_1FD868);
  a3 = v111;
LABEL_64:

  v83 = v109;
LABEL_65:
  if (v83 > 0)
    v90 = v72;
  else
    v90 = 0;
  if (v90 == 1)
  {
    v92 = v59[2];
    v91 = v59[3];
    v93 = v110;
    if (v92 >= v91 >> 1)
      v59 = sub_13535C((_QWORD *)(v91 > 1), v92 + 1, 1, v59);
    v59[2] = v92 + 1;
    *((_BYTE *)v59 + v92 + 32) = 3;
  }
  else
  {
    v93 = v110;
  }
  objc_msgSend(v93, "duration");
  v94 = *(void **)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if ((v117 & 1) == 0)
  {
    if (v94)
    {
      v96 = *(_QWORD *)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24];
      v97 = *(_QWORD *)&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32];
      __swift_project_boxed_opaque_existential_1(&a4[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics], v96);
      v98 = *(void (**)(uint64_t, uint64_t))(v97 + 128);
      v99 = v94;
      v98(v96, v97);
      objc_msgSend(v99, "contentInset");
      objc_msgSend(v99, "setContentInset:");

      v101 = v59[2];
      v100 = v59[3];
      if (v101 >= v100 >> 1)
        v59 = sub_13535C((_QWORD *)(v100 > 1), v101 + 1, 1, v59);
      a3 = v111;
      v59[2] = v101 + 1;
      *((_BYTE *)v59 + v101 + 32) = 5;
      goto LABEL_80;
    }
    goto LABEL_90;
  }
  if (!v94)
  {
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    return;
  }
  v95 = v94;
  objc_msgSend(v95, "contentInset");
  objc_msgSend(v95, "setContentInset:");

LABEL_80:
  sub_9944(v113, &qword_1FD868);
LABEL_81:
  sub_6524C((uint64_t)v59);
  v102 = objc_msgSend(a3, "request");
  v103 = objc_opt_self(MPCPlayerRequest);
  v104 = (void *)swift_dynamicCastObjCClass(v102, v103);
  if (v104 && (v105 = v104, objc_msgSend(v104, "tracklistRange"), !v106))
  {
    objc_msgSend(v105, "setTracklistRange:", objc_msgSend(v105, "tracklistRange", swift_unknownObjectRetain(v102).n128_f64[0]), 99);
    swift_unknownObjectRelease(v102);
    objc_msgSend(a3, "setNeedsReload");
    v107 = v24;
  }
  else
  {
    v107 = v21;
    v21 = v24;
  }
  swift_unknownObjectRelease(v102);

}

void sub_6D094(char a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  void *v4;

  *(_BYTE *)(a3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates) = 0;
  if ((a1 & 1) != 0)
  {
    v4 = *(void **)(a3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView);
    *(_QWORD *)(a3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView) = 0;

  }
  else
  {
    sub_117A3C(a4);
    sub_117D08(a4);
  }
}

void sub_6D0F8(int a1, uint64_t a2, id a3)
{
  id v4;
  void *v5;

  v4 = objc_msgSend(a3, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkLayoutGuide), "layoutFrame");

  }
  else
  {
    __break(1u);
  }
}

void sub_6D184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;

  v4 = *(void **)(a2 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (v4)
  {
    objc_msgSend(v4, "setScrollEnabled:", 0);
    v6 = *(void **)(a1 + 32);
    v7 = type metadata accessor for NowPlayingContentView();
    v8 = swift_dynamicCastClass(v6, v7);
    if (v8)
    {
      v9 = (_BYTE *)v8;
      *(_BYTE *)(a3 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates) = 0;
      v10 = v6;
      sub_117D08(v9);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_6D230(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(void **)(a1 + 32);
  v2 = type metadata accessor for NowPlayingContentView();
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v1;
    sub_117A3C(v4);

  }
}

void sub_6D2A4(char a1, void *a2, void *a3, void *a4, double a5)
{
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v10 = (void *)objc_opt_self(UIView);
  v11 = swift_allocObject(&unk_1CAFE0, 48, 7);
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  v17[4] = sub_6E1F8;
  v18 = v11;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_F528;
  v17[3] = &block_descriptor_24;
  v12 = _Block_copy(v17);
  v13 = v18;
  v14 = a2;
  v15 = a3;
  v16 = a4;
  swift_release(v13);
  objc_msgSend(v10, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v12, 0, a5, 0.0);
  _Block_release(v12);
}

void sub_6D3A8(char a1, void *a2, void *a3, void *a4)
{
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  void *v24;
  uint64_t v25;

  v8 = (void *)objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_1CB030, 25, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_BYTE *)(v9 + 24) = a1;
  v24 = sub_6E208;
  v25 = v9;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_F528;
  v23 = &block_descriptor_30;
  v10 = _Block_copy(&v20);
  v11 = v25;
  v12 = a2;
  swift_release(v11);
  if ((a1 & 1) != 0)
    v13 = 0.0;
  else
    v13 = 0.5;
  if ((a1 & 1) != 0)
    v14 = 0.5;
  else
    v14 = 0.0;
  objc_msgSend(v8, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v10, v13);
  _Block_release(v10);
  v15 = swift_allocObject(&unk_1CB080, 32, 7);
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v24 = sub_6E248;
  v25 = v15;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_F528;
  v23 = &block_descriptor_36;
  v16 = _Block_copy(&v20);
  v17 = v25;
  v18 = a3;
  v19 = a4;
  swift_release(v17);
  objc_msgSend(v8, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v16, v14, 0.5);
  _Block_release(v16);
}

void sub_6D528(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView), "contentView");
  objc_msgSend(v3, "setBackgroundColor:", a2);

}

id sub_6D584(uint64_t a1, uint64_t a2)
{
  id result;
  _QWORD v4[6];

  result = *(id *)(a1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (result)
  {
    objc_msgSend(result, "setContentOffset:", 0.0, 0.0);
    result = *(id *)(a2 + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView);
    if (result)
    {
      v4[0] = 0x3FF0000000000000;
      v4[1] = 0;
      v4[2] = 0;
      v4[3] = 0x3FF0000000000000;
      v4[4] = 0;
      v4[5] = 0;
      return objc_msgSend(result, "setTransform:", v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_6D618(uint64_t a1, uint64_t a2, char *a3)
{
  sub_6DAEC(a3);
}

uint64_t storeEnumTagSinglePayload for NowPlayingViewController.NowPlayingSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_6D6D0 + 4 * byte_16E1F5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_6D704 + 4 * byte_16E1F0[v4]))();
}

uint64_t sub_6D704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_6D70C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x6D714);
  return result;
}

uint64_t sub_6D720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x6D728);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_6D72C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_6D734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewController.NowPlayingSection()
{
  return &type metadata for NowPlayingViewController.NowPlayingSection;
}

unint64_t sub_6D754()
{
  unint64_t result;

  result = qword_1FD840;
  if (!qword_1FD840)
  {
    result = swift_getWitnessTable(&unk_16E294, &type metadata for NowPlayingViewController.NowPlayingSection);
    atomic_store(result, (unint64_t *)&qword_1FD840);
  }
  return result;
}

void sub_6D798(_QWORD *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  NSString *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  NSString *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  v5 = _UIContentSizeCategoryCompareToContentSizeCategory(v4, UIContentSizeCategoryAccessibilityLarge);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v8 = (*(double (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
  if (v5 == 1)
  {
    v9 = UIFontTextStyleBody;
    v8 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v9, v8);

  }
  v10 = objc_msgSend(v2, "sharedApplication");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");

  v12 = _UIContentSizeCategoryCompareToContentSizeCategory(v11, UIContentSizeCategoryAccessibilityLarge);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = (*(double (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
  if (v12 == 1)
  {
    v16 = UIFontTextStyleBody;
    v15 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityMedium, (uint64_t)v16, v15);

  }
  if (qword_1F9688 != -1)
    swift_once(&qword_1F9688, sub_14D64C);
  qword_210430 = *(_QWORD *)&v8;
  qword_210438 = *(_QWORD *)&v15;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  *(_QWORD *)&xmmword_204540 = (*(double (**)(uint64_t, uint64_t))(v18 + 64))(v17, v18);
  *((_QWORD *)&xmmword_204540 + 1) = v19;
  qword_204550 = v20;
  qword_204558 = v21;
}

_QWORD *sub_6D9AC(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  void *v3;
  char v4;
  char *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;

  v2 = *(char **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController);
  if (!v2)
    return 0;
  v3 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
  if (!v3)
    return 0;
  v4 = sub_62454(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), &off_1C5288);
  v5 = v2;
  v6 = v3;
  swift_arrayDestroy(&unk_1C52A8, 2, &type metadata for String);
  if ((v4 & 1) == 0)
  {

    return 0;
  }
  v7 = type metadata accessor for PresentationDonationItem();
  v8 = (_QWORD *)swift_allocObject(v7, 80, 7);
  v8[2] = 0x6B726F77747241;
  v8[3] = 0xE700000000000000;
  v8[4] = v6;
  v8[5] = 0;
  v9 = swift_allocObject(&unk_1CB0D0, 24, 7);
  *(_QWORD *)(v9 + 16) = v5;
  v8[6] = sub_6E250;
  v8[7] = v9;
  v10 = v5;
  v11 = v6;
  sub_145A0(0, 0);
  v12 = swift_allocObject(&unk_1CB0F8, 32, 7);
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v11;
  v8[8] = sub_6E26C;
  v8[9] = v12;
  sub_145A0(0, 0);
  return v8;
}

void sub_6DAEC(char *a1)
{
  char *v1;
  void *v2;
  char *v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  double v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  CGFloat v23;
  void *v24;
  CGFloat ty;
  id v26;
  char *v27;
  char *v28;
  void *v29;
  CGFloat v30;
  void *v31;
  CGFloat v32;
  char *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  CGFloat v38;
  void *v39;
  CGFloat v40;
  void *v41;
  CGFloat v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char **v48;
  char *v49;
  char *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  id v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  CGAffineTransform aBlock;

  v2 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController];
  if (!v2)
    return;
  v4 = v2;
  v5 = objc_msgSend(a1, "isReversed");
  v6 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  v7 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (!v7)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5)
    v8 = 1.0;
  else
    v8 = 0.0;
  objc_msgSend(v7, "setAlpha:", v8);
  v58 = v6;
  if (v5)
  {
    if (qword_1F9580 != -1)
      swift_once(&qword_1F9580, sub_FDE14);
    v9 = (void *)qword_210308;
    v10 = (void *)objc_opt_self(UIColor);
    v11 = v9;
    v12 = objc_msgSend(v10, "clearColor");
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    if (qword_1F9580 != -1)
      swift_once(&qword_1F9580, sub_FDE14);
    v12 = (id)qword_210308;
  }
  v13 = v12;
  v14 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView];
  v15 = objc_msgSend(v1, "traitCollection");
  v16 = objc_msgSend((id)objc_opt_self(MusicTabBarPaletteBlurEffect), "effectWithStyle:", 10);

  objc_msgSend(v14, "setEffect:", v16);
  v17 = objc_msgSend(v14, "contentView");
  v57 = v11;
  objc_msgSend(v17, "setBackgroundColor:", v11);

  v59 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView;
  v18 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView];
  if (!v18)
    goto LABEL_25;
  objc_msgSend(v18, "setAlpha:", v8);
  v19 = OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_basicAnimator], "duration");
  v21 = v20;
  v22 = *(void **)&a1[v19];
  v23 = COERCE_DOUBLE(swift_allocObject(&unk_1CAEA0, 56, 7));
  *(_QWORD *)(*(_QWORD *)&v23 + 16) = v21;
  *(_BYTE *)(*(_QWORD *)&v23 + 24) = v5;
  *(_QWORD *)(*(_QWORD *)&v23 + 32) = v4;
  *(_QWORD *)(*(_QWORD *)&v23 + 40) = v1;
  *(_QWORD *)(*(_QWORD *)&v23 + 48) = v13;
  *(_QWORD *)&aBlock.tx = sub_6E0F0;
  aBlock.ty = v23;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_F528;
  *(_QWORD *)&aBlock.d = &block_descriptor_10;
  v24 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v56 = v4;
  v26 = v22;
  v27 = v1;
  v55 = v13;
  objc_msgSend(v26, "addAnimations:", v24, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v24);

  v28 = a1;
  v29 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_easingAnimator];
  v30 = COERCE_DOUBLE(swift_allocObject(&unk_1CAEF0, 25, 7));
  *(_QWORD *)(*(_QWORD *)&v30 + 16) = v27;
  *(_BYTE *)(*(_QWORD *)&v30 + 24) = v5;
  *(_QWORD *)&aBlock.tx = sub_6E140;
  aBlock.ty = v30;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_F528;
  *(_QWORD *)&aBlock.d = &block_descriptor_6_0;
  v31 = _Block_copy(&aBlock);
  v32 = aBlock.ty;
  v33 = v27;
  v34 = v29;
  objc_msgSend(v34, "addAnimations:", v31, swift_release(*(_QWORD *)&v32).n128_f64[0]);
  _Block_release(v31);

  v35 = *(void **)&v4[v59];
  if (!v35)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v36 = *(void **)&v1[v58];
  if (!v36)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v37 = v35;
  objc_msgSend(v36, "contentOffset");
  CGAffineTransformMakeTranslation(&aBlock, 0.0, v38);
  objc_msgSend(v37, "setTransform:", &aBlock);

  v39 = *(void **)&a1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_ascentDescentAnimator];
  if (v39)
  {
    v40 = COERCE_DOUBLE(swift_allocObject(&unk_1CAF90, 32, 7));
    *(_QWORD *)(*(_QWORD *)&v40 + 16) = v33;
    *(_QWORD *)(*(_QWORD *)&v40 + 24) = v56;
    *(_QWORD *)&aBlock.tx = sub_6E1BC;
    aBlock.ty = v40;
    *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
    *(_QWORD *)&aBlock.b = 1107296256;
    *(_QWORD *)&aBlock.c = sub_F528;
    *(_QWORD *)&aBlock.d = &block_descriptor_18;
    v41 = _Block_copy(&aBlock);
    v42 = aBlock.ty;
    v43 = v56;
    v44 = v33;
    v45 = v39;
    objc_msgSend(v45, "addAnimations:", v41, swift_release(*(_QWORD *)&v42).n128_f64[0]);
    _Block_release(v41);

  }
  v46 = swift_allocObject(&unk_1CAF40, 24, 7);
  *(_QWORD *)(v46 + 16) = v33;
  v47 = swift_allocObject(&unk_1CAF68, 32, 7);
  *(_QWORD *)(v47 + 16) = sub_6E14C;
  *(_QWORD *)(v47 + 24) = v46;
  v48 = (char **)&a1[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks];
  swift_beginAccess(&v28[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks], &aBlock, 33, 0);
  v49 = *v48;
  v50 = v33;
  swift_retain(v46);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v49);
  *v48 = v49;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v49 = sub_13460C(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
    *v48 = v49;
  }
  v53 = *((_QWORD *)v49 + 2);
  v52 = *((_QWORD *)v49 + 3);
  if (v53 >= v52 >> 1)
  {
    v49 = sub_13460C((char *)(v52 > 1), v53 + 1, 1, v49);
    *v48 = v49;
  }
  *((_QWORD *)v49 + 2) = v53 + 1;
  v54 = &v49[16 * v53];
  *((_QWORD *)v54 + 4) = sub_6E16C;
  *((_QWORD *)v54 + 5) = v47;
  swift_endAccess(&aBlock);

  swift_release(v46);
}

uint64_t sub_6E0BC()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_6E0F0()
{
  uint64_t v0;

  sub_6D2A4(*(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(double *)(v0 + 16));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_10(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_6E11C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_6E140()
{
  return sub_6E214(&OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
}

id sub_6E14C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView), "setEffect:", 0);
}

uint64_t sub_6E16C(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_6E190()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_6E1BC()
{
  uint64_t v0;

  return sub_6D584(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_6E1C4()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_6E1F8()
{
  uint64_t v0;

  sub_6D3A8(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

id sub_6E208()
{
  return sub_6E214(&OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_chevronView);
}

id sub_6E214(_QWORD *a1)
{
  uint64_t v1;
  id result;
  double v3;

  result = *(id *)(*(_QWORD *)(v1 + 16) + *a1);
  if (result)
  {
    v3 = 1.0;
    if (*(_BYTE *)(v1 + 24))
      v3 = 0.0;
    return objc_msgSend(result, "setAlpha:", v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_6E248()
{
  uint64_t v0;

  sub_6D528(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_6E250()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_deferArtworkModeUpdates) = 1;
}

void sub_6E26C(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_6D094(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE **)(v2 + 24));
}

void sub_6E274(int a1)
{
  uint64_t v1;

  sub_6D0F8(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

void sub_6E27C(uint64_t a1)
{
  uint64_t v1;

  sub_6D184(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_6E284(uint64_t a1)
{
  sub_6D230(a1);
}

unsigned __int8 *sub_6E28C()
{
  uint64_t v0;
  unsigned __int8 *result;

  result = *(unsigned __int8 **)(*(_QWORD *)(v0 + 16)
                               + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (result)
    return (unsigned __int8 *)objc_msgSend(result, "setScrollEnabled:", result[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled]);
  __break(1u);
  return result;
}

void sub_6E2C0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13[24];

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController] = 0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionTextViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesTextViewController] = 0;
  if (qword_1F96B8 != -1)
    goto LABEL_4;
  while (1)
  {
    swift_beginAccess(&static NowPlayingDataProvider.shared, v13, 0, 0);
    sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v10, (uint64_t *)&unk_1FC7F0);
    if (v10)
      break;
    __break(1u);
LABEL_4:
    swift_once(&qword_1F96B8, sub_15D030);
  }
  sub_DF78((uint64_t)&v12, (uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController]);
  sub_4AE24((uint64_t)&v10);
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_bindings] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_dismissalTapGestureRecognizer] = 0;
  v3 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
  v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_ownsArtworkView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController____lazy_storage___prototypeShowNotesController] = 0;
  v4 = &v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoProvider];
  v4[3] = type metadata accessor for EpisodeTextInfoProvider(0);
  v4[4] = &protocol witness table for EpisodeTextInfoProvider;
  __swift_allocate_boxed_opaque_existential_1(v4);
  EpisodeTextInfoProvider.init()();
  v5 = &v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail];
  v6 = type metadata accessor for EpisodeTextInfoDetail(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections] = &off_1C53B8;
  v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_allowsSectionCollapse] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionHeaderSizingView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesHeaderSizingView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_queueHeaderSizingView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterHeaderSizingView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__systemPodcastsResponse] = 0;
  v7 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_textDrawingCache;
  v8 = _s5CacheCMa();
  swift_allocObject(v8, 104, 7);
  sub_F8EC();
  *(_QWORD *)&v1[v7] = v9;
  v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__viewDidAppearOnce] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView] = 0;

  v10 = 0;
  v11 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v11);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingViewController.swift", 43, 2, 71, 0);
  __break(1u);
}

_QWORD *sub_6E58C(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  Class isa;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_674A4(a1);
  v2 = v1;

  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v4 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v3);

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setLocalObject:", isa);

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_16B2D0;
  *(_QWORD *)(v7 + 32) = v4;
  v9 = v7;
  specialized Array._endMutation()(v7);
  return (_QWORD *)v9;
}

void sub_6E670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  char **v25;
  id v26;
  id v27;
  id v28;
  id v29;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v28 - v8;
  v10 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController), "response");
  if (!v10)
    return;
  v11 = v10;
  v29 = objc_msgSend(v10, "tracklist");

  if (!v29)
    return;
  sub_674A4(a1);
  if (!v12)
  {
LABEL_9:

    return;
  }
  v28 = v12;
  v13 = IndexPath.item.getter(v12);
  v14 = IndexPath.item.getter(v13);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
  if (!v13)
  {
    v17 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
    v18 = v17(v9, v3);
    goto LABEL_11;
  }
  v16 = IndexPath.item.getter(v15);
  v17 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  v18 = v17(v9, v3);
  if (v14 < v16 && __OFSUB__(v14--, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_11:
  v20 = IndexPath.section.getter(v18);
  IndexPath.init(item:section:)(v14, v20);
  sub_674A4((uint64_t)v7);
  v22 = v21;
  v17(v7, v3);
  if (v22)
  {
    v23 = objc_msgSend(v29, "reorderCommand");
    v24 = v23;
    if (v23)
    {
      v25 = &selRef_moveItem_beforeItem_;
      if (v13)
        v25 = &selRef_moveItem_afterItem_;
      v26 = v28;
      v27 = objc_msgSend(v23, *v25, v28, v22);
    }
    else
    {
      v27 = 0;
      v26 = v28;
    }
    objc_msgSend((id)objc_opt_self(MPCPlayerChangeRequest), "performRequest:completion:", v27, 0);

    swift_unknownObjectRelease(v24);
  }
  else
  {

  }
}

void sub_6E8F0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v35 - v8;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v35 - v15;
  sub_2808C(a2, (uint64_t)v9, (uint64_t *)&unk_1FA950);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    v18 = (uint64_t)v9;
LABEL_25:
    sub_9944(v18, (uint64_t *)&unk_1FA950);
LABEL_26:
    objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
    return;
  }
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v20 = objc_msgSend(a1, "localDragSession");
  if (!v20)
    goto LABEL_22;
  v21 = v20;
  v22 = objc_msgSend(v20, "items");
  swift_unknownObjectRelease(v21);
  v23 = sub_F174(0, &qword_1FD8B8, UIDragItem_ptr);
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  if (!((unint64_t)v24 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_6;
    goto LABEL_21;
  }
  if (v24 < 0)
    v33 = v24;
  else
    v33 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v24);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v24);
  if (!v34)
  {
LABEL_21:
    swift_bridgeObjectRelease(v24);
LABEL_22:
    v36 = 0u;
    v37 = 0u;
    goto LABEL_23;
  }
LABEL_6:
  if ((v24 & 0xC000000000000001) != 0)
  {
    v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
LABEL_9:
    v26 = v25;
    v27 = objc_msgSend(v25, "localObject", swift_bridgeObjectRelease(v24).n128_f64[0]);

    if (v27)
    {
      _bridgeAnyObjectToAny(_:)(v35, v27);
      swift_unknownObjectRelease(v27);
    }
    else
    {
      memset(v35, 0, sizeof(v35));
    }
    sub_982C((uint64_t)v35, (uint64_t)&v36, &qword_1FD880);
    if (*((_QWORD *)&v37 + 1))
    {
      v28 = swift_dynamicCast(v7, &v36, (char *)&type metadata for Any + 8, v10, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, v28 ^ 1u, 1, v10);
      if (v17(v7, 1, v10) != 1)
      {
        v29 = ((uint64_t (*)(char *, char *, uint64_t))v19)(v14, v7, v10);
        v30 = IndexPath.section.getter(v29);
        if (v30 == IndexPath.section.getter(v30))
        {
          objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 3, 1);
          v31 = *(void (**)(char *, uint64_t))(v11 + 8);
          v31(v14, v10);
          v31(v16, v10);
          return;
        }
        v32 = *(void (**)(char *, uint64_t))(v11 + 8);
        v32(v14, v10);
        v32(v16, v10);
        goto LABEL_26;
      }
      goto LABEL_24;
    }
LABEL_23:
    sub_9944((uint64_t)&v36, &qword_1FD880);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
LABEL_24:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v18 = (uint64_t)v7;
    goto LABEL_25;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFF8)))
  {
    v25 = *(id *)(v24 + 32);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_6ECD8(unint64_t a1)
{
  char *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  char *v17;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v3 = *(_QWORD *)(v2 + 16);
  v4 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v17 = v1;
  swift_bridgeObjectRetain(v2);
  if (v3)
  {
    v5 = 0;
    do
    {
      if (v5 <= v3)
        v6 = v3;
      else
        v6 = v5;
      while (1)
      {
        if (v5 == v6)
        {
          __break(1u);
          JUMPOUT(0x6F248);
        }
        v7 = *(unsigned __int8 *)(v2 + 32 + v5++);
        v8 = *(_QWORD *)&v1[v4];
        if (!v8)
          goto LABEL_17;
        v9 = *(_QWORD *)(v8 + 16);
        if (v9)
        {
          if (*(unsigned __int8 *)(v8 + 32) == v7)
            goto LABEL_17;
          if (v9 != 1)
            break;
        }
LABEL_6:
        if (v5 == v3)
          goto LABEL_22;
      }
      v10 = 33;
      while (1)
      {
        v11 = v10 - 31;
        if (__OFADD__(v10 - 32, 1))
        {
          __break(1u);
          JUMPOUT(0x6F194);
        }
        if (*(unsigned __int8 *)(v8 + v10) == v7)
          break;
        ++v10;
        if (v11 == v9)
          goto LABEL_6;
      }
LABEL_17:
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_A9B08(v12 > 1, v13 + 1, 1);
      _swiftEmptyArrayStorage[2] = v13 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage[4] + v13) = v7;
    }
    while (v5 != v3);
  }
LABEL_22:
  swift_bridgeObjectRelease(v2);

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (_swiftEmptyArrayStorage[2] > a1)
  {
    v14 = *((unsigned __int8 *)&_swiftEmptyArrayStorage[4] + a1);
    swift_release(_swiftEmptyArrayStorage);
    v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x6F290);
}

void sub_6F300(uint64_t a1, id a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;

  v4 = objc_msgSend(a2, "title");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = objc_msgSend(a2, "isExplicitSong", sub_148A34(v6, v8));
  sub_1494A4(v9);
  objc_msgSend(a2, "duration");
  sub_148FE0(v10);
  v11 = objc_msgSend(a2, "artist");
  v12 = v11;
  if (v11)
  {
    v13 = objc_msgSend(v11, "name");

    if (v13)
    {
      v12 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v15 = v14;

      goto LABEL_9;
    }
    v12 = 0;
  }
  v15 = 0xE000000000000000;
LABEL_9:
  v16 = objc_msgSend(a2, "album", sub_148BE4((uint64_t)v12, v15));
  v17 = v16;
  if (!v16)
  {
LABEL_13:
    v20 = 0xE000000000000000;
    goto LABEL_14;
  }
  v18 = objc_msgSend(v16, "title");

  if (!v18)
  {
    v17 = 0;
    goto LABEL_13;
  }
  v17 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

LABEL_14:
  v21 = objc_msgSend(a2, "artworkCatalog", sub_148DF4((uint64_t)v17, v20));
  v22 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog;
  v23 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog) = v21;
  v24 = v21;

  v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
  v26 = *(void **)(a1 + v22);
  v27 = *(void **)(v25 + 80);
  *(_QWORD *)(v25 + 80) = v26;
  v28 = v26;
  sub_FFC90(v27);

}

void sub_6F4FC(uint64_t a1, id a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *IsRestricted;
  double v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;

  v4 = objc_msgSend(a2, "title");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = sub_148A34(v6, v8);
  IsRestricted = (void *)MPModelTVEpisodeIsRestricted(a2, v9);
  sub_1494A4(IsRestricted);
  objc_msgSend(a2, "duration");
  sub_148FE0(v11);
  v12 = objc_msgSend(a2, "show");
  v13 = v12;
  if (!v12)
    goto LABEL_8;
  v14 = objc_msgSend(v12, "title");

  if (!v14)
  {
    v13 = 0;
LABEL_8:
    v16 = 0xE000000000000000;
    goto LABEL_9;
  }
  v13 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

LABEL_9:
  sub_148BE4((uint64_t)v13, v16);
  v17 = objc_msgSend(a2, "artworkCatalog", sub_148DF4(0, 0xE000000000000000));
  v18 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog;
  v19 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog) = v17;
  v20 = v17;

  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
  v22 = *(void **)(a1 + v18);
  v23 = *(void **)(v21 + 80);
  *(_QWORD *)(v21 + 80) = v22;
  v24 = v22;
  sub_FFC90(v23);

}

void sub_6F68C(uint64_t a1, id a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *IsRestricted;
  double v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  v4 = objc_msgSend(a2, "title");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = sub_148A34(v6, v8);
  IsRestricted = (void *)MPModelMovieIsRestricted(a2, v9);
  sub_1494A4(IsRestricted);
  objc_msgSend(a2, "duration");
  sub_148FE0(v11);
  sub_148DF4(0, 0xE000000000000000);
  v12 = objc_msgSend(a2, "artworkCatalog", sub_148BE4(0, 0xE000000000000000));
  v13 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog;
  v14 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog) = v12;
  v15 = v12;

  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
  v17 = *(void **)(a1 + v13);
  v18 = *(void **)(v16 + 80);
  *(_QWORD *)(v16 + 80) = v17;
  v19 = v17;
  sub_FFC90(v18);

}

id sub_6F7BC()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v1);

  v2 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 12.0);
  objc_msgSend(v0, "setFont:", v2);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  objc_msgSend(v0, "setTextAlignment:", 1);
  return v0;
}

id sub_6F898(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController), "response");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v3, "tracklist");

  if (!v5)
    return 0;
  sub_674A4(a1);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v5, "reorderCommand");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "canMoveItem:", v7);
      swift_unknownObjectRelease(v9);
    }
    else
    {
      v10 = 0;
    }

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

void sub_6F974(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v4 = type metadata accessor for SongCell(0);
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a1;
    v8 = objc_msgSend(v6, "tableViewCell");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "_setAllowsReorderingWhenNotEditing:", 1);

      v10 = v7;
      objc_msgSend(v6, "setShowsReorderControl:", (unint64_t)sub_6F898(a2) & 1);

      v11 = (void *)objc_opt_self(UIColor);
      v13 = v10;
      v12 = objc_msgSend(v11, "clearColor");
      objc_msgSend(v6, "setBackgroundColor:", v12);

      objc_msgSend(v6, "setNeedsLayout");
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_6FAB0(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v17;

  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v4 = *(_QWORD *)(v3 + 16);
  v5 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v17 = v2;
  swift_bridgeObjectRetain(v3);
  if (!v4)
    goto LABEL_22;
  v6 = 0;
  while (1)
  {
    if (v6 <= v4)
      v7 = v4;
    else
      v7 = v6;
    while (1)
    {
      if (v6 == v7)
      {
        __break(1u);
        goto LABEL_27;
      }
      v8 = *(unsigned __int8 *)(v3 + 32 + v6++);
      v9 = *(_QWORD *)&v2[v5];
      if (!v9)
        goto LABEL_17;
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        if (*(unsigned __int8 *)(v9 + 32) == v8)
          goto LABEL_17;
        if (v10 != 1)
          break;
      }
LABEL_6:
      if (v6 == v4)
        goto LABEL_22;
    }
    v11 = 33;
    while (1)
    {
      v12 = v11 - 31;
      if (__OFADD__(v11 - 32, 1))
      {
        __break(1u);
        JUMPOUT(0x6FF88);
      }
      if (*(unsigned __int8 *)(v9 + v11) == v8)
        break;
      ++v11;
      if (v12 == v10)
        goto LABEL_6;
    }
LABEL_17:
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v14 = _swiftEmptyArrayStorage[2];
    v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
      sub_A9B08(v13 > 1, v14 + 1, 1);
    _swiftEmptyArrayStorage[2] = v14 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v14) = v8;
    if (v6 == v4)
    {
LABEL_22:
      swift_bridgeObjectRelease(v3);

      if ((a2 & 0x8000000000000000) == 0)
      {
        if (_swiftEmptyArrayStorage[2] > a2)
        {
          v15 = *((unsigned __int8 *)&_swiftEmptyArrayStorage[4] + a2);
          swift_release(_swiftEmptyArrayStorage);
          __asm { BR              X9 }
        }
LABEL_28:
        __break(1u);
        JUMPOUT(0x700F4);
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
}

double sub_7013C(void *a1)
{
  char *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Class isa;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  unint64_t v36;
  char *v37;

  v36 = IndexPath.section.getter(a1);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v3 = *(_QWORD *)(v2 + 16);
  v4 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v37 = v1;
  swift_bridgeObjectRetain(v2);
  if (!v3)
    goto LABEL_22;
  v5 = 0;
  do
  {
    if (v5 <= v3)
      v6 = v3;
    else
      v6 = v5;
    while (1)
    {
      if (v5 == v6)
      {
        __break(1u);
        goto LABEL_34;
      }
      v7 = *(unsigned __int8 *)(v2 + 32 + v5++);
      v8 = *(_QWORD *)&v1[v4];
      if (!v8)
        goto LABEL_17;
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        if (*(unsigned __int8 *)(v8 + 32) == v7)
          goto LABEL_17;
        if (v9 != 1)
          break;
      }
LABEL_6:
      if (v5 == v3)
        goto LABEL_22;
    }
    v10 = 33;
    while (1)
    {
      v11 = v10 - 31;
      if (__OFADD__(v10 - 32, 1))
      {
        __break(1u);
        JUMPOUT(0x7057CLL);
      }
      if (*(unsigned __int8 *)(v8 + v10) == v7)
        break;
      ++v10;
      if (v11 == v9)
        goto LABEL_6;
    }
LABEL_17:
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
    v13 = _swiftEmptyArrayStorage[2];
    v12 = _swiftEmptyArrayStorage[3];
    if (v13 >= v12 >> 1)
      sub_A9B08(v12 > 1, v13 + 1, 1);
    _swiftEmptyArrayStorage[2] = v13 + 1;
    *((_BYTE *)&_swiftEmptyArrayStorage[4] + v13) = v7;
  }
  while (v5 != v3);
LABEL_22:
  swift_bridgeObjectRelease(v2);

  if ((v36 & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v36 >= _swiftEmptyArrayStorage[2])
  {
LABEL_35:
    __break(1u);
    JUMPOUT(0x706CCLL);
  }
  v14 = *((unsigned __int8 *)&_swiftEmptyArrayStorage[4] + v36);
  swift_release(_swiftEmptyArrayStorage);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (!v16)
    goto LABEL_30;
  v17 = objc_msgSend(v16, "reuseIdentifier");

  if (!v17)
    goto LABEL_30;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  if (v18 != 0x6543726563617053 || v20 != 0xEA00000000006C6CLL)
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, 0x6543726563617053, 0xEA00000000006C6CLL, 0);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0)
      return 0.0;
LABEL_30:
    objc_msgSend(a1, "bounds");
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    objc_msgSend(a1, "music_inheritedLayoutInsets");
    UIEdgeInsetsInsetRect_0(v23, v25, v27, v29, v30, v31, v32, v33);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(0xEA00000000006C6CLL);
  return 0.0;
}

_QWORD *sub_706E8(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v21;
  unint64_t v22;
  Swift::String v23;

  v1 = _swiftEmptyArrayStorage;
  v22 = (unint64_t)_swiftEmptyArrayStorage;
  sub_674A4(a1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "remove");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v23._object = (void *)0xE000000000000000;
      v7._countAndFlagsBits = 0x535F45564F4D4552;
      v7._object = (void *)0xEF52414C55474E49;
      v8._countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      v23._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v23)._object;

      v10 = swift_allocObject(&unk_1CB490, 24, 7);
      *(_QWORD *)(v10 + 16) = v5;
      v11 = v5;
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      aBlock[4] = sub_71E58;
      v21 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_6C174;
      aBlock[3] = &block_descriptor_116;
      v13 = _Block_copy(aBlock);
      v14 = objc_msgSend((id)objc_opt_self(UISwipeAction), "swipeActionWithStyle:title:handler:", 1, v12, v13);

      _Block_release(v13);
      objc_msgSend(v14, "setResetsSwipedRow:", 0, swift_release(v21).n128_f64[0]);
      v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
      v16 = *(_QWORD *)((char *)&dword_18 + (v22 & 0xFFFFFFFFFFFFFF8));
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);

      return (_QWORD *)v22;
    }
    else
    {

    }
  }
  return v1;
}

void sub_7090C(void *a1, _BYTE *a2, void (**a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  unsigned __int8 v18;
  void *v19;
  id v20;
  unsigned __int8 v21;
  void *v22;
  void *v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  id v31;
  unsigned __int8 v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  void *v50;
  id v51;
  char *v52;
  char *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  unsigned int v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  void *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  char v81;
  uint64_t v82;
  void *v83;
  unint64_t v84;
  unint64_t v85;
  unsigned int v86;
  unint64_t v87;
  unint64_t v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  id v95;
  unint64_t v96;
  unint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  id v106;
  const void *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  _QWORD v111[3];
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115[24];
  char v116[24];
  char v117[32];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD868);
  v7 = __chkstk_darwin(v6);
  v108 = (uint64_t)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v105 - v10;
  __chkstk_darwin(v9);
  v110 = (uint64_t)&v105 - v12;
  a3[2](a3);
  v13 = objc_msgSend(a1, "response");
  v109 = a1;
  v107 = a3;
  if (!v13)
  {
    v16 = 0;
    v19 = 0;
    v22 = 0;
    goto LABEL_10;
  }
  v14 = v13;
  v15 = objc_opt_self(MPCPlayerResponse);
  v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
  if (!v16)
  {
    v19 = 0;
LABEL_9:
    v22 = v16;
    swift_unknownObjectRelease(v14);
    v16 = 0;
    goto LABEL_10;
  }
  v17 = objc_msgSend(v16, "playerPath", swift_unknownObjectRetain(v14).n128_f64[0]);
  v18 = objc_msgSend(v17, "isSystemPodcastsPath");

  v19 = v16;
  if ((v18 & 1) == 0)
  {
    swift_unknownObjectRelease(v14);
    v19 = 0;
  }
  swift_unknownObjectRetain_n(v14, 2);
  v20 = objc_msgSend(v16, "playerPath");
  v21 = objc_msgSend(v20, "isSystemPodcastsPath");
  swift_unknownObjectRelease(v14);

  v22 = v16;
  if ((v21 & 1) == 0)
    goto LABEL_9;
LABEL_10:
  v23 = *(void **)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__systemPodcastsResponse];
  *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__systemPodcastsResponse] = v16;

  v24 = *(char **)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController];
  if (!v24)
    goto LABEL_38;
  v25 = v24;
  if (v22)
    v26 = objc_msgSend(v22, "playerPath");
  else
    v26 = 0;
  v27 = type metadata accessor for NowPlayingMetadataPlaceholder();
  swift_allocObject(v27, 40, 7);
  v28 = sub_1092B8(v26);
  v29 = *(_QWORD *)&v24[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder];
  *(_QWORD *)&v24[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder] = v28;
  swift_release(v29);
  if (!v22)
    goto LABEL_17;
  v30 = v22;
  v31 = objc_msgSend(v30, "playerPath");
  v32 = objc_msgSend(v31, "isSystemPodcastsPath");

  v33 = v22;
  if ((v32 & 1) == 0)
  {

LABEL_17:
    v33 = 0;
  }
  v34 = *(void **)&v24[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse];
  *(_QWORD *)&v24[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse] = v33;
  v35 = v33;

  sub_1218A8();
  v37 = static Podcasts.isBlueMoonEnabled()(v36);
  v38 = *(void **)&v24[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
  if ((v37 & 1) != 0)
  {
    if (v38)
    {
      v39 = v38;
      v40 = objc_msgSend(v19, "videoOutput");
      v41 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput;
      v42 = *(_QWORD *)&v39[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput];
      *(_QWORD *)&v39[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = v40;
      swift_unknownObjectRetain(v40);
      swift_unknownObjectRelease(v42);
      v43 = *(id *)&v39[v41];
      if (v43)
        v43 = objc_msgSend(v43, "playerViewController");
      sub_F5B84(v43);

      swift_unknownObjectRelease(v40);
    }
  }
  else if (v38)
  {
    if (v19)
    {
      v44 = qword_1F96B8;
      v45 = v38;
      v46 = v19;
      if (v44 != -1)
        swift_once(&qword_1F96B8, sub_15D030);
      swift_beginAccess(&static NowPlayingDataProvider.shared, v115, 0, 0);
      sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v111, (uint64_t *)&unk_1FC7F0);
      v47 = v111[0];
      if (!v111[0])
        goto LABEL_91;
      v48 = v111[1];
      swift_unknownObjectRetain(v111[0]);
      sub_4AE24((uint64_t)v111);
      ObjectType = swift_getObjectType(v47);
      v50 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 248))(ObjectType, v48);

      swift_unknownObjectRelease(v47);
    }
    else
    {
      v51 = v38;
      v50 = 0;
    }
    sub_F5B84(v50);

  }
  if (a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_ownsArtworkView] == 1)
  {
    v52 = *(char **)&v24[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController_artworkView];
    if (v52)
    {
      v53 = v52;
      if (v19)
        v54 = objc_msgSend(v19, "playerPath");
      else
        v54 = 0;
      sub_F5C70(v54);

      v24 = v52;
    }
  }

LABEL_38:
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD870);
  v56 = (_QWORD *)swift_allocObject(v55, 33, 7);
  *((_OWORD *)v56 + 1) = xmmword_16B3D0;
  *((_BYTE *)v56 + 32) = 0;
  if (!v19
    || (v57 = objc_msgSend(v19, "tracklist"),
        v58 = sub_B61B8(),
        v57,
        !v58))
  {

    goto LABEL_81;
  }
  v60 = static Podcasts.isBlueMoonEnabled()(v59);
  if ((v60 & 1) != 0)
  {
    v61 = (uint64_t)sub_689B0(v60);
    v62 = v61;
    if ((unint64_t)v61 >> 62)
    {
      if (v61 >= 0)
        v61 &= 0xFFFFFFFFFFFFFF8uLL;
      v105 = _CocoaArrayWrapper.endIndex.getter(v61);
    }
    else
    {
      v105 = *(_QWORD *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8));
    }
    *(_QWORD *)&v63 = swift_bridgeObjectRelease(v62).n128_u64[0];
  }
  else
  {
    v64 = (uint64_t)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController];
    swift_beginAccess(&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController], v117, 0, 0);
    sub_DF78(v64, (uint64_t)v111);
    v65 = v112;
    v66 = v113;
    __swift_project_boxed_opaque_existential_1(v111, v112);
    v105 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v66 + 8) + 40))(v65);
    __swift_destroy_boxed_opaque_existential_0(v111);
  }
  v106 = v58;
  v67 = objc_msgSend(v19, "playerPath", v63, v105);
  v68 = objc_msgSend(v67, "route");

  if (v68)
  {
    v69 = objc_msgSend(v68, "isDeviceRoute");

    if (!v22)
      goto LABEL_49;
    goto LABEL_48;
  }
  v69 = 0;
  if (v22)
  {
LABEL_48:
    v70 = v22;
    sub_63DE8(v70);

  }
LABEL_49:
  v71 = (uint64_t)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail];
  swift_beginAccess(&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail], v116, 0, 0);
  v72 = v110;
  sub_2808C(v71, v110, &qword_1FD868);
  sub_2808C(v72, (uint64_t)v11, &qword_1FD868);
  v73 = type metadata accessor for EpisodeTextInfoDetail(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  if (v75(v11, 1, v73) == 1)
  {
    sub_9944((uint64_t)v11, &qword_1FD868);
  }
  else
  {
    v76 = (void *)EpisodeTextInfoDetail.notes.getter();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v11, v73);

    if (v76)
    {
      v78 = v56[2];
      v77 = v56[3];
      if (v78 >= v77 >> 1)
        v56 = sub_13535C((_QWORD *)(v77 > 1), v78 + 1, 1, v56);
      v79 = v105;
      v56[2] = v78 + 1;
      v80 = (char *)v56 + v78;
      v81 = 2;
      goto LABEL_63;
    }
  }
  v82 = v108;
  sub_2808C(v110, v108, &qword_1FD868);
  if (v75((char *)v82, 1, v73) != 1)
  {
    v83 = (void *)EpisodeTextInfoDetail.summary.getter();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v82, v73);

    if (!v83)
      goto LABEL_64;
    v85 = v56[2];
    v84 = v56[3];
    if (v85 >= v84 >> 1)
      v56 = sub_13535C((_QWORD *)(v84 > 1), v85 + 1, 1, v56);
    v79 = v105;
    v56[2] = v85 + 1;
    v80 = (char *)v56 + v85;
    v81 = 1;
LABEL_63:
    v80[32] = v81;
    goto LABEL_65;
  }
  sub_9944(v82, &qword_1FD868);
LABEL_64:

  v79 = v105;
LABEL_65:
  if (v79 > 0)
    v86 = v69;
  else
    v86 = 0;
  if (v86 == 1)
  {
    v88 = v56[2];
    v87 = v56[3];
    v89 = v106;
    if (v88 >= v87 >> 1)
      v56 = sub_13535C((_QWORD *)(v87 > 1), v88 + 1, 1, v56);
    v56[2] = v88 + 1;
    *((_BYTE *)v56 + v88 + 32) = 3;
  }
  else
  {
    v89 = v106;
  }
  objc_msgSend(v89, "duration");
  v90 = *(void **)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (v114 != 1)
  {
    if (v90)
    {
      v92 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24];
      v93 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32];
      __swift_project_boxed_opaque_existential_1(&a2[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics], v92);
      v94 = *(void (**)(uint64_t, uint64_t))(v93 + 128);
      v95 = v90;
      v94(v92, v93);
      objc_msgSend(v95, "contentInset");
      objc_msgSend(v95, "setContentInset:");

      v97 = v56[2];
      v96 = v56[3];
      if (v97 >= v96 >> 1)
        v56 = sub_13535C((_QWORD *)(v96 > 1), v97 + 1, 1, v56);
      v56[2] = v97 + 1;
      *((_BYTE *)v56 + v97 + 32) = 5;
      goto LABEL_80;
    }
    goto LABEL_90;
  }
  if (!v90)
  {
    _Block_release(v107);
    __break(1u);
LABEL_90:
    _Block_release(v107);
    __break(1u);
LABEL_91:
    _Block_release(v107);
    __break(1u);
    return;
  }
  v91 = v90;
  objc_msgSend(v91, "contentInset");
  objc_msgSend(v91, "setContentInset:");

LABEL_80:
  sub_9944(v110, &qword_1FD868);
LABEL_81:
  sub_6524C((uint64_t)v56);
  v98 = v109;
  v99 = objc_msgSend(v109, "request");
  v100 = objc_opt_self(MPCPlayerRequest);
  v101 = (void *)swift_dynamicCastObjCClass(v99, v100);
  if (v101 && (v102 = v101, objc_msgSend(v101, "tracklistRange"), !v103))
  {
    objc_msgSend(v102, "setTracklistRange:", objc_msgSend(v102, "tracklistRange", swift_unknownObjectRetain(v99).n128_f64[0]), 99);
    swift_unknownObjectRelease(v99);
    objc_msgSend(v98, "setNeedsReload");
    v104 = v22;
  }
  else
  {
    v104 = v19;
    v19 = v22;
  }
  swift_unknownObjectRelease(v99);

}

void sub_713B8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void **v17;
  uint64_t v18;
  uint64_t ObjectType;
  void *v20;
  id v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char **v33;
  char *v34;
  char *v35;
  id v36;
  char *v37;
  id v38;
  char *v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  id v44;
  __n128 v45;
  void *v46;
  void *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  id v57;
  char *v58;
  id v59;
  char *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  void **aBlock;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  void (*v74)();
  _QWORD *v75;
  char v76[32];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v66 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v65 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_1CB1C0, 24, 7);
  *(_QWORD *)(v12 + 16) = a3;
  _Block_copy(a3);
  v13 = objc_msgSend(a1, "request");
  v14 = objc_opt_self(MPCPlayerRequest);
  v15 = swift_dynamicCastObjCClass(v13, v14);
  v67 = v10;
  v68 = v9;
  if (v15)
  {
    v16 = (void *)v15;
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, v76, 0, 0);
    sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&aBlock, (uint64_t *)&unk_1FC7F0);
    v17 = aBlock;
    if (aBlock)
    {
      v18 = v71;
      swift_unknownObjectRetain(aBlock);
      sub_4AE24((uint64_t)&aBlock);
      ObjectType = swift_getObjectType(v17);
      v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(ObjectType, v18);
      swift_unknownObjectRelease(v17);
      v21 = objc_msgSend(v16, "playerPath");
      if (v21)
      {
        v22 = v21;
        PlayerPathCoordinator.didReceiveResponse(for:)(v21);

        goto LABEL_7;
      }
    }
    else
    {
      _Block_release(a3);
      __break(1u);
    }
    _Block_release(a3);
    __break(1u);
LABEL_20:
    _Block_release(a3);
    __break(1u);
    return;
  }
LABEL_7:
  swift_unknownObjectRelease(v13);
  v23 = (_QWORD *)swift_allocObject(&unk_1CB1E8, 48, 7);
  v23[2] = a2;
  v23[3] = sub_2BE90;
  v23[4] = v12;
  v23[5] = a1;
  v24 = (void *)objc_opt_self(NSThread);
  v25 = a2;
  swift_retain_n(v12, 2);
  v26 = a1;
  v69 = (char *)v25;
  v27 = v26;
  if (!objc_msgSend(v24, "isMainThread"))
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v46 = (void *)static OS_dispatch_queue.main.getter(v45);
    v74 = sub_71C40;
    v75 = v23;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_F528;
    v73 = &block_descriptor_63;
    v47 = _Block_copy(&aBlock);
    v48 = v75;
    swift_retain();
    swift_release(v48);
    v49 = v65;
    static DispatchQoS.unspecified.getter(v50);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v51 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v63 = v12;
    v64 = v27;
    v52 = v51;
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v54 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
    v55 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v53, v54, v6, v52);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v49, v55, v47);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);

    swift_release_n(v63, 2);
    swift_release(v23);
    return;
  }
  v28 = *(char **)&v69[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (!v28)
    goto LABEL_20;
  v29 = (_QWORD *)swift_allocObject(&unk_1CB238, 48, 7);
  v29[2] = sub_2BE90;
  v29[3] = v12;
  v30 = v69;
  v29[4] = v27;
  v29[5] = v30;
  if ((v28[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_hasInteractiveMovement] & 1) != 0)
  {
    v31 = v27;
    v32 = swift_allocObject(&unk_1CB260, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_71C50;
    *(_QWORD *)(v32 + 24) = v29;
    v33 = (char **)&v28[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers];
    swift_beginAccess(&v28[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers], &aBlock, 33, 0);
    v34 = *v33;
    v35 = v69;
    swift_retain_n(v12, 2);
    v64 = v31;
    v36 = v31;
    v37 = v35;
    v38 = v36;
    v39 = v28;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
    *v33 = v34;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v34 = sub_1344D4(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
      *v33 = v34;
    }
    v42 = *((_QWORD *)v34 + 2);
    v41 = *((_QWORD *)v34 + 3);
    if (v42 >= v41 >> 1)
    {
      v34 = sub_1344D4((char *)(v41 > 1), v42 + 1, 1, v34);
      *v33 = v34;
    }
    *((_QWORD *)v34 + 2) = v42 + 1;
    v43 = &v34[16 * v42];
    *((_QWORD *)v43 + 4) = sub_F2F8;
    *((_QWORD *)v43 + 5) = v32;
    swift_endAccess(&aBlock);
    v44 = v64;
  }
  else
  {
    v56 = v69;
    swift_retain();
    v44 = v27;
    v57 = v27;
    _Block_copy(a3);
    v58 = v56;
    swift_retain();
    v59 = v57;
    v60 = v28;
    sub_7090C(v59, v58, (void (**)(_QWORD))a3);
    _Block_release(a3);
  }
  swift_release(v29);
  swift_release_n(v12, 3);
  swift_release(v23);

  v61 = v69;
}

id sub_719C4(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  void *v12;
  _QWORD v13[14];
  _BYTE v14[24];

  v3 = objc_msgSend(a1, "request");
  v4 = objc_opt_self(MPCPlayerRequest);
  v5 = swift_dynamicCastObjCClass(v3, v4);
  if (!v5)
    goto LABEL_7;
  v6 = (void *)v5;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v14, 0, 0);
  result = (id)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v13, (uint64_t *)&unk_1FC7F0);
  v8 = v13[0];
  if (v13[0])
  {
    v9 = v13[1];
    swift_unknownObjectRetain(v13[0]);
    sub_4AE24((uint64_t)v13);
    ObjectType = swift_getObjectType(v8);
    v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    swift_unknownObjectRelease(v8);
    result = objc_msgSend(v6, "playerPath");
    if (result)
    {
      v12 = result;
      PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)(result, a2);

LABEL_7:
      swift_unknownObjectRelease(v3);
      return &dword_0 + 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_71B0C(void *a1)
{
  char *v1;
  id v3;
  double v4;
  double v5;
  uint64_t v6;
  void *result;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  v3 = objc_msgSend(v1, "view");
  objc_msgSend(a1, "locationInView:", v3);
  v5 = v4;

  v6 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView;
  result = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView];
  if (result)
  {
    objc_msgSend(result, "contentOffset");
    result = *(void **)&v1[v6];
    if (result)
    {
      v9 = v8;
      objc_msgSend(result, "contentInset");
      v11 = v9 + v10;
      v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 24];
      v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics + 32];
      __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics], v12);
      return (void *)(v5 <= (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13) - v11);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_71BE8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_71C0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_71C40()
{
  uint64_t v0;

  sub_6C30C(*(char **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_71C50()
{
  uint64_t v0;

  sub_6C508(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32), *(_BYTE **)(v0 + 40));
}

uint64_t sub_71C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_71CA4()
{
  sub_64578();
}

uint64_t sub_71CC4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_71CE8()
{
  uint64_t v0;

  sub_66E00(v0);
}

uint64_t sub_71CF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_71D1C()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = *(void **)(v0 + 24);
  v2 = *(double *)(v0 + 32);
  v3 = *(double *)(v0 + 40);
  v4 = *(double *)(v0 + 48);
  v5 = *(double *)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
  return objc_msgSend(v1, "setFrame:", v2, v3, v4, v5);
}

void sub_71D7C(uint64_t a1)
{
  uint64_t v1;

  sub_67168(a1, *(_QWORD *)(v1 + 16));
}

id sub_71D88()
{
  void **v0;

  return sub_671DC(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_92Tm_0()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_71DCC(int a1)
{
  uint64_t v1;

  return sub_67298(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_65Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_71E10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_71E34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_71E58()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(MPCPlayerChangeRequest), "performRequest:completion:", *(_QWORD *)(v0 + 16), 0);
}

double UIEdgeInsetsInsetRect_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

uint64_t sub_71EA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_71ED0()
{
  uint64_t v0;

  return sub_665E4(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_71EDC()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_71F00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_71F2C(uint64_t a1)
{
  uint64_t v1;

  sub_667B8(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32));
}

uint64_t sub_71F3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_71F60(char a1)
{
  uint64_t v1;

  return sub_65AAC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_71F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 72, 7);
}

void sub_71FA0()
{
  uint64_t v0;

  sub_65C58(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(uint64_t **)(v0 + 64));
}

uint64_t sub_71FB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_71FC4(uint64_t a1)
{
  uint64_t v1;

  sub_6BB0C(a1, *(void **)(v1 + 16));
}

id sub_71FCC()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView);
  if (result)
    return objc_msgSend(result, "setContentOffset:animated:", 1, 0.0, 0.0);
  __break(1u);
  return result;
}

uint64_t sub_71FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = v7 + v5;

  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v6);
}

void sub_72090()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_682DC(*(void **)(v0 + 16));
}

uint64_t sub_720D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_720E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_7214C()
{
  uint64_t v0;

  sub_6384C(v0);
}

void sub_72154()
{
  uint64_t v0;

  sub_63A00(v0);
}

uint64_t _s16ReusableViewTypeOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s16ReusableViewTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_72208(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_72214(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_72224(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *_s16ReusableViewTypeOMa()
{
  return &_s16ReusableViewTypeON;
}

void sub_72314()
{
  qword_1FD960 = 0x402A000000000000;
}

id sub_72324(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction] = 0;
  v3[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_showingRealPreview] = 0;
  v7 = swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_viewController], 0);
  swift_unknownObjectWeakAssign(v7, a1);
  v8 = &v3[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_handler];
  *v8 = a2;
  v8[1] = a3;
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for ContextActionsPresentationRegistration();
  swift_retain();
  v9 = objc_msgSendSuper2(&v16, "init");
  v10 = (void *)objc_opt_self(NSNotificationCenter);
  v11 = v9;
  v12 = objc_msgSend(v10, "defaultCenter", v16.receiver, v16.super_class);
  v13 = MTApplicationWillResignActiveNotification;
  v14 = v11;
  objc_msgSend(v12, "addObserver:selector:name:object:", v14, "appWillResignActive", v13, 0);

  swift_release(a3);
  return v14;
}

Swift::Void __swiftcall ContextActionsPresentationRegistration.appWillResignActive()()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_showingRealPreview) & 1) == 0)
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction), "dismissMenu");
}

unint64_t sub_724B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE *Strong;
  _BYTE v6[24];

  v2 = a2 + 16;
  v3 = (unint64_t)ContextActionsConfiguration.previewViewController()();
  swift_beginAccess(v2, v6, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_showingRealPreview] = v3 != 0;

  }
  return v3;
}

double ContextActionsPresentationRegistration.contextMenuInteraction(_:willPerformPreviewActionForMenuWith:animator:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_737D0(a3);
}

uint64_t ContextActionsPresentationRegistration.contextMenuInteraction(_:willDisplayMenuFor:animator:)(void *a1, uint64_t a2, void *a3)
{
  return sub_738BC(a1, a3);
}

uint64_t ContextActionsPresentationRegistration.contextMenuInteraction(_:willEndFor:animator:)(void *a1, uint64_t a2, void *a3)
{
  return sub_73AA8(a1, a3);
}

id _s12NowPlayingUI38ContextActionsPresentationRegistrationC22contextMenuInteraction_020previewForDismissingI17WithConfigurationSo17UITargetedPreviewCSgSo09UIContextiJ0C_So0riO0CtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  double v16;
  double x;
  double v18;
  double y;
  double v20;
  double width;
  double v22;
  double height;
  uint64_t v24;
  uint64_t v25;
  id v26;
  int v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  double v33;
  id v34;
  id v35;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  CGRect v43;
  CGRect v44;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD9E8);
  __chkstk_darwin(v1);
  v3 = (char *)&v38[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContextMenuPreviewMargins(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (double *)((char *)&v38[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = objc_msgSend(v9, "view");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "window");
    if (v12)
    {

      v38[0] = v11;
      v13 = sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
      v14 = v11;
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD9E0);
      if ((swift_dynamicCast(v41, v38, v13, v15, 6) & 1) == 0)
      {
        v42 = 0;
        memset(v41, 0, sizeof(v41));
      }
      objc_msgSend(v14, "bounds");
      x = v16;
      y = v18;
      width = v20;
      height = v22;
      sub_2808C((uint64_t)v41, (uint64_t)v38, (uint64_t *)&unk_1FD9D0);
      v24 = v39;
      if (v39)
      {
        v25 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        dispatch thunk of ContextMenuPreviewView.previewMargins.getter(v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
        __swift_destroy_boxed_opaque_existential_0(v38);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
        {
          (*(void (**)(double *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
          goto LABEL_14;
        }
      }
      else
      {
        sub_9944((uint64_t)v38, (uint64_t *)&unk_1FD9D0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      }
      (*(void (**)(double *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ContextMenuPreviewMargins.provide(_:), v4);
      sub_9944((uint64_t)v3, &qword_1FD9E8);
LABEL_14:
      v27 = (*(uint64_t (**)(double *, uint64_t))(v5 + 88))(v7, v4);
      if (v27 == enum case for ContextMenuPreviewMargins.provideRemovingOriginals(_:))
      {
        (*(void (**)(double *, uint64_t))(v5 + 96))(v7, v4);
        x = UIEdgeInsetsInsetRect(x, y, width, height, *v7, v7[1]);
        y = v28;
        width = v29;
        height = v30;
LABEL_16:
        v31 = -ContextActionPreviewPaddingInset.getter();
        v32 = -ContextActionPreviewPaddingInset.getter();
        v43.origin.x = x;
        v43.origin.y = y;
        v43.size.width = width;
        v43.size.height = height;
        v44 = CGRectInset(v43, v31, v32);
        x = v44.origin.x;
        y = v44.origin.y;
        width = v44.size.width;
        height = v44.size.height;
        if (qword_1F94E0 != -1)
          swift_once(&qword_1F94E0, sub_72314);
        v33 = *(double *)&qword_1FD960;
        goto LABEL_22;
      }
      v33 = 0.0;
      if (v27 != enum case for ContextMenuPreviewMargins.none(_:))
      {
        if (v27 == enum case for ContextMenuPreviewMargins.provide(_:))
          goto LABEL_16;
        (*(void (**)(double *, uint64_t))(v5 + 8))(v7, v4);
      }
LABEL_22:
      v34 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
      v35 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", x, y, width, height, v33);
      objc_msgSend(v34, "setVisiblePath:", v35);

      v26 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:", v14, v34);
      sub_9944((uint64_t)v41, (uint64_t *)&unk_1FD9D0);
      return v26;
    }

    return 0;
  }
  else
  {

    return 0;
  }
}

void ContextActionsPresentationRegistration.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.ContextActionsPresentationRegistration", 51, "init()", 6, 0);
  __break(1u);
}

id ContextActionsPresentationRegistration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionsPresentationRegistration();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t UIViewController.presentShareSheet(from:sourceRect:configuration:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  void *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v26;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD978);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PresentationSource(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = a1;
  *((double *)v15 + 1) = a3;
  *((double *)v15 + 2) = a4;
  *((double *)v15 + 3) = a5;
  *((double *)v15 + 4) = a6;
  v20 = enum case for PresentationSource.Position.view(_:);
  v21 = type metadata accessor for PresentationSource.Position(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v15, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v15, 0, 1, v21);
  v23 = v6;
  v24 = a1;
  PresentationSource.init(viewController:position:)(v23, v15);
  sub_72DF0((uint64_t)v19, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

void sub_72DF0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void *v32;
  uint64_t v33;
  __n128 v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  v12 = __chkstk_darwin(v11);
  v44 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v43 - v17;
  v19 = type metadata accessor for PresentationSource(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a1, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  sub_73CC0((uint64_t)v18, (uint64_t)v16);
  v21 = a2 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(a2 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, aBlock, 33, 0);
  sub_73D08((uint64_t)v16, v21);
  swift_endAccess(aBlock);
  v22 = swift_allocObject(&unk_1CB820, 32, 7);
  *(_QWORD *)(v22 + 16) = v2;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = (void *)objc_opt_self(NSThread);
  v24 = v2;
  swift_retain_n(a2, 2);
  v25 = v24;
  if (!objc_msgSend(v23, "isMainThread"))
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v35 = (void *)static OS_dispatch_queue.main.getter(v34);
    aBlock[4] = sub_73D7C;
    v50 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_11;
    v36 = _Block_copy(aBlock);
    v37 = v50;
    swift_retain();
    swift_release(v37);
    static DispatchQoS.unspecified.getter(v38);
    aBlock[0] = _swiftEmptyArrayStorage;
    v39 = sub_F52C();
    v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v41 = sub_F574();
    v42 = v48;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v41, v48, v39);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v42);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v46);
    goto LABEL_8;
  }
  v26 = objc_msgSend(v25, "popoverPresentationController");

  if (v26)
    goto LABEL_8;
  v27 = ContextActionsConfiguration.firstShareAction()();
  if (!v27)
    goto LABEL_8;
  v29 = v27;
  v30 = v28;
  ObjectType = swift_getObjectType(v27);
  v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(1, ObjectType, v30);
  swift_unknownObjectRelease(v29);
  if (!v32)
    goto LABEL_8;
  v33 = v44;
  sub_2808C(v21, v44, &qword_1FD4B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v33, 1, v19) != 1)
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v32, 1, 12, 1, 0, 0);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v33, v19);
LABEL_8:
    swift_release(a2);

    swift_release(v22);
    return;
  }
  __break(1u);
}

uint64_t UIViewController.presentShareSheet(from:configuration:)(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD978);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for PresentationSource(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = a1;
  v12 = enum case for PresentationSource.Position.barButtonItem(_:);
  v13 = type metadata accessor for PresentationSource.Position(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 104))(v7, v12, v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  v15 = v2;
  v16 = a1;
  PresentationSource.init(viewController:position:)(v15, v7);
  sub_72DF0((uint64_t)v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_73324(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = objc_msgSend(a1, "popoverPresentationController");

  if (!v7)
  {
    v8 = ContextActionsConfiguration.firstShareAction()();
    if (v8)
    {
      v10 = v8;
      v11 = v9;
      ObjectType = swift_getObjectType(v8);
      v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(1, ObjectType, v11);
      swift_unknownObjectRelease(v10);
      if (v13)
      {
        v14 = a2 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
        swift_beginAccess(a2 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v18, 0, 0);
        sub_2808C(v14, (uint64_t)v6, &qword_1FD4B0);
        v15 = type metadata accessor for PresentationSource(0);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) == 1)
        {
          __break(1u);
        }
        else
        {
          PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v13, 1, 12, 1, 0, 0);

          (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
        }
      }
    }
  }
}

char *UIViewController.registerForPreviewing(sourceView:handler:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  id v12;

  v7 = objc_allocWithZone((Class)type metadata accessor for ContextActionsPresentationRegistration());
  v8 = v3;
  swift_retain();
  v9 = (char *)sub_72324(v8, a2, a3);
  v10 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v9);
  v11 = *(void **)&v9[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction];
  *(_QWORD *)&v9[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction] = v10;
  v12 = v10;

  objc_msgSend(a1, "addInteraction:", v12);
  return v9;
}

void UIViewController.unregisterForPreviewing(registration:)(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction);
  if (v1)
  {
    v4 = v1;
    v2 = objc_msgSend(v4, "view");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "removeInteraction:", v4);

    }
  }
}

id sub_735CC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

id _s12NowPlayingUI38ContextActionsPresentationRegistrationC22contextMenuInteraction_016configurationForI10AtLocationSo09UIContextI13ConfigurationCSgSo0oiJ0C_So7CGPointVtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void **v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v1 = v0;
  v2 = (*(uint64_t (**)(uint64_t))(v0
                                          + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_handler))(v0);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = swift_allocObject(&unk_1CB988, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, v1);
  v5 = swift_allocObject(&unk_1CB9B0, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v17 = sub_73E98;
  v18 = v5;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_735CC;
  v16 = &block_descriptor_32;
  v7 = _Block_copy(&v13);
  v8 = v18;
  swift_retain_n(v3, 2);
  swift_retain();
  swift_retain();
  swift_release(v8);
  v17 = sub_73EA0;
  v18 = v3;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_8DB04;
  v16 = &block_descriptor_35;
  v9 = _Block_copy(&v13);
  v10 = v18;
  swift_retain();
  v11 = objc_msgSend(v6, "configurationWithIdentifier:previewProvider:actionProvider:", 0, v7, v9, swift_release(v10).n128_f64[0]);
  swift_release(v5);
  swift_release(v3);
  _Block_release(v9);
  _Block_release(v7);
  swift_release(v3);
  swift_release(v4);
  return v11;
}

double sub_737D0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v3 = (*(uint64_t (**)(uint64_t))(v1
                                          + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_handler))(v1);
  if (v3)
  {
    v5 = v3;
    objc_msgSend(a1, "setPreferredCommitStyle:", (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 200))(v3));
    v8[4] = sub_73E3C;
    v9 = v5;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_F528;
    v8[3] = &block_descriptor_23;
    v6 = _Block_copy(v8);
    v7 = v9;
    swift_retain();
    objc_msgSend(a1, "addCompletion:", v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_738BC(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t (*v15)();
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  _QWORD v21[5];

  v3 = objc_msgSend(a1, "view");
  if (!v3
    || (v21[0] = v3,
        v4 = sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr),
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD9E0),
        (swift_dynamicCast(&v13, v21, v4, v5, 6) & 1) == 0))
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    return sub_9944((uint64_t)&v13, (uint64_t *)&unk_1FD9D0);
  }
  if (!*((_QWORD *)&v14 + 1))
    return sub_9944((uint64_t)&v13, (uint64_t *)&unk_1FD9D0);
  sub_27890(&v13, (uint64_t)v21);
  sub_DF78((uint64_t)v21, (uint64_t)v20);
  sub_DF78((uint64_t)v20, (uint64_t)v17);
  v6 = swift_allocObject(&unk_1CB8E8, 56, 7);
  sub_27890(v20, v6 + 16);
  if (a2)
  {
    v7 = swift_allocObject(&unk_1CB910, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_73DC8;
    *(_QWORD *)(v7 + 24) = v6;
    v15 = sub_72310;
    v16 = v7;
    *(_QWORD *)&v13 = _NSConcreteStackBlock;
    *((_QWORD *)&v13 + 1) = 1107296256;
    *(_QWORD *)&v14 = sub_F528;
    *((_QWORD *)&v14 + 1) = &block_descriptor_20;
    v8 = _Block_copy(&v13);
    v9 = v16;
    swift_unknownObjectRetain(a2);
    swift_retain();
    objc_msgSend(a2, "addAnimations:", v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);
    swift_release(v6);
    swift_unknownObjectRelease(a2);
  }
  else
  {
    v11 = v18;
    v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(1, v11, v12);
    swift_release(v6);
  }
  __swift_destroy_boxed_opaque_existential_0(v17);
  return __swift_destroy_boxed_opaque_existential_0(v21);
}

uint64_t sub_73AA8(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t (*v16)();
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  __int128 v21[2];
  _QWORD v22[5];

  *(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_showingRealPreview) = 0;
  v4 = objc_msgSend(a1, "view");
  if (!v4
    || (v22[0] = v4,
        v5 = sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr),
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD9E0),
        (swift_dynamicCast(&v14, v22, v5, v6, 6) & 1) == 0))
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_9944((uint64_t)&v14, (uint64_t *)&unk_1FD9D0);
  }
  if (!*((_QWORD *)&v15 + 1))
    return sub_9944((uint64_t)&v14, (uint64_t *)&unk_1FD9D0);
  sub_27890(&v14, (uint64_t)v22);
  sub_DF78((uint64_t)v22, (uint64_t)v21);
  sub_DF78((uint64_t)v21, (uint64_t)v18);
  v7 = swift_allocObject(&unk_1CB870, 56, 7);
  sub_27890(v21, v7 + 16);
  if (a2)
  {
    v8 = swift_allocObject(&unk_1CB898, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_73D9C;
    *(_QWORD *)(v8 + 24) = v7;
    v16 = sub_F2F8;
    v17 = v8;
    *(_QWORD *)&v14 = _NSConcreteStackBlock;
    *((_QWORD *)&v14 + 1) = 1107296256;
    *(_QWORD *)&v15 = sub_F528;
    *((_QWORD *)&v15 + 1) = &block_descriptor_10_0;
    v9 = _Block_copy(&v14);
    v10 = v17;
    swift_unknownObjectRetain(a2);
    swift_retain();
    objc_msgSend(a2, "addAnimations:", v9, swift_release(v10).n128_f64[0]);
    _Block_release(v9);
    swift_release(v7);
    swift_unknownObjectRelease(a2);
  }
  else
  {
    v12 = v19;
    v13 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(0, v12, v13);
    swift_release(v7);
  }
  __swift_destroy_boxed_opaque_existential_0(v18);
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

uint64_t type metadata accessor for ContextActionsPresentationRegistration()
{
  return objc_opt_self(_TtC12NowPlayingUI38ContextActionsPresentationRegistration);
}

uint64_t sub_73CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_73D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_73D50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_73D7C()
{
  uint64_t v0;

  sub_73324(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_11(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_73D9C()
{
  return sub_73DD0(0);
}

uint64_t sub_73DA4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_73DC8()
{
  return sub_73DD0(1);
}

uint64_t sub_73DD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(a1, v3, v4);
}

uint64_t sub_73E18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_73E3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_73E48()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_73E6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_73E98()
{
  uint64_t v0;

  return sub_724B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

UIMenu sub_73EA0()
{
  return ContextActionsConfiguration.menu(extraContextMenuElements:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for NowPlayingControlsMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NowPlayingControlsMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingControlsMetrics()
{
  return &type metadata for NowPlayingControlsMetrics;
}

BOOL sub_73F70(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_73FC8((double *)v9, (double *)v10);
}

BOOL sub_73FC8(double *a1, double *a2)
{
  return *a1 == *a2
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7]
      && a1[8] == a2[8]
      && a1[9] == a2[9]
      && a1[10] == a2[10]
      && a1[11] == a2[11];
}

void _s10AttributesVwxx(id *a1)
{

}

uint64_t _s10AttributesVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 52) = *(_QWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t _s10AttributesVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  return a1;
}

uint64_t _s10AttributesVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 52) = *(_QWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  return a1;
}

ValueMetadata *_s10AttributesVMa()
{
  return &_s10AttributesVN;
}

uint64_t sub_7425C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  char IsAccessibilityContentSizeCategory;
  double v12;
  _DWORD *v13;
  NSString *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  void *v18;
  NSString *v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  double v24;
  NSString *v25;
  id v26;
  char v27;
  id v28;
  NSString *v29;
  char v30;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;

  v2 = v1;
  v4 = sub_C9BB8((uint64_t)_swiftEmptyArrayStorage);
  v5 = objc_msgSend((id)objc_opt_self(NSParagraphStyle), "defaultParagraphStyle");
  v6 = objc_msgSend(v5, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(v32, v6);
  swift_unknownObjectRelease(v6);
  v7 = sub_753B0();
  swift_dynamicCast(&v35, v32, (char *)&type metadata for Any + 8, v7, 7);
  v8 = v35;
  objc_msgSend(v35, "setLineBreakMode:", *(_QWORD *)(v2 + 32));
  objc_msgSend(v8, "setLineSpacing:", *(double *)(v2 + 40));
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v10);
  if ((sub_15F6F8() & 1) != 0)
  {
    if ((IsAccessibilityContentSizeCategory & 1) != 0)
      v13 = (_DWORD *)(v2 + 60);
    else
      v13 = (_DWORD *)(v2 + 56);
  }
  else
  {
    v13 = (_DWORD *)(v2 + 52);
  }
  LODWORD(v12) = *v13;
  objc_msgSend(v8, "setHyphenationFactor:", v12);
  objc_msgSend(v8, "setAlignment:", sub_753EC(*(_BYTE *)(v2 + 24)));
  v14 = NSParagraphStyleAttributeName;
  v15 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  v32[0] = v4;
  sub_13D4F4((uint64_t)v15, v14, isUniquelyReferenced_nonNull_native);
  v17 = v32[0];

  swift_bridgeObjectRelease(0x8000000000000000);
  v18 = *(void **)v2;
  v19 = NSFontAttributeName;
  v20 = objc_msgSend(v18, "preferredFont");
  v21 = swift_isUniquelyReferenced_nonNull_native(v17);
  v32[0] = v17;
  sub_13D4F4((uint64_t)v20, v19, v21);
  v22 = v32[0];

  swift_bridgeObjectRelease(0x8000000000000000);
  sub_74A60((_QWORD *)(v2 + 16), &v34);
  sub_74A60(&v34, &v35);
  v23 = v35;
  if (!v35)
    v23 = a1;
  sub_30508(&v34);
  objc_msgSend(v23, "alphaComponent");
  if (v24 > 0.0)
  {
    v25 = NSBackgroundColorAttributeName;
    v26 = v23;
    v27 = swift_isUniquelyReferenced_nonNull_native(v22);
    v32[0] = v22;
    sub_13D4F4((uint64_t)v26, v25, v27);
    v22 = v32[0];

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  sub_74A60((_QWORD *)(v2 + 8), &v33);
  sub_74A60(&v33, v32);
  v28 = (id)v32[0];
  if (!v32[0])
    v28 = a1;
  v29 = NSForegroundColorAttributeName;
  sub_30508(&v33);
  v30 = swift_isUniquelyReferenced_nonNull_native(v22);
  sub_13D4F4((uint64_t)v28, v29, v30);

  swift_bridgeObjectRelease(0x8000000000000000);
  return v22;
}

uint64_t sub_745B0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14[0] = a2;
    v14[1] = a3;
    static Locale.current.getter(v7);
    v10 = type metadata accessor for Locale(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
    v11 = sub_11CEC();
    if (a1 == 1)
      v12 = StringProtocol.uppercased(with:)(v9, &type metadata for String, v11);
    else
      v12 = StringProtocol.lowercased(with:)(v9, &type metadata for String, v11);
    a2 = v12;
    sub_75370((uint64_t)v9);
  }
  else
  {
    swift_bridgeObjectRetain(a3);
  }
  return a2;
}

id sub_746EC(uint64_t a1, uint64_t a2)
{
  void *v4;
  id result;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v4 = *(void **)a1;
  if (v4 == *(void **)a2 || (result = objc_msgSend(v4, "isEqual:"), (_DWORD)result))
  {
    sub_74A60((_QWORD *)(a1 + 8), &v11);
    sub_74A60((_QWORD *)(a2 + 8), &v10);
    sub_74A60(&v11, &v12);
    v6 = v12;
    if (v12)
    {
      sub_74A60(&v10, &v13);
      if (!v13)
        return 0;
      if (v6 != v13)
      {
        result = objc_msgSend(v6, "isEqual:");
        if (!(_DWORD)result)
          return result;
      }
    }
    else
    {
      sub_74A60(&v10, &v13);
      if (v13)
        return 0;
    }
    sub_74A60((_QWORD *)(a1 + 16), &v9);
    sub_74A60((_QWORD *)(a2 + 16), &v8);
    sub_74A60(&v9, &v14);
    v7 = v14;
    if (v14)
    {
      sub_74A60(&v8, &v15);
      if (v15)
      {
        if (v7 != v15)
        {
          result = objc_msgSend(v7, "isEqual:");
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_15;
      }
    }
    else
    {
      sub_74A60(&v8, &v15);
      if (!v15)
      {
LABEL_15:
        if (*(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24)
          && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
          && (static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 40), *(double *)(a2 + 40)) & 1) != 0
          && *(float *)(a1 + 52) == *(float *)(a2 + 52))
        {
          return (id)(*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48));
        }
      }
    }
    return 0;
  }
  return result;
}

void sub_7487C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  Swift::UInt v8;
  Swift::UInt32 v9;

  v2 = v1;
  Hasher._combine(_:)((Swift::UInt)objc_msgSend(*(id *)v1, "hash"));
  v4 = *(void **)(v1 + 8);
  if (v4)
  {
    v5 = v4;
    NSObject.hash(into:)(a1);

    v6 = *(void **)(v2 + 16);
    if (v6)
    {
LABEL_3:
      v7 = v6;
      NSObject.hash(into:)(a1);

      goto LABEL_6;
    }
  }
  else
  {
    Hasher._combine(_:)(0xF4240uLL);
    v6 = *(void **)(v1 + 16);
    if (v6)
      goto LABEL_3;
  }
  Hasher._combine(_:)(0xF4240uLL);
LABEL_6:
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + 24));
  Hasher._combine(_:)(*(_QWORD *)(v2 + 32));
  v8 = CGFloat.roundInteger.getter(*(double *)(v2 + 40));
  Hasher._combine(_:)(v8);
  if ((*(_DWORD *)(v2 + 52) & 0x7FFFFFFF) != 0)
    v9 = *(_DWORD *)(v2 + 52);
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + 48));
}

Swift::Int sub_74958()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_7487C((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_74998(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_7487C((uint64_t)v2);
  return Hasher._finalize()();
}

unint64_t sub_749D0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return (unint64_t)sub_746EC((uint64_t)v7, (uint64_t)v8) & 1;
}

unint64_t sub_74A1C()
{
  unint64_t result;

  result = qword_1FD9F0;
  if (!qword_1FD9F0)
  {
    result = swift_getWitnessTable(&unk_16E490, &_s10AttributesVN);
    atomic_store(result, (unint64_t *)&qword_1FD9F0);
  }
  return result;
}

_QWORD *sub_74A60(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

unint64_t sub_74AA4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_75BD4(*a1);
  *a2 = result;
  return result;
}

uint64_t *sub_74ACC@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_74AE4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

Swift::Int sub_74AF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD v14[12];
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  uint64_t v20;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  v4 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  Hasher.init(_seed:)(v14, 0);
  if ((v7 & 0x80000000) != 0)
  {
    v12 = String.hashValue.getter(v2, v1);
    Hasher._combine(_:)(~v12);
  }
  else
  {
    v14[9] = v2;
    v14[10] = v1;
    v14[11] = v4;
    v15 = v3;
    v16 = v5;
    v17 = v6;
    v18 = v7;
    v19 = HIDWORD(v7);
    v20 = v8;
    v9 = v4;
    v10 = v2;
    v11 = v1;
    sub_7487C((uint64_t)v14);
    sub_10B64(v2, v1, v4, v3, v5, v6, v7);
  }
  return Hasher._finalize()();
}

void sub_74BD4(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;

  v4 = (void *)*v1;
  v3 = (void *)v1[1];
  v5 = v1[6];
  if ((v5 & 0x80000000) != 0)
  {
    v12 = String.hashValue.getter(*v1, v1[1]);
    Hasher._combine(_:)(~v12);
  }
  else
  {
    v7 = v1[4];
    v6 = v1[5];
    v8 = v1[3];
    v13 = (void *)v1[2];
    v9 = v13;
    v10 = v4;
    v11 = v3;
    sub_7487C(a1);
    sub_10B64(v4, v3, v13, v8, v7, v6, v5);
  }
}

Swift::Int sub_74CC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD v15[12];
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;

  v3 = *(void **)v1;
  v2 = *(void **)(v1 + 8);
  v5 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  Hasher.init(_seed:)(v15, a1);
  if ((v8 & 0x80000000) != 0)
  {
    v13 = String.hashValue.getter(v3, v2);
    Hasher._combine(_:)(~v13);
  }
  else
  {
    v15[9] = v3;
    v15[10] = v2;
    v15[11] = v5;
    v16 = v4;
    v17 = v6;
    v18 = v7;
    v19 = v8;
    v20 = HIDWORD(v8);
    v21 = v9;
    v10 = v5;
    v11 = v3;
    v12 = v2;
    sub_7487C((uint64_t)v15);
    sub_10B64(v3, v2, v5, v4, v6, v7, v8);
  }
  return Hasher._finalize()();
}

uint64_t sub_74DA4(__int128 *a1, __int128 *a2)
{
  __int128 v4[4];
  __int128 v5[4];

  sub_75310(a1, v4);
  sub_75310(a2, v5);
  return sub_74DEC(v4, v5) & 1;
}

uint64_t sub_74DEC(__int128 *a1, __int128 *a2)
{
  int v4;
  unsigned __int8 v5;
  __int128 v6;
  _OWORD v9[3];
  __int128 v10;
  _OWORD v11[4];
  _OWORD v12[3];
  __int128 v13;
  _OWORD v14[3];
  __int128 v15;

  sub_75310(a1, v12);
  v4 = v13;
  *(_QWORD *)&v13 = v13 & 0xFFFFFFFF7FFFFFFFLL;
  if ((v4 & 0x80000000) == 0)
  {
    v14[0] = v12[0];
    v14[1] = v12[1];
    v14[2] = v12[2];
    v15 = v13;
    sub_75310(a2, v9);
    if ((v10 & 0x80000000) == 0)
    {
      *(_QWORD *)&v10 = v10 & 0xFFFFFFFF7FFFFFFFLL;
      v11[0] = v9[0];
      v11[1] = v9[1];
      v11[2] = v9[2];
      v11[3] = v10;
      sub_11D30(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      sub_11D30(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      v5 = sub_746EC((uint64_t)v14, (uint64_t)v11);
      sub_11D30(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
      sub_11D30(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
      return v5 & 1;
    }
LABEL_5:
    v5 = 0;
    return v5 & 1;
  }
  v6 = v12[0];
  sub_75310(a2, v14);
  if ((v15 & 0x80000000) == 0)
    goto LABEL_5;
  *(_QWORD *)&v15 = v15 & 0xFFFFFFFF7FFFFFFFLL;
  if ((_QWORD)v6 == *(_QWORD *)&v14[0] && *((_QWORD *)&v6 + 1) == *((_QWORD *)&v14[0] + 1))
    v5 = 1;
  else
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, *((_QWORD *)&v6 + 1), *(_QWORD *)&v14[0], *((_QWORD *)&v14[0] + 1), 0);
  return v5 & 1;
}

Swift::Int sub_74F24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  Class isa;
  id v7;
  _QWORD v9[9];

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  Hasher.init(_seed:)(v9, 0);
  if ((v4 & 1) != 0)
  {
    v5 = v1;
    NSObject.hash(into:)(v9);
    sub_11BEC(v1, v2, v3, 1);
  }
  else
  {
    String.hash(into:)(v9, v1, v2);
    type metadata accessor for Key(0);
    sub_75328();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v7 = -[objc_class hash](isa, "hash");

    Hasher._combine(_:)((Swift::UInt)v7);
  }
  return Hasher._finalize()();
}

void sub_74FF8(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v6 = v3;
    NSObject.hash(into:)(a1);
    sub_11BEC(v3, v4, v5, 1);
  }
  else
  {
    String.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
    type metadata accessor for Key(0);
    sub_75328();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v8 = -[objc_class hash](isa, "hash");

    Hasher._combine(_:)((Swift::UInt)v8);
  }
}

Swift::Int sub_750C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  Class isa;
  id v8;
  _QWORD v10[9];

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  Hasher.init(_seed:)(v10, a1);
  if ((v5 & 1) != 0)
  {
    v6 = v2;
    NSObject.hash(into:)(v10);
    sub_11BEC(v2, v3, v4, 1);
  }
  else
  {
    String.hash(into:)(v10, v2, v3);
    type metadata accessor for Key(0);
    sub_75328();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v8 = -[objc_class hash](isa, "hash");

    Hasher._combine(_:)((Swift::UInt)v8);
  }
  return Hasher._finalize()();
}

id sub_75198(uint64_t a1, uint64_t a2)
{
  return sub_751BC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

id sub_751BC(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  id v9;
  NSDictionary v10;
  NSDictionary v11;
  Class isa;
  uint64_t v13;
  Class v14;

  if ((a4 & 1) != 0)
  {
    if ((a8 & 1) != 0)
    {
      if (a1 != a5)
        return objc_msgSend(a1, "isEqualToAttributedString:", a5);
      return &dword_0 + 1;
    }
    return 0;
  }
  if ((a8 & 1) != 0)
    return 0;
  if (a1 == a5 && a2 == a6 || (v9 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0) & 1) != 0))
  {
    type metadata accessor for Key(0);
    sub_75328();
    v10.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    if (v10.super.isa != v11.super.isa)
    {
      isa = v11.super.isa;
      v13 = sub_C5C6C(a7);
      v14 = Dictionary._bridgeToObjectiveC()().super.isa;
      v9 = -[objc_class isEqualToDictionary:](v10.super.isa, "isEqualToDictionary:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

      return v9;
    }

    return &dword_0 + 1;
  }
  return v9;
}

_OWORD *sub_75310(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_75328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F9A00;
  if (!qword_1F9A00)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_16A68C, v1);
    atomic_store(result, (unint64_t *)&qword_1F9A00);
  }
  return result;
}

uint64_t sub_75370(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_753B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD9F8;
  if (!qword_1FD9F8)
  {
    v1 = objc_opt_self(NSMutableParagraphStyle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FD9F8);
  }
  return result;
}

uint64_t sub_753EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t))((char *)&loc_75400 + *((int *)qword_75488 + a1)))(4);
}

uint64_t sub_75410()
{
  id v0;
  _BOOL4 v1;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "userInterfaceLayoutDirection") != (char *)&dword_0 + 1;

  return 2 * v1;
}

uint64_t sub_75468()
{
  return 3;
}

uint64_t sub_75470()
{
  return 1;
}

uint64_t sub_75478()
{
  return 0;
}

uint64_t sub_75480()
{
  return 2;
}

void _s10AttributorOwxx(uint64_t a1)
{
  sub_10B64(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

_QWORD *_s10AttributorOwcp(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  sub_10B0C(*(void **)a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

uint64_t _s10AttributorOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  sub_10B0C(*(void **)a2, v4, v5, v6, v7, v8, v9);
  v11 = *(void **)a1;
  v12 = *(void **)(a1 + 8);
  v13 = *(void **)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  sub_10B64(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

uint64_t _s10AttributorOwta(uint64_t a1, _OWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v3 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v10;
  v11 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v11;
  sub_10B64(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t _s10AttributorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x3FFFFFFF);
  v3 = ((*(_DWORD *)(a1 + 48) >> 1) & 0x3FFFFFFE | (*(_DWORD *)(a1 + 48) >> 31)) ^ 0x3FFFFFFF;
  if (v3 >= 0x3FFFFFFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s10AttributorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x3FFFFFFF;
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_QWORD *)(result + 48) = (4 * ((-a2 >> 1) & 0x1FFFFFFF)) | (a2 << 31);
      *(_QWORD *)(result + 56) = 0;
    }
  }
  return result;
}

uint64_t sub_756FC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 51) >> 7;
}

uint64_t sub_75708(uint64_t result)
{
  *(_QWORD *)(result + 48) &= ~0x80000000uLL;
  return result;
}

uint64_t sub_75718(uint64_t result, int a2)
{
  *(_QWORD *)(result + 48) = *(_QWORD *)(result + 48) & 0xFFFFFFFF00000003 | (a2 << 31);
  return result;
}

ValueMetadata *_s10AttributorOMa()
{
  return &_s10AttributorON;
}

void _s16AttributedStringOwxx(uint64_t a1)
{
  sub_11BEC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s16AttributedStringOwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_11B84(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s16AttributedStringOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_11B84(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_11BEC(v7, v8, v9, v10);
  return a1;
}

uint64_t _s16AttributedStringOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_11BEC(v5, v7, v6, v8);
  return a1;
}

uint64_t _s16AttributedStringOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s16AttributedStringOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_758F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_75900(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *_s16AttributedStringOMa()
{
  return &_s16AttributedStringON;
}

uint64_t _s14CapitalizationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_75968 + 4 * byte_16E475[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_7599C + 4 * byte_16E470[v4]))();
}

uint64_t sub_7599C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_759A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x759ACLL);
  return result;
}

uint64_t sub_759B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x759C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_759C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_759CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14CapitalizationOMa()
{
  return &_s14CapitalizationON;
}

uint64_t _s9AlignmentOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_75A34 + 4 * byte_16E47F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_75A68 + 4 * byte_16E47A[v4]))();
}

uint64_t sub_75A68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_75A70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x75A78);
  return result;
}

uint64_t sub_75A84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x75A8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_75A90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_75A98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9AlignmentOMa()
{
  return &_s9AlignmentON;
}

unint64_t sub_75AB8()
{
  unint64_t result;

  result = qword_1FDA00;
  if (!qword_1FDA00)
  {
    result = swift_getWitnessTable(&unk_16E5B4, &_s9AlignmentON);
    atomic_store(result, (unint64_t *)&qword_1FDA00);
  }
  return result;
}

unint64_t sub_75B00()
{
  unint64_t result;

  result = qword_1FDA08;
  if (!qword_1FDA08)
  {
    result = swift_getWitnessTable(&unk_16E654, &_s14CapitalizationON);
    atomic_store(result, (unint64_t *)&qword_1FDA08);
  }
  return result;
}

unint64_t sub_75B48()
{
  unint64_t result;

  result = qword_1FDA10;
  if (!qword_1FDA10)
  {
    result = swift_getWitnessTable(&unk_16E67C, &_s16AttributedStringON);
    atomic_store(result, (unint64_t *)&qword_1FDA10);
  }
  return result;
}

unint64_t sub_75B90()
{
  unint64_t result;

  result = qword_1FDA18;
  if (!qword_1FDA18)
  {
    result = swift_getWitnessTable(&unk_16E6E4, &_s10AttributorON);
    atomic_store(result, (unint64_t *)&qword_1FDA18);
  }
  return result;
}

unint64_t sub_75BD4(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

char *sub_75BF8(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t inited;
  NSString *v21;
  id v22;
  unint64_t v23;
  id v24;
  NSString v25;
  Class isa;
  id v27;
  _QWORD *v28;
  _OWORD *v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  id v39;
  objc_super v41;
  char v42[72];

  v4[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_forSizing] = 0;
  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title];
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = v4;
  v11 = sub_15F6F8();
  v12 = 3;
  if ((v11 & 1) == 0)
    v12 = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleMaximumNumberOfLines] = v12;
  v13 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitle];
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v14 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkPlaceholder];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = -2;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkCatalog] = 0;
  v15 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonSize];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle];
  v17 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:", 0);
  v18 = objc_msgSend(v17, "preferredFont");

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
  inited = swift_initStackObject(v19, v42);
  *(_OWORD *)(inited + 16) = xmmword_16B3D0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_7938C();
  *(_QWORD *)(inited + 40) = v18;
  v21 = NSFontAttributeName;
  v22 = v18;
  v23 = sub_CA4A4(inited);
  v24 = objc_allocWithZone((Class)NSAttributedString);
  v25 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_75328();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v24, "initWithString:attributes:", v25, isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0xE000000000000000;
  v16[16] = 0;
  *((_QWORD *)v16 + 3) = v27;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonPossibleAttributedTitles] = _swiftEmptyArrayStorage;
  v28 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler];
  *v28 = 0;
  v28[1] = 0;
  *(UIOffset *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonOffset] = UIOffsetZero;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle] = 9;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle] = 4;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentViewReservedWidth] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__currentPreferredHeight] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineLeadingAlignment] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineTrailingAlignment] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineLeadingAlignment] = 1;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineTrailingAlignment] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isBottomHairlineVisible] = 0;
  v29 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets];
  v30 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v29 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v29[1] = v30;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineView] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isBottomHairlineVisible] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitleTextDrawingView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floatingBackgroundView] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floating] = 0;
  v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = 9;
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_externalBackgroundColor] = 0;
  v31 = &v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutInvalidationHandler];
  *v31 = 0;
  v31[1] = 0;
  v32 = sub_79948(9);
  v33 = (uint64_t *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textComponents];
  *v33 = v32;
  v33[1] = v34;
  v33[2] = v35;
  v36 = _s4ViewCMa();
  *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v36)), "init");

  v41.receiver = v10;
  v41.super_class = (Class)type metadata accessor for TitleSectionHeaderView();
  v37 = (char *)objc_msgSendSuper2(&v41, "initWithFrame:", a1, a2, a3, a4);
  v38 = objc_msgSend(v37, "layer");
  objc_msgSend(v38, "setAllowsGroupOpacity:", 0);

  v39 = objc_msgSend(v37, "layer");
  objc_msgSend(v39, "setAllowsGroupBlending:", 0);

  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView]);
  if (qword_1F9580 != -1)
    swift_once(&qword_1F9580, sub_FDE14);
  objc_msgSend(v37, "setBackgroundColor:", qword_210308);

  return v37;
}

id sub_761B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

id sub_7625C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitle];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitle];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitle + 8];
  swift_bridgeObjectRetain(v4);
  sub_5129C(v3, v4);
  v5 = *((_QWORD *)v2 + 1);
  v6 = *(_QWORD *)v2 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0)
    v6 = HIBYTE(v5) & 0xF;
  v7 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitleTextDrawingView;
  v8 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitleTextDrawingView];
  if (!v6)
  {
    if (v8)
    {
      objc_msgSend(v8, "removeFromSuperview");
      v12 = *(id *)&v0[v7];
    }
    else
    {
      v12 = 0;
    }
    *(_QWORD *)&v1[v7] = 0;
    goto LABEL_10;
  }
  if (!v8)
  {
    v9 = _s4ViewCMa();
    v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
    v11 = *(void **)&v0[v7];
    *(_QWORD *)&v0[v7] = v10;
    v12 = v10;

    objc_msgSend(v1, "addSubview:", v12);
LABEL_10:

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

double sub_76358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t inited;
  NSString *v17;
  id v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class isa;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  double result;
  uint64_t v28;

  v3 = a2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonPossibleAttributedTitles);
  swift_bridgeObjectRetain(a2);
  v6 = swift_bridgeObjectRetain(v5);
  v7 = sub_79208(v6, a1, v3);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v3);
  if (*(_QWORD *)(v7 + 16))
  {
    a1 = *(_QWORD *)(v7 + 32);
    v8 = *(_QWORD *)(v7 + 40);
    v9 = *(_BYTE *)(v7 + 48);
    v10 = *(void **)(v7 + 56);
    swift_bridgeObjectRetain(v8);
    v11 = v10;
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v7);
    v3 = v8;
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    v12 = (void *)objc_opt_self(MTMPUFontDescriptor);
    swift_bridgeObjectRetain(v3);
    v13 = objc_msgSend(v12, "fontDescriptorWithTextStyle:", 0);
    v14 = objc_msgSend(v13, "preferredFont");

    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
    inited = swift_initStackObject(v15, &v28);
    *(_OWORD *)(inited + 16) = xmmword_16B3D0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 64) = sub_7938C();
    *(_QWORD *)(inited + 40) = v14;
    swift_bridgeObjectRetain(v3);
    v17 = NSFontAttributeName;
    v18 = v14;
    v19 = sub_CA4A4(inited);
    v20 = objc_allocWithZone((Class)NSAttributedString);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    type metadata accessor for Key(0);
    sub_75328();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v20, "initWithString:attributes:", v21, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);
    swift_bridgeObjectRelease(v3);

    v9 = 0;
  }
  v23 = v2 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle;
  v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle + 8);
  v25 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle + 24);
  *(_QWORD *)v23 = a1;
  *(_QWORD *)(v23 + 8) = v3;
  *(_BYTE *)(v23 + 16) = v9;
  *(_QWORD *)(v23 + 24) = v11;
  swift_bridgeObjectRetain(v3);
  v26 = v11;

  swift_bridgeObjectRelease(v24);
  sub_765B4();

  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

id sub_765B4()
{
  char *v0;
  char *v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle + 8];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle] & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v4 = HIBYTE(v3) & 0xF;
  v5 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton;
  v6 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton];
  if (v4)
  {
    if (v6)
      goto LABEL_6;
    v7 = (void *)objc_opt_self(MTMPButton);
    v8 = objc_msgSend(v7, "buttonWithType:", 1);
    objc_msgSend(v7, "easyTouchDefaultHitRectInsets");
    objc_msgSend(v8, "setHitRectInsets:");
    objc_msgSend(v8, "setContentHorizontalAlignment:", 2);
    v9 = swift_allocObject(&unk_1CC080, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v1);
    swift_retain();
    sub_14809C(64, (uint64_t)sub_793EC, v9);
    swift_release_n(v9, 2);
    objc_msgSend(v1, "addSubview:", v8);
    v10 = *(void **)&v1[v5];
    *(_QWORD *)&v1[v5] = v8;

    v6 = *(void **)&v1[v5];
    if (v6)
LABEL_6:
      objc_msgSend(v6, "setAttributedTitle:forState:", *((_QWORD *)v2 + 3), 0);
  }
  else if (v6)
  {
    v11 = v6;
    objc_msgSend(v11, "removeFromSuperview");
    v12 = *(void **)&v1[v5];
    *(_QWORD *)&v1[v5] = 0;

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_76734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void *);
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void *))(Strong + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler + 8);
      swift_retain();
      v5(v4);
      sub_145A0((uint64_t)v5, v6);
    }

  }
}

uint64_t sub_767BC()
{
  char *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  double v5;
  CGFloat v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  int v22;
  uint64_t v23;
  void *v24;
  SEL *v25;
  uint64_t isEscapingClosureAtFileLocation;
  id v27;
  uint64_t v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  id v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  void *v48;
  double v49;
  double v50;
  id v51;
  double v52;
  double v53;
  id v54;
  uint64_t v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  CGFloat v62;
  id v63;
  CGFloat MaxY;
  double v65;
  CGFloat v66;
  double v67;
  double v68;
  double v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  unsigned int v73;
  double v74;
  uint64_t v75;
  double v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  double v83;
  uint64_t v84;
  CGFloat Width;
  double v86;
  void *v87;
  double v88;
  void *v89;
  uint64_t v90;
  unsigned __int8 *v91;
  SEL *v92;
  id v93;
  id v94;
  double v95;
  uint64_t v96;
  double v97;
  double v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  double v108;
  CGFloat x;
  CGFloat y;
  CGFloat v111;
  CGFloat height;
  double v113;
  double v114;
  void *v115;
  uint64_t v116;
  void *v117;
  _OWORD *v118;
  id v119;
  uint64_t v120;
  void *v121;
  id v122;
  double v123;
  double v124;
  char **v125;
  double v126;
  void *v127;
  uint64_t v128;
  id v129;
  double v130;
  void *v131;
  void *v132;
  CGSize v133;
  const char *v134;
  id v135;
  void *v136;
  id v137;
  id v138;
  double v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t);
  void *v142;
  id v143;
  double v144;
  id v145;
  double v146;
  CGFloat v147;
  CGFloat MinY;
  __int128 v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  CGFloat v155;
  CGFloat v156;
  CGFloat v157;
  CGFloat v158;
  id v159;
  double MinX;
  CGFloat v161;
  CGFloat v162;
  double v163;
  CGFloat v164;
  CGFloat v165;
  id v166;
  CGFloat MaxX;
  CGSize v168;
  double v169;
  CGFloat v170;
  id v171;
  id v172;
  uint64_t v173;
  _BYTE *v174;
  void *v175;
  id v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  double v180;
  void *v181;
  CGFloat v182;
  CGFloat v183;
  double v184;
  CGFloat v185;
  CGFloat v186;
  id v187;
  double v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  void *v198;
  id v199;
  __n128 v200;
  double v201;
  char *v202;
  double v203;
  double v204;
  double v205;
  double v206;
  double v207;
  double v208;
  double v209;
  double v210;
  uint64_t v211;
  double v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  double v221;
  double v222;
  double v223;
  void *v224;
  uint64_t v225;
  void *v226;
  _OWORD *v227;
  id v228;
  id v229;
  uint64_t v230;
  double v231;
  double v232;
  double v233;
  CGFloat v234;
  CGFloat v235;
  CGFloat v236;
  CGFloat v237;
  CGFloat v238;
  id v239;
  double v240;
  double v241;
  id v242;
  id v243;
  double v244;
  double v245;
  double *v247;
  double v248;
  double v249;
  double v250;
  double v251;
  double v252;
  double v253;
  id v254;
  id v255;
  CGFloat v256;
  uint64_t v257;
  double v258;
  void *v259;
  id v260;
  double v261;
  double v262;
  CGFloat v263;
  double v264;
  CGFloat v265;
  double v266;
  CGFloat v267;
  double v268;
  double v269;
  CGSize v270;
  id v271;
  double v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  double v278;
  uint64_t v279;
  uint64_t v280;
  double v281;
  double v282;
  double v283;
  CGFloat v284;
  double v285;
  double v286;
  double v287;
  double v288;
  CGFloat v289;
  double v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  _OWORD v299[8];
  CGSize v300;
  CGRect v301;
  objc_super v302;
  _OWORD v303[3];
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  _OWORD v309[3];
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  _OWORD v315[6];
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  _QWORD v338[5];
  uint64_t v339;
  CGRect v340;
  CGRect v341;
  CGRect v342;
  CGRect v343;
  CGRect v344;
  CGRect v345;
  CGRect v346;
  CGRect v347;
  CGRect v348;
  CGRect v349;
  CGRect v350;
  CGRect v351;
  CGRect v352;
  CGRect v353;
  CGRect v354;
  CGRect v355;
  CGRect v356;

  v1 = (unsigned __int8 *)v0;
  v2 = type metadata accessor for CGRect.LayoutAxis(0);
  v275 = *(_QWORD *)(v2 - 8);
  v276 = v2;
  __chkstk_darwin(v2);
  v274 = (char *)&v273 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)type metadata accessor for TitleSectionHeaderView();
  v302.receiver = v0;
  v302.super_class = v4;
  objc_msgSendSuper2(&v302, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v288 = v5;
  v289 = v6;
  v287 = v7;
  v9 = v8;
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v11 = v10;
  v13 = v12;
  v14 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets];
  v15 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets + 16];
  v17 = v16 + *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets + 8];
  v19 = v18 + *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets + 24];
  v20 = objc_msgSend(v0, "traitCollection");
  v285 = UITraitCollection.safeDisplayScale.getter();

  v21 = COERCE_DOUBLE(objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection"));
  v22 = v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible];
  v23 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineView;
  v24 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineView];
  v25 = (SEL *)&selRef_boundingRectWithSize_options_attributes_context_;
  v290 = v9;
  if (v22 != 1)
  {
    v286 = 0.0;
    if (v24)
      objc_msgSend(v24, "removeFromSuperview");
    goto LABEL_17;
  }
  v283 = *(double *)&v11;
  v284 = v13;
  v281 = v14;
  v282 = v15;
  if (!v24)
  {
    v27 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v28 = qword_1F9590;
    isEscapingClosureAtFileLocation = (uint64_t)v27;
    if (v28 != -1)
      goto LABEL_99;
    goto LABEL_7;
  }
  isEscapingClosureAtFileLocation = (uint64_t)v24;
  while (1)
  {
    v30 = 0.0;
    if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineLeadingAlignment])
      v31 = v17;
    else
      v31 = 0.0;
    v33 = v287;
    v32 = v288;
    v34 = v287 - v31;
    if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineLeadingAlignment])
      v35 = v17;
    else
      v35 = v288;
    if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineTrailingAlignment])
      v30 = v19;
    v36 = v34 - v30;
    v37 = v17;
    v38 = 1.0 / v285;
    v39 = v24;
    v340.origin.x = v35;
    v40 = v19;
    v41 = v289;
    v340.origin.y = v289;
    v340.size.width = v36;
    v340.size.height = v38;
    v286 = CGRectGetHeight(v340) + 0.0;
    v42 = v41;
    v43 = v41;
    v19 = v40;
    v44 = v36;
    v9 = v290;
    v45 = v38;
    v17 = v37;
    CGRect.applyingLayoutDirection(_:inBounds:)(*(_QWORD *)&v21, v32, v42, v33, v290, v35, v43, v44, v45);
    objc_msgSend((id)isEscapingClosureAtFileLocation, v25[33]);

    *(double *)&v11 = v283;
    v13 = v284;
    v14 = v281;
    v15 = v282;
LABEL_17:
    v46 = *(double *)&v11 + v14;
    v47 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineView;
    v48 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineView];
    if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isBottomHairlineVisible] == 1)
    {
      v281 = v13 + v15;
      v282 = v46;
      v49 = v287;
      v50 = v288;
      if (v48)
      {
        v51 = v48;
      }
      else
      {
        v54 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        v55 = qword_1F9590;
        v51 = v54;
        if (v55 != -1)
          swift_once(&qword_1F9590, sub_FDE64);
        objc_msgSend(v51, "setBackgroundColor:", qword_210318);
        objc_msgSend(v1, "addSubview:", v51);
        v56 = *(void **)&v1[v47];
        *(_QWORD *)&v1[v47] = v51;

        v48 = 0;
      }
      v57 = 0.0;
      if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineLeadingAlignment])
        v58 = v17;
      else
        v58 = 0.0;
      v59 = v49 - v58;
      if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineLeadingAlignment])
        v60 = v17;
      else
        v60 = v50;
      if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineTrailingAlignment])
        v57 = v19;
      v283 = v17;
      v61 = v59 - v57;
      v62 = 1.0 / v285;
      v63 = v48;
      v341.origin.x = v50;
      v53 = v289;
      v9 = v290;
      v341.origin.y = v289;
      v341.size.width = v49;
      v341.size.height = v290;
      MaxY = CGRectGetMaxY(v341);
      v284 = v19;
      v65 = MaxY;
      v342.origin.x = v60;
      v342.origin.y = v53;
      v342.size.width = v61;
      v342.size.height = v62;
      v66 = v65 - CGRectGetHeight(v342);
      v343.origin.x = v60;
      v343.origin.y = v66;
      v343.size.width = v61;
      v343.size.height = v62;
      v286 = v286 + CGRectGetHeight(v343);
      v67 = v66;
      v68 = v61;
      v17 = v283;
      v19 = v284;
      v69 = v62;
      v52 = v50;
      CGRect.applyingLayoutDirection(_:inBounds:)(*(_QWORD *)&v21, v50, v53, v49, v9, v60, v67, v68, v69);
      objc_msgSend(v51, v25[33]);

      v46 = v282;
    }
    else
    {
      v52 = v288;
      if (v48)
        objc_msgSend(v48, "removeFromSuperview");
      v53 = v289;
      v49 = v287;
    }
    v301.origin.x = UIEdgeInsetsInsetRect(v52, v53, v49, v9, v46, v17);
    v301.origin.y = v70;
    v301.size.width = v71;
    v301.size.height = v72;
    v73 = v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkPlaceholder + 16];
    v74 = v49;
    v282 = v21;
    if (v73 < 0xFE
      || *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkCatalog])
    {
      v75 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton;
      v76 = v289;
      if (*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton])
        goto LABEL_42;
      v77 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
      v78 = swift_allocObject(&unk_1CC080, 24, 7);
      swift_unknownObjectWeakInit(v78 + 16, v1);
      swift_retain();
      sub_1480B0(64, (uint64_t)sub_793EC, v78);
      swift_release_n(v78, 2);
      objc_msgSend(v77, "setClipsToBounds:", 1);
      objc_msgSend(v1, "addSubview:", v77);
      v79 = *(void **)&v1[v75];
      *(_QWORD *)&v1[v75] = v77;
    }
    else
    {
      v80 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton;
      v81 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton];
      v76 = v289;
      if (!v81)
        goto LABEL_42;
      v82 = v81;
      objc_msgSend(v82, "removeFromSuperview");
      v79 = *(void **)&v1[v80];
      *(_QWORD *)&v1[v80] = 0;

    }
LABEL_42:
    v300 = (CGSize)0;
    v83 = *(double *)&OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton])
    {
      v300 = *(CGSize *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonSize];
      Width = CGRectGetWidth(v301);
      v281 = 0.0;
      v283 = 0.0;
      v86 = Width - v300.width + -16.0;
      goto LABEL_53;
    }
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton])
    {
      v86 = CGRectGetWidth(v301);
      v281 = 0.0;
      v283 = 0.0;
      v300 = (CGSize)0;
      goto LABEL_53;
    }
    v21 = *(double *)&OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton;
    if (qword_1F94E8 != -1)
      swift_once(&qword_1F94E8, sub_784FC);
    v25 = (SEL *)qword_1FDA20;
    v87 = (void *)objc_opt_self(UIView);
    v88 = COERCE_DOUBLE(swift_allocObject(&unk_1CC0F8, 48, 7));
    *(_QWORD *)(*(_QWORD *)&v88 + 16) = v1;
    *(_QWORD *)(*(_QWORD *)&v88 + 24) = v25;
    *(_QWORD *)(*(_QWORD *)&v88 + 32) = &v301;
    *(_QWORD *)(*(_QWORD *)&v88 + 40) = &v300;
    v23 = swift_allocObject(&unk_1CC120, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_7A480;
    *(double *)(v23 + 24) = v88;
    v283 = v88;
    v338[4] = sub_ECE4;
    v339 = v23;
    v338[0] = _NSConcreteStackBlock;
    v338[1] = 1107296256;
    v338[2] = sub_F318;
    v338[3] = &block_descriptor_13_2;
    v89 = _Block_copy(v338);
    v90 = v339;
    v91 = v1;
    v92 = v25;
    swift_retain();
    objc_msgSend(v87, "performWithoutAnimation:", v89, swift_release(v90).n128_f64[0]);
    _Block_release(v89);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v23, "", 128, 415, 44, 1);
    swift_release(v23);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_99:
    swift_once(&qword_1F9590, sub_FDE64);
LABEL_7:
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setBackgroundColor:", qword_210318);
    objc_msgSend(v1, "addSubview:", isEscapingClosureAtFileLocation);
    v29 = *(void **)&v1[v23];
    *(_QWORD *)&v1[v23] = isEscapingClosureAtFileLocation;

    v24 = 0;
  }
  v93 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v94 = objc_msgSend(v93, "preferredContentSizeCategory");

  LODWORD(v93) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v94);
  v95 = CGRectGetWidth(v301);
  if ((_DWORD)v93)
    v86 = v95;
  else
    v86 = v95 - v300.width + -16.0;
  v281 = COERCE_DOUBLE(sub_7A480);
  v83 = v21;
LABEL_53:
  v96 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentViewReservedWidth;
  v97 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentViewReservedWidth];
  v98 = static CGFloat.epsilon.getter(v84);
  v279 = v96;
  if (v98 < v97)
    v86 = v86 - *(double *)&v1[v96];
  v280 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache;
  v99 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache];
  v277 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitleTextDrawingView;
  if (v99)
  {
    v284 = v83;
    v100 = 0.8;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitleTextDrawingView])
      v100 = 1.0;
    v101 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textComponents];
    v102 = *(_QWORD *)(v101 + 128);
    v103 = *(_QWORD *)(v101 + 136);
    v105 = *(_OWORD *)(v101 + 64);
    v104 = *(_OWORD *)(v101 + 80);
    v106 = *(_OWORD *)(v101 + 96);
    v337 = *(_OWORD *)(v101 + 112);
    v336 = v106;
    v334 = v105;
    v335 = v104;
    v107 = *(_OWORD *)(v101 + 48);
    v332 = *(_OWORD *)(v101 + 32);
    v333 = v107;
    v108 = v86 * v100;
    x = v301.origin.x;
    y = v301.origin.y;
    v111 = v301.size.width;
    height = v301.size.height;
    swift_bridgeObjectRetain(v103);
    swift_retain();
    sub_11D30(&v332, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    v344.origin.x = x;
    v344.origin.y = y;
    v344.size.width = v111;
    v344.size.height = height;
    v113 = CGRectGetHeight(v344);
    v114 = *(double *)(v99 + 32);
    v115 = *(void **)(v99 + 48);
    v116 = *(_QWORD *)(v99 + 56);
    v117 = *(void **)(v99 + 64);
    v118 = *(_OWORD **)(v99 + 72);
    v119 = *(id *)(v99 + 40);
    sub_10BBC(v102, v103, COERCE_DOUBLE(&v332), v119, v115, v116, v117, v118, v303, v108, v113, v114);
    v320 = v305;
    v321 = v306;
    v322 = v307;
    v323 = v308;
    v316 = v303[0];
    v317 = v303[1];
    v318 = v303[2];
    v319 = v304;

    v120 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView;
    v121 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView];
    v328 = v320;
    v329 = v321;
    v330 = v322;
    v331 = v323;
    v324 = v316;
    v325 = v317;
    v326 = v318;
    v327 = v319;
    UIScreen.Dimensions.size.getter(&v324);
    sub_523EC((uint64_t)&v324, (uint64_t)v338);
    v122 = v121;
    sub_11BB4((uint64_t)v303);
    sub_147500(v338);

    if ((BYTE3(v335) & 0x80) != 0)
    {
      v140 = *((_QWORD *)&v333 + 1);
      v141 = (uint64_t (*)(uint64_t, uint64_t))v333;
      swift_retain();
      v142 = (void *)v141(v102, v103);
      v143 = objc_msgSend(v142, "MTMPU_tallestFontFromAttributes");

      v125 = &selRef_boundingRectWithSize_options_attributes_context_;
      if (v143)
      {
        v144 = *(double *)&v337;
        v145 = v143;
        objc_msgSend(v145, "_scaledValueForValue:", v144);
        v124 = v146;

        swift_release(v140);
      }
      else
      {
        swift_release(v140);
        v124 = *(double *)&v337;
      }
    }
    else
    {
      objc_msgSend((id)v332, "scaledValueForValue:", *(double *)&v337);
      v124 = v123;
      v125 = &selRef_boundingRectWithSize_options_attributes_context_;
    }
    v147 = v284;
    MinY = CGRectGetMinY(v301);
    v149 = v304;
    v150 = *((double *)&v307 + 1);
    v151 = *(double *)&v307;
    v284 = v124 + MinY;
    v152 = v124 + MinY - *(double *)&v307;
    v153 = *((double *)&v149 + 1) + v124 + CGRectGetMinY(v301) - v151 - v150;
    v154 = sub_FD5D4(v102, v103);
    swift_bridgeObjectRelease(v103);
    v278 = v154 + v153;
    v155 = v301.origin.x;
    v156 = v301.origin.y;
    v157 = v301.size.width;
    v158 = v301.size.height;
    v159 = *(id *)&v1[v120];
    v345.origin.x = v155;
    v345.origin.y = v156;
    v345.size.width = v157;
    v345.size.height = v158;
    MinX = CGRectGetMinX(v345);
    v126 = v282;
    v52 = v288;
    v76 = v289;
    v74 = v287;
    CGRect.applyingLayoutDirection(_:inBounds:)(*(_QWORD *)&v282, v288, v289, v287, v290, MinX, v152, *(double *)&v149, *((double *)&v149 + 1));
    objc_msgSend(v159, v125[33]);
    sub_11D6C((uint64_t)v303);
    swift_release(v99);
    sub_11D30(&v332, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);

    v301.origin.x = *(double *)&v149 + v301.origin.x;
    v301.size.width = v301.size.width - *(double *)&v149;
    v127 = *(void **)&v1[*(_QWORD *)&v147];
    if (v127)
    {
LABEL_70:
      v161 = v301.origin.x;
      v162 = v301.origin.y;
      v163 = v52;
      v164 = v301.size.width;
      v165 = v301.size.height;
      v166 = v127;
      v346.origin.x = v161;
      v346.origin.y = v162;
      v346.size.width = v164;
      v346.size.height = v165;
      v52 = v163;
      MaxX = CGRectGetMaxX(v346);
      v168 = v300;
      v170 = v284 - v300.height + 8.0;
      v347.origin.x = MaxX - v300.width + 0.0;
      v169 = v347.origin.x;
      v347.origin.y = v170;
      v347.size = v300;
      v130 = CGRectGetHeight(v347);
      v171 = v166;
      CGRect.applyingLayoutDirection(_:inBounds:)(*(_QWORD *)&v126, v163, v76, v74, v290, v169, v170, v168.width, v168.height);
      objc_msgSend(v171, v125[33]);

      v172 = objc_msgSend(v171, "layer");
      v348.origin.x = v169;
      v348.origin.y = v170;
      v348.size = v168;
      objc_msgSend(v172, "setCornerRadius:", CGRectGetWidth(v348) * 0.5);

      v173 = swift_allocObject(&unk_1CC0A8, 17, 7);
      *(_BYTE *)(v173 + 16) = 0;
      v174 = (_BYTE *)(v173 + 16);
      v175 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkCatalog];
      if (v175)
      {
        v176 = v175;
        objc_msgSend(v176, "setDestinationScale:", v285);
        objc_msgSend(v176, "setFittingSize:", v168);
        *(_QWORD *)&v326 = sub_7A434;
        *((_QWORD *)&v326 + 1) = v173;
        *(_QWORD *)&v324 = _NSConcreteStackBlock;
        *((_QWORD *)&v324 + 1) = 1107296256;
        *(_QWORD *)&v325 = sub_77EEC;
        *((_QWORD *)&v325 + 1) = &block_descriptor_12;
        v177 = _Block_copy(&v324);
        v178 = *((_QWORD *)&v326 + 1);
        swift_retain();
        objc_msgSend(v176, "setDestination:configurationBlock:", v1, v177, swift_release(v178).n128_f64[0]);
        _Block_release(v177);

      }
      swift_beginAccess(v174, &v324, 0, 0);
      if ((*v174 & 1) == 0)
        sub_787F0(0);

      v301.size.width = v301.size.width - (v300.width + 16.0);
      swift_release(v173);
      goto LABEL_75;
    }
  }
  else
  {
    v284 = CGRectGetMaxY(v301);
    v278 = 0.0;
    v125 = &selRef_boundingRectWithSize_options_attributes_context_;
    v126 = v282;
    v127 = *(void **)&v1[*(_QWORD *)&v83];
    if (v127)
      goto LABEL_70;
  }
  v128 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton;
  v129 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton];
  v130 = 0.0;
  if (v129)
  {
    v129 = objc_msgSend(v129, "titleLabel");
    if (v129)
    {
      v131 = v129;
      v132 = *(void **)&v1[v128];
      if (v132)
      {
        v133 = v300;
        v134 = v125[33];
        v135 = v132;
        objc_msgSend(v135, v134, 0.0, 0.0, v133);
        objc_msgSend(v135, "layoutIfNeeded");
        v136 = (void *)objc_opt_self(UIApplication);
        v137 = objc_msgSend(v136, "sharedApplication");
        v138 = objc_msgSend(v137, "preferredContentSizeCategory");

        LOBYTE(v137) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v138);
        if ((v137 & 1) != 0)
          objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView], "frame");
        else
          v139 = CGRectGetMaxX(v301) - v300.width;
        v247 = (double *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonOffset];
        v248 = v139 + *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonOffset];
        objc_msgSend(v131, "_baselineOffsetFromBottom");
        v250 = v249;
        objc_msgSend(v135, "frame");
        v251 = CGRectGetHeight(v352);
        objc_msgSend(v131, "frame");
        v252 = CGRectGetMaxY(v353);
        v253 = v247[1];
        v254 = objc_msgSend(v136, "sharedApplication");
        v255 = objc_msgSend(v254, "preferredContentSizeCategory");

        LODWORD(v254) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v255);
        if ((_DWORD)v254)
        {
          v256 = v284 - v300.height;
          v257 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView;
          objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleTextDrawingView], "frame");
          v258 = v256 + CGRectGetMaxY(v354);
          v259 = *(void **)&v1[v257];
          sub_523EC((uint64_t)v259 + OBJC_IVAR____TtCVV12NowPlayingUI14DeprecatedText7Drawing4View__textDrawingContext, (uint64_t)v309);
          sub_523EC((uint64_t)v309, (uint64_t)&v316);
          if (sub_52434((uint64_t)&v316) != 1)
          {
            v328 = v320;
            v329 = v321;
            v330 = v322;
            v331 = v323;
            v324 = v316;
            v325 = v317;
            v326 = v318;
            v327 = v319;
            v260 = v259;
            sub_7A3C8(v309, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_7A398);
            v261 = sub_14795C((uint64_t)&v324);
            v263 = v262;
            v265 = v264;
            v267 = v266;
            objc_msgSend(v260, "bounds");
            v268 = CGRectGetMaxY(v355);
            v356.origin.x = v261;
            v356.origin.y = v263;
            v356.size.width = v265;
            v356.size.height = v267;
            v269 = CGRectGetMaxY(v356);
            sub_7A3C8(v309, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_524A4);

            v258 = v258 - (v268 - v269 + *((double *)&v322 + 1));
          }
        }
        else
        {
          v258 = v251 - v252 + v253 + v250 + v284 - v300.height;
        }
        v74 = v287;
        v52 = v288;
        v270 = v300;
        v271 = v135;
        v272 = v248;
        v76 = v289;
        objc_msgSend(v271, v125[33], CGRect.applyingLayoutDirection(_:inBounds:)(*(_QWORD *)&v126, v52, v289, v74, v290, v272, v258, v270.width, v270.height));

        v130 = v300.height;
        v301.size.width = v301.size.width - (v300.width + 16.0);
      }
      else
      {

      }
    }
  }
LABEL_75:
  v179 = v279;
  v180 = *(double *)&v1[v279];
  if (static CGFloat.epsilon.getter(v129) < v180)
  {
    v181 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentView];
    if (v181)
    {
      v282 = v130;
      v182 = v301.origin.x;
      v183 = v301.origin.y;
      v184 = v52;
      v185 = v301.size.width;
      v186 = v301.size.height;
      v187 = v181;
      v349.origin.x = v182;
      v349.origin.y = v183;
      v349.size.width = v185;
      v349.size.height = v186;
      v188 = CGRectGetMaxX(v349) - *(double *)&v1[v179];
      v189 = CGRectGetMinY(v301);
      v190 = *(double *)&v1[v179];
      v191 = CGRectGetHeight(v301);
      v193 = CGRect.applyingLayoutDirection(_:inBounds:)(*(_QWORD *)&v126, v184, v76, v74, v290, v188, v189, v190, v191);
      v195 = v194;
      v197 = v196;
      v198 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton];
      if (v198)
      {
        v199 = v198;
        objc_msgSend(v199, "frame");
        v200.n128_f64[0] = CGRectGetHeight(v350);
        v201 = v200.n128_f64[0];
        v202 = v274;
        static CGRect.LayoutAxis.vertical.getter(v200);
        objc_msgSend(v199, "frame");
        v193 = CGRect.centeringAlong(axes:bounds:scale:)(v202, v203, v204, v205, v206, v285, v193, v195, v197, v201);
        v195 = v207;
        v197 = v208;
        v210 = v209;

        (*(void (**)(char *, uint64_t))(v275 + 8))(v202, v276);
      }
      else
      {
        v210 = v192;
      }
      objc_msgSend(v187, v125[33], v193, v195, v197, v210);

      v74 = v287;
      v52 = v288;
      v130 = v282;
    }
  }
  v211 = *(_QWORD *)&v1[v280];
  v212 = 0.0;
  if (v211)
  {
    v213 = *(void **)&v1[v277];
    if (v213)
    {
      v214 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textComponents + 8];
      v216 = *(_QWORD *)(v214 + 128);
      v215 = *(_QWORD *)(v214 + 136);
      v217 = *(_OWORD *)(v214 + 64);
      v218 = *(_OWORD *)(v214 + 80);
      v219 = *(_OWORD *)(v214 + 112);
      v315[4] = *(_OWORD *)(v214 + 96);
      v315[5] = v219;
      v315[2] = v217;
      v315[3] = v218;
      v220 = *(_OWORD *)(v214 + 48);
      v315[0] = *(_OWORD *)(v214 + 32);
      v315[1] = v220;
      v221 = v301.size.width;
      v222 = v301.size.height;
      v282 = v130;
      v223 = *(double *)(v211 + 32);
      v224 = *(void **)(v211 + 40);
      v285 = *(double *)(v211 + 48);
      v225 = *(_QWORD *)(v211 + 56);
      v226 = *(void **)(v211 + 64);
      v227 = *(_OWORD **)(v211 + 72);
      swift_retain();
      v228 = v213;
      swift_bridgeObjectRetain(v215);
      sub_11D30(v315, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
      v229 = v224;
      v230 = v225;
      v125 = &selRef_boundingRectWithSize_options_attributes_context_;
      sub_10BBC(v216, v215, COERCE_DOUBLE(v315), v229, *(void **)&v285, v230, v226, v227, v309, v221, v222, v223);
      v295 = v311;
      v296 = v312;
      v297 = v313;
      v298 = v314;
      v291 = v309[0];
      v292 = v309[1];
      v293 = v309[2];
      v294 = v310;

      v299[4] = v295;
      v299[5] = v296;
      v299[6] = v297;
      v299[7] = v298;
      v299[0] = v291;
      v299[1] = v292;
      v299[2] = v293;
      v299[3] = v294;
      UIScreen.Dimensions.size.getter(v299);
      sub_523EC((uint64_t)v299, (uint64_t)&v316);
      sub_11BB4((uint64_t)v309);
      sub_147500(&v316);
      v231 = *((double *)&v310 + 1);
      v232 = *(double *)&v310;
      v233 = *((double *)&v313 + 1);
      v234 = v284 - *((double *)&v310 + 1) + *((double *)&v313 + 1);
      v235 = v301.origin.x;
      v236 = v301.origin.y;
      v237 = v301.size.width;
      v238 = v301.size.height;
      v239 = v228;
      v351.origin.x = v235;
      v351.origin.y = v236;
      v351.size.width = v237;
      v74 = v287;
      v52 = v288;
      v351.size.height = v238;
      objc_msgSend(v239, "setFrame:", CGRectGetMinX(v351) + 12.0, v234, v232, v231);

      v240 = v231 + v234 - v233;
      v76 = v289;
      v241 = sub_FD5D4(v216, v215);
      sub_11D6C((uint64_t)v309);
      swift_release(v211);

      sub_11D30(v315, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
      swift_bridgeObjectRelease(v215);
      v212 = v240 + v241;
      v130 = v282;
      v301.origin.x = v232 + 12.0 + v301.origin.x;
      v301.size.width = v301.size.width - (v232 + 12.0);
    }
  }
  v242 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v243 = objc_msgSend(v242, "preferredContentSizeCategory");

  LODWORD(v242) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v243);
  if ((_DWORD)v242)
  {
    v244 = v278 + v130 + v212;
  }
  else
  {
    v244 = v278;
    if (v278 <= v130)
      v244 = v130;
    if (v244 <= v212)
      v244 = v212;
  }
  v245 = v286 + v244;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floatingBackgroundView], v125[33], v52, v76, v74, v290);
  *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__currentPreferredHeight] = v245;
  return sub_145A0(*(uint64_t *)&v281, *(uint64_t *)&v283);
}

double sub_77D08(uint64_t a1, void *a2, uint64_t a3, double *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  double result;

  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonPossibleAttributedTitles);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1
                                       + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonPossibleAttributedTitles));
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB98);
    v7 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_16B3D0;
    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle);
    v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle + 8);
    v13 = *(_BYTE *)(a1 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle + 16);
    v14 = *(void **)(a1 + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle + 24);
    *(_QWORD *)(v7 + 32) = v12;
    *(_QWORD *)(v7 + 40) = v11;
    *(_BYTE *)(v7 + 48) = v13;
    *(_QWORD *)(v7 + 56) = v14;
    swift_bridgeObjectRetain(v11);
    v15 = v14;
    v8 = 1;
  }
  v16 = (void **)(v7 + 56);
  do
  {
    v18 = (uint64_t)*(v16 - 2);
    v19 = *v16;
    swift_bridgeObjectRetain(v18);
    v20 = v19;
    objc_msgSend(a2, "setAttributedTitle:forState:", v20, 0);
    objc_msgSend(a2, "sizeThatFits:", *(double *)(a3 + 16), *(double *)(a3 + 24));
    v22 = v21;
    v17 = v23;

    swift_bridgeObjectRelease(v18);
    v24 = *a4;
    if (*a4 >= v22)
      v17 = *((_QWORD *)a4 + 1);
    else
      v24 = v22;
    *a4 = v24;
    *((_QWORD *)a4 + 1) = v17;
    v16 += 4;
    --v8;
  }
  while (v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_77E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE v8[32];

  sub_CD54(a1, (uint64_t)v8);
  v5 = type metadata accessor for TitleSectionHeaderView();
  if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
  {
    v6 = v7;
    sub_787F0(a2);

    swift_beginAccess(a3 + 16, v8, 1, 0);
    *(_BYTE *)(a3 + 16) = 1;
  }
}

uint64_t sub_77EEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *, void *);
  id v7;
  _QWORD v9[4];

  v6 = *(void (**)(_QWORD *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v9[3] = swift_getObjectType(a2);
  v9[0] = a2;
  swift_retain();
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(v9, a3);
  swift_release(v5);

  return __swift_destroy_boxed_opaque_existential_0(v9);
}

void sub_77FA8(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  objc_class *v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t *v9;
  unsigned __int8 v10;
  id v11;
  unsigned __int8 v12;
  id v13;
  id v14;
  objc_super v15;
  uint64_t v16;
  objc_super v17;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for TitleSectionHeaderView();
  v17.receiver = v1;
  v17.super_class = v4;
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v5 = objc_msgSend(v1, "traitCollection");
  v16 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAE8);
  v7 = Optional<A>.safeDisplayScale.getter(v6, &protocol witness table for UITraitCollection);
  v8 = UITraitCollection.safeDisplayScale.getter();
  if ((static CGFloat.==~ infix(_:_:)(v7, v8) & 1) == 0)
    objc_msgSend(v1, "setNeedsLayout");
  if (objc_msgSend(v5, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v9 = &OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle;
LABEL_7:
    v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = v1[*v9];
    sub_78610();
    goto LABEL_8;
  }
  if (objc_msgSend(v5, "horizontalSizeClass") == (char *)&dword_0 + 1)
  {
    v9 = &OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle;
    goto LABEL_7;
  }
LABEL_8:
  v10 = UITraitCollection.isInPopover.getter();
  if (!a1 || (UITraitCollection.isInPopover.getter() & 1) != (v10 & 1))
  {
    v11 = objc_msgSend(v1, "traitCollection");
    v12 = UITraitCollection.isInPopover.getter();

    if ((v12 & 1) != 0 || v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floating] == 1)
      v13 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    else
      v13 = *(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_externalBackgroundColor];
    v14 = v13;
    v15.receiver = v2;
    v15.super_class = v4;
    objc_msgSendSuper2(&v15, "setBackgroundColor:", v13);

    v5 = v14;
  }

}

void sub_78354(char a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  objc_super v13;

  v2 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floating;
  if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floating] != (a1 & 1))
  {
    v3 = v1;
    v4 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floatingBackgroundView;
    v5 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floatingBackgroundView];
    if (v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floating])
    {
      if (v5)
      {
        v6 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floatingBackgroundView];
      }
      else
      {
        if (qword_1F95D8 != -1)
          swift_once(&qword_1F95D8, sub_FE1E8);
        v6 = sub_FA20C(qword_210360);
        objc_msgSend(v3, "bounds");
        objc_msgSend(v6, "setFrame:");
        objc_msgSend(v3, "insertSubview:atIndex:", v6, 0);
        v7 = *(void **)&v3[v4];
        *(_QWORD *)&v3[v4] = v6;

        v5 = 0;
      }
      v8 = v5;
      objc_msgSend(v6, "setHidden:", 0);

    }
    else if (v5)
    {
      objc_msgSend(v5, "setHidden:", 1);
    }
    v9 = objc_msgSend(v3, "traitCollection");
    v10 = UITraitCollection.isInPopover.getter();

    if ((v10 & 1) != 0 || v3[v2] == 1)
      v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    else
      v11 = *(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_externalBackgroundColor];
    v12 = v11;
    v13.receiver = v3;
    v13.super_class = (Class)type metadata accessor for TitleSectionHeaderView();
    objc_msgSendSuper2(&v13, "setBackgroundColor:", v12);

  }
}

id sub_784FC()
{
  id result;

  result = sub_78518();
  qword_1FDA20 = (uint64_t)result;
  return result;
}

id sub_78518()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v0 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v1 = (void *)objc_opt_self(MTMPUFontDescriptor);
  v2 = v0;
  v3 = objc_msgSend(v1, "fontDescriptorWithTextStyle:", 0);
  v4 = objc_msgSend(v2, "titleLabel");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v3, "preferredFont");
    objc_msgSend(v5, "setFont:", v6);

  }
  objc_msgSend(v2, "setContentHorizontalAlignment:", 2);

  return v2;
}

id sub_78610()
{
  _BYTE *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v1 = OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle;
  v2 = v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] & 0xFE;
  v3 = v2 == 14;
  v4 = v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineLeadingAlignment];
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineLeadingAlignment] = v3;
  if (v4 != v3)
    objc_msgSend(v0, "setNeedsLayout");
  v5 = v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineTrailingAlignment];
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineTrailingAlignment] = v3;
  if ((v2 == 14) != v5)
    objc_msgSend(v0, "setNeedsLayout");
  v6 = v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineTrailingAlignment];
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineTrailingAlignment] = v3;
  if ((v2 == 14) != v6)
    objc_msgSend(v0, "setNeedsLayout");
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textComponents];
  v8 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleMaximumNumberOfLines];
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title];
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title + 8];
  v11 = v0[v1];
  swift_bridgeObjectRetain(v10);
  sub_7959C(v11, v8, v9, v10, v7);
  return objc_msgSend(v0, "setNeedsLayout", swift_bridgeObjectRelease(v10).n128_f64[0]);
}

void sub_787F0(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  double v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t Strong;
  void *v21;
  void *v22;
  id v23;
  BOOL v24;
  BOOL v25;
  _QWORD v26[14];
  _BYTE v27[24];
  char v28[8];

  v2 = v1;
  if (a1)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton];
    if (v4)
      objc_msgSend(v4, "setImage:forState:", a1, 0);
    return;
  }
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = UITraitCollection.safeDisplayScale.getter();

  v7 = &v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkPlaceholder];
  v8 = v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkPlaceholder
                         + 16];
  if (v8 > 0xFD)
    return;
  v9 = *(_QWORD *)v7;
  v10 = *((_QWORD *)v7 + 1);
  v11 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonSize];
  v12 = *(double *)&v2[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonSize + 8];
  swift_unknownObjectWeakInit(v28, v2);
  if (!(v8 >> 6))
  {
    v13 = (id)v9;
    goto LABEL_9;
  }
  if (v8 >> 6 == 1)
  {
    swift_bridgeObjectRetain(v10);
LABEL_9:
    v14 = 0;
    goto LABEL_15;
  }
  v15 = v6 * v11;
  v16 = v6 * v12;
  if (!(v10 | v9) && v8 == 128)
    goto LABEL_12;
  v24 = v9 == 1 && v10 == 0;
  if (v24 && v8 == 128)
    goto LABEL_9;
  v25 = v9 == 2 && v10 == 0;
  if (v25 && v8 == 128 || v9 == 3 && !v10 && v8 == 128 || v9 == 4 && !v10 && v8 == 128)
  {
LABEL_12:
    if (qword_1F96B8 == -1)
      goto LABEL_13;
    goto LABEL_43;
  }
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v27, 0, 0);
  sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v26);
  v17 = v26[0];
  if (!v26[0])
  {
    __break(1u);
LABEL_43:
    swift_once(&qword_1F96B8, sub_15D030);
LABEL_13:
    swift_beginAccess(&static NowPlayingDataProvider.shared, v27, 0, 0);
    sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v26);
    v17 = v26[0];
    if (!v26[0])
    {
      __break(1u);
      return;
    }
  }
  v18 = v26[1];
  swift_unknownObjectRetain(v17);
  sub_4AE24((uint64_t)v26);
  ObjectType = swift_getObjectType(v17);
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, double, double))(v18 + 224))(ObjectType, v18, v15, v16);
  swift_unknownObjectRelease(v17);
LABEL_15:
  swift_beginAccess(v28, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v28);
  if (Strong
    && (v21 = (void *)Strong,
        v22 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton),
        v23 = v22,
        v21,
        v22))
  {
    objc_msgSend(v23, "setImage:forState:", v14, 0);

  }
  else
  {

  }
  sub_791D4((void *)v9, v10, v8);
  swift_unknownObjectWeakDestroy(v28);
}

id sub_78B68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleSectionHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TitleSectionHeaderView()
{
  return objc_opt_self(_TtC12NowPlayingUI22TitleSectionHeaderView);
}

ValueMetadata *type metadata accessor for TitleSectionHeaderView.TextComponents()
{
  return &type metadata for TitleSectionHeaderView.TextComponents;
}

ValueMetadata *type metadata accessor for TitleSectionHeaderView.HairlineAlignment()
{
  return &type metadata for TitleSectionHeaderView.HairlineAlignment;
}

uint64_t getEnumTagSinglePayload for TitleSectionHeaderView.LayoutStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleSectionHeaderView.LayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_78E4C + 4 * byte_16E825[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_78E80 + 4 * byte_16E820[v4]))();
}

uint64_t sub_78E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_78E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x78E90);
  return result;
}

uint64_t sub_78E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x78EA4);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_78EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_78EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TitleSectionHeaderView.LayoutStyle()
{
  return &type metadata for TitleSectionHeaderView.LayoutStyle;
}

void destroy for TitleSectionHeaderView.SystemButtonAttributedTitle(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for TitleSectionHeaderView.SystemButtonAttributedTitle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for TitleSectionHeaderView.SystemButtonAttributedTitle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = v6;

  return a1;
}

uint64_t assignWithTake for TitleSectionHeaderView.SystemButtonAttributedTitle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for TextContent.ID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextContent.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TitleSectionHeaderView.SystemButtonAttributedTitle()
{
  return &type metadata for TitleSectionHeaderView.SystemButtonAttributedTitle;
}

_QWORD *sub_79080@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_790A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  char v10;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(unsigned __int8 *)(a2 + 16);
  if (v4 == *(_QWORD *)a2 && v5 == v7)
    return v6 ^ v8 ^ 1u;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v7, 0);
  result = 0;
  if ((v10 & 1) != 0)
    return v6 ^ v8 ^ 1u;
  return result;
}

unint64_t sub_79100()
{
  unint64_t result;

  result = qword_1FDB80;
  if (!qword_1FDB80)
  {
    result = swift_getWitnessTable(&unk_16E924, &type metadata for TitleSectionHeaderView.LayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1FDB80);
  }
  return result;
}

unint64_t sub_79148()
{
  unint64_t result;

  result = qword_1FDB88;
  if (!qword_1FDB88)
  {
    result = swift_getWitnessTable(&unk_16E98C, &type metadata for TitleSectionHeaderView.HairlineAlignment);
    atomic_store(result, (unint64_t *)&qword_1FDB88);
  }
  return result;
}

uint64_t sub_7918C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_791D4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu)
    sub_791E8(a1, a2, a3);
}

void sub_791E8(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1)
  {
    swift_bridgeObjectRelease(a2);
  }
  else if (!(a3 >> 6))
  {

  }
}

uint64_t sub_79208(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v24;

  v4 = 0;
  v5 = *(_QWORD *)(result + 16);
  v6 = result + 56;
  v21 = v5;
  v22 = _swiftEmptyArrayStorage;
  v20 = result + 56;
LABEL_2:
  if (v4 > v5)
    v5 = v4;
  v7 = -(uint64_t)v5;
  v8 = v4 + 1;
  v9 = (void **)(v6 + 32 * v4);
  while (1)
  {
    if (v24 + v8 == 1)
      return (uint64_t)v22;
    v4 = v8++;
    if (v7 + v8 == 2)
      break;
    v10 = (uint64_t)*(v9 - 3);
    v11 = (uint64_t)*(v9 - 2);
    v12 = *((_BYTE *)v9 - 8);
    v13 = *v9;
    if (v10 == a2 && v11 == a3)
    {
      v10 = a2;
      v11 = a3;
LABEL_14:
      swift_bridgeObjectRetain(v11);
      v15 = v13;
      v16 = v22;
      result = swift_isUniquelyReferenced_nonNull_native(v22);
      if ((result & 1) == 0)
      {
        result = sub_A9B2C(0, v22[2] + 1, 1);
        v16 = v22;
      }
      v18 = v16[2];
      v17 = v16[3];
      if (v18 >= v17 >> 1)
      {
        result = sub_A9B2C(v17 > 1, v18 + 1, 1);
        v16 = v22;
      }
      v16[2] = v18 + 1;
      v22 = v16;
      v19 = &v16[4 * v18];
      v19[4] = v10;
      v19[5] = v11;
      *((_BYTE *)v19 + 48) = v12;
      v19[7] = v15;
      v6 = v20;
      v5 = v21;
      goto LABEL_2;
    }
    v9 += 4;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, a2, a3, 0);
    if ((result & 1) != 0)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

unint64_t sub_7938C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200C60;
  if (!qword_200C60)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_200C60);
  }
  return result;
}

uint64_t sub_793C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_793EC(uint64_t a1)
{
  uint64_t v1;

  sub_76734(a1, v1);
}

void sub_793F4(char a1)
{
  __asm { BR              X10 }
}

id sub_79420()
{
  double v0;

  return objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:leadingAdjustment:weight:defaultPointSizeAdjustment:", 19, 1, 2, v0);
}

void sub_79514()
{
  objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithSystemFontSize:leadingAdjustment:weight:", 1, 2, 18.0);
  JUMPOUT(0x79504);
}

void sub_7959C(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v8;
  void *v9;
  id v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  id v14;
  double v16;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "music_containsCJKScripts");

  sub_793F4(a1);
  v10 = v9;
  v39 = a2;
  if (((1 << a1) & 0x568) != 0)
  {
    if (UIAccessibilityDarkerSystemColorsEnabled())
    {
      if (qword_1F95C8 != -1)
        swift_once(&qword_1F95C8, sub_FE0E0);
      v11 = &qword_210350;
    }
    else
    {
      if (qword_1F95C0 != -1)
        swift_once(&qword_1F95C0, sub_FE034);
      v11 = &qword_210348;
    }
  }
  else
  {
LABEL_9:
    if (qword_1F95B0 != -1)
      swift_once(&qword_1F95B0, sub_FDF98);
    v11 = &qword_210338;
  }
  v12 = (void *)*v11;
  v13 = (void *)objc_opt_self(UIColor);
  v37 = v12;
  v10 = v10;
  v36 = objc_msgSend(v13, "clearColor");
  v14 = objc_msgSend(v10, "typeSafeCopy");
  v38 = v10;

  _Q0 = xmmword_16E750;
  v16 = 32.0;
  switch(a1)
  {
    case 0:
      goto LABEL_21;
    case 1:
      _Q0 = xmmword_16E7F0;
      break;
    case 2:
      _Q0 = xmmword_16E7E0;
      break;
    case 3:
      _Q0 = xmmword_16E7D0;
      break;
    case 4:
      _Q0 = xmmword_16E7C0;
      break;
    case 5:
      _Q0 = xmmword_16E7B0;
      break;
    case 6:
      break;
    case 7:
      _Q0 = xmmword_16E800;
      break;
    case 8:
      v16 = 44.0;
      goto LABEL_21;
    case 9:
      v16 = 20.0;
LABEL_21:
      __asm { FMOV            V0.2D, #8.0; jumptable 0000000000079714 case 0 }
      *(double *)&_Q0 = v16;
      break;
    case 10:
      _Q0 = xmmword_16E7A0;
      break;
    default:
      goto LABEL_9;
  }
  v21 = *(void **)(a5 + 32);
  v22 = *(void **)(a5 + 40);
  v23 = *(void **)(a5 + 48);
  v24 = *(_QWORD *)(a5 + 56);
  v25 = *(_QWORD *)(a5 + 72);
  v34 = *(_QWORD *)(a5 + 80);
  v35 = *(_QWORD *)(a5 + 64);
  *(_QWORD *)(a5 + 32) = v14;
  *(_QWORD *)(a5 + 40) = v37;
  *(_QWORD *)(a5 + 48) = v36;
  *(_OWORD *)(a5 + 56) = xmmword_16E1C0;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = 0;
  *(_QWORD *)(a5 + 88) = 0x3F8000003F000000;
  *(_QWORD *)(a5 + 96) = v39;
  *(_QWORD *)(a5 + 104) = 0;
  *(_OWORD *)(a5 + 112) = _Q0;
  v26 = v14;
  v27 = v37;
  v28 = v36;
  v29 = v26;
  v30 = v27;
  v31 = v28;
  v40 = v29;
  v32 = v30;
  v33 = v31;
  sub_10B64(v21, v22, v23, v24, v35, v25, v34);
  sub_50F0C();

}

uint64_t sub_79948(char a1)
{
  void *v2;
  id v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v41;
  void *v42;

  sub_793F4(a1);
  v3 = v2;
  if (((1 << a1) & 0x568) != 0)
  {
    if (UIAccessibilityDarkerSystemColorsEnabled())
    {
      if (qword_1F95C8 != -1)
        swift_once(&qword_1F95C8, sub_FE0E0);
      v4 = &qword_210350;
    }
    else
    {
      if (qword_1F95C0 != -1)
        swift_once(&qword_1F95C0, sub_FE034);
      v4 = &qword_210348;
    }
  }
  else
  {
LABEL_9:
    if (qword_1F95B0 != -1)
      swift_once(&qword_1F95B0, sub_FDF98);
    v4 = &qword_210338;
  }
  v5 = (void *)*v4;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v3 = v3;
  v8 = objc_msgSend(v6, "clearColor");
  v9 = objc_msgSend(v3, "typeSafeCopy");
  v42 = v3;

  v10 = 23.0;
  v11 = 13.0;
  v12 = 32.0;
  switch(a1)
  {
    case 0:
      goto LABEL_22;
    case 1:
      v11 = 16.0;
      v13 = 0x4040000000000000;
      goto LABEL_24;
    case 2:
      v11 = 10.0;
      goto LABEL_19;
    case 3:
      v10 = 10.0;
      v11 = 16.0;
      break;
    case 4:
      v11 = 16.0;
      v13 = 0x4042000000000000;
      goto LABEL_24;
    case 5:
      v10 = 30.0;
      v11 = 16.0;
      break;
    case 6:
      break;
    case 7:
      v11 = 12.0;
LABEL_19:
      v13 = 0x4048000000000000;
LABEL_24:
      v10 = *(double *)&v13;
      break;
    case 8:
      v12 = 44.0;
      goto LABEL_22;
    case 9:
      v12 = 20.0;
LABEL_22:
      v11 = 8.0;
      v10 = v12;
      break;
    case 10:
      v10 = 5.0;
      v11 = 16.0;
      break;
    default:
      goto LABEL_9;
  }
  v14 = _s9StackViewC9ComponentCMa();
  v15 = swift_allocObject(v14, 280, 7);
  *(_QWORD *)(v15 + 128) = 0;
  *(_QWORD *)(v15 + 136) = 0xE000000000000000;
  *(_QWORD *)(v15 + 240) = 0;
  *(_QWORD *)(v15 + 248) = 0xE000000000000000;
  *(_QWORD *)(v15 + 264) = 0;
  *(_QWORD *)(v15 + 272) = 0;
  *(_QWORD *)(v15 + 256) = 0;
  *(_QWORD *)(v15 + 16) = 0x656C746974;
  *(_QWORD *)(v15 + 24) = 0xE500000000000000;
  *(_QWORD *)(v15 + 32) = v9;
  *(_QWORD *)(v15 + 40) = v5;
  *(_QWORD *)(v15 + 48) = v8;
  *(_OWORD *)(v15 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v15 + 72) = 0;
  *(_QWORD *)(v15 + 80) = 0;
  *(_OWORD *)(v15 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v15 + 104) = 0;
  *(double *)(v15 + 112) = v10;
  *(double *)(v15 + 120) = v11;
  *(_QWORD *)(v15 + 144) = v9;
  *(_QWORD *)(v15 + 152) = v5;
  *(_QWORD *)(v15 + 160) = v8;
  *(_OWORD *)(v15 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v15 + 184) = 0;
  *(_QWORD *)(v15 + 192) = 0;
  *(_OWORD *)(v15 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v15 + 216) = 0;
  *(double *)(v15 + 224) = v10;
  *(double *)(v15 + 232) = v11;
  v16 = (void *)objc_opt_self(MTMPUFontDescriptor);
  v17 = v9;
  v18 = v7;
  v19 = v8;
  v20 = v17;
  v21 = v18;
  v22 = v19;
  v41 = v20;
  v23 = v21;
  v24 = v22;
  swift_retain();
  v25 = objc_msgSend(v16, "fontDescriptorWithTextStyle:weight:", 19, 5);
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    if (qword_1F95C8 != -1)
      swift_once(&qword_1F95C8, sub_FE0E0);
    v26 = &qword_210350;
  }
  else
  {
    if (qword_1F95C0 != -1)
      swift_once(&qword_1F95C0, sub_FE034);
    v26 = &qword_210348;
  }
  v27 = (id)*v26;
  v28 = objc_msgSend(v6, "clearColor");
  v29 = objc_msgSend(v25, "typeSafeCopy");

  v30 = qword_16EA80[a1];
  v31 = swift_allocObject(v14, 280, 7);
  *(_QWORD *)(v31 + 128) = 0;
  *(_QWORD *)(v31 + 136) = 0xE000000000000000;
  *(_QWORD *)(v31 + 240) = 0;
  *(_QWORD *)(v31 + 248) = 0xE000000000000000;
  *(_QWORD *)(v31 + 264) = 0;
  *(_QWORD *)(v31 + 272) = 0;
  *(_QWORD *)(v31 + 256) = 0;
  *(_QWORD *)(v31 + 16) = 0x656C746974627573;
  *(_QWORD *)(v31 + 24) = 0xE800000000000000;
  *(_QWORD *)(v31 + 32) = v29;
  *(_QWORD *)(v31 + 40) = v27;
  *(_QWORD *)(v31 + 48) = v28;
  *(_OWORD *)(v31 + 56) = xmmword_16E1C0;
  *(_QWORD *)(v31 + 72) = 0;
  *(_QWORD *)(v31 + 80) = 0;
  *(_OWORD *)(v31 + 88) = xmmword_16E1D0;
  *(_QWORD *)(v31 + 104) = 0;
  *(_QWORD *)(v31 + 112) = 0x403E000000000000;
  *(_QWORD *)(v31 + 120) = v30;
  *(_QWORD *)(v31 + 144) = v29;
  *(_QWORD *)(v31 + 152) = v27;
  *(_QWORD *)(v31 + 160) = v28;
  *(_OWORD *)(v31 + 168) = xmmword_16E1C0;
  *(_QWORD *)(v31 + 184) = 0;
  *(_QWORD *)(v31 + 192) = 0;
  *(_OWORD *)(v31 + 200) = xmmword_16E1D0;
  *(_QWORD *)(v31 + 216) = 0;
  *(_QWORD *)(v31 + 224) = 0x403E000000000000;
  *(_QWORD *)(v31 + 232) = v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v33 = swift_allocObject(v32, 48, 7);
  *(_OWORD *)(v33 + 16) = xmmword_16B2E0;
  *(_QWORD *)(v33 + 32) = v15;
  *(_QWORD *)(v33 + 40) = v31;
  specialized Array._endMutation()(v33);
  v34 = v29;
  v35 = v27;
  v36 = v28;
  v37 = v34;
  v38 = v35;
  v39 = v36;
  swift_retain();

  return v15;
}

void sub_79EDC()
{
  _BYTE *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  _QWORD *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  NSString *v12;
  id v13;
  unint64_t v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  _QWORD *v19;
  _OWORD *v20;
  __int128 v21;
  _QWORD *v22;
  _BYTE v23[72];

  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_forSizing] = 0;
  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = sub_15F6F8();
  v3 = 3;
  if ((v2 & 1) == 0)
    v3 = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleMaximumNumberOfLines] = v3;
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitle];
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkPlaceholder];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = -2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonArtworkCatalog] = 0;
  v6 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageStyleButtonSize];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonAttributedTitle];
  v8 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:", 0);
  v9 = objc_msgSend(v8, "preferredFont");

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB90);
  inited = swift_initStackObject(v10, v23);
  *(_OWORD *)(inited + 16) = xmmword_16B3D0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_7938C();
  *(_QWORD *)(inited + 40) = v9;
  v12 = NSFontAttributeName;
  v13 = v9;
  v14 = sub_CA4A4(inited);
  v15 = objc_allocWithZone((Class)NSAttributedString);
  v16 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_75328();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v15, "initWithString:attributes:", v16, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  v7[16] = 0;
  *((_QWORD *)v7 + 3) = v18;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButtonPossibleAttributedTitles] = _swiftEmptyArrayStorage;
  v19 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonHandler];
  *v19 = 0;
  v19[1] = 0;
  *(UIOffset *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_buttonOffset] = UIOffsetZero;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_compactLayoutStyle] = 9;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_regularLayoutStyle] = 4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_additionalContentViewReservedWidth] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__currentPreferredHeight] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineLeadingAlignment] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineTrailingAlignment] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isTopHairlineVisible] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineLeadingAlignment] = 1;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineTrailingAlignment] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_isBottomHairlineVisible] = 0;
  v20 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_adjustedLayoutInsets];
  v21 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v20 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v20[1] = v21;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textDrawingCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_topHairlineView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_bottomHairlineView] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isTopHairlineVisible] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView__isBottomHairlineVisible] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_subtitleTextDrawingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_systemStyleButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_imageButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floatingBackgroundView] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_floating] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle] = 9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_externalBackgroundColor] = 0;
  v22 = &v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutInvalidationHandler];
  *v22 = 0;
  v22[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/TitleSectionHeaderView.swift", 41, 2, 61, 0);
  __break(1u);
}

id sub_7A288()
{
  _BYTE *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id result;
  void (*v8)(_BYTE *);
  uint64_t v9;

  if ((sub_15F6F8() & 1) != 0)
    v1 = &dword_0 + 3;
  else
    v1 = &dword_0 + 1;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleMaximumNumberOfLines];
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_titleMaximumNumberOfLines] = v1;
  if (v2 != v1)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_textComponents];
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title];
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_title + 8];
    v6 = v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutStyle];
    swift_bridgeObjectRetain(v5);
    sub_7959C(v6, v1, v4, v5, v3);
    objc_msgSend(v0, "setNeedsLayout", swift_bridgeObjectRelease(v5).n128_f64[0]);
  }
  result = objc_msgSend(v0, "setNeedsLayout");
  v8 = *(void (**)(_BYTE *))&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutInvalidationHandler];
  if (v8)
  {
    v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI22TitleSectionHeaderView_layoutInvalidationHandler + 8];
    swift_retain();
    v8(v0);
    return (id)sub_145A0((uint64_t)v8, v9);
  }
  return result;
}

id sub_7A398(id result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  if (a5)
  {
    sub_11B84(result, a2, a3, a4 & 1);
    return a5;
  }
  return result;
}

_QWORD *sub_7A3C8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t sub_7A424()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_7A434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_77E5C(a1, a2, v2);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_12(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_7A454()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

double sub_7A480()
{
  uint64_t v0;

  return sub_77D08(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(double **)(v0 + 40));
}

uint64_t sub_7A48C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t _s12NowPlayingUI22TitleSectionHeaderViewC27SystemButtonAttributedTitleV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_7A4E8 + 4 * byte_16E82F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_7A51C + 4 * byte_16E82A[v4]))();
}

uint64_t sub_7A51C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_7A524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x7A52CLL);
  return result;
}

uint64_t sub_7A538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x7A540);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_7A544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_7A54C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TitleSectionHeaderView.SystemButtonAttributedTitle.Style()
{
  return &type metadata for TitleSectionHeaderView.SystemButtonAttributedTitle.Style;
}

unint64_t sub_7A56C()
{
  unint64_t result;

  result = qword_1FDBA0;
  if (!qword_1FDBA0)
  {
    result = swift_getWitnessTable(&unk_16EA54, &type metadata for TitleSectionHeaderView.SystemButtonAttributedTitle.Style);
    atomic_store(result, (unint64_t *)&qword_1FDBA0);
  }
  return result;
}

uint64_t destroy for NowPlayingSleepTimerRemaining(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for ChapterTitleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for ChapterTitleView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for ChapterTitleView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_release(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for ChapterTitleView()
{
  return &type metadata for ChapterTitleView;
}

unint64_t sub_7A6F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FDBA8;
  if (!qword_1FDBA8)
  {
    v1 = type metadata accessor for ChapterTitleContent();
    result = swift_getWitnessTable(&unk_1732B8, v1);
    atomic_store(result, (unint64_t *)&qword_1FDBA8);
  }
  return result;
}

unint64_t sub_7A738(uint64_t a1)
{
  unint64_t result;

  result = sub_7A75C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_7A75C()
{
  unint64_t result;

  result = qword_1FDBD0;
  if (!qword_1FDBD0)
  {
    result = swift_getWitnessTable(&unk_16EB40, &type metadata for ChapterTitleView);
    atomic_store(result, (unint64_t *)&qword_1FDBD0);
  }
  return result;
}

uint64_t sub_7A7A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19FC44, 1);
}

uint64_t sub_7A7B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDBD8);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDBE0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDBE8);
  sub_7A974(a1, a2, a3, (uint64_t)&v10[*(int *)(v15 + 44)]);
  LOBYTE(a3) = static Edge.Set.top.getter(v16);
  v17 = EdgeInsets.init(_all:)(26.0);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_2808C((uint64_t)v10, (uint64_t)v14, &qword_1FDBD8);
  v24 = &v14[*(int *)(v11 + 36)];
  *v24 = a3;
  *((double *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  v25 = sub_9944((uint64_t)v10, &qword_1FDBD8);
  v26 = static Edge.Set.bottom.getter(v25);
  v27 = EdgeInsets.init(_all:)(10.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2808C((uint64_t)v14, a4, &qword_1FDBE0);
  v34 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FDBF0) + 36);
  *(_BYTE *)v34 = v26;
  *(double *)(v34 + 8) = v27;
  *(_QWORD *)(v34 + 16) = v29;
  *(_QWORD *)(v34 + 24) = v31;
  *(_QWORD *)(v34 + 32) = v33;
  *(_BYTE *)(v34 + 40) = 0;
  return sub_9944((uint64_t)v14, &qword_1FDBE0);
}

uint64_t sub_7A974@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __n128 v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];

  v68 = a2;
  v71 = a4;
  v69 = type metadata accessor for PUITextStyle(0);
  v7 = *(_QWORD *)(v69 - 8);
  v8 = __chkstk_darwin(v69);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v61 - v11;
  v13 = type metadata accessor for TappablePaddingView(0);
  v67 = v13;
  v14 = __chkstk_darwin(v13);
  v70 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (uint64_t *)((char *)&v61 - v17);
  v19 = __chkstk_darwin(v16);
  v21 = (uint64_t *)((char *)&v61 - v20);
  __chkstk_darwin(v19);
  v23 = (char *)&v61 - v22;
  v66 = (uint64_t)&v61 - v22;
  *v21 = static Alignment.leading.getter(v24);
  v21[1] = v25;
  v21[2] = a2;
  v21[3] = a3;
  v61 = a3;
  v26 = (_QWORD *)((char *)v21 + *(int *)(v13 + 24));
  *v26 = swift_getKeyPath(&unk_16EB90);
  v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  swift_storeEnumTagMultiPayload(v26, v65, 0);
  sub_7AD1C((uint64_t)v21, (uint64_t)v23);
  v27 = *(_QWORD *)(a1 + 16);
  v28 = *(_QWORD *)(a1 + 24);
  v72[0] = v27;
  v72[1] = v28;
  v29 = sub_11CEC();
  swift_retain();
  swift_bridgeObjectRetain(v28);
  v30 = Text.init<A>(_:)(v72, &type metadata for String, v29);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  v37 = static PUITextStyle.title3.getter();
  PUITextStyle.emph.getter(v37);
  v38 = *(void (**)(char *, uint64_t))(v7 + 8);
  v39 = v12;
  v40 = v69;
  v38(v39, v69);
  v41 = Text.puiFont(_:)(v10, v30, v32, v36, v34);
  v62 = v42;
  v63 = v41;
  v64 = v43;
  LOBYTE(v7) = v44 & 1;
  sub_25404(v30, v32, v36);
  v45 = swift_bridgeObjectRelease(v34);
  ((void (*)(char *, uint64_t, __n128))v38)(v10, v40, v45);
  KeyPath = swift_getKeyPath(&unk_16EBC0);
  *v18 = static Alignment.trailing.getter(KeyPath);
  v18[1] = v47;
  v48 = v61;
  v18[2] = v68;
  v18[3] = v48;
  v49 = (_QWORD *)((char *)v18 + *(int *)(v67 + 24));
  *v49 = swift_getKeyPath(&unk_16EB90);
  swift_storeEnumTagMultiPayload(v49, v65, 0);
  sub_7AD1C((uint64_t)v18, (uint64_t)v21);
  v50 = v66;
  sub_7AD68(v66, (uint64_t)v18);
  v51 = v70;
  sub_7AD68((uint64_t)v21, v70);
  v52 = v71;
  sub_7AD68((uint64_t)v18, v71);
  v53 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1FDBF8);
  v54 = v52;
  v55 = v52 + v53[12];
  v57 = v62;
  v56 = v63;
  *(_QWORD *)v55 = v63;
  *(_QWORD *)(v55 + 8) = v57;
  *(_BYTE *)(v55 + 16) = v7;
  v58 = v64;
  *(_QWORD *)(v55 + 24) = v64;
  *(_QWORD *)(v55 + 32) = KeyPath;
  *(_BYTE *)(v55 + 40) = 0;
  v59 = v54 + v53[16];
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  sub_7AD68(v51, v54 + v53[20]);
  swift_retain();
  sub_278A8(v56, v57, v7);
  swift_bridgeObjectRetain(v58);
  swift_retain();
  sub_7ADAC((uint64_t)v21);
  sub_7ADAC(v50);
  sub_7ADAC(v51);
  sub_25404(v56, v57, v7);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v58);
  return sub_7ADAC((uint64_t)v18);
}

uint64_t sub_7AD08@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_7A7B0(v1[1], v1[2], v1[3], a1);
}

uint64_t sub_7AD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TappablePaddingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7AD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TappablePaddingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_7ADAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TappablePaddingView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_7ADE8()
{
  return sub_7AE30(&qword_1FDC00, &qword_1FDBF0, (void (*)(void))sub_7AE14);
}

uint64_t sub_7AE14()
{
  return sub_7AE30(&qword_1FDC08, &qword_1FDBE0, (void (*)(void))sub_7AE9C);
}

uint64_t sub_7AE30(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_7AE9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FDC10;
  if (!qword_1FDC10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FDBD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1FDC10);
  }
  return result;
}

void sub_7AEE8(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16EFA8);
  v6 = v3;
  v5 = sub_3F28C((unint64_t *)&qword_1F9D38, 255, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_7AF78(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16EFA8);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_3F28C((unint64_t *)&qword_1F9D38, 255, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_90514, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

id sub_7B024()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___dataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___dataSource);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___dataSource);
  }
  else
  {
    v4 = (void *)sub_80BD8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_7B080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___liveObserver;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___liveObserver);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___liveObserver);
  }
  else
  {
    v4 = v0;
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player + 8);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_alignmentCoordinator);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_presentationContext);
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    swift_unknownObjectRetain(v5);
    swift_retain(v7);
    swift_retain(v8);
    v10 = swift_retain(v9);
    v11 = (void *)static OS_dispatch_queue.transcriptsPreparationQueue.getter(v10);
    v12 = type metadata accessor for LiveTranscriptObserver(0);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    v3 = sub_D4CA4(v5, v6, v7, v8, v9, v11);
    swift_unknownObjectRelease(v5);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);

    v13 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v13);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

unint64_t sub_7B1C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_7B024();
  v14 = a1;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v14);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_9944((uint64_t)v4, (uint64_t *)&unk_1FA950);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = sub_7B32C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v10)
    return 0;
  v11 = *(_QWORD *)(v10 + 16);
  if (v11 >> 62)
  {
    swift_release(v10);
    return 0;
  }
  swift_retain(*(_QWORD *)(v10 + 16));
  swift_release(v10);
  return v11;
}

uint64_t sub_7B32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v1 = ((uint64_t (*)(void))IndexPath.item.getter)();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels);
  v3 = swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels, v12, 0, 0);
  v4 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    if (v1 < *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_3;
    return 0;
  }
  if (v4 < 0)
    v9 = *v2;
  else
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  v3 = swift_bridgeObjectRelease(v4);
  if (v1 >= v10)
    return 0;
LABEL_3:
  v5 = IndexPath.item.getter(v3);
  result = swift_beginAccess(v2, v11, 32, 0);
  v7 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v7);
    goto LABEL_7;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
  {
    v8 = *(_QWORD *)(v7 + 8 * v5 + 32);
    swift_retain(v8);
LABEL_7:
    swift_endAccess(v11);
    return v8;
  }
  __break(1u);
  return result;
}

char *sub_7B450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  objc_class *v12;
  _BYTE *v13;
  id v14;
  _BYTE *v15;
  uint64_t KeyPath;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  objc_super v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE30);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionView;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionView);
  if (v7)
  {
    v8 = *(char **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionView);
  }
  else
  {
    v9 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    aBlock[4] = sub_8C9D0;
    v29 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_8DAA0;
    aBlock[3] = &block_descriptor_13;
    v10 = _Block_copy(aBlock);
    v11 = objc_msgSend(v9, "initWithSectionProvider:", v10);
    _Block_release(v10);
    swift_release(v29);
    v12 = (objc_class *)type metadata accessor for TranscriptCollectionView();
    v13 = objc_allocWithZone(v12);
    v13[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode] = 1;
    *(_QWORD *)&v13[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_subscriptions] = &_swiftEmptyArrayStorage;
    *(_QWORD *)&v13[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView____lazy_storage____verticalScrollIndicator] = 1;
    v27.receiver = v13;
    v27.super_class = v12;
    v14 = v11;
    v15 = objc_msgSendSuper2(&v27, "initWithFrame:collectionViewLayout:", v14, 0.0, 0.0, 0.0, 0.0);
    v15[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode] = 1;
    KeyPath = swift_getKeyPath(&unk_16EE78);
    v17 = v15;
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5);
    swift_release(KeyPath);
    v18 = swift_allocObject(&unk_1CC558, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v17);
    v19 = sub_27A8C(&qword_1FDE38, &qword_1FDE30, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
    v20 = Publisher<>.sink(receiveValue:)(sub_8DC80, v18, v2, v19);
    swift_release(v18);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v21 = &v17[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_subscriptions];
    swift_beginAccess(&v17[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_subscriptions], aBlock, 33, 0);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
    v23 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v21, v22, v23);
    swift_endAccess(aBlock);

    swift_release(v20);
    objc_msgSend(v17, "setDelegate:", v1);
    objc_msgSend(v17, "setClipsToBounds:", 0);
    objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v24 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v17;
    v8 = v17;

    v7 = 0;
  }
  v25 = v7;
  return v8;
}

uint64_t sub_7B768()
{
  return 0;
}

void sub_7B798()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  NSString v16;
  Class isa;
  char *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  __n128 v30;
  _QWORD v32[3];
  objc_super v33;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFC0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33.receiver = v1;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, "viewDidLoad");
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = v7;
  v9 = sub_7BB14();
  objc_msgSend(v8, "addInteraction:", v9);

  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  objc_msgSend(v10, "_setOverrideUserInterfaceRenderingMode:", 2);

  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v13 = v12;
  objc_msgSend(v12, "_setOverrideVibrancyTrait:", 1);

  sub_7BB88();
  sub_7CCA4();
  sub_7D254();
  sub_7D648();
  sub_7D8A4();
  v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v15 = off_202B68;
  swift_bridgeObjectRetain(off_202B68);
  v16 = String._bridgeToObjectiveC()();
  LOBYTE(v15) = objc_msgSend(v14, "BOOLForKey:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  if ((v15 & 1) == 0)
  {
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v18 = off_202B68;
    swift_bridgeObjectRetain(off_202B68);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setValue:forKey:", isa, v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

    v14 = v19;
  }

  v32[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playerStylePublisher];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFC8);
  v21 = sub_27A8C(&qword_1FDFD0, &qword_1FDFC8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v22 = sub_3F28C(&qword_1FDFD8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingViewModel.PlayerStyle, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlayerStyle);
  Publisher<>.removeDuplicates()(v20, v21, v22);
  v23 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v1);
  v24 = sub_7DB20();
  v25 = swift_allocObject(&unk_1CC968, 32, 7);
  *(_QWORD *)(v25 + 16) = v23;
  *(_QWORD *)(v25 + 24) = v24;
  v26 = sub_27A8C((unint64_t *)&unk_1FDFE0, &qword_1FDFC0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v27 = Publisher<>.sink(receiveValue:)(sub_90330, v25, v3, v26);
  v28 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v28);
  v29 = &v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions];
  v30 = swift_beginAccess(v29, v32, 33, 0);
  AnyCancellable.store(in:)(v29, v30);
  swift_endAccess(v32);
  swift_release(v27);
}

id sub_7BB14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___findInteraction;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___findInteraction);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___findInteraction);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIFindInteraction), "initWithSessionDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_7BB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  __n128 v66;
  void *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  __n128 v123;
  __n128 v124;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t ObjectType;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  void *v182;

  ObjectType = swift_getObjectType(v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0D8);
  v2 = *(_QWORD *)(v1 - 8);
  v169 = v1;
  v170 = v2;
  __chkstk_darwin(v1);
  v167 = (char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0E0);
  v173 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v168 = (char *)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0E8);
  v174 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v165 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0F0);
  v160 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v156 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0F8);
  v162 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v157 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE100);
  v164 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v158 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE108);
  v155 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v152 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v144 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE110);
  v139 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v134 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE118);
  v141 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v135 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE120);
  v143 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v136 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE128);
  v146 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v138 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v15);
  v130 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE130);
  v150 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE138);
  v131 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE140);
  v126 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v24 = (char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE148);
  v129 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v26 = (char *)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE150);
  v133 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v28 = (char *)&v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = v0;
  v29 = sub_7B080();
  swift_beginAccess(v29 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__alignedViewModels, &v176, 33, 0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE158);
  v149 = v24;
  Published.projectedValue.getter(v153);
  swift_endAccess(&v176);
  v30 = swift_release(v29);
  v31 = NowPlayingAlignmentCoordinator.$alignment.getter(v30);
  NowPlayingAlignmentCoordinator.$error.getter(v31);
  v32 = sub_27A8C(&qword_1FE160, &qword_1FE140, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v151 = v32;
  v33 = sub_27A8C(&qword_1FE168, &qword_1FE138, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v34 = sub_27A8C(&qword_1FE170, &qword_1FE130, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v35 = v175;
  Publisher.combineLatest<A, B>(_:_:)(v22, v19, v175, v20, v17, v32, v33, v34);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v19, v17);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v22, v20);
  v150 = *(_QWORD *)(v126 + 8);
  ((void (*)(char *, uint64_t))v150)(v24, v35);
  v36 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v176 = (id)static OS_dispatch_queue.main.getter(v37);
  v38 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v39 = (uint64_t)v130;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v130, 1, 1, v38);
  v40 = sub_27A8C(&qword_1FE178, &qword_1FE148, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
  v131 = sub_2FE50();
  v41 = v128;
  Publisher.receive<A>(on:options:)(&v176, v39, v128, v36, v40, v131);
  sub_9944(v39, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v129 + 8))(v26, v41);
  v42 = swift_allocObject(&unk_1CC468, 24, 7);
  v43 = v127;
  swift_unknownObjectWeakInit(v42 + 16, v127);
  v44 = swift_allocObject(&unk_1CCAA8, 32, 7);
  *(_QWORD *)(v44 + 16) = sub_90538;
  *(_QWORD *)(v44 + 24) = v42;
  v45 = sub_27A8C(&qword_1FE180, &qword_1FE150, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v46 = v132;
  v47 = Publisher<>.sink(receiveValue:)(sub_90540, v44, v132, v45);
  v48 = swift_release(v44);
  (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v28, v46, v48);
  v49 = v43 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions;
  v50 = swift_beginAccess(v43 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions, &v176, 33, 0);
  AnyCancellable.store(in:)(v49, v50);
  swift_endAccess(&v176);
  v51 = swift_release(v47);
  v52 = (void *)dispatch thunk of NowPlayingViewModel.activeScrubPosition.getter(v51);
  v176 = v52;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE188);
  v54 = sub_27A8C(&qword_1FE190, &qword_1FE188, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v55 = v134;
  Publisher.prefix(_:)(1, v53, v54);
  v56 = swift_release(v52);
  v57 = (void *)dispatch thunk of NowPlayingViewModel.activeScrubPosition.getter(v56);
  v176 = v57;
  v58 = sub_27A8C(&qword_1FE198, &qword_1FE110, (uint64_t)&protocol conformance descriptor for Publishers.Output<A>);
  v59 = v135;
  v60 = v137;
  Publisher.append<A>(_:)(&v176, v137, v53, v58, v54);
  v61 = swift_release(v57);
  (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v55, v60, v61);
  v62 = sub_27A8C(&qword_1FE1A0, &qword_1FE118, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  v63 = v136;
  v64 = v140;
  Publisher.dropFirst(_:)(1, v140, v62);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v59, v64);
  v65 = v144;
  OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(0.5);
  v67 = (void *)static OS_dispatch_queue.main.getter(v66);
  v176 = v67;
  v68 = sub_27A8C(&qword_1FE1A8, &qword_1FE120, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v69 = v138;
  v70 = v142;
  Publisher.throttle<A>(for:scheduler:latest:)(v65, &v176, 1, v142, v36, v68, v131);

  (*(void (**)(char *, uint64_t))(v147 + 8))(v65, v148);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v63, v70);
  v71 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v71 + 16, v43);
  v72 = sub_27A8C(&qword_1FE1B0, &qword_1FE128, (uint64_t)&protocol conformance descriptor for Publishers.Throttle<A, B>);
  v73 = v145;
  v74 = Publisher<>.sink(receiveValue:)(sub_90570, v71, v145, v72);
  v75 = swift_release(v71);
  (*(void (**)(char *, uint64_t, __n128))(v146 + 8))(v69, v73, v75);
  v76 = swift_beginAccess(v49, &v176, 33, 0);
  AnyCancellable.store(in:)(v49, v76);
  swift_endAccess(&v176);
  swift_release(v74);
  v77 = sub_7B080();
  swift_beginAccess(v77 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__activeParagraph, &v176, 33, 0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1B8);
  v79 = v152;
  Published.projectedValue.getter(v78);
  swift_endAccess(&v176);
  swift_release(v77);
  v80 = sub_27A8C(&qword_1FE1C0, &qword_1FE108, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v81 = v154;
  v82 = (void *)Publisher.share()(v154, v80);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v79, v81);
  v182 = v82;
  v83 = sub_7B080();
  swift_beginAccess(v83 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__elapsedTime, &v176, 33, 0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1C8);
  v85 = v156;
  Published.projectedValue.getter(v84);
  swift_endAccess(&v176);
  swift_release(v83);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1D0);
  v87 = sub_27A8C(&qword_1FE1D8, &qword_1FE1D0, (uint64_t)&protocol conformance descriptor for Publishers.Share<A>);
  v88 = sub_27A8C(&qword_1FE1E0, &qword_1FE0F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v89 = v157;
  v90 = v159;
  Publisher.combineLatest<A>(_:)(v85, v86, v159, v87, v88);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v85, v90);
  v176 = &dword_0 + 1;
  v177 = 0u;
  v178 = 0u;
  v179 = 1;
  v180 = 0u;
  v181 = 0u;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1E8);
  v92 = sub_27A8C(&qword_1FE1F0, &qword_1FE0F8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v93 = v158;
  v94 = v161;
  Publisher.scan<A>(_:_:)(&v176, sub_819C0, 0, v161, v91, v92);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v89, v94);
  v95 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v95 + 16, v43);
  v96 = swift_allocObject(&unk_1CCAD0, 32, 7);
  *(_QWORD *)(v96 + 16) = sub_90578;
  *(_QWORD *)(v96 + 24) = v95;
  v97 = sub_27A8C(&qword_1FE1F8, &qword_1FE100, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  v98 = v163;
  v99 = Publisher<>.sink(receiveValue:)(sub_90580, v96, v163, v97);
  v100 = swift_release(v96);
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v93, v98, v100);
  v101 = swift_beginAccess(v49, &v176, 33, 0);
  AnyCancellable.store(in:)(v49, v101);
  swift_endAccess(&v176);
  swift_release(v99);
  v102 = sub_7B080();
  swift_beginAccess(v102 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__alignedViewModels, &v176, 33, 0);
  v103 = v149;
  Published.projectedValue.getter(v153);
  swift_endAccess(&v176);
  swift_release(v102);
  v104 = v175;
  v105 = v165;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_81C70, 0, 0, 0, 0, 0, 0, 0, v175, v151);
  ((void (*)(char *, uint64_t))v150)(v103, v104);
  v176 = v82;
  v106 = sub_27A8C(&qword_1FE200, &qword_1FE0E8, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  v107 = v167;
  v108 = v105;
  v109 = v105;
  v110 = v166;
  Publisher.combineLatest<A>(_:)(v108, v86, v166, v87, v106);
  LOBYTE(v178) = 0;
  v177 = 0uLL;
  v176 = 0;
  *((_QWORD *)&v178 + 1) = _swiftEmptyArrayStorage;
  v179 = 0;
  v180 = 0uLL;
  LOBYTE(v181) = 0;
  *((_QWORD *)&v181 + 1) = _swiftEmptyArrayStorage;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE208);
  v112 = sub_27A8C(&qword_1FE210, &qword_1FE0D8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v114 = v168;
  v113 = v169;
  Publisher.scan<A>(_:_:)(&v176, sub_81E70, 0, v169, v111, v112);
  swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
  (*(void (**)(char *, uint64_t))(v170 + 8))(v107, v113);
  v115 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v43);
  v116 = swift_allocObject(&unk_1CCAF8, 32, 7);
  v117 = ObjectType;
  *(_QWORD *)(v116 + 16) = v115;
  *(_QWORD *)(v116 + 24) = v117;
  v118 = swift_allocObject(&unk_1CCB20, 32, 7);
  *(_QWORD *)(v118 + 16) = sub_905E0;
  *(_QWORD *)(v118 + 24) = v116;
  v119 = sub_27A8C(&qword_1FE218, &qword_1FE0E0, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  v120 = v171;
  v121 = Publisher<>.sink(receiveValue:)(sub_905E8, v118, v171, v119);
  v122 = swift_release(v118);
  (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v114, v120, v122);
  v123 = swift_beginAccess(v49, &v176, 33, 0);
  AnyCancellable.store(in:)(v49, v123);
  swift_endAccess(&v176);
  swift_release(v82);
  v124 = swift_release(v121);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v174 + 8))(v109, v110, v124);
}

double sub_7CCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  double result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_204250);
  v55 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE060);
  v56 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE068);
  v59 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE070);
  v14 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  v61 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE078);
  v18 = *(_QWORD *)(v17 - 8);
  v62 = v17;
  v63 = v18;
  v19 = __chkstk_darwin(v17);
  v58 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController);
  dispatch thunk of PlaybackController.$nowPlayingItem.getter(v19);
  v21 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player;
  v22 = swift_allocObject(&unk_1CCA58, 32, 7);
  v23 = *(_OWORD *)(v1 + v21);
  *(_OWORD *)(v22 + 16) = v23;
  swift_unknownObjectRetain(v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE080);
  v25 = sub_27A8C(&qword_1FBC70, &qword_204250, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher.map<A>(_:)(sub_9047C, v22, v5, v24, v25);
  v26 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v7, v5, v26);
  v27 = sub_27A8C(&qword_1FE090, &qword_1FE060, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  Publisher.removeDuplicates(by:)(sub_89BE4, 0, v8, v27);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v8);
  v28 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v66[0] = (id)static OS_dispatch_queue.main.getter(v29);
  v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
  v31 = sub_27A8C(&qword_1FE098, &qword_1FE068, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v32 = sub_2FE50();
  v33 = v57;
  Publisher.receive<A>(on:options:)(v66, v4, v57, v28, v31, v32);
  sub_9944((uint64_t)v4, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v33);
  v66[0] = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_retrySubject);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFB0);
  v35 = sub_27A8C(&qword_1FE0A0, &qword_1FE070, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v36 = sub_27A8C(&qword_1FE0A8, &qword_1FDFB0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v37 = v58;
  v38 = v60;
  Publisher.combineLatest<A>(_:)(v66, v60, v34, v35, v36);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v38);
  v39 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v1);
  v40 = swift_allocObject(&unk_1CCA80, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_904DC;
  *(_QWORD *)(v40 + 24) = v39;
  v41 = sub_27A8C((unint64_t *)&unk_1FE0B0, &qword_1FE078, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v42 = v62;
  v43 = Publisher<>.sink(receiveValue:)(sub_904E4, v40, v62, v41);
  v44 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v37, v42, v44);
  v45 = v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions;
  v46 = swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions, v66, 33, 0);
  AnyCancellable.store(in:)(v45, v46);
  swift_endAccess(v66);
  swift_release(v43);
  v66[0] = (id)dispatch thunk of PlaybackController.isPlayingPublisher.getter(v47);
  KeyPath = swift_getKeyPath(&unk_16EFA8);
  v65 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_presentationContext);
  v49 = v65;
  swift_retain();
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
  v51 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v52 = Publisher<>.assign<A>(to:on:)(KeyPath, &v65, v50, v51);
  swift_release(v49);
  swift_release(KeyPath);
  swift_release(v66[0]);
  v53 = swift_beginAccess(v45, v66, 33, 0);
  AnyCancellable.store(in:)(v45, v53);
  swift_endAccess(v66);
  *(_QWORD *)&result = swift_release(v52).n128_u64[0];
  return result;
}

double sub_7D254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  double v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  double result;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  id v37[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE038);
  v35 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = (id)objc_opt_self(NSNotificationCenter);
  v12 = objc_msgSend(v36, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillChangeFrameNotification, 0);

  v13 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v37[0] = (id)static OS_dispatch_queue.main.getter(v14);
  v15 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v34(v4, 1, 1, v15);
  v16 = sub_3F28C((unint64_t *)&qword_204260, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v33 = v16;
  v32 = sub_2FE50();
  Publisher.receive<A>(on:options:)(v37, v4, v5, v13, v16, v32);
  sub_9944((uint64_t)v4, &qword_1FB2C0);

  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v8, v5);
  v17 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v1);
  v30 = sub_27A8C((unint64_t *)&unk_1FE040, &qword_1FE038, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v18 = Publisher<>.sink(receiveValue:)(sub_9037C, v17, v9, v30);
  v19 = swift_release(v17);
  v35 = *(_QWORD *)(v35 + 8);
  ((void (*)(char *, uint64_t, __n128))v35)(v11, v9, v19);
  v20 = v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions;
  v21 = swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions, v37, 33, 0);
  AnyCancellable.store(in:)(v20, v21);
  swift_endAccess(v37);
  *(_QWORD *)&v22 = swift_release(v18).n128_u64[0];
  v23 = objc_msgSend(v36, "defaultCenter", v22);
  NSNotificationCenter.publisher(for:object:)(UIKeyboardDidHideNotification, 0);

  v37[0] = (id)static OS_dispatch_queue.main.getter(v24);
  v34(v4, 1, 1, v15);
  Publisher.receive<A>(on:options:)(v37, v4, v5, v13, v33, v32);
  sub_9944((uint64_t)v4, &qword_1FB2C0);

  v31(v8, v5);
  v25 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v1);
  v26 = Publisher<>.sink(receiveValue:)(sub_90384, v25, v9, v30);
  v27 = swift_release(v25);
  ((void (*)(char *, uint64_t, __n128))v35)(v11, v9, v27);
  v28 = swift_beginAccess(v20, v37, 33, 0);
  AnyCancellable.store(in:)(v20, v28);
  swift_endAccess(v37);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

double sub_7D648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  double result;
  uint64_t v23;
  _QWORD v24[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE010);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE018);
  v23 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = NetworkObserver.remoteServerReachabilityPublisher.getter(v7);
  v24[0] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE020);
  v12 = swift_allocObject(v11, 33, 7);
  *(_OWORD *)(v12 + 16) = xmmword_16B3D0;
  *(_BYTE *)(v12 + 32) = dispatch thunk of NetworkObserver.isLikelyToReachRemoteServer.getter() & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
  v14 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.prepend(_:)(v12, v13, v14);
  swift_release(v10);
  swift_bridgeObjectRelease(v12);
  v15 = sub_27A8C(&qword_1FE028, &qword_1FE010, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  Publisher<>.removeDuplicates()(v2, v15, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v0);
  v17 = sub_27A8C(&qword_1FE030, &qword_1FE018, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v18 = Publisher<>.sink(receiveValue:)(sub_90374, v16, v6, v17);
  v19 = swift_release(v16);
  (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v9, v6, v19);
  v20 = v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions;
  v21 = swift_beginAccess(v20, v24, 33, 0);
  AnyCancellable.store(in:)(v20, v21);
  swift_endAccess(v24);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

double sub_7D8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(_BYTE *, uint64_t, __n128);
  uint64_t v15;
  __n128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  double result;
  _BYTE v25[24];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (void *)objc_opt_self(NSNotificationCenter);
  v8 = objc_msgSend(v7, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIApplicationWillEnterForegroundNotification, 0);

  v9 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  v10 = swift_allocObject(&unk_1CC990, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = ObjectType;
  v11 = sub_3F28C((unint64_t *)&qword_204260, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v12 = Publisher<>.sink(receiveValue:)(sub_90364, v10, v3, v11);
  v13 = swift_release(v10);
  v14 = *(void (**)(_BYTE *, uint64_t, __n128))(v4 + 8);
  v14(v6, v3, v13);
  v15 = v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions;
  v16 = swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions, v25, 33, 0);
  AnyCancellable.store(in:)(v15, v16);
  swift_endAccess(v25);
  v17 = objc_msgSend(v7, "defaultCenter", swift_release(v12).n128_f64[0]);
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidEnterBackgroundNotification, 0);

  v18 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v19 = swift_allocObject(&unk_1CC9B8, 32, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = ObjectType;
  v20 = Publisher<>.sink(receiveValue:)(sub_9036C, v19, v3, v11);
  v21 = swift_release(v19);
  v14(v6, v3, v21);
  v22 = swift_beginAccess(v15, v25, 33, 0);
  AnyCancellable.store(in:)(v15, v22);
  swift_endAccess(v25);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_7DB20()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___stateMachine;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___stateMachine];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___stateMachine];
  }
  else
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController];
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_nowPlayingViewModel];
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_presentationContext];
    swift_retain(v4);
    swift_retain(v5);
    swift_retain(v6);
    v7 = v0;
    v3 = sub_8ED24(v4, v5, v6, (uint64_t)v7);
    swift_release(v6);

    v8 = *(_QWORD *)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    swift_retain(v3);
    swift_release(v8);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

void sub_7DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  char v25;
  _BYTE v26[24];

  v6 = type metadata accessor for NowPlayingViewModel.PlayerStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (void *)Strong;
    if (*(_QWORD *)(a3 + 24) != 1)
    {
LABEL_5:

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v12 == enum case for NowPlayingViewModel.PlayerStyle.mini(_:))
    {
      *(_BYTE *)(a3 + 16) = 13;
      sub_C3EE8();
      sub_7DE20();
      goto LABEL_5;
    }
    if (v12 == enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:))
    {
      *(_BYTE *)(a3 + 16) = 2;
      sub_C3EE8();
      sub_7DFA0();
      v13 = sub_7B080();
      KeyPath = swift_getKeyPath(&unk_16EEA0);
      v15 = swift_getKeyPath(&unk_16EEC8);
      static Published.subscript.getter(v24, v13, KeyPath, v15);
      swift_release(v13);
      swift_release(KeyPath);
      swift_release(v15);
      v16 = v24[0];
      v17 = v24[1];
      v18 = v24[2];
      v19 = v25;
      v20 = sub_7B080();
      v21 = swift_getKeyPath(&unk_16EF60);
      v22 = swift_getKeyPath(&unk_16EF88);
      static Published.subscript.getter(v24, v20, v21, v22);
      swift_release(v20);
      swift_release(v21);
      swift_release(v22);
      sub_8EEDC(v16, v17, v18, v19, 0);

      swift_release(v16);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

double sub_7DE20()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double result;
  _QWORD v4[4];

  v0 = sub_7B080();
  KeyPath = swift_getKeyPath(&unk_16EEA0);
  v2 = swift_getKeyPath(&unk_16EEC8);
  static Published.subscript.getter(v4, v0, KeyPath, v2);
  swift_release(v0);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  if (v4[0])
    __asm { BR              X10 }
  return result;
}

void sub_7DFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v0 = type metadata accessor for Logger(0);
  v1 = __chkstk_darwin(v0);
  v2 = sub_7DB20(v1);
  sub_C3800();
  v4 = v3;
  swift_release(v2);
  __asm { BR              X10 }
}

void sub_7E344()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  __n128 v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  objc_super v29;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = type metadata accessor for TranscriptSentenceSplittingBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (id *)((char *)&v29.receiver - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29.receiver = v1;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, "viewWillLayoutSubviews");
  v7 = sub_7B450();
  v8 = objc_msgSend(v7, "superview");

  if (!v8)
  {
    sub_7E5CC();
    v9 = sub_7B080();
    sub_7E8EC();
    v11 = v10;
    v13 = v12;
    if (qword_1F9540 != -1)
      swift_once(&qword_1F9540, sub_EF0E8);
    v14 = (void *)qword_210280;
    *v6 = v11;
    v6[1] = v13;
    v6[2] = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for TranscriptSentenceSplittingBehavior.splitMidSentence(_:), v3);
    v15 = v14;
    sub_CFF70((uint64_t)v6);
    v16 = swift_release(v9);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v4 + 8))(v6, v3, v16);
  }
  v17 = sub_7EC20();
  v18 = objc_msgSend(v17, "superview");

  if (!v18)
  {
    v19 = objc_msgSend(v1, "view");
    if (!v19)
    {
      __break(1u);
      goto LABEL_15;
    }
    v20 = v19;
    v21 = sub_7EC20();
    objc_msgSend(v20, "addSubview:", v21);

  }
  v22 = sub_7ED1C();
  v23 = objc_msgSend(v22, "superview");

  if (v23)
    goto LABEL_11;
  v24 = objc_msgSend(v1, "view");
  if (!v24)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v25 = v24;
  v26 = sub_7ED1C();
  objc_msgSend(v25, "addSubview:", v26);

LABEL_11:
  v27 = sub_7EE04();
  v28 = objc_msgSend(v27, "superview");

  if (!v28)
    sub_7EF1C();
}

void sub_7E5CC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = sub_80F68();
    objc_msgSend(v2, "addSubview:", v3);

    v4 = sub_80F68();
    v5 = sub_7B450();
    objc_msgSend(v4, "addSubview:", v5);

    v6 = (void *)objc_opt_self(NSLayoutConstraint);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v8 = swift_allocObject(v7, 64, 7);
    *(_OWORD *)(v8 + 16) = xmmword_16D2B0;
    v9 = sub_7B450();
    v10 = objc_msgSend(v9, "topAnchor");

    v11 = sub_80F68();
    v12 = objc_msgSend(v11, "topAnchor");

    v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
    *(_QWORD *)(v8 + 32) = v13;
    v14 = sub_7B450();
    v15 = objc_msgSend(v14, "leadingAnchor");

    v16 = sub_80F68();
    v17 = objc_msgSend(v16, "leadingAnchor");

    v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
    *(_QWORD *)(v8 + 40) = v18;
    v19 = sub_7B450();
    v20 = objc_msgSend(v19, "trailingAnchor");

    v21 = sub_80F68();
    v22 = objc_msgSend(v21, "trailingAnchor");

    v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
    *(_QWORD *)(v8 + 48) = v23;
    v24 = sub_7B450();
    v25 = objc_msgSend(v24, "bottomAnchor");

    v26 = sub_80F68();
    v27 = objc_msgSend(v26, "bottomAnchor");

    v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
    *(_QWORD *)(v8 + 56) = v28;
    specialized Array._endMutation()(v29);
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

    sub_7F044();
    sub_8C39C();
  }
  else
  {
    __break(1u);
  }
}

void sub_7E8EC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  id v40;
  void *v41;
  id v42;
  _QWORD v43[5];
  _QWORD v44[4];
  char v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v1 = v0;
  v2 = type metadata accessor for DeviceMetrics.Padding(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE78);
  __chkstk_darwin(v6);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v46.origin.x = v12;
  v46.origin.y = v14;
  v46.size.width = v16;
  v46.size.height = v18;
  CGRectGetWidth(v46);
  dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter(v19);
  v20 = type metadata accessor for DeviceMetrics(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20);
  if ((_DWORD)v22 == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  DeviceMetrics.padding.getter(v22);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v8, v20);
  DeviceMetrics.Padding.horizontal.getter(v23);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24 = objc_msgSend(v1, "view");
  if (!v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "safeAreaLayoutGuide");

  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v28 = v27;
  v29 = sub_F174(0, &qword_1FDE88, UILayoutGuide_ptr);
  UIPopoverPresentationControllerSourceItem.frame(in:)(v43, v28, v29);

  sub_982C((uint64_t)v43, (uint64_t)v44, &qword_1FDE90);
  if ((v45 & 1) != 0)
  {
    v30 = objc_msgSend(v1, "view");
    if (!v30)
    {
LABEL_18:
      __break(1u);
      return;
    }
    v31 = v30;
    objc_msgSend(v30, "frame");
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v39 = v38;

  }
  else
  {
    v33 = *(double *)v44;
    v35 = *(double *)&v44[1];
    v37 = *(double *)&v44[2];
    v39 = *(double *)&v44[3];
  }
  v47.origin.x = v33;
  v47.origin.y = v35;
  v47.size.width = v37;
  v47.size.height = v39;
  CGRectGetHeight(v47);
  v40 = objc_msgSend(v1, "view");
  if (!v40)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "window");

  if (v42)
  {
    objc_msgSend(v42, "bounds");
    CGRectGetHeight(v48);

  }
}

id sub_7EC20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientView);
  }
  else
  {
    v4 = v0;
    type metadata accessor for BackdropLayerHostView(0);
    v5 = NowPlayingBackdropGroupName.getter();
    v6 = (void *)BackdropLayerHostView.__allocating_init(groupName:)(v5);
    objc_msgSend(v6, "setHidden:", 1);
    v7 = objc_msgSend(v6, "layer");
    v8 = sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
    objc_msgSend(v7, "setMask:", v8);

    objc_msgSend(v6, "setUserInteractionEnabled:", 0);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_7ED1C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientView);
  }
  else
  {
    v4 = v0;
    type metadata accessor for BackdropLayerHostView(0);
    v5 = NowPlayingBackdropGroupName.getter();
    v6 = (void *)BackdropLayerHostView.__allocating_init(groupName:)(v5);
    v7 = objc_msgSend(v6, "layer");
    v8 = sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
    objc_msgSend(v7, "setMask:", v8);

    objc_msgSend(v6, "setUserInteractionEnabled:", 0);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_7EE04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___searchButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___searchButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___searchButton);
  }
  else
  {
    v4 = v0;
    sub_F174(0, &qword_1FDEB0, UIAction_ptr);
    v5 = swift_allocObject(&unk_1CC468, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v6 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_8DE30, v5);
    v7 = type metadata accessor for TranscriptSearchButton();
    v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "initWithFrame:primaryAction:", v6, 0.0, 0.0, 0.0, 0.0);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void sub_7EF1C()
{
  void *v0;
  uint64_t ObjectType;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  ObjectType = swift_getObjectType(v0);
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = sub_7EE04();
    objc_msgSend(v3, "addSubview:", v4);

    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFB8);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_16B3D0;
    *(_QWORD *)(v6 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v6 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v6, sub_8DD2C, 0, ObjectType);
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    v8 = sub_7EE04();
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 1);

    sub_7F690(2u);
  }
  else
  {
    __break(1u);
  }
}

void sub_7F044()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Height;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  double v40;
  double v41;
  id v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  id v51;
  double MaxY;
  double v53;
  id v54;
  double v55;
  double v56;
  double v57;
  double v58;
  id v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double MinY;
  BOOL v69;
  id v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  double v79;
  CGRect *v80;
  double v81;
  CGFloat x;
  double v83;
  double v84;
  double v85;
  char *v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  id v93;
  void *v94;
  id v95;
  double v96;
  double v97;
  char *v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  BOOL v107;
  char *v108;
  char *v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  char *v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  BOOL v127;
  char *v128;
  CGFloat y;
  CGFloat width;
  double v131;
  CGFloat v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  CGFloat rect;
  double recta;
  _QWORD v140[5];
  _BYTE v141[40];
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_52;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v142.origin.x = v5;
  v142.origin.y = v7;
  v142.size.width = v9;
  v142.size.height = v11;
  Height = CGRectGetHeight(v142);
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "safeAreaLayoutGuide");

  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v17 = v16;
  v18 = sub_F174(0, &qword_1FDE88, UILayoutGuide_ptr);
  UIPopoverPresentationControllerSourceItem.frame(in:)(v140, v17, v18);
  v19 = *(double *)v140;
  v20 = *(double *)&v140[1];
  v21 = *(double *)&v140[2];
  v22 = *(double *)&v140[3];

  sub_982C((uint64_t)v140, (uint64_t)v141, &qword_1FDE90);
  if (v141[32] == 1)
  {
    v23 = objc_msgSend(v1, "view");
    if (!v23)
    {
LABEL_55:
      __break(1u);
      return;
    }
    v24 = v23;
    objc_msgSend(v23, "bounds");
    v19 = v25;
    v20 = v26;
    v21 = v27;
    v22 = v28;

  }
  rect = v22;
  v29 = Height * 0.14 + Height * 0.14 + v22;
  v30 = sub_80F68();
  objc_msgSend(v30, "frame");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v143.origin.x = v32;
  v143.origin.y = v34;
  v143.size.width = v36;
  v143.size.height = v38;
  v39 = CGRectGetHeight(v143);
  v144.origin.x = v19;
  v144.origin.y = v20;
  v144.size.width = v21;
  v144.size.height = v29;
  v40 = CGRectGetHeight(v144);
  if (v39 > v40)
    v41 = v39;
  else
    v41 = v40;
  v42 = sub_80F68();
  objc_msgSend(v42, "frame");
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;

  v145.origin.x = v44;
  v145.origin.y = v46;
  v145.size.width = v48;
  v145.size.height = v50;
  v157.origin.x = v19;
  v157.origin.y = v20;
  v157.size.width = v21;
  v157.size.height = v41;
  if (!CGRectEqualToRect(v145, v157))
  {
    v51 = sub_80F68();
    objc_msgSend(v51, "setFrame:", v19, v20, v21, v41);

  }
  v146.origin.x = v19;
  v146.origin.y = v20;
  v146.size.width = v21;
  v146.size.height = v41;
  MaxY = CGRectGetMaxY(v146);
  v147.origin.x = v19;
  v147.origin.y = v20;
  v147.size.width = v21;
  v147.size.height = rect;
  v53 = CGRectGetMaxY(v147);
  v54 = sub_7EE04();
  objc_msgSend(v54, "alpha");
  v56 = v55;

  recta = 0.0;
  v57 = 0.0;
  v58 = 0.0;
  if (v56 == 1.0)
  {
    v59 = sub_7EE04();
    objc_msgSend(v59, "frame");
    v61 = v60;
    v134 = v53;
    v136 = MaxY;
    v63 = v62;
    v65 = v64;
    v67 = v66;

    v148.origin.x = v61;
    v148.origin.y = v63;
    v53 = v134;
    v148.size.width = v65;
    v148.size.height = v67;
    MinY = CGRectGetMinY(v148);
    v149.origin.x = v19;
    v149.origin.y = v20;
    v149.size.width = v21;
    v149.size.height = v41;
    v69 = MinY < CGRectGetMaxY(v149);
    MaxY = v136;
    v57 = 0.0;
    v58 = 0.0;
    if (v69)
    {
      v150.origin.x = v19;
      v150.origin.y = v20;
      v150.size.width = v21;
      v150.size.height = v41;
      v131 = CGRectGetMaxY(v150);
      v70 = sub_7EE04();
      objc_msgSend(v70, "frame");
      v72 = v71;
      v74 = v73;
      v76 = v75;
      v78 = v77;

      v151.origin.x = v72;
      v151.origin.y = v74;
      v151.size.width = v76;
      v151.size.height = v78;
      v53 = v134;
      MaxY = v136;
      v58 = v131 - CGRectGetMinY(v151);
      v57 = v58 + 32.0;
    }
  }
  v79 = MaxY - v53;
  v80 = (CGRect *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState];
  v137 = v58;
  if ((v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState + 32] & 1) != 0)
  {
    v81 = 0.0;
  }
  else
  {
    v152 = *v80;
    x = v80->origin.x;
    y = v152.origin.y;
    width = v152.size.width;
    v132 = v152.size.height;
    v83 = v79;
    v84 = CGRectGetMinY(*v80);
    v153.origin.x = v19;
    v153.origin.y = v20;
    v153.size.width = v21;
    v153.size.height = v41;
    v69 = v84 < CGRectGetMaxY(v153);
    v79 = v83;
    v81 = 0.0;
    if (v69)
    {
      v154.origin.x = v19;
      v154.origin.y = v20;
      v154.size.width = v21;
      v154.size.height = v41;
      v85 = CGRectGetMaxY(v154);
      v155.origin.x = x;
      v155.origin.y = y;
      v155.size.width = width;
      v155.size.height = v132;
      v81 = v85 - CGRectGetMinY(v155);
      recta = v81 + 10.0;
    }
  }
  v86 = sub_7B450();
  objc_msgSend(v86, "contentInset");
  v88 = v87;
  v90 = v89;

  if (v79 > v57)
    v91 = v79;
  else
    v91 = v57;
  if (v91 > recta)
    v92 = v91;
  else
    v92 = recta;
  v93 = objc_msgSend(v1, "view", *(_QWORD *)&y, *(_QWORD *)&width);
  if (!v93)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v94 = v93;
  v95 = objc_msgSend(v93, "window");

  v133 = v81;
  v135 = v79;
  if (v95)
  {
    objc_msgSend(v95, "bounds");
    v96 = CGRectGetHeight(v156);

    v97 = v96 * 0.06;
  }
  else
  {
    v97 = 0.0;
  }
  v98 = sub_7B450();
  objc_msgSend(v98, "contentInset");
  v100 = v99;
  v102 = v101;
  v104 = v103;
  v106 = v105;

  if (v100 != v97 || v102 != v88 || (v104 == v92 ? (v107 = v106 == v90) : (v107 = 0), !v107))
  {
    v108 = sub_7B450();
    objc_msgSend(v108, "setContentInset:", v97, v88, v92, v90);

  }
  v109 = sub_7B450();
  objc_msgSend(v109, "verticalScrollIndicatorInsets");
  v111 = v110;
  v113 = v112;
  v115 = v114;

  v116 = v137;
  if (v135 > v137)
    v116 = v135;
  if (v116 > v133)
    v117 = v116;
  else
    v117 = v133;
  v118 = sub_7B450();
  objc_msgSend(v118, "verticalScrollIndicatorInsets");
  v120 = v119;
  v122 = v121;
  v124 = v123;
  v126 = v125;

  if (v120 != v111 || v122 != v113 || (v124 == v117 ? (v127 = v126 == v115) : (v127 = 0), !v127))
  {
    v128 = sub_7B450();
    objc_msgSend(v128, "setVerticalScrollIndicatorInsets:", v111, v113, v117, v115);

  }
}

void sub_7F690(unsigned __int8 a1)
{
  char *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  double v23;
  double v24;
  int v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  int v40;
  void *v41;
  int v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t);
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  char v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  int v69;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  double MaxY;
  id v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  id v82;
  double v83;
  CGFloat v84;
  double v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  id v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void *v99;
  int v100;
  CGFloat v101;
  double v102;
  double v103;
  double v104;
  double v105;
  char v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;

  v2 = a1;
  v3 = type metadata accessor for DeviceMetrics.Layout(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v93 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE98);
  __chkstk_darwin(v6);
  v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
  v10 = __chkstk_darwin(v9);
  v98 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v92 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v92 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE78);
  v18 = __chkstk_darwin(v17);
  v97 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v92 - v20;
  if (v2 == 2)
  {
    v22 = sub_7EE04();
    objc_msgSend(v22, "alpha");
    v24 = v23;

    v25 = v24 == 1.0;
  }
  else
  {
    v25 = v2 & 1;
  }
  v100 = v25;
  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
    __break(1u);
    goto LABEL_39;
  }
  v27 = v26;
  objc_msgSend(v26, "bounds");
  v101 = v28;
  v30 = v29;
  v32 = v31;
  v34 = v33;

  v99 = v1;
  v96 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_session];
  dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter();
  v35 = type metadata accessor for DeviceMetrics(0);
  v36 = *(_QWORD *)(v35 - 8);
  v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  if (v95(v21, 1, v35) == 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  DeviceMetrics.layout.getter();
  v94 = *(void (**)(char *, uint64_t))(v36 + 8);
  v94(v21, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v14, enum case for DeviceMetrics.Layout.regularExtended(_:), v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  v37 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_2808C((uint64_t)v16, (uint64_t)v8, &qword_1FDE80);
  sub_2808C((uint64_t)v14, v37, &qword_1FDE80);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v39 = v35;
  if (v38((uint64_t)v8, 1, v3) == 1)
  {
    sub_9944((uint64_t)v14, &qword_1FDE80);
    sub_9944((uint64_t)v16, &qword_1FDE80);
    v40 = v38(v37, 1, v3);
    v41 = v99;
    v42 = v100;
    if (v40 == 1)
    {
      sub_9944((uint64_t)v8, &qword_1FDE80);
      v43 = 15.0;
      v44 = v101;
      v45 = v30;
      v46 = v32;
      v47 = v34;
LABEL_31:
      v71 = v44;
      v72 = v45;
      v73 = v46;
      v74 = v47;
      goto LABEL_32;
    }
    goto LABEL_11;
  }
  v48 = v98;
  sub_2808C((uint64_t)v8, v98, &qword_1FDE80);
  v49 = v38(v37, 1, v3);
  v41 = v99;
  if (v49 == 1)
  {
    sub_9944((uint64_t)v14, &qword_1FDE80);
    sub_9944((uint64_t)v16, &qword_1FDE80);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v48, v3);
    v42 = v100;
LABEL_11:
    sub_9944((uint64_t)v8, &qword_1FDE98);
    goto LABEL_13;
  }
  v50 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v93, v37, v3);
  v51 = sub_3F28C(&qword_1FDEA8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceMetrics.Layout, (uint64_t)&protocol conformance descriptor for DeviceMetrics.Layout);
  v52 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v50, v3, v51);
  v53 = *(void (**)(char *, uint64_t))(v4 + 8);
  v53(v50, v3);
  sub_9944((uint64_t)v14, &qword_1FDE80);
  sub_9944((uint64_t)v16, &qword_1FDE80);
  v53((char *)v48, v3);
  sub_9944((uint64_t)v8, &qword_1FDE80);
  v43 = 15.0;
  v44 = v101;
  v45 = v30;
  v46 = v32;
  v47 = v34;
  v42 = v100;
  if ((v52 & 1) != 0)
    goto LABEL_31;
LABEL_13:
  v54 = objc_msgSend(v41, "view");
  v55 = v54;
  if (!v42)
  {
    if (v54)
    {
      v62 = objc_msgSend(v54, "window");

      if (!v62)
      {
        v43 = 0.0;
        v71 = v101;
        v72 = v30;
        v73 = v32;
        v74 = v34;
        goto LABEL_32;
      }
      v63 = objc_msgSend(v41, "view");
      if (v63)
      {
        v64 = v63;
        v65 = sub_F174(0, &qword_1FDEA0, UIWindow_ptr);
        UIPopoverPresentationControllerSourceItem.frame(in:)(&v102, v64, v65);
        v44 = v102;
        v45 = v103;
        v46 = v104;
        v47 = v105;
        v61 = v106;

        v43 = 0.0;
        goto LABEL_30;
      }
LABEL_44:
      __break(1u);
      return;
    }
    goto LABEL_41;
  }
  if (!v54)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v56 = objc_msgSend(v54, "window");

  if (v56)
  {
    v57 = objc_msgSend(v56, "safeAreaLayoutGuide");

    v58 = objc_msgSend(v41, "view");
    if (!v58)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v59 = v58;
    v60 = sub_F174(0, &qword_1FDE88, UILayoutGuide_ptr);
    UIPopoverPresentationControllerSourceItem.frame(in:)(&v102, v59, v60);
    v44 = v102;
    v45 = v103;
    v46 = v104;
    v47 = v105;
    v61 = v106;

  }
  else
  {
    v61 = 1;
    v44 = 0.0;
    v45 = 0.0;
    v46 = 0.0;
    v47 = 0.0;
  }
  v66 = v97;
  dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter();
  if (v95(v66, 1, v39) == 1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v67 = DeviceMetrics.userInterfaceIdiom.getter();
  v69 = v68 & 1;
  v94(v66, v39);
  if (v67 == 1 && v69 == 0)
    v43 = 33.0;
  else
    v43 = 17.0;
LABEL_30:
  v71 = v101;
  v72 = v30;
  v73 = v32;
  v74 = v34;
  if ((v61 & 1) == 0)
    goto LABEL_31;
LABEL_32:
  MaxY = CGRectGetMaxY(*(CGRect *)&v71);
  v76 = sub_7EE04();
  objc_msgSend(v76, "intrinsicContentSize");
  v78 = v77;
  v80 = v79;

  if (v42)
    MaxY = MaxY - v43 - v80;
  v107.origin.x = v101;
  v107.origin.y = v30;
  v107.size.width = v32;
  v107.size.height = v34;
  v81 = round((CGRectGetWidth(v107) - v78) * 0.5);
  v82 = sub_7EE04();
  objc_msgSend(v82, "frame");
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v89;

  v108.origin.x = v84;
  v108.origin.y = v86;
  v108.size.width = v88;
  v108.size.height = v90;
  v109.origin.x = v81;
  v109.origin.y = MaxY;
  v109.size.width = v78;
  v109.size.height = v80;
  if (!CGRectEqualToRect(v108, v109))
  {
    v91 = sub_7EE04();
    objc_msgSend(v91, "setFrame:", v81, MaxY, v78, v80);

  }
}

void sub_7FE3C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  id v30;
  double Height;
  double v32;
  void *v33;
  double v34;
  id v35;
  id v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  NSNumber v51;
  uint64_t v52;
  Class isa;
  double MaxY;
  double v55;
  id v56;
  void *v57;
  id v58;
  double v59;
  double v60;
  id v61;
  id v62;
  void *v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  id v73;
  void *v74;
  double v75;
  id v76;
  double v77;
  double v78;
  double v79;
  double v80;
  id v81;
  id v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  id v91;
  void *v92;
  id v93;
  double v94;
  id v95;
  uint64_t v96;
  float v97;
  id v98;
  double v99;
  id v100;
  uint64_t v101;
  Class v102;
  __int128 v103;
  CGFloat rect;
  id v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_27;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, "window");

  if (v4)
  {
    v5 = objc_msgSend(v1, "parentViewController");
    if (!v5 || (v6 = v5, v105 = objc_msgSend(v5, "view"), v6, !v105))
    {
      v33 = v4;
LABEL_25:

      return;
    }
    v7 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v7, "begin");
    objc_msgSend(v7, "setDisableActions:", 1);
    v8 = objc_msgSend(v1, "view");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v1, "view");
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "bounds");
        v13 = v12;
        v15 = v14;
        v17 = v16;
        v19 = v18;

        objc_msgSend(v9, "convertRect:toCoordinateSpace:", v105, v13, v15, v17, v19);
        v21 = v20;
        v23 = v22;
        v25 = v24;
        v27 = v26;

        v28 = objc_msgSend(v1, "view");
        if (v28)
        {
          v29 = v28;
          v30 = objc_msgSend(v28, "window");

          rect = v27;
          if (v30)
          {
            objc_msgSend(v30, "bounds");
            Height = CGRectGetHeight(v106);

            v32 = Height * 0.06;
          }
          else
          {
            v32 = 0.0;
          }
          v34 = v23 + v32;
          v35 = sub_7EC20();
          objc_msgSend(v4, "bounds");
          objc_msgSend(v35, "setFrame:", 0.0, -v23, CGRectGetWidth(v107), v34);

          v36 = sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
          v37 = sub_7EC20();
          objc_msgSend(v37, "bounds");
          v39 = v38;
          v41 = v40;
          v43 = v42;
          v45 = v44;

          objc_msgSend(v36, "setFrame:", v39, v41, v43, v45);
          v46 = sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
          v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
          v48 = swift_allocObject(v47, 48, 7);
          *(_OWORD *)(v48 + 16) = xmmword_16B2E0;
          v49 = objc_allocWithZone((Class)NSNumber);
          *(float *)&v45 = v23 / v34;
          LODWORD(v50) = LODWORD(v45);
          *(_QWORD *)(v48 + 32) = objc_msgSend(v49, "initWithFloat:", v50);
          sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
          v51.super.super.isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
          *(NSNumber *)(v48 + 40) = v51;
          specialized Array._endMutation()(v51.super.super.isa);
          v52 = v48;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v46, "setLocations:", isa, swift_bridgeObjectRelease(v52).n128_f64[0]);

          objc_msgSend(v105, "bounds");
          MaxY = CGRectGetMaxY(v108);
          v109.origin.x = v21;
          v109.origin.y = v23;
          v109.size.width = v25;
          v109.size.height = rect;
          v55 = CGRectGetMaxY(v109);
          v56 = objc_msgSend(v1, "view");
          if (v56)
          {
            v57 = v56;
            v58 = objc_msgSend(v56, "window");

            v59 = 0.0;
            if (v58)
            {
              objc_msgSend(v58, "bounds");
              v60 = CGRectGetHeight(v110);

              v59 = v60 * 0.06;
            }
            v61 = sub_7ED1C();
            v62 = objc_msgSend(v1, "view");
            if (v62)
            {
              v63 = v62;
              objc_msgSend(v62, "bounds");
              v65 = v64;
              v67 = v66;
              v69 = v68;
              v71 = v70;

              v111.origin.x = v65;
              v111.origin.y = v67;
              v111.size.width = v69;
              v111.size.height = v71;
              v72 = CGRectGetMaxY(v111);
              v73 = objc_msgSend(v1, "view");
              if (v73)
              {
                v74 = v73;
                v75 = MaxY - v55 + v59;
                v76 = objc_msgSend(v73, "window");

                if (v76)
                {
                  objc_msgSend(v76, "bounds");
                  v77 = CGRectGetHeight(v112);

                  v78 = v77 * 0.06;
                }
                else
                {
                  v78 = 0.0;
                }
                v79 = v72 - v78;
                objc_msgSend(v4, "bounds", 2, 5);
                v80 = 0.0;
                objc_msgSend(v61, "setFrame:", 0.0, v79, CGRectGetWidth(v113), v75);

                v81 = sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
                v82 = sub_7ED1C();
                objc_msgSend(v82, "bounds");
                v84 = v83;
                v86 = v85;
                v88 = v87;
                v90 = v89;

                objc_msgSend(v81, "setFrame:", v84, v86, v88, v90);
                v91 = objc_msgSend(v1, "view");
                if (v91)
                {
                  v92 = v91;
                  v93 = objc_msgSend(v91, "window");

                  if (v93)
                  {
                    objc_msgSend(v93, "bounds");
                    v94 = CGRectGetHeight(v114);

                    v80 = v94 * 0.06;
                  }
                  v95 = sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
                  v96 = swift_allocObject(v47, 48, 7);
                  *(_OWORD *)(v96 + 16) = v103;
                  *(NSNumber *)(v96 + 32) = NSNumber.init(floatLiteral:)(0.0);
                  v98 = objc_allocWithZone((Class)NSNumber);
                  v97 = v80 / v75;
                  *(float *)&v99 = v97;
                  v100 = objc_msgSend(v98, "initWithFloat:", v99);
                  *(_QWORD *)(v96 + 40) = v100;
                  specialized Array._endMutation()(v100);
                  v101 = v96;
                  v102 = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v95, "setLocations:", v102, swift_bridgeObjectRelease(v101).n128_f64[0]);

                  objc_msgSend(v7, "commit");
                  v33 = v105;
                  goto LABEL_25;
                }
                goto LABEL_33;
              }
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
              return;
            }
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t sub_805F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void (*v24)(_BYTE *, _QWORD);
  __n128 v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[32];
  __int128 aBlock;
  __int128 v42;
  void (*v43)();
  uint64_t v44;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v34 - v13;
  v15 = sub_7DB20();
  v16 = sub_C3800();
  v18 = v17;
  swift_release(v15);
  if (v18 == 3)
  {
    *((_QWORD *)&v42 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
    v43 = (void (*)())&protocol witness table for UIContentUnavailableConfiguration;
    __swift_allocate_boxed_opaque_existential_1(&aBlock);
    v20 = swift_allocObject(&unk_1CC468, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16, v1);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_retrySubject);
    v22 = swift_allocObject(&unk_1CC8F0, 32, 7);
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v21;
    LOBYTE(v20) = *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_isNetworkReachable);
    sub_A694(v16, 3);
    swift_retain();
    static UIContentUnavailableConfiguration.playerTranscriptUnavailableConfig(error:isOffline:retryCallback:)(v16, (v20 & 1) == 0, sub_90274, v22);
    v23 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v24 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.background.modify(v40);
    UIBackgroundConfiguration.backgroundColor.setter(v23);
    v24(v40, 0);
    swift_release(v22);
    UIViewController.contentUnavailableConfiguration.setter(&aBlock);
    sub_A6A8(v16, 3);
    return sub_A6A8(v16, 3);
  }
  else if (v18 == 4 && !v16)
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v26 = (void *)static OS_dispatch_queue.main.getter(v25);
    static DispatchTime.now()(v26);
    + infix(_:_:)(v12, 2.0);
    v35 = *(void (**)(char *, uint64_t))(v9 + 8);
    v35(v12, v8);
    v27 = swift_allocObject(&unk_1CC468, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v1);
    v43 = sub_90268;
    v44 = v27;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v42 = sub_F528;
    *((_QWORD *)&v42 + 1) = &block_descriptor_122;
    v28 = _Block_copy(&aBlock);
    swift_release(v44);
    static DispatchQoS.unspecified.getter(v29);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v30 = sub_3F28C((unint64_t *)&qword_1FD850, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v32 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
    v33 = v39;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v31, v32, v39, v30);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v33);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
    return ((uint64_t (*)(char *, uint64_t))v35)(v14, v8);
  }
  else
  {
    sub_A6A8(v16, v18);
    v43 = 0;
    aBlock = 0u;
    v42 = 0u;
    return UIViewController.contentUnavailableConfiguration.setter(&aBlock);
  }
}

void sub_80A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  char v7;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  void *v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_7DB20();

    v5 = sub_C3800();
    v7 = v6;
    v8 = v6;
    swift_release(v4);
    sub_A6A8(v5, v7);
    if (v8 == 4 && !v5)
    {
      swift_beginAccess(v1, v17, 0, 0);
      v9 = swift_unknownObjectWeakLoadStrong(v1);
      if (v9)
      {
        v10 = (void *)v9;
        swift_beginAccess(v1, v13, 0, 0);
        v11 = swift_unknownObjectWeakLoadStrong(v1);
        if (v11)
        {
          v12 = (void *)v11;
          *((_QWORD *)&v15 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
          v16 = &protocol witness table for UIContentUnavailableConfiguration;
          __swift_allocate_boxed_opaque_existential_1(&v14);
          static UIContentUnavailableConfiguration.loading()();

        }
        else
        {
          v16 = 0;
          v14 = 0u;
          v15 = 0u;
        }
        UIViewController.contentUnavailableConfiguration.setter(&v14);

      }
    }
  }
}

uint64_t sub_80BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDDE0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = *(_QWORD *)(v45 + 64);
  v47 = v2;
  v3 = __chkstk_darwin(v2);
  v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v43 = (char *)&v41 - v5;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDDE8);
  v6 = *(_QWORD *)(v48 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v48);
  v9 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - v10;
  v42 = (char *)&v41 - v10;
  v12 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_session);
  v14 = swift_allocObject(&unk_1CC490, 32, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  v15 = sub_F174(0, &qword_1FDDF0, UICollectionViewCell_ptr);
  v16 = type metadata accessor for TranscriptContentViewModel();
  swift_retain(v13);
  UICollectionView.CellRegistration.init(handler:)(sub_8D0DC, v14, v15, v16);
  v17 = sub_7B450();
  v18 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v19 = v48;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v48);
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1CC4B8, v22 + 8, v20 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v23 + v21, v9, v19);
  *(_QWORD *)(v23 + v22) = v18;
  v24 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1FDDF8));
  v25 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v17, sub_8D0F0, v23);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v28 = v27;
  v29 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16, v1);
  v30 = v43;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v26, v28, sub_8D15C, v29, v15);
  v31 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v1);
  v33 = v44;
  v32 = v45;
  v34 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v44, v30, v47);
  v35 = *(unsigned __int8 *)(v32 + 80);
  v36 = v32;
  v37 = (v35 + 16) & ~v35;
  v38 = (v46 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_1CC4E0, v38 + 8, v35 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v39 + v37, v33, v34);
  *(_QWORD *)(v39 + v38) = v31;
  swift_retain(v31);
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_8D1E0, v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v34);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v48);
  swift_release(v31);
  return v25;
}

id sub_80F68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewWrapper;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewWrapper);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewWrapper);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_80FD8()
{
  return sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
}

id sub_80FF4()
{
  return sub_81010(&OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
}

id sub_81010(uint64_t *a1, SEL *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v7 = sub_8F26C(a2, a3);
    v8 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

BOOL sub_81070(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(a1 + 32);
  v3 = *(unsigned __int8 *)(a2 + 32);
  v4 = v2 & v3;
  if ((v2 & 1) == 0 && (v3 & 1) == 0)
    return CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  return v4;
}

id sub_810B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for TranscriptTimestampView.Constants.ViewType(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___timestampView;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___timestampView);
  if (v7)
  {
    v8 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___timestampView);
  }
  else
  {
    (*(void (**)(char *, _QWORD))(v3 + 104))(v5, enum case for TranscriptTimestampView.Constants.ViewType.nowPlaying(_:));
    v9 = sub_7B450();
    v10 = objc_allocWithZone((Class)type metadata accessor for TranscriptTimestampView(0));
    v11 = (void *)TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(v5, v9);
    v12 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v11;
    v8 = v11;

    v7 = 0;
  }
  v13 = v7;
  return v8;
}

uint64_t type metadata accessor for TranscriptViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI24TranscriptViewController);
}

void sub_813F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t Strong;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v59 = a4;
  v7 = type metadata accessor for Logger(0);
  v60 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v59 - v11;
  v64 = 0;
  v65 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(v65);
  v64 = 0x203A736C65646F4DLL;
  v65 = 0xE800000000000000;
  v62 = v10;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v58 = a1;
    else
      v58 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v14 = 3026478;
  if (v13)
    v15 = 8756450;
  else
    v15 = 3026478;
  v16 = (void *)0xE300000000000000;
  if (v13)
    v17 = 0xA300000000000000;
  else
    v17 = 0xE300000000000000;
  v18 = v17;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 0x656D6E67696C410ALL;
  v19._object = (void *)0xEC000000203A746ELL;
  String.append(_:)(v19);
  v20 = *(_QWORD *)(a2 + 24);
  if (v20)
    v21 = 8756450;
  else
    v21 = 3026478;
  if (v20)
    v22 = 0xA300000000000000;
  else
    v22 = 0xE300000000000000;
  v23 = v22;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease(v22);
  v24._countAndFlagsBits = 0x203A726F7272450ALL;
  v24._object = (void *)0xE800000000000000;
  String.append(_:)(v24);
  if (a3)
  {
    v63 = a3;
    swift_errorRetain(a3);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
    v14 = String.init<A>(describing:)(&v63, v25);
    v16 = v26;
  }
  v27._countAndFlagsBits = v14;
  v27._object = v16;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v16);
  v29 = v64;
  v28 = v65;
  static Logger.transcripts.getter(v30);
  v31 = swift_bridgeObjectRetain(v28);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.info.getter();
  v34 = os_log_type_enabled(v32, v33);
  v61 = v7;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = swift_slowAlloc(32, -1);
    v64 = v36;
    *(_DWORD *)v35 = 136315138;
    swift_bridgeObjectRetain(v28);
    v63 = sub_C6F4(v29, v28, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v35 + 4, v35 + 12);
    swift_bridgeObjectRelease_n(v28, 3);
    _os_log_impl(&dword_0, v32, v33, "Alignment status:\n%s", v35, 0xCu);
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    v37 = v36;
    v7 = v61;
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v28, 2);
  }
  v38 = *(void (**)(char *, uint64_t))(v60 + 8);
  v38(v12, v7);
  v39 = v62;
  if (a3)
  {
    v40 = v59 + 16;
    v41 = swift_errorRetain(a3);
    static Logger.transcripts.getter(v41);
    swift_errorRetain(a3);
    v42 = swift_errorRetain(a3);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v63 = a3;
      v64 = v46;
      *(_DWORD *)v45 = 136315138;
      swift_errorRetain(a3);
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
      v48 = String.init<A>(describing:)(&v63, v47);
      v50 = v49;
      v63 = sub_C6F4(v48, v49, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v45 + 4, v45 + 12);
      swift_bridgeObjectRelease(v50);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl(&dword_0, v43, v44, "Failed to complete alignment: %s", v45, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      v51 = v62;
    }
    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);

      v51 = v39;
    }
    v38(v51, v61);
    swift_beginAccess(v40, &v64, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v40);
    if (Strong)
    {
      v53 = (void *)Strong;
      v54 = sub_7DB20();

      v55 = *(_QWORD *)(v54 + 24);
      *(_QWORD *)(v54 + 24) = a3;
      swift_errorRetain(a3);
      swift_errorRetain(a3);
      sub_9027C(v55);
      sub_90290(v55);
      v56 = *(_QWORD *)(v54 + 24);
      sub_9027C(v56);
      v57 = sub_C5304(v56, v55);
      sub_90290(v56);
      if ((v57 & 1) == 0)
        sub_C3EE8();
      swift_errorRelease(a3);
      sub_90290(v55);
      swift_errorRelease(a3);
      swift_release(v54);
    }
    else
    {
      swift_errorRelease(a3);
    }
  }
}

double sub_81954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_7DB20();

    *(_BYTE *)(v6 + 16) = 14;
    sub_C3EE8();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_819C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  v8 = a1[9];
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)a2;
  v13 = *(unsigned __int8 *)(a2 + 24);
  v10 = *a1;
  v11 = *(_QWORD *)(a2 + 32);
  sub_62238(*a1);
  sub_62238(v4);
  sub_61410(v10);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v12;
  a3[6] = v15;
  a3[7] = v14;
  a3[8] = v13;
  a3[9] = v11;
  return swift_retain();
}

void sub_81AA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  char v14;
  int v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _QWORD v22[5];
  uint64_t v23;
  _QWORD v24[3];
  char v25;

  sub_982C((uint64_t)a2, (uint64_t)v22, &qword_1FE2B8);
  a3 += 16;
  swift_beginAccess(a3, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_982C((uint64_t)a2, (uint64_t)v24, &qword_1FE2B8);
    v8 = v24[0];
    if (v24[0] != 1)
    {
      v9 = v24[2];
      v20 = v24[1];
      v10 = v25;
      swift_retain();
      v11 = sub_7DB20();
      v12 = sub_C3800();
      v14 = v13;
      v15 = v13;
      swift_release(v11);
      sub_A6A8(v12, v14);
      if (v15 != 4 || v12)
      {
        v16 = sub_7DB20();
        sub_C3800();
        v18 = v17;
        swift_release(v16);
        __asm { BR              X10 }
      }
      sub_982C(a1, (uint64_t)&v23, &qword_1FE2B8);
      v19 = v23;
      if (v23 == 1)
        v19 = 0;
      sub_8EEDC(v8, v20, v9, v10, v19);
      sub_90788(a2);
    }

  }
}

void sub_81C60()
{
  uint64_t v0;

  sub_A6A8(v0, 3);
  JUMPOUT(0x81C30);
}

uint64_t sub_81C70(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  static Logger.transcripts.getter(v4);
  v8 = swift_bridgeObjectRetain_n(v7, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v17 = v7;
      else
        v17 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v13 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v13 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    }
    if (v13)
      v14 = 0;
    else
      v14 = 7632239;
    if (v13)
      v15 = 0xE000000000000000;
    else
      v15 = 0xE300000000000000;
    v18 = sub_C6F4(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v15);
    _os_log_impl(&dword_0, v9, v10, "Updated observer viewModels paragraphs: with%s content", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_81E70@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;

  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *((_QWORD *)a2 + 2);
  v7 = *((_BYTE *)a2 + 24);
  v8 = *((_QWORD *)a2 + 4);
  v9 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)a3 = v9;
  v10 = v9;
  *(_QWORD *)(a3 + 16) = v3;
  *(_BYTE *)(a3 + 24) = v4;
  *(_QWORD *)(a3 + 32) = v5;
  v11 = *a2;
  *(_OWORD *)(a3 + 40) = *a2;
  *(_QWORD *)(a3 + 56) = v6;
  *(_BYTE *)(a3 + 64) = v7;
  *(_QWORD *)(a3 + 72) = v8;
  swift_retain(v11);
  swift_bridgeObjectRetain(v8);
  swift_retain(v10);
  return swift_bridgeObjectRetain(v5);
}

double sub_81EF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  char v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  unsigned __int8 v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[16];
  _BYTE v62[24];
  _BYTE v63[32];

  v6 = type metadata accessor for Logger(0);
  v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v11 = (char *)&v50 - v10;
  v12 = *(_QWORD *)a2;
  if (*(_QWORD *)a2)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v56 = v8;
    v57 = v13;
    v14 = *(_BYTE *)(a2 + 24);
    v15 = *(_QWORD *)(a2 + 32);
    v58 = *(_QWORD *)(a2 + 16);
    v59 = v15;
    swift_retain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE220);
    v17 = sub_27A8C(&qword_1FE228, &qword_1FE220, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v16, v17) & 1) != 0)
    {
      v18 = a3 + 16;
      v54 = v14 & 1;
      v19 = a1[4];
      swift_beginAccess(v18, v63, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v18);
      v53 = v6;
      v55 = a1;
      if (Strong)
      {
        v21 = (void *)Strong;
        v22 = sub_7DB20();

        v23 = sub_C3800();
        v25 = v24;
        v26 = v19;
        v27 = v24;
        swift_release(v22);
        v28 = v27 == 4;
        v19 = v26;
        v28 = v28 && v23 == 0;
        v29 = v28;
        sub_A6A8(v23, v25);
      }
      else
      {
        v29 = 0;
      }
      v30 = sub_D07B8(v15, v19);
      v31 = v30;
      if ((v30 & 1) == 0 || v29)
      {
        swift_beginAccess(v18, v62, 0, 0);
        v30 = swift_unknownObjectWeakLoadStrong(v18);
        if (v30)
        {
          v32 = (void *)v30;
          sub_826EC(v15);

        }
        if ((v29 & 1) != 0)
          goto LABEL_20;
      }
      if ((v31 & (*v55 != 0)) == 0)
      {
LABEL_20:
        LODWORD(v55) = v29;
        static Logger.transcripts.getter(v30);
        v38 = swift_retain_n(v12, 2);
        v39 = Logger.logObject.getter(v38);
        v40 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = swift_slowAlloc(28, -1);
          v51 = swift_slowAlloc(64, -1);
          v59 = v51;
          *(_DWORD *)v41 = 136315650;
          v60 = sub_C6F4(0xD00000000000001BLL, 0x80000000001879D0, &v59);
          v52 = v18;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v41 + 4, v41 + 12);
          *(_WORD *)(v41 + 12) = 1024;
          LODWORD(v60) = v55 ^ 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 4, v41 + 14, v41 + 18);
          *(_WORD *)(v41 + 18) = 2080;
          v42 = swift_retain();
          sub_D26EC(v42, v57, v58, v54);
          v44 = v43;
          v46 = v45;
          swift_release(v12);
          v60 = sub_C6F4(v44, v46, &v59);
          v18 = v52;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v41 + 20, v41 + 28);
          swift_release_n(v12, 2);
          swift_bridgeObjectRelease(v46);
          _os_log_impl(&dword_0, v39, v40, "%s updating the data source (animated: %{BOOL}d, activeParagraph: %s)", (uint8_t *)v41, 0x1Cu);
          v47 = v51;
          swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v47, -1, -1);
          swift_slowDealloc(v41, -1, -1);

        }
        else
        {

          swift_release_n(v12, 2);
        }
        (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v53);
        swift_beginAccess(v18, &v59, 0, 0);
        v48 = swift_unknownObjectWeakLoadStrong(v18);
        if (v48)
        {
          v49 = (void *)v48;
          sub_82BB4(v15, v12, v57, v58, v54, v55 ^ 1);

        }
      }
      else
      {
        swift_beginAccess(v18, &v60, 0, 0);
        v33 = swift_unknownObjectWeakLoadStrong(v18);
        if (v33)
        {
          v34 = (void *)v33;
          v52 = v18;
          v35 = sub_7DB20();

          sub_C3800();
          v37 = v36;
          swift_release(v35);
          __asm { BR              X10 }
        }
      }
    }
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

void sub_82648()
{
  uint64_t v0;

  sub_A6A8(v0, 3);
  JUMPOUT(0x82620);
}

double sub_826EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  _QWORD *v51;
  __n128 v52;
  double result;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68[3];
  char v69[32];

  v2 = v1;
  v67 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE258);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE260);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE268);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v18;
  v66 = v15;
  v19 = v6;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_8F3B0((uint64_t)_swiftEmptyArrayStorage);
    v20 = v54;
  }
  else
  {
    v20 = &_swiftEmptySetSingleton;
  }
  v59 = v11;
  v60 = v10;
  v61 = v7;
  v62 = v19;
  v21 = (_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_searchSubscriptions);
  swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_searchSubscriptions, v69, 1, 0);
  v22 = *v21;
  v64 = v21;
  *v21 = v20;
  swift_bridgeObjectRelease(v22);
  v55 = sub_1264BC(v67);
  v23 = *(_QWORD *)(v55 + 16);
  v63 = v2;
  if (v23)
  {
    v24 = v17;
    v58 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    type metadata accessor for CGRect(0);
    v57 = v25;
    v56 = sub_27A8C(&qword_1FE278, &qword_1FE270, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v26 = (uint64_t *)(v55 + 40);
    do
    {
      v27 = *(v26 - 1);
      v28 = *(_QWORD *)(*v26 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
      v67 = *v26;
      v68[0] = *(id *)(v28 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText_activeSearchResultFrame);
      v29 = v68[0];
      swift_retain();
      swift_retain();
      swift_retain();
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE270);
      Publisher.compactMap<A>(_:)(sub_896F0, 0, v30, v57, v56);
      swift_release(v29);
      v31 = sub_27A8C(&qword_1FE280, &qword_1FE258, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
      v32 = sub_3F28C(&qword_1FE288, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
      v33 = v62;
      Publisher<>.removeDuplicates()(v62, v31, v32);
      v34.n128_f64[0] = (*(double (**)(char *, uint64_t))(v61 + 8))(v9, v33);
      v35 = v58;
      v68[0] = (id)static OS_dispatch_queue.main.getter(v34);
      v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v5, 1, 1, v36);
      v37 = sub_27A8C(&qword_1FE290, &qword_1FE260, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
      v38 = sub_2FE50();
      v39 = v60;
      Publisher.receive<A>(on:options:)(v68, v5, v60, v35, v37, v38);
      sub_9944((uint64_t)v5, &qword_1FB2C0);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v39);
      v40 = swift_allocObject(&unk_1CC468, 24, 7);
      swift_unknownObjectWeakInit(v40 + 16, v63);
      v41 = swift_allocObject(&unk_1CCC10, 32, 7);
      *(_QWORD *)(v41 + 16) = v40;
      *(_QWORD *)(v41 + 24) = v27;
      v42 = sub_27A8C(&qword_1FE298, &qword_1FE268, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      swift_retain();
      v43 = v24;
      v44 = v13;
      v45 = v9;
      v46 = v5;
      v47 = v66;
      v48 = Publisher<>.sink(receiveValue:)(sub_90780, v41, v66, v42);
      v49 = swift_release(v41);
      v50 = v47;
      v5 = v46;
      v9 = v45;
      v13 = v44;
      v24 = v43;
      (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v43, v50, v49);
      v51 = v64;
      v52 = swift_beginAccess(v64, v68, 33, 0);
      AnyCancellable.store(in:)(v51, v52);
      swift_endAccess(v68);
      swift_release(v27);
      swift_release(v67);
      swift_release(v48);
      v26 += 2;
      --v23;
    }
    while (v23);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v55).n128_u64[0];
  return result;
}

uint64_t sub_82BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  __n128 v38;
  _QWORD v40[2];
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55[4];

  v44 = a5;
  v45 = a6;
  v42 = a3;
  v43 = a4;
  v46 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE238);
  v48 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v47 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v40 - v10;
  v12 = sub_9063C();
  v13 = sub_A720();
  NSDiffableDataSourceSnapshot.init()(&type metadata for TranscriptViewController.Section, &type metadata for TranscriptContentViewModel.ID, v12, v13);
  v53 = v11;
  v54 = v7;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1C5948);
  v14 = sub_CA6D0((uint64_t)_swiftEmptyArrayStorage);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v21 = a1;
    else
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  else
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
  }
  v52 = a1;
  if (v15)
  {
    v51 = a1 & 0xC000000000000001;
    v50 = xmmword_16B3D0;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    }
    else
    {
      v16 = *(_QWORD *)(a1 + 32);
      swift_retain();
    }
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease(a1);
  v17 = (uint64_t *)&v49[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels];
  swift_beginAccess(&v49[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels], v55, 1, 0);
  v41 = v17;
  v18 = *v17;
  if ((unint64_t)*v17 >> 62)
  {
    if (v18 < 0)
      v22 = *v17;
    else
      v22 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v18, 2);
    v19 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v19)
    {
LABEL_10:
      if (v19 >= 1)
      {
        v50 = xmmword_16B3D0;
        v40[1] = v18;
        v51 = v18 & 0xC000000000000001;
        if ((v18 & 0xC000000000000001) != 0)
        {
          v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
        }
        else
        {
          v20 = *(_QWORD *)(v18 + 32);
          swift_retain();
        }
        __asm { BR              X10 }
      }
      __break(1u);
      JUMPOUT(0x83644);
    }
  }
  else
  {
    v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*v17, 2);
    if (v19)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease_n(v18, 2);
  v23 = *v41;
  v24 = v52;
  *v41 = v52;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v23);
  v25 = v49;
  v26 = sub_7B024();
  v28 = v47;
  v27 = v48;
  v30 = v53;
  v29 = v54;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v53, v54);
  v31 = swift_allocObject(&unk_1CCB70, 50, 7);
  v32 = v46;
  *(_QWORD *)(v31 + 16) = v25;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = v43;
  *(_QWORD *)(v31 + 32) = v42;
  *(_QWORD *)(v31 + 40) = v33;
  *(_BYTE *)(v31 + 48) = v44 & 1;
  v34 = v45 & 1;
  *(_BYTE *)(v31 + 49) = v34;
  v35 = v25;
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v28, v34, sub_906E4, v31);

  v36 = swift_release(v31);
  v37 = *(void (**)(char *, uint64_t, __n128))(v27 + 8);
  v37(v28, v29, v36);
  v38 = swift_bridgeObjectRelease(v14);
  return ((uint64_t (*)(char *, uint64_t, __n128))v37)(v30, v29, v38);
}

uint64_t sub_836A4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v21[4];
  int v22;
  uint64_t v23;

  v22 = a2;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_7B024();
  v23 = a1;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v23);

  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v15 = sub_9944((uint64_t)v9, (uint64_t *)&unk_1FA950);
    v16 = static Logger.transcripts.getter(v15);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "Attempted to scroll to an identifier that is not in the data source", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_838A0((uint64_t)v13, v22 & 1);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_838A0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  Class isa;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_7B024();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v18, a1);

  v9 = v18;
  v10 = sub_CDF8(v18);
  if ((~v9 & 0xF000000000000007) != 0)
  {
    v15 = sub_7B450();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "_scrollToItemAtIndexPath:atScrollPosition:additionalInsets:animated:", isa, 1, a2 & 1, 20.0, 0.0, 0.0, 0.0);

  }
  else
  {
    v11 = static Logger.transcripts.getter(v10);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_0, v12, v13, "Attempted to scroll to an index that is not in the data source", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_83A24(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[2];

  v4 = v3;
  v54 = a1;
  v7 = type metadata accessor for TranscriptEpisodeContext(0);
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  __chkstk_darwin(v7);
  v60 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v58 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v50 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v50 - v16;
  v18 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask;
  v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask);
  v59 = a2;
  if (v19)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
    Task.cancel()();
    swift_release(v19);
    v20 = *(_QWORD *)(v4 + v18);
  }
  else
  {
    v20 = 0;
  }
  *(_QWORD *)(v4 + v18) = 0;
  swift_release(v20);
  static Logger.transcripts.getter(v21);
  v22 = a3;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.info.getter();
  v25 = os_log_type_enabled(v23, v24);
  v56 = v4;
  v57 = v9;
  v55 = v12;
  if (v25)
  {
    v26 = swift_slowAlloc(22, -1);
    v27 = swift_slowAlloc(32, -1);
    v50 = v27;
    *(_DWORD *)v26 = 141558275;
    v61 = 1752392040;
    v62[0] = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v26 + 4, v26 + 12);
    *(_WORD *)(v26 + 12) = 2081;
    v28 = objc_msgSend(v22, "transcriptIdentifier");
    v51 = v15;
    if (v28)
    {
      v29 = v28;
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v32 = v31;

    }
    else
    {
      v30 = 0;
      v32 = 0;
    }
    v34 = Optional<A>.description.getter(v30, v32);
    v36 = v35;
    swift_bridgeObjectRelease(v32);
    v61 = sub_C6F4(v34, v36, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v26 + 14, v26 + 22);

    swift_bridgeObjectRelease(v36);
    _os_log_impl(&dword_0, v23, v24, "Beginning alignment with transcripts content %{private,mask.hash}s", (uint8_t *)v26, 0x16u);
    v37 = v50;
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    v9 = v57;
    v33 = *(void (**)(char *, uint64_t))(v58 + 8);
    v33(v17, v57);
    v15 = v51;
  }
  else
  {

    v33 = *(void (**)(char *, uint64_t))(v58 + 8);
    v33(v17, v9);
  }
  v38 = v59;
  v39 = sub_7DB20();
  v40 = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v39 + 24) = 2;
  sub_9027C(v40);
  sub_90290(v40);
  v41 = *(_QWORD *)(v39 + 24);
  sub_9027C(v41);
  v42 = sub_C5304(v41, v40);
  sub_90290(v41);
  if ((v42 & 1) == 0)
    sub_C3EE8();
  sub_90290(v40);
  swift_release(v39);
  v43 = v60;
  sub_8417C(v38, v60);
  NowPlayingAlignmentCoordinator.align(asset:to:)(v54, v43);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v43, v53);
  v45 = static Logger.transcripts.getter(v44);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_0, v46, v47, "Alignment for episode began", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v33)(v15, v9);
}

uint64_t sub_8417C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  __n128 v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0C0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TranscriptRequestInformation(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MPModelObject.adamID.getter(v10);
  if ((v14 & 1) != 0)
  {
    v19 = type metadata accessor for AlignmentCoordinatorError(0);
    v20 = sub_3F28C(&qword_1FE0C8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AlignmentCoordinatorError, (uint64_t)&protocol conformance descriptor for AlignmentCoordinatorError);
    swift_allocError(v19, v20, 0, 0);
    v22 = v21;
    v23 = (unsigned int *)&enum case for AlignmentCoordinatorError.invalidAdamID(_:);
    goto LABEL_5;
  }
  v56 = a2;
  v57 = v13;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_storeTranscriptIdentifierProvider);
  KeyPath = swift_getKeyPath(&unk_16EFD0);
  v17 = swift_getKeyPath(&unk_16EFF8);
  static Published.subscript.getter(v7, v15, KeyPath, v17);
  swift_release(KeyPath);
  v18 = swift_release(v17);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v18) == 1)
  {
    sub_9944((uint64_t)v7, &qword_1FE0C0);
LABEL_12:
    v37 = objc_msgSend(a1, "transcriptIdentifier");
    if (v37)
    {
      v38 = v37;
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v41 = v40;

      v42 = objc_msgSend(a1, "priceType");
      if (v42)
      {
        v43 = v42;
        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v46 = v45;

      }
      else
      {
        v44 = 0;
        v46 = 0;
      }
      return TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)(v57, v44, v46, v39, v41);
    }
    v19 = type metadata accessor for AlignmentCoordinatorError(0);
    v52 = sub_3F28C(&qword_1FE0C8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AlignmentCoordinatorError, (uint64_t)&protocol conformance descriptor for AlignmentCoordinatorError);
    swift_allocError(v19, v52, 0, 0);
    v22 = v53;
    v23 = (unsigned int *)&enum case for AlignmentCoordinatorError.noTranscriptForEpisode(_:);
LABEL_5:
    v24 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v22, *v23, v19);
    return swift_willThrow(v24);
  }
  v26 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v12, v7, v8);
  v27 = TranscriptRequestInformation.episodeAdamId.getter(v26);
  v29 = v28;
  v58 = v57;
  v30 = sub_40324();
  v31 = BinaryInteger.description.getter(&type metadata for UInt64, v30);
  if (v27 == v31 && v29 == v32)
  {
    swift_bridgeObjectRelease_n(v29, 2);
  }
  else
  {
    v34 = v32;
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v32, 0);
    swift_bridgeObjectRelease(v29);
    v36 = swift_bridgeObjectRelease(v34);
    if ((v35 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v36);
      goto LABEL_12;
    }
  }
  v47 = objc_msgSend(a1, "priceType", v36.n128_f64[0]);
  if (v47)
  {
    v48 = v47;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v51 = v50;

  }
  else
  {
    v49 = 0;
    v51 = 0;
  }
  v54 = TranscriptRequestInformation.ttmlIdentifier.getter(v47);
  TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)(v57, v49, v51, v54, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_84534(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];

  v2 = v1;
  v4 = type metadata accessor for TranscriptEpisodeContext(0);
  v48 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v54 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v53 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v46 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v46 - v13;
  v15 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask;
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask);
  if (v16)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
    Task.cancel()();
    swift_release(v16);
    v17 = *(_QWORD *)(v2 + v15);
  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)(v2 + v15) = 0;
  swift_release(v17);
  static Logger.transcripts.getter(v18);
  v19 = a1;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.info.getter();
  v22 = os_log_type_enabled(v20, v21);
  v51 = v2;
  v52 = v6;
  v49 = v4;
  v50 = v9;
  if (v22)
  {
    v47 = v12;
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(32, -1);
    v46 = v24;
    *(_DWORD *)v23 = 141558275;
    v55 = 1752392040;
    v56[0] = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v23 + 4, v23 + 12);
    *(_WORD *)(v23 + 12) = 2081;
    v25 = objc_msgSend(v19, "transcriptIdentifier");
    if (v25)
    {
      v26 = v25;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v31 = Optional<A>.description.getter(v27, v29);
    v33 = v32;
    swift_bridgeObjectRelease(v29);
    v55 = sub_C6F4(v31, v33, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v23 + 14, v23 + 22);

    swift_bridgeObjectRelease(v33);
    _os_log_impl(&dword_0, v20, v21, "Beginning alignment with transcripts content %{private,mask.hash}s", (uint8_t *)v23, 0x16u);
    v34 = v46;
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    v6 = v52;
    v30 = *(void (**)(char *, uint64_t))(v53 + 8);
    v30(v14, v52);
    v12 = v47;
  }
  else
  {

    v30 = *(void (**)(char *, uint64_t))(v53 + 8);
    v30(v14, v6);
  }
  v35 = sub_7DB20();
  v36 = *(_QWORD *)(v35 + 24);
  *(_QWORD *)(v35 + 24) = 2;
  sub_9027C(v36);
  sub_90290(v36);
  v37 = *(_QWORD *)(v35 + 24);
  sub_9027C(v37);
  v38 = sub_C5304(v37, v36);
  sub_90290(v37);
  if ((v38 & 1) == 0)
    sub_C3EE8();
  sub_90290(v36);
  swift_release(v35);
  v39 = v54;
  sub_8417C(v19, v54);
  NowPlayingAlignmentCoordinator.align(_:)(v39);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v39, v49);
  v41 = static Logger.transcripts.getter(v40);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_0, v42, v43, "Alignment for episode began", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v30)(v12, v6);
}

void sub_84C80(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_850CC(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_9944((uint64_t)v11, (uint64_t *)&unk_1FA950);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v17 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

    if (v17)
    {
      v18 = sub_7B32C();
      if (v18)
      {
        v19 = v18;
        v20 = objc_msgSend((id)objc_opt_self(UISelectionFeedbackGenerator), "feedbackGeneratorForView:", v17);
        objc_msgSend(v20, "selectionChanged");

        v21 = sub_7B080();
        v22 = *(_QWORD *)(v21 + 16);
        *(_QWORD *)(v21 + 24) = 0;
        *(_QWORD *)(v21 + 32) = 0;
        *(_QWORD *)(v21 + 16) = v19;
        *(_BYTE *)(v21 + 40) = 1;
        swift_retain();
        swift_release(v21);
        swift_release(v22);
        v23 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask;
        v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask];
        if (v24)
        {
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
          Task.cancel()();
          swift_release(v24);
        }
        v25 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
        type metadata accessor for MainActor(0);
        swift_retain();
        v26 = v3;
        v27 = static MainActor.shared.getter(v26);
        v28 = (_QWORD *)swift_allocObject(&unk_1CC8A0, 48, 7);
        v28[2] = v27;
        v28[3] = &protocol witness table for MainActor;
        v28[4] = v19;
        v28[5] = v26;
        v29 = sub_F0A84((uint64_t)v8, (uint64_t)&unk_1FDF98, (uint64_t)v28);
        v30 = *(_QWORD *)&v3[v23];
        *(_QWORD *)&v3[v23] = v29;
        swift_release(v30);
        __asm { BR              X10 }
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
}

void sub_850CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_7B32C();
  if (v8)
  {
    v9 = v8;
    if (*(_QWORD *)(v8 + 16) >> 62 == 3)
    {
      v10 = IndexPath.item.getter(v8);
      v11 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
      }
      else
      {
        v12 = IndexPath.section.getter(v10);
        IndexPath.init(item:section:)(v11, v12);
        sub_850CC(v7);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        swift_release(v9);
      }
    }
    else
    {
      v13 = swift_release(v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(a2, a1, v4, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  }
}

uint64_t sub_85220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v17[2];

  v0 = type metadata accessor for MetricsData(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = dispatch thunk of PlaybackController.nowPlayingItem.getter(v2);
  v6 = (void *)v5;
  if (!v5)
    goto LABEL_5;
  v7 = MPModelObject.adamID.getter(v5);
  v9 = v8;

  if ((v9 & 1) != 0)
  {
    v6 = 0;
LABEL_5:
    v12 = 0xE000000000000000;
    goto LABEL_6;
  }
  v17[1] = v7;
  v10 = sub_40324();
  v6 = (void *)BinaryInteger.description.getter(&type metadata for UInt64, v10);
  v12 = v11;
LABEL_6:
  type metadata accessor for ClickMetricsEvent(0);
  v13 = static ClickMetricsEvent.makeTranscriptTextClickEvent(for:)(v6, v12);
  swift_bridgeObjectRelease(v12);
  dispatch thunk of MetricsEvent.metricsData.getter(v14);
  MetricsController.process(_:)(v4);
  v15 = swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v15);
}

_QWORD *sub_855CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  _QWORD *result;
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  uint64_t v11;
  id v12;
  NSString v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  double v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  uint64_t v30;
  id v31;
  NSString v32;
  void *v33;
  id v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, void *);
  void *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  char v52[24];
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v52, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  result = _swiftEmptyArrayStorage;
  if (!Strong)
    return result;
  v51 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "mainBundle");
  v8._countAndFlagsBits = 0xD000000000000029;
  v53._countAndFlagsBits = 0xD00000000000003DLL;
  v53._object = (void *)0x8000000000187A60;
  v8._object = (void *)0x8000000000187A30;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v53)._object;

  v11 = swift_allocObject(&unk_1CC800, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a2);
  v12 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v49 = sub_90180;
  v50 = v11;
  aBlock = _NSConcreteStackBlock;
  v46 = 1107296256;
  v47 = sub_8DA50;
  v48 = &block_descriptor_98;
  v14 = _Block_copy(&aBlock);
  v15 = objc_msgSend(v12, "initWithName:actionHandler:", v13, v14);

  _Block_release(v14);
  v16 = v50;
  swift_release(v11);
  swift_release(v16);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFFF8));
  v18 = *(_QWORD *)((char *)&dword_18 + (v51 & 0xFFFFFFFFFFFFFF8));
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v15);
  specialized Array._endMutation()(v20);
  v21 = sub_7DB20();
  v22 = sub_C3800();
  v24 = v23;
  *(_QWORD *)&v25 = swift_release(v21).n128_u64[0];
  if (v24 >= 3u)
  {
    if (v24 == 3)
      sub_A6A8(v22, 3);
    goto LABEL_9;
  }
  if ((v22 & 0xC0) == 0x40)
  {
LABEL_9:
    v34 = objc_msgSend(v6, "mainBundle", v25);
    v55._countAndFlagsBits = 0xD000000000000047;
    v55._object = (void *)0x8000000000187B00;
    v35._object = (void *)0x8000000000187AD0;
    v35._countAndFlagsBits = 0xD00000000000002DLL;
    v36._countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v34, v36, v55)._object;

    v30 = swift_allocObject(&unk_1CC468, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16, Strong);
    v31 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    v49 = sub_90188;
    v50 = v30;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v33 = &block_descriptor_102_0;
    goto LABEL_10;
  }
  v26 = objc_msgSend(v6, "mainBundle", v25);
  v54._countAndFlagsBits = 0xD000000000000047;
  v54._object = (void *)0x8000000000187B80;
  v27._object = (void *)0x8000000000187B50;
  v27._countAndFlagsBits = 0xD00000000000002DLL;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v54)._object;

  v30 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, Strong);
  v31 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v49 = sub_90190;
  v50 = v30;
  aBlock = _NSConcreteStackBlock;
  v46 = 1107296256;
  v33 = &block_descriptor_106;
LABEL_10:
  v47 = sub_8DA50;
  v48 = v33;
  v38 = _Block_copy(&aBlock);
  v39 = objc_msgSend(v31, "initWithName:actionHandler:", v32, v38);

  _Block_release(v38);
  v40 = v50;
  swift_release(v30);
  swift_release(v40);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
  v43 = *(_QWORD *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFFF8));
  v42 = *(_QWORD *)((char *)&dword_18 + (v51 & 0xFFFFFFFFFFFFFF8));
  if (v43 >= v42 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
  v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v39);
  specialized Array._endMutation()(v44);

  return (_QWORD *)v51;
}

BOOL sub_85AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2, v3);
  v5 = Strong;
  if (Strong)
  {
    objc_msgSend(Strong, "_accessibilityShowContextMenuForElement:targetPointValue:", Strong, 0);

  }
  return v5 != 0;
}

uint64_t sub_85B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_7DB20();

    *(_BYTE *)(v5 + 16) = 11;
    sub_C3EE8();
    swift_release(v5);
  }
  return 1;
}

uint64_t sub_85B88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_7DB20();

    *(_BYTE *)(v5 + 16) = 10;
    sub_C3EE8();
    swift_release(v5);
  }
  return 1;
}

Class sub_85BF8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSArray v5;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain();
  v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    sub_F174(0, (unint64_t *)&unk_1FDF78, UIAccessibilityCustomAction_ptr);
    v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5.super.isa = 0;
  }
  return v5.super.isa;
}

void sub_85FC4(void *a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  _QWORD v14[5];
  uint64_t v15;

  objc_msgSend(a1, "contentOffset");
  v4 = v3;
  objc_msgSend(a1, "contentInset");
  v6 = floor(v4 + v5) > 0.0;
  v7 = (void *)objc_opt_self(UIView);
  v8 = swift_allocObject(&unk_1CC760, 32, 7);
  *(_BYTE *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v1;
  v14[4] = sub_9011C;
  v15 = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_F528;
  v14[3] = &block_descriptor_80_0;
  v9 = _Block_copy(v14);
  v10 = v15;
  v11 = v1;
  swift_release(v10);
  objc_msgSend(v7, "animateWithDuration:animations:", v9, 0.3);
  _Block_release(v9);
  objc_msgSend(a1, "contentOffset");
  sub_86198(v12, v13);
  sub_86518(a1);
}

void sub_860F4(char a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = sub_7EC20();
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "setHidden:", 0);

    v4 = sub_7EC20();
    objc_msgSend(v4, "setAlpha:", 1.0);
  }
  else
  {
    objc_msgSend(v2, "setAlpha:", 0.0);

    v4 = sub_7EC20();
    objc_msgSend(v4, "setHidden:", 1);
  }

}

void sub_86198(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  char *v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v23 - v12;
  v14 = sub_7B450();
  objc_msgSend(v14, "_contentMargin");
  v16 = v15;

  v17 = v16 + a2;
  if (v17 <= 0.0)
  {
    v24 = sub_810B0();
    v22 = static Duration.zero.getter();
    TranscriptTimestampView.duration.setter(v22);

    return;
  }
  v18 = sub_7B450();
  v19 = objc_msgSend(v18, "indexPathForItemAtPoint:", a1, v17);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_8;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_8:
    sub_9944((uint64_t)v6, (uint64_t *)&unk_1FA950);
    return;
  }
  v20(v13, v6, v7);
  if (sub_7B32C())
    __asm { BR              X10 }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

void sub_86518(void *a1)
{
  id v2;
  double v3;
  double v4;
  char v5;
  uint64_t v6;

  if (objc_msgSend(a1, "isDragging")
    && (objc_msgSend(a1, "_isScrubbing") & 1) == 0
    && (objc_msgSend(a1, "isDecelerating") & 1) == 0)
  {
    v2 = objc_msgSend(a1, "panGestureRecognizer");
    objc_msgSend(v2, "velocityInView:", a1);
    v4 = v3;

    if (qword_1F94F0 != -1)
      swift_once(&qword_1F94F0, sub_89B48);
    if (*(double *)&qword_1FDC20 >= v4)
    {
      if (v4 >= -*(double *)&qword_1FDC20)
        return;
      v5 = 5;
    }
    else
    {
      v5 = 4;
    }
    v6 = sub_7DB20();
    *(_BYTE *)(v6 + 16) = v5;
    sub_C3EE8();
    swift_release(v6);
  }
}

Class sub_8667C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  UIMenu v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  Class result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  UIMenuElementSize v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  char *v70;
  char *v71;
  unint64_t v72;
  id v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  void *v81;
  void *v82;
  unint64_t v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  double v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  char v110;
  double v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  Swift::String v126;
  __n128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  Swift::OpaquePointer v131;
  uint64_t v132;
  id v133;
  int v134;
  id v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD v143[2];
  uint64_t v144;
  char v145[24];
  _QWORD v146[3];
  uint64_t v147;
  uint64_t v148;
  char v149[4];
  uint64_t v150;
  uint64_t v151;
  UIImage_optional v152;
  UIImage_optional v153;

  v10 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD978);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v141 = type metadata accessor for PresentationSource(0);
  v140 = *(_QWORD *)(v141 - 8);
  v16 = __chkstk_darwin(v141);
  v18 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v139 = (char *)&v132 - v19;
  a2 += 16;
  swift_beginAccess(a2, v149, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
  {
    sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v152.value.super.isa = 0;
    v152.is_nil = 0;
    return (Class)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v152, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v131);
  }
  v21 = (void *)Strong;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(a3, "layoutAttributesForItemAtIndexPath:", isa);

  v142 = (uint64_t)v12;
  v138 = a5;
  if (v23)
  {
    objc_msgSend(v23, "frame");
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

  }
  else
  {
    objc_msgSend(a3, "bounds");
    v25 = v34;
    v27 = v35;
    v29 = v36;
    v31 = v37;
  }
  *v15 = a3;
  v15[1] = v25;
  v15[2] = v27;
  v15[3] = v29;
  v15[4] = v31;
  v38 = enum case for PresentationSource.Position.view(_:);
  v39 = type metadata accessor for PresentationSource.Position(0);
  v40 = *(_QWORD *)(v39 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v40 + 104))(v15, v38, v39);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v15, 0, 1, v39);
  v41 = v21;
  v135 = a3;
  v42 = v139;
  PresentationSource.init(viewController:position:)(v41, v15);
  v43 = *(_QWORD *)&v41[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_objectGraph];
  swift_retain();
  v44 = (id)v138;
  v138 = (uint64_t)sub_1273D4();
  v137 = *(_QWORD *)(a6 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime);
  LODWORD(v136) = *(unsigned __int8 *)(a6 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime + 8);
  v45 = *(_QWORD *)(a6 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime);
  v134 = *(unsigned __int8 *)(a6 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime + 8);
  KeyPath = swift_getKeyPath(&unk_16EEE8);
  v143[0] = a6;
  v47 = sub_3F28C((unint64_t *)&qword_1F9D58, 255, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v143, KeyPath, v47);
  v48 = swift_release(KeyPath);
  v49 = *(_QWORD *)(a6 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
  v50 = *(_BYTE *)(a6 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime + 8);
  v133 = v41;
  v51 = *(_QWORD *)&v41[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_alignmentCoordinator];
  (*(void (**)(char *, char *, uint64_t, __n128))(v140 + 16))(v18, v42, v141, v48);
  v52 = swift_retain();
  v53 = v142;
  UIView.interactionContext.getter(v52);
  v54 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
  v55 = swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v56 = sub_8FD48(v43, v44, v138, v137, v136, v45, v134, v49, v50, v51, (uint64_t)v18, v53, v55);

  if (qword_1F96B8 != -1)
    goto LABEL_83;
LABEL_7:
  swift_beginAccess(&static NowPlayingDataProvider.shared, v145, 0, 0);
  result = (Class)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v143, (uint64_t *)&unk_1FC7F0);
  if (!v143[0])
  {
    __break(1u);
    return result;
  }
  sub_DF78((uint64_t)&v144, (uint64_t)v146);
  sub_4AE24((uint64_t)v143);
  v58 = v147;
  v59 = v148;
  __swift_project_boxed_opaque_existential_1(v146, v147);
  v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 48))(v58, v59);
  __swift_destroy_boxed_opaque_existential_0(v146);
  swift_retain();
  v61 = (UIMenuElementSize)sub_ABE88(v60, v56);
  swift_bridgeObjectRelease(v60);
  swift_release(v56);
  if (swift_dynamicCastClass(v56, v54))
  {
    if ((unint64_t)v61 >> 62)
    {
      if (v61 < UIMenuElementSizeSmall)
        v121 = v61;
      else
        v121 = v61 & 0xFFFFFFFFFFFFFF8;
      v122 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v61);
      v123 = _bridgeCocoaArray<A>(_:)(v121, v122);
      swift_bridgeObjectRelease_n(v61, 2);
      v61 = v123;
    }
    else
    {
      v62 = swift_bridgeObjectRetain(v61);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v62);
      sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
      swift_bridgeObjectRelease(v61);
    }
    goto LABEL_96;
  }
  v143[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v61 >> 62)
  {
    if (v61 < UIMenuElementSizeSmall)
      v124 = v61;
    else
      v124 = v61 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v61);
    v63 = _CocoaArrayWrapper.endIndex.getter(v124);
    if (!v63)
    {
LABEL_92:
      swift_bridgeObjectRelease(v61);
      swift_bridgeObjectRelease(v61);
      v61 = (UIMenuElementSize)_swiftEmptyArrayStorage;
      v120 = (unint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_98;
      goto LABEL_93;
    }
  }
  else
  {
    v63 = *(_QWORD *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v61);
    if (!v63)
      goto LABEL_92;
  }
  v135 = (id)v56;
  v64 = v61 & 0xC000000000000001;
  v65 = 4;
  v142 = 0x8000000000182180;
  do
  {
    if (v64)
      v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v65 - 4, v61);
    else
      v66 = *(id *)(v61 + 8 * v65);
    v67 = v66;
    v54 = v65 - 3;
    if (__OFADD__(v65 - 4, 1))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      swift_once(&qword_1F96B8, sub_15D030);
      goto LABEL_7;
    }
    v68 = objc_msgSend(v66, "identifier");
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v71 = v70;

    if (v69 == 0xD000000000000025 && v71 == (char *)v142)
    {
      swift_bridgeObjectRelease(v61);
      v72 = 0x8000000000182180;
      goto LABEL_25;
    }
    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, 0xD000000000000025, 0x8000000000182180, 0);
    swift_bridgeObjectRelease(v71);
    if ((v56 & 1) != 0)
    {
      v72 = v61;
LABEL_25:
      swift_bridgeObjectRelease(v72);
      v73 = v67;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
      v56 = *(_QWORD *)((char *)&dword_10 + (v143[0] & 0xFFFFFFFFFFFFFF8));
      v74 = *(_QWORD *)((char *)&dword_18 + (v143[0] & 0xFFFFFFFFFFFFFF8));
      if (v56 >= v74 >> 1)
        goto LABEL_100;
      goto LABEL_26;
    }

    ++v65;
  }
  while (v54 != v63);
  while (1)
  {
    v76 = 4;
    v142 = (uint64_t)"ts.CopyOtherLink";
    v138 = 0x8000000000182600;
    while (1)
    {
      if (v64)
        v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v76 - 4, v61);
      else
        v77 = *(id *)(v61 + 8 * v76);
      v78 = v77;
      v54 = v76 - 3;
      if (__OFADD__(v76 - 4, 1))
        goto LABEL_81;
      v79 = objc_msgSend(v77, "identifier");
      v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
      v82 = v81;

      if (v80 == 0xD00000000000002ALL && v82 == (void *)v138)
      {
        swift_bridgeObjectRelease(v61);
        v83 = v142 | 0x8000000000000000;
        goto LABEL_39;
      }
      v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v82, 0xD00000000000002ALL, v142 | 0x8000000000000000, 0);
      swift_bridgeObjectRelease(v82);
      if ((v56 & 1) != 0)
        break;

      ++v76;
      if (v54 == v63)
        goto LABEL_42;
    }
    v83 = v61;
LABEL_39:
    swift_bridgeObjectRelease(v83);
    v84 = v78;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84);
    v56 = *(_QWORD *)((char *)&dword_10 + (v143[0] & 0xFFFFFFFFFFFFFF8));
    v85 = *(_QWORD *)((char *)&dword_18 + (v143[0] & 0xFFFFFFFFFFFFFF8));
    if (v56 >= v85 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v56 + 1, 1);
    v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v84);
    specialized Array._endMutation()(v86);

    swift_bridgeObjectRetain(v61);
LABEL_42:
    v87 = 4;
    v138 = (uint64_t)"ts.UndoSuggestLess";
    v137 = 0x8000000000182510;
    while (1)
    {
      if (v64)
        v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v87 - 4, v61);
      else
        v88 = *(id *)(v61 + 8 * v87);
      v73 = v88;
      v54 = v87 - 3;
      if (__OFADD__(v87 - 4, 1))
        goto LABEL_82;
      v89 = objc_msgSend(v88, "identifier");
      v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
      v92 = v91;

      if (v90 == 0xD00000000000001FLL && v92 == v137)
      {
        swift_bridgeObjectRelease(v61);
        v93 = v138 | 0x8000000000000000;
        goto LABEL_54;
      }
      v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v90, v92, 0xD00000000000001FLL, v138 | 0x8000000000000000, 0);
      swift_bridgeObjectRelease(v92);
      if ((v56 & 1) != 0)
        break;

      ++v87;
      if (v54 == v63)
      {
        swift_bridgeObjectRelease(v61);
        goto LABEL_57;
      }
    }
    v93 = v61;
LABEL_54:
    swift_bridgeObjectRelease(v93);
    v73 = v73;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
    v56 = *(_QWORD *)((char *)&dword_10 + (v143[0] & 0xFFFFFFFFFFFFFF8));
    v94 = *(_QWORD *)((char *)&dword_18 + (v143[0] & 0xFFFFFFFFFFFFFF8));
    if (v56 >= v94 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v56 + 1, 1);
    v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v73);
    specialized Array._endMutation()(v95);

LABEL_57:
    v146[0] = _swiftEmptyArrayStorage;
    if (v63 >= 1)
      break;
    __break(1u);
LABEL_100:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v56 + 1, 1);
LABEL_26:
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v73);
    specialized Array._endMutation()(v75);

    swift_bridgeObjectRetain(v61);
  }
  v96 = 0;
  v137 = v142 | 0x8000000000000000;
  v136 = v138 | 0x8000000000000000;
  while (2)
  {
    if (v64)
      v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v96, v61);
    else
      v97 = *(id *)(v61 + 8 * v96 + 32);
    v98 = v97;
    v99 = objc_msgSend(v97, "identifier");
    v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
    v102 = v101;

    if (v100 == 0xD000000000000025 && v102 == 0x8000000000182180)
    {

      swift_bridgeObjectRelease(0x8000000000182180);
      goto LABEL_60;
    }
    v103 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v102, 0xD000000000000025, 0x8000000000182180, 0);
    *(_QWORD *)&v104 = swift_bridgeObjectRelease(v102).n128_u64[0];
    if ((v103 & 1) != 0)
      goto LABEL_59;
    v105 = objc_msgSend(v98, "identifier", v104);
    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
    v108 = v107;

    if (v106 == 0xD00000000000002ALL && v108 == v137)
    {

      v109 = &v151;
      goto LABEL_75;
    }
    v110 = _stringCompareWithSmolCheck(_:_:expecting:)(v106, v108, 0xD00000000000002ALL, v142 | 0x8000000000000000, 0);
    *(_QWORD *)&v111 = swift_bridgeObjectRelease(v108).n128_u64[0];
    if ((v110 & 1) != 0)
    {
LABEL_59:

      goto LABEL_60;
    }
    v112 = objc_msgSend(v98, "identifier", v111);
    v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
    v115 = v114;

    if (v113 != 0xD00000000000001FLL || v115 != v136)
    {
      v116 = _stringCompareWithSmolCheck(_:_:expecting:)(v113, v115, 0xD00000000000001FLL, v138 | 0x8000000000000000, 0);
      swift_bridgeObjectRelease(v115);
      if ((v116 & 1) == 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v117);
        v118 = *(_QWORD *)(v146[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v118);
        v119 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v118, v98);
        specialized ContiguousArray._endMutation()(v119);
        goto LABEL_60;
      }
      goto LABEL_59;
    }

    v109 = &v150;
LABEL_75:
    swift_bridgeObjectRelease(*(v109 - 32) | 0x8000000000000000);
LABEL_60:
    if (v63 != ++v96)
      continue;
    break;
  }
  swift_bridgeObjectRelease(v61);
  v120 = v146[0];
  v61 = v143[0];
  v56 = (unint64_t)v135;
  if ((v146[0] & 0x8000000000000000) != 0)
  {
LABEL_98:
    v128 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v129 = swift_bridgeObjectRetain(v120);
    v130 = _bridgeCocoaArray<A>(_:)(v129, v128);
    swift_bridgeObjectRelease(v130);
    goto LABEL_95;
  }
LABEL_93:
  if ((v120 & 0x4000000000000000) != 0)
    goto LABEL_98;
  v125 = swift_bridgeObjectRetain(v120);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v125);
  sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
LABEL_95:
  swift_release_n(v120, 2);
LABEL_96:
  sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
  v126._countAndFlagsBits = 0;
  v126._object = (void *)0xE000000000000000;
  v153.value.super.isa = 0;
  v153.is_nil = 0;
  v33.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v126, (Swift::String_optional)0, v153, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v61, v131).super.super.isa;

  v127 = swift_release(v56);
  (*(void (**)(char *, uint64_t, __n128))(v140 + 8))(v139, v141, v127);
  return v33.super.super.isa;
}

void sub_875C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t, __n128);
  uint64_t *v42;
  _QWORD v43[3];
  char v44[24];

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_7B450();
  v8 = objc_msgSend(v7, "indexPathsForVisibleItems");

  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v1);
  v10 = *(_QWORD *)(v9 + 16);
  v34 = v9;
  if (v10)
  {
    v11 = v9 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v42 = (uint64_t *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels);
    v12 = swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels, v44, 0, 0);
    v13 = *(_QWORD *)(v2 + 72);
    v39 = 0;
    v40 = v13;
    v41 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v2 + 16);
    v35 = (char *)&type metadata for () + 8;
    v14 = v36;
    v41(v6, v11, v1, v12);
    while (1)
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v17(v6, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
        goto LABEL_24;
      v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 32))(v14, v6, v1);
      v19 = IndexPath.item.getter(v18);
      v20 = v19;
      v21 = *v42;
      if ((unint64_t)*v42 >> 62)
      {
        if (v21 < 0)
          v32 = *v42;
        else
          v32 = v21 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v42);
        v33 = _CocoaArrayWrapper.endIndex.getter(v32);
        v15 = swift_bridgeObjectRelease(v21);
        if (v20 >= v33)
          goto LABEL_4;
      }
      else if (v19 >= *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFF8)))
      {
        goto LABEL_4;
      }
      v22 = IndexPath.item.getter(v19);
      v23 = v42;
      swift_beginAccess(v42, v43, 32, 0);
      v24 = *v23;
      if ((*v23 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v24);
      }
      else
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_26:
          __break(1u);
          return;
        }
        if (v22 >= *(_QWORD *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_26;
        v25 = *(_QWORD *)(v24 + 8 * v22 + 32);
        swift_retain();
      }
      swift_endAccess(v43);
      v26 = *(_QWORD *)(v25 + 16);
      if (v26 >> 62)
      {
        v15 = swift_release(v25);
LABEL_4:
        (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v14, v1, v15);
        goto LABEL_5;
      }
      swift_retain();
      swift_release(v25);
      v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
      KeyPath = swift_getKeyPath(&unk_16EF10);
      v38 = &v34;
      __chkstk_darwin(KeyPath);
      *(&v34 - 2) = v27;
      *((_BYTE *)&v34 - 8) = 1;
      v37 = v27 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText___observationRegistrar;
      v43[0] = v27;
      v29 = sub_3F28C(&qword_1FDF70, 255, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
      v30 = v39;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v43, KeyPath, sub_91124, &v34 - 4, v35, v29);
      v39 = v30;
      v14 = v36;
      v31 = swift_release(KeyPath);
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v14, v1, v31);
      v16 = swift_release(v26);
LABEL_5:
      v11 += v40;
      if (!--v10)
        goto LABEL_23;
      v41(v6, v11, v1, v16);
    }
  }
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_23:
  v17(v6, 1, 1, v1);
LABEL_24:
  swift_bridgeObjectRelease(v34);
}

uint64_t sub_87984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractionContext.Page(0);
  return swift_storeEnumTagMultiPayload(a1, v2, 18);
}

uint64_t sub_879B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for InteractionContext.Origin.none(_:);
  v3 = type metadata accessor for InteractionContext.Origin(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_87B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];

  v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = sub_7B32C();

  }
  else
  {
    v10 = 0;
  }
  v15 = v10;
  v11 = sub_F174(0, &qword_1FDDF0, UICollectionViewCell_ptr);
  v12 = type metadata accessor for TranscriptContentViewModel();
  v13 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, &v15, v11, v12);
  swift_release(v10);
  return v13;
}

void *sub_87C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *Strong;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  id v25;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v11 == a2 && v12 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v14 = v12;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v11, v12, 0);
    swift_bridgeObjectRelease(v14);
    if ((v15 & 1) == 0)
      return 0;
  }
  v17 = a6 + 16;
  v18 = sub_F174(0, &qword_1FDDF0, UICollectionViewCell_ptr);
  v16 = (void *)UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(a5, a4, v18);
  swift_beginAccess(v17, &v24, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v17);
  if (Strong)
  {
    v25 = Strong;
    v20 = type metadata accessor for TranscriptViewController();
    v21 = _bridgeAnythingToObjectiveC<A>(_:)(&v25, v20);

  }
  else
  {
    v21 = 0;
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v21, "didTapEmptySpace");
  swift_unknownObjectRelease(v21);
  objc_msgSend(v16, "addGestureRecognizer:", v22);

  return v16;
}

_QWORD *sub_87D8C@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_87DA0(_QWORD *a1@<X8>)
{
  *a1 = &off_1C5970;
}

uint64_t sub_87DB0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE60);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *a3;
  v19 = a4;
  v20 = a5;
  v12 = type metadata accessor for TranscriptViewController.ContentView(0);
  v13 = sub_3F28C(&qword_1FDE68, 255, type metadata accessor for TranscriptViewController.ContentView, (uint64_t)&unk_16F02C);
  v14 = UIHostingConfiguration<>.init(content:)(sub_8DC88, v17, v12, v13);
  v15 = static Edge.Set.all.getter(v14);
  v21[3] = v8;
  v21[4] = sub_27A8C(&qword_1FDE70, &qword_1FDE60, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  __swift_allocate_boxed_opaque_existential_1(v21);
  UIHostingConfiguration.margins(_:_:)(v15, v8, 0.0);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  return UICollectionViewCell.contentConfiguration.setter(v21);
}

uint64_t sub_87EEC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)()@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t (**v19)();
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE78);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptViewController.ContentView(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v20 - v14;
  dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter(v13);
  v16 = type metadata accessor for DeviceMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)v12 = a1;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v12[*(int *)(v9 + 20)], v8, v16);
    v19 = (uint64_t (**)())&v12[*(int *)(v9 + 24)];
    *v19 = sub_8DCD0;
    v19[1] = a2;
    sub_25680((uint64_t)v12, (uint64_t)v15, type metadata accessor for TranscriptViewController.ContentView);
    sub_25680((uint64_t)v15, a3, type metadata accessor for TranscriptViewController.ContentView);
    swift_retain(a2);
    return swift_retain(a1);
  }
  return result;
}

uint64_t sub_88064(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = sub_7DB20();
    *(_BYTE *)(v4 + 16) = 10;
    sub_C3EE8();

    return swift_release(v4);
  }
  return result;
}

void sub_880D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  _BYTE v17[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE00);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v11 = (void *)Strong;
    v16[-2] = __chkstk_darwin(Strong);
    v12 = type metadata accessor for FooterView(0);
    v13 = sub_3F28C(&qword_1FDE08, 255, type metadata accessor for FooterView, (uint64_t)&unk_173E60);
    v14 = UIHostingConfiguration<>.init(content:)(sub_8D25C, &v16[-4], v12, v13);
    v15 = static Edge.Set.all.getter(v14);
    v16[3] = v6;
    v16[4] = sub_27A8C(&qword_1FDE10, &qword_1FDE00, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1(v16);
    UIHostingConfiguration.margins(_:_:)(v15, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v16);

  }
}

uint64_t sub_8824C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for FooterViewModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_882EC((uint64_t)v4);
  *(_QWORD *)a1 = swift_getKeyPath(&unk_16EE38);
  *(_BYTE *)(a1 + 8) = 0;
  v5 = type metadata accessor for FooterView(0);
  return sub_25680((uint64_t)v4, a1 + *(int *)(v5 + 20), type metadata accessor for FooterViewModel);
}

uint64_t sub_882EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  void (**v26)();
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v5);
  if (!v8)
  {
    v15 = type metadata accessor for TranscriptSource(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
LABEL_11:
    v19 = 0;
    goto LABEL_12;
  }
  v9 = v8;
  v10 = objc_msgSend(v9, "transcriptSource");
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

    TranscriptSource.init(rawValue:)(v12, v14);
  }
  else
  {
    v16 = type metadata accessor for TranscriptSource(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  }

  v17 = v9;
  v18 = objc_msgSend(v17, "author");
  v19 = v18;
  if (!v18)
  {

LABEL_12:
    v22 = 0;
    goto LABEL_13;
  }
  v20 = objc_msgSend(v18, "name");

  if (!v20)
  {

    goto LABEL_11;
  }
  v19 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

LABEL_13:
  v23 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v2);
  sub_982C((uint64_t)v7, a1, &qword_1FDE18);
  result = type metadata accessor for FooterViewModel(0);
  v25 = (_QWORD *)(a1 + *(int *)(result + 20));
  *v25 = v19;
  v25[1] = v22;
  v26 = (void (**)())(a1 + *(int *)(result + 24));
  *v26 = sub_8D8EC;
  v26[1] = (void (*)())v23;
  return result;
}

void sub_884E8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE360);
  __chkstk_darwin(v10);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE368);
  __chkstk_darwin(v16);
  v12 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SpeakerContentView(0);
  v3 = __chkstk_darwin(v11);
  __chkstk_darwin(v3);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE370);
  __chkstk_darwin(v13);
  v15 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE378);
  __chkstk_darwin(v5);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE380);
  __chkstk_darwin(v14);
  v9 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TextContentView(0);
  v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __asm { BR              X10 }
}

uint64_t sub_88714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v8 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TranscriptViewController.ContentView(0) + 24));
  v9 = *v8;
  v10 = v8[1];
  *v5 = v6;
  v5[1] = v9;
  v5[2] = v10;
  v11 = (_QWORD *)((char *)v5 + *(int *)(v2 + 24));
  *v11 = swift_getKeyPath(&unk_16F080);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  sub_25680((uint64_t)v5, v4, type metadata accessor for TextContentView);
  sub_278B8(v4, v0, type metadata accessor for TextContentView);
  swift_storeEnumTagMultiPayload(v0, v3, 0);
  v13 = v6 & 0x3FFFFFFFFFFFFFFFLL;
  v14 = sub_3F28C(&qword_1FE3A8, 255, type metadata accessor for TextContentView, (uint64_t)&unk_1727AC);
  v15 = sub_90F08();
  swift_retain_n(v6 & 0x3FFFFFFFFFFFFFFFLL, 2);
  swift_retain();
  v16 = *(_QWORD *)(v7 - 192);
  _ConditionalContent<>.init(storage:)(v0, v2, &type metadata for SilentContentView, v14, v15);
  v17 = *(_QWORD *)(v7 - 144);
  sub_2808C(v16, v17, &qword_1FE380);
  swift_storeEnumTagMultiPayload(v17, *(_QWORD *)(v7 - 160), 0);
  v18 = sub_90E80();
  v19 = sub_90F4C();
  _ConditionalContent<>.init(storage:)(v17, *(_QWORD *)(v7 - 152), *(_QWORD *)(v7 - 136), v18, v19);
  swift_release(v13);
  sub_9944(v16, &qword_1FE380);
  return sub_90FE0(v4, type metadata accessor for TextContentView);
}

void sub_88D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "becomeFirstResponder");

      v7 = sub_7BB14();
      objc_msgSend(v7, "presentFindNavigatorShowingReplace:", 0);

      sub_88DD8();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_88DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v0 = type metadata accessor for MetricsData(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = dispatch thunk of PlaybackController.nowPlayingItem.getter(v2);
  v6 = (void *)v5;
  if (!v5)
    goto LABEL_5;
  v7 = MPModelObject.adamID.getter(v5);
  v9 = v8;

  if ((v9 & 1) != 0)
  {
    v6 = 0;
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v16[1] = v7;
  v10 = sub_40324();
  v6 = (void *)BinaryInteger.description.getter(&type metadata for UInt64, v10);
  v12 = v11;
LABEL_6:
  type metadata accessor for ClickMetricsEvent(0);
  v13 = static ClickMetricsEvent.makeTranscriptSearchClickEvent(adamId:)(v6, v12);
  v14 = swift_bridgeObjectRelease(v12);
  dispatch thunk of MetricsEvent.metricsData.getter(v14);
  MetricsController.process(_:)(v4);
  swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_88F90(char a1)
{
  void *v1;
  id v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  double v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t (*v26)();
  uint64_t v27;

  v3 = sub_7EE04();
  objc_msgSend(v3, "alpha");
  v5 = v4;

  if (v5 != 1.0)
  {
    v6 = objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_1CC5D0, 24, 7);
    *(_QWORD *)(v7 + 16) = v1;
    v8 = swift_allocObject(&unk_1CC5F8, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_8DE10;
    *(_QWORD *)(v8 + 24) = v7;
    v26 = sub_ECE4;
    v27 = v8;
    v22 = _NSConcreteStackBlock;
    v23 = 1107296256;
    v24 = sub_F318;
    v25 = &block_descriptor_46_0;
    v9 = _Block_copy(&v22);
    v10 = v27;
    v11 = v1;
    swift_retain(v8);
    swift_release(v10);
    objc_msgSend((id)v6, "performWithoutAnimation:", v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 131, 1120, 40, 1);
    swift_release(v8);
    if ((v6 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v8 = swift_allocObject(&unk_1CC648, 24, 7);
      *(_QWORD *)(v8 + 16) = v11;
      if ((a1 & 1) == 0)
      {
        v20 = v11;
        v21 = sub_7EE04();
        objc_msgSend(v21, "setAlpha:", 1.0);

        sub_7F690(1u);
        sub_7F044();
        swift_release(v7);
        goto LABEL_7;
      }
      v12 = qword_1F94C0;
      v13 = v11;
      if (v12 == -1)
      {
LABEL_5:
        v14 = qword_2100C8;
        objc_msgSend((id)qword_2100C8, "settlingDuration");
        v16 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v14, v15);
        v17 = swift_allocObject(&unk_1CC670, 32, 7);
        *(_QWORD *)(v17 + 16) = sub_8DE28;
        *(_QWORD *)(v17 + 24) = v8;
        v26 = sub_72310;
        v27 = v17;
        v22 = _NSConcreteStackBlock;
        v23 = 1107296256;
        v24 = sub_F528;
        v25 = &block_descriptor_55;
        v18 = _Block_copy(&v22);
        v19 = v27;
        swift_retain(v8);
        swift_release(v19);
        objc_msgSend(v16, "addAnimations:", v18);
        _Block_release(v18);
        objc_msgSend(v16, "startAnimation");
        swift_release(v7);

LABEL_7:
        swift_release(v8);
        return;
      }
    }
    swift_once(&qword_1F94C0, sub_5E248);
    goto LABEL_5;
  }
}

void sub_8926C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v2 = type metadata accessor for DeviceMetrics.Layout(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE98);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
  v9 = __chkstk_darwin(v8);
  v33 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v31 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v31 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE78);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter(v17);
  v20 = type metadata accessor for DeviceMetrics(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    __break(1u);
  }
  else
  {
    DeviceMetrics.layout.getter();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v13, enum case for DeviceMetrics.Layout.regularExtended(_:), v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
    v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_2808C((uint64_t)v15, (uint64_t)v7, &qword_1FDE80);
    sub_2808C((uint64_t)v13, v22, &qword_1FDE80);
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v23((uint64_t)v7, 1, v2) == 1)
    {
      sub_9944((uint64_t)v13, &qword_1FDE80);
      sub_9944((uint64_t)v15, &qword_1FDE80);
      v24 = v23(v22, 1, v2);
      if (v24 == 1)
        v25 = &qword_1FDE80;
      else
        v25 = &qword_1FDE98;
      if (v24 == 1)
        v26 = -1;
      else
        v26 = 0;
    }
    else
    {
      v27 = v33;
      sub_2808C((uint64_t)v7, v33, &qword_1FDE80);
      if (v23(v22, 1, v2) == 1)
      {
        sub_9944((uint64_t)v13, &qword_1FDE80);
        sub_9944((uint64_t)v15, &qword_1FDE80);
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v27, v2);
        v26 = 0;
        v25 = &qword_1FDE98;
      }
      else
      {
        v28 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v32, v22, v2);
        v29 = sub_3F28C(&qword_1FDEA8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceMetrics.Layout, (uint64_t)&protocol conformance descriptor for DeviceMetrics.Layout);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v28, v2, v29);
        v30 = *(void (**)(char *, uint64_t))(v3 + 8);
        v30(v28, v2);
        v25 = &qword_1FDE80;
        sub_9944((uint64_t)v13, &qword_1FDE80);
        sub_9944((uint64_t)v15, &qword_1FDE80);
        v30((char *)v27, v2);
      }
    }
    sub_9944((uint64_t)v7, v25);
    sub_7F690(v26 & 1);
  }
}

void sub_89610()
{
  id v0;

  v0 = sub_7EE04();
  objc_msgSend(v0, "setAlpha:", 1.0);

  sub_7F690(1u);
  sub_7F044();
}

void sub_89654(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_7EE04();
    objc_msgSend(v4, "setAlpha:", 0.0);

  }
  swift_beginAccess(v1, &v7, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = (void *)v5;
    sub_7F044();

  }
}

__n128 sub_896F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(a1 + 32);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 32) = v2;
  return result;
}

void sub_89704(double *a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_89784(v2, v3);

  }
}

void sub_89784(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  Class isa;
  id v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  char *v33;
  Class v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  CGRect v39;
  CGRect v40;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_7B024();
  sub_10F86C();
  v14 = v13;
  v38 = v13;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v38);

  v15 = swift_release(v14 & 0x3FFFFFFFFFFFFFFFLL);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v15) == 1)
  {
    sub_9944((uint64_t)v7, (uint64_t *)&unk_1FA950);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v16 = sub_7B450();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v16, "cellForItemAtIndexPath:", isa);

  if (!v18)
    goto LABEL_7;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState + 32) & 1) == 0)
  {
    v36 = a2;
    objc_msgSend(v18, "frame");
    v37 = CGRectGetHeight(v39) + 20.0;
    v19 = sub_7B450();
    objc_msgSend(v19, "frame");
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    objc_msgSend(v19, "contentInset");
    v29 = v28;
    v31 = v30;

    v40.origin.x = UIEdgeInsetsInsetRect(v21, v23, v25, v27, v29, v31);
    if (CGRectGetHeight(v40) < v37)
    {
      v32 = 20.0 - v36;
      v33 = sub_7B450();
      v34 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v33, "_scrollToItemAtIndexPath:atScrollPosition:additionalInsets:animated:", v34, 1, 1, fmin(v32, 20.0), 0.0, 0.0, 0.0);

LABEL_7:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

}

void sub_89B48()
{
  id v0;
  NSString v1;
  double v2;
  double v3;
  double v4;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "doubleForKey:", v1);
  v3 = v2;

  v4 = 50.0;
  if (v3 != 0.0)
    v4 = v3;
  qword_1FDC20 = *(_QWORD *)&v4;
}

uint64_t sub_89BE4(_QWORD *a1, uint64_t *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v2 = (void *)a1[1];
  v4 = *a2;
  v3 = (void *)a2[1];
  if (!*a1)
  {
    if (!v4 || (MPModelObject.adamID.getter(a1), (v12 & 1) != 0))
    {
LABEL_11:
      v13 = objc_msgSend(v2, "asset");
      v14 = objc_msgSend(v3, "asset");
      v15 = v14;
      if (v13)
      {
        if (!v14)
        {
          v11 = 0;
          goto LABEL_20;
        }
        sub_F174(0, &qword_1FE0D0, AVURLAsset_ptr);
        v16 = v13;
        v11 = static NSObject.== infix(_:_:)(v16, v15);

      }
      else
      {
        if (!v14)
        {
          v11 = 1;
          return v11 & 1;
        }
        v11 = 0;
      }
      v13 = v15;
LABEL_20:

      return v11 & 1;
    }
LABEL_9:
    v11 = 0;
    return v11 & 1;
  }
  v5 = MPModelObject.adamID.getter(a1);
  v7 = v6;
  if (!v4)
  {
    if ((v6 & 1) != 0)
      goto LABEL_11;
    goto LABEL_9;
  }
  v8 = v5;
  v9 = MPModelObject.adamID.getter(v5);
  if ((v7 & 1) != 0)
  {
    if ((v10 & 1) != 0)
      goto LABEL_11;
    goto LABEL_9;
  }
  v11 = 0;
  if ((v10 & 1) == 0 && v8 == v9)
    goto LABEL_11;
  return v11 & 1;
}

double sub_89D0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v5;
  uint64_t Strong;
  void *v7;
  double result;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = a3 + 16;
  if (a1)
  {
    v5 = a1;
    if ((static Podcasts.isBlueMoonEnabled()(v5) & 1) != 0)
    {
      swift_beginAccess(v3, v17, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v3);
      if (Strong)
      {
        v7 = (void *)Strong;
        sub_84534(v5);

      }
      return result;
    }
    if (a2)
    {
      v9 = a2;
      v10 = objc_msgSend(v9, "asset");
      if (v10)
      {
        v11 = v10;
        swift_beginAccess(v3, v17, 0, 0);
        v12 = swift_unknownObjectWeakLoadStrong(v3);
        if (v12)
        {
          v13 = (void *)v12;
          sub_83A24((uint64_t)v11, v5, v9);

        }
        return result;
      }

    }
    else
    {
      v9 = v5;
    }

  }
  swift_beginAccess(v3, v17, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(v3);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_alignmentCoordinator);
    swift_retain();

    NowPlayingAlignmentCoordinator.clear()();
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

void sub_89E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  CGRect *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  double v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD v41[3];
  void *v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49[24];
  __int128 v50;
  __int128 v51;
  char v52;
  CGRect v53;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return;
  v4 = (char *)Strong;
  v5 = Notification.userInfo.getter();
  if (!v5)
  {

    return;
  }
  v6 = v5;
  Notification.object.getter(v41);
  if (!v42)
  {

    swift_bridgeObjectRelease(v6);
    sub_9944((uint64_t)v41, &qword_1FD880);
    return;
  }
  v7 = sub_F174(0, (unint64_t *)&unk_1FE050, UIScreen_ptr);
  if ((swift_dynamicCast(&v50, v41, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {

LABEL_20:
    swift_bridgeObjectRelease(v6);
    return;
  }
  v8 = (void *)v50;
  *(_QWORD *)&v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  *((_QWORD *)&v47 + 1) = v9;
  AnyHashable.init<A>(_:)(v41, &v47, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v6 + 16) && (v10 = sub_139E30((uint64_t)v41), (v11 & 1) != 0))
  {
    sub_CD54(*(_QWORD *)(v6 + 56) + 32 * v10, (uint64_t)&v50);
  }
  else
  {
    v50 = 0u;
    v51 = 0u;
  }
  sub_9038C((uint64_t)v41);
  if (!*((_QWORD *)&v51 + 1))
  {

    swift_bridgeObjectRelease(v6);
    sub_9944((uint64_t)&v50, &qword_1FD880);
    return;
  }
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast(&v47, &v50, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0)
  {

    goto LABEL_20;
  }
  v13 = v47;
  v14 = v48;
  v15 = objc_msgSend(v8, "coordinateSpace");
  v16 = objc_msgSend(v4, "view");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v15, "convertRect:toCoordinateSpace:", v16, v13, v14);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;
    swift_unknownObjectRelease(v15);

    *(CGFloat *)&v50 = v19;
    *((CGFloat *)&v50 + 1) = v21;
    *(CGFloat *)&v51 = v23;
    *((CGFloat *)&v51 + 1) = v25;
    v52 = 0;
    v26 = (CGRect *)&v4[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState];
    if ((v4[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState + 32] & 1) == 0)
    {
      v53.origin.x = v19;
      v53.origin.y = v21;
      v53.size.width = v23;
      v53.size.height = v25;
      if (CGRectEqualToRect(v53, *v26))
      {

        swift_bridgeObjectRelease(v6);
        return;
      }
    }
    v27 = swift_allocObject(&unk_1CC9E0, 57, 7);
    *(_QWORD *)(v27 + 16) = v4;
    sub_903E4(&v50, v27 + 24);
    *(double *)&v45 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationCurveUserInfoKey));
    v46 = v28;
    v29 = v4;
    AnyHashable.init<A>(_:)(v41, &v45, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v6 + 16) && (v30 = sub_139E30((uint64_t)v41), (v31 & 1) != 0))
    {
      sub_CD54(*(_QWORD *)(v6 + 56) + 32 * v30, (uint64_t)&v47);
    }
    else
    {
      v47 = 0u;
      v48 = 0u;
    }
    sub_9038C((uint64_t)v41);
    if (*((_QWORD *)&v48 + 1))
    {
      if ((swift_dynamicCast(&v45, &v47, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0)
      {
        swift_bridgeObjectRelease(v6);
LABEL_38:
        sub_903E4(&v50, (uint64_t)v26);
        sub_7F044();

        swift_release(v27);
        return;
      }
      v32 = v45;
      *(double *)&v45 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationDurationUserInfoKey));
      v46 = v33;
      AnyHashable.init<A>(_:)(v41, &v45, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v6 + 16) && (v34 = sub_139E30((uint64_t)v41), (v35 & 1) != 0))
      {
        sub_CD54(*(_QWORD *)(v6 + 56) + 32 * v34, (uint64_t)&v47);
      }
      else
      {
        v47 = 0u;
        v48 = 0u;
      }
      swift_bridgeObjectRelease(v6);
      sub_9038C((uint64_t)v41);
      if (*((_QWORD *)&v48 + 1))
      {
        if ((swift_dynamicCast(&v45, &v47, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
        {
          v36 = *(double *)&v45;
          v37 = (void *)objc_opt_self(UIView);
          v38 = swift_allocObject(&unk_1CCA08, 32, 7);
          *(_QWORD *)(v38 + 16) = sub_903FC;
          *(_QWORD *)(v38 + 24) = v27;
          v43 = sub_72310;
          v44 = v38;
          v41[0] = _NSConcreteStackBlock;
          v41[1] = 1107296256;
          v41[2] = sub_F528;
          v42 = &block_descriptor_162;
          v39 = _Block_copy(v41);
          v40 = v44;
          swift_retain();
          swift_release(v40);
          objc_msgSend(v37, "animateWithDuration:delay:options:animations:completion:", v32 << 16, v39, 0, v36, 0.0);

          swift_release(v27);
          _Block_release(v39);
          return;
        }
        goto LABEL_38;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v6);
    }
    sub_9944((uint64_t)&v47, &qword_1FD880);
    goto LABEL_38;
  }
  __break(1u);
}

void sub_8A384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *Strong;
  char *v5;
  char v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = &Strong[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState];
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
    v5[32] = 1;

  }
}

uint64_t sub_8A3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[14] = a4;
  v5[15] = a5;
  v6 = type metadata accessor for Logger(0);
  v5[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[17] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[18] = swift_task_alloc(v8);
  v5[19] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v5[21] = v11;
  v5[22] = v12;
  return swift_task_switch(sub_8A48C, v11, v12);
}

void sub_8A48C()
{
  __asm { BR              X9 }
}

uint64_t sub_8A4E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t ObjectType;
  double v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  double v18;
  uint64_t KeyPath;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  char v24;
  void *v25;
  void *v26;
  id v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(void);
  _QWORD *v39;
  char *v40;

  v5 = sub_3F28C(&qword_1FDF60, 255, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  ObjectType = swift_getObjectType(v0);
  swift_retain();
  v7 = COERCE_DOUBLE(sub_36E5C(ObjectType, v5));
  v9 = v8;
  swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
  if ((v9 & 1) != 0)
  {
    swift_release(*(_QWORD *)(v2 + 160));
    v13 = static Logger.transcripts.getter(v12);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "Unable to seek to selected cell, no timestamp available", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v17 = *(_QWORD *)(v2 + 152);
    goto LABEL_19;
  }
  *(double *)(v2 + 184) = v7;
  v11 = static Task<>.isCancelled.getter(v10);
  if ((v11 & 1) == 0)
    __asm { BR              X10 }
  if (v4)
  {
    v18 = v7 + 0.0;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_16EF38);
    *v3 = v0;
    v20 = sub_3F28C((unint64_t *)&qword_1F9D58, 255, type metadata accessor for TextContent, (uint64_t)&unk_174808);
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)(v3, KeyPath, v20);
    swift_release(KeyPath);
    v21 = *(double *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__durationFromPlayerStartTimeToFirstWordTime);
    swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
    v18 = v21 + v7;
    v22 = swift_getKeyPath(&unk_16EEE8);
    *v1 = v0;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)(v1, v22, v20);
    swift_release(v22);
    v23 = *(double *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
    v24 = *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime + 8);
    swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
    if (!(v24 & 1 | (v18 - v23 < 0.1)))
      v18 = v18 + -0.1;
  }
  *(_QWORD *)(v2 + 216) = *(_QWORD *)(*(_QWORD *)(v2 + 120)
                                    + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController);
  v25 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v11);
  *(_QWORD *)(v2 + 224) = v25;
  if (!v25)
  {
LABEL_16:
    swift_release(*(_QWORD *)(v2 + 160));
    v30 = static Logger.transcripts.getter(v29);
    v14 = Logger.logObject.getter(v30);
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_0, v14, v31, "Attempting to seek to offset beyond the item's duration can cause undefined behavior. Ignoring command.", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    v17 = *(_QWORD *)(v2 + 144);
LABEL_19:
    v33 = *(_QWORD *)(v2 + 128);
    v34 = *(_QWORD *)(v2 + 136);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v17, v33);
    goto LABEL_20;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "duration");
  if (v18 >= v28)
  {

    goto LABEL_16;
  }
  if ((static Task<>.isCancelled.getter(v27) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v2 + 160));

LABEL_20:
    v35 = *(_QWORD *)(v2 + 144);
    swift_task_dealloc(*(_QWORD *)(v2 + 152));
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  v37 = type metadata accessor for PlaybackController.TransportCommand(0);
  *(_QWORD *)(v2 + 232) = v37;
  *(_QWORD *)(v2 + 40) = v37;
  *(_QWORD *)(v2 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(double *)__swift_allocate_boxed_opaque_existential_1((_QWORD *)(v2 + 16)) = v18;
  v38 = *(void (**)(void))(*(_QWORD *)(v37 - 8) + 104);
  *(_QWORD *)(v2 + 240) = v38;
  v38();
  v40 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
      + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v39 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                   + 1));
  *(_QWORD *)(v2 + 248) = v39;
  *v39 = v2;
  v39[1] = sub_8ACF4;
  return ((uint64_t (*)(uint64_t, _QWORD))v40)(v2 + 16, 0);
}

uint64_t sub_8AA98(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 200));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = *(_QWORD *)(v4 + 168);
    v6 = *(_QWORD *)(v4 + 176);
    v7 = sub_8AF24;
  }
  else
  {
    *(double *)(v4 + 208) = a1;
    v5 = *(_QWORD *)(v4 + 168);
    v6 = *(_QWORD *)(v4 + 176);
    v7 = sub_8AB10;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_8AB10()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  char *v20;

  v1 = *(double *)(v0 + 208);
  v2 = dispatch thunk of TranscriptSyncingStateObserver.isSyncing.setter(0);
  *(_QWORD *)(v0 + 216) = *(_QWORD *)(*(_QWORD *)(v0 + 120)
                                    + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController);
  v3 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v2);
  *(_QWORD *)(v0 + 224) = v3;
  if (!v3)
  {
LABEL_6:
    swift_release(*(_QWORD *)(v0 + 160));
    v8 = static Logger.transcripts.getter(v7);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "Attempting to seek to offset beyond the item's duration can cause undefined behavior. Ignoring command.", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 128);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    goto LABEL_9;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "duration");
  if (v1 >= v6)
  {

    goto LABEL_6;
  }
  if ((static Task<>.isCancelled.getter(v5) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 160));

LABEL_9:
    v15 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v17 = type metadata accessor for PlaybackController.TransportCommand(0);
  *(_QWORD *)(v0 + 232) = v17;
  *(_QWORD *)(v0 + 40) = v17;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(double *)__swift_allocate_boxed_opaque_existential_1((_QWORD *)(v0 + 16)) = v1;
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 104);
  *(_QWORD *)(v0 + 240) = v18;
  v18();
  v20 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
      + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v19 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                   + 1));
  *(_QWORD *)(v0 + 248) = v19;
  *v19 = v0;
  v19[1] = sub_8ACF4;
  return ((uint64_t (*)(uint64_t, _QWORD))v20)(v0 + 16, 0);
}

uint64_t sub_8ACF4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 248);
  *(_QWORD *)(*(_QWORD *)v2 + 256) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[21];
    v7 = v4[22];
    v8 = sub_8B10C;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 2);
    v6 = v4[21];
    v7 = v4[22];
    v8 = sub_8AD74;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_8AD74(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD, uint64_t);
  _QWORD *boxed_opaque_existential_1;
  _QWORD *v8;
  char *v9;

  if ((dispatch thunk of PlaybackController.isPlaying.getter(a1) & 1) != 0)
  {
    v2 = *(void **)(v1 + 224);
    swift_release(*(_QWORD *)(v1 + 160));

    v3 = *(_QWORD *)(v1 + 144);
    swift_task_dealloc(*(_QWORD *)(v1 + 152));
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 232);
    v6 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 240);
    *(_QWORD *)(v1 + 80) = v5;
    *(_QWORD *)(v1 + 88) = &protocol witness table for PlaybackController.TransportCommand;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(v1 + 56));
    v6(boxed_opaque_existential_1, enum case for PlaybackController.TransportCommand.play(_:), v5);
    v9 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
       + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
    v8 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                    + 1));
    *(_QWORD *)(v1 + 264) = v8;
    *v8 = v1;
    v8[1] = sub_8AE58;
    return ((uint64_t (*)(uint64_t, _QWORD))v9)(v1 + 56, 0);
  }
}

uint64_t sub_8AE58(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 264);
  *(_QWORD *)(*(_QWORD *)v2 + 272) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[21];
    v7 = v4[22];
    v8 = sub_8B164;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 7);
    v6 = v4[21];
    v7 = v4[22];
    v8 = sub_8AED8;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_8AED8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 160));

  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8AF24()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(void);
  _QWORD *v20;
  char *v21;

  v1 = *(double *)(v0 + 184);
  v2 = dispatch thunk of TranscriptSyncingStateObserver.isSyncing.setter(0);
  *(_QWORD *)(v0 + 216) = *(_QWORD *)(*(_QWORD *)(v0 + 120)
                                    + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController);
  v3 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v2);
  *(_QWORD *)(v0 + 224) = v3;
  if (!v3)
  {
LABEL_6:
    swift_release(*(_QWORD *)(v0 + 160));
    v9 = static Logger.transcripts.getter(v8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "Attempting to seek to offset beyond the item's duration can cause undefined behavior. Ignoring command.", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    v14 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 128);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_9;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "duration");
  if (v1 >= v6)
  {

    goto LABEL_6;
  }
  if ((static Task<>.isCancelled.getter(v5) & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 160);

    swift_release(v7);
LABEL_9:
    v16 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = type metadata accessor for PlaybackController.TransportCommand(0);
  *(_QWORD *)(v0 + 232) = v18;
  *(_QWORD *)(v0 + 40) = v18;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(double *)__swift_allocate_boxed_opaque_existential_1((_QWORD *)(v0 + 16)) = v1;
  v19 = *(void (**)(void))(*(_QWORD *)(v18 - 8) + 104);
  *(_QWORD *)(v0 + 240) = v19;
  v19();
  v21 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
      + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v20 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                   + 1));
  *(_QWORD *)(v0 + 248) = v20;
  *v20 = v0;
  v20[1] = sub_8ACF4;
  return ((uint64_t (*)(uint64_t, _QWORD))v21)(v0 + 16, 0);
}

uint64_t sub_8B10C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 160));

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8B164()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 160));

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 56));
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_8B1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t Strong;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  double v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char v67[24];
  uint64_t v68[3];
  uint64_t v69;
  uint64_t v70;
  char v71[24];
  char v72[24];
  uint64_t v73;
  uint64_t v74;

  v3 = type metadata accessor for NowPlayingHostedContentID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v63 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v58 - v14;
  __chkstk_darwin(v13);
  v66 = (char *)&v58 - v16;
  v65 = type metadata accessor for Logger(0);
  v64 = *(_QWORD *)(v65 - 8);
  v17 = __chkstk_darwin(v65);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a2 + 16;
  v21 = static Logger.transcripts.getter(v17);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v59 = v15;
    v24 = swift_slowAlloc(12, -1);
    v62 = v8;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc(32, -1);
    v61 = v4;
    v27 = v26;
    v68[0] = v26;
    v60 = v12;
    *(_DWORD *)v25 = 136315138;
    v73 = sub_C6F4(0xD00000000000001BLL, 0x80000000001879D0, v68);
    v15 = v59;
    v12 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v25 + 4, v25 + 12);
    _os_log_impl(&dword_0, v22, v23, "%s App will enter foreground.", v25, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    v28 = v27;
    v4 = v61;
    swift_slowDealloc(v28, -1, -1);
    v29 = v25;
    v8 = v62;
    swift_slowDealloc(v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v65);
  swift_beginAccess(v20, &v73, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v20);
  v31 = (uint64_t)v66;
  if (Strong)
  {
    v32 = (void *)Strong;
    v33 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_nowPlayingViewModel);
    swift_retain();

    dispatch thunk of NowPlayingViewModel.selectedContent.getter(v34);
    swift_release(v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v66, 1, 1, v3);
  }
  if (qword_1F9480 != -1)
    swift_once(&qword_1F9480, sub_35F0C);
  v35 = __swift_project_value_buffer(v3, (uint64_t)static NowPlayingHostedContentID.transcript);
  v36 = swift_beginAccess(v35, v72, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v15, v35, v3, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  v37 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_2808C(v31, (uint64_t)v8, (uint64_t *)&unk_1FB9D0);
  sub_2808C((uint64_t)v15, v37, (uint64_t *)&unk_1FB9D0);
  v38 = (uint64_t)v15;
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v39((uint64_t)v8, 1, v3) != 1)
  {
    sub_2808C((uint64_t)v8, (uint64_t)v12, (uint64_t *)&unk_1FB9D0);
    if (v39(v37, 1, v3) != 1)
    {
      v40 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v63, v37, v3);
      v41 = sub_3F28C((unint64_t *)&qword_1FE008, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentID);
      LODWORD(v65) = dispatch thunk of static Equatable.== infix(_:_:)(v12, v40, v3, v41);
      v42 = *(void (**)(char *, uint64_t))(v4 + 8);
      v42(v40, v3);
      sub_9944(v38, (uint64_t *)&unk_1FB9D0);
      sub_9944(v31, (uint64_t *)&unk_1FB9D0);
      v42(v12, v3);
      sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
      if ((v65 & 1) == 0)
        return;
      goto LABEL_15;
    }
    sub_9944(v38, (uint64_t *)&unk_1FB9D0);
    sub_9944(v31, (uint64_t *)&unk_1FB9D0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
LABEL_13:
    sub_9944((uint64_t)v8, (uint64_t *)&unk_1FDFF0);
    return;
  }
  sub_9944(v38, (uint64_t *)&unk_1FB9D0);
  sub_9944(v31, (uint64_t *)&unk_1FB9D0);
  if (v39(v37, 1, v3) != 1)
    goto LABEL_13;
  sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
LABEL_15:
  swift_beginAccess(v20, v71, 0, 0);
  v43 = swift_unknownObjectWeakLoadStrong(v20);
  if (v43)
  {
    v44 = (void *)v43;
    v45 = sub_7DB20();

    sub_C3800();
    LOBYTE(v44) = v46;
    swift_release(v45);
    __asm { BR              X10 }
  }
  swift_beginAccess(v20, v67, 0, 0);
  v47 = swift_unknownObjectWeakLoadStrong(v20);
  if (v47)
  {
    v48 = (void *)v47;
    v49 = *(_QWORD *)(v47 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_alignmentCoordinator);
    swift_retain();

    NowPlayingAlignmentCoordinator.fullTimelineAligner.getter(v68);
    swift_release(v49);
    v50 = v69;
    if (v69)
    {
      v51 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      dispatch thunk of TimelineAligner.resumeReadingIfNeeded()(v50, v51);
      __swift_destroy_boxed_opaque_existential_0(v68);
    }
    else
    {
      sub_9944((uint64_t)v68, &qword_1FE000);
    }
  }
  swift_beginAccess(v20, v68, 0, 0);
  v52 = swift_unknownObjectWeakLoadStrong(v20);
  if (v52)
  {
    v53 = (void *)v52;
    v54 = sub_7B080();

    v55 = *(void **)(v54 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink);
    v56 = v55;
    *(_QWORD *)&v57 = swift_release(v54).n128_u64[0];
    if (v55)
    {
      objc_msgSend(v56, "setPaused:", 0, v57);

    }
  }
}

void sub_8B8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char v62[24];
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  char v66[24];
  uint64_t v67;
  uint64_t v68;

  v3 = type metadata accessor for NowPlayingHostedContentID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  v10 = __chkstk_darwin(v9);
  v61 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v53 - v13;
  __chkstk_darwin(v12);
  v60 = (char *)&v53 - v15;
  v16 = type metadata accessor for Logger(0);
  v58 = *(_QWORD *)(v16 - 8);
  v59 = v16;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a2 + 16;
  v21 = static Logger.transcripts.getter(v17);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v55 = v14;
    v24 = swift_slowAlloc(12, -1);
    v56 = v8;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc(32, -1);
    v63[0] = v26;
    v54 = v6;
    *(_DWORD *)v25 = 136315138;
    v67 = sub_C6F4(0xD00000000000001BLL, 0x80000000001879D0, v63);
    v14 = v55;
    v6 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v25 + 4, v25 + 12);
    _os_log_impl(&dword_0, v22, v23, "%s App did enter background.", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    v27 = v25;
    v8 = v56;
    swift_slowDealloc(v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v59);
  swift_beginAccess(v20, &v67, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v20);
  v30 = (uint64_t)v60;
  v29 = (uint64_t)v61;
  if (Strong)
  {
    v31 = (void *)Strong;
    v32 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_nowPlayingViewModel);
    swift_retain();

    dispatch thunk of NowPlayingViewModel.selectedContent.getter(v33);
    swift_release(v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v60, 1, 1, v3);
  }
  if (qword_1F9480 != -1)
    swift_once(&qword_1F9480, sub_35F0C);
  v34 = __swift_project_value_buffer(v3, (uint64_t)static NowPlayingHostedContentID.transcript);
  v35 = swift_beginAccess(v34, v66, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v14, v34, v3, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  v36 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_2808C(v30, (uint64_t)v8, (uint64_t *)&unk_1FB9D0);
  sub_2808C((uint64_t)v14, v36, (uint64_t *)&unk_1FB9D0);
  v37 = (uint64_t)v14;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v38((uint64_t)v8, 1, v3) != 1)
  {
    sub_2808C((uint64_t)v8, v29, (uint64_t *)&unk_1FB9D0);
    if (v38(v36, 1, v3) != 1)
    {
      v39 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v57, v36, v3);
      v40 = sub_3F28C((unint64_t *)&qword_1FE008, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentID);
      LODWORD(v59) = dispatch thunk of static Equatable.== infix(_:_:)(v29, v39, v3, v40);
      v41 = *(void (**)(char *, uint64_t))(v4 + 8);
      v41(v39, v3);
      sub_9944(v37, (uint64_t *)&unk_1FB9D0);
      sub_9944(v30, (uint64_t *)&unk_1FB9D0);
      v41((char *)v29, v3);
      sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
      if ((v59 & 1) == 0)
        return;
      goto LABEL_15;
    }
    sub_9944(v37, (uint64_t *)&unk_1FB9D0);
    sub_9944(v30, (uint64_t *)&unk_1FB9D0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v29, v3);
LABEL_13:
    sub_9944((uint64_t)v8, (uint64_t *)&unk_1FDFF0);
    return;
  }
  sub_9944(v37, (uint64_t *)&unk_1FB9D0);
  sub_9944(v30, (uint64_t *)&unk_1FB9D0);
  if (v38(v36, 1, v3) != 1)
    goto LABEL_13;
  sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
LABEL_15:
  swift_beginAccess(v20, v62, 0, 0);
  v42 = swift_unknownObjectWeakLoadStrong(v20);
  if (v42)
  {
    v43 = (void *)v42;
    v44 = *(_QWORD *)(v42 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_alignmentCoordinator);
    swift_retain();

    NowPlayingAlignmentCoordinator.fullTimelineAligner.getter(v63);
    swift_release(v44);
    v45 = v64;
    if (v64)
    {
      v46 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      dispatch thunk of TimelineAligner.pauseReadingIfNeeded()(v45, v46);
      __swift_destroy_boxed_opaque_existential_0(v63);
    }
    else
    {
      sub_9944((uint64_t)v63, &qword_1FE000);
    }
  }
  swift_beginAccess(v20, v63, 0, 0);
  v47 = swift_unknownObjectWeakLoadStrong(v20);
  if (v47)
  {
    v48 = (void *)v47;
    v49 = sub_7B080();

    v50 = *(void **)(v49 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink);
    v51 = v50;
    *(_QWORD *)&v52 = swift_release(v49).n128_u64[0];
    if (v50)
    {
      objc_msgSend(v51, "setPaused:", 1, v52);

    }
  }
}

