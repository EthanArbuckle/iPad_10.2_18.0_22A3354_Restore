void sub_8BF28(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = dispatch thunk of PlaybackController.nowPlayingItem.getter(Strong);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_libraryActionController + 24];
      v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_libraryActionController + 32];
      __swift_project_boxed_opaque_existential_1(&v3[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_libraryActionController], v6);
      v8 = swift_allocObject(&unk_1CC468, 24, 7);
      swift_unknownObjectWeakInit(v8 + 16, v3);
      v9 = swift_allocObject(&unk_1CC508, 32, 7);
      *(_QWORD *)(v9 + 16) = v5;
      *(_QWORD *)(v9 + 24) = v8;
      v10 = v5;
      swift_retain(v8);
      dispatch thunk of LibraryActionControllerProtocol.transcriptReportAConcern(episode:completion:)(v10, sub_8D8FC, v9, v6, v7);

      swift_release(v8);
      swift_release(v9);
    }
    else
    {

    }
  }
}

void sub_8C04C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject **v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSURL *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *Strong;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];

  v37 = a2;
  v38 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE20);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = a3 + 16;
  sub_2808C(a1, (uint64_t)v14, (uint64_t *)&unk_1FDE20);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v36 = v9;
    v38 = v8;
    v16 = swift_errorRelease(*v14);
    static Logger.transcripts.getter(v16);
    v17 = v37;
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc(22, -1);
      v37 = v11;
      v21 = v20;
      v22 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v21 = 141558275;
      v39 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v21 + 4, v21 + 12);
      *(_WORD *)(v21 + 12) = 2113;
      v39 = (uint64_t)v17;
      v23 = v15;
      v24 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v21 + 14, v21 + 22);
      *v22 = v17;

      v15 = v23;
      _os_log_impl(&dword_0, v18, v19, "Unable to create a report a concern URL for episode %{private,mask.hash}@.", (uint8_t *)v21, 0x16u);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
      swift_arrayDestroy(v22, 1, v25);
      swift_slowDealloc(v22, -1, -1);
      v11 = v37;
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {

      v18 = v17;
    }
    v32 = v38;
    v33 = v36;

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v32);
  }
  else
  {
    v26 = v38;
    (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 32))(v7, v14, v38);
    v27 = v15;
    v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    URL._bridgeToObjectiveC()(v29);
    v31 = v30;
    objc_msgSend(v28, "openURL:withCompletionHandler:", v30, 0);

    v15 = v27;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  }
  swift_beginAccess(v15, &v39, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v35 = Strong;
    objc_msgSend(Strong, "resignFirstResponder");

  }
}

void sub_8C39C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  char *v4;
  char *v5;
  id v6;
  id v7;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = sub_7B450();
  objc_msgSend(v4, "setBackgroundView:", v1);

  v5 = sub_7B450();
  v6 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didTapEmptySpace");
  objc_msgSend(v1, "addGestureRecognizer:", v7);

}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptViewController.KeyboardState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptViewController.KeyboardState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_8C56C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_8C588(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    *(_BYTE *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewController.KeyboardState()
{
  return &type metadata for TranscriptViewController.KeyboardState;
}

uint64_t storeEnumTagSinglePayload for TranscriptViewController.Section(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_8C5FC + 4 * byte_16EC4D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_8C61C + 4 * byte_16EC52[v4]))();
}

_BYTE *sub_8C5FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_8C61C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_8C624(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_8C62C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_8C634(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_8C63C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewController.Section()
{
  return &type metadata for TranscriptViewController.Section;
}

uint64_t sub_8C658()
{
  return sub_27A8C(&qword_1FDDC8, &qword_1FDDD0, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_8C688()
{
  unint64_t result;

  result = qword_1FDDD8;
  if (!qword_1FDDD8)
  {
    result = swift_getWitnessTable(&unk_16ED60, &type metadata for TranscriptViewController.Section);
    atomic_store(result, (unint64_t *)&qword_1FDDD8);
  }
  return result;
}

void sub_8C6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _BYTE v24[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = a1 + 16;
  v10 = static Logger.transcripts.getter(v6);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "Retry button tapped - initiating retry", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  swift_beginAccess(v9, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v15 = (char *)Strong;
    v16 = dispatch thunk of PlaybackController.nowPlayingItem.getter(Strong);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = sub_7DB20();
      v19 = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v18 + 24) = 2;
      sub_9027C(v19);
      sub_90290(v19);
      v20 = *(_QWORD *)(v18 + 24);
      sub_9027C(v20);
      v21 = sub_C5304(v20, v19);
      sub_90290(v20);
      if ((v21 & 1) == 0)
        sub_C3EE8();
      sub_90290(v19);
      swift_release(v18);
      v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_storeTranscriptIdentifierProvider];
      swift_retain();
      swift_retain();
      NowPlayingStoreTranscriptIdentifierProvider.updateForEpisode(_:shouldForce:completion:)(v17, 1, (void (*)(__n128))sub_902A4, a2);

      swift_release(v22);
      swift_release(a2);
    }
    else
    {

    }
  }
}

void sub_8C8C0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_isNetworkReachable) = v2;
    v6 = sub_7DB20();
    v7 = sub_C3800();
    v9 = v8;
    v10 = v8;
    swift_release(v6);
    if (v10 == 3)
    {
      sub_A6A8(v7, 3);
      if (v2)
      {
        v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_retrySubject];
        swift_retain();
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFB0);
        v13 = sub_27A8C(&qword_1FDFA8, &qword_1FDFB0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
        Subject<>.send()(v12, v13);

        swift_release(v11);
        return;
      }
    }
    else
    {
      sub_A6A8(v7, v9);
    }

  }
}

void sub_8C9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t j;
  id v39;
  void *v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;

  v3 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v45 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v7);
  UICollectionLayoutListConfiguration.init(appearance:)(v10);
  UICollectionLayoutListConfiguration.showsSeparators.setter(0);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UICollectionLayoutListConfiguration.backgroundColor.setter(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v3);
  UICollectionLayoutListConfiguration.footerMode.setter(v6);
  sub_F174(0, &qword_1FDE50, NSCollectionLayoutSection_ptr);
  v44 = v13;
  v15 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v13, a2);
  v16 = objc_msgSend(v15, "boundarySupplementaryItems");
  v17 = sub_F174(0, &qword_1FDE58, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v46 = (unint64_t)&_swiftEmptyArrayStorage;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v36 = v18;
    else
      v36 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v19 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v18);
    if (v19)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(v18);
    v35 = (unint64_t)&_swiftEmptyArrayStorage;
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_32;
    goto LABEL_24;
  }
  v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
  if (!v19)
    goto LABEL_23;
LABEL_3:
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  v42[1] = v15;
  v43 = v11;
  for (i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0)
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v18);
    else
      v24 = *(id *)(v18 + 8 * i + 32);
    v25 = v24;
    v26 = objc_msgSend(v24, "elementKind");
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
    if (v27 == v30 && v29 == v31)
    {
      v21 = swift_bridgeObjectRelease_n(v29, 2);
LABEL_6:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = *(_QWORD *)(v46 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v25);
      specialized ContiguousArray._endMutation()(v23);
      continue;
    }
    v33 = v31;
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v30, v31, 0);
    swift_bridgeObjectRelease(v29);
    v21 = swift_bridgeObjectRelease(v33);
    if ((v34 & 1) != 0)
      goto LABEL_6;

  }
  swift_bridgeObjectRelease(v18);
  v35 = v46;
  v11 = v43;
  if ((v46 & 0x8000000000000000) == 0)
  {
LABEL_24:
    if ((v35 & 0x4000000000000000) != 0)
      goto LABEL_32;
    v37 = *(_QWORD *)(v35 + 16);
    swift_retain(v35);
    if (v37)
      goto LABEL_26;
LABEL_33:
    swift_release_n(v35, 2);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v11);
    return;
  }
LABEL_32:
  v41 = swift_retain(v35);
  v37 = _CocoaArrayWrapper.endIndex.getter(v41);
  if (!v37)
    goto LABEL_33;
LABEL_26:
  if (v37 >= 1)
  {
    for (j = 0; j != v37; ++j)
    {
      if ((v35 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v35);
      else
        v39 = *(id *)(v35 + 8 * j + 32);
      v40 = v39;
      objc_msgSend(v39, "setPinToVisibleBounds:", 0);

    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
}

double sub_8CDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  int v11;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v7 = sub_7DB20();
  v8 = sub_C3800();
  v10 = v9;
  v11 = v9;
  swift_release(v7);
  sub_A6A8(v8, v10);
  if (v11 != 4 || v8 != 0)
  {
    v13 = sub_7DB20();
    sub_C3800();
    v15 = v14;
    swift_release(v13);
    __asm { BR              X10 }
  }
  sub_10F86C();
  v17 = v16;
  sub_836A4(v16, a6 & 1);
  swift_release(v17 & 0x3FFFFFFFFFFFFFFFLL);
  sub_875C0();
  v18 = sub_7DB20();
  v19 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  if (v19 != 1)
  {
    v21 = sub_7DB20();
    *(_BYTE *)(v21 + 16) = 2;
    sub_C3EE8();
    swift_release(v21);
    v22 = sub_7DB20();
    v23 = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v22 + 24) = 1;
    sub_9027C(v23);
    sub_90290(v23);
    v24 = *(_QWORD *)(v22 + 24);
    sub_9027C(v24);
    v25 = sub_C5304(v24, v23);
    sub_90290(v24);
    if ((v25 & 1) == 0)
      sub_C3EE8();
    sub_90290(v23);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

void sub_8CF68()
{
  uint64_t v0;

  sub_A6A8(v0, 3);
  JUMPOUT(0x8CE9CLL);
}

void sub_8CF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  char v3;
  id v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player));
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 240))(ObjectType, v1);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v1 + 72))((v3 & 1) == 0, ObjectType, v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_userInitiatedSearchDismissal) = 0;
  v4 = sub_7BB14();
  objc_msgSend(v4, "dismissFindNavigator");

  NowPlayingAlignmentCoordinator.clear()();
}

uint64_t sub_8D014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player));
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 72))(0, ObjectType, v1);
}

void sub_8D058()
{
  uint64_t v0;

  swift_getObjectType(v0);
  NowPlayingHostedViewController.didPresentHostedContent()();
}

void sub_8D084()
{
  uint64_t v0;

  swift_getObjectType(v0);
  NowPlayingHostedViewController.didDismissHostedContent()();
}

void sub_8D0AC()
{
  sub_7F690(2u);
}

uint64_t sub_8D0B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_8D0DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_87DB0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_8D0E4()
{
  return objectdestroy_6Tm(&qword_1FDDE8);
}

uint64_t sub_8D0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FDDE8) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_87B40(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_8D15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_880D0(a1, a2, a3, a4, v4);
}

uint64_t sub_8D164()
{
  return objectdestroy_6Tm(&qword_1FDDE0);
}

uint64_t objectdestroy_6Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release(*(_QWORD *)(v1 + v7));
  return swift_deallocObject(v1, v7 + 8, v6);
}

void *sub_8D1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FDDE0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_87C10(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_8D25C@<X0>(uint64_t a1@<X8>)
{
  return sub_8824C(a1);
}

uint64_t sub_8D264(uint64_t a1, unsigned __int8 a2, char a3)
{
  void *v3;
  void *v4;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  unsigned int v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char v31;
  _BOOL8 v32;
  char *v33;
  char *v34;
  char v35;
  char v36;
  char *v37;
  char v38;
  id v39;
  double v40;
  double v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v4 = v3;
  v7 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE78);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DeviceMetrics.Layout(0);
  v50 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v48 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v49 = (char *)&v47 - v17;
  if (v7)
  {
    objc_msgSend(v4, "setNeedsUpdateContentUnavailableConfiguration");
    v18 = sub_7B450();
    if (v7 == 3 || v7 == 4 && !a1)
    {
      v19 = 1;
      goto LABEL_12;
    }
  }
  else
  {
    if (a3 != 6)
      sub_7DFA0();
    v20 = sub_7BB14();
    v21 = objc_msgSend(v20, "isFindNavigatorVisible");

    if (v21)
    {
      *((_BYTE *)v4 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_userInitiatedSearchDismissal) = 0;
      v22 = sub_7BB14();
      objc_msgSend(v22, "dismissFindNavigator");

      sub_B370();
    }
    objc_msgSend(v4, "setNeedsUpdateContentUnavailableConfiguration");
    v18 = sub_7B450();
  }
  v19 = 0;
LABEL_12:
  objc_msgSend(v18, "setHidden:", v19);

  dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter(v23);
  v24 = type metadata accessor for DeviceMetrics(0);
  v25 = *(_QWORD *)(v24 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v24);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    DeviceMetrics.layout.getter();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
    v27 = v50;
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v10, 1, v14);
    if ((_DWORD)result != 1)
    {
      v28 = v49;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v49, v10, v14);
      v29 = a1;
      if (!objc_msgSend(v4, "isViewLoaded"))
      {
LABEL_22:
        v33 = sub_7B450();
        v34 = v33;
        if (v7 - 1 > 1 || v29 >> 6 && v29 >> 6 != 1)
          v35 = 1;
        else
          v35 = v29 & 1;
        v36 = v33[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode];
        v34[OBJC_IVAR____TtC12NowPlayingUI24TranscriptCollectionView_mode] = v35;
        sub_15DB68(v36);

        if (v7 >= 3)
        {
          if (v7 == 3 || !v29)
            goto LABEL_35;
        }
        else
        {
          if (!(v29 >> 6))
            goto LABEL_34;
          if (v29 >> 6 != 1)
          {
LABEL_35:
            v39 = sub_7EE04();
            objc_msgSend(v39, "alpha");
            v41 = v40;

            if (v41 == 1.0)
            {
              v42 = swift_allocObject(&unk_1CC468, 24, 7);
              swift_unknownObjectWeakInit(v42 + 16, v4);
              v43 = (void *)objc_opt_self(UIView);
              v44 = swift_allocObject(&unk_1CC580, 32, 7);
              *(_QWORD *)(v44 + 16) = sub_8DCD8;
              *(_QWORD *)(v44 + 24) = v42;
              aBlock[4] = sub_F2F8;
              v52 = v44;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_F528;
              aBlock[3] = &block_descriptor_31_0;
              v45 = _Block_copy(aBlock);
              v46 = v52;
              swift_retain(v42);
              swift_release(v46);
              objc_msgSend(v43, "animateWithDuration:animations:", v45, 0.2);
              swift_release(v42);
              _Block_release(v45);
            }
            return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v14);
          }
        }
        v37 = v48;
        (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v48, enum case for DeviceMetrics.Layout.regularExtended(_:), v14);
        v38 = static DeviceMetrics.Layout.== infix(_:_:)(v28, v37);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v14);
        if ((v38 & 1) == 0)
          goto LABEL_35;
LABEL_34:
        sub_88F90(1);
        return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v14);
      }
      v30 = v48;
      (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v48, enum case for DeviceMetrics.Layout.regularExtended(_:), v14);
      v31 = static DeviceMetrics.Layout.== infix(_:_:)(v28, v30);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v14);
      if ((v31 & 1) != 0)
        goto LABEL_16;
      if (v7 < 3)
      {
        if (!(v29 >> 6))
        {
LABEL_16:
          v32 = 1;
LABEL_21:
          dispatch thunk of NowPlayingHostedContentSession.controlsHidden.setter(v32);
          goto LABEL_22;
        }
        if (v29 >> 6 != 1)
        {
          v32 = v29 != 128;
          goto LABEL_21;
        }
      }
      v32 = 0;
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

double sub_8D77C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double result;
  __int128 v9;
  uint64_t v10;
  char v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16EEA0);
  v5 = swift_getKeyPath(&unk_16EEC8);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v10;
  v7 = v11;
  result = *(double *)&v9;
  *(_OWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_8D808(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD v10[3];
  char v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_16EEA0);
  v8 = swift_getKeyPath(&unk_16EEC8);
  v10[0] = v2;
  v10[1] = v3;
  v10[2] = v4;
  v11 = v5;
  swift_retain(v2);
  swift_retain(v6);
  return static Published.subscript.setter(v10, v6, KeyPath, v8);
}

void sub_8D8A0(double *a1@<X8>)
{
  *a1 = EnvironmentValues.nowPlayingHorizontalPadding.getter();
}

uint64_t sub_8D8C8(double *a1)
{
  return EnvironmentValues.nowPlayingHorizontalPadding.setter(*a1);
}

void sub_8D8EC()
{
  uint64_t v0;

  sub_8BF28(v0);
}

uint64_t sub_8D8F4()
{
  return objectdestroy_16Tm(32);
}

void sub_8D8FC(uint64_t a1)
{
  uint64_t v1;

  sub_8C04C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_8D904@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16EF38);
  v7 = v3;
  v5 = sub_3F28C((unint64_t *)&qword_1F9D58, 255, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  result = *(double *)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__durationFromPlayerStartTimeToFirstWordTime);
  *a2 = result;
  return result;
}

void sub_8D99C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16EF38);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_3F28C((unint64_t *)&qword_1F9D58, 255, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_9024C, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

uint64_t sub_8DA50(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

id sub_8DAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

id sub_8DB04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain();
  v7 = (void *)v4(v6);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v7;
}

void *sub_8DB7C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawBufferPointer.copyMemory source has too many elements", 69, 2, "Swift/UnsafeRawBufferPointer.swift", 34, 2, 487, 0);
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_13(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

const char *keypath_get_selector_contentInset()
{
  return "contentInset";
}

id sub_8DC34@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*a1, "contentInset");
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_8DC68(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentInset:", *a1, a1[1], a1[2], a1[3]);
}

void sub_8DC80(uint64_t a1)
{
  uint64_t v1;

  sub_15DCD4(a1, v1);
}

uint64_t sub_8DC88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_87EEC(*(_QWORD *)(v1 + 16), *(uint64_t (**)())(v1 + 32), a1);
}

uint64_t type metadata accessor for TranscriptViewController.ContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1FE320;
  if (!qword_1FE320)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TranscriptViewController.ContentView);
  return result;
}

uint64_t sub_8DCD0()
{
  uint64_t v0;

  return sub_88064(v0);
}

void sub_8DCD8()
{
  uint64_t v0;

  sub_89654(v0);
}

uint64_t sub_8DCE0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_8DD04@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_8DD2C(void *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v3 = swift_allocObject(&unk_1CC918, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v7[4] = sub_90308;
  v8 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_F528;
  v7[3] = &block_descriptor_132;
  v4 = _Block_copy(v7);
  v5 = v8;
  v6 = a1;
  objc_msgSend(v2, "performBlock:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);

}

void sub_8DE10()
{
  uint64_t v0;

  sub_8926C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_8DE18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_8DE28()
{
  sub_89610();
}

void sub_8DE30(uint64_t a1)
{
  uint64_t v1;

  sub_88D3C(a1, v1);
}

id sub_8DE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *ObjectType;
  objc_super v48;
  __int128 v49[3];

  v5 = v4;
  v45 = a4;
  v46 = a3;
  v44 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___dataSource] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewWrapper] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___searchButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientMask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientMask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientView] = 0;
  v41 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_searchQueue;
  v40 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v16 = v5;
  static DispatchQoS.unspecified.getter(v16);
  *(_QWORD *)&v49[0] = _swiftEmptyArrayStorage;
  v17 = sub_3F28C((unint64_t *)&unk_1F96F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2001E0);
  v19 = sub_27A8C((unint64_t *)&qword_1F9700, (uint64_t *)&unk_2001E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v49, v18, v19, v10, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v43);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x8000000000187C00, v15, v12, v9, 0);
  *(_QWORD *)&v5[v41] = v20;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask] = 0;
  v21 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_networkObserver;
  type metadata accessor for NetworkObserver(0);
  *(_QWORD *)&v16[v21] = NetworkObserver.__allocating_init()();
  v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_isNetworkReachable] = 1;
  v22 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_retrySubject;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFB0);
  v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)&v16[v22] = CurrentValueSubject.init(_:)(v24);
  v25 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_presentationContext;
  v26 = type metadata accessor for TranscriptPresentationContext(0);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_WORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  *(_BYTE *)(v27 + 32) = 0;
  *(_QWORD *)(v27 + 40) = 0;
  *(_BYTE *)(v27 + 48) = 4;
  ObservationRegistrar.init()(v27);
  *(_QWORD *)&v16[v25] = v27;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_searchSubscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels] = _swiftEmptyArrayStorage;
  v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_userInitiatedSearchDismissal] = 1;
  v28 = &v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState];
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  v28[32] = 1;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___stateMachine] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___timestampView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewBottomConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___findInteraction] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___liveObserver] = 0;
  v30 = v44;
  v29 = v45;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_nowPlayingViewModel] = v44;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playerStylePublisher] = v29;
  v31 = v46;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_transcriptSyncingStateObserver] = v46;
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_objectGraph] = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB0F0);
  swift_retain(v30);
  swift_retain(v29);
  swift_retain(v31);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v49, v32, v32);
  *(_OWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_player] = v49[0];
  v33 = type metadata accessor for MetricsController(0);
  BaseObjectGraph.inject<A>(_:)(v49, v33, v33);
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_metricsController] = *(_QWORD *)&v49[0];
  v34 = type metadata accessor for PlaybackController(0);
  BaseObjectGraph.inject<A>(_:)(v49, v34, v34);
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playbackController] = *(_QWORD *)&v49[0];
  v35 = type metadata accessor for NowPlayingHostedContentSession(0);
  BaseObjectGraph.inject<A>(_:)(v49, v35, v35);
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_session] = *(_QWORD *)&v49[0];
  v36 = type metadata accessor for NowPlayingAlignmentCoordinator(0);
  BaseObjectGraph.inject<A>(_:)(v49, v36, v36);
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_alignmentCoordinator] = *(_QWORD *)&v49[0];
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE2C0);
  BaseObjectGraph.inject<A>(_:)(v49, v37, v37);
  sub_27890(v49, (uint64_t)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_libraryActionController]);
  v38 = type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider(0);
  BaseObjectGraph.inject<A>(_:)(v49, v38, v38);
  *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_storeTranscriptIdentifierProvider] = *(_QWORD *)&v49[0];

  v48.receiver = v16;
  v48.super_class = ObjectType;
  return objc_msgSendSuper2(&v48, "initWithNibName:bundle:", 0, 0);
}

void sub_8E374()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;

  v1 = v0;
  v26 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___dataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewWrapper] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___searchButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientMask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___topGradientView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientMask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___bottomGradientView] = 0;
  v25 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_searchQueue;
  v11 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v11);
  v27 = _swiftEmptyArrayStorage;
  v12 = sub_3F28C((unint64_t *)&unk_1F96F0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2001E0);
  v14 = sub_27A8C((unint64_t *)&qword_1F9700, (uint64_t *)&unk_2001E0, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v26, v15);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x8000000000187C00, v10, v7, v4, 0);
  *(_QWORD *)&v1[v25] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_playTask] = 0;
  v17 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_networkObserver;
  type metadata accessor for NetworkObserver(0);
  *(_QWORD *)&v1[v17] = NetworkObserver.__allocating_init()();
  v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_isNetworkReachable] = 1;
  v18 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_retrySubject;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFB0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  *(_QWORD *)&v1[v18] = CurrentValueSubject.init(_:)(v20);
  v21 = OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_presentationContext;
  v22 = type metadata accessor for TranscriptPresentationContext(0);
  v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_WORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  *(_BYTE *)(v23 + 32) = 0;
  *(_QWORD *)(v23 + 40) = 0;
  *(_BYTE *)(v23 + 48) = 4;
  ObservationRegistrar.init()(v23);
  *(_QWORD *)&v1[v21] = v23;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_searchSubscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_viewModels] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_userInitiatedSearchDismissal] = 1;
  v24 = &v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState];
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  v24[32] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___stateMachine] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___timestampView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___collectionViewBottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___findInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController____lazy_storage___liveObserver] = 0;

  v27 = 0;
  v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v28);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/TranscriptViewController.swift", 43, 2, 85, 0);
  __break(1u);
}

uint64_t sub_8E754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  _QWORD v56[3];
  _QWORD v57[5];
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v10);
  v51 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDEB8);
  v13 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  v54 = v13;
  __chkstk_darwin(v12);
  v52 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDEC0);
  v48 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDEC8);
  v19 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  v50 = v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for PlaybackController(0);
  v60 = &off_1CEE98;
  v58[0] = a1;
  v57[3] = type metadata accessor for NowPlayingViewModel(0);
  v57[4] = &off_1CEEB8;
  v57[0] = a2;
  *(_BYTE *)(a5 + 16) = 2;
  *(_QWORD *)(a5 + 24) = 2;
  *(_QWORD *)(a5 + 128) = 0;
  swift_unknownObjectWeakInit(a5 + 120, 0);
  *(_QWORD *)(a5 + 136) = 0;
  *(_WORD *)(a5 + 144) = 16895;
  *(_QWORD *)(a5 + 152) = 0;
  *(_QWORD *)(a5 + 160) = &_swiftEmptyArrayStorage;
  v22 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
  *(_QWORD *)(a5 + 192) = sub_F174(0, &qword_1FDED0, NSRunLoop_ptr);
  *(_QWORD *)(a5 + 200) = &off_1CEEC8;
  *(_QWORD *)(a5 + 168) = v22;
  sub_DF78((uint64_t)v58, a5 + 32);
  sub_DF78((uint64_t)v57, a5 + 72);
  *(_QWORD *)(a5 + 112) = a3;
  *(_QWORD *)(a5 + 128) = &off_1CC448;
  swift_unknownObjectWeakAssign(a5 + 120, a4);
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v23 = swift_retain(a3);
  v24 = dispatch thunk of PlaybackController.isPlayingPublisher.getter(v23);
  v56[0] = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
  v26 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.removeDuplicates()(v25, v26, &protocol witness table for Bool);
  swift_release(v24);
  LOWORD(v56[0]) = 0;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDED8);
  v28 = sub_27A8C(&qword_1FDEE0, &qword_1FDEC0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  Publisher.scan<A>(_:_:)(v56, sub_C4300, 0, v15, v27, v28);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v15);
  v29 = swift_allocObject(&unk_1CC6C0, 24, 7);
  swift_weakInit(v29 + 16, a5);
  v30 = swift_allocObject(&unk_1CC6E8, 32, 7);
  *(_QWORD *)(v30 + 16) = sub_8EEA0;
  *(_QWORD *)(v30 + 24) = v29;
  v31 = sub_27A8C(&qword_1FDEE8, &qword_1FDEC8, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  v32 = v49;
  v33 = Publisher<>.sink(receiveValue:)(sub_8EEA8, v30, v49, v31);
  swift_release(v30);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v32);
  swift_beginAccess(a5 + 160, v56, 33, 0);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v35 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(a5 + 160, v34, v35);
  swift_endAccess(v56);
  swift_release(v33);
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v56[0] = dispatch thunk of PlaybackController.transportCommandPerformedPublisher.getter();
  v36 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v55 = (id)static OS_dispatch_queue.main.getter();
  v37 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v38 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v51, 1, 1, v37);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDEF0);
  v40 = sub_27A8C((unint64_t *)&unk_1FDEF8, &qword_1FDEF0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v41 = sub_2FE50();
  v42 = v52;
  Publisher.receive<A>(on:options:)(&v55, v38, v39, v36, v40, v41);
  sub_9944(v38, &qword_1FB2C0);

  swift_release(v56[0]);
  v43 = swift_allocObject(&unk_1CC6C0, 24, 7);
  swift_weakInit(v43 + 16, a5);
  v44 = sub_27A8C((unint64_t *)&unk_1FDF08, &qword_1FDEB8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v45 = v53;
  v46 = Publisher<>.sink(receiveValue:)(sub_8EED4, v43, v53, v44);
  swift_release(v43);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v45);
  swift_beginAccess(a5 + 160, v56, 33, 0);
  AnyCancellable.store<A>(in:)(a5 + 160, v34, v35);
  swift_endAccess(v56);
  swift_release(v46);
  __swift_destroy_boxed_opaque_existential_0(v57);
  __swift_destroy_boxed_opaque_existential_0(v58);
  return a5;
}

uint64_t sub_8ED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v24 = type metadata accessor for PlaybackController(0);
  v25 = &off_1CEE98;
  v23[0] = a1;
  v21 = type metadata accessor for NowPlayingViewModel(0);
  v22 = &off_1CEEB8;
  v20[0] = a2;
  v8 = type metadata accessor for TranscriptStateMachine();
  v9 = swift_allocObject(v8, 208, 7);
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
  __chkstk_darwin(v14);
  v16 = (_QWORD *)((char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  v18 = sub_8E754(*v12, *v16, a3, a4, v9);
  __swift_destroy_boxed_opaque_existential_0(v20);
  __swift_destroy_boxed_opaque_existential_0(v23);
  return v18;
}

uint64_t sub_8EE7C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_8EEA0(char a1, char a2)
{
  uint64_t v2;

  return sub_C4314(a1, a2, v2);
}

uint64_t sub_8EEA8(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_8EED4(uint64_t a1)
{
  uint64_t v1;

  return sub_C43A0(a1, v1);
}

uint64_t sub_8EEDC(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  objc_class *v16;
  char *v17;
  id v18;
  char *v19;
  id v20;
  objc_class *v21;
  char *v22;
  objc_super v23;
  objc_super v24;
  objc_super v25;

  v8 = result;
  if (a5)
  {
    if (result)
    {
      sub_10F86C();
      v11 = v10;
      sub_10F86C();
      v13 = v12;
      swift_retain();
      swift_retain();
      sub_10F96C(v11);
      v15 = v14;
      swift_release(v8);
      swift_release(v13 & 0x3FFFFFFFFFFFFFFFLL);
      swift_release(v11 & 0x3FFFFFFFFFFFFFFFLL);
      if ((v15 & 1) != 0)
      {
        swift_release(a5);
        goto LABEL_8;
      }
    }
    else
    {
      swift_retain();
    }
    __asm { BR              X10 }
  }
  if (result)
  {
LABEL_8:
    if ((a4 & 1) != 0)
    {
      swift_retain();
    }
    else
    {
      v16 = (objc_class *)type metadata accessor for StringTextPosition();
      v17 = (char *)objc_allocWithZone(v16);
      *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position] = a2;
      v25.receiver = v17;
      v25.super_class = v16;
      swift_retain();
      v18 = objc_msgSendSuper2(&v25, "init");
      v19 = (char *)objc_allocWithZone(v16);
      *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI18StringTextPosition_position] = a3;
      v24.receiver = v19;
      v24.super_class = v16;
      v20 = objc_msgSendSuper2(&v24, "init");
      v21 = (objc_class *)type metadata accessor for StringTextRange();
      v22 = (char *)objc_allocWithZone(v21);
      *(_QWORD *)&v22[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition] = v18;
      *(_QWORD *)&v22[OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition] = v20;
      v23.receiver = v22;
      v23.super_class = v21;
      objc_msgSendSuper2(&v23, "init");
    }
    __asm { BR              X10 }
  }
  return result;
}

id sub_8F26C(SEL *a1, SEL *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  Class isa;

  v4 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF68);
  v6 = swift_allocObject(v5, 96, 7);
  *(_OWORD *)(v6 + 16) = xmmword_16E1B0;
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, *a1);
  v9 = objc_msgSend(v8, "CGColor");

  type metadata accessor for CGColor(0);
  v11 = v10;
  *(_QWORD *)(v6 + 56) = v10;
  *(_QWORD *)(v6 + 32) = v9;
  v12 = objc_msgSend(v7, *a2);
  v13 = objc_msgSend(v12, "CGColor");

  *(_QWORD *)(v6 + 88) = v11;
  *(_QWORD *)(v6 + 64) = v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setColors:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  return v4;
}

void sub_8F3B0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1FE2A0);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_3F28C(&qword_1FE2A8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_3F28C(&qword_1FE2B0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8)))
    goto LABEL_34;
  v10 = swift_retain();
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

double sub_8F64C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  v4 = swift_allocObject(&unk_1CC7B0, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  aBlock[4] = sub_90178;
  v16 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_85BF8;
  aBlock[3] = &block_descriptor_91;
  v5 = _Block_copy(aBlock);
  objc_msgSend(a1, "setAccessibilityCustomActionsBlock:", v5, swift_release(v16).n128_f64[0]);
  _Block_release(v5);
  v6 = sub_7B32C();
  if (v6)
  {
    v8 = v6;
    v9 = *(_QWORD *)(v6 + 16);
    if (v9 >> 62)
    {
      *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    }
    else
    {
      v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
      KeyPath = swift_getKeyPath(&unk_16EF10);
      __chkstk_darwin(KeyPath);
      v13[2] = v10;
      v14 = 1;
      aBlock[0] = v10;
      v12 = sub_3F28C(&qword_1FDF70, 255, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
      swift_retain();
      swift_retain();
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(aBlock, KeyPath, sub_91124, v13, (char *)&type metadata for () + 8, v12);
      swift_release(v8);
      swift_release(v9);
      swift_release(v10);
      *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
    }
  }
  return result;
}

double sub_8F844()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v0 = sub_7B32C();
  if (v0)
  {
    v2 = v0;
    v3 = *(_QWORD *)(v0 + 16);
    if (v3 >> 62)
    {
      *(_QWORD *)&result = swift_release(v0).n128_u64[0];
    }
    else
    {
      v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
      KeyPath = swift_getKeyPath(&unk_16EF10);
      __chkstk_darwin(KeyPath);
      v7[2] = v4;
      v8 = 0;
      v9 = v4;
      v6 = sub_3F28C(&qword_1FDF70, 255, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
      swift_retain();
      swift_retain();
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_90130, v7, (char *)&type metadata for () + 8, v6);
      swift_release(v2);
      swift_release(v3);
      swift_release(v4);
      *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
    }
  }
  return result;
}

double sub_8F990(double a1, double a2)
{
  char v2;
  uint64_t v3;
  double result;

  if (a2 <= 0.0)
  {
    if (a2 >= 0.0)
      return result;
    v2 = 4;
  }
  else
  {
    v2 = 5;
  }
  v3 = sub_7DB20();
  *(_BYTE *)(v3 + 16) = v2;
  sub_C3EE8();
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

id sub_8F9E0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  id v45;
  _QWORD aBlock[5];
  uint64_t v47;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v40 - v14;
  v16 = 0;
  if (*(_QWORD *)(a2 + 16) != 1)
    return v16;
  v45 = a1;
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = a2 + v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v8, v19, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_9944((uint64_t)v8, (uint64_t *)&unk_1FA950);
    return 0;
  }
  v44 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v44(v15, v8, v9);
  v21 = sub_7B32C();
  if (!v21)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v15, v9, v22);
    return 0;
  }
  if (*(_QWORD *)(v21 + 16) >> 62)
  {
    v22 = swift_release(v21);
    goto LABEL_9;
  }
  v42 = *(_QWORD *)(v21 + 16);
  v43 = v21;
  v23 = swift_retain();
  v24 = dispatch thunk of PlaybackController.nowPlayingItem.getter(v23);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    swift_release(v43);
    swift_release(v42);
    return 0;
  }
  v25 = (void *)v24;
  v41 = swift_allocObject(&unk_1CC468, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16, v3);
  v20(v13, (uint64_t)v15, v9);
  v26 = v17 | 7;
  v27 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1CC710, v28 + 8, v26);
  v30 = v41;
  v31 = v45;
  *(_QWORD *)(v29 + 16) = v41;
  *(_QWORD *)(v29 + 24) = v31;
  v44((char *)(v29 + v18), v13, v9);
  *(_QWORD *)(v29 + v27) = v25;
  v32 = v42;
  *(_QWORD *)(v29 + v28) = v42;
  v33 = (void *)objc_opt_self(UIContextMenuConfiguration);
  aBlock[4] = sub_90090;
  v47 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_8DB04;
  aBlock[3] = &block_descriptor_70_0;
  v34 = _Block_copy(aBlock);
  v35 = v47;
  swift_retain();
  swift_retain();
  v36 = v45;
  v37 = v25;
  swift_retain();
  v16 = objc_msgSend(v33, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v34, swift_release(v35).n128_f64[0]);
  swift_release(v29);
  _Block_release(v34);

  swift_release(v32);
  v38 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v15, v9, v38);
  swift_release(v30);
  return v16;
}

uint64_t sub_8FD48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD v42[5];

  v40 = a1;
  v41 = a2;
  v35 = a9;
  v36 = a7;
  v39 = a12;
  v37 = a8;
  v38 = a11;
  v17 = type metadata accessor for InteractionContext(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v21);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[3] = type metadata accessor for NowPlayingAlignmentCoordinator(0);
  v24 = sub_3F28C((unint64_t *)&unk_1FDF40, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingAlignmentCoordinator, (uint64_t)&protocol conformance descriptor for NowPlayingAlignmentCoordinator);
  *(_QWORD *)(a13 + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_selectedText) = a3;
  v42[4] = v24;
  v42[0] = a10;
  v25 = a13 + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_referenceStartTime;
  *(_QWORD *)v25 = a4;
  *(_BYTE *)(v25 + 8) = a5 & 1;
  v26 = a13 + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_referenceEndTime;
  *(_QWORD *)v26 = a6;
  *(_BYTE *)(v26 + 8) = v36 & 1;
  v27 = a13 + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_playerStartTime;
  *(_QWORD *)v27 = v37;
  *(_BYTE *)(v27 + 8) = v35 & 1;
  sub_DF78((uint64_t)v42, a13 + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_alignmentCoordinator);
  v28 = type metadata accessor for PresentationSource(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v23, v38, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
  v31 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v39, v17);
  v32 = sub_AC0BC(v40, 0, v41, (uint64_t)v23, 0, 0, (uint64_t)v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v31, v17);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
  __swift_destroy_boxed_opaque_existential_0(v42);
  return v32;
}

void sub_8FF84(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (objc_msgSend(a1, "isFindNavigatorVisible"))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_userInitiatedSearchDismissal) == 1)
    {
      v2 = sub_7DB20();
      *(_BYTE *)(v2 + 16) = 0;
      sub_C3EE8();
      swift_release(v2);
    }
    else
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_userInitiatedSearchDismissal) = 1;
    }
  }
}

uint64_t sub_8FFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

Class sub_90090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_8667C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_900F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_9011C()
{
  uint64_t v0;

  sub_860F4(*(_BYTE *)(v0 + 16));
}

void sub_90130()
{
  uint64_t v0;

  sub_129580(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_9014C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_90178()
{
  uint64_t v0;

  return sub_855CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

BOOL sub_90180(uint64_t a1)
{
  uint64_t v1;

  return sub_85AAC(a1, v1);
}

uint64_t sub_90188(uint64_t a1)
{
  uint64_t v1;

  return sub_85B18(a1, v1);
}

uint64_t sub_90190(uint64_t a1)
{
  uint64_t v1;

  return sub_85B88(a1, v1);
}

uint64_t sub_90198()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_901CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1FDF94);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_27CA8;
  return sub_8A3E8(a1, v4, v5, v7, v6);
}

uint64_t sub_9024C()
{
  uint64_t v0;

  return sub_12804C(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_90268()
{
  uint64_t v0;

  sub_80A1C(v0);
}

void sub_90274()
{
  uint64_t v0;

  sub_8C6CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_9027C(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2)
    return swift_errorRetain();
  return result;
}

uint64_t sub_90290(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2)
    return swift_errorRelease();
  return result;
}

uint64_t sub_902A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_27A8C(&qword_1FDFA8, &qword_1FDFB0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Subject<>.send()(v1, v2);
}

uint64_t sub_902E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_90308()
{
  sub_7F690(2u);
}

void sub_90330(uint64_t a1)
{
  uint64_t v1;

  sub_7DBEC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_90340()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_90364(uint64_t a1)
{
  uint64_t v1;

  sub_8B1BC(a1, *(_QWORD *)(v1 + 16));
}

void sub_9036C(uint64_t a1)
{
  uint64_t v1;

  sub_8B8E8(a1, *(_QWORD *)(v1 + 16));
}

void sub_90374(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_8C8C0(a1, v1);
}

void sub_9037C(uint64_t a1)
{
  uint64_t v1;

  sub_89E50(a1, v1);
}

void sub_90384(uint64_t a1)
{
  uint64_t v1;

  sub_8A384(a1, v1);
}

uint64_t sub_9038C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_903C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_903E4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_903FC()
{
  uint64_t v0;

  sub_903E4((__int128 *)(v0 + 24), *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12NowPlayingUI24TranscriptViewController_keyboardState);
  sub_7F044();
}

uint64_t sub_90434()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_90458()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9047C@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  id v9;
  uint64_t result;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *a1;
  *a2 = *a1;
  ObjectType = swift_getObjectType(v4);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 208);
  v9 = v6;
  result = v8(ObjectType, v5);
  a2[1] = (void *)result;
  return result;
}

double sub_904DC(void *a1, void *a2)
{
  uint64_t v2;

  return sub_89D0C(a1, a2, v2);
}

uint64_t sub_904E4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_90514()
{
  uint64_t v0;

  return sub_9BF0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_90538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_813F4(a1, a2, a3, v3);
}

uint64_t sub_90540(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *, _QWORD))(v1 + 16))(*a1, a1 + 1, a1[6]);
}

double sub_90570(uint64_t a1)
{
  uint64_t v1;

  return sub_81954(a1, v1);
}

void sub_90578(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_81AA8(a1, a2, v2);
}

uint64_t sub_90580(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(_BYTE *, _BYTE *);
  _BYTE v5[40];
  _BYTE v6[40];

  v3 = *(uint64_t (**)(_BYTE *, _BYTE *))(v1 + 16);
  sub_982C(a1, (uint64_t)v5, &qword_1FE2B8);
  sub_982C(a1 + 40, (uint64_t)v6, &qword_1FE2B8);
  return v3(v5, v6);
}

double sub_905E0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_81EF0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_905E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *, _OWORD *);
  __int128 v3;
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v2 = *(uint64_t (**)(_OWORD *, _OWORD *))(v1 + 16);
  v3 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v3;
  v7 = *(_QWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 56);
  v8[0] = *(_OWORD *)(a1 + 40);
  v8[1] = v4;
  v9 = *(_QWORD *)(a1 + 72);
  return v2(v6, v8);
}

unint64_t sub_9063C()
{
  unint64_t result;

  result = qword_1FE240;
  if (!qword_1FE240)
  {
    result = swift_getWitnessTable(&unk_16ED20, &type metadata for TranscriptViewController.Section);
    atomic_store(result, (unint64_t *)&qword_1FE240);
  }
  return result;
}

uint64_t sub_90680()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_906A4()
{
  return objectdestroy_16Tm(50);
}

uint64_t objectdestroy_16Tm(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

double sub_906E4()
{
  uint64_t v0;

  return sub_8CDD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_BYTE *)(v0 + 49));
}

uint64_t sub_906F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_9071C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((~v1 & 0xF000000000000007) != 0)
    swift_release(v1 & 0x3FFFFFFFFFFFFFFFLL);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_90780(double *a1)
{
  uint64_t v1;

  sub_89704(a1, *(_QWORD *)(v1 + 16));
}

uint64_t *sub_90788(uint64_t *a1)
{
  sub_61410(*a1);
  return a1;
}

uint64_t destroy for TranscriptViewController._State(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t initializeWithCopy for TranscriptViewController._State(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v4 = a2[4];
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for TranscriptViewController._State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *(_OWORD *)(a1 + 1) = v6;
  v7 = a2[4];
  v8 = a1[4];
  a1[4] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t *assignWithTake for TranscriptViewController._State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  v5 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewController._State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptViewController._State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewController._State()
{
  return &type metadata for TranscriptViewController._State;
}

uint64_t *sub_9098C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for DeviceMetrics(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v4 = v15[1];
    *v14 = *v15;
    v14[1] = v4;
  }
  swift_retain(v4);
  return v7;
}

uint64_t sub_90A48(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for DeviceMetrics(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8));
}

uint64_t *sub_90AA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for DeviceMetrics(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  return a1;
}

uint64_t *sub_90B40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for DeviceMetrics(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = v14[1];
  v16 = v13[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  return a1;
}

_QWORD *sub_90BE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for DeviceMetrics(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_90C58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for DeviceMetrics(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = *(uint64_t *)((char *)a1 + v11 + 8);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  swift_release(v12);
  return a1;
}

uint64_t sub_90CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_90CF0);
}

uint64_t sub_90CF0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DeviceMetrics(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_90D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_90D78);
}

char *sub_90D78(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DeviceMetrics(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_90DEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for DeviceMetrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_90E70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19FD44, 1);
}

unint64_t sub_90E80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE3A0;
  if (!qword_1FE3A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE380);
    sub_3F28C(&qword_1FE3A8, 255, type metadata accessor for TextContentView, (uint64_t)&unk_1727AC);
    sub_90F08();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE3A0);
  }
  return result;
}

unint64_t sub_90F08()
{
  unint64_t result;

  result = qword_1FE3B0;
  if (!qword_1FE3B0)
  {
    result = swift_getWitnessTable(&unk_16FBA0, &type metadata for SilentContentView);
    atomic_store(result, (unint64_t *)&qword_1FE3B0);
  }
  return result;
}

unint64_t sub_90F4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE3B8;
  if (!qword_1FE3B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE368);
    sub_3F28C((unint64_t *)&unk_1FE390, 255, type metadata accessor for SpeakerContentView, (uint64_t)&unk_16C1B0);
    sub_7A75C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE3B8);
  }
  return result;
}

uint64_t sub_90FE0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_91020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE3D8;
  if (!qword_1FE3D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1FE3E0);
    sub_90E80();
    sub_90F4C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE3D8);
  }
  return result;
}

void sub_91124()
{
  sub_90130();
}

uint64_t sub_91138(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  double v35;
  id v36;
  void *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = type metadata accessor for InteractionContext.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v1 + 24);
  v55 = v4;
  v56 = v3;
  v53 = v7;
  v54 = v1;
  if (a1)
  {
    v17 = *(_QWORD *)(v1 + 16);
    v18 = type metadata accessor for PresentationSource(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
    swift_storeEnumTagMultiPayload(v9, v7, 13);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for InteractionContext.Origin.none(_:), v3);
    v19 = a1;
    swift_retain(v17);
    InteractionContext.init(page:view:origin:)(v9, 7, v6);
    v20 = type metadata accessor for NowPlayingContextActionConfiguration(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v21 = sub_AC0BC(v17, 0, v19, (uint64_t)v15, 0, 0, (uint64_t)v12);

    KeyPath = swift_getKeyPath(&unk_16F240);
    v23 = swift_getKeyPath(&unk_16F268);
    v57 = v21;
    swift_retain(v16);
    v24 = static Published.subscript.setter(&v57, v16, KeyPath, v23);
    v25 = MPModelObject.adamID.getter(v24);
    v27 = v26;
    v28 = 0;
    v29 = 0;
    if ((v27 & 1) == 0)
    {
      v57 = v25;
      v30 = sub_40324();
      v28 = BinaryInteger.description.getter(&type metadata for UInt64, v30);
    }
  }
  else
  {
    v31 = swift_getKeyPath(&unk_16F240);
    v32 = swift_getKeyPath(&unk_16F268);
    v57 = 0;
    swift_retain(v16);
    static Published.subscript.setter(&v57, v16, v31, v32);
    v28 = 0;
    v29 = 0;
  }
  v33 = (uint64_t *)(v16
                  + OBJC_IVAR____TtCC12NowPlayingUI24NowPlayingMenuControllerP33_BCD7B6015FBE6204AF7DB3B0A957E5FF9ViewModel_episodeAdamId);
  v34 = *(_QWORD *)(v16
                  + OBJC_IVAR____TtCC12NowPlayingUI24NowPlayingMenuControllerP33_BCD7B6015FBE6204AF7DB3B0A957E5FF9ViewModel_episodeAdamId
                  + 8);
  *v33 = v28;
  v33[1] = v29;
  *(_QWORD *)&v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
  if (a1
    && (v36 = objc_msgSend(a1, "podcast", v35)) != 0
    && (v37 = v36, v38 = objc_msgSend(v36, "supportsSubscription"), v37, v38))
  {
    v39 = *(_QWORD *)(v54 + 16);
    v40 = type metadata accessor for PresentationSource(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v15, 1, 1, v40);
    swift_storeEnumTagMultiPayload(v9, v53, 13);
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v6, enum case for InteractionContext.Origin.none(_:), v56);
    v41 = a1;
    swift_retain(v39);
    InteractionContext.init(page:view:origin:)(v9, 7, v6);
    v42 = type metadata accessor for NowPlayingContextActionConfiguration(0);
    swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
    v43 = sub_AC0BC(v39, 0, v41, (uint64_t)v15, 0, 0, (uint64_t)v12);

    v44 = swift_getKeyPath(&unk_16F240);
    v45 = swift_getKeyPath(&unk_16F268);
    v57 = v43;
    swift_retain(v16);
    v46 = v16;
    v47 = v44;
    v48 = v45;
  }
  else
  {
    v49 = swift_getKeyPath(&unk_16F240);
    v50 = swift_getKeyPath(&unk_16F268);
    v57 = 1;
    swift_retain(v16);
    v46 = v16;
    v47 = v49;
    v48 = v50;
  }
  return static Published.subscript.setter(&v57, v46, v47, v48);
}

UIViewController_optional __swiftcall NowPlayingContextMenuProvider.previewViewController()()
{
  UIViewController_optional v0;

  if (v0.value.super.super.isa)
    return ContextActionsConfiguration.previewViewController()();
  return v0;
}

UIMenu __swiftcall NowPlayingContextMenuProvider.menu(view:)(UIView_optional view)
{
  uint64_t v1;
  Class isa;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  UIMenuElementSize v10;
  Swift::String v11;
  Swift::OpaquePointer v13;
  UIMenuElementSize aBlock[5];
  uint64_t v15;
  UIImage_optional v16;

  v1 = *(_QWORD *)&view.is_nil;
  isa = view.value.super.super.isa;
  v3 = (void *)objc_opt_self(UIDeferredMenuElement);
  v4 = swift_allocObject(&unk_1CCDE8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = isa;
  aBlock[4] = (UIMenuElementSize)sub_62390;
  v15 = v4;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_926F8;
  aBlock[3] = (UIMenuElementSize)&block_descriptor_14;
  v5 = _Block_copy(aBlock);
  v6 = v15;
  v7 = isa;
  swift_retain();
  v8 = objc_msgSend(v3, "elementWithUncachedProvider:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_16B2D0;
  *(_QWORD *)(v10 + 32) = v8;
  aBlock[0] = v10;
  specialized Array._endMutation()(v10);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v16.value.super.isa = 0;
  v16.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v13);
}

uint64_t sub_9170C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[5];

  v2 = v1;
  v51 = a1;
  v3 = type metadata accessor for NowPlayingMenuController.ContextMenu(0);
  v43 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v44 = v4;
  v45 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE680);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5);
  v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE688);
  v7 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorSchemeContrast(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = *(_QWORD *)(v2 + 8);
  KeyPath = swift_getKeyPath(&unk_16F240);
  v18 = swift_getKeyPath(&unk_16F268);
  v19 = swift_retain();
  static Published.subscript.getter(v52, v19, KeyPath, v18);
  swift_release(v16);
  swift_release(KeyPath);
  v20 = swift_release(v18);
  v21 = v52[0];
  if (v52[0] == 1)
  {
    v22 = 1;
    v24 = v50;
    v23 = v51;
    v25 = v7;
  }
  else
  {
    sub_562AC((uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for ColorSchemeContrast.standard(_:), v9);
    v26 = static ColorSchemeContrast.== infix(_:_:)(v15, v13);
    v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v13, v9);
    v27(v15, v9);
    if ((v26 & 1) != 0)
    {
      v25 = v7;
      if (qword_1F94F8 != -1)
        swift_once(&qword_1F94F8, sub_91E98);
      v28 = &qword_1FE3F0;
    }
    else
    {
      v25 = v7;
      if (qword_1F9500 != -1)
        swift_once(&qword_1F9500, sub_92104);
      v28 = &qword_1FE400;
    }
    v29 = *v28;
    v30 = v28[1];
    swift_retain();
    swift_retain();
    v52[3] = &type metadata for NowPlayingContextMenuProvider;
    v52[4] = sub_93244();
    v52[0] = v21;
    v31 = swift_allocObject(&unk_1CCF08, 32, 7);
    *(_QWORD *)(v31 + 16) = v29;
    *(_QWORD *)(v31 + 24) = v30;
    sub_62238(v21);
    swift_retain();
    swift_retain();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE698);
    v33 = sub_932BC();
    v34 = v47;
    ContextMenuOverlay.init(menuProvider:padding:view:)(v52, sub_932B4, v31, v32, v33, 0.0, 0.0, 0.0, 0.0);
    v35 = v45;
    sub_93528(v2, v45);
    v36 = *(unsigned __int8 *)(v43 + 80);
    v37 = (v36 + 16) & ~v36;
    v38 = swift_allocObject(&unk_1CCF30, v37 + v44, v36 | 7);
    sub_93638(v35, v38 + v37);
    v39 = sub_27A8C(&qword_1FE6F0, &qword_1FE680, (uint64_t)&protocol conformance descriptor for ContextMenuOverlay<A>);
    v40 = v46;
    v41 = v49;
    View.onTapGesture(count:perform:)(1, sub_9367C, v38, v49, v39);
    swift_release(v30);
    swift_release(v29);
    swift_release(v38);
    sub_61410(v21);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v41);
    v24 = v50;
    v23 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v51, v40, v50);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v25 + 56))(v23, v22, 1, v24, v20);
}

double sub_91B40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;

  v33 = a1;
  v34 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_retain();
  v12 = static Alignment.center.getter(v11);
  _FrameLayout.init(width:height:alignment:)(&v48, 0x403C000000000000, 0, 0x403C000000000000, 0, v12, v13);
  v14 = v48;
  v15 = v49;
  v16 = v50;
  v32 = v51;
  v31 = v52;
  v30 = v53;
  v17 = Image.init(systemName:)(0x73697370696C6C65, 0xE800000000000000);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.callout(_:), v7);
  v18 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  v19 = swift_retain();
  v20 = static Font.Weight.semibold.getter(v19);
  v21 = static Font.system(_:design:weight:)(v10, v6, *(_QWORD *)&v20, 0);
  sub_9944((uint64_t)v6, &qword_1FB060);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  KeyPath = swift_getKeyPath(&unk_16F288);
  v23 = static Alignment.center.getter(KeyPath);
  v24 = v33;
  v35 = v33;
  v36 = v14;
  v37 = v15;
  v38 = v16;
  v39 = v32;
  v40 = v31;
  v41 = v30;
  v42 = v17;
  v43 = a2;
  v44 = KeyPath;
  v45 = v21;
  v46 = v23;
  v47 = v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE6B0);
  v27 = sub_93328();
  View.accessibilityHidden(_:)(1, v26, v27);
  swift_release(v21);
  swift_release(KeyPath);
  swift_release(a2);
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_91D9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v2 = type metadata accessor for MetricsData(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(*(_QWORD *)(a1 + 8)
                 + OBJC_IVAR____TtCC12NowPlayingUI24NowPlayingMenuControllerP33_BCD7B6015FBE6204AF7DB3B0A957E5FF9ViewModel_episodeAdamId);
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    type metadata accessor for ClickMetricsEvent(0);
    swift_bridgeObjectRetain(v8);
    v10 = static ClickMetricsEvent.makePlayerContextMenuClickEvent(for:)(v9, v8);
    swift_bridgeObjectRelease(v8);
    v11 = type metadata accessor for NowPlayingMenuController.ContextMenu(0);
    dispatch thunk of MetricsEvent.metricsData.getter(v11);
    MetricsController.process(_:)(v6);
    v12 = swift_release(v10);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v12);
  }
  return result;
}

uint64_t sub_91E98()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for BlendMode(0);
  v1 = *(_QWORD **)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE60);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (uint64_t *)((char *)&v25 - v9);
  __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v25 - v11);
  if (qword_1F9458 != -1)
    swift_once(&qword_1F9458, sub_15490);
  v13 = qword_210040;
  v14 = enum case for BlendMode.plusLighter(_:);
  v15 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v15(v3, enum case for BlendMode.plusLighter(_:), v0);
  v16 = (char *)v12 + *(int *)(v4 + 36);
  v26 = v4;
  v17 = (void (*)(char *, char *, uint64_t))v1[2];
  v17(v16, v3, v0);
  *v12 = v13;
  v18 = (void (*)(char *, uint64_t))v1[1];
  swift_retain();
  v18(v3, v0);
  if (qword_1F9448 != -1)
    swift_once(&qword_1F9448, sub_15460);
  v19 = qword_210030;
  v15(v3, v14, v0);
  v20 = v26;
  v17((char *)v10 + *(int *)(v26 + 36), v3, v0);
  *v10 = v19;
  swift_retain();
  v18(v3, v0);
  sub_936A8((uint64_t)v12, (uint64_t)v7);
  v21 = sub_27A8C((unint64_t *)&qword_1FAED8, &qword_1FAE60, (uint64_t)&protocol conformance descriptor for _BlendModeShapeStyle<A>);
  v22 = AnyShapeStyle.init<A>(_:)(v7, v20, v21);
  sub_936A8((uint64_t)v10, (uint64_t)v7);
  v23 = AnyShapeStyle.init<A>(_:)(v7, v20, v21);
  sub_9944((uint64_t)v10, &qword_1FAE60);
  result = sub_9944((uint64_t)v12, &qword_1FAE60);
  qword_1FE3F0 = v22;
  *(_QWORD *)algn_1FE3F8 = v23;
  return result;
}

uint64_t sub_92104()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v1 = Color.init(uiColor:)(v0);
  v2 = static Color.accentColor.getter();
  v6 = v1;
  swift_retain(v1);
  v3 = AnyShapeStyle.init<A>(_:)(&v6, &type metadata for Color, &protocol witness table for Color);
  v6 = v2;
  v4 = AnyShapeStyle.init<A>(_:)(&v6, &type metadata for Color, &protocol witness table for Color);
  result = swift_release(v1);
  qword_1FE400 = v3;
  *(_QWORD *)algn_1FE408 = v4;
  return result;
}

uint64_t sub_921C0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16F240);
  v2 = swift_getKeyPath(&unk_16F268);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_92234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC12NowPlayingUI24NowPlayingMenuControllerP33_BCD7B6015FBE6204AF7DB3B0A957E5FF9ViewModel__menuProvider;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE6F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCC12NowPlayingUI24NowPlayingMenuControllerP33_BCD7B6015FBE6204AF7DB3B0A957E5FF9ViewModel_episodeAdamId
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_9229C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingMenuController.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_922D8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

UIMenu __swiftcall NowPlayingContextMenuProvider.menu(for:)(UIButton a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  UIButton *v15;
  void *v16;
  UIButton *v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  UIMenuElementSize v21;
  Swift::String v22;
  Swift::OpaquePointer v24;
  UIMenuElementSize aBlock[5];
  UIButton *v26;
  UIImage_optional v27;

  v2 = v1;
  v4 = type metadata accessor for UIShape(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE410);
  __chkstk_darwin(v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -[objc_class hoverStyle](a1.super.super.super.super.isa, "hoverStyle");
  if (v11)
  {
    v12 = v11;
    v13 = static UIShape.circle.getter();
    UIShape.inset(by:)(v13, 8.0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    UIHoverStyle.shape.setter(v10);

  }
  v14 = (void *)objc_opt_self(UIDeferredMenuElement);
  v15 = (UIButton *)swift_allocObject(&unk_1CCE38, 32, 7);
  v15[2].super.super.super.super.isa = v2;
  v15[3].super.super.super.super.isa = a1.super.super.super.super.isa;
  aBlock[4] = (UIMenuElementSize)sub_9389C;
  v26 = v15;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_926F8;
  aBlock[3] = (UIMenuElementSize)&block_descriptor_7;
  v16 = _Block_copy(aBlock);
  v17 = v26;
  swift_retain();
  v18 = a1.super.super.super.super.isa;
  v19 = objc_msgSend(v14, "elementWithUncachedProvider:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_16B2D0;
  *(_QWORD *)(v21 + 32) = v19;
  aBlock[0] = v21;
  specialized Array._endMutation()(v21);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v27.value.super.isa = 0;
  v27.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v24);
}

double sub_92558(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  double result;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  v8 = __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v13 = &v22[-v12 - 8];
  if (a3)
  {
    v14 = a4;
    swift_retain_n(a3, 2);
    PresentationSource.init(view:)(a4);
    v15 = type metadata accessor for PresentationSource(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
    sub_73CC0((uint64_t)v13, (uint64_t)v10);
    v16 = a3 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
    swift_beginAccess(a3 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v22, 33, 0);
    sub_73D08((uint64_t)v10, v16);
    swift_endAccess(v22);
    swift_release(a3);
    isa = ContextActionsConfiguration.menu(extraContextMenuElements:)((Swift::OpaquePointer)_swiftEmptyArrayStorage).super.super.isa;
    v18 = -[objc_class children](isa, "children");
    v19 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

    a1(v20);
    swift_release(a3);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  return result;
}

double sub_926F8(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t);
  void *v4;
  uint64_t v5;
  double result;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1CCF58, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  swift_retain();
  v3(sub_9371C, v5);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_92784(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

UIMenu sub_927E8(UIButton a1)
{
  return NowPlayingContextMenuProvider.menu(for:)(a1);
}

uint64_t type metadata accessor for NowPlayingMenuController()
{
  return objc_opt_self(_TtC12NowPlayingUI24NowPlayingMenuController);
}

uint64_t sub_92810()
{
  return type metadata accessor for NowPlayingMenuController.ViewModel(0);
}

uint64_t type metadata accessor for NowPlayingMenuController.ViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FE500, (uint64_t)&nominal type descriptor for NowPlayingMenuController.ViewModel);
}

void sub_9282C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_928A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_16F158;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_928A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FE510)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1FE518);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FE510);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NowPlayingContextMenuProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for NowPlayingContextMenuProvider(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *assignWithCopy for NowPlayingContextMenuProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t *assignWithTake for NowPlayingContextMenuProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingContextMenuProvider(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingContextMenuProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingContextMenuProvider()
{
  return &type metadata for NowPlayingContextMenuProvider;
}

uint64_t *sub_92A50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

double sub_92B40(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

_QWORD *sub_92BC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

_QWORD *sub_92C90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_9944((uint64_t)a1 + v7, &qword_1FABA0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
  }
  v13 = *(int *)(a3 + 24);
  v14 = *(_QWORD *)((char *)a2 + v13);
  v15 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  swift_retain();
  swift_release(v15);
  return a1;
}

_OWORD *sub_92D90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_92E54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_9944((uint64_t)a1 + v8, &qword_1FABA0);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = *(int *)(a3 + 24);
  v14 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_release(v14);
  return a1;
}

uint64_t sub_92F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_92F4C);
}

uint64_t sub_92F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_92FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_92FD8);
}

uint64_t sub_92FD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingMenuController.ContextMenu(uint64_t a1)
{
  return sub_256F8(a1, qword_1FE640, (uint64_t)&nominal type descriptor for NowPlayingMenuController.ContextMenu);
}

void sub_93064(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_16F1A0;
  sub_930E4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_930E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FAC18)
  {
    v2 = type metadata accessor for ColorSchemeContrast(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FAC18);
  }
}

uint64_t sub_93138(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19FEA8, 1);
}

uint64_t sub_93148@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_16F240);
  v5 = swift_getKeyPath(&unk_16F268);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_931C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_16F240);
  v5 = swift_getKeyPath(&unk_16F268);
  v7 = v2;
  sub_62238(v2);
  swift_retain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

unint64_t sub_93244()
{
  unint64_t result;

  result = qword_1FE690;
  if (!qword_1FE690)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingContextMenuProvider, &type metadata for NowPlayingContextMenuProvider);
    atomic_store(result, (unint64_t *)&qword_1FE690);
  }
  return result;
}

uint64_t sub_93288()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_932B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_91B40(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_932BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE6A0;
  if (!qword_1FE6A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE698);
    sub_93328();
    sub_934E0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE6A0);
  }
  return result;
}

unint64_t sub_93328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE6A8;
  if (!qword_1FE6A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE6B0);
    sub_933AC();
    sub_27A8C(&qword_1FE6E0, &qword_1FE6E8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE6A8);
  }
  return result;
}

unint64_t sub_933AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE6B8;
  if (!qword_1FE6B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE6C0);
    sub_93418();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE6B8);
  }
  return result;
}

unint64_t sub_93418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE6C8;
  if (!qword_1FE6C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE6D0);
    sub_9349C();
    sub_27A8C(&qword_1FAEC0, &qword_1FAEC8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE6C8);
  }
  return result;
}

unint64_t sub_9349C()
{
  unint64_t result;

  result = qword_1FE6D8;
  if (!qword_1FE6D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_1FE6D8);
  }
  return result;
}

unint64_t sub_934E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAF00;
  if (!qword_1FAF00)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, (unint64_t *)&qword_1FAF00);
  }
  return result;
}

uint64_t sub_93528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingMenuController.ContextMenu(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9356C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for NowPlayingMenuController.ContextMenu(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 24)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_93638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingMenuController.ContextMenu(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_9367C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingMenuController.ContextMenu(0) - 8) + 80);
  return sub_91D9C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_936A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_936F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_9371C(uint64_t a1)
{
  uint64_t v1;

  sub_92784(a1, *(_QWORD *)(v1 + 16));
}

_QWORD *sub_93724(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v4 = type metadata accessor for NowPlayingMenuController.ViewModel(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v10 = 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE518);
  Published.init(initialValue:)(&v10, v6);
  v7 = (_QWORD *)(v5
                + OBJC_IVAR____TtCC12NowPlayingUI24NowPlayingMenuControllerP33_BCD7B6015FBE6204AF7DB3B0A957E5FF9ViewModel_episodeAdamId);
  *v7 = 0;
  v7[1] = 0;
  v2[2] = a1;
  v2[3] = v5;
  v8 = type metadata accessor for MetricsController(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v10, v8, v8);
  v2[4] = v10;
  return v2;
}

unint64_t sub_937E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1FE700;
  if (!qword_1FE700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE708);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE680);
    v2[1] = sub_27A8C(&qword_1FE6F0, &qword_1FE680, (uint64_t)&protocol conformance descriptor for ContextMenuOverlay<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1FE700);
  }
  return result;
}

uint64_t sub_938A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB8F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE760);
  __chkstk_darwin(v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE768);
  __chkstk_darwin(v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[0] = a1;
  v26[1] = a2;
  v14 = sub_11CEC();
  swift_bridgeObjectRetain(a2);
  v15 = Label<>.init<A>(_:systemImage:)(v26, 0xD000000000000010, 0x8000000000187D10, &type metadata for String, v14);
  v16 = static Font.subheadline.getter(v15);
  KeyPath = swift_getKeyPath(&unk_16F4F8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v18 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v18 = KeyPath;
  v18[1] = v16;
  v19 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = static Color.secondary.getter(v19);
  v21 = swift_getKeyPath(&unk_16F528);
  sub_9471C((uint64_t)v10, (uint64_t)v13);
  v22 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v22 = v21;
  v22[1] = v20;
  sub_9944((uint64_t)v10, &qword_1FE760);
  v23 = sub_94764();
  v24 = sub_94884();
  View.labelStyle<A>(_:)(v24, v11, &type metadata for MiniPlayerUpsellHintView.UpsellHintLabelStyle, v23, v24);
  return sub_9944((uint64_t)v13, &qword_1FE768);
}

uint64_t sub_93AA8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;

  v25 = a1;
  v1 = type metadata accessor for LabelStyleConfiguration.Title(0);
  v24 = *(_QWORD *)(v1 - 8);
  v2 = v24;
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v24 - v6;
  v8 = type metadata accessor for LabelStyleConfiguration.Icon(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v24 - v14;
  v16 = LabelStyleConfiguration.icon.getter(v13);
  LabelStyleConfiguration.title.getter(v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v17(v12, v15, v8);
  v18 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v18(v5, v7, v1);
  v19 = v25;
  v17(v25, v12, v8);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE7B0);
  v18(&v19[*(int *)(v20 + 48)], v5, v1);
  v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v7, v1);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v15, v8);
  v21(v5, v1);
  return ((uint64_t (*)(char *, uint64_t))v22)(v12, v8);
}

uint64_t sub_93C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = static VerticalAlignment.firstTextBaseline.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4008000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE7A8);
  return sub_93AA8((char *)(a2 + *(int *)(v3 + 44)));
}

uint64_t sub_93C94()
{
  uint64_t *v0;

  return sub_938A0(*v0, v0[1]);
}

uint64_t property wrapper backing initializer of MiniPlayerSublineView.viewModel(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(0);
  v3 = sub_93CD8();
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

unint64_t sub_93CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD210;
  if (!qword_1FD210)
  {
    v1 = type metadata accessor for NowPlayingMiniPlayerSublineViewModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingMiniPlayerSublineViewModel, v1);
    atomic_store(result, (unint64_t *)&qword_1FD210);
  }
  return result;
}

double MiniPlayerSublineView.body.getter@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  double result;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;

  KeyPath = swift_getKeyPath(&unk_16F2C0);
  v5 = swift_getKeyPath(&unk_16F2E8);
  v6 = swift_retain();
  static Published.subscript.getter(&v45, v6, KeyPath, v5);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v5);
  if ((v45 & 1) == 0)
  {
    v23 = swift_getKeyPath(&unk_16F350);
    v24 = swift_getKeyPath(&unk_16F378);
    v25 = swift_retain();
    static Published.subscript.getter(&v45, v25, v23, v24);
    swift_release(a1);
    swift_release(v23);
    swift_release(v24);
    v26 = *((_QWORD *)&v45 + 1);
    if (*((_QWORD *)&v45 + 1))
    {
      v27 = v45;
      v28 = sub_5DAB0();
      if ((Collection.isNotEmpty.getter(&type metadata for String, v28) & 1) != 0)
      {
        *(_QWORD *)&v45 = v27;
        *((_QWORD *)&v45 + 1) = v26;
        v29 = sub_11CEC();
        *(_QWORD *)&v41 = Text.init<A>(_:)(&v45, &type metadata for String, v29);
        *((_QWORD *)&v41 + 1) = v30;
        *(_QWORD *)&v42 = v31 & 1;
        *((_QWORD *)&v42 + 1) = v32;
        LOBYTE(v43) = 0;
LABEL_8:
        _ConditionalContent<>.init(storage:)(&v41, &type metadata for Text, &type metadata for EmptyView, &protocol witness table for Text, &protocol witness table for EmptyView);
        v41 = v45;
        v42 = v46;
        v43 = v47;
        v44 = 0;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease(v26);
    }
    v41 = 0u;
    v42 = 0u;
    LOBYTE(v43) = 1;
    goto LABEL_8;
  }
  v7 = swift_getKeyPath(&unk_16F308);
  v8 = swift_getKeyPath(&unk_16F330);
  v9 = swift_retain();
  static Published.subscript.getter(&v45, v9, v7, v8);
  swift_release(a1);
  swift_release(v7);
  swift_release(v8);
  v10 = sub_94164(v45, *((uint64_t *)&v45 + 1));
  v12 = v11;
  v14 = v13;
  v16 = v15;
  *(_QWORD *)&v45 = 0x4034000000000000;
  *(_QWORD *)&v41 = 0;
  v17 = sub_94320();
  v18 = static AnyTransition.modifier<A>(active:identity:)(&v45, &v41, &type metadata for HorizontalOffsetEffect, v17);
  v19 = static AnyTransition.opacity.getter(v18);
  v20 = AnyTransition.combined(with:)(v19, v18);
  swift_release(v18);
  swift_release(v19);
  v21 = static Animation.easeInOut(duration:)(0.5);
  v22 = AnyTransition.animation(_:)(v21, v20);
  swift_release(v20);
  swift_release(v21);
  *(_QWORD *)&v41 = v10;
  *((_QWORD *)&v41 + 1) = v12;
  *(_QWORD *)&v42 = v14;
  *((_QWORD *)&v42 + 1) = v16;
  v43 = v22;
  v44 = 1;
LABEL_9:
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE718);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE720);
  v35 = sub_94364();
  v36 = sub_943C8();
  _ConditionalContent<>.init(storage:)(&v41, v33, v34, v35, v36);
  result = *(double *)&v45;
  v38 = v46;
  v39 = v47;
  v40 = v48;
  *(_OWORD *)a2 = v45;
  *(_OWORD *)(a2 + 16) = v38;
  *(_QWORD *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 40) = v40;
  return result;
}

double sub_94028@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return MiniPlayerSublineView.body.getter(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_94038()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_94050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE758);
  v8 = (_QWORD *)(a2 + *(int *)(result + 36));
  *v8 = v5;
  v8[1] = 0;
  return result;
}

uint64_t sub_940C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_940EC(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_94114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_9413C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_94164(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v17;
  Swift::String v18;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v17._object = (void *)0x8000000000187D50;
  v6._object = (void *)0x8000000000187D30;
  v6._countAndFlagsBits = 0xD000000000000016;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0xD000000000000016;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v17);

  if (a2)
  {
    v9 = objc_msgSend(v4, "mainBundle");
    v10._countAndFlagsBits = 0xD000000000000022;
    v18._object = (void *)0xE000000000000000;
    v10._object = (void *)0x8000000000187D70;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v18);

    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
    v14 = swift_allocObject(v13, 72, 7);
    *(_OWORD *)(v14 + 16) = xmmword_16B3D0;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_1F6B8();
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    v15 = static String.localizedStringWithFormat(_:_:)(v12._countAndFlagsBits, v12._object, v14);
    swift_bridgeObjectRelease(v12._object);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    swift_bridgeObjectRetain(v8._object);
    return v8._countAndFlagsBits;
  }
  return v15;
}

unint64_t sub_94320()
{
  unint64_t result;

  result = qword_1FE710;
  if (!qword_1FE710)
  {
    result = swift_getWitnessTable(&unk_16F4A8, &type metadata for HorizontalOffsetEffect);
    atomic_store(result, (unint64_t *)&qword_1FE710);
  }
  return result;
}

unint64_t sub_94364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE728;
  if (!qword_1FE728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE718);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE728);
  }
  return result;
}

unint64_t sub_943C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE730;
  if (!qword_1FE730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE720);
    sub_9444C();
    sub_27A8C(&qword_1FBC18, &qword_1FBC20, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE730);
  }
  return result;
}

unint64_t sub_9444C()
{
  unint64_t result;

  result = qword_1FE738;
  if (!qword_1FE738)
  {
    result = swift_getWitnessTable(&unk_16F458, &type metadata for MiniPlayerUpsellHintView);
    atomic_store(result, (unint64_t *)&qword_1FE738);
  }
  return result;
}

uint64_t sub_94498(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MiniPlayerSublineView.body>>, 1);
}

ValueMetadata *type metadata accessor for MiniPlayerSublineView()
{
  return &type metadata for MiniPlayerSublineView;
}

unint64_t sub_944BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE740;
  if (!qword_1FE740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE748);
    sub_94364();
    sub_943C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE740);
  }
  return result;
}

uint64_t destroy for MiniPlayerUpsellHintView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for MiniPlayerUpsellHintView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for MiniPlayerUpsellHintView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for MiniPlayerUpsellHintView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *type metadata accessor for MiniPlayerUpsellHintView()
{
  return &type metadata for MiniPlayerUpsellHintView;
}

ValueMetadata *type metadata accessor for HorizontalOffsetEffect()
{
  return &type metadata for HorizontalOffsetEffect;
}

uint64_t sub_9465C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19FFA0, 1);
}

uint64_t sub_9466C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19FF78, 1);
}

uint64_t sub_9467C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_946A4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_946CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_946F4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_9471C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_94764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE770;
  if (!qword_1FE770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE768);
    sub_947E8();
    sub_27A8C(&qword_1FE780, &qword_1FE788, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE770);
  }
  return result;
}

unint64_t sub_947E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE778;
  if (!qword_1FE778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE760);
    sub_27A8C(&qword_1FB900, &qword_1FB8F8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    sub_27A8C(&qword_1FAEB0, &qword_1FAEB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE778);
  }
  return result;
}

unint64_t sub_94884()
{
  unint64_t result;

  result = qword_1FE790;
  if (!qword_1FE790)
  {
    result = swift_getWitnessTable(&unk_16F578, &type metadata for MiniPlayerUpsellHintView.UpsellHintLabelStyle);
    atomic_store(result, (unint64_t *)&qword_1FE790);
  }
  return result;
}

ValueMetadata *type metadata accessor for MiniPlayerUpsellHintView.UpsellHintLabelStyle()
{
  return &type metadata for MiniPlayerUpsellHintView.UpsellHintLabelStyle;
}

unint64_t sub_948DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE798;
  if (!qword_1FE798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE758);
    sub_27A8C(&qword_1FE7A0, &qword_1FE750, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FE798);
  }
  return result;
}

uint64_t sub_94960()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FE768);
  v1[1] = &type metadata for MiniPlayerUpsellHintView.UpsellHintLabelStyle;
  v1[2] = sub_94764();
  v1[3] = sub_94884();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
}

uint64_t sub_949C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_19FFC8, 1);
}

uint64_t sub_949D0()
{
  return sub_27A8C(&qword_1FE7B8, &qword_1FE7C0, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

_QWORD *sub_949FC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_95DD8(a1);
  v2 = v1;
  v3 = v1[2];
  if (v3)
  {
    swift_bridgeObjectRetain(v1);
    for (i = 0; i != v3; ++i)
    {
      v5 = v2[i + 4];
      v6 = swift_bridgeObjectRetain(v5);
      sub_A53D8(v6);
    }
    swift_bridgeObjectRelease_n(v2, 2);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    return _swiftEmptyArrayStorage;
  }
}

_QWORD *sub_94A98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 24);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = swift_bridgeObjectRetain(v3);
    v2 = sub_949FC(v4);
    swift_bridgeObjectRelease(v3);
    v5 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v5);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

_QWORD *sub_94B08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  _BYTE v6[24];

  v1[3] = 0;
  v1[4] = sub_C9DC8((uint64_t)_swiftEmptyArrayStorage);
  v1[5] = sub_C9DC8((uint64_t)_swiftEmptyArrayStorage);
  v1[6] = sub_C9EFC((uint64_t)_swiftEmptyArrayStorage);
  v1[7] = _swiftEmptyArrayStorage;
  v1[2] = a1;
  swift_beginAccess(v1 + 7, v6, 1, 0);
  v3 = v1[7];
  v1[7] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  v4 = sub_94A98();
  swift_bridgeObjectRelease(v4);
  return v1;
}

void sub_94B9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v8 = a4 & 1;
  swift_beginAccess(v4 + 4, v21, 1, 0);
  v9 = v4[4];
  v4[4] = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v9);
  swift_beginAccess(v4 + 5, v20, 1, 0);
  v10 = v4[5];
  v4[5] = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v10);
  v11 = v4[6];
  v4[6] = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v11);
  v12 = v4 + 7;
  swift_beginAccess(v4 + 7, v19, 0, 0);
  v13 = v4[7];
  swift_bridgeObjectRetain(v13);
  v14 = sub_AD9EC(a1, a2, a3, v8, v13);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  if ((v16 & 1) == 0)
  {
    swift_beginAccess(v12, v18, 33, 0);
    v17 = sub_AD7CC(v14);
    swift_endAccess(v18);
    swift_unknownObjectRelease(v17);
  }
}

uint64_t sub_94CB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[3];
  unsigned __int8 v31;
  uint64_t v32;

  v8 = type metadata accessor for IndexPath(0);
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v13 = v12(a4, 1, 1, v11);
  v14 = IndexPath.count.getter(v13);
  if (v14 == 2)
  {
    v15 = IndexPath.section.getter(2);
  }
  else if (v14 <= 0)
  {
    v15 = NSNotFound.getter();
  }
  else
  {
    v15 = IndexPath.subscript.getter(0);
  }
  sub_94E88(v15, a1, a2, a3, v29);
  result = sub_95EC4((uint64_t)v29, (uint64_t)v30);
  v17 = v30[0];
  if (v30[0])
  {
    v18 = v30[1];
    v19 = v30[2];
    v26 = v31;
    v20 = v32;
    v21 = IndexPath.count.getter(result);
    if (v21 >= 2)
    {
      v22 = IndexPath.count.getter(v21);
      if (v22 == 2)
      {
        v23 = IndexPath.item.getter(2);
      }
      else if (v22 <= 2)
      {
        v23 = NSNotFound.getter();
      }
      else
      {
        v23 = IndexPath.subscript.getter(1);
      }
      IndexPath.init(item:section:)(v23, v20);
    }
    else
    {
      IndexPath.init(index:)(v20);
    }
    sub_95F0C(a4);
    v24 = a4 + *(int *)(v11 + 48);
    *(_QWORD *)a4 = v17;
    *(_QWORD *)(a4 + 8) = v18;
    *(_QWORD *)(a4 + 16) = v19;
    *(_BYTE *)(a4 + 24) = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v24, v10, v28);
    return v12(a4, 0, 1, v11);
  }
  return result;
}

void sub_94E88(int64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unsigned int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unsigned __int8 *v29;
  char **v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t ObjectType;
  void *v35;
  id v36;
  void *v37;
  char **v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  _BYTE v68[24];
  char v69[24];

  v11 = sub_94A98();
  v12 = v11;
  if (a2 == 2)
  {
    v13 = a1 % 1000000;
    if (__OFSUB__(a1, a1 % 1000000))
      goto LABEL_57;
    v14 = (a1 - a1 % 1000000) / 1000000 - (a1 - a1 % 1000000 > 999999);
    if (v14 < v11[2])
    {
      if (v14 < 0)
        goto LABEL_58;
      v15 = &v11[4 * v14];
      v17 = (void *)v15[4];
      v16 = v15[5];
      v18 = v15[6];
      v19 = *((unsigned __int8 *)v15 + 56);
      swift_unknownObjectRetain(v17);
      v20 = v12;
      v21 = v18;
      swift_bridgeObjectRelease(v20);
      goto LABEL_53;
    }
    goto LABEL_43;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindGlobalHeader);
  v24 = v23;
  if (!a4)
  {
    swift_bridgeObjectRelease(v23);
    v27 = v12[2];
    if (v27)
      goto LABEL_13;
    goto LABEL_43;
  }
  if (v22 == a3 && v23 == a4)
  {
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, v22, v23, 0);
    swift_bridgeObjectRelease(v24);
    if ((v26 & 1) == 0)
    {
      v27 = v12[2];
      if (v27)
      {
LABEL_13:
        v63 = a1;
        v61 = a5;
        v66 = (_QWORD *)(v5 + 32);
        swift_beginAccess(v5 + 32, v69, 0, 0);
        v28 = 0;
        v62 = v12;
        v29 = (unsigned __int8 *)(v12 + 7);
        v30 = &selRef_boundingRectWithSize_options_attributes_context_;
        while (1)
        {
          v17 = (void *)*((_QWORD *)v29 - 3);
          v16 = *((_QWORD *)v29 - 2);
          v21 = *((_QWORD *)v29 - 1);
          v19 = *v29;
          v31 = *v66;
          if (*(_QWORD *)(*v66 + 16))
          {
            swift_unknownObjectRetain_n(*((_QWORD *)v29 - 3), 2);
            swift_bridgeObjectRetain(v31);
            v32 = sub_139FB8(v17, v16, v21, v19);
            if ((v33 & 1) != 0)
            {
              v67 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v32);
              swift_unknownObjectRelease(v17);
              swift_bridgeObjectRelease(v31);
              goto LABEL_37;
            }
            swift_unknownObjectRelease(v17);
            swift_bridgeObjectRelease(v31);
          }
          else
          {
            swift_unknownObjectRetain(*((_QWORD *)v29 - 3));
          }
          ObjectType = swift_getObjectType(v17);
          v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
          v36 = objc_msgSend(v35, "dataSource");
          v64 = v35;
          v65 = v27;
          if (v36)
          {
            v37 = v36;
            if ((objc_msgSend(v36, "respondsToSelector:", v30[105]) & 1) != 0)
            {
              v38 = v30;
              v39 = v19;
              v67 = (unint64_t)objc_msgSend(v37, v38[105], v35);
            }
            else
            {
              v39 = v19;
              v67 = 1;
            }
            v40 = v21;
            swift_unknownObjectRelease(v37);
          }
          else
          {
            v39 = v19;
            v40 = v21;
            v67 = 1;
          }
          swift_beginAccess(v66, v68, 33, 0);
          swift_unknownObjectRetain(v17);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v66);
          v42 = (_QWORD *)*v66;
          *v66 = 0x8000000000000000;
          v43 = v16;
          v45 = sub_139FB8(v17, v16, v40, v39);
          v46 = v42[2];
          v47 = (v44 & 1) == 0;
          v48 = v46 + v47;
          if (__OFADD__(v46, v47))
            goto LABEL_55;
          v49 = v44;
          if (v42[3] >= v48)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_13F704();
            v21 = v40;
            v19 = v39;
          }
          else
          {
            sub_13AA60(v48, isUniquelyReferenced_nonNull_native);
            v21 = v40;
            v50 = v40;
            v19 = v39;
            v51 = sub_139FB8(v17, v43, v50, v39);
            if ((v49 & 1) != (v52 & 1))
              goto LABEL_61;
            v45 = v51;
          }
          v30 = &selRef_boundingRectWithSize_options_attributes_context_;
          if ((v49 & 1) != 0)
          {
            *(_QWORD *)(v42[7] + 8 * v45) = v67;
            v16 = v43;
          }
          else
          {
            v42[(v45 >> 6) + 8] |= 1 << v45;
            v53 = v42[6] + 32 * v45;
            *(_QWORD *)v53 = v17;
            *(_QWORD *)(v53 + 8) = v43;
            *(_QWORD *)(v53 + 16) = v21;
            *(_BYTE *)(v53 + 24) = v19;
            *(_QWORD *)(v42[7] + 8 * v45) = v67;
            v54 = v42[2];
            v55 = __OFADD__(v54, 1);
            v56 = v54 + 1;
            if (v55)
              goto LABEL_56;
            v16 = v43;
            v42[2] = v56;
            swift_unknownObjectRetain(v17);
          }
          v57 = *v66;
          *v66 = v42;
          swift_unknownObjectRelease(v17);
          swift_bridgeObjectRelease(v57);
          swift_endAccess(v68);

          v27 = v65;
LABEL_37:
          v13 = v63 - v28;
          if (v63 >= v28 && v13 < v67)
          {
            swift_bridgeObjectRelease(v62);
            if (__OFSUB__(v63, v28))
            {
              __break(1u);
LABEL_51:
              swift_bridgeObjectRelease(v62);
              v17 = 0;
              v16 = 0;
              v21 = 0;
              v19 = 0;
              v13 = 0;
            }
            a5 = v61;
            goto LABEL_53;
          }
          swift_unknownObjectRelease(v17);
          v55 = __OFADD__(v28, v67);
          v28 += v67;
          if (v55)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          v29 += 32;
          if (!--v27)
            goto LABEL_51;
        }
      }
LABEL_43:
      swift_bridgeObjectRelease(v12);
      v17 = 0;
      v16 = 0;
      v21 = 0;
      v19 = 0;
      v13 = 0;
LABEL_53:
      *a5 = v17;
      a5[1] = v16;
      a5[2] = v21;
      a5[3] = v19;
      a5[4] = v13;
      return;
    }
  }
  if (a1 < 0)
    goto LABEL_59;
  if (v12[2] > (unint64_t)a1)
  {
    v58 = &v12[4 * a1];
    v17 = (void *)v58[4];
    v16 = v58[5];
    v59 = v58[6];
    v19 = *((unsigned __int8 *)v58 + 56);
    swift_unknownObjectRetain(v17);
    v60 = v12;
    v21 = v59;
    swift_bridgeObjectRelease(v60);
    v13 = 0;
    goto LABEL_53;
  }
LABEL_60:
  __break(1u);
LABEL_61:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CompositeComponentItem);
  __break(1u);
}

uint64_t sub_953B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v16 = a8 & 1;
  v17 = IndexPath.count.getter(a1);
  if (v17 == 2)
  {
    v18 = IndexPath.section.getter(2);
  }
  else if (v17 <= 0)
  {
    v18 = NSNotFound.getter();
  }
  else
  {
    v18 = IndexPath.subscript.getter(0);
  }
  sub_95574(v18, a2, a3, a4, a5, a6, a7, v16);
  v20 = v19;
  v21 = IndexPath.count.getter(v19);
  if (v21 != 2)
  {
    if (v21 <= 0)
    {
      v22 = NSNotFound.getter();
      if (v20 != v22)
        goto LABEL_13;
    }
    else
    {
      v22 = IndexPath.subscript.getter(0);
      if (v20 != v22)
        goto LABEL_13;
    }
LABEL_11:
    v23 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a9, a1, v23);
  }
  v22 = IndexPath.section.getter(2);
  if (v20 == v22)
    goto LABEL_11;
LABEL_13:
  v25 = IndexPath.count.getter(v22);
  if (v25 < 2)
    return IndexPath.init(index:)(v20);
  v26 = IndexPath.count.getter(v25);
  if (v26 == 2)
  {
    v27 = IndexPath.item.getter(2);
  }
  else if (v26 <= 2)
  {
    v27 = NSNotFound.getter();
  }
  else
  {
    v27 = IndexPath.subscript.getter(1);
  }
  return IndexPath.init(item:section:)(v27, v20);
}

void sub_95574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  char v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  _QWORD *v25;

  v12 = a8 & 1;
  if (a2 != 2)
    goto LABEL_10;
  v13 = sub_94A98();
  a7 = sub_AD9EC((uint64_t)a5, a6, a7, v12, (uint64_t)v13);
  v12 = v14;
  swift_bridgeObjectRelease(v13);
  if ((v12 & 1) != 0)
    v15 = 0;
  else
    v15 = a7;
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_24;
  }
  if ((unsigned __int128)(v17 * (__int128)1000000) >> 64 != (1000000 * v17) >> 63)
  {
LABEL_24:
    __break(1u);
    return;
  }
  if (!__OFADD__(a1, 1000000 * v17))
    return;
  __break(1u);
LABEL_10:
  v18 = a4;
  v19 = a3;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindGlobalHeader);
  v22 = v21;
  if (v18)
  {
    if (v20 == v19 && v21 == v18)
      goto LABEL_21;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v20, v21, 0);
    swift_bridgeObjectRelease(v22);
    if ((v24 & 1) != 0)
      goto LABEL_22;
  }
  else
  {
    swift_bridgeObjectRelease(v21);
  }
  if (__OFADD__(a1, sub_958B0(a5, a6, a7, v12)))
  {
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease(v22);
LABEL_22:
    v25 = sub_94A98();
    sub_AD9EC((uint64_t)a5, a6, a7, v12, (uint64_t)v25);
    swift_bridgeObjectRelease(v25);
  }
}

id sub_956F4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  uint64_t ObjectType;
  void *v15;
  id v16;
  void *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[24];
  _BYTE v23[24];

  v8 = a4 & 1;
  v9 = (_QWORD *)(v4 + 32);
  swift_beginAccess(v4 + 32, v23, 0, 0);
  v10 = *(_QWORD *)(v4 + 32);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v10);
    v11 = sub_139FB8(a1, a2, a3, v8);
    if ((v12 & 1) != 0)
    {
      v13 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      swift_unknownObjectRelease(a1);
      swift_bridgeObjectRelease(v10);
      return v13;
    }
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease(v10);
  }
  ObjectType = swift_getObjectType(a1);
  v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  v16 = objc_msgSend(v15, "dataSource");
  if (v16)
  {
    v17 = v16;
    if ((objc_msgSend(v16, "respondsToSelector:", "numberOfSectionsInCollectionView:") & 1) != 0)
      v13 = objc_msgSend(v17, "numberOfSectionsInCollectionView:", v15);
    else
      v13 = &dword_0 + 1;
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v13 = &dword_0 + 1;
  }
  swift_beginAccess(v9, v22, 33, 0);
  swift_unknownObjectRetain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
  v21 = *v9;
  *v9 = 0x8000000000000000;
  sub_13D644((uint64_t)v13, a1, a2, a3, v8, isUniquelyReferenced_nonNull_native);
  v19 = *v9;
  *v9 = v21;
  swift_unknownObjectRelease(a1);
  swift_bridgeObjectRelease(v19);
  swift_endAccess(v22);

  return v13;
}

uint64_t sub_958B0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  double v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char v22;
  uint64_t ObjectType;
  void *v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  int v57;
  void *v58;
  void *v59;
  id v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE v66[24];
  _BYTE v67[32];

  v5 = v4;
  v57 = a4 & 1;
  v9 = (_QWORD *)(v4 + 40);
  swift_beginAccess(v4 + 40, v67, 0, 0);
  v10 = *(_QWORD *)(v4 + 40);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v10);
    v11 = sub_139FB8(a1, a2, a3, v57);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      swift_unknownObjectRelease(a1);
      swift_bridgeObjectRelease(v10);
      return v13;
    }
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease(v10);
  }
  v14 = sub_94A98();
  v15 = v14;
  v16 = v14[2];
  if (!v16)
  {
LABEL_39:
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  v53 = a2;
  v54 = v9;
  v17 = (_QWORD *)(v5 + 32);
  swift_beginAccess(v5 + 32, v66, 0, 0);
  v13 = 0;
  v55 = a3;
  v56 = v15;
  v18 = *(double *)&a3;
  v19 = (char *)(v15 + 7);
  v58 = a1;
  while (1)
  {
    v21 = (void *)*((_QWORD *)v19 - 3);
    v20 = *((_QWORD *)v19 - 2);
    v62 = *((_QWORD *)v19 - 1);
    v22 = *v19;
    ObjectType = swift_getObjectType(v21);
    v24 = v21;
    if (v21 != a1)
      goto LABEL_13;
    if (v57)
    {
      v24 = a1;
      if ((v22 & 1) != 0)
        goto LABEL_41;
LABEL_13:
      v25 = swift_unknownObjectRetain(v24);
      goto LABEL_14;
    }
    v24 = a1;
    if ((v22 & 1) != 0)
      goto LABEL_13;
    swift_unknownObjectRetain(a1);
    if ((static CGFloat.==~ infix(_:_:)(v18, *(double *)&v62) & 1) != 0)
    {
      swift_unknownObjectRelease(a1);
LABEL_41:
      swift_bridgeObjectRelease(v56);
      swift_beginAccess(v54, v65, 33, 0);
      swift_unknownObjectRetain(a1);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v54);
      v64 = *v54;
      *v54 = 0x8000000000000000;
      sub_13D644(v13, a1, v53, v55, v57, isUniquelyReferenced_nonNull_native);
      v52 = *v54;
      *v54 = v64;
      swift_unknownObjectRelease(a1);
      swift_bridgeObjectRelease(v52);
      swift_endAccess(v65);
      return v13;
    }
LABEL_14:
    v26 = *v17;
    if (*(_QWORD *)(*v17 + 16))
    {
      swift_unknownObjectRetain(v21);
      swift_bridgeObjectRetain(v26);
      v27 = sub_139FB8(v21, v20, v62, v22);
      if ((v28 & 1) != 0)
      {
        v29 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v27);
        swift_unknownObjectRelease_n(v21, 2);
        swift_bridgeObjectRelease(v26);
        goto LABEL_36;
      }
      swift_unknownObjectRelease(v21);
      v25 = swift_bridgeObjectRelease(v26);
    }
    v61 = v22;
    v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 8))(ObjectType, v20, v25);
    v31 = objc_msgSend(v30, "dataSource");
    v59 = v30;
    if (v31)
    {
      v32 = v31;
      if ((objc_msgSend(v31, "respondsToSelector:", "numberOfSectionsInCollectionView:") & 1) != 0)
        v60 = objc_msgSend(v32, "numberOfSectionsInCollectionView:", v30);
      else
        v60 = &dword_0 + 1;
      swift_unknownObjectRelease(v32);
    }
    else
    {
      v60 = &dword_0 + 1;
    }
    swift_beginAccess(v17, v65, 33, 0);
    swift_unknownObjectRetain(v21);
    v33 = swift_isUniquelyReferenced_nonNull_native(*v17);
    v34 = *v17;
    v63 = (_QWORD *)*v17;
    v35 = v17;
    *v17 = 0x8000000000000000;
    v37 = sub_139FB8(v21, v20, v62, v61);
    v38 = *(_QWORD *)(v34 + 16);
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
      goto LABEL_43;
    v41 = v36;
    if (*(_QWORD *)(v34 + 24) >= v40)
    {
      if ((v33 & 1) != 0)
      {
        v44 = v63;
        if ((v36 & 1) == 0)
          goto LABEL_33;
      }
      else
      {
        sub_13F704();
        v44 = v63;
        if ((v41 & 1) == 0)
          goto LABEL_33;
      }
    }
    else
    {
      sub_13AA60(v40, v33);
      v42 = sub_139FB8(v21, v20, v62, v61);
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_45;
      v37 = v42;
      v44 = v63;
      if ((v41 & 1) == 0)
      {
LABEL_33:
        v44[(v37 >> 6) + 8] |= 1 << v37;
        v45 = v44[6] + 32 * v37;
        *(_QWORD *)v45 = v21;
        *(_QWORD *)(v45 + 8) = v20;
        *(_QWORD *)(v45 + 16) = v62;
        *(_BYTE *)(v45 + 24) = v61;
        v29 = v60;
        *(_QWORD *)(v44[7] + 8 * v37) = v60;
        v46 = v44[2];
        v47 = __OFADD__(v46, 1);
        v48 = v46 + 1;
        if (v47)
          goto LABEL_44;
        v44[2] = v48;
        swift_unknownObjectRetain(v21);
        goto LABEL_35;
      }
    }
    v29 = v60;
    *(_QWORD *)(v44[7] + 8 * v37) = v60;
LABEL_35:
    v17 = v35;
    v49 = *v35;
    *v35 = v44;
    swift_unknownObjectRelease(v21);
    swift_bridgeObjectRelease(v49);
    swift_endAccess(v65);
    swift_unknownObjectRelease(v21);

    a1 = v58;
LABEL_36:
    v47 = __OFADD__(v13, v29);
    v13 += (uint64_t)v29;
    if (v47)
      break;
    v19 += 32;
    if (!--v16)
    {
      v14 = v56;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CompositeComponentItem);
  __break(1u);
  return result;
}

uint64_t sub_95D6C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for CompositeCollectionViewCountData()
{
  return objc_opt_self(_TtC12NowPlayingUI32CompositeCollectionViewCountData);
}

_QWORD *sub_95DD8(uint64_t a1)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  sub_A9A20(0, v2, 0);
  if (v2)
  {
    v3 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    do
    {
      v4 = *v3;
      v6 = _swiftEmptyArrayStorage[2];
      v5 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(*v3);
      if (v6 >= v5 >> 1)
        sub_A9A20(v5 > 1, v6 + 1, 1);
      _swiftEmptyArrayStorage[2] = v6 + 1;
      _swiftEmptyArrayStorage[v6 + 4] = v4;
      ++v3;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_95EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_95F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_95F4C()
{
  _BYTE *v0;
  objc_class *ObjectType;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  NSString v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v0[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout_cellSwipeActionEnabled] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout_orientationWhenLastInvalidatedTableLayout] = 0;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout__lastBackgroundDecorationRect];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  v9.receiver = v0;
  v9.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v9, "init");
  v4 = type metadata accessor for NowPlayingCollectionViewSecondaryBackground();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4);
  v6 = v3;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "registerClass:forDecorationViewOfKind:", ObjCClassFromMetadata, v7);

  return v6;
}

unint64_t sub_960E4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  char *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  objc_super v35;
  unint64_t v36;
  _BYTE v37[40];
  double v38;
  double v39;
  double v40;
  double v41;
  char v42;
  CGRect v43;
  CGRect v44;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35.receiver = v4;
  v35.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v35, "layoutAttributesForElementsInRect:", a1, a2, a3, a4);
  if (v14)
  {
    v15 = v14;
    v16 = sub_98060();
    v17 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  }
  else
  {
    v17 = _swiftEmptyArrayStorage;
  }
  v36 = (unint64_t)v17;
  sub_96AC4((uint64_t)v37);
  v18 = sub_97EB4((uint64_t)v37, (uint64_t)&v38);
  if ((v42 & 1) == 0)
  {
    v23 = v38;
    v24 = v39;
    v25 = v40;
    v26 = v41;
    v27 = &v4[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout__lastBackgroundDecorationRect];
    v21.n128_u64[0] = 0;
    v22.n128_u64[0] = 0;
    v19.n128_u64[0] = 0;
    v20.n128_u64[0] = 0;
    if ((v4[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout__lastBackgroundDecorationRect + 32] & 1) == 0)
    {
      v21.n128_u64[0] = *((_QWORD *)v27 + 2);
      v22.n128_u64[0] = *((_QWORD *)v27 + 3);
      v19.n128_u64[0] = *(_QWORD *)v27;
      v20.n128_u64[0] = *((_QWORD *)v27 + 1);
    }
    if ((static CGRect.==~ infix(_:_:)(v18, v19, v20, v21, v22, v38, v39, v40, v41) & 1) == 0)
    {
      *(CGFloat *)v27 = v23;
      *((CGFloat *)v27 + 1) = v24;
      *((CGFloat *)v27 + 2) = v25;
      *((CGFloat *)v27 + 3) = v26;
      v27[32] = 0;
      objc_msgSend(v4, "invalidateLayout");
    }
    v43.origin.x = v23;
    v43.origin.y = v24;
    v43.size.width = v25;
    v43.size.height = v26;
    v44.origin.x = a1;
    v44.origin.y = a2;
    v44.size.width = a3;
    v44.size.height = a4;
    if (CGRectIntersectsRect(v43, v44))
    {
      IndexPath.init(item:section:)(0, 0);
      v28 = sub_96330(0xD00000000000001CLL, 0x8000000000188250);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (v28)
      {
        v29 = v28;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v31 = *(_QWORD *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
        v30 = *(_QWORD *)((char *)&dword_18 + (v36 & 0xFFFFFFFFFFFFFF8));
        if (v31 >= v30 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
        v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
        specialized Array._endMutation()(v32);

      }
    }
  }
  return v36;
}

char *sub_96330(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  NSString v7;
  Class isa;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  double v22;
  double v23;
  double v24;
  double v25;
  char *v26;
  uint64_t v27;
  NSString v28;
  Class v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  objc_super v34;
  _BYTE v35[40];
  double v36;
  double v37;
  double v38;
  double v39;
  char v40;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v7 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v34.receiver = v2;
  v34.super_class = ObjectType;
  v9 = (char *)objc_msgSendSuper2(&v34, "layoutAttributesForDecorationViewOfKind:atIndexPath:", v7, isa);

  v10 = objc_msgSend(v3, "collectionView");
  if (v10)
  {
    v11 = v10;
    if (v9)
    {
LABEL_3:

      return v9;
    }
    if (a1 == 0xD00000000000001CLL && a2 == 0x8000000000188250
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD00000000000001CLL, 0x8000000000188250, 0) & 1) != 0)
    {
      v12 = objc_msgSend(v11, "delegate");
      if (v12)
      {
        v13 = v12;
        v14 = swift_getObjectType(v12);
        if (swift_conformsToProtocol2(v14, &protocol descriptor for UICollectionViewDelegateNowPlayingLayout))
          v15 = v13;
        else
          v15 = 0;
        if (v15)
        {
          sub_96AC4((uint64_t)v35);
          v16 = sub_97EB4((uint64_t)v35, (uint64_t)&v36);
          if ((v40 & 1) == 0)
          {
            v22 = v36;
            v23 = v37;
            v24 = v38;
            v25 = v39;
            v26 = &v3[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout__lastBackgroundDecorationRect];
            v19.n128_u64[0] = 0;
            v20.n128_u64[0] = 0;
            v17.n128_u64[0] = 0;
            v18.n128_u64[0] = 0;
            if ((v3[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout__lastBackgroundDecorationRect + 32] & 1) == 0)
            {
              v19.n128_u64[0] = *((_QWORD *)v26 + 2);
              v20.n128_u64[0] = *((_QWORD *)v26 + 3);
              v17.n128_u64[0] = *(_QWORD *)v26;
              v18.n128_u64[0] = *((_QWORD *)v26 + 1);
            }
            if ((static CGRect.==~ infix(_:_:)(v16, v17, v18, v19, v20, v36, v37, v38, v39) & 1) == 0)
            {
              *(double *)v26 = v22;
              *((double *)v26 + 1) = v23;
              *((double *)v26 + 2) = v24;
              *((double *)v26 + 3) = v25;
              v26[32] = 0;
              objc_msgSend(v3, "invalidateLayout");
            }
            v27 = type metadata accessor for NowPlayingSecondaryBackgroundAttributes();
            swift_bridgeObjectRetain(a2);
            v28 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(a2);
            v29 = IndexPath._bridgeToObjectiveC()().super.isa;
            v30 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(v27), "layoutAttributesForDecorationViewOfKind:withIndexPath:", v28, v29);

            objc_msgSend(v30, "setFrame:", v22, v23, v24, v25);
            if (qword_1F9618 != -1)
              swift_once(&qword_1F9618, sub_FE4C8);
            v31 = (void *)qword_210390;
            v32 = *(void **)&v30[OBJC_IVAR____TtC12NowPlayingUI39NowPlayingSecondaryBackgroundAttributes_backgroundColor];
            *(_QWORD *)&v30[OBJC_IVAR____TtC12NowPlayingUI39NowPlayingSecondaryBackgroundAttributes_backgroundColor] = qword_210390;
            v33 = v31;

            v9 = v30;
            objc_msgSend(v9, "setZIndex:", -100);

            swift_unknownObjectRelease(v13);
            goto LABEL_3;
          }
        }
        swift_unknownObjectRelease(v13);
      }
    }

    return 0;
  }
  return v9;
}

id sub_967EC(double a1, double a2)
{
  void *v2;
  objc_class *ObjectType;
  Class isa;
  id v7;
  NSString *v8;
  Class v9;
  id v10;
  double MinY;
  double MaxY;
  objc_super v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14.receiver = v2;
  v14.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v14, "layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:", isa, a1, a2);

  v8 = UICollectionElementKindSectionHeader;
  v9 = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v2, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v8, v9);

  if (v10)
  {
    objc_msgSend(v7, "frame");
    MinY = CGRectGetMinY(v15);
    objc_msgSend(v10, "frame");
    MaxY = CGRectGetMaxY(v16);
    if (MinY < MaxY || (static CGFloat.==~ infix(_:_:)(MinY, MaxY) & 1) != 0)
    {
      objc_msgSend(v10, "frame");
      CGRectGetMaxY(v17);
      objc_msgSend(v7, "frame");
      objc_msgSend(v7, "setFrame:");
    }

  }
  return v7;
}

void sub_96AC4(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  CGFloat MaxY;
  void *v13;
  char *v14;
  char *v15;
  uint64_t ObjectType;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  Class isa;
  id v42;
  id v43;
  CGFloat Width;
  double v45;
  double v46;
  double v47;
  double Height;
  double v49;
  char v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _QWORD *v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v2, "collectionView");
  MaxY = 0.0;
  if (!v11)
    goto LABEL_41;
  v13 = v11;
  v14 = (char *)objc_msgSend(v11, "delegate");
  if (!v14)
    goto LABEL_30;
  v15 = v14;
  v58 = v6;
  ObjectType = swift_getObjectType(v14);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for UICollectionViewDelegateNowPlayingLayout))
    v17 = v15;
  else
    v17 = 0;
  if (!v17)
  {
    swift_unknownObjectRelease(v15);
LABEL_30:

    goto LABEL_41;
  }
  v52 = v2;
  v53 = v10;
  v54 = v8;
  v55 = v7;
  v56 = v13;
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections];
  v19 = *(_QWORD *)(v18 + 16);
  v20 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
  v59 = v15;
  swift_unknownObjectRetain(v15);
  swift_bridgeObjectRetain(v18);
  v57 = v18;
  if (!v19)
  {
    v23 = _swiftEmptyArrayStorage;
    goto LABEL_32;
  }
  v21 = 0;
  v22 = v18 + 32;
  v23 = _swiftEmptyArrayStorage;
  do
  {
    if (v21 <= v19)
      v24 = v19;
    else
      v24 = v21;
    while (1)
    {
      if (v21 == v24)
        goto LABEL_45;
      v25 = *(unsigned __int8 *)(v22 + v21++);
      v26 = *(_QWORD *)&v17[v20];
      if (!v26)
        break;
      v27 = *(_QWORD *)(v26 + 16);
      if (!v27)
        goto LABEL_12;
      if (*(unsigned __int8 *)(v26 + 32) == v25)
        break;
      if (v27 != 1)
      {
        v28 = 33;
        while (1)
        {
          v29 = v28 - 31;
          if (__OFADD__(v28 - 32, 1))
            break;
          if (*(unsigned __int8 *)(v26 + v28) == v25)
            goto LABEL_23;
          ++v28;
          if (v29 == v27)
            goto LABEL_12;
        }
        __break(1u);
LABEL_45:
        __break(1u);
        return;
      }
LABEL_12:
      if (v21 == v19)
        goto LABEL_32;
    }
LABEL_23:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
    v60 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_A9B08(0, v23[2] + 1, 1);
      v23 = v60;
    }
    v32 = v23[2];
    v31 = v23[3];
    if (v32 >= v31 >> 1)
    {
      sub_A9B08(v31 > 1, v32 + 1, 1);
      v23 = v60;
    }
    v23[2] = v32 + 1;
    *((_BYTE *)v23 + v32 + 32) = v25;
  }
  while (v21 != v19);
LABEL_32:
  swift_bridgeObjectRelease(v57);
  swift_unknownObjectRelease(v59);
  v33 = sub_ADAA0(0, (uint64_t)v23);
  v35 = v34;
  v36 = swift_release(v23);
  if ((v35 & 1) != 0)
  {
    v37 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v54 + 56))(v58, 1, 1, v55, v36);
    goto LABEL_40;
  }
  v37 = (uint64_t)v58;
  IndexPath.init(item:section:)(0, v33);
  v39 = v54;
  v38 = v55;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v37, 0, 1, v55);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
LABEL_40:
    swift_unknownObjectRelease(v59);

    sub_C078(v37);
    goto LABEL_41;
  }
  v40 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v53, v37, v38);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v42 = objc_msgSend(v52, "layoutAttributesForItemAtIndexPath:", isa);

  if (v42)
  {
    objc_msgSend(v42, "frame");
    MaxY = CGRectGetMaxY(v61);
    v43 = v56;
    objc_msgSend(v56, "bounds");
    Width = CGRectGetWidth(v62);
    objc_msgSend(v43, "contentSize");
    v46 = v45;
    objc_msgSend(v42, "frame");
    v47 = v46 - CGRectGetMaxY(v63);
    objc_msgSend(v43, "bounds");
    Height = CGRectGetHeight(v64);
    swift_unknownObjectRelease(v59);

    if (v47 + Height < 0.0)
      v49 = 0.0;
    else
      v49 = v47 + Height;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
    v50 = 0;
    goto LABEL_42;
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
  swift_unknownObjectRelease(v59);

LABEL_41:
  v50 = 1;
  Width = 0.0;
  v49 = 0.0;
LABEL_42:
  *(_QWORD *)a1 = 0;
  *(CGFloat *)(a1 + 8) = MaxY;
  *(CGFloat *)(a1 + 16) = Width;
  *(double *)(a1 + 24) = v49;
  *(_BYTE *)(a1 + 32) = v50;
}

id sub_96F2C(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  objc_super v22;

  v22.receiver = v4;
  v22.super_class = (Class)swift_getObjectType(v4);
  v9 = objc_msgSendSuper2(&v22, "invalidationContextForBoundsChange:", a1, a2, a3, a4);
  v10 = objc_msgSend(v4, "collectionView");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "window");
    if (!v12)
      goto LABEL_7;
    v13 = v12;
    v14 = objc_msgSend(v12, "windowScene");

    if (!v14)
      goto LABEL_7;
    v15 = objc_msgSend(v14, "interfaceOrientation");

    v16 = OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout_orientationWhenLastInvalidatedTableLayout;
    if (v15 != *(id *)&v4[OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout_orientationWhenLastInvalidatedTableLayout]
      && (v17 = objc_opt_self(UICollectionViewTableLayoutInvalidationContext),
          (v18 = swift_dynamicCastObjCClass(v9, v17)) != 0))
    {
      v19 = (void *)v18;
      v20 = v9;
      objc_msgSend(v19, "setInvalidateTableLayoutDelegateMetrics:", 1);

      *(_QWORD *)&v4[v16] = v15;
    }
    else
    {
LABEL_7:

    }
  }
  return v9;
}

uint64_t type metadata accessor for NowPlayingCollectionViewLayout()
{
  return objc_opt_self(_TtC12NowPlayingUI30NowPlayingCollectionViewLayout);
}

uint64_t type metadata accessor for NowPlayingControlsHeader()
{
  return objc_opt_self(_TtC12NowPlayingUI24NowPlayingControlsHeader);
}

void sub_972A4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  double MaxY;
  objc_super v27;
  CGRect v28;
  CGRect v29;

  v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v27, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_lyricsView];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v3, "setFrame:");

    if (v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_isBottomHairlineVisible] == 1)
    {
      objc_msgSend(v1, "bounds");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;
      objc_msgSend(v1, "music_inheritedLayoutInsets");
      v13 = v12;
      v15 = v14;
      v16 = objc_msgSend(v1, "traitCollection");
      v17 = UITraitCollection.safeDisplayScale.getter();

      v18 = OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_bottomHairlineView;
      v19 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_bottomHairlineView];
      if (v19)
      {
        v20 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_bottomHairlineView];
      }
      else
      {
        v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        v23 = qword_1F9590;
        v20 = v22;
        if (v23 != -1)
          swift_once(&qword_1F9590, sub_FDE64);
        objc_msgSend(v20, "setBackgroundColor:", qword_210318);
        objc_msgSend(v1, "addSubview:", v20);
        v24 = *(void **)&v1[v18];
        *(_QWORD *)&v1[v18] = v20;

        v19 = 0;
      }
      v25 = v19;
      v28.origin.x = v5;
      v28.origin.y = v7;
      v28.size.width = v9;
      v28.size.height = v11;
      MaxY = CGRectGetMaxY(v28);
      v29.origin.x = v13;
      v29.origin.y = v7;
      v29.size.width = v9 - (v13 + v15);
      v29.size.height = 1.0 / v17;
      objc_msgSend(v20, "setFrame:", v13, MaxY - CGRectGetHeight(v29), v29.size.width, v29.size.height);

    }
    else
    {
      v21 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_bottomHairlineView];
      if (v21)
        objc_msgSend(v21, "removeFromSuperview");
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_975B4(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_isBottomHairlineVisible] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_bottomHairlineView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_lyricsView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI20NowPlayingLyricsCell_tableViewCell] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

uint64_t type metadata accessor for NowPlayingLyricsCell()
{
  return objc_opt_self(_TtC12NowPlayingUI20NowPlayingLyricsCell);
}

uint64_t type metadata accessor for NowPlayingSecondaryBackgroundAttributes()
{
  return objc_opt_self(_TtC12NowPlayingUI39NowPlayingSecondaryBackgroundAttributes);
}

uint64_t type metadata accessor for NowPlayingCollectionViewSecondaryBackground()
{
  return objc_opt_self(_TtC12NowPlayingUI43NowPlayingCollectionViewSecondaryBackground);
}

id sub_978EC()
{
  _BYTE *v0;
  id v1;
  Class isa;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_hasInteractiveMovement] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled] = 1;
  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingCollectionViewLayout()), "init");
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "_setFloatingElementKinds:", isa);

  objc_msgSend(v1, "setSeparatorStyle:", 0);
  *((_BYTE *)v1 + OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout_cellSwipeActionEnabled) = 1;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for NowPlayingCollectionView();
  v3 = objc_msgSendSuper2(&v7, "initWithFrame:collectionViewLayout:", v1, 0.0, 0.0, 0.0, 0.0);

  v4 = v3;
  v5 = objc_msgSend(v4, "layer");
  objc_msgSend(v5, "setAllowsGroupOpacity:", 0);

  return v4;
}

id sub_97AD8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  unsigned __int8 v2;
  id v3;
  Class isa;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled;
  objc_msgSend(v0, "setScrollEnabled:", v0[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_scrollAndSwipeInteractionsEnabled]);
  v2 = v0[v1];
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingCollectionViewLayout()), "init");
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "_setFloatingElementKinds:", isa);

  objc_msgSend(v3, "setSeparatorStyle:", 0);
  *((_BYTE *)v3 + OBJC_IVAR____TtC12NowPlayingUI30NowPlayingCollectionViewLayout_cellSwipeActionEnabled) = v2;
  objc_msgSend(v0, "setCollectionViewLayout:", v3);

  objc_msgSend(v0, "setShowsVerticalScrollIndicator:", v0[v1]);
  return objc_msgSend(v0, "scrollToTopAnimated:", 0);
}

id sub_97CBC()
{
  return sub_97D14((SEL *)&selRef_endInteractiveMovement);
}

id sub_97D08()
{
  return sub_97D14((SEL *)&selRef_cancelInteractiveMovement);
}

id sub_97D14(SEL *a1)
{
  char *v1;
  char *v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  objc_class *v12;
  char v14[24];
  objc_super v15;

  v3 = v1;
  v4 = v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_hasInteractiveMovement];
  v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_hasInteractiveMovement] = 0;
  if ((v4 & 1) != 0)
  {
    v5 = (uint64_t *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers];
    swift_beginAccess(&v3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingCollectionView_interactiveMovementCompletionHandlers], v14, 1, 0);
    v6 = *v5;
    *v5 = (uint64_t)_swiftEmptyArrayStorage;
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v8 = (uint64_t *)(v6 + 40);
      do
      {
        v10 = (void (*)(uint64_t))*(v8 - 1);
        v9 = *v8;
        v11 = swift_retain();
        v10(v11);
        swift_release(v9);
        v8 += 2;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease(v6);
  }
  v12 = (objc_class *)type metadata accessor for NowPlayingCollectionView();
  v15.receiver = v3;
  v15.super_class = v12;
  return objc_msgSendSuper2(&v15, *a1);
}

id sub_97E54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingCollectionView()
{
  return objc_opt_self(_TtC12NowPlayingUI24NowPlayingCollectionView);
}

uint64_t sub_97EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_97EFC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v5 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections;
    v6 = result + 32;
    do
    {
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      while (1)
      {
        if (v4 == v7)
          goto LABEL_24;
        v8 = *(unsigned __int8 *)(v6 + v4++);
        v9 = *(_QWORD *)(a2 + v5);
        if (!v9)
          break;
        v10 = *(_QWORD *)(v9 + 16);
        if (!v10)
          goto LABEL_6;
        if (*(unsigned __int8 *)(v9 + 32) == v8)
          break;
        if (v10 != 1)
        {
          v11 = 33;
          while (1)
          {
            v12 = v11 - 31;
            if (__OFADD__(v11 - 32, 1))
              break;
            if (*(unsigned __int8 *)(v9 + v11) == v8)
              goto LABEL_17;
            ++v11;
            if (v12 == v10)
              goto LABEL_6;
          }
          __break(1u);
LABEL_24:
          __break(1u);
          return result;
        }
LABEL_6:
        if (v4 == v2)
          return (uint64_t)_swiftEmptyArrayStorage;
      }
LABEL_17:
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_A9B08(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1)
        result = sub_A9B08(v13 > 1, v14 + 1, 1);
      _swiftEmptyArrayStorage[2] = v14 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage[4] + v14) = v8;
    }
    while (v4 != v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

unint64_t sub_98060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEAC0;
  if (!qword_1FEAC0)
  {
    v1 = objc_opt_self(UICollectionViewLayoutAttributes);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FEAC0);
  }
  return result;
}

void sub_9809C(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v2 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingControlsHeader_controlsView;
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingControlsHeader_controlsView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingControlsHeader_controlsView] = a1;
  v4 = a1;

  v5 = *(void **)&v1[v2];
  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = objc_msgSend(v5, "layer");
  objc_msgSend(v6, "setAllowsGroupOpacity:", 0);

  v7 = *(void **)&v1[v2];
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setAllowsGroupBlending:", 0);

  if (*(_QWORD *)&v1[v2])
  {
    objc_msgSend(v1, "addSubview:");
    objc_msgSend(v1, "setNeedsLayout");
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_98168()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16F858);
  v2 = swift_getKeyPath(&unk_16F880);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_981D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16F810);
  v4 = swift_getKeyPath(&unk_16F838);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_9823C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_16F7C8);
  v2 = swift_getKeyPath(&unk_16F7F0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id sub_982AC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  objc_class *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  _QWORD v32[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  __chkstk_darwin(v1);
  v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEB28);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF98);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v0[OBJC_IVAR____TtC12NowPlayingUI11ShazamState__songTitle];
  v32[0] = 0;
  v32[1] = 0;
  v17 = v0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCF88);
  Published.init(initialValue:)(v32, v18);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v19 = &v17[OBJC_IVAR____TtC12NowPlayingUI11ShazamState__musicURL];
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 1, 1, v20);
  sub_987A4((uint64_t)v11, (uint64_t)v8);
  Published.init(initialValue:)(v8, v6);
  sub_987EC((uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v19, v5, v27);
  v21 = &v17[OBJC_IVAR____TtC12NowPlayingUI11ShazamState__isShazamOn];
  LOBYTE(v32[0]) = 0;
  v22 = v28;
  Published.init(initialValue:)(v32, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v21, v22, v30);

  v23 = (objc_class *)type metadata accessor for ShazamState(0);
  v31.receiver = v17;
  v31.super_class = v23;
  return objc_msgSendSuper2(&v31, "init");
}

id sub_98528()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShazamState(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_985F8()
{
  return type metadata accessor for ShazamState(0);
}

uint64_t type metadata accessor for ShazamState(uint64_t a1)
{
  uint64_t result;

  result = qword_1FEB10;
  if (!qword_1FEB10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShazamState);
  return result;
}

void sub_9863C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_2D488(319, (unint64_t *)&qword_1FD000, &qword_1FCF88);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_2D488(319, &qword_1FEB20, (uint64_t *)&unk_1FB990);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_986FC();
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 3, v8, a1 + 80);
      }
    }
  }
}

void sub_986FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2013A0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2013A0);
  }
}

uint64_t sub_98750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for ShazamState(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_987A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_987EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id NowPlayingTabController_iOS.init(asPartOf:)(uint64_t a1)
{
  id v2;

  v2 = sub_9BCB8(a1);
  swift_release(a1);
  return v2;
}

void NowPlayingTabController_iOS.presentNowPlaying(animated:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  void *v4;
  id v7;

  v4 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction);
  if (v4)
  {
    v7 = v4;
    sub_141DEC(a2, a3);

  }
  else
  {
    __break(1u);
  }
}

void NowPlayingTabController_iOS.dismissNowPlaying(animated:completion:)(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  char *v4;
  void *v7;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  char *v14;
  id v15;
  char *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v4 = *(char **)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction);
  if (v4)
  {
    v7 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_presentedViewController];
    if (v7)
    {
      if (a2)
      {
        aBlock[4] = a2;
        v18 = a3;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_F528;
        aBlock[3] = &block_descriptor_15;
        v9 = _Block_copy(aBlock);
        v10 = v18;
        v11 = v4;
        v12 = v7;
        sub_2BE00((uint64_t)a2, a3);
        *(_QWORD *)&v13 = swift_release(v10).n128_u64[0];
      }
      else
      {
        v14 = v4;
        v15 = v7;
        v9 = 0;
      }
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", a1 & 1, v9, v13);
      _Block_release(v9);

    }
    else if (a2)
    {
      v16 = v4;
      a2();

    }
  }
  else
  {
    __break(1u);
  }
}

id NowPlayingTabController_iOS.tearDown()()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction);
  if (result)
    return result;
  __break(1u);
  return result;
}

void NowPlayingTabController_iOS.setUp(interaction:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;

  v2 = v1;
  v4 = type metadata accessor for PalettePresentationInteraction();
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = v5;
    swift_unknownObjectRetain(a1);
    v7 = sub_14191C();
    v8 = (char *)NowPlayingTabController_iOS.miniPlayerViewController.getter();
    v9 = v8;
    if ((v7 & 1) != 0)
    {
      v10 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView;
      v11 = *(void **)&v8[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
      if (v11)
      {
        objc_msgSend(v11, "removeFromSuperview");
        v12 = *(id *)&v9[v10];
      }
      else
      {
        v12 = 0;
      }
      *(_QWORD *)&v9[v10] = 0;

    }
    else
    {
      sub_DD960();

      v13 = (char *)NowPlayingTabController_iOS.paletteView.getter();
      v12 = *(id *)&v13[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];

      objc_msgSend(v12, "setAlpha:", 1.0);
    }

    v14 = (char *)NowPlayingTabController_iOS.paletteView.getter();
    v15 = *(id *)&v14[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];

    v16 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction;
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction))
    {
      objc_msgSend(v15, "removeInteraction:");

      v17 = v6 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate;
      *(_QWORD *)(v17 + 8) = &off_1CD238;
      swift_unknownObjectWeakAssign(v17, v2);
      v18 = v6 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_delegate;
      *(_QWORD *)(v18 + 8) = &off_1CD238;
      swift_unknownObjectWeakAssign(v18, v2);
      v19 = (char *)NowPlayingTabController_iOS.paletteView.getter();
      v20 = *(id *)&v19[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];

      objc_msgSend(v20, "addInteraction:", v6);
      v21 = *(void **)(v2 + v16);
      *(_QWORD *)(v2 + v16) = v6;

    }
    else
    {
      __break(1u);
    }
  }
}

void NowPlayingTabController_iOS.paletteVisible.setter(char a1)
{
  _BYTE *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE *v8;
  double v9;
  id v10;
  void *v11;
  _QWORD v12[5];
  uint64_t v13;

  v2 = v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteVisible];
  v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteVisible] = a1;
  if (v2 != (a1 & 1))
  {
    v3 = objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_1CD310, 24, 7);
    *(_QWORD *)(v4 + 16) = v1;
    v5 = swift_allocObject(&unk_1CD338, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_9CA44;
    *(_QWORD *)(v5 + 24) = v4;
    v12[4] = sub_ECE4;
    v13 = v5;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_F318;
    v12[3] = &block_descriptor_13_3;
    v6 = _Block_copy(v12);
    v7 = v13;
    v8 = v1;
    swift_retain();
    objc_msgSend((id)v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v5, "", 111, 74, 44, 1);
    *(_QWORD *)&v9 = swift_release(v5).n128_u64[0];
    if ((v3 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v10 = objc_msgSend(v8, "view", v9);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "setNeedsLayout");
        swift_release(v4);

        return;
      }
    }
    __break(1u);
  }
}

id NowPlayingTabController_iOS.paletteView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___paletteView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___paletteView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___paletteView);
  }
  else
  {
    v4 = type metadata accessor for PaletteVisualEffectView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void NowPlayingTabController_iOS.setupMiniPlayerIfNeeded()()
{
  char *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char **v22;
  char *v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  char *v35;
  id v36;
  char *v37;
  uint64_t v38;
  void (**v39)();
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];

  NowPlayingTabController_iOS.paletteVisible.setter(v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_wantsMiniPlayer]);
  v1 = NowPlayingTabController_iOS.miniPlayerViewController.getter();
  objc_msgSend(v0, "addChildViewController:", v1);

  v2 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  v3 = *(id *)&v2[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];

  v4 = NowPlayingTabController_iOS.miniPlayerViewController.getter();
  v5 = objc_msgSend(v4, "view");

  if (!v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v3, "addSubview:", v5);

  v6 = NowPlayingTabController_iOS.miniPlayerViewController.getter();
  v7 = objc_msgSend(v6, "view");

  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  v9 = *(id *)&v8[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];

  objc_msgSend(v9, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  objc_msgSend(v7, "setFrame:", v11, v13, v15, v17);
  v18 = NowPlayingTabController_iOS.miniPlayerViewController.getter();
  v19 = objc_msgSend(v18, "view");

  if (!v19)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v19, "setAutoresizingMask:", 18);

  v20 = NowPlayingTabController_iOS.miniPlayerViewController.getter();
  objc_msgSend(v20, "didMoveToParentViewController:", v0);

  v21 = NowPlayingTabController_iOS.miniPlayerViewController.getter();
  v22 = (char **)&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers];
  swift_beginAccess(&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers], v42, 33, 0);
  v23 = *v22;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
  *v22 = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v23 = sub_134EE0(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    *v22 = v23;
  }
  v26 = *((_QWORD *)v23 + 2);
  v25 = *((_QWORD *)v23 + 3);
  if (v26 >= v25 >> 1)
  {
    v23 = sub_134EE0((char *)(v25 > 1), v26 + 1, 1, v23);
    *v22 = v23;
  }
  *((_QWORD *)v23 + 2) = v26 + 1;
  v27 = &v23[16 * v26];
  *((_QWORD *)v27 + 4) = v21;
  *((_QWORD *)v27 + 5) = &off_1CFF68;
  swift_endAccess(v42);
  v28 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction;
  v29 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction];
  if (!v29)
    goto LABEL_15;
  v30 = v29 + OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_transitioningDelegate;
  *(_QWORD *)(v30 + 8) = &off_1CD238;
  swift_unknownObjectWeakAssign(v30, v0);
  v31 = *(_BYTE **)&v0[v28];
  if (!v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v32 = OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_isEnabled;
  v31[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_isEnabled] = 1;
  v33 = *(void **)&v31[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_tapGestureRecognizer];
  v34 = v31;
  objc_msgSend(v33, "setEnabled:", 1);
  objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC12NowPlayingUI30PalettePresentationInteraction_panGestureRecognizer], "setEnabled:", v31[v32]);

  v35 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  v36 = *(id *)&v35[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];

  if (*(_QWORD *)&v0[v28])
  {
    objc_msgSend(v36, "addInteraction:");

    v37 = (char *)NowPlayingTabController_iOS.miniPlayerViewController.getter();
    v38 = swift_allocObject(&unk_1CD4A0, 24, 7);
    swift_unknownObjectWeakInit(v38 + 16, v0);
    v39 = (void (**)())&v37[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook];
    v40 = *(_QWORD *)&v37[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook];
    v41 = *(_QWORD *)&v37[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook + 8];
    *v39 = sub_9CC00;
    v39[1] = (void (*)())v38;
    sub_145A0(v40, v41);

    return;
  }
LABEL_17:
  __break(1u);
}

void NowPlayingTabController_iOS.layoutSubviewsForCompactSizeClass(metrics:hairlineDimension:)(double a1, double a2, double a3, double a4, double a5)
{
  unsigned __int8 *v5;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Height;
  id v18;
  NSString v19;
  char *v20;
  id v21;
  int v22;
  id v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double MinY;
  double v33;
  double v34;
  id v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  void *v44;
  id v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  double left;
  double bottom;
  double right;
  uint64_t i;
  id v61;
  id v62;
  void *v63;
  char v64[24];
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v8 = objc_msgSend(v5, "tabBar");
  objc_msgSend(v8, "frame");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v65.origin.x = v10;
  v65.origin.y = v12;
  v65.size.width = v14;
  v65.size.height = v16;
  Height = CGRectGetHeight(v65);
  v18 = objc_msgSend(v5, "tabBar");
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "_setBackdropViewLayerGroupName:", v19);

  v20 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  *(double *)&v20[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentInsets + 16] = Height;
  objc_msgSend(v20, "setNeedsLayout");

  v21 = NowPlayingTabController_iOS.paletteView.getter();
  v22 = v5[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteVisible];
  v23 = objc_msgSend(v5, "tabBar");
  objc_msgSend(v23, "frame");
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  v66.origin.x = v25;
  v66.origin.y = v27;
  v66.size.width = v29;
  v66.size.height = v31;
  MinY = CGRectGetMinY(v66);
  v33 = -1.0;
  if (v22)
    v33 = a1;
  v34 = MinY - v33;
  v35 = objc_msgSend(v5, "tabBar");
  objc_msgSend(v35, "frame");
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;

  v67.origin.x = v37;
  v67.origin.y = v39;
  v67.size.width = v41;
  v67.size.height = v43;
  objc_msgSend(v21, "setFrame:", 0.0, v34, CGRectGetWidth(v67), Height + a1);

  v44 = *(void **)&v5[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_separator];
  v45 = objc_msgSend(v5, "tabBar");
  objc_msgSend(v45, "frame");
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;

  v68.origin.x = v47;
  v68.origin.y = v49;
  v68.size.width = v51;
  v68.size.height = v53;
  objc_msgSend(v44, "setFrame:", 0.0, 0.0, CGRectGetWidth(v68), a5);
  v54 = &v5[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers];
  swift_beginAccess(&v5[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers], v64, 0, 0);
  v55 = *(_QWORD *)v54;
  v56 = *(_QWORD *)(v55 + 16);
  if (v56)
  {
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    swift_bridgeObjectRetain(v55);
    for (i = 32; ; i += 16)
    {
      v61 = *(id *)(v55 + i);
      v62 = objc_msgSend(v61, "view");
      if (!v62)
        break;
      v63 = v62;
      objc_msgSend(v62, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);

      if (!--v56)
      {
        swift_bridgeObjectRelease(v55);
        return;
      }
    }
    __break(1u);
  }
}

void NowPlayingTabController_iOS.traitCollectionDidChangeToCompactSizeClass()()
{
  void *v0;
  id v1;
  id v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v1 = objc_msgSend(v0, "tabBar");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v1, "setBackgroundColor:", 0);
  objc_msgSend(v1, "setBackgroundImage:", v2);
  objc_msgSend(v1, "setBackgroundEffects:", 0);
  objc_msgSend(v1, "setTranslucent:", 1);

  objc_msgSend(v0, "_setAccessoryView:", 0);
  v3 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend((id)objc_opt_self(MusicTabBarPaletteBlurEffect), "effectWithStyle:", 10);

  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView], "setEffect:", v5);
  v6 = objc_msgSend(v0, "view");
  if (v6)
  {
    v7 = v6;
    v8 = NowPlayingTabController_iOS.paletteView.getter();
    v9 = objc_msgSend(v0, "tabBar");
    objc_msgSend(v7, "insertSubview:belowSubview:", v8, v9);

  }
  else
  {
    __break(1u);
  }
}

id NowPlayingTabController_iOS.miniPlayerViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id result;
  void *v9;
  void *v10;
  id v11;

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___miniPlayerViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___miniPlayerViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___miniPlayerViewController);
LABEL_5:
    v11 = v2;
    return v3;
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_objectGraph);
  v5 = objc_allocWithZone((Class)type metadata accessor for MiniPlayerViewController());
  v6 = swift_retain();
  v7 = sub_E1FFC(v6);
  result = objc_msgSend(v7, "tabBarItem", swift_release(v4).n128_f64[0]);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, "setTag:", NavigationTab.intValue.getter(14));

    v10 = *(void **)v1;
    *(_QWORD *)v1 = v7;
    *(_QWORD *)(v1 + 8) = &off_1CFF80;
    v3 = v7;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall NowPlayingTabController_iOS.isNowPlayingPresented()()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController);
  v2 = Strong;
  if (Strong)

  return v2 != 0;
}

id static MiniPlayerFactory.createMiniPlayer(asPartOf:)(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;

  if ((os_feature_enabled_red_sun(a1) & 1) != 0)
    return 0;
  v3 = objc_allocWithZone((Class)type metadata accessor for StandaloneMiniPlayerViewController());
  v4 = swift_retain();
  v2 = sub_1439C(v4);
  swift_release(a1);
  sub_9BE68();
  return v2;
}

void sub_997EC(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(a1, "selectedViewController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "view");

    if (v3)
    {
      objc_msgSend(v3, "layoutIfNeeded");

    }
    else
    {
      __break(1u);
    }
  }
}

id NowPlayingTabController_iOS.__allocating_init(asPartOf:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_9BCB8(a1);
  swift_release(a1);
  return v4;
}

void NowPlayingTabController_iOS.init(nibName:bundle:)()
{
  sub_9C740(0xD00000000000002ELL, 0x8000000000188630, 127);
}

void NowPlayingTabController_iOS.init(coder:)()
{
  sub_9C740(0xD000000000000025, 0x8000000000183FF0, 132);
}

Swift::Void __swiftcall NowPlayingTabController_iOS.viewDidLoad()()
{
  void *v0;
  id v1;
  void *v2;
  _BYTE *v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  objc_super v15;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  objc_msgSendSuper2(&v15, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    if (qword_1F9580 != -1)
      swift_once(&qword_1F9580, sub_FDE14);
    objc_msgSend(v2, "setBackgroundColor:", qword_210308);

    v3 = objc_allocWithZone((Class)type metadata accessor for PalettePresentationInteraction());
    v4 = v0;
    v5 = sub_1418C(v4, v3);
    v6 = *(void **)&v4[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction];
    *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction] = v5;

    v7 = objc_msgSend(v4, "tabBar");
    if (qword_1F9508 != -1)
      swift_once(&qword_1F9508, sub_9A82C);
    objc_msgSend(v7, "_setMinimumWidthForHorizontalLayout:", *(double *)&qword_210138);

    if ((os_feature_enabled_red_sun(v8) & 1) == 0)
      NowPlayingTabController_iOS.setupMiniPlayerIfNeeded()();
    v9 = objc_msgSend(v4, "tabBar");
    v10 = objc_msgSend(v4, "tabBar");
    v11 = objc_msgSend(v10, "standardAppearance");

    objc_msgSend(v9, "setScrollEdgeAppearance:", v11);
    v12 = objc_msgSend(v4, "tabBar");
    v13 = objc_msgSend(v4, "traitCollection");
    v14 = (char *)objc_msgSend(v13, "horizontalSizeClass");

    objc_msgSend(v12, "setTintAdjustmentMode:", v14 != (_BYTE *)&dword_0 + 2);
  }
  else
  {
    __break(1u);
  }
}

void sub_99BE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    (*(void (**)(uint64_t, _QWORD, _QWORD))&stru_1A8.segname[(swift_isaMask & *Strong) - 8])(1, 0, 0);

  }
}

Swift::Void __swiftcall NowPlayingTabController_iOS.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  id v4;
  NSString v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  id v19;
  char *v20;
  double v21;
  id v22;
  void *v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  id v32;
  void *v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  void *v42;
  double Height;
  char *v44;
  double v45;
  double v46;
  id v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  char v78[24];
  objc_super v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;

  v1 = v0;
  v79.receiver = v0;
  v79.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  v2 = objc_msgSendSuper2(&v79, "viewDidLayoutSubviews");
  if ((os_feature_enabled_red_sun(v2) & 1) == 0)
  {
    v3 = (char *)NowPlayingTabController_iOS.paletteView.getter();
    v4 = *(id *)&v3[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView];

    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "_setGroupName:", v5);

    if (qword_1F9508 != -1)
      swift_once(&qword_1F9508, sub_9A82C);
    v7 = *((double *)&xmmword_210120 + 1);
    v6 = *(double *)&xmmword_210120;
    v8 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v8, "displayScale");
    v10 = v9;

    v11 = 1.0 / v10;
    v12 = objc_msgSend(v1, "traitCollection");
    v13 = (char *)objc_msgSend(v12, "horizontalSizeClass");

    v14 = objc_msgSend(v1, "traitCollection");
    v15 = objc_msgSend(v14, "userInterfaceIdiom");

    if (!v15 || (unint64_t)v13 < 2)
      goto LABEL_29;
    if (v13 != (_BYTE *)&dword_0 + 2)
    {
      v75 = static os_log_type_t.error.getter();
      sub_F174(0, &qword_1FEB58, OS_os_log_ptr);
      v76 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)(v75, &dword_0, v76, "UIUserInterfaceSizeClass has been extended but we're not handling the new case. Falling back to .compact size class behaviour", 125, 2, _swiftEmptyArrayStorage);

LABEL_29:
      NowPlayingTabController_iOS.layoutSubviewsForCompactSizeClass(metrics:hairlineDimension:)(v6, v16, v17, v18, v11);
      return;
    }
    v19 = objc_msgSend(v1, "traitCollection");
    v20 = (char *)objc_msgSend(v19, "layoutDirection");

    v21 = 0.0;
    if (v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteVisible] == 1)
    {
      v22 = objc_msgSend(v1, "view");
      if (!v22)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      v23 = v22;
      objc_msgSend(v22, "frame");
      v25 = v24;
      v27 = v26;
      v29 = v28;
      v31 = v30;

      v80.origin.x = v25;
      v80.origin.y = v27;
      v80.size.width = v29;
      v80.size.height = v31;
      v21 = v7;
      if (CGRectGetWidth(v80) - v7 < 320.0)
      {
        v32 = objc_msgSend(v1, "view");
        if (!v32)
        {
LABEL_33:
          __break(1u);
          return;
        }
        v33 = v32;
        objc_msgSend(v32, "frame");
        v35 = v34;
        v37 = v36;
        v39 = v38;
        v41 = v40;

        v81.origin.x = v35;
        v81.origin.y = v37;
        v81.size.width = v39;
        v81.size.height = v41;
        v21 = CGRectGetWidth(v81) * 0.5;
      }
    }
    v42 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_accessoryView];
    objc_msgSend(v42, "frame");
    Height = CGRectGetHeight(v82);
    v44 = (char *)NowPlayingTabController_iOS.paletteView.getter();
    *(_QWORD *)&v44[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentInsets + 16] = 0;
    objc_msgSend(v44, "setNeedsLayout");

    if (v20 == (_BYTE *)&dword_0 + 1)
      v45 = v21;
    else
      v45 = 0.0;
    if (v20 == (_BYTE *)&dword_0 + 1)
      v46 = 0.0;
    else
      v46 = v11;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_separator], "setFrame:", v45, 4.0, v11, Height + -8.0);
    objc_msgSend(v42, "frame");
    objc_msgSend(v42, "setFrame:");
    v47 = objc_msgSend(v1, "tabBar");
    objc_msgSend(v47, "safeAreaInsets");

    v48 = NowPlayingTabController_iOS.paletteView.getter();
    objc_msgSend(v42, "bounds");
    objc_msgSend(v48, "setFrame:", UIEdgeInsetsInsetRect(v49, v50, v51, v52, 0.0, v46));

    v53 = &v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers];
    v54 = swift_beginAccess(&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers], v78, 0, 0).n128_u64[0];
    v55 = *(_QWORD *)v53;
    v56 = *(_QWORD *)(v55 + 16);
    if (v56)
    {
      v77 = v42;
      swift_bridgeObjectRetain(v55);
      v57 = 32;
      while (1)
      {
        v58 = *(id *)(v55 + v57);
        v59 = objc_msgSend(v58, "view");
        if (!v59)
          break;
        v60 = v59;
        v61 = objc_msgSend(v1, "tabBar");
        objc_msgSend(v61, "safeAreaInsets");
        v63 = v62;
        v65 = v64;
        v67 = v66;
        v69 = v68;

        objc_msgSend(v60, "setLayoutMargins:", v63, v65, v67, v69);
        v57 += 16;
        if (!--v56)
        {
          v54 = swift_bridgeObjectRelease(v55).n128_u64[0];
          v42 = v77;
          goto LABEL_24;
        }
      }
      __break(1u);
      goto LABEL_32;
    }
LABEL_24:
    objc_msgSend(v42, "frame", *(double *)&v54, v77);
    if (v21 != v71 || Height != v70)
    {
      v73 = objc_msgSend(v1, "tabBar");
      objc_msgSend(v73, "setNeedsLayout");

      v74 = objc_msgSend(v1, "tabBar");
      objc_msgSend(v74, "layoutIfNeeded");

    }
  }
}

Swift::Void __swiftcall NowPlayingTabController_iOS.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  id v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  NSArray v21;
  void *v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  objc_super v31;

  v2 = v1;
  isa = a1.value.super.isa;
  v31.receiver = v1;
  v31.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  objc_msgSendSuper2(&v31, "traitCollectionDidChange:", isa);
  v4 = objc_msgSend(v1, "tabBar");
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = (char *)objc_msgSend(v5, "horizontalSizeClass");

  objc_msgSend(v4, "setTintAdjustmentMode:", v6 != (_BYTE *)&dword_0 + 2);
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(objc_allocWithZone((Class)UITabBarAppearance), "init");
  if ((os_feature_enabled_red_sun(objc_msgSend(v8, "configureWithDefaultBackground")) & 1) != 0)
    goto LABEL_14;
  v9 = (char *)objc_msgSend(v7, "horizontalSizeClass");
  if ((unint64_t)v9 >= 2)
  {
    if (v9 == (_BYTE *)&dword_0 + 2)
    {
      v10 = objc_msgSend(v2, "tabBar");
      v11 = objc_msgSend(objc_allocWithZone((Class)UITabBar), "init");
      v30 = objc_msgSend(v11, "backgroundColor");
      v12 = objc_msgSend(v11, "backgroundEffects");
      if (v12)
      {
        v13 = v12;
        v14 = sub_F174(0, (unint64_t *)&qword_1FEB88, UIVisualEffect_ptr);
        v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      }
      else
      {
        v15 = 0;
      }
      v18 = objc_msgSend(v11, "backgroundImage");
      v19 = objc_msgSend(v11, "isTranslucent");

      objc_msgSend(v10, "setBackgroundColor:", v30);
      objc_msgSend(v10, "setBackgroundImage:", v18);
      if (v15)
      {
        sub_F174(0, (unint64_t *)&qword_1FEB88, UIVisualEffect_ptr);
        swift_bridgeObjectRetain(v15);
        v21.super.isa = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v20 = swift_bridgeObjectRelease(v15).n128_u64[0];
      }
      else
      {
        v21.super.isa = 0;
      }
      objc_msgSend(v10, "setBackgroundEffects:", v21.super.isa, v20);

      objc_msgSend(v10, "setTranslucent:", v19);
      swift_bridgeObjectRelease(v15);

      v22 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_accessoryView];
      objc_msgSend(v2, "_setAccessoryView:", v22);
      v23 = (char *)NowPlayingTabController_iOS.paletteView.getter();
      objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView], "setEffect:", 0);

      v24 = NowPlayingTabController_iOS.paletteView.getter();
      objc_msgSend(v22, "addSubview:", v24);

      goto LABEL_13;
    }
    v16 = static os_log_type_t.error.getter();
    sub_F174(0, &qword_1FEB58, OS_os_log_ptr);
    v17 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v16, &dword_0, v17, "UIUserInterfaceSizeClass has been extended but we're not handling the new case. Falling back to .compact size class behaviour", 125, 2, _swiftEmptyArrayStorage);

  }
  NowPlayingTabController_iOS.traitCollectionDidChangeToCompactSizeClass()();
LABEL_13:
  v25 = objc_msgSend(v2, "tabBar");
  objc_msgSend(v25, "setStandardAppearance:", v8);

LABEL_14:
  if (isa)
    v26 = -[objc_class horizontalSizeClass](isa, "horizontalSizeClass");
  else
    v26 = 0;
  v27 = objc_msgSend(v7, "horizontalSizeClass");
  if (isa && v26 == v27)
    goto LABEL_21;
  v28 = objc_msgSend(v2, "view");
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, "setNeedsLayout");

LABEL_21:
    return;
  }
  __break(1u);
}

double sub_9A82C()
{
  double result;

  result = 64.0;
  xmmword_210120 = xmmword_16F8A0;
  unk_210130 = xmmword_16F8B0;
  return result;
}

Swift::Void __swiftcall NowPlayingTabController_iOS._setViewControllers(_:animated:)(Swift::OpaquePointer _, Swift::Bool animated)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;
  char v13[24];

  v4 = &v2[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers];
  swift_beginAccess(&v2[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers], v13, 0, 0);
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(*(_QWORD *)v4);
    v7 = 32;
    do
    {
      objc_msgSend(*(id *)(v5 + v7), "removeFromParentViewController");
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
  sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  objc_msgSendSuper2(&v12, "_setViewControllers:animated:", isa, animated);

  v9 = *(_QWORD *)v4;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(v9);
    v11 = 32;
    do
    {
      objc_msgSend(v2, "addChildViewController:", *(_QWORD *)(v9 + v11));
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(v9);
  }
}

_QWORD *NowPlayingTabController_iOS._viewControllersInTabBar()()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;
  _QWORD *v5;

  v1 = objc_msgSend(v0, "childViewControllers");
  v2 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v4 = v0;
  v5 = sub_9C528(v3, v4);
  swift_bridgeObjectRelease(v3);

  return v5;
}

Swift::Void __swiftcall NowPlayingTabController_iOS._rebuildTabBarItems(animated:)(Swift::Bool animated)
{
  _BYTE *v1;
  uint64_t v3;
  char v4;
  objc_super v5;

  v3 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems;
  v4 = v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems];
  v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems] = 1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  objc_msgSendSuper2(&v5, "_rebuildTabBarItemsAnimated:", animated);
  v1[v3] = v4;
}

Swift::Void __swiftcall NowPlayingTabController_iOS._updateLayout(for:)(UITraitCollection_optional a1)
{
  _BYTE *v1;
  Class isa;
  uint64_t v3;
  char v4;
  objc_super v5;

  isa = a1.value.super.isa;
  v3 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems;
  v4 = v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems];
  v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems] = 1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  objc_msgSendSuper2(&v5, "_updateLayoutForTraitCollection:", isa);
  v1[v3] = v4;
}

id NowPlayingTabController_iOS.mutableChildViewControllers.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Class isa;
  id v7;
  objc_super v9;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems) == 1)
  {
    v1 = objc_msgSend(v0, "_viewControllersInTabBar");
    v2 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

    v4 = sub_A5050(v3);
    swift_bridgeObjectRelease(v3);
    v5 = objc_allocWithZone((Class)NSMutableArray);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v7 = objc_msgSend(v5, "initWithArray:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  }
  else
  {
    v9.receiver = v0;
    v9.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
    return objc_msgSendSuper2(&v9, "mutableChildViewControllers");
  }
  return v7;
}

void NowPlayingTabController_iOS.mutableChildViewControllers.setter(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  objc_msgSendSuper2(&v3, "setMutableChildViewControllers:", a1);

}

id NowPlayingTabController_iOS.__allocating_init(tabs:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone(v1);
  sub_F174(0, &qword_1FEB98, UITab_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithTabs:", isa, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v5;
}

void NowPlayingTabController_iOS.init(tabs:)()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.NowPlayingTabController_iOS", 40, "init(tabs:)", 11, 0);
  __break(1u);
}

id NowPlayingTabController_iOS.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *sub_9B098(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView;
  v11 = objc_allocWithZone((Class)UIVisualEffectView);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "initWithEffect:", 0);
  v13 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v14 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_separator;
  *(_QWORD *)&v12[v14] = sub_9B29C();
  v15 = &v12[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentInsets];
  v16 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v15 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v15 + 1) = v16;

  v24.receiver = v12;
  v24.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v17, "setClipsToBounds:", 1);
  v18 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView;
  v19 = *(void **)&v17[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView];
  objc_msgSend(v17, "addSubview:", v19);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView]);

  v21 = objc_msgSend(*(id *)&v17[v18], "contentView");
  v22 = *(id *)&v17[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_separator];
  objc_msgSend(v21, "addSubview:", v22);

  return v17;
}

id sub_9B29C()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v0 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  v1 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v0, 7);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v1);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "_barHairlineShadowColor");
  v6 = objc_msgSend(v3, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.3);

  sub_FF1D4(v5, v7);
  v9 = v8;

  objc_msgSend(v4, "setBackgroundColor:", v9);
  return v4;
}

void sub_9B3F0()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  char *v14;
  void *v15;
  double MaxY;
  uint64_t v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  objc_super v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v23, "layoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v0, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView], "setFrame:");
  v11 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView];
  objc_msgSend(v11, "setFrame:", UIEdgeInsetsInsetRect(v4, v6, v8, v10, *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentInsets], *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentInsets + 8]));
  objc_msgSend(v2, "displayScale");
  v13 = v12;
  v14 = (char *)objc_msgSend(v2, "horizontalSizeClass");
  if ((unint64_t)v14 < 2)
    goto LABEL_5;
  if (v14 != (_BYTE *)&dword_0 + 2)
  {
    v17 = static os_log_type_t.error.getter();
    sub_F174(0, &qword_1FEB58, OS_os_log_ptr);
    v18 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v17, &dword_0, v18, "UIUserInterfaceSizeClass has been extended but we're not handling the new case. Falling back to .compact size class behaviour", 125, 2, _swiftEmptyArrayStorage);

LABEL_5:
    v15 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_separator];
    objc_msgSend(v11, "frame");
    MaxY = CGRectGetMaxY(v25);
    objc_msgSend(v1, "bounds");
    v4 = v19;
    v6 = v20;
    v8 = v21;
    v10 = v22;
    goto LABEL_6;
  }
  v15 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_separator];
  objc_msgSend(v11, "frame");
  MaxY = CGRectGetMinY(v24);
LABEL_6:
  v26.origin.x = v4;
  v26.origin.y = v6;
  v26.size.width = v8;
  v26.size.height = v10;
  objc_msgSend(v15, "setFrame:", 0.0, MaxY, CGRectGetWidth(v26), 1.0 / v13);

}

uint64_t sub_9B6A4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

id sub_9B6EC(int a1, id a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  char *v8;

  v6 = objc_msgSend(a2, "tabBar");
  objc_msgSend(v6, "setHidden:", 0);

  v7 = NowPlayingTabController_iOS.paletteView.getter();
  objc_msgSend(v7, "setHidden:", 0);

  v8 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView], "setEffect:", a3);

  return objc_msgSend(a4, "removeFromSuperview");
}

void sub_9B79C(void *a1, int a2, char *a3)
{
  sub_9BEB0(a1, a3);
}

uint64_t sub_9B7A4(uint64_t a1, _OWORD *a2, char *a3)
{
  return sub_9B7EC(a1, a2, a3, (uint64_t)&type metadata for StandardNowPlayingUIConfiguration, (uint64_t)&off_1D0C48, (uint64_t)&unk_1CD478, (uint64_t)&off_1C5210);
}

uint64_t sub_9B7C8(uint64_t a1, _OWORD *a2, char *a3)
{
  return sub_9B7EC(a1, a2, a3, (uint64_t)&type metadata for HorizontalNowPlayingMetadataConfiguration, (uint64_t)&off_1C77A8, (uint64_t)&unk_1CD450, (uint64_t)&off_1C5238);
}

uint64_t sub_9B7EC(uint64_t a1, _OWORD *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *ObjectType;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  objc_super v30;
  _QWORD v31[7];
  uint64_t v32;
  char v33[24];
  _QWORD v34[5];

  ObjectType = (objc_class *)swift_getObjectType(a3);
  v34[3] = a4;
  v34[4] = a5;
  v15 = (_OWORD *)swift_allocObject(a6, 64, 7);
  v34[0] = v15;
  v16 = a2[1];
  v15[1] = *a2;
  v15[2] = v16;
  v15[3] = a2[2];
  *(_QWORD *)&a3[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController] = 0;
  v17 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_backgroundView;
  v18 = objc_allocWithZone((Class)UIVisualEffectView);
  v19 = a3;
  *(_QWORD *)&a3[v17] = objc_msgSend(v18, "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_collectionView] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionTextViewController] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesTextViewController] = 0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v33, 0, 0);
  result = sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v31);
  if (v31[0])
  {
    sub_DF78((uint64_t)&v32, (uint64_t)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterResultsController]);
    sub_4AE24((uint64_t)v31);
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_bindings] = &_swiftEmptyArrayStorage;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_dismissalTapGestureRecognizer] = 0;
    v21 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_playerRequestController;
    *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
    v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_ownsArtworkView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController____lazy_storage___prototypeShowNotesController] = 0;
    v22 = &v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoProvider];
    *((_QWORD *)v22 + 3) = type metadata accessor for EpisodeTextInfoProvider(0);
    *((_QWORD *)v22 + 4) = &protocol witness table for EpisodeTextInfoProvider;
    __swift_allocate_boxed_opaque_existential_1(v22);
    EpisodeTextInfoProvider.init()();
    v23 = &v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_episodeTextInfoDetail];
    v24 = type metadata accessor for EpisodeTextInfoDetail(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_supportedSections] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_availableSections] = a7;
    v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_allowsSectionCollapse] = 1;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_descriptionHeaderSizingView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_showNotesHeaderSizingView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_queueHeaderSizingView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_chapterHeaderSizingView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__systemPodcastsResponse] = 0;
    v25 = OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_textDrawingCache;
    v26 = _s5CacheCMa();
    swift_allocObject(v26, 104, 7);
    sub_F8EC();
    *(_QWORD *)&v19[v25] = v27;
    v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController__viewDidAppearOnce] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_scrollingTipDimmingView] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_objectGraph] = a1;
    sub_DF78((uint64_t)v34, (uint64_t)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_configuration]);
    v28 = &v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics];
    sub_DF78((uint64_t)(v15 + 1), (uint64_t)&v19[OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_metrics]);
    swift_retain(a1);
    sub_6D798(v28);

    v30.receiver = v19;
    v30.super_class = ObjectType;
    v29 = objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
    __swift_destroy_boxed_opaque_existential_0(v34);
    return (uint64_t)v29;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_9BB58()
{
  char *v0;
  id v1;
  char *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _OWORD v11[3];
  _QWORD v12[6];

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_objectGraph];
    v4 = objc_allocWithZone((Class)type metadata accessor for FullscreenNowPlayingViewController());
    v5 = swift_retain();
    v6 = (uint64_t)sub_12F54(v5);
    swift_release(v3);
    sub_12BA8();
  }
  else
  {
    v12[3] = &type metadata for StandardNowPlayingMetrics;
    v12[4] = &off_1D0C90;
    v12[0] = swift_allocObject(&unk_1CD428, 392, 7);
    sub_ED6A4(v12[0] + 16);
    v12[5] = 0x101010001010100;
    v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_objectGraph];
    v8 = (char *)objc_allocWithZone((Class)type metadata accessor for NowPlayingViewController(0));
    sub_13308((uint64_t)v12, (uint64_t)v11);
    v9 = swift_retain();
    v6 = sub_9B7EC(v9, v11, v8, (uint64_t)&type metadata for StandardNowPlayingUIConfiguration, (uint64_t)&off_1D0C48, (uint64_t)&unk_1CD478, (uint64_t)&off_1C5210);
    swift_release(v7);
    sub_13344((uint64_t)v12);
  }
  return v6;
}

id sub_9BCB8(uint64_t a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  id v10;
  objc_super v12;

  v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteVisible] = 0;
  v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_wantsMiniPlayer] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___paletteView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction] = 0;
  v3 = &v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___miniPlayerViewController];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_automaticallyPresentedContentItemIdentifier];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerAnimator] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController], 0);
  v5 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_accessoryView;
  v6 = objc_allocWithZone((Class)UIView);
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, "init");
  v8 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_separator;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "_barHairlineShadowColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  *(_QWORD *)&v7[v8] = v9;
  *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers] = _swiftEmptyArrayStorage;
  v7[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_objectGraph] = a1;
  swift_retain(a1);

  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for NowPlayingTabController_iOS();
  return objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_15(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_9BE68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEB48;
  if (!qword_1FEB48)
  {
    v1 = type metadata accessor for StandaloneMiniPlayerViewController();
    result = swift_getWitnessTable(&protocol conformance descriptor for StandaloneMiniPlayerViewController, v1);
    atomic_store(result, (unint64_t *)&qword_1FEB48);
  }
  return result;
}

void sub_9BEB0(void *a1, char *a2)
{
  void *v2;
  void *v3;
  unsigned int v6;
  id v7;
  id v8;
  id v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat Height;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  double MaxY;
  double v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  char **v60;
  char *v61;
  id v62;
  id v63;
  id v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  CGFloat v69;
  CGFloat width;
  id v71;
  CGFloat y;
  id v73;
  CGFloat x;
  _QWORD aBlock[5];
  uint64_t v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;

  v3 = v2;
  v6 = objc_msgSend(a2, "isReversed");
  v7 = NowPlayingTabController_iOS.paletteView.getter();
  v73 = objc_msgSend(v7, "superview");

  v8 = objc_msgSend(v3, "view");
  if (!v73)
  {
    if (!v8)
      goto LABEL_6;
LABEL_34:

    return;
  }
  if (!v8)
  {
    v8 = v73;
    goto LABEL_34;
  }
  v71 = v8;
  sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
  v9 = v73;
  v10 = static NSObject.== infix(_:_:)(v9, v71);

  if ((v10 & 1) == 0)
    return;
LABEL_6:
  if (v6)
  {
    v11 = objc_msgSend(v3, "selectedViewController");
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, "contentScrollView");

      if (v13)
      {
        if (objc_msgSend(v13, "isDecelerating"))
          objc_msgSend(v13, "_stopScrollingAndZoomingAnimations");

      }
    }
  }
  v14 = objc_msgSend(v3, "view");
  if (!v14)
  {
    __break(1u);
    goto LABEL_36;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "snapshotViewAfterScreenUpdates:", 0);

  if (!v16)
    return;
  v17 = objc_msgSend(v3, "tabBar");
  objc_msgSend(v17, "setHidden:", 1);

  v18 = NowPlayingTabController_iOS.paletteView.getter();
  objc_msgSend(v18, "setHidden:", 1);

  v19 = objc_msgSend(v3, "traitCollection");
  v20 = objc_msgSend((id)objc_opt_self(MusicTabBarPaletteBlurEffect), "effectWithStyle:", 10);

  v21 = (char *)NowPlayingTabController_iOS.paletteView.getter();
  objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView], "setEffect:", 0);

  v22 = objc_msgSend(v3, "view");
  if (!v22)
  {
LABEL_36:
    __break(1u);
    return;
  }
  v23 = v22;
  v24 = objc_msgSend(v3, "tabBar");
  objc_msgSend(v24, "bounds");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;

  v33 = objc_msgSend(v3, "tabBar");
  objc_msgSend(v23, "convertRect:fromCoordinateSpace:", v33, v26, v28, v30, v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  v77.origin.x = v35;
  v77.origin.y = v37;
  v77.size.width = v39;
  v77.size.height = v41;
  Height = CGRectGetHeight(v77);
  v78.origin.x = v35;
  v78.origin.y = v37;
  v78.size.width = v39;
  v78.size.height = v41;
  v79 = CGRectOffset(v78, 0.0, Height);
  y = v79.origin.y;
  x = v79.origin.x;
  v69 = v79.size.height;
  width = v79.size.width;
  if (v6)
    v43 = v79.origin.x;
  else
    v43 = v35;
  if (v6)
    v44 = v79.origin.y;
  else
    v44 = v37;
  if (v6)
    v45 = v79.size.width;
  else
    v45 = v39;
  if (v6)
    v46 = v79.size.height;
  else
    v46 = v41;
  v47 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v43, v44, v45, v46);
  objc_msgSend(v47, "setClipsToBounds:", 1);
  objc_msgSend(v47, "addSubview:", v16);
  objc_msgSend(v47, "bounds");
  MaxY = CGRectGetMaxY(v80);
  objc_msgSend(v16, "bounds");
  v49 = MaxY - CGRectGetHeight(v81);
  objc_msgSend(v16, "frame");
  objc_msgSend(v16, "setFrame:", 0.0, v49);
  v50 = objc_msgSend(a1, "containerView");
  objc_msgSend(v50, "addSubview:", v47);

  v51 = *(void **)&a2[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_easingAnimator];
  v52 = swift_allocObject(&unk_1CD388, 104, 7);
  *(_QWORD *)(v52 + 16) = v47;
  *(_BYTE *)(v52 + 24) = v6;
  *(double *)(v52 + 32) = v35;
  *(double *)(v52 + 40) = v37;
  *(double *)(v52 + 48) = v39;
  *(double *)(v52 + 56) = v41;
  *(CGFloat *)(v52 + 64) = x;
  *(CGFloat *)(v52 + 72) = y;
  *(CGFloat *)(v52 + 80) = width;
  *(CGFloat *)(v52 + 88) = v69;
  *(_QWORD *)(v52 + 96) = v16;
  aBlock[4] = sub_9CA88;
  v76 = v52;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_19_0;
  v53 = _Block_copy(aBlock);
  v54 = v76;
  v55 = v51;
  v56 = v47;
  v57 = v16;
  objc_msgSend(v55, "addAnimations:", v53, swift_release(v54).n128_f64[0]);
  _Block_release(v53);

  v58 = (_QWORD *)swift_allocObject(&unk_1CD3D8, 40, 7);
  v58[2] = v3;
  v58[3] = v20;
  v58[4] = v56;
  v59 = swift_allocObject(&unk_1CD400, 32, 7);
  *(_QWORD *)(v59 + 16) = sub_9CB54;
  *(_QWORD *)(v59 + 24) = v58;
  v60 = (char **)&a2[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks];
  swift_beginAccess(&a2[OBJC_IVAR____TtC12NowPlayingUI38PalettePresentationAnimationController_completionBlocks], aBlock, 33, 0);
  v61 = *v60;
  v62 = v56;
  v63 = v3;
  v64 = v20;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v61);
  *v60 = v61;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v61 = sub_13460C(0, *((_QWORD *)v61 + 2) + 1, 1, v61);
    *v60 = v61;
  }
  v67 = *((_QWORD *)v61 + 2);
  v66 = *((_QWORD *)v61 + 3);
  if (v67 >= v66 >> 1)
  {
    v61 = sub_13460C((char *)(v66 > 1), v67 + 1, 1, v61);
    *v60 = v61;
  }
  *((_QWORD *)v61 + 2) = v67 + 1;
  v68 = &v61[16 * v67];
  *((_QWORD *)v68 + 4) = sub_60F98;
  *((_QWORD *)v68 + 5) = v59;
  swift_endAccess(aBlock);

  swift_release(v58);
}

_QWORD *sub_9C528(unint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjectType;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  char v27[24];
  _QWORD *v28;

  v3 = a1;
  v28 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_26;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
LABEL_3:
  v24 = (uint64_t *)&a2[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers], v27, 0, 0);
  if (v4)
  {
    v20 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v26 = v3 + 32;
    v22 = v3 & 0xC000000000000001;
    v23 = v4;
    v21 = v3 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v6)
      {
        v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v20);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          if (v3 < 0)
            v19 = v3;
          else
            v19 = v3 & 0xFFFFFFFFFFFFFF8;
          v4 = _CocoaArrayWrapper.endIndex.getter(v19);
          goto LABEL_3;
        }
        v9 = (char *)*(id *)(v26 + 8 * v5);
      }
      a2 = v9;
      if (__OFADD__(v5++, 1))
        goto LABEL_25;
      ObjectType = swift_getObjectType(v9);
      v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PalettePresentationTransitioning);
      if (v12)
        v13 = a2;
      else
        v13 = 0;
      if (v13 && (v3 = *v24, (v14 = *(_QWORD *)(*v24 + 16)) != 0))
      {
        sub_F174(0, (unint64_t *)&qword_1FA930, NSObject_ptr);
        v25 = a2;
        swift_bridgeObjectRetain(v3);
        v15 = 32;
        while (1)
        {
          v16 = *(id *)(v3 + v15);
          v17 = static NSObject.== infix(_:_:)(v16, v13);

          if ((v17 & 1) != 0)
            break;
          v15 += 16;
          if (!--v14)
          {

            swift_bridgeObjectRelease(v3);
            v6 = v22;
            v4 = v23;
            v7 = v21;
            goto LABEL_5;
          }
        }
        a2 = v25;

        swift_bridgeObjectRelease(v3);
        v6 = v22;
        v4 = v23;
        v7 = v21;
      }
      else
      {
LABEL_5:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v3 = v28[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v3);
        v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, a2);
        specialized ContiguousArray._endMutation()(v8);
      }
      if (v5 == v4)
        return v28;
    }
  }
  return _swiftEmptyArrayStorage;
}

void sub_9C740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteVisible] = 0;
  v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_wantsMiniPlayer] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___paletteView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerPaletteInteraction] = 0;
  v7 = &v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS____lazy_storage___miniPlayerViewController];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_automaticallyPresentedContentItemIdentifier];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_miniPlayerAnimator] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_nowPlayingViewController], 0);
  v9 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_accessoryView;
  *(_QWORD *)&v3[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_separator;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "_barHairlineShadowColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  *(_QWORD *)&v3[v10] = v11;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_paletteViewControllers] = &_swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingTabController_iOS_isRebuildingTabBarItems] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, a1, a2, "NowPlayingUI/NowPlayingTabController_iOS.swift", 46, 2, a3, 0);
  __break(1u);
}

uint64_t type metadata accessor for NowPlayingTabController_iOS()
{
  return objc_opt_self(_TtC12NowPlayingUI27NowPlayingTabController_iOS);
}

ValueMetadata *type metadata accessor for MiniPlayerFactory()
{
  return &type metadata for MiniPlayerFactory;
}

uint64_t type metadata accessor for PaletteVisualEffectView()
{
  return objc_opt_self(_TtC12NowPlayingUI23PaletteVisualEffectView);
}

void sub_9C924()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;

  v1 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_backgroundView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
  v2 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_separator;
  *(_QWORD *)&v0[v3] = sub_9B29C();
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI23PaletteVisualEffectView_contentInsets];
  v5 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v4 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v4 + 1) = v5;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingTabController_iOS.swift", 46, 2, 439, 0);
  __break(1u);
}

uint64_t sub_9C9FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_9CA20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_9CA44()
{
  uint64_t v0;

  sub_997EC(*(void **)(v0 + 16));
}

uint64_t sub_9CA4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9CA5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 104, 7);
}

id sub_9CA88()
{
  uint64_t v0;
  void *v1;
  double *v2;
  double v3;
  double *v4;
  double v5;
  double *v6;
  double v7;
  double *v8;
  double v9;

  v1 = *(void **)(v0 + 96);
  if (*(_BYTE *)(v0 + 24))
    v2 = (double *)(v0 + 32);
  else
    v2 = (double *)(v0 + 64);
  v3 = *v2;
  if (*(_BYTE *)(v0 + 24))
    v4 = (double *)(v0 + 40);
  else
    v4 = (double *)(v0 + 72);
  v5 = *v4;
  if (*(_BYTE *)(v0 + 24))
    v6 = (double *)(v0 + 48);
  else
    v6 = (double *)(v0 + 80);
  v7 = *v6;
  if (*(_BYTE *)(v0 + 24))
    v8 = (double *)(v0 + 56);
  else
    v8 = (double *)(v0 + 88);
  if (*(_BYTE *)(v0 + 24))
    v9 = 1.0;
  else
    v9 = 0.0;
  objc_msgSend(*(id *)(v0 + 16), "setFrame:", v3, v5, v7, *v8);
  return objc_msgSend(v1, "setAlpha:", v9);
}

uint64_t sub_9CB20()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_9CB54(int a1)
{
  uint64_t v1;

  return sub_9B6EC(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_9CB60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9CB84()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 296));

  return swift_deallocObject(v0, 392, 7);
}

uint64_t sub_9CBB8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_9CBDC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_9CC00()
{
  uint64_t v0;

  sub_99BE4(v0);
}

uint64_t sub_9CC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = swift_allocObject(&unk_1CD598, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  swift_retain();
  sub_14835C(1, (uint64_t)sub_9D240, v1);
  swift_release_n(v1, 2);
  v2 = swift_allocObject(&unk_1CD598, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  swift_retain();
  sub_14835C(128, (uint64_t)sub_9D260, v2);
  swift_release_n(v2, 2);
  v3 = swift_allocObject(&unk_1CD598, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  swift_retain();
  sub_14835C(64, (uint64_t)sub_9D280, v3);
  return swift_release_n(v3, 2);
}

void sub_9CD20(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController);
    v8 = v7;

    if (v7)
    {
      objc_msgSend(v8, *a3);

    }
  }
}

void sub_9CDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController);
    v6 = v5;

    if (v5)
    {
      objc_msgSend(v6, "presentAnimated:completion:", 1, 0);

    }
  }
}

id sub_9CE28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  objc_class *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  double v15;
  NSString *v16;
  id v17;
  objc_super v19;

  v1 = type metadata accessor for Glyph(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController] = 0;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_pickerDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = (objc_class *)type metadata accessor for RouteButton_iOS();
  v19.receiver = v0;
  v19.super_class = v6;
  v7 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setExclusiveTouch:", 1);
  v8 = v7;
  v9 = static Glyph.NowPlaying.route.getter();
  v10 = (void *)Glyph.image.getter(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v8, "setAccessoryImage:", v10);

  v11 = (void *)objc_opt_self(UIApplication);
  v12 = v8;
  v13 = objc_msgSend(v11, "sharedApplication");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");

  LODWORD(v13) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v14);
  v15 = 13.0;
  if ((_DWORD)v13)
  {
    v16 = UIFontTextStyleBody;
    v15 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v16, 13.0);

  }
  v17 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", v15, UIFontWeightSemibold);
  objc_msgSend(v12, "setFont:", v17);

  objc_msgSend(v12, "setHitRectInsets:", -10.0, -28.0, -20.0, -28.0);
  return v12;
}

id sub_9D194()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RouteButton_iOS();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RouteButton_iOS()
{
  return objc_opt_self(_TtC12NowPlayingUI15RouteButton_iOS);
}

uint64_t sub_9D21C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_9D240(uint64_t a1)
{
  uint64_t v1;

  sub_9CD20(a1, v1, (SEL *)&selRef_startPrewarming);
}

void sub_9D260(uint64_t a1)
{
  uint64_t v1;

  sub_9CD20(a1, v1, (SEL *)&selRef_stopPrewarming);
}

void sub_9D280(uint64_t a1)
{
  uint64_t v1;

  sub_9CDA0(a1, v1);
}

uint64_t sub_9D288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  void *v6;
  uint64_t Strong;
  id v8;

  v4 = v2 + OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_pickerDelegate;
  *(_QWORD *)(v4 + 8) = a2;
  result = swift_unknownObjectWeakAssign(v4, a1);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI15RouteButton_iOS_controlsViewController);
  if (v6)
  {
    Strong = swift_unknownObjectWeakLoadStrong(result);
    v8 = v6;
    objc_msgSend(v8, "setStandaloneControlsDelegate:", Strong);

    return swift_unknownObjectRelease(Strong);
  }
  return result;
}

uint64_t *sub_9D300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = v9;
      v14 = v11;
      v15 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = v9;
      v14 = v11;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

double sub_9D3FC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[4]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 28));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

_QWORD *sub_9D484(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_retain();
  swift_retain();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t *sub_9D554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  a1[1] = a2[1];
  v7 = a1[2];
  a1[2] = a2[2];
  swift_retain();
  swift_release(v7);
  a1[3] = a2[3];
  v8 = a1[4];
  a1[4] = a2[4];
  swift_retain();
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_9944((uint64_t)a1 + v9, (uint64_t *)&unk_1FE3C0);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  return a1;
}

uint64_t sub_9D668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_9D720(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_release(v8);
  v9 = a2[4];
  v10 = a1[4];
  a1[3] = a2[3];
  a1[4] = v9;
  swift_release(v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_9944((uint64_t)a1 + v11, (uint64_t *)&unk_1FE3C0);
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9D810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9D81C);
}

uint64_t sub_9D81C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_9D89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9D8A8);
}

char *sub_9D8A8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ChaptersList(uint64_t a1)
{
  uint64_t result;

  result = qword_1FECB8;
  if (!qword_1FECB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChaptersList);
  return result;
}

void sub_9D95C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_16F9E0;
  v4[2] = &unk_16F9E0;
  sub_9D9E0(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_9D9E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FAFB0)
  {
    v2 = type metadata accessor for DeviceMetrics(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FAFB0);
  }
}

uint64_t sub_9DA34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A0634, 1);
}

uint64_t sub_9DA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];
  uint64_t v26;
  _QWORD v27[8];

  v1 = v0;
  v2 = type metadata accessor for ChaptersList(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = *(_QWORD *)(v0 + 16);
  KeyPath = swift_getKeyPath(&unk_16FA48);
  v7 = swift_getKeyPath(&unk_16FA70);
  v8 = swift_retain();
  static Published.subscript.getter(v27, v8, KeyPath, v7);
  swift_release(v5);
  swift_release(KeyPath);
  swift_release(v7);
  v9 = v27[0];
  v10 = v27[3];
  v11 = v27[6];
  swift_bridgeObjectRelease(v27[7]);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);
  v12 = swift_getKeyPath(&unk_16FA90);
  v13 = swift_getKeyPath(&unk_16FAB8);
  v14 = swift_retain();
  static Published.subscript.getter(v27, v14, v12, v13);
  swift_release(v5);
  swift_release(v12);
  swift_release(v13);
  v15 = LOBYTE(v27[0]);
  v26 = v1;
  sub_9EEF8(v1, (uint64_t)&v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v16 = *(unsigned __int8 *)(v3 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1CD5C8, v17 + v4, v16 | 7);
  sub_9EF40((uint64_t)&v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v18 + v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FECF8);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED00);
  v21 = sub_9EFD8();
  v22 = sub_27A8C(&qword_1FED10, &qword_1FECF8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v23 = sub_27A8C(&qword_1FED18, &qword_1FED00, (uint64_t)&protocol conformance descriptor for Button<A>);
  return NowPlayingQueueChapterList.init(_:isExpanded:title:chapterBuilder:)(v9, v15, sub_9EEF0, v25, sub_9EF84, v18, &type metadata for QueueModel.Chapter, v19, v20, v21, v22, v23);
}

uint64_t sub_9DC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v12[16];
  uint64_t v13;

  v2 = type metadata accessor for ChaptersList(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_9EEF8(a1, (uint64_t)v5);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1CD640, v7 + v4, v6 | 7);
  sub_9EF40((uint64_t)v5, v8 + v7);
  v13 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED30);
  v10 = sub_9F354();
  return Button.init(action:label:)(sub_9F320, v8, sub_9F34C, v12, v9, v10);
}

double sub_9DD58(uint64_t a1)
{
  uint64_t v1;
  double result;
  _QWORD v3[4];

  v3[2] = a1;
  v1 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v1, sub_9F5B8, v3, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_9DDB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void (*v4)(_BYTE *, _QWORD);
  BOOL *v5;
  _BYTE v7[32];

  v1 = *(_QWORD *)(a1 + 16);
  KeyPath = swift_getKeyPath(&unk_16FA90);
  v3 = swift_getKeyPath(&unk_16FAB8);
  swift_retain(v1);
  v4 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v7, v1, KeyPath, v3);
  *v5 = !*v5;
  v4(v7, 0);
  swift_release(v1);
  swift_release(KeyPath);
  return swift_release(v3);
}

uint64_t sub_9DE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = a2;
  v3 = type metadata accessor for DeviceMetrics.Layout(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v58 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE98);
  __chkstk_darwin(v60);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE80);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = type metadata accessor for DeviceMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED58);
  __chkstk_darwin(v20);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED48);
  __chkstk_darwin(v62);
  v65 = (uint64_t)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED30);
  __chkstk_darwin(v63);
  v64 = (uint64_t)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v22 = static VerticalAlignment.center.getter(v25);
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED60);
  sub_9E3B8(a1, &v22[*(int *)(v26 + 44)]);
  v61 = static Edge.Set.top.getter(v27);
  type metadata accessor for ChaptersList(0);
  v28 = sub_56730((uint64_t)v19);
  DeviceMetrics.layout.getter(v28);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v12, enum case for DeviceMetrics.Layout.regularExtended(_:), v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
  v29 = (uint64_t)&v7[*(int *)(v60 + 48)];
  sub_2808C((uint64_t)v15, (uint64_t)v7, &qword_1FDE80);
  sub_2808C((uint64_t)v12, v29, &qword_1FDE80);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v30((uint64_t)v7, 1, v3) == 1)
  {
    sub_9944((uint64_t)v12, &qword_1FDE80);
    sub_9944((uint64_t)v15, &qword_1FDE80);
    if (v30(v29, 1, v3) == 1)
    {
      sub_9944((uint64_t)v7, &qword_1FDE80);
      v31 = 13.0;
      goto LABEL_9;
    }
LABEL_6:
    sub_9944((uint64_t)v7, &qword_1FDE98);
    v31 = 25.0;
    goto LABEL_9;
  }
  v32 = v59;
  sub_2808C((uint64_t)v7, v59, &qword_1FDE80);
  if (v30(v29, 1, v3) == 1)
  {
    sub_9944((uint64_t)v12, &qword_1FDE80);
    sub_9944((uint64_t)v15, &qword_1FDE80);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v3);
    goto LABEL_6;
  }
  v33 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v58, v29, v3);
  v34 = sub_8330(&qword_1FDEA8, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceMetrics.Layout, (uint64_t)&protocol conformance descriptor for DeviceMetrics.Layout);
  LODWORD(v60) = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v3, v34);
  v35 = *(void (**)(char *, uint64_t))(v4 + 8);
  v35(v33, v3);
  sub_9944((uint64_t)v12, &qword_1FDE80);
  sub_9944((uint64_t)v15, &qword_1FDE80);
  v35((char *)v32, v3);
  sub_9944((uint64_t)v7, &qword_1FDE80);
  v31 = 25.0;
  if ((v60 & 1) != 0)
    v31 = 13.0;
LABEL_9:
  v36 = EdgeInsets.init(_all:)(v31);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v65;
  sub_2808C((uint64_t)v22, v65, &qword_1FED58);
  v44 = v43 + *(int *)(v62 + 36);
  *(_BYTE *)v44 = v61;
  *(double *)(v44 + 8) = v36;
  *(_QWORD *)(v44 + 16) = v38;
  *(_QWORD *)(v44 + 24) = v40;
  *(_QWORD *)(v44 + 32) = v42;
  *(_BYTE *)(v44 + 40) = 0;
  v45 = sub_9944((uint64_t)v22, &qword_1FED58);
  v46 = static Edge.Set.bottom.getter(v45);
  v47 = EdgeInsets.init(_all:)(13.0);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = v64;
  sub_2808C(v43, v64, &qword_1FED48);
  v55 = v54 + *(int *)(v63 + 36);
  *(_BYTE *)v55 = v46;
  *(double *)(v55 + 8) = v47;
  *(_QWORD *)(v55 + 16) = v49;
  *(_QWORD *)(v55 + 24) = v51;
  *(_QWORD *)(v55 + 32) = v53;
  *(_BYTE *)(v55 + 40) = 0;
  sub_9944(v43, &qword_1FED48);
  return sub_9F444(v54, v66);
}

uint64_t sub_9E3B8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __n128 v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  void (*v75)(char *, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  double v98;
  uint64_t v99;

  v91 = a2;
  v3 = type metadata accessor for LiftHoverEffect(0);
  v4 = *(_QWORD *)(v3 - 8);
  v89 = v3;
  v90 = v4;
  __chkstk_darwin(v3);
  v88 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for AccessibilityTraits(0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED68);
  __chkstk_darwin(v79);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v77 - v11;
  __chkstk_darwin(v13);
  v78 = (char *)&v77 - v14;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED70);
  v94 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v87 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v81 = (char *)&v77 - v17;
  __chkstk_darwin(v18);
  v84 = (char *)&v77 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED78);
  __chkstk_darwin(v20);
  v82 = (uint64_t)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v92 = (uint64_t)&v77 - v23;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED80);
  v95 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v77 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v93 = (char *)&v77 - v26;
  v27 = *(_QWORD *)(a1 + 16);
  v28 = type metadata accessor for QueueViewModel(0);
  v29 = sub_8330(&qword_1FAA90, type metadata accessor for QueueViewModel, (uint64_t)&unk_16FE20);
  v30 = swift_retain();
  v31 = ObservedObject.init(wrappedValue:)(v30, v28, v29);
  v33 = v32;
  v96 = v31;
  v97 = v32;
  v34 = sub_9F48C();
  View.bold(_:)(1, &type metadata for ChaptersTitle, v34);
  swift_release(*(_QWORD *)&v33);
  v96 = 0;
  LOBYTE(v97) = 1;
  View.accessibilityHidden(_:)(1, &type metadata for Spacer, &protocol witness table for Spacer);
  v35 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEC0000006E776F64);
  KeyPath = swift_getKeyPath(&unk_16FA90);
  v37 = swift_getKeyPath(&unk_16FAB8);
  v38 = swift_retain();
  static Published.subscript.getter(&v96, v38, KeyPath, v37);
  swift_release(v27);
  swift_release(KeyPath);
  swift_release(v37);
  if ((_BYTE)v96)
    v39 = 3.14159265;
  else
    v39 = 0.0;
  v40 = static UnitPoint.center.getter();
  v96 = v35;
  v97 = v39;
  v98 = v40;
  v99 = v41;
  v42 = LocalizedStringKey.init(stringLiteral:)(0x6C6C4120776F6853, 0xE800000000000000);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED90);
  v50 = sub_9F4D0();
  View.accessibilityLabel(_:)(v42, v44, v46 & 1, v48, v49, v50);
  swift_release(v35);
  swift_bridgeObjectRelease(v48);
  v51 = swift_bridgeObjectRelease(v44);
  static AccessibilityTraits.isButton.getter(v51);
  v52 = v79;
  ModifiedContent<>.accessibilityAddTraits(_:)(v7, v79);
  v53 = *(void (**)(char *, uint64_t))(v83 + 8);
  v54 = v85;
  v53(v7, v85);
  v55 = sub_9944((uint64_t)v9, &qword_1FED68);
  static AccessibilityTraits.isImage.getter(v55);
  v56 = (uint64_t)v78;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v7, v52);
  v53(v7, v54);
  v57 = sub_9944((uint64_t)v12, &qword_1FED68);
  v58 = v88;
  static CustomHoverEffect<>.lift.getter(v57);
  v59 = sub_9F534();
  v60 = sub_8330(&qword_1FEDA8, (uint64_t (*)(uint64_t))&type metadata accessor for LiftHoverEffect, (uint64_t)&protocol conformance descriptor for LiftHoverEffect);
  v61 = v81;
  v62 = v89;
  View.hoverEffect<A>(_:isEnabled:)(v58, 1, v52, v89, v59, v60);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v58, v62);
  sub_9944(v56, &qword_1FED68);
  v63 = v94;
  v64 = v84;
  v65 = v86;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v84, v61, v86);
  v66 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v67 = v77;
  v68 = v80;
  v66(v77, v93, v80);
  v69 = v82;
  sub_2808C(v92, v82, &qword_1FED78);
  v70 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v71 = v87;
  v70(v87, v64, v65);
  v72 = v91;
  v66(v91, v67, v68);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEDB0);
  sub_2808C(v69, (uint64_t)&v72[*(int *)(v73 + 48)], &qword_1FED78);
  v70(&v72[*(int *)(v73 + 64)], v71, v65);
  v74 = *(void (**)(char *, uint64_t))(v94 + 8);
  v74(v64, v65);
  sub_9944(v92, &qword_1FED78);
  v75 = *(void (**)(char *, uint64_t))(v95 + 8);
  v75(v93, v68);
  v74(v71, v65);
  sub_9944(v69, &qword_1FED78);
  return ((uint64_t (*)(char *, uint64_t))v75)(v67, v68);
}

uint64_t sub_9EA24(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE v20[16];
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v6 = type metadata accessor for ChaptersList(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = a2[1];
  v24 = *a2;
  v25 = v10;
  v26 = *((_QWORD *)a2 + 4);
  sub_9EEF8(a3, (uint64_t)v9);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_1CD5F0, v13 + 40, v11 | 7);
  sub_9EF40((uint64_t)v9, v14 + v12);
  v15 = v14 + v13;
  v16 = v25;
  *(_OWORD *)v15 = v24;
  *(_OWORD *)(v15 + 16) = v16;
  v17 = v25;
  *(_QWORD *)(v15 + 32) = v26;
  v21 = a3;
  v22 = &v24;
  v23 = a1;
  v18 = sub_9F148();
  swift_bridgeObjectRetain(v17);
  return Button.init(action:label:)(sub_9F0FC, v14, sub_9F13C, v20, &type metadata for ChapterCell, v18);
}

void sub_9EB58(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = *(_QWORD *)(a2 + 24);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = swift_retain();
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_1CD618, 48, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v7;
  v12[5] = v8;
  v13 = sub_F0BC4((uint64_t)v6, (uint64_t)&unk_1FED28, (uint64_t)v12);
  swift_release(v13);
}

__n128 sub_9EC4C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 result;
  __n128 v22;

  v22 = *(__n128 *)a2;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 16);
  swift_retain();
  swift_retain();
  sub_9F18C(a2);
  v12 = type metadata accessor for NowPlayingViewModel.PlaybackPosition(0);
  v13 = sub_8330(&qword_1FAA98, (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
  v14 = ObservedObject.init(wrappedValue:)(v10, v12, v13);
  v16 = v15;
  v17 = type metadata accessor for QueueViewModel(0);
  v18 = sub_8330(&qword_1FAA90, type metadata accessor for QueueViewModel, (uint64_t)&unk_16FE20);
  v19 = ObservedObject.init(wrappedValue:)(v11, v17, v18);
  a4->n128_u64[0] = v14;
  a4->n128_u64[1] = v16;
  a4[1].n128_u64[0] = v19;
  a4[1].n128_u64[1] = v20;
  result = v22;
  a4[2] = v22;
  a4[3].n128_u64[0] = v7;
  a4[3].n128_u64[1] = v8;
  a4[4].n128_u64[0] = v9;
  a4[4].n128_u64[1] = a3;
  return result;
}

uint64_t sub_9ED60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[8];

  KeyPath = swift_getKeyPath(&unk_16FA48);
  v5 = swift_getKeyPath(&unk_16FA70);
  v6 = swift_retain();
  static Published.subscript.getter(v20, v6, KeyPath, v5);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = v20[0];
  v9 = v20[2];
  v8 = v20[3];
  v10 = v20[6];
  swift_bridgeObjectRelease(v20[7]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v7);
  if (v8)
  {
    v11 = swift_getKeyPath(&unk_16FA90);
    v12 = swift_getKeyPath(&unk_16FAB8);
    v13 = swift_retain();
    static Published.subscript.getter(v20, v13, v11, v12);
    swift_release(a1);
    swift_release(v11);
    swift_release(v12);
    if ((v20[0] & 1) == 0)
    {
      v20[0] = v9;
      v20[1] = v8;
      v19 = sub_11CEC();
      result = Text.init<A>(_:)(v20, &type metadata for String, v19);
      goto LABEL_6;
    }
    swift_bridgeObjectRelease(v8);
  }
  v14 = LocalizedStringKey.init(stringLiteral:)(0x7372657470616843, 0xE800000000000000);
  result = Text.init(_:tableName:bundle:comment:)(v14);
LABEL_6:
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v16;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  return result;
}

uint64_t sub_9EED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9ED60(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_9EEF0()
{
  uint64_t v0;

  return sub_9DC70(*(_QWORD *)(v0 + 16));
}

uint64_t sub_9EEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChaptersList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9EF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChaptersList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_9EF84(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChaptersList(0) - 8) + 80);
  return sub_9EA24(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_9EFD8()
{
  unint64_t result;

  result = qword_1FED08;
  if (!qword_1FED08)
  {
    result = swift_getWitnessTable(&unk_16FF40, &type metadata for QueueModel.Chapter);
    atomic_store(result, (unint64_t *)&qword_1FED08);
  }
  return result;
}

uint64_t sub_9F01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for ChaptersList(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 40;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v9 + 16));
  return swift_deallocObject(v0, v10, v3 | 7);
}

void sub_9F0FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ChaptersList(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_9EB58((uint64_t *)(v0 + v2), v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

double sub_9F13C@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_9EC4C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1).n128_u64[0];
  return result;
}

unint64_t sub_9F148()
{
  unint64_t result;

  result = qword_1FED20;
  if (!qword_1FED20)
  {
    result = swift_getWitnessTable(&unk_16D6AC, &type metadata for ChapterCell);
    atomic_store(result, (unint64_t *)&qword_1FED20);
  }
  return result;
}

uint64_t sub_9F18C(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_9F1B4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_9F1E0(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1FFBD4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_27CA8;
  return sub_BC318(a1, v7, v4, v5, v6);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ChaptersList(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_9F320()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChaptersList(0) - 8) + 80);
  return sub_9DD58(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_9F34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9DE5C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_9F354()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FED38;
  if (!qword_1FED38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FED30);
    sub_9F3C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FED38);
  }
  return result;
}

unint64_t sub_9F3C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FED40;
  if (!qword_1FED40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FED48);
    sub_27A8C(&qword_1FED50, &qword_1FED58, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FED40);
  }
  return result;
}

uint64_t sub_9F444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FED30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_9F48C()
{
  unint64_t result;

  result = qword_1FED88;
  if (!qword_1FED88)
  {
    result = swift_getWitnessTable(&unk_16FAE8, &type metadata for ChaptersTitle);
    atomic_store(result, (unint64_t *)&qword_1FED88);
  }
  return result;
}

unint64_t sub_9F4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FED98;
  if (!qword_1FED98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FED90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FED98);
  }
  return result;
}

unint64_t sub_9F534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEDA0;
  if (!qword_1FEDA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FED68);
    sub_9F4D0();
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEDA0);
  }
  return result;
}

uint64_t sub_9F5B8()
{
  uint64_t v0;

  return sub_9DDB4(*(_QWORD *)(v0 + 16));
}

ValueMetadata *type metadata accessor for ChaptersTitle()
{
  return &type metadata for ChaptersTitle;
}

uint64_t sub_9F5E0()
{
  return sub_27A8C(&qword_1FEDB8, &qword_1FEDC0, (uint64_t)&protocol conformance descriptor for NowPlayingQueueChapterList<A, B, C>);
}

uint64_t sub_9F60C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A065C, 1);
}

void *sub_9F61C()
{
  return &protocol witness table for Text;
}

uint64_t destroy for SilentContentView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t initializeWithCopy for SilentContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v7);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for SilentContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  v11 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for SilentContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 40));
  v7 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SilentContentView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SilentContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SilentContentView()
{
  return &type metadata for SilentContentView;
}

uint64_t sub_9F89C()
{
  return sub_8330(&qword_1FDF58, type metadata accessor for SilentContent, (uint64_t)&unk_16B61C);
}

unint64_t sub_9F8C8(uint64_t a1)
{
  unint64_t result;

  result = sub_90F08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_9F8EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A0704, 1);
}

uint64_t sub_9F8FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  double v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  uint64_t OpaqueTypeConformance2;
  char *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  unint64_t v76;
  void *object;
  id countAndFlagsBits;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[2];
  Swift::String v98;
  uint64_t v99;
  void *v100;
  _OWORD v101[2];
  Swift::String v102;

  v2 = v1;
  v96 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEDE8);
  __chkstk_darwin(v3);
  v5 = (char *)&object - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityChildBehavior(0);
  v93 = *(_QWORD *)(v6 - 8);
  v94 = v6;
  __chkstk_darwin(v6);
  v91 = (char *)&object - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEDF0);
  __chkstk_darwin(v8);
  v10 = (char *)&object - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEDF8);
  __chkstk_darwin(v80);
  v12 = (char *)&object - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE00);
  __chkstk_darwin(v82);
  v14 = (char *)&object - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE08);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v81 = (char *)&object - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE10);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v85 = (char *)&object - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE18);
  v90 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v89 = (char *)&object - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE20);
  __chkstk_darwin(v18);
  v87 = (char *)&object - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v95 = (uint64_t)&object - v21;
  v101[0] = *(_OWORD *)v2;
  KeyPath = swift_getKeyPath(&unk_16FBF0);
  v23 = swift_getKeyPath(&unk_16FC18);
  v24 = swift_retain();
  static Published.subscript.getter(&v98, v24, KeyPath, v23);
  swift_release(KeyPath);
  swift_release(v23);
  v25 = sub_54C10((uint64_t)v101);
  if (v98._countAndFlagsBits == 1)
  {
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v26 = sub_A16A8();
    return _ConditionalContent<>.init(storage:)(v5, v18, &type metadata for EmptyView, v26, &protocol witness table for EmptyView);
  }
  else
  {
    countAndFlagsBits = (id)v98._countAndFlagsBits;
    v79 = v18;
    object = v98._object;
    *(_QWORD *)v10 = static VerticalAlignment.center.getter(v25);
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 0;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE58);
    v29 = sub_A0114(v2, (uint64_t)&v10[*(int *)(v28 + 44)]);
    v30 = static Edge.Set.vertical.getter(v29);
    v31 = EdgeInsets.init(_all:)(23.0);
    v33 = v32;
    v35 = v34;
    v37 = v36;
    sub_2808C((uint64_t)v10, (uint64_t)v12, &qword_1FEDF0);
    v38 = &v12[*(int *)(v80 + 36)];
    *v38 = v30;
    *((double *)v38 + 1) = v31;
    *((_QWORD *)v38 + 2) = v33;
    *((_QWORD *)v38 + 3) = v35;
    *((_QWORD *)v38 + 4) = v37;
    v38[40] = 0;
    sub_9944((uint64_t)v10, &qword_1FEDF0);
    sub_2808C((uint64_t)v12, (uint64_t)v14, &qword_1FEDF8);
    v39 = v82;
    v14[*(int *)(v82 + 36)] = 0;
    sub_9944((uint64_t)v12, &qword_1FEDF8);
    v40 = (_OWORD *)swift_allocObject(&unk_1CD7B8, 80, 7);
    v41 = *(_OWORD *)(v2 + 16);
    v40[1] = *(_OWORD *)v2;
    v40[2] = v41;
    v42 = *(_OWORD *)(v2 + 48);
    v40[3] = *(_OWORD *)(v2 + 32);
    v40[4] = v42;
    sub_A18EC((_QWORD *)v2);
    v43 = (void *)sub_A17C0();
    v44 = v81;
    View.onTapGesture(count:perform:)(1, sub_A18CC, v40, v39, v43);
    swift_release(v40);
    sub_9944((uint64_t)v14, &qword_1FEE00);
    v45 = swift_getKeyPath(&unk_16FBF0);
    v46 = swift_getKeyPath(&unk_16FC18);
    v47 = swift_retain();
    static Published.subscript.getter(&v98, v47, v45, v46);
    swift_release(v45);
    swift_release(v46);
    v48 = v44;
    if (v98._countAndFlagsBits == 1)
    {
      sub_54C10((uint64_t)v101);
      v49 = 0.0;
    }
    else
    {
      v50 = (unint64_t)v98._object;
      v51 = v98._object;
      sub_4375C((id)v98._countAndFlagsBits);
      sub_54C10((uint64_t)v101);
      v49 = 0.0;
      if ((v50 & 0xFFFFFFFFFFFFFLL) == 0)
        v49 = *(double *)&v51;
      if ((~v50 & 0x7FF0000000000000) != 0)
        v49 = *(double *)&v51;
    }
    v52 = (uint64_t)v5;
    v53 = v3;
    *(double *)v97 = v49;
    v54 = (_OWORD *)swift_allocObject(&unk_1CD7E0, 80, 7);
    v55 = *(_OWORD *)(v2 + 16);
    v54[1] = *(_OWORD *)v2;
    v54[2] = v55;
    v56 = *(_OWORD *)(v2 + 48);
    v54[3] = *(_OWORD *)(v2 + 32);
    v54[4] = v56;
    sub_A18EC((_QWORD *)v2);
    v98._countAndFlagsBits = v39;
    v98._object = v43;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v98, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v58 = v85;
    v59 = v84;
    View.onChange<A>(of:initial:_:)(v97, 0, sub_A1944, v54, v84, &type metadata for Double, OpaqueTypeConformance2, &protocol witness table for Double);
    v60 = swift_release(v54);
    v61 = (*(uint64_t (**)(char *, uint64_t, __n128))(v83 + 8))(v48, v59, v60);
    v62 = v91;
    static AccessibilityChildBehavior.combine.getter(v61);
    v98._countAndFlagsBits = v59;
    v98._object = &type metadata for Double;
    v99 = OpaqueTypeConformance2;
    v100 = &protocol witness table for Double;
    v63 = swift_getOpaqueTypeConformance2(&v98, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v64 = v89;
    v65 = v88;
    View.accessibilityElement(children:)(v62, v88, v63);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v94);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v65);
    v66 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v102._countAndFlagsBits = 0xD000000000000033;
    v102._object = (void *)0x8000000000188730;
    v67._object = (void *)0x8000000000188700;
    v67._countAndFlagsBits = 0xD000000000000026;
    v68._countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    v69 = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)v66, v68, v102);

    v98 = v69;
    v97[0] = v65;
    v97[1] = v63;
    v70 = swift_getOpaqueTypeConformance2(v97, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v71 = sub_11CEC();
    v72 = (uint64_t)v87;
    v73 = v92;
    View.accessibilityLabel<A>(_:)(&v98, v92, &type metadata for String, v70, v71);
    v74 = swift_bridgeObjectRelease(v69._object);
    (*(void (**)(char *, uint64_t, __n128))(v90 + 8))(v64, v73, v74);
    v75 = v95;
    sub_982C(v72, v95, &qword_1FEE20);
    sub_2808C(v75, v52, &qword_1FEE20);
    swift_storeEnumTagMultiPayload(v52, v53, 0);
    v76 = sub_A16A8();
    _ConditionalContent<>.init(storage:)(v52, v79, &type metadata for EmptyView, v76, &protocol witness table for EmptyView);
    sub_4375C(countAndFlagsBits);
    return sub_9944(v75, &qword_1FEE20);
  }
}

uint64_t sub_A0114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  double *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t KeyPath;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  char *v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;

  v87 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE68);
  __chkstk_darwin(v3);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE70);
  __chkstk_darwin(v78);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE78);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v79 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE80);
  __chkstk_darwin(v11);
  v85 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v88 = (uint64_t)&v74 - v14;
  v15 = type metadata accessor for TappablePaddingView(0);
  __chkstk_darwin(v15);
  v86 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v74 - v18);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v74 - v21);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v74 - v25;
  v27 = static Alignment.leading.getter(v24);
  v28 = *(_QWORD *)(a1 + 48);
  v29 = *(_QWORD *)(a1 + 56);
  *v22 = v27;
  v22[1] = v30;
  v81 = v28;
  v82 = v15;
  v22[2] = v28;
  v22[3] = v29;
  v31 = (uint64_t *)((char *)v22 + *(int *)(v15 + 24));
  *v31 = swift_getKeyPath(&unk_16FC38);
  v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  swift_storeEnumTagMultiPayload(v31, v80, 0);
  v84 = v26;
  sub_7AD1C((uint64_t)v22, (uint64_t)v26);
  v90 = *(_OWORD *)(a1 + 32);
  v83 = v29;
  swift_retain();
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  v33 = State.wrappedValue.getter(&v89, v32);
  v34 = 1;
  if (v89 == 1)
  {
    *(_QWORD *)v5 = static VerticalAlignment.center.getter(v33);
    *((_QWORD *)v5 + 1) = 0;
    v5[16] = 1;
    v77 = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FEE90) + 44)];
    v90 = xmmword_16FB40;
    KeyPath = swift_getKeyPath(&unk_16FC70);
    v35 = (_OWORD *)swift_allocObject(&unk_1CD808, 80, 7);
    v36 = *(_OWORD *)(a1 + 16);
    v35[1] = *(_OWORD *)a1;
    v35[2] = v36;
    v37 = *(_OWORD *)(a1 + 48);
    v35[3] = *(_OWORD *)(a1 + 32);
    v35[4] = v37;
    sub_A18EC((_QWORD *)a1);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE98);
    v39 = (uint64_t)v7;
    v40 = v9;
    v41 = v8;
    v42 = sub_A19F0();
    v43 = sub_A1AA0();
    v44 = v42;
    v8 = v41;
    v9 = v40;
    ForEach<>.init(_:id:content:)(&v90, KeyPath, sub_A19E8, v35, v38, &type metadata for SilentContentView.CircleView, v44, &protocol witness table for Int, v43);
    v90 = *(_OWORD *)(a1 + 16);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE60);
    v46 = State.wrappedValue.getter(&v89, v45);
    v47 = v89;
    v48 = static UnitPoint.center.getter(v46);
    v50 = v49;
    sub_2808C((uint64_t)v5, v39, &qword_1FEE68);
    v51 = (double *)(v39 + *(int *)(v78 + 36));
    *(_QWORD *)v51 = v47;
    *((_QWORD *)v51 + 1) = v47;
    v51[2] = v48;
    *((_QWORD *)v51 + 3) = v50;
    v52 = sub_9944((uint64_t)v5, &qword_1FEE68);
    v53 = static AnyTransition.identity.getter(v52);
    v54 = sub_A0850();
    v56 = static AnyTransition.asymmetric(insertion:removal:)(v53, v54, v55);
    swift_release(v53);
    swift_release(v54);
    v57 = v79;
    sub_2808C(v39, v79, &qword_1FEE70);
    *(_QWORD *)(v57 + *(int *)(v8 + 36)) = v56;
    sub_9944(v39, &qword_1FEE70);
    sub_982C(v57, v88, &qword_1FEE78);
    v34 = 0;
  }
  v58 = v88;
  v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v88, v34, 1, v8);
  v60 = static Alignment.center.getter(v59);
  v62 = _FrameLayout.init(width:height:alignment:)(&v90, 0, 1, 0x4028000000000000, 0, v60, v61);
  v79 = v90;
  LODWORD(v78) = BYTE8(v90);
  v77 = v91;
  LODWORD(KeyPath) = v92;
  v75 = v93;
  v74 = v94;
  *v19 = static Alignment.trailing.getter(v62);
  v19[1] = v63;
  v64 = v83;
  v19[2] = v81;
  v19[3] = v64;
  v65 = (_QWORD *)((char *)v19 + *(int *)(v82 + 24));
  *v65 = swift_getKeyPath(&unk_16FC38);
  swift_storeEnumTagMultiPayload(v65, v80, 0);
  sub_7AD1C((uint64_t)v19, (uint64_t)v22);
  v66 = (uint64_t)v84;
  sub_7AD68((uint64_t)v84, (uint64_t)v19);
  v67 = v85;
  sub_2808C(v58, v85, &qword_1FEE80);
  v68 = v86;
  sub_7AD68((uint64_t)v22, v86);
  v69 = v87;
  sub_7AD68((uint64_t)v19, v87);
  v70 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1FEE88);
  sub_2808C(v67, v69 + v70[12], &qword_1FEE80);
  v71 = v69 + v70[16];
  *(_QWORD *)v71 = 0;
  *(_BYTE *)(v71 + 8) = 1;
  *(_QWORD *)(v71 + 16) = v79;
  *(_BYTE *)(v71 + 24) = v78;
  *(_QWORD *)(v71 + 32) = v77;
  *(_BYTE *)(v71 + 40) = KeyPath;
  v72 = v74;
  *(_QWORD *)(v71 + 48) = v75;
  *(_QWORD *)(v71 + 56) = v72;
  sub_7AD68(v68, v69 + v70[20]);
  swift_retain();
  sub_7ADAC((uint64_t)v22);
  sub_9944(v58, &qword_1FEE80);
  sub_7ADAC(v66);
  sub_7ADAC(v68);
  sub_9944(v67, &qword_1FEE80);
  return sub_7ADAC((uint64_t)v19);
}

uint64_t sub_A076C@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *a1;
  v17 = *a2;
  v5 = *((_QWORD *)&v17 + 1);
  v14 = 0;
  sub_24D30((uint64_t)&v17);
  State.init(wrappedValue:)(&v15, &v14, &type metadata for Double);
  v6 = v15;
  v7 = v16;
  v14 = 0;
  State.init(wrappedValue:)(&v15, &v14, &type metadata for Double);
  v8 = v15;
  v9 = v16;
  v10 = type metadata accessor for SilentContent(0);
  v11 = sub_8330(&qword_1FE3D0, type metadata accessor for SilentContent, (uint64_t)&unk_16B5E4);
  result = ObservedObject.init(wrappedValue:)(v5, v10, v11);
  *a3 = result;
  a3[1] = v13;
  a3[2] = v4;
  a3[3] = v6;
  a3[4] = v7;
  a3[5] = v8;
  a3[6] = v9;
  return result;
}

uint64_t sub_A0850()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = 0x3FF0000000000000;
  v17 = 0x3FF3333333333333;
  v0 = sub_A1AE4();
  v1 = static AnyTransition.modifier<A>(active:identity:)(&v17, &v16, &type metadata for ScaleEffect, v0);
  v2 = static Animation.linear(duration:)(1.0);
  v3 = AnyTransition.animation(_:)(v2, v1);
  swift_release(v1);
  swift_release(v2);
  v16 = 0x3FF0000000000000;
  v17 = 0x3FC999999999999ALL;
  v4 = static AnyTransition.modifier<A>(active:identity:)(&v17, &v16, &type metadata for ScaleEffect, v0);
  v5 = static Animation.easeIn(duration:)(0.5);
  v6 = Animation.delay(_:)(1.0);
  swift_release(v5);
  v7 = AnyTransition.animation(_:)(v6, v4);
  swift_release(v4);
  swift_release(v6);
  v8 = AnyTransition.combined(with:)(v7, v3);
  swift_release(v3);
  swift_release(v7);
  v16 = 0x3FF0000000000000;
  v17 = 0;
  v9 = sub_A1B28();
  v10 = static AnyTransition.modifier<A>(active:identity:)(&v17, &v16, &type metadata for OpacityEffect, v9);
  v11 = static Animation.easeIn(duration:)(0.3);
  v12 = Animation.delay(_:)(1.0);
  swift_release(v11);
  v13 = AnyTransition.animation(_:)(v12, v10);
  swift_release(v10);
  swift_release(v12);
  v14 = AnyTransition.combined(with:)(v13, v8);
  swift_release(v8);
  swift_release(v13);
  return v14;
}

void sub_A09F8(uint64_t a1, double *a2, uint64_t a3)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  char v11;
  __int128 v12;

  v4 = *a2;
  v5 = *(_QWORD *)(a3 + 8);
  if ((*(_BYTE *)(v5 + 80) & 1) == 0)
  {
    v7 = (double *)(v5 + 72);
    goto LABEL_7;
  }
  if ((*(_BYTE *)(v5 + 48) & 1) == 0)
  {
    v7 = (double *)(v5 + 40);
LABEL_7:
    if (*v7 + -1.5 >= v4)
      goto LABEL_4;
    goto LABEL_8;
  }
  if (v4 <= -1.5)
  {
LABEL_4:
    v12 = *(_OWORD *)(a3 + 32);
    v11 = 1;
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
    State.wrappedValue.setter(&v11, v6);
    sub_A0B04(v4);
    return;
  }
LABEL_8:
  __chkstk_darwin(a1);
  v10[2] = a3;
  v9 = static Animation.default.getter(v8);
  withAnimation<A>(_:_:)(v9, sub_A194C, v10, (char *)&type metadata for () + 8);
  swift_release(v9);
}

void sub_A0B04(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  __int128 v16;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(double *)(v2 + 72);
  v4 = v3;
  if (*(_BYTE *)(v2 + 80) == 1)
  {
    v5 = 1.0;
    if ((*(_BYTE *)(v2 + 48) & 1) != 0)
      goto LABEL_13;
    v4 = *(double *)(v2 + 40);
  }
  if ((*(_BYTE *)(v2 + 64) & 1) != 0)
  {
    v6 = -1.5;
    if ((*(_BYTE *)(v2 + 32) & 1) != 0)
      goto LABEL_9;
    v7 = (double *)(v2 + 24);
  }
  else
  {
    v7 = (double *)(v2 + 56);
  }
  v6 = v4 - *v7 + -1.5;
LABEL_9:
  v5 = floor(v6 / 3.0);
  if (v5 <= 1.0)
    v5 = 1.0;
  if (!*(_BYTE *)(v2 + 80))
  {
    if (!*(_BYTE *)(v2 + 64))
    {
LABEL_19:
      v8 = (v3 - *(double *)(v2 + 56) + -1.5) / v5 * 0.5;
      goto LABEL_20;
    }
LABEL_16:
    if (*(_BYTE *)(v2 + 32) == 1)
      v9 = -1.5;
    else
      v9 = v3 - *(double *)(v2 + 24) + -1.5;
    v8 = v9 / v5 * 0.5;
    goto LABEL_23;
  }
  if ((*(_BYTE *)(v2 + 48) & 1) == 0)
  {
    v3 = *(double *)(v2 + 40);
    if ((*(_BYTE *)(v2 + 64) & 1) == 0)
      goto LABEL_19;
    goto LABEL_16;
  }
LABEL_13:
  v8 = -1.5 / v5 * 0.5;
  if (*(_BYTE *)(v2 + 64) != 1)
  {
LABEL_20:
    v10 = *(double *)(v2 + 56);
    goto LABEL_26;
  }
LABEL_23:
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    v10 = 0.0;
    v11 = a1 / v8;
    goto LABEL_27;
  }
  v10 = *(double *)(v2 + 24);
LABEL_26:
  v11 = (a1 - v10) / v8;
LABEL_27:
  v12 = floor(v11);
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
    return;
  }
  v13 = a1 - v10 - v8 * v12;
  if (((uint64_t)v12 & 1) != 0)
    v13 = v8 - v13;
  v16 = *(_OWORD *)(v1 + 16);
  v15 = v13 / v8 * 0.2 + 1.0;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE60);
  State.wrappedValue.setter(&v15, v14);
}

_QWORD *sub_A0CE4@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  _OWORD v51[10];
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  _BYTE v65[7];
  char v66;
  _BYTE v67[7];
  char v68;
  _BYTE v69[7];
  char v70;
  _BYTE v71[7];
  char v72;
  _BYTE v73[7];
  char v74;
  _BYTE v75[7];
  char v76;

  v2 = v1;
  v49 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static Alignment.center.getter(v10);
  v13 = sub_10A84C(0.0, 1, 0.0, 1, 12.0, 0, 0.0, 1, (uint64_t)&v53, 0.0, 1, 0.0, 1, v11, v12);
  v47 = v54;
  v48 = v53;
  v38 = BYTE8(v54);
  v39 = BYTE8(v53);
  v45 = v56;
  v46 = v55;
  v36 = BYTE8(v56);
  v37 = BYTE8(v55);
  v43 = v58;
  v44 = v57;
  v34 = BYTE8(v58);
  v35 = BYTE8(v57);
  v41 = *((_QWORD *)&v59 + 1);
  v42 = v59;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v9, enum case for Font.TextStyle.title3(_:), v6, v13);
  v14 = enum case for Font.Design.serif (_:);
  v15 = type metadata accessor for Font.Design(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v5, v14, v15);
  v17 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v5, 0, 1, v15);
  v18 = static Font.Weight.regular.getter(v17);
  v40 = static Font.system(_:design:weight:)(v9, v5, *(_QWORD *)&v18, 0);
  sub_9944((uint64_t)v5, &qword_1FB060);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  KeyPath = swift_getKeyPath(&unk_16FDA0);
  v76 = v39;
  v74 = v38;
  v72 = v37;
  v70 = v36;
  v68 = v35;
  v66 = v34;
  v51[0] = *(__int128 *)((char *)v2 + 40);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE60);
  State.wrappedValue.getter(&v61, v20);
  LOBYTE(v7) = v76;
  *(_DWORD *)((char *)&v53 + 9) = *(_DWORD *)v75;
  LOBYTE(v6) = v74;
  *(_DWORD *)((char *)&v54 + 9) = *(_DWORD *)v73;
  HIDWORD(v53) = *(_DWORD *)&v75[3];
  HIDWORD(v54) = *(_DWORD *)&v73[3];
  LOBYTE(v9) = v72;
  *(_DWORD *)((char *)&v55 + 9) = *(_DWORD *)v71;
  LOBYTE(v15) = v70;
  HIDWORD(v55) = *(_DWORD *)&v71[3];
  HIDWORD(v56) = *(_DWORD *)&v69[3];
  *(_DWORD *)((char *)&v56 + 9) = *(_DWORD *)v69;
  LOBYTE(v16) = v68;
  *(_DWORD *)((char *)&v57 + 9) = *(_DWORD *)v67;
  LOBYTE(v14) = v66;
  *(_DWORD *)((char *)&v58 + 9) = *(_DWORD *)v65;
  HIDWORD(v57) = *(_DWORD *)&v67[3];
  HIDWORD(v58) = *(_DWORD *)&v65[3];
  v21 = swift_allocObject(&unk_1CD908, 72, 7);
  v22 = v2[1];
  v23 = *v2;
  *(_OWORD *)(v21 + 16) = *v2;
  *(_OWORD *)(v21 + 32) = v22;
  *(_OWORD *)(v21 + 48) = v2[2];
  *(_QWORD *)(v21 + 64) = *((_QWORD *)v2 + 6);
  *(_QWORD *)&v53 = v48;
  BYTE8(v53) = v7;
  *(_QWORD *)&v54 = v47;
  BYTE8(v54) = v6;
  *(_QWORD *)&v55 = v46;
  BYTE8(v55) = (_BYTE)v9;
  *(_QWORD *)&v56 = v45;
  BYTE8(v56) = v15;
  *(_QWORD *)&v57 = v44;
  BYTE8(v57) = v16;
  *(_QWORD *)&v58 = v43;
  BYTE8(v58) = v14;
  *(_QWORD *)&v59 = v42;
  *((_QWORD *)&v59 + 1) = v41;
  *(_QWORD *)&v60 = KeyPath;
  *((_QWORD *)&v60 + 1) = v40;
  *((_QWORD *)&v61 + 1) = sub_A1E68;
  v62 = (unint64_t)v21;
  v63 = 0;
  v64 = v23;
  v24 = *((_QWORD *)&v23 + 1);
  v25 = swift_getKeyPath(&unk_16FBF0);
  v26 = swift_getKeyPath(&unk_16FC18);
  sub_24D30((uint64_t)&v64);
  sub_A1E70(v2);
  static Published.subscript.getter(v51, v24, v25, v26);
  swift_release(v25);
  swift_release(v26);
  if (*(_QWORD *)&v51[0] == 1)
  {
    sub_54C10((uint64_t)&v64);
    v27 = 0.0;
  }
  else
  {
    v28 = *((_QWORD *)&v51[0] + 1);
    v27 = *((double *)v51 + 1);
    sub_4375C(*(id *)&v51[0]);
    sub_54C10((uint64_t)&v64);
    if ((~v28 & 0x7FF0000000000000) == 0 && (v28 & 0xFFFFFFFFFFFFFLL) != 0)
      v27 = 0.0;
  }
  v50 = v27;
  v29 = swift_allocObject(&unk_1CD930, 72, 7);
  v30 = v2[1];
  *(_OWORD *)(v29 + 16) = *v2;
  *(_OWORD *)(v29 + 32) = v30;
  *(_OWORD *)(v29 + 48) = v2[2];
  *(_QWORD *)(v29 + 64) = *((_QWORD *)v2 + 6);
  sub_A1E70(v2);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEED8);
  v32 = sub_A1F14();
  View.onChange<A>(of:initial:_:)(&v50, 0, sub_A1EF0, v29, v31, &type metadata for Double, v32, &protocol witness table for Double);
  swift_release(v29);
  v51[8] = v61;
  v51[9] = v62;
  v52 = v63;
  v51[4] = v57;
  v51[5] = v58;
  v51[6] = v59;
  v51[7] = v60;
  v51[0] = v53;
  v51[1] = v54;
  v51[2] = v55;
  v51[3] = v56;
  return sub_A20DC(v51);
}

uint64_t sub_A121C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v2 = static Animation.linear(duration:)(0.8);
  v3 = Animation.delay(_:)((double)*(uint64_t *)(a1 + 16) * 0.06);
  swift_release(v2);
  v6[2] = a1;
  v4 = swift_retain();
  withAnimation<A>(_:_:)(v4, sub_A2140, v6, (char *)&type metadata for () + 8);
  return swift_release_n(v3, 2);
}

uint64_t sub_A12B4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double *v4;
  double v5;
  double v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  double v14;

  v2 = *(_QWORD *)(v1 + 8);
  if ((*(_BYTE *)(v2 + 80) & 1) != 0)
  {
    if ((*(_BYTE *)(v2 + 48) & 1) != 0)
    {
      v3 = 0.0;
      if ((*(_BYTE *)(v2 + 64) & 1) == 0)
        goto LABEL_13;
      goto LABEL_10;
    }
    v4 = (double *)(v2 + 40);
  }
  else
  {
    v4 = (double *)(v2 + 72);
  }
  v5 = *v4;
  if (*(_BYTE *)(v2 + 64) != 1)
  {
    v3 = (v5 - *(double *)(v2 + 56)) / 3.0;
LABEL_13:
    v7 = (double *)(v2 + 56);
    goto LABEL_14;
  }
  v3 = 0.0;
  if ((*(_BYTE *)(v2 + 32) & 1) == 0)
    v3 = (v5 - *(double *)(v2 + 24)) / 3.0;
LABEL_10:
  v6 = 0.0;
  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
    goto LABEL_15;
  v7 = (double *)(v2 + 24);
LABEL_14:
  v6 = *v7;
LABEL_15:
  v8 = a1 - (v6 + v3 * (double)*(uint64_t *)(v1 + 16));
  if (v8 <= 0.0)
    v8 = 0.0;
  v9 = v8 / v3;
  if (v9 <= 1.0)
    v10 = v9;
  else
    v10 = 1.0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE60);
  State.wrappedValue.getter(&v14, v11);
  v12 = v14;
  State.wrappedValue.getter(&v14, v11);
  v14 = v12 + v10 * (1.0 - v14);
  return State.wrappedValue.setter(&v14, v11);
}

uint64_t sub_A1414(__int128 *a1)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  uint64_t v10;
  double v11;
  __int128 v12;

  v12 = *(__int128 *)((char *)a1 + 24);
  v10 = 0x3FB999999999999ALL;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEE60);
  State.wrappedValue.setter(&v10, v2);
  v12 = *a1;
  KeyPath = swift_getKeyPath(&unk_16FBF0);
  v4 = swift_getKeyPath(&unk_16FC18);
  v5 = swift_retain();
  static Published.subscript.getter(&v10, v5, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  if (v10 == 1)
  {
    sub_54C10((uint64_t)&v12);
    v6 = 0.0;
  }
  else
  {
    v7 = v11;
    v8 = v11;
    sub_4375C((id)v10);
    sub_54C10((uint64_t)&v12);
    v6 = 0.0;
    if ((*(_QWORD *)&v7 & 0xFFFFFFFFFFFFFLL) == 0)
      v6 = v8;
    if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
      v6 = v8;
  }
  return sub_A12B4(v6);
}

_QWORD *sub_A1534@<X0>(uint64_t a1@<X8>)
{
  return sub_A0CE4(a1);
}

uint64_t sub_A1574@<X0>(uint64_t a1@<X8>)
{
  return sub_9F8FC(a1);
}

uint64_t sub_A15AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  double *v11;

  v5 = *v2;
  v6 = static UnitPoint.center.getter(a1);
  v8 = v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEF18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEF20);
  v11 = (double *)(a2 + *(int *)(result + 36));
  *(_QWORD *)v11 = v5;
  *((_QWORD *)v11 + 1) = v5;
  v11[2] = v6;
  *((_QWORD *)v11 + 3) = v8;
  return result;
}

uint64_t sub_A1634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEF28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1FEF30);
  *(_QWORD *)(a2 + *(int *)(result + 36)) = v5;
  return result;
}

unint64_t sub_A16A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  result = qword_1FEE28;
  if (!qword_1FEE28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE20);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE10);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE08);
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE00);
    v7 = (void *)sub_A17C0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v6 = v3;
    v7 = &type metadata for Double;
    v8 = OpaqueTypeConformance2;
    v9 = &protocol witness table for Double;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v6 = v2;
    v7 = (void *)v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEE28);
  }
  return result;
}

unint64_t sub_A17C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEE30;
  if (!qword_1FEE30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE00);
    sub_A1844();
    sub_27A8C((unint64_t *)&qword_1FEE48, &qword_1FEE50, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEE30);
  }
  return result;
}

unint64_t sub_A1844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEE38;
  if (!qword_1FEE38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEDF8);
    sub_27A8C(&qword_1FEE40, &qword_1FEDF0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEE38);
  }
  return result;
}

uint64_t sub_A18CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

_QWORD *sub_A18EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[7];
  swift_retain(a1[5]);
  swift_retain(v4);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

void sub_A1944(uint64_t a1, double *a2)
{
  uint64_t v2;

  sub_A09F8(a1, a2, v2 + 16);
}

uint64_t sub_A194C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(*(_QWORD *)(v0 + 16) + 32);
  v3 = 0;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t objectdestroyTm_5()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_A19E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_A076C(a1, (__int128 *)(v2 + 16), a2);
}

unint64_t sub_A19F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEEA0;
  if (!qword_1FEEA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEE98);
    sub_A1A5C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEEA0);
  }
  return result;
}

unint64_t sub_A1A5C()
{
  unint64_t result;

  result = qword_1FEEA8;
  if (!qword_1FEEA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1FEEA8);
  }
  return result;
}

unint64_t sub_A1AA0()
{
  unint64_t result;

  result = qword_1FEEB0;
  if (!qword_1FEEB0)
  {
    result = swift_getWitnessTable(&unk_16FD50, &type metadata for SilentContentView.CircleView);
    atomic_store(result, (unint64_t *)&qword_1FEEB0);
  }
  return result;
}

unint64_t sub_A1AE4()
{
  unint64_t result;

  result = qword_1FEEB8;
  if (!qword_1FEEB8)
  {
    result = swift_getWitnessTable(&unk_16FD00, &type metadata for ScaleEffect);
    atomic_store(result, (unint64_t *)&qword_1FEEB8);
  }
  return result;
}

unint64_t sub_A1B28()
{
  unint64_t result;

  result = qword_1FEEC0;
  if (!qword_1FEEC0)
  {
    result = swift_getWitnessTable(&unk_16FCB0, &type metadata for OpacityEffect);
    atomic_store(result, (unint64_t *)&qword_1FEEC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpacityEffect()
{
  return &type metadata for OpacityEffect;
}

ValueMetadata *type metadata accessor for ScaleEffect()
{
  return &type metadata for ScaleEffect;
}

uint64_t destroy for SilentContentView.CircleView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[4]);
  return swift_release(a1[6]);
}

uint64_t initializeWithCopy for SilentContentView.CircleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

_QWORD *assignWithCopy for SilentContentView.CircleView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = a1[4];
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[5] = a2[5];
  v8 = a1[6];
  v9 = a2[6];
  a1[6] = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for SilentContentView.CircleView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = a1[4];
  a1[4] = a2[4];
  swift_release(v6);
  a1[5] = a2[5];
  v7 = a1[6];
  a1[6] = a2[6];
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SilentContentView.CircleView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SilentContentView.CircleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SilentContentView.CircleView()
{
  return &type metadata for SilentContentView.CircleView;
}

unint64_t sub_A1DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEEC8;
  if (!qword_1FEEC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEED0);
    sub_A16A8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEEC8);
  }
  return result;
}

uint64_t sub_A1E2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A077C, 1);
}

uint64_t sub_A1E3C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A0754, 1);
}

uint64_t sub_A1E4C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A072C, 1);
}

uint64_t sub_A1E68()
{
  uint64_t v0;

  return sub_A121C(v0 + 16);
}

_QWORD *sub_A1E70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[4];
  swift_retain(a1[6]);
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t objectdestroy_21Tm_0()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_A1EF0(uint64_t a1, double *a2)
{
  return sub_A12B4(*a2);
}

unint64_t sub_A1F14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEEE0;
  if (!qword_1FEEE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEED8);
    sub_A1F80();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEEE0);
  }
  return result;
}

unint64_t sub_A1F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEEE8;
  if (!qword_1FEEE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEEF0);
    sub_A1FEC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEEE8);
  }
  return result;
}

unint64_t sub_A1FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEEF8;
  if (!qword_1FEEF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEF00);
    sub_A2070();
    sub_27A8C(&qword_1FAEB0, &qword_1FAEB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEEF8);
  }
  return result;
}

unint64_t sub_A2070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEF08;
  if (!qword_1FEF08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEF10);
    sub_9349C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEF08);
  }
  return result;
}

_QWORD *sub_A20DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[15];
  v3 = a1[17];
  v4 = a1[18];
  v5 = a1[19];
  v6 = a1[20];
  swift_release(a1[14]);
  swift_release(v2);
  sub_145A0(v3, v4);
  sub_145A0(v5, v6);
  return a1;
}

uint64_t sub_A2140()
{
  uint64_t v0;

  return sub_A1414(*(__int128 **)(v0 + 16));
}

uint64_t sub_A2158()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEED8);
  v1[1] = &type metadata for Double;
  v1[2] = sub_A1F14();
  v1[3] = &protocol witness table for Double;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

unint64_t sub_A21BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEF38;
  if (!qword_1FEF38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEF20);
    sub_27A8C(&qword_1FEF40, &qword_1FEF18, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEF38);
  }
  return result;
}

unint64_t sub_A2244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEF48;
  if (!qword_1FEF48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FEF30);
    sub_27A8C(&qword_1FEF50, &qword_1FEF28, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FEF48);
  }
  return result;
}

__n128 sub_A22CC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __n128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;

  KeyPath = swift_getKeyPath(&unk_16FE58);
  v4 = swift_getKeyPath(&unk_16FE80);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v12;
  result = v10;
  v7 = v11;
  v8 = v13;
  *(_QWORD *)a1 = v9;
  *(__n128 *)(a1 + 8) = result;
  *(_OWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

uint64_t sub_A2364()
{
  return sub_A24A8((uint64_t)&unk_16FEE8, (uint64_t)&unk_16FF10);
}

BOOL sub_A2378()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  KeyPath = swift_getKeyPath(&unk_16FE58);
  v2 = swift_getKeyPath(&unk_16FE80);
  static Published.subscript.getter(v14, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v14[0];
  v4 = v15;
  v5 = v16;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  if (v6)
    return 0;
  v8 = swift_getKeyPath(&unk_16FE58);
  v9 = swift_getKeyPath(&unk_16FE80);
  static Published.subscript.getter(v14, v0, v8, v9);
  swift_release(v8);
  swift_release(v9);
  v10 = v14[0];
  v11 = v15;
  v12 = v17;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v11);
  v13 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease(v12);
  return v13 == 0;
}

uint64_t sub_A2494()
{
  return sub_A24A8((uint64_t)&unk_16FEA0, (uint64_t)&unk_16FEC8);
}

uint64_t sub_A24A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_A2510(char a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  Swift::String_optional v11;
  Swift::String_optional v12;
  uint64_t result;
  Swift::String_optional v14;
  Swift::String_optional v15;
  Swift::String_optional v16;
  Swift::String_optional v17;
  double v18;
  double v19;
  double v20;
  float v21;

  v7 = v20 + (static Date.timeIntervalSinceReferenceDate.getter(objc_msgSend(*(id *)v3, "duration")) - v18) * v21;
  if (v7 >= v19)
    v8 = v19;
  else
    v8 = v7;
  if (v8 <= 0.0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = *(void **)(v3 + 56);
    v15.value._countAndFlagsBits = v9;
    v15.value._object = v10;
    v16.value._countAndFlagsBits = a2;
    v16.value._object = a3;
    v17 = Double.durationString(prefix:isExplicit:explicitSymbol:isRTL:abbreviated:)(v15, *(_BYTE *)(v3 + 72), v16, a1 & 1, 1);
    result = v17.value._countAndFlagsBits;
    if (v17.value._object)
      return result;
  }
  else
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = *(void **)(v3 + 56);
    v11.value._countAndFlagsBits = v9;
    v11.value._object = v10;
    v12.value._countAndFlagsBits = a2;
    v12.value._object = a3;
    v14 = Double.shortLowercaseResumeString(prefix:isRTL:isExplicit:explicitSymbol:)(v11, a1 & 1, *(_BYTE *)(v3 + 72), v12);
    result = v14.value._countAndFlagsBits;
    if (v14.value._object)
      return result;
  }
  swift_bridgeObjectRetain(v10);
  return v9;
}

void sub_A2604(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt *v2;
  Swift::UInt v4;
  Swift::UInt v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;

  v2 = v1;
  Hasher._combine(_:)(*v2);
  v4 = v2[1];
  v5 = v2[2];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  sub_A34B4((uint64_t)v2);
  if ((v2[3] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v2[3];
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((v2[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v2[4];
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
}

Swift::Int sub_A2678()
{
  Swift::UInt *v0;
  Swift::UInt *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v1 = v0;
  Hasher.init(_seed:)(v7, 0);
  Hasher._combine(_:)(*v0);
  v2 = v0[1];
  v3 = v1[2];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v7, v2, v3);
  sub_A34B4((uint64_t)v1);
  if ((v1[3] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v1[3];
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((v1[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v1[4];
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_A2710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  char v13;
  _BOOL8 result;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(double *)(a1 + 24);
  v6 = *(double *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v11 = *(double *)(a2 + 24);
  v10 = *(double *)(a2 + 32);
  if (v4 == v8 && v5 == v9)
  {
    if (v7 == v11)
      return v6 == v10;
    return 0;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v8, v9, 0);
  result = 0;
  if ((v13 & 1) != 0 && v7 == v11)
    return v6 == v10;
  return result;
}

Swift::Int sub_A27A0()
{
  return sub_A2678();
}

void sub_A27D8(uint64_t a1)
{
  sub_A2604(a1);
}

Swift::Int sub_A2810(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  _QWORD v10[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  Hasher.init(_seed:)(v10, a1);
  Hasher._combine(_:)(v2);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v10, v3, v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v5;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v6;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  return Hasher._finalize()();
}

void sub_A28A8(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*v1, "contentItemIdentifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_A28FC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_A2F50((uint64_t)v7, (uint64_t)v9) & 1;
}

double sub_A2964()
{
  double result;

  qword_210140 = (uint64_t)&_swiftEmptyArrayStorage;
  result = 0.0;
  unk_210148 = 0u;
  unk_210158 = 0u;
  qword_210168 = 0;
  unk_210170 = &_swiftEmptyArrayStorage;
  qword_210178 = (uint64_t)&_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_A2990(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_A30A4((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_A29D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  v19 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBF98);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__queue;
  if (qword_1F9510 != -1)
    swift_once(&qword_1F9510, sub_A2964);
  v9 = qword_210140;
  v10 = unk_210170;
  v11 = qword_210178;
  v20 = qword_210140;
  v21 = unk_210148;
  v22 = xmmword_210158;
  v23 = qword_210168;
  v24 = unk_210170;
  v25 = qword_210178;
  swift_bridgeObjectRetain(xmmword_210158);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v9);
  Published.init(initialValue:)(&v20, &type metadata for QueueModel);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v0 + v8, v7, v4);
  v12 = v0 + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__isChapterListExpanded;
  v13 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v14 = (char *)objc_msgSend(v13, "userInterfaceIdiom");

  LOBYTE(v20) = v14 == (_BYTE *)&dword_0 + 1;
  Published.init(initialValue:)(&v20, &type metadata for Bool);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
  v15(v12, v3, v1);
  v16 = v0 + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__isLocalPlayback;
  LOBYTE(v20) = 1;
  Published.init(initialValue:)(&v20, &type metadata for Bool);
  v15(v16, v3, v1);
  return v0;
}

uint64_t sub_A2BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__queue;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBF98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__isChapterListExpanded;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__isLocalPlayback, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_A2C98()
{
  return type metadata accessor for QueueViewModel(0);
}

uint64_t type metadata accessor for QueueViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1FEF98;
  if (!qword_1FEF98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for QueueViewModel);
  return result;
}

void sub_A2CDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_41ED0(319, (unint64_t *)&unk_1FEFA8, (uint64_t)&type metadata for QueueModel);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_41ED0(319, (unint64_t *)&qword_2013A0, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_updateClassMetadata2(a1, 256, 3, &v6, a1 + 80);
    }
  }
}

uint64_t destroy for QueueModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t initializeWithCopy for QueueModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  v4 = a2[3];
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  v5 = a2[6];
  v6 = a2[7];
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for QueueModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  v8 = a2[6];
  v9 = a1[6];
  a1[6] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t *assignWithTake for QueueModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v5);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  swift_bridgeObjectRelease(a1[6]);
  v6 = a1[7];
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for QueueModel()
{
  return &type metadata for QueueModel;
}

uint64_t sub_A2F50(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_27330();
  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_13;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = v6 == v8 && v7 == v9;
  if (v10 || (v11 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0) & 1) != 0))
  {
    v12 = *(_QWORD *)(a1 + 48);
    v13 = *(_QWORD *)(a1 + 56);
    v14 = *(_QWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 56);
    v16 = v12 == v14 && v13 == v15;
    if (v16 || (v11 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v14, v15, 0) & 1) != 0))
    {
      if (((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0)
      {
LABEL_13:
        v11 = 0;
        return v11 & 1;
      }
      v18 = objc_msgSend(v4, "contentItemIdentifier");
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v22 = objc_msgSend(v5, "contentItemIdentifier");
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      if (v19 == v23 && v21 == v25)
      {
        v11 = 1;
        v25 = v21;
      }
      else
      {
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v25, 0);
      }
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v25);
    }
  }
  return v11 & 1;
}

uint64_t sub_A30A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;

  if ((sub_15A08(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (!v5 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
      return 0;
    v6 = *(_QWORD *)(a1 + 16);
    v8 = *(double *)(a1 + 32);
    v7 = *(double *)(a1 + 40);
    v9 = *(_QWORD *)(a2 + 16);
    v11 = *(double *)(a2 + 32);
    v10 = *(double *)(a2 + 40);
    if ((v6 != v9 || v4 != v5) && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, v9, v5, 0) & 1) == 0)
      return 0;
    if (v8 != v11 || v7 != v10)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  if ((sub_15B54(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) != 0)
    return sub_15B54(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56));
  return 0;
}

double destroy for QueueModel.Episode(uint64_t a1)
{
  double result;

  sub_1B164(*(void **)(a1 + 8), *(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 80)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for QueueModel.Episode(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = v4;
  sub_1B140(v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for QueueModel.Episode(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1B140(v7, v8, v9);
  v10 = *(void **)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  v12 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v9;
  sub_1B164(v10, v11, v12);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release(v17);
  return a1;
}

uint64_t assignWithTake for QueueModel.Episode(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B164(v6, v7, v8);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueueModel.Episode(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueueModel.Episode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueueModel.Episode()
{
  return &type metadata for QueueModel.Episode;
}

ValueMetadata *type metadata accessor for QueueModel.Chapter()
{
  return &type metadata for QueueModel.Chapter;
}

void *sub_A349C()
{
  return &protocol witness table for Int;
}

void *sub_A34A8()
{
  return &protocol witness table for String;
}

uint64_t sub_A34B4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t MPModelPodcastEpisode.contentId.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  NSObject **v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject **v19;
  uint8_t *v20;
  NSObject *v21;
  uint64_t v22;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MPModelObject.adamID.getter(v5);
  if ((v7 & 1) != 0)
  {
    result = MPModelObject.uuid.getter(result);
    if (!v8)
    {
      static Logger.playback.getter(result);
      v9 = v0;
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.fault.getter(v10);
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(12, -1);
        v19 = (NSObject **)swift_slowAlloc(8, -1);
        v20 = v12;
        v21 = v9;
        *(_DWORD *)v12 = 138412290;
        v13 = v9;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v12 + 4, v12 + 12);
        v14 = v19;
        *v19 = v9;

        v15 = v11;
        v16 = v20;
        _os_log_impl(&dword_0, v10, v15, "Encountered an episode model without an identifier: %@", v20, 0xCu);
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB5A0);
        swift_arrayDestroy(v14, 1, v17);
        swift_slowDealloc(v14, -1, -1);
        swift_slowDealloc(v16, -1, -1);
      }
      else
      {

        v10 = v9;
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return 0;
    }
  }
  return result;
}

uint64_t sub_A36B8(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_A36C8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_A36FC(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_A370C(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1;
  v9 = *a1 + 8;
  if (v6)
    v11 = v6;
  else
    v11 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8, v9);
  *a1 = v9;
  v10 = *a2;
  if (*a2)
  {
    *v10 = v7;
    *a2 = v10 + 1;
  }
  else
  {

  }
}

id sub_A37BC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  Class isa;
  Class v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Class v41;
  id v42;
  unint64_t v43;
  id v44;
  Class v45;
  Class v46;
  id v47;
  unint64_t v48;
  id v49;
  Class v50;
  Class v51;
  id v52;
  unint64_t v53;
  id v54;
  Class v55;
  Class v56;
  id v57;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[56];
  _BYTE v62[80];
  _BYTE v63[64];

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF038);
  inited = swift_initStackObject(v59, v63);
  *(_OWORD *)(inited + 16) = xmmword_16B3D0;
  v60 = inited;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPodcastEpisode);
  *(_QWORD *)(inited + 40) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF040);
  v3 = swift_allocObject(v2, 288, 7);
  *(_OWORD *)(v3 + 16) = xmmword_170050;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeTitle);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeExplicit);
  *(_QWORD *)(v3 + 56) = v5;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeArtwork);
  *(_QWORD *)(v3 + 72) = v6;
  *(_QWORD *)(v3 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeStreamURL);
  *(_QWORD *)(v3 + 88) = v7;
  *(_QWORD *)(v3 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeShareURL);
  *(_QWORD *)(v3 + 104) = v8;
  *(_QWORD *)(v3 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeDuration);
  *(_QWORD *)(v3 + 120) = v9;
  *(_QWORD *)(v3 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeDescriptionText);
  *(_QWORD *)(v3 + 136) = v10;
  *(_QWORD *)(v3 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeHasVideo);
  *(_QWORD *)(v3 + 152) = v11;
  *(_QWORD *)(v3 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeReleaseDateComponents);
  *(_QWORD *)(v3 + 168) = v12;
  *(_QWORD *)(v3 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeSeasonNumber);
  *(_QWORD *)(v3 + 184) = v13;
  *(_QWORD *)(v3 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeNumber);
  *(_QWORD *)(v3 + 200) = v14;
  *(_QWORD *)(v3 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeType);
  *(_QWORD *)(v3 + 216) = v15;
  *(_QWORD *)(v3 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodePriceType);
  *(_QWORD *)(v3 + 232) = v16;
  *(_QWORD *)(v3 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeTranscriptIdentifier);
  *(_QWORD *)(v3 + 248) = v17;
  *(_QWORD *)(v3 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeTranscriptSource);
  *(_QWORD *)(v3 + 264) = v18;
  *(_QWORD *)(v3 + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastEpisodeChapters);
  *(_QWORD *)(v3 + 280) = v19;
  v20 = swift_initStackObject(v59, v62);
  *(_OWORD *)(v20 + 16) = xmmword_16E1B0;
  *(_QWORD *)(v20 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPodcastEpisodeAuthor);
  *(_QWORD *)(v20 + 40) = v21;
  v22 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_16B3D0;
  v23 = MPModelPropertyPodcastAuthorName;
  *(_QWORD *)(v22 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastAuthorName);
  *(_QWORD *)(v22 + 40) = v24;
  v25 = sub_CA27C((uint64_t)_swiftEmptyArrayStorage);
  v26 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
  sub_A3D4C();
  v28 = Dictionary._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v26, "initWithProperties:relationships:", isa, v28, swift_bridgeObjectRelease(v25).n128_f64[0]);

  *(_QWORD *)(v20 + 48) = v29;
  *(_QWORD *)(v20 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPodcastEpisodePodcast);
  *(_QWORD *)(v20 + 64) = v30;
  v31 = swift_allocObject(v2, 112, 7);
  *(_OWORD *)(v31 + 16) = xmmword_170060;
  *(_QWORD *)(v31 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastTitle);
  *(_QWORD *)(v31 + 40) = v32;
  *(_QWORD *)(v31 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastShareURL);
  *(_QWORD *)(v31 + 56) = v33;
  *(_QWORD *)(v31 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastSupportsSubscription);
  *(_QWORD *)(v31 + 72) = v34;
  *(_QWORD *)(v31 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastFeedURL);
  *(_QWORD *)(v31 + 88) = v35;
  *(_QWORD *)(v31 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPodcastSortType);
  *(_QWORD *)(v31 + 104) = v36;
  v37 = swift_initStackObject(v59, v61);
  *(_OWORD *)(v37 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v37 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPodcastAuthor);
  *(_QWORD *)(v37 + 40) = v38;
  v39 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v39 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  *(_QWORD *)(v39 + 40) = v40;
  v41 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  v42 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v41);

  *(_QWORD *)(v37 + 48) = v42;
  v43 = sub_CA27C(v37);
  v44 = objc_allocWithZone((Class)MPPropertySet);
  v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v31);
  v46 = Dictionary._bridgeToObjectiveC()().super.isa;
  v47 = objc_msgSend(v44, "initWithProperties:relationships:", v45, v46, swift_bridgeObjectRelease(v43).n128_f64[0]);

  *(_QWORD *)(v20 + 72) = v47;
  v48 = sub_CA27C(v20);
  v49 = objc_allocWithZone((Class)MPPropertySet);
  v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  v51 = Dictionary._bridgeToObjectiveC()().super.isa;
  v52 = objc_msgSend(v49, "initWithProperties:relationships:", v50, v51, swift_bridgeObjectRelease(v48).n128_f64[0]);

  *(_QWORD *)(v60 + 48) = v52;
  v53 = sub_CA27C(v60);
  v54 = objc_allocWithZone((Class)MPPropertySet);
  v55 = Array._bridgeToObjectiveC()().super.isa;
  v56 = Dictionary._bridgeToObjectiveC()().super.isa;
  v57 = objc_msgSend(v54, "initWithProperties:relationships:", v55, v56, swift_bridgeObjectRelease(v53).n128_f64[0]);

  return v57;
}

unint64_t sub_A3D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FF048;
  if (!qword_1FF048)
  {
    v1 = objc_opt_self(MPPropertySet);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FF048);
  }
  return result;
}

uint64_t AssetIdentifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_A3DC8 + 4 * word_170074[a1]))(0xD000000000000016, 0x8000000000182700);
}

uint64_t sub_A3DC8()
{
  uint64_t v0;

  return v0 + 6;
}

uint64_t sub_A45CC()
{
  return 0x6261546F69646152;
}

uint64_t sub_A45EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = AssetIdentifier.rawValue.getter(*a1);
  v5 = v4;
  v6 = AssetIdentifier.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_A4674()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = AssetIdentifier.rawValue.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_A46D4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = AssetIdentifier.rawValue.getter(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_A4714(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = AssetIdentifier.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_A4770@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s12NowPlayingUI15AssetIdentifierO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_A479C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = AssetIdentifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s12NowPlayingUI15AssetIdentifierO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1C5998, a1, a2, &unk_1F96D0);
  swift_bridgeObjectRelease(a2);
  v4 = 0;
  result = 15;
  switch(v3)
  {
    case 0:
      goto LABEL_17;
    case 1:
      v4 = 1;
      goto LABEL_17;
    case 2:
      v4 = 2;
      goto LABEL_17;
    case 3:
      v4 = 3;
      goto LABEL_17;
    case 4:
      v4 = 4;
      goto LABEL_17;
    case 5:
      v4 = 5;
      goto LABEL_17;
    case 6:
      v4 = 6;
      goto LABEL_17;
    case 7:
      v4 = 7;
      goto LABEL_17;
    case 8:
      v4 = 8;
      goto LABEL_17;
    case 9:
      v4 = 9;
      goto LABEL_17;
    case 10:
      v4 = 10;
      goto LABEL_17;
    case 11:
      v4 = 11;
      goto LABEL_17;
    case 12:
      v4 = 12;
      goto LABEL_17;
    case 13:
      v4 = 13;
      goto LABEL_17;
    case 14:
      v4 = 14;
LABEL_17:
      result = v4;
      break;
    case 15:
      return result;
    case 16:
      result = 16;
      break;
    case 17:
      result = 17;
      break;
    case 18:
      result = 18;
      break;
    case 19:
      result = 19;
      break;
    case 20:
      result = 20;
      break;
    case 21:
      result = 21;
      break;
    case 22:
      result = 22;
      break;
    case 23:
      result = 23;
      break;
    case 24:
      result = 24;
      break;
    case 25:
      result = 25;
      break;
    case 26:
      result = 26;
      break;
    case 27:
      result = 27;
      break;
    case 28:
      result = 28;
      break;
    case 29:
      result = 29;
      break;
    case 30:
      result = 30;
      break;
    case 31:
      result = 31;
      break;
    case 32:
      result = 32;
      break;
    case 33:
      result = 33;
      break;
    case 34:
      result = 34;
      break;
    case 35:
      result = 35;
      break;
    case 36:
      result = 36;
      break;
    case 37:
      result = 37;
      break;
    case 38:
      result = 38;
      break;
    case 39:
      result = 39;
      break;
    case 40:
      result = 40;
      break;
    case 41:
      result = 41;
      break;
    case 42:
      result = 42;
      break;
    case 43:
      result = 43;
      break;
    case 44:
      result = 44;
      break;
    case 45:
      result = 45;
      break;
    case 46:
      result = 46;
      break;
    case 47:
      result = 47;
      break;
    case 48:
      result = 48;
      break;
    case 49:
      result = 49;
      break;
    case 50:
      result = 50;
      break;
    case 51:
      result = 51;
      break;
    case 52:
      result = 52;
      break;
    case 53:
      result = 53;
      break;
    case 54:
      result = 54;
      break;
    case 55:
      result = 55;
      break;
    case 56:
      result = 56;
      break;
    case 57:
      result = 57;
      break;
    case 58:
      result = 58;
      break;
    case 59:
      result = 59;
      break;
    case 60:
      result = 60;
      break;
    case 61:
      result = 61;
      break;
    case 62:
      result = 62;
      break;
    case 63:
      result = 63;
      break;
    case 64:
      result = 64;
      break;
    case 65:
      result = 65;
      break;
    case 66:
      result = 66;
      break;
    case 67:
      result = 67;
      break;
    case 68:
      result = 68;
      break;
    case 69:
      result = 69;
      break;
    case 70:
      result = 70;
      break;
    case 71:
      result = 71;
      break;
    case 72:
      result = 72;
      break;
    case 73:
      result = 73;
      break;
    case 74:
      result = 74;
      break;
    case 75:
      result = 75;
      break;
    case 76:
      result = 76;
      break;
    case 77:
      result = 77;
      break;
    case 78:
      result = 78;
      break;
    case 79:
      result = 79;
      break;
    case 80:
      result = 80;
      break;
    case 81:
      result = 81;
      break;
    case 82:
      result = 82;
      break;
    case 83:
      result = 83;
      break;
    case 84:
      result = 84;
      break;
    case 85:
      result = 85;
      break;
    case 86:
      result = 86;
      break;
    case 87:
      result = 87;
      break;
    case 88:
      result = 88;
      break;
    case 89:
      result = 89;
      break;
    case 90:
      result = 90;
      break;
    case 91:
      result = 91;
      break;
    case 92:
      result = 92;
      break;
    case 93:
      result = 93;
      break;
    case 94:
      result = 94;
      break;
    case 95:
      result = 95;
      break;
    case 96:
      result = 96;
      break;
    case 97:
      result = 97;
      break;
    case 98:
      result = 98;
      break;
    case 99:
      result = 99;
      break;
    case 100:
      result = 100;
      break;
    case 101:
      result = 101;
      break;
    case 102:
      result = 102;
      break;
    case 103:
      result = 103;
      break;
    case 104:
      result = 104;
      break;
    case 105:
      result = 105;
      break;
    case 106:
      result = 106;
      break;
    case 107:
      result = 107;
      break;
    case 108:
      result = 108;
      break;
    case 109:
      result = 109;
      break;
    case 110:
      result = 110;
      break;
    case 111:
      result = 111;
      break;
    case 112:
      result = 112;
      break;
    case 113:
      result = 113;
      break;
    case 114:
      result = 114;
      break;
    case 115:
      result = 115;
      break;
    case 116:
      result = 116;
      break;
    case 117:
      result = 117;
      break;
    case 118:
      result = 118;
      break;
    case 119:
      result = 119;
      break;
    case 120:
      result = 120;
      break;
    case 121:
      result = 121;
      break;
    case 122:
      result = 122;
      break;
    default:
      result = 123;
      break;
  }
  return result;
}

unint64_t sub_A4C04()
{
  unint64_t result;

  result = qword_1FF050;
  if (!qword_1FF050)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AssetIdentifier, &type metadata for AssetIdentifier);
    atomic_store(result, (unint64_t *)&qword_1FF050);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AssetIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0x86)
    goto LABEL_17;
  if (a2 + 122 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 122) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 122;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 122;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 122;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x7B;
  v8 = v6 - 123;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 122 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 122) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x86)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x85)
    return ((uint64_t (*)(void))((char *)&loc_A4D24 + 4 * byte_1701EA[v4]))();
  *a1 = a2 + 122;
  return ((uint64_t (*)(void))((char *)sub_A4D58 + 4 * byte_1701E5[v4]))();
}

uint64_t sub_A4D58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A4D60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA4D68);
  return result;
}

uint64_t sub_A4D74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA4D7CLL);
  *(_BYTE *)result = a2 + 122;
  return result;
}

uint64_t sub_A4D80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A4D88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetIdentifier()
{
  return &type metadata for AssetIdentifier;
}

_QWORD *sub_A4DA4(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  __int128 *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v14 = _swiftEmptyArrayStorage;
    sub_A9ADC(0, v1, 0);
    v4 = (__int128 *)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      v12 = *v4;
      v5 = (id)v12;
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF588);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF570);
      swift_dynamicCast(&v13, &v12, v6, v7, 7);
      v11 = v13;

      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_A9ADC(0, v2[2] + 1, 1);
        v2 = v14;
      }
      v9 = v2[2];
      v8 = v2[3];
      if (v9 >= v8 >> 1)
      {
        sub_A9ADC(v8 > 1, v9 + 1, 1);
        v2 = v14;
      }
      v2[2] = v9 + 1;
      *(_OWORD *)&v2[2 * v9 + 4] = v11;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_A4EEC(uint64_t a1)
{
  return sub_A4F08(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_A9AB0, &qword_1FF570, &qword_1FF578);
}

_QWORD *sub_A4F08(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v5;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    v20 = _swiftEmptyArrayStorage;
    a2(0, v4, 0);
    v10 = (__int128 *)(a1 + 32);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v18 = *v10;
      v11 = v18;
      swift_unknownObjectRetain_n(v18, 2);
      v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
      v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
      swift_dynamicCast(&v19, &v18, v12, v13, 7);
      v17 = v19;
      swift_unknownObjectRelease(v11);
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      {
        a2(0, v5[2] + 1, 1);
        v5 = v20;
      }
      v15 = v5[2];
      v14 = v5[3];
      if (v15 >= v14 >> 1)
      {
        a2(v14 > 1, v15 + 1, 1);
        v5 = v20;
      }
      v5[2] = v15 + 1;
      *(_OWORD *)&v5[2 * v15 + 4] = v17;
      ++v10;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_A5050(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_A9BB4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_A9BB4(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_A9BB4(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_ECEC(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_A9BB4(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_A9BB4(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_ECEC(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_A52B0(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  id v11;
  _OWORD v12[2];
  _QWORD *v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v13 = _swiftEmptyArrayStorage;
    sub_A9BB4(0, v1, 0);
    v4 = (id *)(a1 + 32);
    type metadata accessor for ActivityType(0);
    v6 = v5;
    do
    {
      v11 = *v4;
      v7 = v11;
      swift_dynamicCast(v12, &v11, v6, (char *)&type metadata for Any + 8, 7);
      v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_A9BB4(0, v2[2] + 1, 1);
        v2 = v13;
      }
      v9 = v2[2];
      v8 = v2[3];
      if (v9 >= v8 >> 1)
      {
        sub_A9BB4(v8 > 1, v9 + 1, 1);
        v2 = v13;
      }
      v2[2] = v9 + 1;
      sub_ECEC(v12, &v2[4 * v9 + 4]);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_A53D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_134738(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_A5528(uint64_t a1)
{
  return sub_A5AC4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_AAEF4);
}

void sub_A5534(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_135348(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1FF570);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_A5694(uint64_t a1)
{
  return sub_A5AC4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_AB108);
}

void sub_A56A0(uint64_t a1)
{
  char **v1;
  unint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_135490(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[16 * v9 + 32];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1FF620);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_A580C(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_13537C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_A5950(uint64_t a1)
{
  return sub_A5AC4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_AB744);
}

void sub_A595C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_135A54(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_A5AB8(uint64_t a1)
{
  return sub_A5AC4(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_AB948);
}

uint64_t sub_A5AC4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8));
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8)) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t NowPlayingContextActionConfiguration.__allocating_init(asPartOf:playerResponseItem:modelObject:presentationSource:performPreviewActionBlock:interactionContext:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;

  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v15 = sub_AC0BC(a1, a2, a3, a4, a5, a6, a7);
  sub_145A0(a5, a6);

  return v15;
}

UIViewController_optional __swiftcall ContextActionsConfiguration.previewViewController()()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  UIViewController_optional result;

  v1 = v0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v21, 0, 0);
  v2 = (objc_class *)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v17, (uint64_t *)&unk_1FC7F0);
  if (!v17[0])
    goto LABEL_16;
  sub_DF78((uint64_t)&v18, (uint64_t)v22);
  sub_4AE24((uint64_t)v17);
  v4 = v23;
  v5 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0(v22);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = v6 + 32;
    while (1)
    {
      sub_DF78(v9, (uint64_t)v17);
      v10 = v19;
      v11 = v20;
      __swift_project_boxed_opaque_existential_1(v17, v19);
      v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain(v6);
      v13 = (void *)v12(v1, v10, v11);
      __swift_destroy_boxed_opaque_existential_0(v17);
      swift_bridgeObjectRelease(v6);

      if (v13)
        break;
      ++v8;
      v9 += 40;
      if (v7 == v8)
        goto LABEL_10;
    }
    if (v7 != v8)
    {
      if (v8 < *(_QWORD *)(v6 + 16))
      {
        sub_DF78(v9, (uint64_t)v17);
        v15 = v19;
        v16 = v20;
        __swift_project_boxed_opaque_existential_1(v17, v19);
        v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v1, v15, v16);
        v2 = (objc_class *)__swift_destroy_boxed_opaque_existential_0(v17);
        if (v14)
        {
          swift_release(v1);
          swift_bridgeObjectRelease(v6);
          goto LABEL_11;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
  }
LABEL_10:
  swift_release(v1);
  swift_bridgeObjectRelease(v6);
  v14 = 0;
LABEL_11:
  v2 = (objc_class *)v14;
LABEL_18:
  result.value.super.super.isa = v2;
  result.is_nil = v3;
  return result;
}

UIMenu __swiftcall ContextActionsConfiguration.menu(extraContextMenuElements:)(Swift::OpaquePointer extraContextMenuElements)
{
  uint64_t v1;
  uint64_t v2;
  UIMenu result;
  uint64_t v4;
  uint64_t v5;
  UIMenuElementSize v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  UIMenuElementSize v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Class isa;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  UIMenuElementSize v39;
  NSString *v40;
  uint64_t v41;
  UIMenuElementSize v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSString *v48;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v50;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  UIMenuElementSize v55[2];
  _BYTE v56[96];
  _BYTE v57[24];
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  UIImage_optional v61;
  UIImage_optional v62;

  v2 = v1;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v57, 0, 0);
  result.super.super.isa = (Class)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v55, (uint64_t *)&unk_1FC7F0);
  if (v55[0] == UIMenuElementSizeSmall)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  sub_DF78((uint64_t)v56, (uint64_t)v58);
  sub_4AE24((uint64_t)v55);
  v4 = v59;
  v5 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  result.super.super.isa = (Class)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v55, (uint64_t *)&unk_1FC7F0);
  if (v55[0] == UIMenuElementSizeSmall)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  sub_DF78((uint64_t)v56, (uint64_t)v52);
  sub_4AE24((uint64_t)v55);
  v7 = v53;
  v8 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  v10 = sub_A4F08(v9, (void (*)(BOOL, uint64_t, uint64_t))sub_A9B88, &qword_1FF628, &qword_1FF620);
  swift_bridgeObjectRelease(v9);
  v55[0] = v6;
  sub_A56A0((uint64_t)v10);
  v11 = v55[0];
  __swift_destroy_boxed_opaque_existential_0(v52);
  __swift_destroy_boxed_opaque_existential_0(v58);
  swift_retain();
  v12 = (int64_t)sub_ABE9C(v11, v2);
  swift_bridgeObjectRelease(v11);
  swift_release(v2);
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v45 = v12;
    else
      v45 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
  }
  if (v13)
  {
    v55[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
    result.super.super.isa = (Class)sub_A9A94(0, v13 & ~(v13 >> 63), 0);
    if ((v13 & 0x8000000000000000) == 0)
    {
      v14 = 0;
      v15 = (_QWORD *)v55[0];
      do
      {
        if ((v12 & 0xC000000000000001) != 0)
          v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
        else
          v16 = *(id *)(v12 + 8 * v14 + 32);
        v17 = v16;
        v18 = objc_msgSend(v16, "identifier");
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        v55[0] = (UIMenuElementSize)v15;
        v23 = v15[2];
        v22 = v15[3];
        if (v23 >= v22 >> 1)
        {
          sub_A9A94(v22 > 1, v23 + 1, 1);
          v15 = (_QWORD *)v55[0];
        }
        ++v14;
        v15[2] = v23 + 1;
        v24 = &v15[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
      }
      while (v13 != v14);
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_41;
  }
  v15 = _swiftEmptyArrayStorage;
LABEL_18:
  v25 = sub_A74F0(v15, v12);
  swift_bridgeObjectRelease(v12);
  v26 = swift_bridgeObjectRelease(v15);
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    v55[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v27, v26);
    sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
    v28 = 0;
    do
    {
      v29 = *(_QWORD *)(v25 + 8 * v28 + 32);
      if ((unint64_t)v29 >> 62)
      {
        if (v29 < 0)
          v37 = *(_QWORD *)(v25 + 8 * v28 + 32);
        else
          v37 = v29 & 0xFFFFFFFFFFFFFF8;
        v38 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
        swift_bridgeObjectRetain(v29);
        v31 = _bridgeCocoaArray<A>(_:)(v37, v38);
      }
      else
      {
        v30 = swift_bridgeObjectRetain_n(*(_QWORD *)(v25 + 8 * v28 + 32), 2);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v30);
        sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
        v31 = v29;
      }
      ++v28;
      preferredElementSize = v31;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v61.value.super.isa = 0;
      v61.is_nil = 0;
      isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v61, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v50).super.super.isa;
      swift_bridgeObjectRelease(v29);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      v35 = *(_QWORD *)(v55[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
      v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, isa);
      specialized ContiguousArray._endMutation()(v36);
    }
    while (v27 != v28);
    v39 = v55[0];
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    swift_bridgeObjectRelease(v25);
    v39 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < UIMenuElementSizeSmall)
      v46 = v39;
    else
      v46 = v39 & 0xFFFFFFFFFFFFFF8;
    v47 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v48 = UIMenuRoot;
    swift_bridgeObjectRetain(v39);
    v42 = _bridgeCocoaArray<A>(_:)(v46, v47);
    swift_bridgeObjectRelease(v39);
  }
  else
  {
    v40 = UIMenuRoot;
    v41 = swift_bridgeObjectRetain(v39);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v41);
    sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v42 = v39;
  }
  swift_bridgeObjectRelease(v39);
  sub_F174(0, (unint64_t *)&qword_1FD540, UIMenu_ptr);
  v55[0] = v42;
  v43 = swift_bridgeObjectRetain(extraContextMenuElements._rawValue);
  sub_A5AC4(v43, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_AB31C);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v62.value.super.isa = 0;
  v62.is_nil = (char)UIMenuRoot;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v62, 0, 0xFFFFFFFFFFFFFFFFLL, v55[0], v50);
}

UIViewController_optional __swiftcall ContextActionsConfiguration.shareSheet()()
{
  objc_class *v0;
  _BOOL8 v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  UIViewController_optional result;

  v0 = (objc_class *)ContextActionsConfiguration.firstShareAction()();
  if (v0)
  {
    v2 = v0;
    v3 = v1;
    ObjectType = swift_getObjectType(v0);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(1, ObjectType, v3);
    swift_unknownObjectRelease(v2);
    v0 = (objc_class *)v5;
  }
  result.is_nil = v1;
  result.value.super.super.isa = v0;
  return result;
}

Swift::tuple_OpaquePointer_OpaquePointer __swiftcall ContextActionsConfiguration.transcriptSelectionActions()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  double v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char v65;
  double v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::tuple_OpaquePointer_OpaquePointer result;
  unint64_t v84;
  _QWORD v85[2];
  uint64_t v86;
  _BYTE v87[24];
  _QWORD v88[3];
  uint64_t v89;
  uint64_t v90;

  v1 = v0;
  if (qword_1F96B8 != -1)
    goto LABEL_78;
LABEL_2:
  swift_beginAccess(&static NowPlayingDataProvider.shared, v87, 0, 0);
  v2 = (void *)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v85, (uint64_t *)&unk_1FC7F0);
  if (!v85[0])
  {
    __break(1u);
    goto LABEL_96;
  }
  sub_DF78((uint64_t)&v86, (uint64_t)v88);
  sub_4AE24((uint64_t)v85);
  v4 = v89;
  v5 = v90;
  __swift_project_boxed_opaque_existential_1(v88, v89);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 48))(v4, v5);
  __swift_destroy_boxed_opaque_existential_0(v88);
  swift_retain();
  v7 = (uint64_t)sub_ABE9C(v6, v1);
  swift_bridgeObjectRelease(v6);
  swift_release(v1);
  v8 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
  if (swift_dynamicCastClass(v1, v8))
  {
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v76 = v7;
      else
        v76 = v7 & 0xFFFFFFFFFFFFFF8;
      v77 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v7);
      v78 = _bridgeCocoaArray<A>(_:)(v76, v77);
      swift_bridgeObjectRelease_n(v7, 2);
      v10 = _swiftEmptyArrayStorage;
      v7 = v78;
    }
    else
    {
      v9 = swift_bridgeObjectRetain(v7);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
      sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
      swift_bridgeObjectRelease(v7);
      v10 = _swiftEmptyArrayStorage;
    }
    goto LABEL_91;
  }
  v85[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v79 = v7;
    else
      v79 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v11 = _CocoaArrayWrapper.endIndex.getter(v79);
    if (!v11)
    {
LABEL_87:
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v7);
      v7 = (uint64_t)_swiftEmptyArrayStorage;
      v75 = (unint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_92;
      goto LABEL_88;
    }
  }
  else
  {
    v11 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v7);
    if (!v11)
      goto LABEL_87;
  }
  v12 = v7 & 0xC000000000000001;
  v13 = 4;
  do
  {
    v1 = v13 - 4;
    if (v12)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v7);
    else
      v14 = *(id *)(v7 + 8 * v13);
    v15 = v14;
    v16 = v13 - 3;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      swift_once(&qword_1F96B8, sub_15D030);
      goto LABEL_2;
    }
    v17 = objc_msgSend(v14, "identifier");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    if (v18 == 0xD000000000000025 && v20 == 0x8000000000182180)
    {
      swift_bridgeObjectRelease(v7);
      v22 = 0x8000000000182180;
      goto LABEL_20;
    }
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, 0xD000000000000025, 0x8000000000182180, 0);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0)
    {
      v22 = v7;
LABEL_20:
      swift_bridgeObjectRelease(v22);
      v23 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v25 = *(_QWORD *)((char *)&dword_10 + (v85[0] & 0xFFFFFFFFFFFFFF8));
      v24 = *(_QWORD *)((char *)&dword_18 + (v85[0] & 0xFFFFFFFFFFFFFF8));
      if (v25 >= v24 >> 1)
        goto LABEL_94;
      goto LABEL_21;
    }

    ++v13;
  }
  while (v16 != v11);
  while (1)
  {
    v27 = 4;
    while (1)
    {
      v1 = v27 - 4;
      if (v12)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27 - 4, v7);
      else
        v28 = *(id *)(v7 + 8 * v27);
      v29 = v28;
      v30 = v27 - 3;
      if (__OFADD__(v1, 1))
        goto LABEL_76;
      v31 = objc_msgSend(v28, "identifier");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      if (v32 == 0xD00000000000002ALL && v34 == 0x8000000000182600)
      {
        swift_bridgeObjectRelease(v7);
        v36 = 0x8000000000182600;
        goto LABEL_34;
      }
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, 0xD00000000000002ALL, 0x8000000000182600, 0);
      swift_bridgeObjectRelease(v34);
      if ((v35 & 1) != 0)
        break;

      ++v27;
      if (v30 == v11)
        goto LABEL_37;
    }
    v36 = v7;
LABEL_34:
    swift_bridgeObjectRelease(v36);
    v37 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
    v39 = *(_QWORD *)((char *)&dword_10 + (v85[0] & 0xFFFFFFFFFFFFFF8));
    v38 = *(_QWORD *)((char *)&dword_18 + (v85[0] & 0xFFFFFFFFFFFFFF8));
    if (v39 >= v38 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
    v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
    specialized Array._endMutation()(v40);

    swift_bridgeObjectRetain(v7);
LABEL_37:
    v41 = 4;
    while (1)
    {
      v1 = v41 - 4;
      if (v12)
        v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41 - 4, v7);
      else
        v42 = *(id *)(v7 + 8 * v41);
      v43 = v42;
      v44 = v41 - 3;
      if (__OFADD__(v1, 1))
        goto LABEL_77;
      v45 = objc_msgSend(v42, "identifier");
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v23 = v47;

      if (v46 == 0xD00000000000001FLL && v23 == (id)0x8000000000182510)
      {
        swift_bridgeObjectRelease(v7);
        v48 = 0x8000000000182510;
        goto LABEL_49;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v23, 0xD00000000000001FLL, 0x8000000000182510, 0);
      swift_bridgeObjectRelease(v23);
      if ((v25 & 1) != 0)
        break;

      ++v41;
      if (v44 == v11)
      {
        swift_bridgeObjectRelease(v7);
        goto LABEL_52;
      }
    }
    v48 = v7;
LABEL_49:
    swift_bridgeObjectRelease(v48);
    v23 = v43;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((char *)&dword_10 + (v85[0] & 0xFFFFFFFFFFFFFF8));
    v49 = *(_QWORD *)((char *)&dword_18 + (v85[0] & 0xFFFFFFFFFFFFFF8));
    if (v25 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v25 + 1, 1);
    v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v50);

LABEL_52:
    v88[0] = _swiftEmptyArrayStorage;
    if (v11 >= 1)
      break;
    __break(1u);
LABEL_94:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
LABEL_21:
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v26);

    swift_bridgeObjectRetain(v7);
  }
  v51 = 0;
  v84 = 0x8000000000182510;
  while (2)
  {
    if (v12)
      v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v7);
    else
      v52 = *(id *)(v7 + 8 * v51 + 32);
    v53 = v52;
    v54 = objc_msgSend(v52, "identifier", v84);
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    if (v55 == 0xD000000000000025 && v57 == 0x8000000000182180)
    {

      swift_bridgeObjectRelease(0x8000000000182180);
      goto LABEL_55;
    }
    v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v57, 0xD000000000000025, 0x8000000000182180, 0);
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    if ((v58 & 1) != 0)
      goto LABEL_54;
    v60 = objc_msgSend(v53, "identifier", v59);
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v63 = v62;

    if (v61 == 0xD00000000000002ALL && v63 == 0x8000000000182600)
    {

      v64 = "ts.CopyOtherLink";
      goto LABEL_70;
    }
    v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, 0xD00000000000002ALL, 0x8000000000182600, 0);
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v63).n128_u64[0];
    if ((v65 & 1) != 0)
    {
LABEL_54:

      goto LABEL_55;
    }
    v67 = objc_msgSend(v53, "identifier", v66);
    v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v70 = v69;

    if (v68 != 0xD00000000000001FLL || v70 != v84)
    {
      v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v70, 0xD00000000000001FLL, 0x8000000000182510, 0);
      swift_bridgeObjectRelease(v70);
      if ((v71 & 1) == 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v72);
        v73 = *(_QWORD *)(v88[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v73);
        v74 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v53);
        specialized ContiguousArray._endMutation()(v74);
        goto LABEL_55;
      }
      goto LABEL_54;
    }

    v64 = "ts.UndoSuggestLess";
LABEL_70:
    swift_bridgeObjectRelease((unint64_t)v64 | 0x8000000000000000);
LABEL_55:
    if (v11 != ++v51)
      continue;
    break;
  }
  swift_bridgeObjectRelease(v7);
  v75 = v88[0];
  v7 = v85[0];
  if ((v88[0] & 0x8000000000000000) != 0)
  {
LABEL_92:
    v81 = sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    v82 = swift_bridgeObjectRetain(v75);
    v10 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v82, v81);
    swift_release(v75);
    goto LABEL_90;
  }
LABEL_88:
  if ((v75 & 0x4000000000000000) != 0)
    goto LABEL_92;
  v80 = swift_bridgeObjectRetain(v75);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v80);
  sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
  v10 = (_QWORD *)v75;
LABEL_90:
  swift_release(v75);
LABEL_91:
  v2 = (void *)v7;
  v3 = v10;
LABEL_96:
  result._1._rawValue = v3;
  result._0._rawValue = v2;
  return result;
}

uint64_t ContextActionsConfiguration.__allocating_init(asPartOf:presentationSource:previewModel:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v9 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v10 = v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  v11 = type metadata accessor for PresentationSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v9 + 16) = a1;
  v13 = v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v18, 33, 0);
  sub_AC358(a2, v13, &qword_1FD4B0);
  swift_endAccess(v18);
  v14 = v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  swift_beginAccess(v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, v18, 33, 0);
  sub_AC358(a3, v14, &qword_1FF068);
  swift_endAccess(v18);
  v15 = v9 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v16 = type metadata accessor for InteractionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a4, v16);
  return v9;
}

uint64_t ContextActionsConfiguration.init(asPartOf:presentationSource:previewModel:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v9 = v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  v10 = type metadata accessor for PresentationSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v4 + 16) = a1;
  v12 = v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v17, 33, 0);
  sub_AC358(a2, v12, &qword_1FD4B0);
  swift_endAccess(v17);
  v13 = v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  swift_beginAccess(v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, v17, 33, 0);
  sub_AC358(a3, v13, &qword_1FF068);
  swift_endAccess(v17);
  v14 = v4 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v15 = type metadata accessor for InteractionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a4, v15);
  return v4;
}

uint64_t ContextActionsConfiguration.presentationSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_2808C(v3, a1, &qword_1FD4B0);
}

uint64_t ContextActionsConfiguration.presentationSource.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(v3, v5, 33, 0);
  sub_AC358(a1, v3, &qword_1FD4B0);
  return swift_endAccess(v5);
}

uint64_t (*ContextActionsConfiguration.presentationSource.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ContextActionsConfiguration.previewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_2808C(v3, a1, &qword_1FF068);
}

uint64_t ContextActionsConfiguration.previewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  swift_beginAccess(v3, v5, 33, 0);
  sub_AC358(a1, v3, &qword_1FF068);
  return swift_endAccess(v5);
}

uint64_t (*ContextActionsConfiguration.previewModel.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ContextActionsConfiguration.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for InteractionContext(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContextActionsConfiguration.context.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  swift_beginAccess(v3, v6, 33, 0);
  v4 = type metadata accessor for InteractionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*ContextActionsConfiguration.context.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ContextActionsConfiguration.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, &qword_1FD4B0);
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, &qword_1FF068);
  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v2 = type metadata accessor for InteractionContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ContextActionsConfiguration.__deallocating_deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, &qword_1FD4B0);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, &qword_1FF068);
  v1 = (char *)v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v2 = type metadata accessor for InteractionContext(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t ContextActions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  _QWORD v3[2];
  uint64_t v4;
  _BYTE v5[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v5, 0, 0);
  result = sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v3, (uint64_t *)&unk_1FC7F0);
  if (v3[0])
  {
    sub_DF78((uint64_t)&v4, a1);
    return sub_4AE24((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A74F0(_QWORD *a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;
  _QWORD *v11;
  uint64_t *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v2 = (unint64_t)_swiftEmptyArrayStorage;
  v67 = (uint64_t)_swiftEmptyArrayStorage;
  v3 = a1[2];
  if (!v3)
  {
    v12 = _swiftEmptyDictionarySingleton;
    v11 = _swiftEmptyArrayStorage;
    goto LABEL_41;
  }
  v4 = a2;
  isUniquelyReferenced_nonNull_native = (unint64_t)a1;
  v7 = a1[4];
  v6 = (uint64_t *)a1[5];
  if (a2 >> 62)
    goto LABEL_36;
  v8 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  if (!v8)
    goto LABEL_40;
LABEL_4:
  v9 = 0;
  v56 = isUniquelyReferenced_nonNull_native;
  v57 = v4 + 32;
  --v3;
  v62 = v8 - 1;
  v64 = v4 & 0xC000000000000001;
  v10 = (uint64_t **)(isUniquelyReferenced_nonNull_native + 56);
  v11 = _swiftEmptyArrayStorage;
  v12 = _swiftEmptyDictionarySingleton;
  v58 = v3;
  v59 = v4;
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_5:
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v4);
    goto LABEL_7;
  }
  while (1)
  {
    v13 = *(id *)(v57 + 8 * v9);
LABEL_7:
    v14 = (unint64_t)v13;
    v15 = _s12NowPlayingUI17ContextActionTypeO8rawValueACSgSS_tcfC_0(v7, (uint64_t)v6);
    if (v15 == 48)
    {
      v7 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      isUniquelyReferenced_nonNull_native = *(_QWORD *)((char *)&dword_10 + (v67 & 0xFFFFFFFFFFFFFF8));
      v16 = *(_QWORD *)((char *)&dword_18 + (v67 & 0xFFFFFFFFFFFFFF8));
      if (isUniquelyReferenced_nonNull_native >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, isUniquelyReferenced_nonNull_native + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(isUniquelyReferenced_nonNull_native, v7);
      v6 = &v67;
      specialized Array._endMutation()(v17);
      v18 = v3 == v9;
      if (v3 == v9)
        goto LABEL_31;
      goto LABEL_27;
    }
    v7 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_13537C(0, v11[2] + 1, 1, v11);
    v3 = v11[2];
    v19 = v11[3];
    v60 = v14;
    if (v3 >= v19 >> 1)
      v11 = sub_13537C((_QWORD *)(v19 > 1), v3 + 1, 1, v11);
    v11[2] = v3 + 1;
    v4 = (uint64_t)v11;
    *((_BYTE *)v11 + v3 + 32) = v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    v66 = (unint64_t)v12;
    v6 = v12;
    v21 = sub_13A154(v7);
    v22 = v12[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      goto LABEL_34;
    v2 = (unint64_t)v20;
    if (v12[3] < v24)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = (uint64_t *)&v66;
      sub_14013C();
    }
LABEL_22:
    isUniquelyReferenced_nonNull_native = v60;
    v12 = (uint64_t *)v66;
    if ((v2 & 1) != 0)
    {
      v6 = *(uint64_t **)(v66 + 56);

      v6[v21] = v60;
    }
    else
    {
      *(_QWORD *)(v66 + 8 * (v21 >> 6) + 64) |= 1 << v21;
      *(_BYTE *)(v12[6] + v21) = v7;
      *(_QWORD *)(v12[7] + 8 * v21) = v60;
      v27 = v12[2];
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_35;
      v12[2] = v29;
    }
    swift_bridgeObjectRelease(0x8000000000000000);
    v2 = (unint64_t)_swiftEmptyArrayStorage;
    v11 = (_QWORD *)v4;
    v3 = v58;
    v4 = v59;
    v18 = v58 == v9;
    if (v58 == v9)
    {
LABEL_31:
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v56);
      goto LABEL_41;
    }
LABEL_27:
    if (v18)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      if (v4 < 0)
        v30 = v4;
      else
        v30 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v6);
      v8 = _CocoaArrayWrapper.endIndex.getter(v30);
      if (!v8)
      {
LABEL_40:
        swift_bridgeObjectRelease(v4);
        swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease(v6);
        v11 = _swiftEmptyArrayStorage;
        v12 = _swiftEmptyDictionarySingleton;
LABEL_41:
        v31 = swift_bridgeObjectRetain(v11);
        v32 = sub_AC4E8(v31);
        swift_bridgeObjectRelease(v11);
        v33 = *(_QWORD *)(v32 + 16);
        if (v33)
        {
          v63 = v11;
          v65 = v32 + 32;
          v61 = (_QWORD *)v32;
          swift_bridgeObjectRetain(v32);
          v34 = 0;
          v35 = (_QWORD *)v2;
          while (1)
          {
            v36 = *(_QWORD *)(v65 + 8 * v34);
            v66 = v2;
            v37 = *(_QWORD *)(v36 + 16);
            if (v37)
            {
              swift_bridgeObjectRetain_n(v36, 2);
              for (i = 0; i != v37; ++i)
              {
                if (v12[2])
                {
                  v40 = sub_13A154(*(_BYTE *)(v36 + i + 32));
                  if ((v41 & 1) != 0)
                  {
                    v42 = *(id *)(v12[7] + 8 * v40);
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
                    v44 = *(_QWORD *)((char *)&dword_10 + (v66 & 0xFFFFFFFFFFFFFF8));
                    v43 = *(_QWORD *)((char *)&dword_18 + (v66 & 0xFFFFFFFFFFFFFF8));
                    if (v44 >= v43 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
                    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
                    specialized Array._endMutation()(v39);
                  }
                }
              }
              swift_bridgeObjectRelease(v36);
              v45 = v66;
              v2 = (unint64_t)_swiftEmptyArrayStorage;
              if (v66 >> 62)
              {
LABEL_62:
                if (v45 < 0)
                  v49 = v45;
                else
                  v49 = v45 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v45);
                v46 = _CocoaArrayWrapper.endIndex.getter(v49);
                swift_bridgeObjectRelease(v45);
                goto LABEL_55;
              }
            }
            else
            {
              swift_bridgeObjectRetain(v36);
              v45 = v2;
              if (v2 >> 62)
                goto LABEL_62;
            }
            v46 = *(_QWORD *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFF8));
LABEL_55:
            swift_bridgeObjectRelease(v36);
            if (v46)
            {
              if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
                v35 = sub_13547C(0, v35[2] + 1, 1, v35);
              v48 = v35[2];
              v47 = v35[3];
              if (v48 >= v47 >> 1)
                v35 = sub_13547C((_QWORD *)(v47 > 1), v48 + 1, 1, v35);
              v35[2] = v48 + 1;
              v35[v48 + 4] = v45;
            }
            else
            {
              swift_bridgeObjectRelease(v45);
            }
            if (++v34 == v33)
            {
              swift_bridgeObjectRelease(v63);
              v11 = v61;
              swift_bridgeObjectRelease(v61);
              goto LABEL_68;
            }
          }
        }
        swift_bridgeObjectRelease(v32);
        v35 = _swiftEmptyArrayStorage;
LABEL_68:
        swift_bridgeObjectRelease(v11);
        v50 = v67;
        if ((unint64_t)v67 >> 62)
        {
          if (v67 < 0)
            v53 = v67;
          else
            v53 = v67 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v67);
          v54 = _CocoaArrayWrapper.endIndex.getter(v53);
          swift_bridgeObjectRelease(v50);
          if (!v54)
            goto LABEL_79;
LABEL_70:
          if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
            v35 = sub_13547C(0, v35[2] + 1, 1, v35);
          v52 = v35[2];
          v51 = v35[3];
          if (v52 >= v51 >> 1)
            v35 = sub_13547C((_QWORD *)(v51 > 1), v52 + 1, 1, v35);
          v35[2] = v52 + 1;
          v35[v52 + 4] = v50;
        }
        else
        {
          if (*(_QWORD *)((char *)&dword_10 + (v67 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_70;
LABEL_79:
          swift_bridgeObjectRelease(v50);
        }
        swift_bridgeObjectRelease(v12);
        return (uint64_t)v35;
      }
      goto LABEL_4;
    }
    if (v62 == v9)
      goto LABEL_31;
    v7 = (uint64_t)*(v10 - 1);
    v6 = *v10;
    swift_bridgeObjectRetain(*v10);
    v10 += 2;
    ++v9;
    if (v64)
      goto LABEL_5;
  }
  sub_13BEA8(v24, isUniquelyReferenced_nonNull_native);
  v6 = (uint64_t *)v66;
  v25 = sub_13A154(v7);
  if ((v2 & 1) == (v26 & 1))
  {
    v21 = v25;
    goto LABEL_22;
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ContextActionType);
  __break(1u);
  return result;
}

uint64_t ContextActionsConfiguration.swipeActions(leadingSwipe:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[2];
  _BYTE v12[96];
  _BYTE v13[24];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, v13, 0, 0);
    result = sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v11, (uint64_t *)&unk_1FC7F0);
    if (v11[0])
    {
      sub_DF78((uint64_t)v12, (uint64_t)v14);
      sub_4AE24((uint64_t)v11);
      v4 = v15;
      v5 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
LABEL_10:
      v9 = v6;
      __swift_destroy_boxed_opaque_existential_0(v14);
      swift_retain();
      v10 = sub_ABFAC(v9, v2);
      swift_bridgeObjectRelease(v9);
      swift_release(v2);
      return (uint64_t)v10;
    }
    __break(1u);
  }
  else
  {
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, v13, 0, 0);
    result = sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v11, (uint64_t *)&unk_1FC7F0);
    if (v11[0])
    {
      sub_DF78((uint64_t)v12, (uint64_t)v14);
      sub_4AE24((uint64_t)v11);
      v7 = v15;
      v8 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t ContextActionType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_A7D40 + 4 * byte_1702C0[a1]))(0xD00000000000001ELL, 0x8000000000181E70);
}

uint64_t sub_A7D40()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t ContextActionsConfiguration.firstShareAction()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v20;
  void *v21;
  _QWORD v22[2];
  uint64_t v23;
  _BYTE v24[24];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  v2 = &static NowPlayingDataProvider.shared;
  swift_beginAccess(&static NowPlayingDataProvider.shared, v24, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v22, (uint64_t *)&unk_1FC7F0);
  if (!v22[0])
    goto LABEL_16;
  sub_DF78((uint64_t)&v23, (uint64_t)v25);
  sub_4AE24((uint64_t)v22);
  v3 = v26;
  v4 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0(v25);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    goto LABEL_10;
  v7 = 0;
  v8 = (uint64_t *)(v5 + 40);
  while (1)
  {
    v2 = (__int128 *)*(v8 - 1);
    v9 = *v8;
    ObjectType = swift_getObjectType(v2);
    v11 = *(_QWORD *)(v9 + 8);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 8);
    swift_bridgeObjectRetain(v5);
    v13 = swift_unknownObjectRetain(v2);
    v12(v1, ObjectType, v11, v13);
    v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(1, ObjectType, v9);

    if (v14)
      break;
    swift_bridgeObjectRelease(v5);
    swift_unknownObjectRelease(v2);
    ++v7;
    v8 += 2;
    if (v6 == v7)
      goto LABEL_10;
  }
  swift_unknownObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  if (v6 == v7)
  {
LABEL_10:
    swift_release(v1);
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (v7 >= *(_QWORD *)(v5 + 16))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v2 = (__int128 *)*(v8 - 1);
  v16 = *v8;
  v17 = swift_getObjectType(v2);
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 8);
  v20 = swift_unknownObjectRetain(v2);
  v19(v1, v17, v18, v20);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(1, v17, v16);

  if (v21)
  {
    swift_release(v1);
    swift_bridgeObjectRelease(v5);
    return (uint64_t)v2;
  }
LABEL_17:
  result = swift_unknownObjectRelease(v2);
  __break(1u);
  return result;
}

uint64_t EpisodeIdentifierSet.uuid.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t EpisodeIdentifierSet.storeTrackId.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void *NowPlayingContextActionConfiguration.playerResponseItem.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_playerResponseItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_playerResponseItem, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void NowPlayingContextActionConfiguration.playerResponseItem.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_playerResponseItem);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*NowPlayingContextActionConfiguration.playerResponseItem.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_playerResponseItem, a1, 33, 0);
  return j_j__swift_endAccess;
}

id NowPlayingContextActionConfiguration.modelObject.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject, v3, 0, 0);
  return *v1;
}

void NowPlayingContextActionConfiguration.modelObject.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*NowPlayingContextActionConfiguration.modelObject.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t NowPlayingContextActionConfiguration.init(asPartOf:playerResponseItem:modelObject:presentationSource:performPreviewActionBlock:interactionContext:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;

  v11 = sub_AC0BC(a1, a2, a3, a4, a5, a6, a7);
  sub_145A0(a5, a6);

  return v11;
}

Swift::Void __swiftcall NowPlayingContextActionConfiguration.performPreviewAction()()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock);
  if (v1)
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock
                   + 8);
    v3 = swift_retain();
    v1(v3);
    sub_145A0((uint64_t)v1, v2);
  }
}

void NowPlayingContextActionConfiguration.init(asPartOf:presentationSource:previewModel:context:)()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.NowPlayingContextActionConfiguration", 49, "init(asPartOf:presentationSource:previewModel:context:)", 55, 0);
  __break(1u);
}

uint64_t sub_A8528()
{
  uint64_t v0;

  return sub_145A0(*(_QWORD *)(v0+ OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock), *(_QWORD *)(v0+ OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock+ 8));
}

uint64_t NowPlayingContextActionConfiguration.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, &qword_1FD4B0);
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, &qword_1FF068);
  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v2 = type metadata accessor for InteractionContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_145A0(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock + 8));
  return v0;
}

uint64_t NowPlayingContextActionConfiguration.__deallocating_deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, &qword_1FD4B0);
  sub_9944((uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, &qword_1FF068);
  v1 = (char *)v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v2 = type metadata accessor for InteractionContext(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_playerResponseItem));

  sub_145A0(*(_QWORD *)((char *)v0+ OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock), *(_QWORD *)((char *)v0+ OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock+ 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

id NowPlayingTranscriptSelectionContextActionConfiguration.selectedText.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_selectedText));
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_referenceStartTime);
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.referenceEndTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_referenceEndTime);
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.playerStartTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_playerStartTime);
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.alignmentCoordinator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_DF78(v1+ OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_alignmentCoordinator, a1);
}

void NowPlayingTranscriptSelectionContextActionConfiguration.init(asPartOf:playerResponseItem:modelObject:presentationSource:performPreviewActionBlock:interactionContext:)()
{
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000087, 0x8000000000188890, "NowPlayingUI/ContextAction.swift", 32, 2, 226, 0);
  __break(1u);
}

uint64_t sub_A87C8()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_selectedText));
  return __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                             + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_alignmentCoordinator));
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, &qword_1FD4B0);
  sub_9944(v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, &qword_1FF068);
  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context;
  v2 = type metadata accessor for InteractionContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_145A0(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock + 8));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_selectedText));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_alignmentCoordinator));
  return v0;
}

uint64_t NowPlayingTranscriptSelectionContextActionConfiguration.__deallocating_deinit()
{
  uint64_t v0;

  NowPlayingTranscriptSelectionContextActionConfiguration.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_A88E8()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0
                   + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_referenceStartTime);
}

uint64_t sub_A8904()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0
                   + OBJC_IVAR____TtC12NowPlayingUI55NowPlayingTranscriptSelectionContextActionConfiguration_playerStartTime);
}

_QWORD *ShareAction.applicationActivities.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v4 = (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 16))();
  if (v4)
  {
    v5 = v4;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 32))(v19, a1, a2);
    v6 = v20;
    v7 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
    v9 = v8;
    v10 = *(_QWORD *)(v8 + 16);
    if (v10)
    {
      v11 = (uint64_t *)(v8 + 40);
      do
      {
        v12 = *(v11 - 1);
        v13 = *v11;
        ObjectType = swift_getObjectType(v12);
        v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 40);
        v16 = swift_unknownObjectRetain(v12);
        v17 = v15(v5, ObjectType, v13, v16);
        swift_unknownObjectRelease(v12);
        sub_A5AC4(v17, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_AB530);
        v11 += 2;
        --v10;
      }
      while (v10);
    }
    swift_release(v5);
    swift_bridgeObjectRelease(v9);
    __swift_destroy_boxed_opaque_existential_0(v19);
  }
  return _swiftEmptyArrayStorage;
}

void ShareAction.prepareShareController(_:customShareTitle:sharingStyle:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  Class isa;

  if (a1)
  {
    v6 = objc_opt_self(UIActivityViewController);
    v7 = swift_dynamicCastObjCClass(a1, v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = a1;
      objc_msgSend(v8, "setSharingStyle:", a4);
      v10 = sub_AC748();
      v11 = sub_A52B0((uint64_t)v10);
      swift_bridgeObjectRelease(v10);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "setActivityTypeOrder:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    }
  }
}

id sub_A8BA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _UIInterfaceActionExtendedStorage();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id UIInterfaceAction.init(title:image:type:configuration:handler:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  void *ObjCClassFromMetadata;
  NSString v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  double v28;
  _QWORD v30[5];
  uint64_t v31;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v7);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v16 = swift_allocObject(&unk_1CDCF0, 32, 7);
  *(_QWORD *)(v16 + 16) = a6;
  *(_QWORD *)(v16 + 24) = a7;
  v30[4] = sub_AC8D4;
  v31 = v16;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 1107296256;
  v30[2] = sub_A8E90;
  v30[3] = &block_descriptor_16;
  v17 = _Block_copy(v30);
  v18 = v31;
  swift_retain();
  v19 = objc_msgSend(ObjCClassFromMetadata, "actionWithTitle:type:handler:", v15, a4, v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

  v20 = v19;
  swift_retain();
  v21 = (char *)sub_A9154();
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__configuration];
  *(_QWORD *)&v21[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__configuration] = a5;

  objc_msgSend(v20, "setTitleAlignment:", 4, swift_release(v22).n128_f64[0]);
  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  v23 = qword_210330;
  objc_msgSend(v20, "_setTitleTextColor:", qword_210330);
  objc_msgSend(v20, "_setImageTintColor:", v23);
  v24 = v20;
  if (a3)
  {
    v25 = objc_msgSend(a3, "_imageThatSuppressesAccessibilityHairlineThickening");
    v26 = v20;
    if (v25)
    {
      v27 = v25;
      objc_msgSend(v25, "size");
      v26 = objc_msgSend(v27, "imageWithAlignmentRectInsets:", (56.0 - v28) * -0.5, 0.0, (56.0 - v28) * -0.5, 0.0);
      objc_msgSend(v20, "setTrailingImage:", v26);

    }
    v24 = a3;
  }

  swift_release(a5);
  swift_release(a7);
  return v20;
}

void sub_A8E90(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

id UIInterfaceAction.init(viewController:configuration:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = v4;
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(v4), "actionWithCustomContentViewController:", a1);
  swift_retain();
  v11 = (char *)sub_A9154();
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__configuration];
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__configuration] = a2;

  swift_release(v12);
  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  v13 = qword_210330;
  objc_msgSend(v10, "_setTitleTextColor:", qword_210330);
  objc_msgSend(v10, "_setImageTintColor:", v13);
  v14 = swift_allocObject(&unk_1CDD40, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v10);
  v15 = (_QWORD *)swift_allocObject(&unk_1CDD68, 48, 7);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = v14;
  v15[5] = v5;
  swift_retain();
  swift_retain();
  v16 = (char *)sub_A9154();
  v17 = &v16[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler];
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler];
  v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler + 8];
  *(_QWORD *)v17 = sub_AC99C;
  *((_QWORD *)v17 + 1) = v15;
  sub_145A0(v18, v19);

  swift_release(v14);
  swift_release(a2);
  swift_release(a4);

  return v10;
}

void sub_A907C(uint64_t a1, _BYTE *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t Strong;
  void *v13;
  char v14;
  _BYTE v15[24];

  v6 = a5 + 16;
  v7 = (void *)a3();
  v9 = v8;
  v11 = v10;
  swift_beginAccess(v6, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = sub_AD22C(v7, v9, v11);

  }
  else
  {
    v14 = 1;
  }
  *a2 = v14 & 1;
  sub_ACF08((uint64_t)v7, v9, v11);
}

void UIInterfaceAction.customHandler.setter(uint64_t a1, uint64_t a2)
{
  sub_A9388(a1, a2, &OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler, (void (*)(uint64_t, uint64_t))sub_AD69C);
}

uint64_t UIInterfaceAction.customHandler.getter()
{
  return sub_A9320(&OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler, (void (*)(_QWORD, _QWORD))sub_AD6A0);
}

id sub_A9154()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  swift_beginAccess(&unk_1FF058, v7, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_1FF058);
  swift_endAccess(v7);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v7, v1);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_AD43C((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_9944((uint64_t)v8, &qword_1FD880);
    goto LABEL_8;
  }
  v2 = type metadata accessor for _UIInterfaceActionExtendedStorage();
  if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_8:
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _UIInterfaceActionExtendedStorage()), "init");
    swift_beginAccess(&unk_1FF058, v8, 32, 0);
    v3 = v4;
    objc_setAssociatedObject(v0, &unk_1FF058, v3, (char *)&dword_0 + 1);
    swift_endAccess(v8);

    return v3;
  }
  return (id)v6;
}

void (*UIInterfaceAction.customHandler.modify(uint64_t *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = (char *)sub_A9154();
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler];
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler + 8];
  sub_2BE00(v4, v5);

  *a1 = v4;
  a1[1] = v5;
  return sub_A92F0;
}

void sub_A92F0(_QWORD *a1, char a2)
{
  sub_A9464(a1, a2, &OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__customHandler, (void (*)(uint64_t, uint64_t))sub_AD69C, (void (*)(_QWORD, uint64_t))sub_AD6A0);
}

uint64_t UIInterfaceAction.didDismissHandler.getter()
{
  return sub_A9320(&OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler, (void (*)(_QWORD, _QWORD))sub_2BE00);
}

uint64_t sub_A9320(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  char *v4;
  char *v5;
  uint64_t v6;

  v4 = (char *)sub_A9154();
  v5 = &v4[*a1];
  v6 = *(_QWORD *)v5;
  a2(*(_QWORD *)v5, *((_QWORD *)v5 + 1));

  return v6;
}

void UIInterfaceAction.didDismissHandler.setter(uint64_t a1, uint64_t a2)
{
  sub_A9388(a1, a2, &OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler, (void (*)(uint64_t, uint64_t))sub_145A0);
}

void sub_A9388(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t, uint64_t))
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v11 = (char *)sub_A9154();
  v8 = &v11[*a3];
  v9 = *(_QWORD *)v8;
  v10 = *((_QWORD *)v8 + 1);
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  a4(v9, v10);

}

void (*UIInterfaceAction.didDismissHandler.modify(uint64_t *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = (char *)sub_A9154();
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler];
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler + 8];
  sub_2BE00(v4, v5);

  *a1 = v4;
  a1[1] = v5;
  return sub_A9448;
}

void sub_A9448(_QWORD *a1, char a2)
{
  sub_A9464(a1, a2, &OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler, (void (*)(uint64_t, uint64_t))sub_145A0, (void (*)(_QWORD, uint64_t))sub_2BE00);
}

void sub_A9464(_QWORD *a1, char a2, _QWORD *a3, void (*a4)(uint64_t, uint64_t), void (*a5)(_QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v7 = *a1;
  v6 = a1[1];
  if ((a2 & 1) != 0)
  {
    a5(*a1, v6);
    v8 = (char *)sub_A9154();
    v9 = &v8[*a3];
    v10 = *(_QWORD *)v9;
    v11 = *((_QWORD *)v9 + 1);
    *(_QWORD *)v9 = v7;
    *((_QWORD *)v9 + 1) = v6;
    a4(v10, v11);

    a4(v7, v6);
  }
  else
  {
    v15 = (char *)sub_A9154();
    v12 = &v15[*a3];
    v13 = *(_QWORD *)v12;
    v14 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v12 = v7;
    *((_QWORD *)v12 + 1) = v6;
    a4(v13, v14);

  }
}

uint64_t sub_A9514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v12[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a1 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(v7, v12, 0, 0);
  sub_2808C(v7, (uint64_t)v6, &qword_1FD4B0);
  v8 = type metadata accessor for PresentationSource(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a2, 1, 15, 1, 0, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  return result;
}

unint64_t sub_A960C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_AD68C(*a1);
  *a2 = result;
  return result;
}

void sub_A9634(_QWORD *a1@<X8>)
{
  *a1 = &off_1C6540;
}

_UNKNOWN **static ContextActionType.allCases.getter()
{
  return &off_1C58D0;
}

uint64_t sub_A9650(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v24[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v24, *(_QWORD *)(a2 + 40));
    v4 = ContextActionType.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v24, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()();
    v8 = -1 << *(_BYTE *)(a2 + 32);
    v9 = v7 & ~v8;
    v10 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      v11 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(a2 + 48) + v9));
      if (v11 == v4 && v12 == v6)
      {
LABEL_17:
        swift_bridgeObjectRelease_n(v6, 2);
        goto LABEL_18;
      }
      v14 = v12;
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v4, v6, 0);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v6);
      if ((v15 & 1) != 0)
      {
LABEL_18:
        v22 = 1;
        return v22 & 1;
      }
      v16 = ~v8;
      v17 = (v9 + 1) & v16;
      if (((*(_QWORD *)(v10 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
      {
        while (1)
        {
          v18 = ContextActionType.rawValue.getter(*(_BYTE *)(*(_QWORD *)(a2 + 48) + v17));
          if (v18 == v4 && v19 == v6)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v4, v6, 0);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v6);
          if ((v22 & 1) == 0)
          {
            v17 = (v17 + 1) & v16;
            if (((*(_QWORD *)(v10 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
              continue;
          }
          return v22 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v22 = 0;
  return v22 & 1;
}

NSString _s12NowPlayingUI17ContextActionTypeO16actionIdentifierSo08UIActionH0avg_0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v3;

  ContextActionType.rawValue.getter(a1);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  return v3;
}

Swift::Int sub_A981C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = ContextActionType.rawValue.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_A987C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = ContextActionType.rawValue.getter(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_A98BC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = ContextActionType.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_A9918@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s12NowPlayingUI17ContextActionTypeO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_A9944@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ContextActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_A996C(_QWORD *a1@<X8>)
{
  *a1 = &off_1C58D0;
}

uint64_t sub_A997C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = ContextActionType.rawValue.getter(*a1);
  v5 = v4;
  v6 = ContextActionType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_A9A04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_A9C34(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_A9A20(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_A9DD4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_A9A3C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AA4F8(a1, a2, a3, (_QWORD *)*v3, &qword_1FF5A8, &qword_1FF5B0);
  *v3 = result;
  return result;
}

uint64_t sub_A9A68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AAAD0(a1, a2, a3, (_QWORD *)*v3, &qword_1FF638, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingTimeControlSegment);
  *v3 = result;
  return result;
}

uint64_t sub_A9A94(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_A9F5C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9AB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AA4F8(a1, a2, a3, (_QWORD *)*v3, &qword_1FF580, &qword_1FF578);
  *v3 = result;
  return result;
}

uint64_t sub_A9ADC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AA4F8(a1, a2, a3, (_QWORD *)*v3, &qword_1FF590, &qword_1FF570);
  *v3 = result;
  return result;
}

uint64_t sub_A9B08(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_AA3B0(a1, a2, a3, *v3, &qword_1FD870);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9B2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_AA0C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9B48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_AA22C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9B64(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_AA3B0(a1, a2, a3, *v3, &qword_1FF5F0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9B88(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AA4F8(a1, a2, a3, (_QWORD *)*v3, &qword_1FF630, &qword_1FF620);
  *v3 = result;
  return result;
}

uint64_t sub_A9BB4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_AA684(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9BD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AA7F0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_A9BEC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_AA974(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_A9C08(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_AAAD0(a1, a2, a3, (_QWORD *)*v3, &qword_1FF560, (uint64_t (*)(_QWORD))&type metadata accessor for TranscriptModel.Word);
  *v3 = result;
  return result;
}

uint64_t sub_A9C34(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5B8);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5C0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_A9DD4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF550);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1FF558);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_A9F5C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF040);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA0C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDB98);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA22C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF538);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8])
      memmove(v13, v14, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v8] || v13 >= &v14[24 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA3B0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v9] || v14 >= &v15[v9])
  {
    memcpy(v14, v15, v9);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA4F8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
    v15 = _swift_stdlib_malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 17;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v11)
      memmove(v14 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v11 || v17 >= v18 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA684(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF68);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA7F0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5E8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    type metadata accessor for ActivityType(0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AA974(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF568);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    memcpy(v14, v15, 32 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AAAD0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = _swift_stdlib_malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_AACB0(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_AADB0(v6, a2, a3);
  return sub_AAD04;
}

void (*sub_AAD08(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_AAE1C(v6, a2, a3);
  return sub_AAD04;
}

void (*sub_AAD5C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_AAE88(v6, a2, a3);
  return sub_AAD04;
}

uint64_t *sub_AADB0(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for NowPlayingContextMenuProvider;
  }
  __break(1u);
  return result;
}

void (*sub_AAE1C(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return _s6ShadowVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_AAE88(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return _s5ColorOwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_AAEF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FF5A0, &qword_1FF598);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FF598);
          v13 = sub_AAD08(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AB108(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FF5E0, &qword_200370);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_200370);
          v13 = sub_AAD08(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_F174(0, &qword_1FF5D8, NSError_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AB31C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FF618, &qword_1FF610);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FF610);
          v13 = sub_AAD08(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_F174(0, (unint64_t *)&unk_1FDF30, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AB530(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FF608, &qword_1FF600);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FF600);
          v13 = sub_AAD5C(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_F174(0, &qword_1FF5F8, UIActivity_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AB744(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FE228, &qword_1FE220);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FE220);
          v13 = sub_AACB0(v18, i, a3);
          v15 = *v14;
          swift_retain();
          ((void (*)(uint64_t **, _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for TranscriptContentViewModel();
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_AB948(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FF548, &qword_1FF540);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FF540);
          v13 = sub_AAD08(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_F174(0, (unint64_t *)&qword_1FEAC0, UICollectionViewLayoutAttributes_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_ABB5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_AD604(&qword_1FF5D0, &qword_1FF5C8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5C8);
          v13 = sub_AAD08(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_F174(0, &qword_1FDEB0, UIAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_ABD70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v6 = _swiftEmptyArrayStorage;
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_13A0FC(*(_BYTE *)(a1 + v5 + 32));
      if ((v8 & 1) != 0)
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
        swift_bridgeObjectRetain(v9);
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_135368(0, v6[2] + 1, 1, v6);
        v11 = v6[2];
        v10 = v6[3];
        if (v11 >= v10 >> 1)
          v6 = sub_135368((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
        v6[2] = v11 + 1;
        v6[v11 + 4] = v9;
      }
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease(a1);
  return v6;
}

void *sub_ABE88(uint64_t a1, uint64_t a2)
{
  return sub_ABE9C(a1, a2);
}

void *sub_ABE9C(uint64_t a1, uint64_t a2)
{
  void *result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  result = &_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v8 = *(v6 - 1);
      v9 = *v6;
      ObjectType = swift_getObjectType(v8);
      v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      swift_unknownObjectRetain(v8);
      v12 = v11(a2, ObjectType, v9);
      v13 = swift_unknownObjectRelease(v8);
      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v15 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v14 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
        specialized Array._endMutation()(v7);
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_ABFAC(uint64_t a1, uint64_t a2)
{
  void *result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  result = &_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v8 = *(v6 - 1);
      v9 = *v6;
      ObjectType = swift_getObjectType(v8);
      v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_unknownObjectRetain(v8);
      v12 = v11(a2, ObjectType, v9);
      v13 = swift_unknownObjectRelease(v8);
      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v15 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v14 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
        specialized Array._endMutation()(v7);
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_AC0BC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void **v17;
  uint64_t *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  _OWORD v39[2];
  uint64_t v40;
  char v41[24];

  v35 = a7;
  v36 = a1;
  v37 = a4;
  v34 = type metadata accessor for InteractionContext(0);
  v12 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (void **)(v7 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_playerResponseItem);
  *v17 = 0;
  v18 = (uint64_t *)(v7 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_performPreviewActionBlock);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC12NowPlayingUI36NowPlayingContextActionConfiguration_modelObject) = a3;
  swift_beginAccess(v17, v41, 1, 0);
  v19 = *v17;
  *v17 = a2;
  swift_retain(v7);
  v20 = a3;
  v21 = a2;

  v22 = *v18;
  v23 = v18[1];
  *v18 = a5;
  v18[1] = a6;
  sub_2BE00(a5, a6);
  sub_145A0(v22, v23);
  swift_release(v7);
  sub_2808C(v37, (uint64_t)v16, &qword_1FD4B0);
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  v24 = v33;
  v25 = v34;
  v26 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v33, v35, v34);
  v27 = v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  v28 = type metadata accessor for PresentationSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  *(_OWORD *)v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_QWORD *)(v29 + 32) = 0;
  *(_QWORD *)(v7 + 16) = v36;
  v30 = v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource;
  swift_beginAccess(v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_presentationSource, v38, 33, 0);
  sub_AC358((uint64_t)v16, v30, &qword_1FD4B0);
  swift_endAccess(v38);
  v31 = v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel;
  swift_beginAccess(v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_previewModel, v38, 33, 0);
  sub_AC358((uint64_t)v39, v31, &qword_1FF068);
  swift_endAccess(v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v7 + OBJC_IVAR____TtC12NowPlayingUI27ContextActionsConfiguration_context, v24, v25);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v26, v25);
  sub_9944(v37, &qword_1FD4B0);
  return v7;
}

uint64_t type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(uint64_t a1)
{
  return sub_256F8(a1, qword_1FF380, (uint64_t)&nominal type descriptor for NowPlayingTranscriptSelectionContextActionConfiguration);
}

uint64_t sub_AC358(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_AC39C(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;

  v3 = 0;
  v4 = *(_QWORD *)(result + 16);
  v5 = result + 32;
LABEL_2:
  if (v3 <= v4)
    v6 = v4;
  else
    v6 = v3;
  while (1)
  {
    if (v4 == v3)
      return (uint64_t)_swiftEmptyArrayStorage;
    if (v6 == v3)
      break;
    v7 = *(_BYTE *)(v5 + v3++);
    result = sub_A9650(v7, a2);
    if ((result & 1) != 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_A9B64(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        result = sub_A9B64(v8 > 1, v9 + 1, 1);
      _swiftEmptyArrayStorage[2] = v9 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage[4] + v9) = v7;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t _s12NowPlayingUI17ContextActionTypeO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1C5430, a1, a2, &unk_1F96C0);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x30)
    return 48;
  else
    return v3;
}

uint64_t sub_AC4E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  uint64_t v30;

  v2 = swift_bridgeObjectRetain(a1);
  v3 = sub_B986C(v2);
  swift_bridgeObjectRelease(a1);
  v4 = sub_AC39C((uint64_t)&off_1C58D0, v3);
  swift_bridgeObjectRelease(v3);
  v5 = *(_QWORD *)(v4 + 16);
  v30 = v4;
  if (v5)
  {
    v6 = (char *)(v4 + 32);
    while (1)
    {
      v8 = *v6++;
      v7 = v8;
      v9 = byte_17079E[v8];
      v11 = sub_13A0FC(v9);
      v12 = _swiftEmptyDictionarySingleton[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
        break;
      v15 = v10;
      if (_swiftEmptyDictionarySingleton[3] < v14)
      {
        sub_13BBD8(v14, 1);
        v16 = sub_13A0FC(v9);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_18;
        v11 = v16;
      }
      if ((v15 & 1) != 0)
      {
        v18 = _swiftEmptyDictionarySingleton[7];
        v19 = *(_QWORD **)(v18 + 8 * v11);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
        *(_QWORD *)(v18 + 8 * v11) = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v19 = sub_13537C(0, v19[2] + 1, 1, v19);
          *(_QWORD *)(v18 + 8 * v11) = v19;
        }
        v22 = v19[2];
        v21 = v19[3];
        if (v22 >= v21 >> 1)
        {
          v19 = sub_13537C((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
          *(_QWORD *)(v18 + 8 * v11) = v19;
        }
        v19[2] = v22 + 1;
        *((_BYTE *)v19 + v22 + 32) = v7;
        if (!--v5)
          goto LABEL_15;
      }
      else
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5F0);
        v24 = swift_allocObject(v23, 33, 7);
        *(_OWORD *)(v24 + 16) = xmmword_16B3D0;
        *(_BYTE *)(v24 + 32) = v7;
        _swiftEmptyDictionarySingleton[(v11 >> 6) + 8] |= 1 << v11;
        *(_BYTE *)(_swiftEmptyDictionarySingleton[6] + v11) = v9;
        *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v11) = v24;
        v25 = _swiftEmptyDictionarySingleton[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_17;
        _swiftEmptyDictionarySingleton[2] = v27;
        if (!--v5)
          goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ContextActionType.ContextActionGroup);
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(v30);
    swift_retain();
    v28 = sub_ABD70((uint64_t)&off_1C5920, (uint64_t)_swiftEmptyDictionarySingleton);
    swift_release_n(_swiftEmptyDictionarySingleton, 2);
    return (uint64_t)v28;
  }
  return result;
}

_QWORD *sub_AC748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t j;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  unint64_t v11;
  unint64_t v12;

  v0 = sub_AC4E8((uint64_t)&off_1C58D0);
  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v0);
    for (i = 0; i != v2; ++i)
    {
      v4 = *(_QWORD *)(v1 + 8 * i + 32);
      v5 = swift_bridgeObjectRetain(v4);
      sub_A580C(v5);
    }
    swift_bridgeObjectRelease_n(v1, 2);
    v6 = _swiftEmptyArrayStorage[2];
    if (!v6)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease(v0);
    v6 = _swiftEmptyArrayStorage[2];
    if (!v6)
      goto LABEL_11;
  }
  sub_A9BD0(0, v6, 0);
  for (j = 0; j != v6; ++j)
  {
    ContextActionType.rawValue.getter(*((_BYTE *)&_swiftEmptyArrayStorage[4] + j));
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    v12 = _swiftEmptyArrayStorage[2];
    v11 = _swiftEmptyArrayStorage[3];
    if (v12 >= v11 >> 1)
      sub_A9BD0(v11 > 1, v12 + 1, 1);
    _swiftEmptyArrayStorage[2] = v12 + 1;
    _swiftEmptyArrayStorage[v12 + 4] = v10;
  }
LABEL_11:
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_AC8B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_AC8D4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = (void *)(*(uint64_t (**)(void))(v2 + 16))();
  v6 = v5;
  v8 = v7;
  *a2 = sub_AD22C(v4, v5, v7) & 1;
  sub_ACF08((uint64_t)v4, v6, v8);
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_16(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_AC94C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_AC970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_AC99C(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  sub_A907C(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

unint64_t sub_AC9AC()
{
  unint64_t result;

  result = qword_1FF088;
  if (!qword_1FF088)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PerformableContextActions, &type metadata for PerformableContextActions);
    atomic_store(result, (unint64_t *)&qword_1FF088);
  }
  return result;
}

unint64_t sub_AC9F4()
{
  unint64_t result;

  result = qword_1FF090;
  if (!qword_1FF090)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContextActionType, &type metadata for ContextActionType);
    atomic_store(result, (unint64_t *)&qword_1FF090);
  }
  return result;
}

uint64_t sub_ACA38()
{
  return sub_AD604(&qword_1FF098, &qword_1FF0A0);
}

uint64_t sub_ACA5C()
{
  return type metadata accessor for ContextActionsConfiguration(0);
}

uint64_t type metadata accessor for ContextActionsConfiguration(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_1FF0D0, (uint64_t)&nominal type descriptor for ContextActionsConfiguration);
}

void sub_ACA78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_ACB18(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "(";
    v4 = type metadata accessor for InteractionContext(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_ACB18(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1FF0E0)
  {
    v2 = type metadata accessor for PresentationSource(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1FF0E0);
  }
}

uint64_t destroy for TextContent.ID(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t initializeWithCopy for EpisodeIdentifierSet(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for EpisodeIdentifierSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t assignWithTake for EpisodeIdentifierSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeIdentifierSet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeIdentifierSet(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeIdentifierSet()
{
  return &type metadata for EpisodeIdentifierSet;
}

uint64_t sub_ACD14()
{
  return type metadata accessor for NowPlayingContextActionConfiguration(0);
}

uint64_t type metadata accessor for NowPlayingContextActionConfiguration(uint64_t a1)
{
  return sub_256F8(a1, qword_1FF1F8, (uint64_t)&nominal type descriptor for NowPlayingContextActionConfiguration);
}

uint64_t sub_ACD30(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = &unk_170550;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 208);
}

uint64_t sub_ACD88()
{
  return type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
}

uint64_t sub_ACD90(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = "\t";
  v2[2] = "\t";
  v2[3] = "\t";
  v2[4] = &unk_1705C0;
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 312);
}

uint64_t storeEnumTagSinglePayload for PerformableContextActions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_ACE38 + 4 * byte_1702F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_ACE6C + 4 * byte_1702F0[v4]))();
}

uint64_t sub_ACE6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_ACE74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xACE7CLL);
  return result;
}

uint64_t sub_ACE88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xACE90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_ACE94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_ACE9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformableContextActions()
{
  return &type metadata for PerformableContextActions;
}

uint64_t type metadata accessor for _UIInterfaceActionExtendedStorage()
{
  return objc_opt_self(_TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage);
}

uint64_t sub_ACEDC(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return (uint64_t)(id)result;
  if (!a3)
    return sub_2BE00(result, a2);
  return result;
}

void _s13DismissActionOwxx(uint64_t a1)
{
  sub_ACF08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_ACF08(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    sub_145A0(result, a2);
  }
}

uint64_t _s13DismissActionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_ACEDC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s13DismissActionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_ACEDC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_ACF08(v6, v7, v8);
  return a1;
}

uint64_t _s13DismissActionOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_ACF08(v4, v5, v6);
  return a1;
}

uint64_t _s13DismissActionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s13DismissActionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_AD090(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_AD0A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIInterfaceAction.DismissAction()
{
  return &type metadata for UIInterfaceAction.DismissAction;
}

uint64_t getEnumTagSinglePayload for ContextActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD1)
    goto LABEL_17;
  if (a2 + 47 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 47) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 47;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 47;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 47;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x30;
  v8 = v6 - 48;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 47 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 47) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD0)
    return ((uint64_t (*)(void))((char *)&loc_AD1AC + 4 * byte_1702FF[v4]))();
  *a1 = a2 + 47;
  return ((uint64_t (*)(void))((char *)sub_AD1E0 + 4 * byte_1702FA[v4]))();
}

uint64_t sub_AD1E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_AD1E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xAD1F0);
  return result;
}

uint64_t sub_AD1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xAD204);
  *(_BYTE *)result = a2 + 47;
  return result;
}

uint64_t sub_AD208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_AD210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextActionType()
{
  return &type metadata for ContextActionType;
}

uint64_t sub_AD22C(void *a1, uint64_t a2, char a3)
{
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (**v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (**v16)();
  uint64_t v17;
  uint64_t v18;

  if (a3)
  {
    if (a3 == 1)
    {
      v5 = a1;
      v6 = (char *)sub_A9154();
      v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__configuration];
      swift_retain();

      if (v7)
      {
        v8 = swift_allocObject(&unk_1CE000, 32, 7);
        *(_QWORD *)(v8 + 16) = v7;
        *(_QWORD *)(v8 + 24) = v5;
        v9 = 1;
        sub_ACEDC((uint64_t)a1, a2, 1);
        swift_retain();
        v10 = (char *)sub_A9154();
        v11 = (uint64_t (**)())&v10[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler];
        v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler];
        v13 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler + 8];
        *v11 = sub_AD434;
        v11[1] = (uint64_t (*)())v8;
        sub_145A0(v12, v13);

        sub_ACF08((uint64_t)a1, a2, 1);
        swift_release(v7);
      }
      else
      {
        v9 = 1;
        sub_ACF08((uint64_t)a1, a2, 1);
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v14 = swift_allocObject(&unk_1CDFD8, 32, 7);
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = a2;
    sub_2BE00((uint64_t)a1, a2);
    sub_2BE00((uint64_t)a1, a2);
    v15 = (char *)sub_A9154();
    v16 = (uint64_t (**)())&v15[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler];
    v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler];
    v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC12NowPlayingUI33_UIInterfaceActionExtendedStorage__didDismissHandler + 8];
    *v16 = sub_AD3E0;
    v16[1] = (uint64_t (*)())v14;
    sub_145A0(v17, v18);

    sub_ACF08((uint64_t)a1, a2, 0);
    return 1;
  }
  return v9;
}

uint64_t sub_AD3B4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_AD3E0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_AD408()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_AD434()
{
  uint64_t v0;

  return sub_A9514(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_AD43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for HorizontalLockupCollectionViewCell.RowPosition(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextActionType.ContextActionGroup(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_AD560 + 4 * byte_170309[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_AD594 + 4 * byte_170304[v4]))();
}

uint64_t sub_AD594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_AD59C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xAD5A4);
  return result;
}

uint64_t sub_AD5B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xAD5B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_AD5BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_AD5C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextActionType.ContextActionGroup()
{
  return &type metadata for ContextActionType.ContextActionGroup;
}

uint64_t sub_AD5E0()
{
  return sub_AD604(&qword_1FF640, &qword_1FF648);
}

uint64_t sub_AD604(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_AD648()
{
  unint64_t result;

  result = qword_1FF650;
  if (!qword_1FF650)
  {
    result = swift_getWitnessTable(&unk_170774, &type metadata for ContextActionType.ContextActionGroup);
    atomic_store(result, (unint64_t *)&qword_1FF650);
  }
  return result;
}

unint64_t sub_AD68C(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

void *sub_AD6A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *result;
  char v16;
  __int128 v17;

  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_135DE8(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = &v5[7 * a1];
      v10 = v9[4];
      v9 += 4;
      v11 = *((_BYTE *)v9 + 48);
      v12 = v9[5];
      v13 = v9[2];
      v14 = *((_BYTE *)v9 + 8);
      v17 = *(_OWORD *)(v9 + 3);
      result = memmove(v9, v9 + 7, 56 * v8);
      v5[2] = v7;
      *v2 = v5;
      *(_QWORD *)a2 = v10;
      *(_BYTE *)(a2 + 8) = v14;
      *(_QWORD *)(a2 + 16) = v13;
      *(_OWORD *)(a2 + 24) = v17;
      *(_QWORD *)(a2 + 40) = v12;
      *(_BYTE *)(a2 + 48) = v11;
      return result;
    }
  }
  v16 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v16, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_AD7CC(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_135E64(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[4 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_AD8C0(unint64_t a1)
{
  return sub_AD8CC(a1, sub_135E78);
}

uint64_t sub_AD8CC(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  char v15;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      v11 = v7 + 8 * a1;
      v12 = *(_QWORD *)(v11 + 32);
      v13 = memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(_QWORD *)(v7 + 16) = v9;
      specialized Array._endMutation()(v13);
      return v12;
    }
  }
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
  __break(1u);
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_AD9B0(uint64_t a1)
{
  specialized Array._endMutation()(a1);
}

id UITraitCollection.safeHorizontalSizeClass.getter()
{
  return sub_AFC78((SEL *)&selRef_horizontalSizeClass);
}

uint64_t sub_AD9EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  double *v10;

  v5 = *(_QWORD *)(a5 + 16);
  if (v5)
  {
    v8 = 0;
    v10 = (double *)(a5 + 56);
    do
    {
      if (*((_QWORD *)v10 - 3) == a1)
      {
        if ((*(_BYTE *)v10 & 1) != 0)
        {
          if ((a4 & 1) != 0)
            return v8;
        }
        else if ((a4 & 1) == 0 && (static CGFloat.==~ infix(_:_:)(*(v10 - 1), *(double *)&a3) & 1) != 0)
        {
          return v8;
        }
      }
      ++v8;
      v10 += 4;
    }
    while (v5 != v8);
  }
  return 0;
}

void sub_ADA8C(uint64_t a1, uint64_t a2)
{
  sub_ADB04(a1, a2, (unint64_t *)&qword_1FD4A0, UIView_ptr);
}

uint64_t sub_ADAA0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3)
      return result;
  }
  return 0;
}

void sub_ADB04(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  if (v8)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        v9 = *(id *)(a2 + 32);
      }
      v10 = v9;
      a4 = (_QWORD *)sub_F174(0, a3, a4);
      v11 = static NSObject.== infix(_:_:)(v10, a1);

      if ((v11 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1))
            break;
          if (a3 == (unint64_t *)v8)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if ((unint64_t)a3 >= *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
              goto LABEL_19;
            v13 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
          }
          v14 = v13;
          v15 = static NSObject.== infix(_:_:)(v13, a1);

          if ((v15 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v16 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v8 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease(a2);
        if (v8)
          continue;
      }
      return;
    }
  }
}

void sub_ADC9C(uint64_t a1, uint64_t a2)
{
  sub_ADB04(a1, a2, (unint64_t *)&qword_203B50, MPModelPodcastChapter_ptr);
}

id UITraitCollection.safeUserInterfaceIdiom.getter()
{
  void *v0;
  id result;
  id v2;
  id v3;
  id v4;

  result = objc_msgSend(v0, "userInterfaceIdiom");
  if (result == (id)-1)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v3 = objc_msgSend(v2, "traitCollection");

    v4 = objc_msgSend(v3, "userInterfaceIdiom");
    return v4;
  }
  return result;
}

double static UIEdgeInsets.+ infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

id UITraitCollection.isInPopover.getter()
{
  return sub_AF4C8();
}

id sub_ADE28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s7HandlerCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id UIBarButtonItem.init(barButtonSystemItem:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _BYTE v14[24];
  objc_super v15;

  v6 = (objc_class *)_s7HandlerCMa();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR____TtCE12NowPlayingUICSo15UIBarButtonItemP33_3C2750B9C1FB5BBBDC498E18BB98C28C7Handler__handler];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v15.receiver = v7;
  v15.super_class = v6;
  swift_retain();
  v9 = objc_msgSendSuper2(&v15, "init");
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "initWithBarButtonSystemItem:target:action:", a1, v9, "handleBarButtonAction:");
  swift_beginAccess(&unk_1FF658, v14, 32, 0);
  v11 = v10;
  v12 = v9;
  objc_setAssociatedObject(v11, &unk_1FF658, v12, (char *)&dword_0 + 1);
  swift_endAccess(v14);

  swift_release(a3);
  return v11;
}

id UIBarButtonItem.init(image:style:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  objc_class *v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _BYTE v18[24];
  objc_super v19;

  v5 = v4;
  v10 = (objc_class *)_s7HandlerCMa();
  v11 = (char *)objc_allocWithZone(v10);
  v12 = &v11[OBJC_IVAR____TtCE12NowPlayingUICSo15UIBarButtonItemP33_3C2750B9C1FB5BBBDC498E18BB98C28C7Handler__handler];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  v19.receiver = v11;
  v19.super_class = v10;
  swift_retain();
  v13 = objc_msgSendSuper2(&v19, "init");
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "initWithImage:style:target:action:", a1, a2, v13, "handleBarButtonAction:");
  swift_beginAccess(&unk_1FF658, v18, 32, 0);
  v15 = v14;
  v16 = v13;
  objc_setAssociatedObject(v15, &unk_1FF658, v16, (char *)&dword_0 + 1);
  swift_endAccess(v18);

  swift_release(a4);
  return v15;
}

id UIBarButtonItem.init(title:style:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  objc_class *v11;
  char *v12;
  char *v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  _BYTE v20[24];
  objc_super v21;

  v6 = v5;
  v11 = (objc_class *)_s7HandlerCMa();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[OBJC_IVAR____TtCE12NowPlayingUICSo15UIBarButtonItemP33_3C2750B9C1FB5BBBDC498E18BB98C28C7Handler__handler];
  *(_QWORD *)v13 = a4;
  *((_QWORD *)v13 + 1) = a5;
  v21.receiver = v12;
  v21.super_class = v11;
  swift_retain();
  v14 = objc_msgSendSuper2(&v21, "init");
  if (a2)
  {
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "initWithTitle:style:target:action:", v15, a3, v14, "handleBarButtonAction:");

  swift_beginAccess(&unk_1FF658, v20, 32, 0);
  v17 = v16;
  v18 = v14;
  objc_setAssociatedObject(v17, &unk_1FF658, v18, (char *)&dword_0 + 1);
  swift_endAccess(v20);

  swift_release(a5);
  return v17;
}

uint64_t UIBarButtonItem.barButtonHandler.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  swift_beginAccess(&unk_1FF658, v7, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_1FF658);
  swift_endAccess(v7);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v7, v1);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_982C((uint64_t)v7, (uint64_t)v8, &qword_1FD880);
  if (!v9)
  {
    sub_9944((uint64_t)v8, &qword_1FD880);
    return 0;
  }
  v2 = _s7HandlerCMa();
  if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
    return 0;
  v3 = v6;
  v4 = *(_QWORD *)&v6[OBJC_IVAR____TtCE12NowPlayingUICSo15UIBarButtonItemP33_3C2750B9C1FB5BBBDC498E18BB98C28C7Handler__handler];
  swift_retain();

  return v4;
}

id UIButton.isTitleTruncated.getter()
{
  void *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  double v12;
  double Width;
  CGRect v14;

  result = objc_msgSend(v0, "titleLabel");
  if (result)
  {
    v2 = result;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v0, "contentRectForBounds:");
    objc_msgSend(v0, "titleRectForContentRect:");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;
    objc_msgSend(v2, "sizeThatFits:", 0.0, 0.0);
    v12 = v11;
    v14.origin.x = v4;
    v14.origin.y = v6;
    v14.size.width = v8;
    v14.size.height = v10;
    Width = CGRectGetWidth(v14);

    return (id)(Width < v12);
  }
  return result;
}

id UIButton.setImageAndTitleSpacing(_:contentEdgeInsets:)(double a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  void *v6;
  char *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;

  v6 = v5;
  v12 = (char *)objc_msgSend(v5, "effectiveUserInterfaceLayoutDirection");
  v13 = objc_msgSend(v5, "traitCollection");
  v14 = UITraitCollection.safeDisplayScale.getter();

  v15 = CGFloat.roundValue(scale:)(v14, a1 * 0.5);
  v16 = v15 + a5;
  if (v12 == (_BYTE *)&dword_0 + 1)
  {
    objc_msgSend(v6, "setContentEdgeInsets:", a2, v16, a4, a3);
    objc_msgSend(v6, "setImageEdgeInsets:", 0.0, v15, 0.0, 0.0);
    v17 = v15;
    v15 = -v15;
  }
  else
  {
    if (v12)
    {
      type metadata accessor for UIUserInterfaceLayoutDirection(0);
      v19 = v18;
      v22 = v18;
      v21[0] = v12;
      unrecognizedEnumValueEncountered(_:)(v21);
      __swift_destroy_boxed_opaque_existential_0(v21);
      objc_msgSend(v6, "setContentEdgeInsets:", a2, a3, a4, v16);
      v22 = v19;
      v21[0] = v12;
      unrecognizedEnumValueEncountered(_:)(v21);
      __swift_destroy_boxed_opaque_existential_0(v21);
      objc_msgSend(v6, "setImageEdgeInsets:", 0.0, 0.0, 0.0, v15);
      v22 = v19;
      v21[0] = v12;
      unrecognizedEnumValueEncountered(_:)(v21);
      __swift_destroy_boxed_opaque_existential_0(v21);
    }
    else
    {
      objc_msgSend(v6, "setContentEdgeInsets:", a2, a3, a4, v16);
      objc_msgSend(v6, "setImageEdgeInsets:", 0.0, 0.0, 0.0, v15);
    }
    v17 = -v15;
  }
  return objc_msgSend(v6, "setTitleEdgeInsets:", 0.0, v15, 0.0, v17);
}

uint64_t UICollectionView.globalIndex(for:)()
{
  void *v0;
  id v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v1 = objc_msgSend(v0, "numberOfSections");
  result = IndexPath.section.getter();
  if (__OFADD__(result, 1))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (result + 1 >= (uint64_t)v1)
    v3 = (uint64_t)v1;
  else
    v3 = result + 1;
  if (v3 < 0)
    goto LABEL_20;
  if (!v3)
    return 0;
  v4 = 0;
  v5 = 0;
  while (1)
  {
    if (v3 == v5)
    {
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v6 = (uint64_t)objc_msgSend(v0, "numberOfItemsInSection:", v5);
    result = IndexPath.section.getter();
    if (v5 == result)
      break;
    v7 = __OFADD__(v4, v6);
    v4 += v6;
    if (v7)
      goto LABEL_18;
    if (v3 == ++v5)
      return 0;
  }
  v8 = IndexPath.item.getter(result);
  if (v8 >= v6)
    return 0;
  v9 = IndexPath.item.getter(v8);
  v7 = __OFADD__(v4, v9);
  result = v4 + v9;
  if (v7)
    goto LABEL_21;
  return result;
}

uint64_t UICollectionView.indexPath(forGlobalIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(a2, 1, 1, v9);
  result = (uint64_t)objc_msgSend(v3, "numberOfSections");
  if (result < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    v12 = result;
    if (result)
    {
      v13 = 0;
      v14 = 0;
      while (1)
      {
        if (v12 == v14)
        {
          __break(1u);
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
        result = (uint64_t)objc_msgSend(v3, "numberOfItemsInSection:", v14);
        if (__OFADD__(v13, result))
          goto LABEL_13;
        if (v13 + result > a1)
          break;
        ++v14;
        v13 += result;
        if (v12 == v14)
          return result;
      }
      result = a1 - v13;
      if (__OFSUB__(a1, v13))
        goto LABEL_15;
      IndexPath.init(item:section:)(result, v14);
      sub_9944(a2, (uint64_t *)&unk_1FA950);
      v10((uint64_t)v8, 0, 1, v9);
      return sub_982C((uint64_t)v8, a2, (uint64_t *)&unk_1FA950);
    }
  }
  return result;
}

unint64_t UICollectionView.totalItemCount.getter()
{
  void *v0;
  unint64_t result;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;

  result = (unint64_t)objc_msgSend(v0, "numberOfSections");
  if ((result & 0x8000000000000000) == 0)
  {
    v2 = 0;
    v3 = result;
    if (!result)
      return v2;
    v4 = 0;
    while (1)
    {
      result = (unint64_t)objc_msgSend(v0, "numberOfItemsInSection:", v4);
      v5 = __OFADD__(v2, result);
      v2 += result;
      if (v5)
        break;
      if (v3 == ++v4)
        return v2;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char *UICollectionView.isLast(indexPath:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *result;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = IndexPath.section.getter(v6);
  result = (char *)objc_msgSend(v2, "numberOfSections");
  v11 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((char *)v9 == v11)
  {
    v13 = IndexPath.item.getter(v12);
    v14 = (char *)objc_msgSend(v2, "numberOfItemsInSection:", v9);
    result = (char *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (!__OFSUB__(v14, 1))
      return (char *)(v13 == (_QWORD)(v14 - 1));
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return 0;
}

uint64_t UICollectionView.visibleSupplementaryElements(of:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "indexPathsForVisibleSupplementaryElementsOfKind:", v5);

  v7 = type metadata accessor for IndexPath(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v9 = (_QWORD *)swift_allocObject(&unk_1CE130, 40, 7);
  v9[2] = v2;
  v9[3] = a1;
  v9[4] = a2;
  v10 = v2;
  swift_bridgeObjectRetain(a2);
  return v8;
}

void sub_AEA6C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  Class isa;
  id v10;

  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FF698) + 48);
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a1, v7);
  v8 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a2, "supplementaryViewForElementKind:atIndexPath:", v8, isa);

  *(_QWORD *)(a3 + v6) = v10;
}

uint64_t static UIEdgeInsets.==~ infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if ((static CGFloat.==~ infix(_:_:)(a1, a5) & 1) != 0
    && (static CGFloat.==~ infix(_:_:)(a2, a6) & 1) != 0
    && (static CGFloat.==~ infix(_:_:)(a3, a7) & 1) != 0)
  {
    return static CGFloat.==~ infix(_:_:)(a4, a8);
  }
  else
  {
    return 0;
  }
}

uint64_t static UIEdgeInsets.!=~ infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  char v14;

  if ((static CGFloat.==~ infix(_:_:)(a1, a5) & 1) != 0
    && (static CGFloat.==~ infix(_:_:)(a2, a6) & 1) != 0
    && (static CGFloat.==~ infix(_:_:)(a3, a7) & 1) != 0)
  {
    v14 = static CGFloat.==~ infix(_:_:)(a4, a8) ^ 1;
  }
  else
  {
    v14 = 1;
  }
  return v14 & 1;
}

double static UIEdgeInsets.- infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 - a5;
}

double _sSo12UIEdgeInsetsV12NowPlayingUIE23removingLayoutDirectionyABSo015UIUserInterfacegH0VF_0(uint64_t a1, double a2)
{
  uint64_t v4;
  _QWORD v6[4];

  if (a1 && a1 != 1)
  {
    type metadata accessor for UIUserInterfaceLayoutDirection(0);
    v6[3] = v4;
    v6[0] = a1;
    unrecognizedEnumValueEncountered(_:)(v6);
    __swift_destroy_boxed_opaque_existential_0(v6);
  }
  return a2;
}

UIImage_optional __swiftcall UIImage.byCroppingToUniformCenter()()
{
  objc_class *v0;
  objc_class *v1;
  objc_class *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  Swift::Bool v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_class *v12;
  UIImage_optional result;

  v1 = v0;
  v2 = v0;
  -[objc_class size](v2, "size");
  v4 = v3;
  v6 = v5;
  if ((static CGFloat.==~ infix(_:_:)(v3, v5) & 1) == 0)
  {
    if (v6 >= v4)
    {
      v9 = round((v6 - v4) * 0.5);
      v8 = 0.0;
      v10 = v4;
      v11 = v4;
    }
    else
    {
      v8 = round((v4 - v6) * 0.5);
      v9 = 0.0;
      v10 = v6;
      v11 = v6;
    }
    v1 = (objc_class *)UIImage.byCropping(to:)(v8, v9, v10, v11);

  }
  v12 = v1;
  result.value.super.isa = v12;
  result.is_nil = v7;
  return result;
}

id UIImage.byCropping(to:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  CGImage *v9;
  CGImage *v10;
  double v11;
  double v12;
  char v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGImageRef v18;
  CGImageRef v19;
  id v20;

  v9 = (CGImage *)objc_msgSend(v4, "CGImage");
  if (!v9)
    return 0;
  v10 = v9;
  if ((static CGSize.==~ infix(_:_:)(v9, a3, a4, 0.0, 0.0) & 1) != 0)
    goto LABEL_7;
  objc_msgSend(v4, "scale");
  v12 = v11;
  v13 = static CGFloat.==~ infix(_:_:)(v11, 1.0);
  v14 = v12 * a1;
  v15 = v12 * a2;
  v16 = v12 * a3;
  v17 = v12 * a4;
  if ((v13 & 1) != 0)
  {
    v17 = a4;
    v16 = a3;
    v15 = a2;
    v14 = a1;
  }
  v18 = CGImageCreateWithImageInRect(v10, *(CGRect *)&v14);
  if (!v18)
  {
LABEL_7:

    return 0;
  }
  v19 = v18;
  v20 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v18, objc_msgSend(v4, "imageOrientation"), v12);

  return v20;
}

UIViewController_optional __swiftcall UINavigationController.removeViewController(_:animated:)(UIViewController _, Swift::Bool animated)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  Class isa;
  Swift::Bool v14;
  objc_class *v15;
  uint64_t v16;
  UIViewController_optional result;

  v3 = v2;
  v6 = objc_msgSend(v2, "viewControllers");
  v7 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v16 = v8;
  swift_bridgeObjectRetain(v8);
  sub_ADB04((uint64_t)_.super.super.isa, v8, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
  v10 = v9;
  LOBYTE(v6) = v11;
  swift_bridgeObjectRelease(v8);
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease(v8);
    v12 = 0;
  }
  else
  {
    v12 = sub_AD8CC(v10, sub_135E78);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setViewControllers:animated:", isa, animated, swift_bridgeObjectRelease(v16).n128_f64[0]);

  }
  v15 = (objc_class *)v12;
  result.value.super.super.isa = v15;
  result.is_nil = v14;
  return result;
}

double UIScreen.Dimensions.init(fromScreen:)(void *a1)
{
  double v2;
  double v3;
  id v4;

  objc_msgSend(a1, "bounds");
  v3 = v2;
  v4 = objc_msgSend(a1, "fixedCoordinateSpace");
  objc_msgSend(v4, "bounds");
  swift_unknownObjectRelease(v4);

  return v3;
}

double UIScreen.Dimensions.fixedSize.getter(double a1, double a2, double a3)
{
  return a3;
}

uint64_t static UIScreen.Dimensions.== infix(_:_:)(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v13;

  v13 = static CGSize.==~ infix(_:_:)(a1, a2, a3, a6, a7);
  if ((v13 & 1) != 0)
    return static CGSize.==~ infix(_:_:)(v13, a4, a5, a8, a9);
  else
    return 0;
}

uint64_t sub_AF11C(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = static CGSize.==~ infix(_:_:)(a1, *a1, a1[1], *a2, a2[1]);
  if ((v6 & 1) != 0)
    return static CGSize.==~ infix(_:_:)(v6, v2, v3, v4, v5);
  else
    return 0;
}

double UIScreen.dimensions.getter()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;

  v1 = v0;
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v4 = objc_msgSend(v1, "fixedCoordinateSpace");
  objc_msgSend(v4, "bounds");
  swift_unknownObjectRelease(v4);

  return v3;
}

id UIScrollView.applyContentInsetAdditions(oldInsets:newInsets:animated:)(id result, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  void *v9;
  int v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;

  if (a2 != a6 || a3 != a7 || a4 != a8 || a5 != a9)
  {
    v21 = result;
    v22 = objc_msgSend(v9, "_isAutomaticContentOffsetAdjustmentEnabled");
    objc_msgSend(v9, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
    objc_msgSend(v9, "contentInset");
    v30 = v23;
    v31 = v24;
    v32 = v25;
    v33 = v26;
    objc_msgSend(v9, "contentOffset");
    v34 = v28;
    v35 = v27;
    objc_msgSend(v9, "setContentInset:", v30 - a2 + a6, v31 - a3 + a7, v32 - a4 + a8, v33 - a5 + a9);
    v29 = v34 + a2 - a6;
    if (v21 == 2)
      objc_msgSend(v9, "setContentOffset:", v35, v29);
    else
      objc_msgSend(v9, "setContentOffset:animated:", v21 & 1, v35, v29);
    return objc_msgSend(v9, "_setAutomaticContentOffsetAdjustmentEnabled:", v22);
  }
  return result;
}

id UIScrollView.applyScrollIndicatorInsetAdditions(oldInsets:newInsets:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  void *v8;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id result;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;

  if (a1 != a5 || a2 != a6 || a3 != a7 || a4 != a8)
  {
    objc_msgSend(v8, "verticalScrollIndicatorInsets");
    v31 = v20;
    v32 = v21;
    v35 = v23;
    v36 = v22;
    objc_msgSend(v8, "horizontalScrollIndicatorInsets");
    v33 = v25;
    v34 = v24;
    v27 = v26 - a2 + a6;
    v29 = v28 - a4 + a8;
    objc_msgSend(v8, "setVerticalScrollIndicatorInsets:", v31 - a1 + a5, v36, v32 - a3 + a7, v35);
    return objc_msgSend(v8, "setHorizontalScrollIndicatorInsets:", v34, v27, v33, v29);
  }
  return result;
}

UITraitCollection __swiftcall UITraitCollection.init(isMediaPicker:)(Swift::Bool isMediaPicker)
{
  UITraitCollection result;

  sub_AF5EC(isMediaPicker);
  return result;
}

id UITraitCollection.isMediaPicker.getter()
{
  return sub_AF4C8();
}

id sub_AF4C8()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "_valueForTraitNamed:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_982C((uint64_t)v8, (uint64_t)v9, &qword_1FD880);
  if (!v10)
  {
    sub_9944((uint64_t)v9, &qword_1FD880);
    return 0;
  }
  v3 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
  if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = v7;
  v5 = objc_msgSend(v7, "BOOLValue");

  return v5;
}

UITraitCollection __swiftcall UITraitCollection.init(isStandardNavigationBar:)(Swift::Bool isStandardNavigationBar)
{
  UITraitCollection result;

  sub_AF5EC(isStandardNavigationBar);
  return result;
}

void sub_AF5EC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSString v7;
  id v8;
  void *ObjCClassFromMetadata;
  Class isa;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_16B2D0;
  v5 = (void *)objc_opt_self(UITraitCollection);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a1 & 1);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "_traitCollectionWithValue:forTraitNamed:", v6, v7);

  if (v8)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v1);
    *(_QWORD *)(v4 + 32) = v8;
    specialized Array._endMutation()(ObjCClassFromMetadata);
    sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(ObjCClassFromMetadata, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

id UITraitCollection.isStandardNavigationBar.getter()
{
  return sub_AF4C8();
}

void UITraitCollection.init(screenSizeClass:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  void *ObjCClassFromMetadata;
  Class isa;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_16B2D0;
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "_traitCollectionWithValue:forTraitNamed:", v5, v6);

  if (v7)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    *(_QWORD *)(v3 + 32) = v7;
    specialized Array._endMutation()(ObjCClassFromMetadata);
    sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(ObjCClassFromMetadata, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

id UITraitCollection.screenSizeClass.getter()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "_valueForTraitNamed:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_982C((uint64_t)v8, (uint64_t)v9, &qword_1FD880);
  if (!v10)
  {
    sub_9944((uint64_t)v9, &qword_1FD880);
    return 0;
  }
  v3 = sub_F174(0, (unint64_t *)&qword_1FD878, NSNumber_ptr);
  if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = v7;
  v5 = objc_msgSend(v7, "integerValue");

  return v5;
}

UITraitCollection __swiftcall UITraitCollection.init(isInPopover:)(Swift::Bool isInPopover)
{
  UITraitCollection result;

  sub_AF5EC(isInPopover);
  return result;
}

UITraitCollection __swiftcall UITraitCollection.init(navigationBarBackdropGroupName:)(Swift::String navigationBarBackdropGroupName)
{
  void *object;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  NSString v6;
  id v7;
  UITraitCollection result;
  void *ObjCClassFromMetadata;
  Class isa;
  id v11;

  object = navigationBarBackdropGroupName._object;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_16B2D0;
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "_traitCollectionWithValue:forTraitNamed:", v5, v6);

  if (v7)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    *(_QWORD *)(v3 + 32) = v7;
    specialized Array._endMutation()(ObjCClassFromMetadata);
    sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(ObjCClassFromMetadata, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return (UITraitCollection)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t UITraitCollection.navigationBarBackdropGroupName.getter()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "_valueForTraitNamed:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_982C((uint64_t)v5, (uint64_t)v6, &qword_1FD880);
  if (v7)
  {
    if ((swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v4;
  }
  else
  {
    sub_9944((uint64_t)v6, &qword_1FD880);
  }
  return 0;
}

UITraitCollection __swiftcall UITraitCollection.init(isInColumnLayout:)(Swift::Bool isInColumnLayout)
{
  UITraitCollection result;

  sub_AF5EC(isInColumnLayout);
  return result;
}

id UITraitCollection.isInColumnLayout.getter()
{
  return sub_AF4C8();
}

id UITraitCollection.safeVerticalSizeClass.getter()
{
  return sub_AFC78((SEL *)&selRef_verticalSizeClass);
}

id sub_AFC78(SEL *a1)
{
  void *v1;
  id result;
  id v4;
  id v5;
  id v6;

  result = objc_msgSend(v1, *a1);
  if (!result)
  {
    v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v5 = objc_msgSend(v4, "traitCollection");

    v6 = objc_msgSend(v5, *a1);
    return v6;
  }
  return result;
}

id sub_AFD04(uint64_t a1, uint64_t a2)
{
  return sub_AFD1C(a1, a2, (SEL *)&selRef_horizontalSizeClass);
}

id sub_AFD10(uint64_t a1, uint64_t a2)
{
  return sub_AFD1C(a1, a2, (SEL *)&selRef_verticalSizeClass);
}

id sub_AFD1C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id result;
  id v6;
  id v7;
  id v8;

  result = objc_msgSend(*v3, *a3);
  if (!result)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v7 = objc_msgSend(v6, "traitCollection");

    v8 = objc_msgSend(v7, *a3);
    return v8;
  }
  return result;
}

id sub_AFDA8()
{
  id *v0;
  id result;
  id v2;
  id v3;
  id v4;

  result = objc_msgSend(*v0, "userInterfaceIdiom");
  if (result == (id)-1)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v3 = objc_msgSend(v2, "traitCollection");

    v4 = objc_msgSend(v3, "userInterfaceIdiom");
    return v4;
  }
  return result;
}

id UIView.shadowPathIsBounds.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "layer");
  v2 = objc_msgSend(v1, "shadowPathIsBounds");

  return v2;
}

void UIView.shadowPathIsBounds.setter(char a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setShadowPathIsBounds:", a1 & 1);

}

void (*UIView.shadowPathIsBounds.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  id v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = objc_msgSend(v1, "layer");
  v4 = objc_msgSend(v3, "shadowPathIsBounds");

  *(_BYTE *)(a1 + 8) = v4;
  return sub_AFF40;
}

void sub_AFF40(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = objc_msgSend(*(id *)a1, "layer");
  objc_msgSend(v2, "setShadowPathIsBounds:", v1);

}

void UIView.shadow.getter(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  float v8;
  float v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v4 = objc_msgSend(v1, "layer");
  v5 = objc_msgSend(v4, "shadowColor");

  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v5);

    v3 = v6;
  }
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "shadowOpacity");
  v9 = v8;

  v10 = v9;
  v11 = objc_msgSend(v1, "layer");
  objc_msgSend(v11, "shadowRadius");
  v13 = v12;

  v14 = objc_msgSend(v1, "layer");
  objc_msgSend(v14, "shadowOffset");
  v16 = v15;
  v18 = v17;

  *(_QWORD *)a1 = v3;
  *(double *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 24) = v16;
  *(_QWORD *)(a1 + 32) = v18;
}

void UIView.shadow.setter(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  id v9;

  v3 = objc_msgSend(v1, "layer");
  v4 = objc_msgSend(objc_retainAutorelease(*(id *)a1), "cgColor");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v3, "setShadowColor:", v5);

    v6 = objc_msgSend(v1, "layer");
    objc_msgSend(v6, "setShadowOffset:", *(double *)(a1 + 24), *(double *)(a1 + 32));

    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setShadowRadius:", *(double *)(a1 + 16));

    v9 = objc_msgSend(v1, "layer");
    v8 = *(double *)(a1 + 8);
    *(float *)&v8 = v8;
    objc_msgSend(v9, "setShadowOpacity:", v8);
    sub_30530((id *)a1);

  }
  else
  {
    __break(1u);
  }
}

void (*UIView.shadow.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[15] = v1;
  UIView.shadow.getter((uint64_t)(v3 + 10));
  return sub_B0260;
}

void sub_B0260(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  id v5;

  v2 = *a1;
  v3 = *a1 + 80;
  v4 = *(_OWORD *)(*a1 + 96);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)v2 = *(_OWORD *)v3;
    *(_OWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 + 32);
    v5 = *(id *)v2;
    UIView.shadow.setter(v2);

  }
  else
  {
    *(_OWORD *)(v2 + 40) = *(_OWORD *)v3;
    *(_OWORD *)(v2 + 56) = v4;
    *(_QWORD *)(v2 + 72) = *(_QWORD *)(v3 + 32);
    UIView.shadow.setter(v2 + 40);
  }
  free((void *)v2);
}

double UIView.border.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double v5;
  double v6;

  v1 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v2 = objc_msgSend(v0, "layer");
  v3 = objc_msgSend(v2, "borderColor");

  if (v3)
  {
    objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v3);

  }
  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "borderWidth");
  v6 = v5;

  return v6;
}

void UIView.border.setter(void *a1, double a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = objc_msgSend(v2, "layer");
  objc_msgSend(v5, "setBorderWidth:", a2);

  v6 = objc_msgSend(v2, "layer");
  v9 = objc_retainAutorelease(a1);
  v7 = objc_msgSend(v9, "cgColor");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v6, "setBorderColor:", v8);

  }
  else
  {
    __break(1u);
  }
}

void (*UIView.border.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  a1[2] = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v4 = objc_msgSend(v1, "layer");
  v5 = objc_msgSend(v4, "borderColor");

  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v5);

    v3 = v6;
  }
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "borderWidth");
  v9 = v8;

  *a1 = v3;
  a1[1] = v9;
  return sub_B058C;
}

void sub_B058C(uint64_t a1, char a2)
{
  void *v2;
  double v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)a1;
  v3 = *(double *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v5 = v2;
    v6 = objc_msgSend(v4, "layer");
    objc_msgSend(v6, "setBorderWidth:", v3);

    v12 = objc_msgSend(v4, "layer");
    v7 = objc_retainAutorelease(v5);
    v8 = objc_msgSend(v7, "cgColor");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v12, "setBorderColor:", v9);

LABEL_6:
      return;
    }
    __break(1u);
  }
  else
  {
    v10 = objc_msgSend(*(id *)(a1 + 16), "layer");
    objc_msgSend(v10, "setBorderWidth:", v3);

    v12 = objc_msgSend(v4, "layer");
    v11 = objc_msgSend(objc_retainAutorelease(v2), "cgColor");
    if (v11)
    {
      v9 = v11;
      objc_msgSend(v12, "setBorderColor:", v9);
      goto LABEL_6;
    }
  }
  __break(1u);
}

double UIView.cornerRadius.getter()
{
  void *v0;
  id v1;
  double v2;
  double v3;

  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "cornerRadius");
  v3 = v2;

  return v3;
}

void UIView.cornerRadius.setter(double a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setCornerRadius:", a1);

}

void (*UIView.cornerRadius.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = v1;
  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "cornerRadius");
  v5 = v4;

  *a1 = v5;
  return sub_B0804;
}

void sub_B0804(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)a1;
  v2 = objc_msgSend(*(id *)(a1 + 8), "layer");
  objc_msgSend(v2, "setCornerRadius:", v1);

}

double UIView.untransformedFrame.getter()
{
  void *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  double v10;
  double v11;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "center");
  v10 = v9;
  v13.origin.x = v2;
  v13.origin.y = v4;
  v13.size.width = v6;
  v13.size.height = v8;
  v11 = v10 - CGRectGetWidth(v13) * 0.5;
  v14.origin.x = v2;
  v14.origin.y = v4;
  v14.size.width = v6;
  v14.size.height = v8;
  CGRectGetHeight(v14);
  v15.origin.x = v2;
  v15.origin.y = v4;
  v15.size.width = v6;
  v15.size.height = v8;
  CGRectGetWidth(v15);
  v16.origin.x = v2;
  v16.origin.y = v4;
  v16.size.width = v6;
  v16.size.height = v8;
  CGRectGetHeight(v16);
  return v11;
}

id UIView.untransformedFrame.setter(double a1, double a2, double a3, double a4)
{
  void *v4;

  CGRect.center.getter(objc_msgSend(v4, "setBounds:", 0.0, 0.0), a1, a2, a3, a4);
  return objc_msgSend(v4, "setCenter:");
}

Swift::Void __swiftcall UIView.visualizeLayout(with:)(UIColor with)
{
  void *v1;
  objc_class *v3;
  id v4;
  id v5;
  objc_class *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;

  v3 = (objc_class *)objc_msgSend(v1, "viewWithTag:", 1234);
  if (v3)
  {
    isa = v3;
    objc_msgSend(v1, "bringSubviewToFront:");
LABEL_5:

    return;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = -[objc_class colorWithAlphaComponent:](with.super.isa, "colorWithAlphaComponent:", 0.2);
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = with.super.isa;
  v7 = objc_msgSend(v4, "layer");
  objc_msgSend(v7, "setBorderWidth:", 1.0);

  v8 = objc_msgSend(v4, "layer");
  v9 = objc_retainAutorelease(v6);
  v10 = -[objc_class cgColor](v9, "cgColor");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v8, "setBorderColor:", v11);

    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setTag:", 1234);
    objc_msgSend(v4, "setUserInteractionEnabled:", 0);
    objc_msgSend(v1, "addSubview:", v4);
    v12 = (void *)objc_opt_self(NSLayoutConstraint);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v14 = swift_allocObject(v13, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_16D2B0;
    v15 = objc_msgSend(v4, "topAnchor");
    v16 = objc_msgSend(v1, "topAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v14 + 32) = v17;
    v18 = objc_msgSend(v4, "bottomAnchor");
    v19 = objc_msgSend(v1, "bottomAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v14 + 40) = v20;
    v21 = objc_msgSend(v4, "leadingAnchor");
    v22 = objc_msgSend(v1, "leadingAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v14 + 48) = v23;
    v24 = objc_msgSend(v4, "trailingAnchor");
    v25 = objc_msgSend(v1, "trailingAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v14 + 56) = v26;
    specialized Array._endMutation()(v27);
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "activateConstraints:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

    goto LABEL_5;
  }
  __break(1u);
}

void sub_B0EF0(UIColor a1)
{
  UIView.visualizeLayout(with:)(a1);
}

void UIView.traverseViewHierarchy(_:)(void (*a1)(void *), uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;

  a1(v2);
  v5 = objc_msgSend(v2, "subviews");
  v6 = sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    if (v8)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v12 = v7;
  else
    v12 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_13;
LABEL_3:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
      else
        v10 = *(id *)(v7 + 8 * i + 32);
      v11 = v10;
      UIView.traverseViewHierarchy(_:)(a1, a2);

    }
    goto LABEL_13;
  }
  __break(1u);
}

Swift::Void __swiftcall UILayoutGuide.visualizeLayout(with:)(UIColor with)
{
  void *v1;
  id v3;
  void *v4;
  objc_class *v5;
  id v6;
  id v7;
  objc_class *v8;
  id v9;
  id v10;
  objc_class *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;

  v3 = objc_msgSend(v1, "owningView");
  if (v3)
  {
    v4 = v3;
    v5 = (objc_class *)objc_msgSend(v3, "viewWithTag:", 1234);
    if (v5)
    {
      isa = v5;
      objc_msgSend(v4, "bringSubviewToFront:");
LABEL_7:

      return;
    }
    v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v7 = -[objc_class colorWithAlphaComponent:](with.super.isa, "colorWithAlphaComponent:", 0.2);
    objc_msgSend(v6, "setBackgroundColor:", v7);

    v8 = with.super.isa;
    v9 = objc_msgSend(v6, "layer");
    objc_msgSend(v9, "setBorderWidth:", 1.0);

    v10 = objc_msgSend(v6, "layer");
    v11 = objc_retainAutorelease(v8);
    v12 = -[objc_class cgColor](v11, "cgColor");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v10, "setBorderColor:", v13);

      objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v6, "setTag:", 1234);
      objc_msgSend(v6, "setUserInteractionEnabled:", 0);
      objc_msgSend(v4, "addSubview:", v6);
      v14 = (void *)objc_opt_self(NSLayoutConstraint);
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
      v16 = swift_allocObject(v15, 64, 7);
      *(_OWORD *)(v16 + 16) = xmmword_16D2B0;
      v17 = objc_msgSend(v6, "topAnchor");
      v18 = objc_msgSend(v1, "topAnchor");
      v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

      *(_QWORD *)(v16 + 32) = v19;
      v20 = objc_msgSend(v6, "bottomAnchor");
      v21 = objc_msgSend(v1, "bottomAnchor");
      v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

      *(_QWORD *)(v16 + 40) = v22;
      v23 = objc_msgSend(v6, "leadingAnchor");
      v24 = objc_msgSend(v1, "leadingAnchor");
      v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

      *(_QWORD *)(v16 + 48) = v25;
      v26 = objc_msgSend(v6, "trailingAnchor");
      v27 = objc_msgSend(v1, "trailingAnchor");
      v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

      *(_QWORD *)(v16 + 56) = v28;
      specialized Array._endMutation()(v29);
      sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v14, "activateConstraints:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

      v4 = v6;
      goto LABEL_7;
    }
    __break(1u);
  }
}

void sub_B1448(UIColor a1)
{
  UILayoutGuide.visualizeLayout(with:)(a1);
}

uint64_t UIViewController.musicRestorationIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "restorationIdentifier");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void UIViewController.musicRestorationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (v5)
  {
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    if (a2)
    {
      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v2, "setRestorationIdentifier:", v6);

  }
}

void (*UIViewController.musicRestorationIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, "restorationIdentifier");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_B160C;
}

void sub_B160C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(a1[1]);
    UIViewController.musicRestorationIdentifier.setter(v3, v2);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    UIViewController.musicRestorationIdentifier.setter(*a1, v2);
  }
}

id UIViewController.musicRestorationClass.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, "restorationClass");
  if (result)
    return (id)swift_getObjCClassMetadata(result);
  return result;
}

void UIViewController.musicRestorationClass.setter(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t ObjCClassFromMetadata;

  v3 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (!v4)
  {
    if (a1)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a1);
    else
      ObjCClassFromMetadata = 0;
    objc_msgSend(v1, "setRestorationClass:", ObjCClassFromMetadata);
  }
}

void (*UIViewController.musicRestorationClass.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  id ObjCClassMetadata;

  a1[1] = v1;
  ObjCClassMetadata = objc_msgSend(v1, "restorationClass");
  if (ObjCClassMetadata)
    ObjCClassMetadata = (id)swift_getObjCClassMetadata(ObjCClassMetadata);
  *a1 = ObjCClassMetadata;
  return sub_B1770;
}

void sub_B1770(uint64_t *a1, char a2)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t ObjCClassFromMetadata;

  v4 = *a1;
  v5 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v6 = objc_msgSend(v5, "userInterfaceIdiom");

  if ((a2 & 1) != 0)
  {
    if (!v6)
    {
      if (v4)
      {
LABEL_4:
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4);
LABEL_9:
        objc_msgSend((id)a1[1], "setRestorationClass:", ObjCClassFromMetadata);
        return;
      }
LABEL_8:
      ObjCClassFromMetadata = 0;
      goto LABEL_9;
    }
  }
  else if (!v6)
  {
    if (v4)
      goto LABEL_4;
    goto LABEL_8;
  }
}

BOOL UIViewController.canBeDismissed.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "presentingViewController");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

Swift::Bool __swiftcall UIViewController.isDescendant(of:)(UIViewController of)
{
  void *v1;
  objc_class *v3;
  Class v4;
  objc_class *v5;

  v3 = (objc_class *)objc_msgSend(v1, "parentViewController");
  if (v3)
  {
    v4 = v3;
    while (v4 != of.super.super.isa)
    {
      v5 = (objc_class *)-[objc_class parentViewController](v4, "parentViewController");

      v4 = v5;
      if (!v5)
      {
        LOBYTE(v3) = 0;
        return (char)v3;
      }
    }

    LOBYTE(v3) = 1;
  }
  return (char)v3;
}

void UIViewController.traverseViewControllerHierarchy(_:)(void (*a1)(void *), uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;

  v3 = v2;
  a1(v2);
  v6 = objc_msgSend(v2, "childViewControllers");
  v7 = sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v13 = v8;
    else
      v13 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v8);
    if (!v9)
      goto LABEL_13;
  }
  else
  {
    v9 = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
    if (!v9)
      goto LABEL_13;
  }
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
    else
      v11 = *(id *)(v8 + 8 * i + 32);
    v12 = v11;
    UIViewController.traverseViewControllerHierarchy(_:)(a1, a2);

  }
LABEL_13:
  v14 = objc_msgSend(v3, "presentedViewController", swift_bridgeObjectRelease(v8).n128_f64[0]);
  if (v14)
  {
    v15 = v14;
    UIViewController.traverseViewControllerHierarchy(_:)(a1, a2);

  }
}

uint64_t _s7HandlerCMa()
{
  return objc_opt_self(_TtCE12NowPlayingUICSo15UIBarButtonItemP33_3C2750B9C1FB5BBBDC498E18BB98C28C7Handler);
}

uint64_t sub_B1A94()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_B1AC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_AEA6C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_B1ACC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = (2 * a2) | 1;
  return result;
}

ValueMetadata *type metadata accessor for UIScreen.Dimensions()
{
  return &type metadata for UIScreen.Dimensions;
}

uint64_t _s6ShadowVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t _s6ShadowVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t _s6ShadowVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t _s6ShadowVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6ShadowVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIView.Shadow()
{
  return &type metadata for UIView.Shadow;
}

_QWORD *initializeBufferWithCopyOfBuffer for Artwork.BorderTreatment(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for Artwork.BorderTreatment(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for Artwork.BorderTreatment(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for UIView.Border()
{
  return &type metadata for UIView.Border;
}

uint64_t sub_B1D30(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

double sub_B1D50()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  ObjectType = swift_getObjectType(v0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDFB8);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v3 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v3 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  v4 = UIView.registerForTraitChanges<A>(_:handler:)(v3, sub_B2520, 0, ObjectType);
  swift_unknownObjectRelease(v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t sub_B1F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t KeyPath;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void (*v47)(_QWORD *, _QWORD);
  char *v48;
  id v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[5];

  v2 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v56 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203570);
  __chkstk_darwin(v4);
  v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributedString.FormattingOptions(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0, v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AttributedString(0);
  v54 = *(_QWORD *)(v16 - 8);
  v55 = v16;
  v17 = __chkstk_darwin(v16);
  v53 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UIButton.Configuration(0, v17);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (id)objc_opt_self(UITraitCollection);
  v23 = objc_msgSend(v51, "currentTraitCollection");
  v24 = objc_msgSend(v23, "accessibilityContrast");

  if (v24)
    static UIButton.Configuration.filled()();
  else
    static UIButton.Configuration.bordered()();
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a1, v22, v19);
  if (qword_1F9518 != -1)
    swift_once(&qword_1F9518, sub_B24E4);
  v25 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_1FF6A0, 2);
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v26, v25);

  v50 = v27;
  v28 = UIButton.Configuration.image.setter(v27);
  UIButton.Configuration.imagePadding.setter(v28, 3.0);
  String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  v29 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 1, 1, v29);
  v59[0] = _swiftEmptyArrayStorage;
  v30 = sub_B25AC();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF6E0);
  v32 = sub_B25F4();
  v33 = dispatch thunk of SetAlgebra.init<A>(_:)(v59, v31, v32, v6, v30);
  v34 = v53;
  AttributedString.init(localized:options:table:bundle:locale:comment:)(v15, v8, 0, 0, 0, v12, 0, 0, v33, 256);
  KeyPath = swift_getKeyPath(&unk_1708F8);
  __chkstk_darwin(KeyPath);
  v36 = swift_getKeyPath(&unk_170928);
  v37 = (void *)qword_1FF6A0;
  v59[0] = qword_1FF6A0;
  v38 = sub_B2648();
  v39 = v37;
  AttributedString.subscript.setter(v59, v36, v38);
  v41 = v54;
  v40 = v55;
  v42 = v52;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v52, v34, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  UIButton.Configuration.attributedTitle.setter(v42);
  v43 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v43, "labelColor"));
  v44 = objc_msgSend(v51, "currentTraitCollection");
  v45 = objc_msgSend(v44, "accessibilityContrast");

  if (v45)
  {
    UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v43, "secondarySystemBackgroundColor"));
  }
  else
  {
    v46 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1);
    v47 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v59);
    UIBackgroundConfiguration.visualEffect.setter(v46);
    v47(v59, 0);
  }
  v48 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v58);
  UIButton.Configuration.cornerStyle.setter(v48);
  UIButton.Configuration.contentInsets.setter(10.0, 13.0, 10.0, 16.0);

  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v34, v40);
}

uint64_t type metadata accessor for TranscriptSearchButton()
{
  return objc_opt_self(_TtC12NowPlayingUI22TranscriptSearchButton);
}

uint64_t sub_B24E4()
{
  uint64_t result;

  sub_7938C();
  result = static UIFont.emphasizedPreferredFont(forTextStyle:)(UIFontTextStyleSubheadline);
  qword_1FF6A0 = result;
  return result;
}

uint64_t sub_B2520()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF6D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B1F28((uint64_t)v2);
  v4 = type metadata accessor for UIButton.Configuration(0, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
  return UIButton.configuration.setter(v2);
}

unint64_t sub_B25AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FF6D8;
  if (!qword_1FF6D8)
  {
    v1 = type metadata accessor for AttributedString.FormattingOptions(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributedString.FormattingOptions, v1);
    atomic_store(result, (unint64_t *)&qword_1FF6D8);
  }
  return result;
}

unint64_t sub_B25F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FF6E8;
  if (!qword_1FF6E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FF6E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1FF6E8);
  }
  return result;
}

unint64_t sub_B2648()
{
  unint64_t result;

  result = qword_1FF6F0;
  if (!qword_1FF6F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_1FF6F0);
  }
  return result;
}

uint64_t sub_B2690()
{
  return 8;
}

uint64_t sub_B269C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_B26A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_B26B8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

ValueMetadata *type metadata accessor for DeprecatedText()
{
  return &type metadata for DeprecatedText;
}

uint64_t sub_B26D4@<X0>(void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  void *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a3;
  v5 = (int *)type metadata accessor for NowPlayingPodcastItem(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (char *)v9 + *(int *)(v7 + 32);
  v11 = enum case for NowPlayingViewModel.SubtitleStyle.menu(_:);
  v12 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v10, v11, v12);
  v14 = (uint64_t)v9 + v5[12];
  v15 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = objc_msgSend(a1, "title");
  if (!v16)
  {

    __swift_destroy_boxed_opaque_existential_0(a2);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    sub_9944(v14, &qword_1FBFE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v6 + 56))(v35, 1, 1, v5);
  }
  v17 = v16;
  v34 = v6;
  v18 = v35;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v21 = v20;

  *v9 = objc_msgSend(a1, "identifiers");
  v9[1] = v19;
  v9[2] = v21;
  v9[3] = MPModelPodcastEpisode.sublineStringForPlayer.getter();
  v9[4] = v22;
  v23 = objc_msgSend(a1, "author");
  v24 = v23;
  if (v23)
  {
    v25 = objc_msgSend(v23, "name");

    if (v25)
    {
      v24 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v27 = v26;

      goto LABEL_8;
    }
    v24 = 0;
  }
  v27 = 0;
LABEL_8:
  v9[5] = v24;
  v9[6] = v27;
  *(_QWORD *)((char *)v9 + v5[9]) = MPModelPodcastEpisode.trailingBadges.getter();
  v29 = objc_msgSend(a1, "podcast");
  if (v29 && (v30 = v29, v31 = objc_msgSend(v29, "supportsSubscription"), v30, v31))
  {
    v37 = type metadata accessor for MetadataButtonStyle(0);
    v38 = sub_8330(&qword_1FF718, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataButtonStyle, (uint64_t)&protocol conformance descriptor for MetadataButtonStyle);
    __swift_allocate_boxed_opaque_existential_1(&v36);
    static MetadataStyle<>.button.getter();
  }
  else
  {
    v37 = type metadata accessor for MetadataAutomaticStyle(0);
    v38 = sub_8330(&qword_1FF710, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataAutomaticStyle, (uint64_t)&protocol conformance descriptor for MetadataAutomaticStyle);
    __swift_allocate_boxed_opaque_existential_1(&v36);
    static MetadataStyle<>.automatic.getter();
  }
  v32 = v34;

  sub_27890(&v36, (uint64_t)v9 + v5[10]);
  sub_27890(a2, (uint64_t)v9 + v5[11]);
  sub_B41A4((uint64_t)v9, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v32 + 56))(v18, 0, 1, v5);
  return sub_402E8((uint64_t)v9);
}

id MPModelPodcastEpisode.sublineStringForPlayer.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  char *v17;
  char *v18;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t countAndFlagsBits;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DateComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF6F8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v30 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF700);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(v1, "podcast");
  if (v15)
  {
    v16 = v15;
    v17 = (char *)objc_msgSend(v15, "sortType");

    if (v17)
    {
      if (v17 == (_BYTE *)&dword_0 + 2
        && ((uint64_t)objc_msgSend(v1, "seasonNumber") > 0 || (uint64_t)objc_msgSend(v1, "episodeNumber") >= 1))
      {
        v18 = (char *)objc_msgSend(v1, "episodeType");
        if (v18 == (_BYTE *)&dword_0 + 2)
          return (id)sub_B2FFC(0xD000000000000014, (void *)0x8000000000188E90, 0xD000000000000013, (void *)0x8000000000188EB0);
        if (v18 == (_BYTE *)&dword_0 + 3)
          return (id)sub_B2FFC(0xD000000000000016, (void *)0x8000000000188E10, 0xD000000000000015, (void *)0x8000000000188E30);
        return (id)sub_B33AC();
      }
      v20 = objc_msgSend(v1, "releaseDateComponents");
      if (v20)
      {
        v21 = v20;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        v22 = 0;
      }
      else
      {
        v22 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, v22, 1, v2);
      sub_B4120((uint64_t)v9, (uint64_t)v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
      {
        v23 = &qword_1FF6F8;
        v24 = (uint64_t)v11;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
        v25 = sub_9944((uint64_t)v11, &qword_1FF6F8);
        DateComponents.date.getter(v25);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v26 = type metadata accessor for Date(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v26) != 1)
        {
          countAndFlagsBits = Date.verboseDisplayStringWithoutTimeAndCurrentYear()()._countAndFlagsBits;
          (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v26);
          return (id)countAndFlagsBits;
        }
        v23 = &qword_1FF700;
        v24 = (uint64_t)v14;
      }
      sub_9944(v24, v23);
    }
  }
  return MPModelPodcastEpisode.fallbackSublineFromAuthorName.getter();
}

_QWORD *MPModelPodcastEpisode.trailingBadges.getter()
{
  void *v0;
  id v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!objc_msgSend(v0, "isExplicitEpisode"))
    return _swiftEmptyArrayStorage;
  v1 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
  v2 = (char *)objc_msgSend(v1, "explicitContentBadgeTreatment");

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF708);
  v4 = *(_QWORD *)(type metadata accessor for TrailingBadge(0) - 8);
  v5 = swift_allocObject(v3, ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72), *(unsigned __int8 *)(v4 + 80) | 7);
  *(_OWORD *)(v5 + 16) = xmmword_16B3D0;
  if (v2 == (_BYTE *)&dword_0 + 1)
    static TrailingBadge.koreaAgeRestricted.getter();
  else
    static TrailingBadge.explicit.getter();
  return (_QWORD *)v5;
}

uint64_t sub_B2E18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t sub_B2E44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t sub_B2E70(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 36)));
}

uint64_t sub_B2E7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t sub_B2EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_B2EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_DF78(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_B2F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_5D10C(v2 + *(int *)(a1 + 48), a2);
}

uint64_t sub_B2F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_DF78(v2 + *(int *)(a1 + 44), a2);
}

id sub_B2F38@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

id MPModelPodcastEpisode.fallbackSublineFromAuthorName.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "podcast");
  v2 = v1;
  if (!v1)
    return 0;
  v3 = objc_msgSend(v1, "author");

  if (v3)
  {
    v4 = objc_msgSend(v3, "name");

    if (v4)
    {
      v3 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_B2FFC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v28;
  unint64_t v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  id v33;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v36._countAndFlagsBits = a3;
  v36._object = a4;
  v38._countAndFlagsBits = a1;
  v38._object = a2;
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v39._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000188DF0;
  v7._countAndFlagsBits = 0xD000000000000014;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v39);

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_16B3D0;
  v12 = objc_msgSend(v4, "seasonNumber");
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v12;
  v35 = static String.localizedStringWithFormat(_:_:)(v9._countAndFlagsBits, v9._object, v11);
  v37 = v13;
  swift_bridgeObjectRelease(v9._object);
  v14 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(v11).n128_f64[0]);
  v40._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v14, v15, v40);

  v17 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_16B3D0;
  v18 = objc_msgSend(v4, "episodeNumber");
  *(_QWORD *)(v17 + 56) = &type metadata for Int;
  *(_QWORD *)(v17 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 32) = v18;
  v19 = static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v17);
  v21 = v20;
  swift_bridgeObjectRelease(v16._object);
  if ((uint64_t)objc_msgSend(v4, "seasonNumber", swift_bridgeObjectRelease(v17).n128_f64[0]) >= 1
    && (uint64_t)objc_msgSend(v4, "episodeNumber") >= 1)
  {
    v22 = objc_msgSend(v5, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000030;
    v41._object = (void *)0xE000000000000000;
    v23._object = (void *)0x8000000000188E50;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v41._countAndFlagsBits = 0;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v41);
    countAndFlagsBits = v25._countAndFlagsBits;
    object = v25._object;

    v28 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_16E1B0;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    v29 = sub_1F6B8();
    *(_QWORD *)(v28 + 32) = v35;
    *(_QWORD *)(v28 + 40) = v37;
    *(_QWORD *)(v28 + 96) = &type metadata for String;
    *(_QWORD *)(v28 + 104) = v29;
    *(_QWORD *)(v28 + 64) = v29;
    *(_QWORD *)(v28 + 72) = v19;
    *(_QWORD *)(v28 + 80) = v21;
LABEL_6:
    v19 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v28);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v28);
    return v19;
  }
  if ((uint64_t)objc_msgSend(v4, "seasonNumber", swift_bridgeObjectRelease(v37).n128_f64[0]) >= 1)
  {
    v30 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(v21).n128_f64[0]);
    v42._object = (void *)0xE000000000000000;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v30, v31, v42);
    countAndFlagsBits = v32._countAndFlagsBits;
    object = v32._object;

    v28 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v28 + 16) = xmmword_16B3D0;
    v33 = objc_msgSend(v4, "seasonNumber");
    *(_QWORD *)(v28 + 56) = &type metadata for Int;
    *(_QWORD *)(v28 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v28 + 32) = v33;
    goto LABEL_6;
  }
  return v19;
}

uint64_t sub_B33AC()
{
  void *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v31._object = (void *)0xE000000000000000;
  v3._object = (void *)0x8000000000188DF0;
  v3._countAndFlagsBits = 0xD000000000000014;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v31);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_16B3D0;
  v8 = objc_msgSend(v0, "seasonNumber");
  *(_QWORD *)(v7 + 56) = &type metadata for Int;
  *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v7 + 32) = v8;
  v9 = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
  v29 = v10;
  v30 = v9;
  swift_bridgeObjectRelease(v5._object);
  v11 = objc_msgSend(v1, "mainBundle", swift_bridgeObjectRelease(v7).n128_f64[0]);
  v12._countAndFlagsBits = 0xD000000000000015;
  v32._object = (void *)0xE000000000000000;
  v12._object = (void *)0x8000000000188ED0;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v32);

  v15 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_16B3D0;
  v16 = objc_msgSend(v0, "episodeNumber");
  *(_QWORD *)(v15 + 56) = &type metadata for Int;
  *(_QWORD *)(v15 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 32) = v16;
  v17 = static String.localizedStringWithFormat(_:_:)(v14._countAndFlagsBits, v14._object, v15);
  v19 = v18;
  swift_bridgeObjectRelease(v14._object);
  if ((uint64_t)objc_msgSend(v0, "seasonNumber", swift_bridgeObjectRelease(v15).n128_f64[0]) < 1
    || (uint64_t)objc_msgSend(v0, "episodeNumber") < 1)
  {
    v27 = objc_msgSend(v0, "seasonNumber");
    if ((uint64_t)v27 <= 0)
      v24 = v29;
    else
      v24 = v19;
    if ((uint64_t)v27 <= 0)
      v26 = v17;
    else
      v26 = v30;
  }
  else
  {
    v20 = objc_msgSend(v1, "mainBundle");
    v21._countAndFlagsBits = 0xD000000000000030;
    v33._object = (void *)0xE000000000000000;
    v21._object = (void *)0x8000000000188E50;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v33);

    v24 = swift_allocObject(v6, 112, 7);
    *(_OWORD *)(v24 + 16) = xmmword_16E1B0;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    v25 = sub_1F6B8();
    *(_QWORD *)(v24 + 32) = v30;
    *(_QWORD *)(v24 + 40) = v29;
    *(_QWORD *)(v24 + 96) = &type metadata for String;
    *(_QWORD *)(v24 + 104) = v25;
    *(_QWORD *)(v24 + 64) = v25;
    *(_QWORD *)(v24 + 72) = v17;
    *(_QWORD *)(v24 + 80) = v19;
    v26 = static String.localizedStringWithFormat(_:_:)(v23._countAndFlagsBits, v23._object, v24);
    swift_bridgeObjectRelease(v23._object);
  }
  swift_bridgeObjectRelease(v24);
  return v26;
}

id MPModelPodcastEpisode.sublineStringForQueue.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  char *v16;
  char *v17;
  id v19;
  void *v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t countAndFlagsBits;
  uint64_t v33;
  char *v34;

  v1 = type metadata accessor for DateComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF6F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF700);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(v0, "podcast", v11);
  if (v14
    && (v15 = v14, v16 = (char *)objc_msgSend(v14, "sortType"), v15, v16 == (_BYTE *)&dword_0 + 2)
    && ((uint64_t)objc_msgSend(v0, "seasonNumber") > 0 || (uint64_t)objc_msgSend(v0, "episodeNumber") >= 1))
  {
    v17 = (char *)objc_msgSend(v0, "episodeType");
    if (v17 == (_BYTE *)&dword_0 + 2)
    {
      return (id)sub_B3A54(0xD00000000000001ALL, (void *)0x8000000000188D90, 0xD000000000000019, (void *)0x8000000000188DB0);
    }
    else if (v17 == (_BYTE *)&dword_0 + 3)
    {
      return (id)sub_B3A54(0xD00000000000001CLL, (void *)0x8000000000188D10, 0xD00000000000001BLL, (void *)0x8000000000188D30);
    }
    else
    {
      return (id)sub_B3E04();
    }
  }
  else
  {
    v19 = objc_msgSend(v0, "podcast");
    if (v19)
    {
      v20 = v19;
      v21 = (char *)objc_msgSend(v19, "sortType");

      if (v21 == (_BYTE *)&dword_0 + 1)
      {
        v22 = objc_msgSend(v0, "releaseDateComponents");
        if (v22)
        {
          v23 = v22;
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

          v24 = 0;
        }
        else
        {
          v24 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v6, v24, 1, v1);
        sub_B4120((uint64_t)v6, (uint64_t)v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
        {
          v25 = &qword_1FF6F8;
          v26 = (uint64_t)v9;
        }
        else
        {
          v27 = v34;
          (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v34, v9, v1);
          v28 = sub_9944((uint64_t)v9, &qword_1FF6F8);
          DateComponents.date.getter(v28);
          (*(void (**)(char *, uint64_t))(v2 + 8))(v27, v1);
          v29 = type metadata accessor for Date(0);
          v30 = *(_QWORD *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v13, 1, v29) != 1)
          {
            countAndFlagsBits = Date.lessVerboseDisplayStringWithoutTimeAndCurrentYear()()._countAndFlagsBits;
            (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v29);
            return (id)countAndFlagsBits;
          }
          v25 = &qword_1FF700;
          v26 = (uint64_t)v13;
        }
        sub_9944(v26, v25);
      }
    }
    return MPModelPodcastEpisode.fallbackSublineFromAuthorName.getter();
  }
}

uint64_t sub_B3A54(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v28;
  unint64_t v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  id v33;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v36._countAndFlagsBits = a3;
  v36._object = a4;
  v38._countAndFlagsBits = a1;
  v38._object = a2;
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v39._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000188CF0;
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v39);

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_16B3D0;
  v12 = objc_msgSend(v4, "seasonNumber");
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v12;
  v35 = static String.localizedStringWithFormat(_:_:)(v9._countAndFlagsBits, v9._object, v11);
  v37 = v13;
  swift_bridgeObjectRelease(v9._object);
  v14 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(v11).n128_f64[0]);
  v40._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v14, v15, v40);

  v17 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_16B3D0;
  v18 = objc_msgSend(v4, "episodeNumber");
  *(_QWORD *)(v17 + 56) = &type metadata for Int;
  *(_QWORD *)(v17 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 32) = v18;
  v19 = static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v17);
  v21 = v20;
  swift_bridgeObjectRelease(v16._object);
  if ((uint64_t)objc_msgSend(v4, "seasonNumber", swift_bridgeObjectRelease(v17).n128_f64[0]) >= 1
    && (uint64_t)objc_msgSend(v4, "episodeNumber") >= 1)
  {
    v22 = objc_msgSend(v5, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000030;
    v41._object = (void *)0xE000000000000000;
    v23._object = (void *)0x8000000000188D50;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v41._countAndFlagsBits = 0;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v41);
    countAndFlagsBits = v25._countAndFlagsBits;
    object = v25._object;

    v28 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_16E1B0;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    v29 = sub_1F6B8();
    *(_QWORD *)(v28 + 32) = v35;
    *(_QWORD *)(v28 + 40) = v37;
    *(_QWORD *)(v28 + 96) = &type metadata for String;
    *(_QWORD *)(v28 + 104) = v29;
    *(_QWORD *)(v28 + 64) = v29;
    *(_QWORD *)(v28 + 72) = v19;
    *(_QWORD *)(v28 + 80) = v21;
LABEL_6:
    v19 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v28);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v28);
    return v19;
  }
  if ((uint64_t)objc_msgSend(v4, "seasonNumber", swift_bridgeObjectRelease(v37).n128_f64[0]) >= 1)
  {
    v30 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(v21).n128_f64[0]);
    v42._object = (void *)0xE000000000000000;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v30, v31, v42);
    countAndFlagsBits = v32._countAndFlagsBits;
    object = v32._object;

    v28 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v28 + 16) = xmmword_16B3D0;
    v33 = objc_msgSend(v4, "seasonNumber");
    *(_QWORD *)(v28 + 56) = &type metadata for Int;
    *(_QWORD *)(v28 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v28 + 32) = v33;
    goto LABEL_6;
  }
  return v19;
}

uint64_t sub_B3E04()
{
  void *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v31._object = (void *)0xE000000000000000;
  v3._object = (void *)0x8000000000188CF0;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v31);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_16B3D0;
  v8 = objc_msgSend(v0, "seasonNumber");
  *(_QWORD *)(v7 + 56) = &type metadata for Int;
  *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v7 + 32) = v8;
  v9 = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
  v29 = v10;
  v30 = v9;
  swift_bridgeObjectRelease(v5._object);
  v11 = objc_msgSend(v1, "mainBundle", swift_bridgeObjectRelease(v7).n128_f64[0]);
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  v32._object = (void *)0xE000000000000000;
  v12._object = (void *)0x8000000000188DD0;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v32);

  v15 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_16B3D0;
  v16 = objc_msgSend(v0, "episodeNumber");
  *(_QWORD *)(v15 + 56) = &type metadata for Int;
  *(_QWORD *)(v15 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 32) = v16;
  v17 = static String.localizedStringWithFormat(_:_:)(v14._countAndFlagsBits, v14._object, v15);
  v19 = v18;
  swift_bridgeObjectRelease(v14._object);
  if ((uint64_t)objc_msgSend(v0, "seasonNumber", swift_bridgeObjectRelease(v15).n128_f64[0]) < 1
    || (uint64_t)objc_msgSend(v0, "episodeNumber") < 1)
  {
    v27 = objc_msgSend(v0, "seasonNumber");
    if ((uint64_t)v27 <= 0)
      v24 = v29;
    else
      v24 = v19;
    if ((uint64_t)v27 <= 0)
      v26 = v17;
    else
      v26 = v30;
  }
  else
  {
    v20 = objc_msgSend(v1, "mainBundle");
    v21._countAndFlagsBits = 0xD000000000000030;
    v33._object = (void *)0xE000000000000000;
    v21._object = (void *)0x8000000000188D50;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v33);

    v24 = swift_allocObject(v6, 112, 7);
    *(_OWORD *)(v24 + 16) = xmmword_16E1B0;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    v25 = sub_1F6B8();
    *(_QWORD *)(v24 + 32) = v30;
    *(_QWORD *)(v24 + 40) = v29;
    *(_QWORD *)(v24 + 96) = &type metadata for String;
    *(_QWORD *)(v24 + 104) = v25;
    *(_QWORD *)(v24 + 64) = v25;
    *(_QWORD *)(v24 + 72) = v17;
    *(_QWORD *)(v24 + 80) = v19;
    v26 = static String.localizedStringWithFormat(_:_:)(v23._countAndFlagsBits, v23._object, v24);
    swift_bridgeObjectRelease(v23._object);
  }
  swift_bridgeObjectRelease(v24);
  return v26;
}

uint64_t sub_B4120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF6F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NowPlayingPodcastItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1FF778;
  if (!qword_1FF778)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingPodcastItem);
  return result;
}

uint64_t sub_B41A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingPodcastItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_B41E8(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a2[6];
    v11 = a3[8];
    v33 = &a1[v11];
    v12 = (uint64_t)a2 + v11;
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v10;
    v13 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v4;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v14(v33, v12, v13);
    v16 = a3[9];
    v17 = a3[10];
    v18 = *(uint64_t *)((char *)a2 + v16);
    *(_QWORD *)&v7[v16] = v18;
    v19 = &v7[v17];
    v20 = (uint64_t)a2 + v17;
    v21 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)&v7[v17 + 24] = v21;
    v22 = v21;
    v23 = **(void (***)(char *, uint64_t, uint64_t))(v21 - 8);
    swift_bridgeObjectRetain(v18);
    v23(v19, v20, v22);
    v24 = a3[11];
    v25 = *(_OWORD *)((char *)a2 + v24 + 24);
    *(_OWORD *)&v7[v24 + 24] = v25;
    (**(void (***)(void))(v25 - 8))();
    v26 = a3[12];
    v27 = &v7[v26];
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
  }
  return v7;
}

uint64_t sub_B43B4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  v4 = a1 + a2[8];
  v5 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + a2[10]));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + a2[11]));
  v6 = a1 + a2[12];
  v7 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

_QWORD *sub_B4490(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = v9;
  a1[3] = v8;
  v11 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  a1[4] = v11;
  a1[5] = v10;
  v12 = *(_QWORD *)(a2 + 48);
  v13 = a3[8];
  v35 = (char *)a1 + v13;
  v14 = a2 + v13;
  a1[6] = v12;
  v15 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17 = v7;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  v16(v35, v14, v15);
  v18 = a3[9];
  v19 = a3[10];
  v20 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)((char *)a1 + v18) = v20;
  v21 = (char *)a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)((char *)a1 + v19 + 24) = v23;
  v24 = v23;
  v25 = **(void (***)(char *, uint64_t, uint64_t))(v23 - 8);
  swift_bridgeObjectRetain(v20);
  v25(v21, v22, v24);
  v26 = a3[11];
  v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)((char *)a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  v28 = a3[12];
  v29 = (char *)a1 + v28;
  v30 = (const void *)(a2 + v28);
  v31 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t sub_B4634(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[9];
  v20 = *(_QWORD *)(a2 + v19);
  v21 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + a3[10]), (_QWORD *)(a2 + a3[10]));
  __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + a3[11]), (_QWORD *)(a2 + a3[11]));
  v22 = a3[12];
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v17) = v27(v23, 1, v25);
  v28 = v27(v24, 1, v25);
  if (!(_DWORD)v17)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_B4818(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  v14 = a3[11];
  v15 = a3[12];
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = (void *)(a1 + v15);
  v20 = (const void *)(a2 + v15);
  v21 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_B495C(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = a2[4];
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = a2[6];
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[9];
  v18 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  swift_bridgeObjectRelease(v18);
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = (char *)a2 + v19;
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + v19));
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = (char *)a2 + v23;
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + v23));
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  v27 = a3[12];
  v28 = (void *)(a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = type metadata accessor for NowPlayingViewModel.MiniPlayerSubtitle(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v25) = v32(v28, 1, v30);
  v33 = v32(v29, 1, v30);
  if (!(_DWORD)v25)
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t sub_B4B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B4B38);
}

uint64_t sub_B4B38(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_B4BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B4BE8);
}

char *sub_B4BE8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFE0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_B4C88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = &unk_1709C8;
  v6[2] = &unk_1709E0;
  v6[3] = &unk_1709E0;
  v2 = type metadata accessor for NowPlayingViewModel.SubtitleStyle(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[6] = &unk_1709F8;
    v6[7] = &unk_1709F8;
    sub_5D078(319);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

uint64_t sub_B4D48()
{
  return sub_8330(&qword_1FF7D0, (uint64_t (*)(uint64_t))sub_B4D74, (uint64_t)&protocol conformance descriptor for NSObject);
}

unint64_t sub_B4D74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FF7D8;
  if (!qword_1FF7D8)
  {
    v1 = objc_opt_self(MPIdentifierSet);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FF7D8);
  }
  return result;
}

uint64_t sub_B4DB0()
{
  return sub_8330(&qword_1FF7E0, type metadata accessor for NowPlayingPodcastItem, (uint64_t)&unk_170A10);
}

CGFloat sub_B4DDC(CGFloat a1, CGFloat a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  CGFloat Width;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGRect v37;
  CGRect v38;

  v7 = v6;
  v10 = a3 + 0.0;
  v11 = a4 + 8.0;
  v12 = a5 + 8.0;
  v13 = objc_msgSend(v6, "traitCollection");
  v14 = UITraitCollection.safeDisplayScale.getter();

  v37.origin.x = 0.0;
  v37.origin.y = 0.0;
  v37.size.width = a1;
  v37.size.height = a2;
  if (CGRectGetWidth(v37) > 320.0)
    v15 = 20.0;
  else
    v15 = 17.0;
  v38.origin.x = 0.0;
  v38.origin.y = 0.0;
  v38.size.width = a1;
  v38.size.height = a2;
  Width = CGRectGetWidth(v38);
  v18 = CGFloat.floorValue(scale:)(v14, Width * 0.12 * 0.5);
  if (v15 <= v18)
    v15 = v18;
  v19 = v10 + v15;
  v20 = v11 + v15;
  v21 = v12 + v15;
  if ((static CGSize.==~ infix(_:_:)(v17, a1, a2, 0.0, 0.0) & 1) != 0)
  {
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_imageView], "sizeThatFits:", 0.0, 0.0);
    if (v22 < 0.0)
      v23 = 0.0;
    else
      v23 = v22;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_titleLabel], "sizeThatFits:", 0.0);
    if (v23 > v24)
      v25 = v23;
    else
      v25 = v24;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_subtitleLabel], "sizeThatFits:", 0.0, 0.0);
    if (v25 <= v26)
      v25 = v26;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButton], "sizeThatFits:", 0.0, 0.0);
    if (v25 > v27)
      v27 = v25;
    return v20 + v20 + v27;
  }
  else
  {
    v28 = a1 - (v20 + a6 + 8.0 + v15);
    v29 = a2 - (v19 + v21);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_imageView], "sizeThatFits:", v28, v29);
    v31 = v29 - v30;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_titleLabel], "sizeThatFits:", v28, v29 - v30);
    v33 = v31 - v32;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_subtitleLabel], "sizeThatFits:", v28, v33);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButton], "sizeThatFits:", v28, v33 - v34);
  }
  return a1;
}

id sub_B5078()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = &v0[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_imageView;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v0;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "initWithImage:", 0);
  v7 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_titleLabel;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_subtitleLabel;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButton;
  *(_QWORD *)&v6[v9] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v10 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_visualEffectView;
  v11 = objc_msgSend((id)objc_opt_self(MusicContextActionsBlurEffect), "blurEffectStyleWithPrivateStyle:", 1200);
  v12 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", v11);
  v13 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v12);

  *(_QWORD *)&v6[v10] = v13;
  *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneEventHandler] = 0;

  v16.receiver = v6;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_B524C();

  return v14;
}

void sub_B524C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  NSString v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  double v40;
  void *v41;
  Swift::String v42;
  Class isa;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_titleLabel];
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5._countAndFlagsBits = 0xD00000000000001FLL;
  v52._object = (void *)0xE000000000000000;
  v5._object = (void *)0x8000000000189010;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v52._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v52)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  if (qword_1F95B0 != -1)
    swift_once(&qword_1F95B0, sub_FDF98);
  objc_msgSend(v2, "setTextColor:", qword_210338);
  objc_msgSend(v2, "setTextAlignment:", 1);
  v9 = (void *)objc_opt_self(MTMPUFontDescriptor);
  v10 = objc_msgSend(v9, "fontDescriptorWithTextStyle:", 7);
  v11 = objc_msgSend(v10, "preferredFont");

  objc_msgSend(v2, "setFont:", v11);
  objc_msgSend(v2, "setNumberOfLines:", 1);
  objc_msgSend(v2, "setAdjustsFontSizeToFitWidth:", 1);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v13);

  v14 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_subtitleLabel];
  v15 = v3;
  v16 = objc_msgSend(v3, "mainBundle");
  v17._countAndFlagsBits = 0xD000000000000025;
  v53._object = (void *)0xE000000000000000;
  v17._object = (void *)0x8000000000189030;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v53._countAndFlagsBits = 0;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v53)._object;

  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  objc_msgSend(v14, "setTextColor:", qword_210338);
  objc_msgSend(v14, "setTextAlignment:", 1);
  v21 = v12;
  v22 = v9;
  v23 = objc_msgSend(v9, "fontDescriptorWithTextStyle:", 0);
  v24 = objc_msgSend(v23, "preferredFont");

  objc_msgSend(v14, "setFont:", v24);
  objc_msgSend(v14, "setNumberOfLines:", 0);
  objc_msgSend(v14, "setLineBreakMode:", 0);
  v50 = v21;
  v25 = objc_msgSend(v21, "clearColor");
  objc_msgSend(v14, "setBackgroundColor:", v25);

  v26 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButton];
  v27 = objc_msgSend(v15, "mainBundle");
  v28._countAndFlagsBits = 0xD00000000000002BLL;
  v54._object = (void *)0xE000000000000000;
  v28._object = (void *)0x8000000000189060;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v54._countAndFlagsBits = 0;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v54)._object;

  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setTitle:forState:", v31, 0, swift_bridgeObjectRelease(v30).n128_f64[0]);

  v32 = objc_msgSend(v26, "titleLabel");
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v22, "fontDescriptorWithTextStyle:weight:", 0, 2);
    v35 = objc_msgSend(v34, "preferredFont");

    objc_msgSend(v33, "setFont:", v35);
  }
  v36 = swift_allocObject(&unk_1CE3F0, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v1);
  v37 = v26;
  v38 = sub_C80D0(v37, 64, (uint64_t)sub_B6174, v36);
  v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneEventHandler];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneEventHandler] = v38;
  *(_QWORD *)&v40 = swift_release(v39).n128_u64[0];
  v41 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_imageView];
  objc_msgSend(v41, "setContentMode:", 1, v40);
  sub_B617C();
  v42._object = (void *)0x8000000000182D30;
  v42._countAndFlagsBits = 0xD000000000000018;
  isa = UIImage.init(imageLiteralResourceName:)(v42).super.isa;
  v44 = -[objc_class imageWithRenderingMode:](isa, "imageWithRenderingMode:", 2);

  objc_msgSend(v41, "setImage:", v44);
  objc_msgSend(v41, "setTintColor:", qword_210338);
  v45 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_visualEffectView];
  objc_msgSend(v1, "addSubview:", v45);
  v46 = objc_msgSend(v45, "contentView");
  objc_msgSend(v46, "addSubview:", v41);

  v47 = objc_msgSend(v45, "contentView");
  objc_msgSend(v47, "addSubview:", v2);

  v48 = objc_msgSend(v45, "contentView");
  objc_msgSend(v48, "addSubview:", v14);

  v49 = objc_msgSend(v45, "contentView");
  objc_msgSend(v49, "addSubview:", v37);

  objc_msgSend(v45, "_setContinuousCornerRadius:", 8.0);
  v51 = objc_msgSend(v50, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v51);

}

id sub_B5948()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  void *v16;
  double v17;
  CGFloat Width;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  CGFloat MinY;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  void *v48;
  double v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  void *v53;
  double v54;
  double v55;
  double v56;
  double MaxY;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  void *v61;
  double v62;
  double v63;
  double v64;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  objc_super v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;

  v1 = v0;
  v75.receiver = v0;
  v75.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v75, "layoutSubviews");
  objc_msgSend(v0, "safeAreaInsets");
  v3 = v2 + 0.0;
  v5 = v4 + 8.0;
  objc_msgSend(v0, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = objc_msgSend(v0, "traitCollection");
  v73 = UITraitCollection.safeDisplayScale.getter();

  v15 = UIEdgeInsetsInsetRect(v7, v9, v11, v13, v3, v5);
  v16 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_visualEffectView];
  objc_msgSend(v16, "setFrame:", v15);
  v76.origin.x = v7;
  v76.origin.y = v9;
  v76.size.width = v11;
  v76.size.height = v13;
  if (CGRectGetWidth(v76) > 320.0)
    v17 = 20.0;
  else
    v17 = 17.0;
  v77.origin.x = v7;
  v77.origin.y = v9;
  v77.size.width = v11;
  v77.size.height = v13;
  Width = CGRectGetWidth(v77);
  v19 = CGFloat.floorValue(scale:)(v73, Width * 0.12 * 0.5);
  if (v17 > v19)
    v20 = v17;
  else
    v20 = v19;
  v21 = objc_msgSend(v16, "contentView");
  objc_msgSend(v21, "bounds");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v74 = v20;
  v30 = UIEdgeInsetsInsetRect(v23, v25, v27, v29, v20, v20);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_imageView];
  objc_msgSend(v37, "sizeThatFits:", v33, v35);
  v78.size.width = v38;
  v40 = v39;
  v78.origin.x = 0.0;
  v78.origin.y = 0.0;
  v41 = v78.size.width;
  v78.size.height = v40;
  v42 = CGRectGetWidth(v78);
  v79.origin.x = v30;
  v79.origin.y = v32;
  v79.size.width = v34;
  v79.size.height = v36;
  v43 = CGRectGetMidX(v79) - v42 * 0.5;
  v80.origin.x = v30;
  v80.origin.y = v32;
  v80.size.width = v34;
  v80.size.height = v36;
  MinY = CGRectGetMinY(v80);
  v81.origin.x = v43;
  v69 = v43;
  v70 = MinY;
  v81.origin.y = MinY;
  v45 = v41;
  v71 = v40;
  v72 = v41;
  v81.size.width = v41;
  v81.size.height = v40;
  v46 = CGRectGetMaxY(v81) + 10.0;
  v82.origin.x = v43;
  v82.origin.y = MinY;
  v82.size.width = v45;
  v82.size.height = v40;
  v47 = v36 - (CGRectGetHeight(v82) + 10.0);
  v48 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_titleLabel];
  objc_msgSend(v48, "sizeThatFits:", v34, v47);
  v50 = v49;
  v67 = v49;
  v68 = v46;
  v83.origin.x = v30;
  v83.origin.y = v46;
  v83.size.width = v34;
  v83.size.height = v47;
  v66 = CGRectGetWidth(v83);
  v84.origin.x = v30;
  v84.origin.y = v46;
  v84.size.width = v66;
  v84.size.height = v50;
  v51 = CGRectGetMaxY(v84) + 10.0;
  v85.origin.x = v30;
  v85.origin.y = v46;
  v85.size.width = v66;
  v85.size.height = v50;
  v52 = v47 - (CGRectGetHeight(v85) + 10.0);
  v53 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_subtitleLabel];
  objc_msgSend(v53, "sizeThatFits:", v34, v52);
  v55 = v54;
  v86.origin.x = v30;
  v86.origin.y = v51;
  v86.size.width = v34;
  v86.size.height = v52;
  v56 = CGRectGetWidth(v86);
  v87.origin.x = v30;
  v87.origin.y = v51;
  v87.size.width = v56;
  v87.size.height = v55;
  MaxY = CGRectGetMaxY(v87);
  v88.origin.x = v30;
  v88.origin.y = v51;
  v88.size.width = v56;
  v88.size.height = v55;
  v58 = v52 - CGRectGetHeight(v88);
  v59 = v74 + MaxY;
  v60 = v58 - v74;
  v61 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButton];
  objc_msgSend(v61, "sizeThatFits:", v34, v58 - v74);
  v63 = v62;
  v89.origin.x = v30;
  v89.origin.y = v59;
  v89.size.width = v34;
  v89.size.height = v60;
  v64 = CGRectGetWidth(v89);
  objc_msgSend(v37, "setFrame:", v69, v70, v72, v71);
  objc_msgSend(v48, "setFrame:", v30, v68, v66, v67);
  objc_msgSend(v53, "setFrame:", v30, v51, v56, v55);
  return objc_msgSend(v61, "setFrame:", v30, v59, v64, v63);
}

void sub_B5E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(uint64_t))(Strong
                                        + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler + 8);
      v7 = swift_retain();
      v5(v7);
      sub_145A0((uint64_t)v5, v6);
    }

  }
}

uint64_t type metadata accessor for NowPlayingScrollingTipView()
{
  return objc_opt_self(_TtC12NowPlayingUI26NowPlayingScrollingTipView);
}

void sub_B5FA0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButtonHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_imageView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", 0);
  v3 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_subtitleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneButton;
  *(_QWORD *)&v0[v5] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v6 = OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_visualEffectView;
  v7 = objc_msgSend((id)objc_opt_self(MusicContextActionsBlurEffect), "blurEffectStyleWithPrivateStyle:", 1200);
  v8 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", v7);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v8);

  *(_QWORD *)&v0[v6] = v9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI26NowPlayingScrollingTipView_doneEventHandler] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingScrollingTipView.swift", 45, 2, 23, 0);
  __break(1u);
}

uint64_t sub_B6150()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_B6174(uint64_t a1)
{
  uint64_t v1;

  sub_B5E44(a1, v1);
}

unint64_t sub_B617C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FB5B0;
  if (!qword_1FB5B0)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FB5B0);
  }
  return result;
}

id sub_B61B8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  Class isa;
  id v16;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v18 - v9;
  v11 = objc_msgSend(v0, "playingItemIndexPath");
  if (!v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  v12 = v11;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v13(v3, v8, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_C078((uint64_t)v3);
    return 0;
  }
  v13(v10, v3, v4);
  v14 = objc_msgSend(v0, "items");
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v14, "itemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v16;
}

uint64_t sub_B6388()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "removeTarget:action:", v0, "handleActionFromGestureRecognizer:");

  }
  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for GestureRecognizerHandler()
{
  return objc_opt_self(_TtC12NowPlayingUI24GestureRecognizerHandler);
}

id Window.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

char *sub_B64AC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  objc_super v18;

  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_shareHandler];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton;
  v11 = (void *)objc_opt_self(UIButton);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "buttonWithType:", 0);
  v12[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_isShowingSleepTimer] = 0;
  v13 = &v12[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_layoutInvalidationHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for NowPlayingQueueControlsView();
  v14 = (char *)objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
  sub_B6AAC(0, 1);
  v15 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton;
  objc_msgSend(v14, "addSubview:", *(_QWORD *)&v14[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton]);
  sub_B6E0C();
  v16 = *(id *)&v14[v15];
  objc_msgSend(v16, "setExclusiveTouch:", 1);

  return v14;
}

void sub_B6630()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  objc_super v32;

  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for NowPlayingQueueControlsView();
  objc_msgSendSuper2(&v32, "layoutSubviews");
  v1 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton;
  v2 = qword_1F95A8;
  v3 = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton];
  if (v2 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  v4 = (void *)qword_210330;
  objc_msgSend(v3, "setTitleColor:forState:", qword_210330, 0);
  v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.2);
  objc_msgSend(v3, "setTitleColor:forState:", v5, 1);

  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "systemMidGrayColor");
  objc_msgSend(v3, "setTitleColor:forState:", v7, 2);

  v8 = objc_msgSend(v6, "systemMidGrayColor");
  objc_msgSend(v3, "setTitleColor:forState:", v8, 6);

  v9 = objc_msgSend(v6, "whiteColor");
  objc_msgSend(v3, "setTitleColor:forState:", v9, 4);

  v10 = objc_msgSend(v6, "whiteColor");
  objc_msgSend(v3, "setTitleColor:forState:", v10, 5);

  if (qword_1F9618 != -1)
    swift_once(&qword_1F9618, sub_FE4C8);
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0((void *)qword_210390, 8.0);
  v12 = v11;
  objc_msgSend(v3, "setBackgroundImage:forState:", v11, 0);

  v13 = objc_msgSend((id)qword_210390, "colorWithAlphaComponent:", 0.6);
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v13, 8.0);
  v15 = v14;

  objc_msgSend(v3, "setBackgroundImage:forState:", v15, 1);
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0((void *)qword_210330, 8.0);
  v17 = v16;
  objc_msgSend(v3, "setBackgroundImage:forState:", v16, 4);

  v18 = objc_msgSend(v6, "systemDarkPinkColor");
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v18, 8.0);
  v20 = v19;

  objc_msgSend(v3, "setBackgroundImage:forState:", v20, 5);
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v22 = v21;
  v24 = v23;
  v25 = *(id *)&v0[v1];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v25, "setFrame:", UIEdgeInsetsInsetRect(v26, v27, v28, v29, v22, v24));

  v30 = qword_1F9520;
  v31 = *(id *)&v0[v1];
  if (v30 != -1)
    swift_once(&qword_1F9520, sub_B6A94);
  UIButton.setImageAndTitleSpacing(_:contentEdgeInsets:)(12.0, *(double *)&xmmword_1FF920, *((double *)&xmmword_1FF920 + 1), *(double *)&qword_1FF930, unk_1FF938);

}

double sub_B6A94()
{
  double result;

  result = 0.0;
  xmmword_1FF920 = xmmword_170B80;
  *(_OWORD *)&qword_1FF930 = xmmword_170B80;
  return result;
}

void sub_B6AAC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v6;
  UIImage v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  void *v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  void *object;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  Swift::String v29;

  v3 = v2;
  sub_B617C();
  v6._object = (void *)0x8000000000182F20;
  v6._countAndFlagsBits = 0xD000000000000010;
  v7.super.isa = UIImage.init(imageLiteralResourceName:)(v6).super.isa;
  if (qword_1F95A8 != -1)
    swift_once(&qword_1F95A8, sub_FDF10);
  v28 = -[objc_class imageWithTintColor:](v7.super.isa, "imageWithTintColor:", qword_210330);

  v8 = objc_msgSend((id)qword_210330, "colorWithAlphaComponent:", 0.35);
  v9 = objc_msgSend(v28, "imageWithTintColor:", v8);

  v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemMidGrayColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.7);

  v12 = objc_msgSend(v28, "imageWithTintColor:", v11);
  if ((a2 & 1) != 0 || *(double *)&a1 <= 0.0)
  {
    v19 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton);
    v20 = (void *)objc_opt_self(NSBundle);
    v17 = v19;
    v21 = objc_msgSend(v20, "mainBundle");
    v29._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = 0x6954207065656C53;
    v22._object = (void *)0xEB0000000072656DLL;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v29)._object;

    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "setTitle:forState:", v14, 0, swift_bridgeObjectRelease(object).n128_f64[0]);
    v18 = 0;
  }
  else
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
    objc_msgSend(v13, "setStyle:", 1);
    v14 = objc_msgSend(v13, "stringFromSeconds:", *(double *)&a1);
    if (!v14)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v16 = v15;
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
    }
    v17 = *(id *)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton);
    objc_msgSend(v17, "setTitle:forState:", v14, 0);

    v18 = 1;
  }

  *(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_isShowingSleepTimer) = v18;
  v25 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton), "setImage:forState:", v28, 0);
  objc_msgSend(*(id *)(v3 + v25), "setImage:forState:", v9, 1);
  v26 = *(id *)(v3 + v25);
  v27 = v12;
  objc_msgSend(v26, "setImage:forState:", v27, 2);

}

void sub_B6E0C()
{
  char *v0;
  void *v1;
  NSString *v2;
  double v3;
  char v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v1 = (void *)objc_opt_self(UIFont);
  v2 = UIFontTextStyleBody;
  v3 = sub_15F8FC((uint64_t)UIContentSizeCategoryLarge, (uint64_t)v2, 17.0);

  v10 = objc_msgSend(v1, "systemFontOfSize:weight:", v3, UIFontWeightSemibold);
  v4 = sub_15F6F8();
  v5 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton;
  v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton], "titleLabel");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setFont:", v10);

  }
  if ((v4 & 1) != 0)
    v8 = 0;
  else
    v8 = 5;
  v9 = objc_msgSend(*(id *)&v0[v5], "titleLabel");
  objc_msgSend(v9, "setLineBreakMode:", v8);

  objc_msgSend(v0, "setNeedsLayout");
}

id sub_B6F50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingQueueControlsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingQueueControlsView()
{
  return objc_opt_self(_TtC12NowPlayingUI27NowPlayingQueueControlsView);
}

void sub_B6FF0()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_shareHandler];
  *v1 = 0;
  v1[1] = 0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_sleepButton;
  *(_QWORD *)&v0[v2] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_isShowingSleepTimer] = 0;
  v3 = &v0[OBJC_IVAR____TtC12NowPlayingUI27NowPlayingQueueControlsView_layoutInvalidationHandler];
  *v3 = 0;
  v3[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingQueueControlsView.swift", 46, 2, 30, 0);
  __break(1u);
}

void sub_B70AC(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16[3];

  v2 = 0;
  v16[2] = Set.init(minimumCapacity:)(*(_QWORD *)(a1 + 16), &type metadata for String, &protocol witness table for String);
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_23;
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_23;
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            goto LABEL_23;
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain(v12);
    sub_12C178(v16, v11, v12);
    swift_bridgeObjectRelease(v16[1]);
  }
  v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

char *sub_B7240(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v25;

  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundCornerRadius] = 0x4020000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_borderColor] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_isActivityIndicatorActive] = 0;
  v9 = &v4[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets];
  *v9 = xmmword_170BC0;
  v9[1] = xmmword_170BC0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents] = _swiftEmptyArrayStorage;
  v10 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView;
  _s9StackViewCMa();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v14 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates;
  *(_QWORD *)&v12[v14] = sub_CE1FC(_swiftEmptyArrayStorage);
  *(_QWORD *)&v12[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_activityIndicatorView] = 0;

  v25.receiver = v12;
  v25.super_class = (Class)type metadata accessor for MultilineButton();
  v15 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  v16 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView;
  v17 = *(void **)&v15[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView];
  v18 = _s5CacheCMa();
  swift_allocObject(v18, 104, 7);
  v19 = v15;
  v20 = v17;
  sub_F8EC();
  v22 = v21;
  v23 = *(_QWORD *)&v20[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache];
  *(_QWORD *)&v20[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = v21;
  swift_retain();
  sub_4E06C(v23);

  swift_release(v23);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView], swift_release(v22).n128_f64[0]);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v15[v16]);
  sub_B85BC();

  return v19;
}

void sub_B7480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  void *v43;
  void *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t i;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD v88[2];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  _QWORD *v94;
  char v95[24];
  char v96[24];
  char v97[32];

  v2 = v1;
  v4 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents);
  v6 = swift_bridgeObjectRetain(v5);
  LOBYTE(a1) = sub_15F3C(v6, a1);
  swift_bridgeObjectRelease(v5);
  if ((a1 & 1) == 0)
  {
    v7 = *(char **)(v2 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView);
    v8 = (uint64_t *)&v7[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents];
    swift_beginAccess(&v7[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_orderedComponents], v97, 1, 0);
    v9 = *v8;
    if ((unint64_t)*v8 >> 62)
    {
      if (v9 < 0)
        v15 = *v8;
      else
        v15 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v8);
      v10 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (!v10)
        goto LABEL_14;
    }
    else
    {
      v10 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(*v8);
      if (!v10)
        goto LABEL_14;
    }
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_56;
    }
    v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
      }
      else
      {
        v12 = *(_QWORD *)(v9 + 8 * v11 + 32);
        swift_retain();
      }
      ++v11;
      v13 = *(_QWORD *)(v12 + 256);
      v14 = *(_QWORD *)(v12 + 264);
      *(_QWORD *)(v12 + 256) = 0;
      *(_QWORD *)(v12 + 264) = 0;
      sub_145A0(v13, v14);
      swift_release(v12);
    }
    while (v10 != v11);
LABEL_14:
    swift_bridgeObjectRelease(v9);
    v16 = *v8;
    if ((unint64_t)*v8 >> 62)
    {
      if (v16 < 0)
        v75 = *v8;
      else
        v75 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v8);
      v17 = _CocoaArrayWrapper.endIndex.getter(v75);
    }
    else
    {
      v17 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(*v8);
    }
    v18 = (uint64_t)_swiftEmptyArrayStorage;
    v77 = v7;
    if (!v17)
    {
      swift_bridgeObjectRelease(v16);
      v20 = _swiftEmptyArrayStorage;
      goto LABEL_27;
    }
    *(_QWORD *)&v88[0] = _swiftEmptyArrayStorage;
    sub_A9A94(0, v17 & ~(v17 >> 63), 0);
    if ((v17 & 0x8000000000000000) == 0)
    {
      v82 = v8;
      v84 = v4;
      v86 = v2;
      v19 = 0;
      v20 = *(_QWORD **)&v88[0];
      do
      {
        if ((v16 & 0xC000000000000001) != 0)
        {
          v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v16);
        }
        else
        {
          v21 = *(_QWORD *)(v16 + 8 * v19 + 32);
          swift_retain();
        }
        v22 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        swift_bridgeObjectRetain(v23);
        swift_release(v21);
        *(_QWORD *)&v88[0] = v20;
        v25 = v20[2];
        v24 = v20[3];
        if (v25 >= v24 >> 1)
        {
          sub_A9A94(v24 > 1, v25 + 1, 1);
          v20 = *(_QWORD **)&v88[0];
        }
        ++v19;
        v20[2] = v25 + 1;
        v26 = &v20[2 * v25];
        v26[4] = v22;
        v26[5] = v23;
      }
      while (v17 != v19);
      swift_bridgeObjectRelease(v16);
      v7 = v77;
      v4 = v84;
      v2 = v86;
      v8 = v82;
LABEL_27:
      v27 = sub_B97D8((uint64_t)v20);
      swift_bridgeObjectRelease(v20);
      sub_4F0E4(v27);
      swift_bridgeObjectRelease(v27);
      v28 = *v8;
      *v8 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v28);
      v29 = &v7[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents];
      swift_beginAccess(&v7[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_indexedComponents], v96, 1, 0);
      v30 = *(_QWORD *)v29;
      *(_QWORD *)v29 = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease(v30);
      v31 = &v7[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics];
      swift_beginAccess(&v7[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_cacheKeyStackViewLayoutMetrics], v95, 1, 0);
      v32 = *(_QWORD *)v31;
      *(_QWORD *)v31 = _swiftEmptyDictionarySingleton;
      objc_msgSend(v7, "setNeedsLayout", swift_bridgeObjectRelease(v32).n128_f64[0]);
      v33 = *(_QWORD *)(v2 + v4);
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v94 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v33);
        specialized ContiguousArray.reserveCapacity(_:)(v34, v35);
        v78 = _s9StackViewC9ComponentCMa();
        v81 = v34 - 1;
        v36 = 32;
        v79 = v33;
        while (1)
        {
          v80 = v36;
          v38 = *(_OWORD *)(v33 + v36 + 48);
          v37 = *(_OWORD *)(v33 + v36 + 64);
          v39 = *(_OWORD *)(v33 + v36 + 80);
          v93 = *(_OWORD *)(v33 + v36 + 96);
          v40 = *(_OWORD *)(v33 + v36);
          v41 = *(_OWORD *)(v33 + v36 + 16);
          v89 = *(_OWORD *)(v33 + v36 + 32);
          v90 = v38;
          v91 = v37;
          v92 = v39;
          v88[0] = v40;
          v88[1] = v41;
          v42 = v93;
          v43 = (void *)v89;
          v44 = (void *)v38;
          v45 = BYTE8(v38);
          v46 = v37;
          v47 = *((_QWORD *)&v40 + 1);
          v87 = v41;
          v83 = (void *)*((_QWORD *)&v89 + 1);
          v85 = *((_QWORD *)&v41 + 1);
          v48 = v40;
          v49 = v39 | ((unint64_t)DWORD1(v39) << 32);
          v50 = *((_QWORD *)&v39 + 1);
          v51 = swift_allocObject(v78, 280, 7);
          *(_QWORD *)(v51 + 240) = 0;
          *(_QWORD *)(v51 + 248) = 0xE000000000000000;
          *(_QWORD *)(v51 + 264) = 0;
          *(_QWORD *)(v51 + 272) = 0;
          *(_QWORD *)(v51 + 256) = 0;
          *(_QWORD *)(v51 + 16) = v48;
          *(_QWORD *)(v51 + 24) = v47;
          *(_QWORD *)(v51 + 32) = v43;
          *(_QWORD *)(v51 + 40) = v83;
          *(_QWORD *)(v51 + 48) = v44;
          *(_QWORD *)(v51 + 56) = v45;
          *(_OWORD *)(v51 + 64) = v46;
          *(_QWORD *)(v51 + 80) = v49;
          *(_QWORD *)(v51 + 88) = v50;
          *(_OWORD *)(v51 + 96) = xmmword_16B100;
          *(_OWORD *)(v51 + 112) = v42;
          *(_QWORD *)(v51 + 144) = v43;
          *(_QWORD *)(v51 + 152) = v83;
          *(_QWORD *)(v51 + 160) = v44;
          *(_QWORD *)(v51 + 168) = v45;
          *(_OWORD *)(v51 + 176) = v46;
          *(_QWORD *)(v51 + 192) = v49;
          *(_QWORD *)(v51 + 200) = v50;
          *(_OWORD *)(v51 + 208) = xmmword_16B100;
          *(_OWORD *)(v51 + 224) = v42;
          *(_QWORD *)(v51 + 128) = v87;
          *(_QWORD *)(v51 + 136) = v85;
          v52 = v44;
          v53 = v43;
          v54 = v83;
          v55 = v52;
          v56 = v53;
          v57 = v54;
          v58 = v55;
          v59 = v56;
          v60 = v57;
          sub_1B188((uint64_t)v88);
          swift_bridgeObjectRetain(v47);
          swift_bridgeObjectRetain(v85);
          swift_bridgeObjectRelease(0xE000000000000000);
          v61 = *(_QWORD *)(v51 + 240);
          v62 = *(_QWORD *)(v51 + 248);
          v64 = *(_QWORD *)(v51 + 128);
          v63 = *(_QWORD *)(v51 + 136);
          if ((v61 != v64 || v62 != v63)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, *(_QWORD *)(v51 + 128), *(_QWORD *)(v51 + 136), 0) & 1) == 0)
          {
            v65 = *(_QWORD *)(v51 + 248);
            *(_QWORD *)(v51 + 240) = v64;
            *(_QWORD *)(v51 + 248) = v63;
            swift_bridgeObjectRetain(v63);
            swift_bridgeObjectRelease(v65);
            v66 = *(void (**)(uint64_t))(v51 + 256);
            if (v66)
            {
              v67 = *(_QWORD *)(v51 + 264);
              v68 = swift_retain();
              v66(v68);
              sub_145A0((uint64_t)v66, v67);
            }
          }

          v69 = sub_1B1E0((uint64_t)v88);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v69);
          v70 = v94[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v70);
          v71 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v51);
          specialized ContiguousArray._endMutation()(v71);
          if (!v81)
            break;
          --v81;
          v33 = v79;
          v36 = v80 + 112;
        }
        v18 = (uint64_t)v94;
        swift_bridgeObjectRelease(v79);
      }
      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v76 = v18;
        else
          v76 = v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v72 = _CocoaArrayWrapper.endIndex.getter(v76);
        if (v72)
        {
LABEL_39:
          if (v72 >= 1)
          {
            for (i = 0; i != v72; ++i)
            {
              if ((v18 & 0xC000000000000001) != 0)
              {
                v74 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v18);
              }
              else
              {
                v74 = *(_QWORD **)(v18 + 8 * i + 32);
                swift_retain();
              }
              sub_4E250(v74);
              swift_release(v74);
            }
            goto LABEL_53;
          }
LABEL_57:
          __break(1u);
          return;
        }
      }
      else
      {
        v72 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v18);
        if (v72)
          goto LABEL_39;
      }
LABEL_53:
      swift_bridgeObjectRelease_n(v18, 2);
      return;
    }
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
}

void sub_B7AF8(char a1)
{
  char *v1;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  char v10;
  char v11[24];
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for MultilineButton();
  objc_msgSendSuper2(&v12, "setEnabled:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView];
  v4 = objc_msgSend(v1, "state");
  v5 = &v1[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates];
  swift_beginAccess(v5, v11, 0, 0);
  v6 = *(_QWORD *)v5;
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = sub_13A05C((uint64_t)v4);
    if ((v8 & 1) != 0 || (v7 = sub_13A05C(0), v9 = 0, (v10 & 1) != 0))
      v9 = *(id *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v3, "setImage:", v9);

}

id sub_B7C24(char a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  unsigned int v5;
  id result;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  char v14;
  void *v15;
  unsigned int v16;
  double v17;
  char v18[24];
  objc_super v19;
  objc_super v20;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for MultilineButton();
  v20.receiver = v2;
  v20.super_class = v4;
  v5 = objc_msgSendSuper2(&v20, "isHighlighted");
  v19.receiver = v2;
  v19.super_class = v4;
  objc_msgSendSuper2(&v19, "setHighlighted:", a1 & 1);
  result = objc_msgSend(v2, "isHighlighted");
  if (v5 != (_DWORD)result)
  {
    v7 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView];
    v8 = objc_msgSend(v2, "state");
    v9 = &v2[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates];
    swift_beginAccess(&v2[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates], v18, 0, 0);
    v10 = *(_QWORD *)v9;
    if (*(_QWORD *)(v10 + 16))
    {
      v11 = sub_13A05C((uint64_t)v8);
      if ((v12 & 1) != 0 || (v11 = sub_13A05C(0), v13 = 0, (v14 & 1) != 0))
        v13 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v7, "setImage:", v13);

    v15 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView];
    v16 = objc_msgSend(v2, "isHighlighted");
    v17 = 1.0;
    if (v16)
      v17 = 0.25;
    return objc_msgSend(v15, "setAlpha:", v17);
  }
  return result;
}

id sub_B7D84(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MultilineButton();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_B7E00(char a1)
{
  char *v1;
  objc_class *v3;
  unsigned int v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  char v12;
  char v13[24];
  objc_super v14;
  objc_super v15;

  v3 = (objc_class *)type metadata accessor for MultilineButton();
  v15.receiver = v1;
  v15.super_class = v3;
  v4 = objc_msgSendSuper2(&v15, "isSelected");
  v14.receiver = v1;
  v14.super_class = v3;
  objc_msgSendSuper2(&v14, "setSelected:", a1 & 1);
  if (v4 != objc_msgSend(v1, "isSelected"))
  {
    v5 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView];
    v6 = objc_msgSend(v1, "state");
    v7 = &v1[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates];
    swift_beginAccess(v7, v13, 0, 0);
    v8 = *(_QWORD *)v7;
    if (*(_QWORD *)(v8 + 16))
    {
      v9 = sub_13A05C((uint64_t)v6);
      if ((v10 & 1) != 0 || (v9 = sub_13A05C(0), v11 = 0, (v12 & 1) != 0))
        v11 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v5, "setImage:", v11);

  }
}

void sub_B7F18()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for MultilineButton();
  objc_msgSendSuper2(&v24, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = UIEdgeInsetsInsetRect(v1, v3, v5, v7, *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets], *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets + 8]);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView], "setFrame:", v2, v4, v6, v8);
  v16 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView];
  objc_msgSend(v16, "setFrame:", v9, v11, v13, v15);
  v17 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_isActivityIndicatorActive;
  objc_msgSend(v16, "setHidden:", v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_isActivityIndicatorActive]);
  v18 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_activityIndicatorView;
  v19 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_activityIndicatorView];
  if (v0[v17] == 1)
  {
    if (v19)
    {
      v20 = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_activityIndicatorView];
    }
    else
    {
      v21 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
      v22 = *(void **)&v0[v18];
      *(_QWORD *)&v0[v18] = v21;
      v20 = v21;

      v19 = 0;
    }
    v23 = v19;
    if ((objc_msgSend(v20, "isDescendantOfView:", v0) & 1) == 0)
      objc_msgSend(v0, "addSubview:", v20);
    objc_msgSend(v20, "startAnimating");
    objc_msgSend(v20, "setFrame:", v9, v11, v13, v15);
    objc_msgSend(v20, "setHidesWhenStopped:", 1);

  }
  else
  {
    objc_msgSend(v19, "stopAnimating");
  }
}

double sub_B813C(double a1, double a2)
{
  uint64_t v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char v9;
  double v10;
  double v11;
  char v12;
  double v13;
  double v14;
  double v15;

  v4 = a1;
  v5 = *(double *)(v2 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets);
  v6 = *(double *)(v2 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets + 8);
  v7 = *(double *)(v2 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets + 16);
  v8 = *(double *)(v2 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets + 24);
  v9 = static CGFloat.==~ infix(_:_:)(a1, 0.0);
  v10 = v6 + v8;
  v11 = v4 - v10;
  if (v4 - v10 <= 0.0)
    v11 = 0.0;
  if ((v9 & 1) == 0)
    v4 = v11;
  v12 = static CGFloat.==~ infix(_:_:)(a2, 0.0);
  v13 = a2 - (v5 + v7);
  if (v13 <= 0.0)
    v13 = 0.0;
  if ((v12 & 1) != 0)
    v14 = a2;
  else
    v14 = v13;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView), "sizeThatFits:", v4, v14);
  return v10 + v15;
}

uint64_t sub_B83D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  Swift::String v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents));
    v3 = v2 - 1;
    for (i = 32; ; i += 112)
    {
      v5 = *(_OWORD *)(v1 + i);
      v6 = *(_OWORD *)(v1 + i + 32);
      v12 = *(Swift::String *)(v1 + i + 16);
      v13 = v6;
      v11 = v5;
      v7 = *(_OWORD *)(v1 + i + 48);
      v8 = *(_OWORD *)(v1 + i + 64);
      v9 = *(_OWORD *)(v1 + i + 96);
      v16 = *(_OWORD *)(v1 + i + 80);
      v17 = v9;
      v14 = v7;
      v15 = v8;
      sub_1B188((uint64_t)&v11);
      swift_bridgeObjectRetain(0xE000000000000000);
      String.append(_:)(v12);
      sub_1B1E0((uint64_t)&v11);
      swift_bridgeObjectRelease(0xE000000000000000);
      if (!v3)
        break;
      --v3;
    }
    swift_bridgeObjectRelease(v1);
  }
  return 0;
}

void sub_B85BC()
{
  char *v0;
  id v1;
  double v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  char v33;
  void *v34;
  char v35[24];

  v1 = objc_msgSend(v0, "tintColor");
  if (!v1)
  {
    if (qword_1F95A8 != -1)
      swift_once(&qword_1F95A8, sub_FDF10);
    v1 = (id)qword_210330;
  }
  v2 = *(double *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundCornerRadius];
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v1, v2);
  v34 = v3;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemMidGrayColor");
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v4, v2);
  v6 = v5;

  v7 = objc_msgSend(v1, "colorWithAlphaComponent:", 0.5);
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v7, v2);
  v9 = v8;

  v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.25);
  v11 = kCAFilterPlusD;
  v12 = objc_msgSend(v1, "_colorBlendedWithColor:compositingFilter:", v10, kCAFilterPlusD);

  if (!v12)
  {
    __break(1u);
    goto LABEL_14;
  }
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v12, v2);
  v14 = v13;

  v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.25);
  v16 = objc_msgSend(v1, "_colorBlendedWithColor:compositingFilter:", v15, v11);

  if (!v16)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.5);

  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v17, v2);
  v19 = v18;

  v20 = v34;
  sub_B9668(v34, 0);

  v21 = v6;
  sub_B9668(v6, 2);

  v22 = v21;
  sub_B9668(v6, 6);

  v23 = v9;
  sub_B9668(v9, 1);

  v24 = v14;
  sub_B9668(v14, 4);

  v25 = v19;
  sub_B9668(v19, 5);

  v26 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView];
  v27 = objc_msgSend(v0, "state");
  v28 = &v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates];
  swift_beginAccess(v28, v35, 0, 0);
  v29 = *(_QWORD *)v28;
  if (*(_QWORD *)(v29 + 16))
  {
    v30 = sub_13A05C((uint64_t)v27);
    if ((v31 & 1) != 0 || (v30 = sub_13A05C(0), v32 = 0, (v33 & 1) != 0))
      v32 = *(id *)(*(_QWORD *)(v29 + 56) + 8 * v30);
  }
  else
  {
    v32 = 0;
  }
  objc_msgSend(v26, "setImage:", v32, v34);

}

BOOL sub_B8910(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[7];
  _OWORD v14[7];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[6];
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v13[6] = v3;
  v14[0] = v6;
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  v11 = a2[4];
  v14[3] = v9;
  v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return sub_B9594((uint64_t *)v13, (uint64_t)v14);
}

id sub_B8974()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultilineButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MultilineButton()
{
  return objc_opt_self(_TtC12NowPlayingUI15MultilineButton);
}

uint64_t sub_B8A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v40;
  uint64_t v41;
  _QWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[7];
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  int v53;
  int v54;
  int v55;
  double v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  char v62;
  uint64_t v63;
  int v64;
  _QWORD v65[3];
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  __int128 v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  int v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_title);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_title + 8);
  swift_bridgeObjectRetain(v2);
  sub_B8F58(4, (uint64_t)&v58);
  v4 = *((_QWORD *)&v58 + 1);
  v3 = v58;
  v5 = v59;
  v6 = v60;
  v8 = *((_QWORD *)&v61 + 1);
  v7 = v61;
  v9 = v62;
  v10 = HIDWORD(v63);
  v11 = v63;
  v12 = v64;
  *(_QWORD *)&v81 = 0x656C746974;
  *((_QWORD *)&v81 + 1) = 0xE500000000000000;
  v46 = v2;
  v47 = v1;
  *(_QWORD *)&v82 = v1;
  *((_QWORD *)&v82 + 1) = v2;
  v83 = v58;
  *(_QWORD *)&v84 = v59;
  BYTE8(v84) = v60;
  v85 = v61;
  LOBYTE(v86) = v62;
  *(_QWORD *)((char *)&v86 + 4) = v63;
  HIDWORD(v86) = v64;
  v87 = xmmword_16E7B0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFA38);
  v14 = swift_allocObject(v13, 144, 7);
  v15 = v85;
  v16 = v86;
  v17 = v83;
  *(_OWORD *)(v14 + 80) = v84;
  *(_OWORD *)(v14 + 96) = v15;
  v18 = v87;
  *(_OWORD *)(v14 + 112) = v16;
  *(_OWORD *)(v14 + 128) = v18;
  v19 = v81;
  v20 = v82;
  *(_OWORD *)(v14 + 16) = xmmword_16B3D0;
  *(_OWORD *)(v14 + 32) = v19;
  *(_OWORD *)(v14 + 48) = v20;
  *(_OWORD *)(v14 + 64) = v17;
  v21 = (uint64_t *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_subtitle);
  v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_subtitle + 8);
  if (v22)
  {
    v45 = *v21;
    if ((v22 & 0x2000000000000000) != 0)
      v23 = HIBYTE(v22) & 0xF;
    else
      v23 = *v21 & 0xFFFFFFFFFFFFLL;
    sub_1B188((uint64_t)&v81);
    if (v23)
    {
      swift_bridgeObjectRetain(v22);
      sub_B8F58(2, (uint64_t)v65);
      sub_1065C((uint64_t)&v58);
      sub_B907C((uint64_t)&v73);
      v24 = v73;
      v25 = v74;
      v26 = v75;
      v27 = v76;
      v28 = v77;
      v29 = v78;
      v30 = v79;
      v31 = v80;
      v33 = *(_QWORD *)(v14 + 16);
      v32 = *(_QWORD *)(v14 + 24);
      if (v33 >= v32 >> 1)
      {
        v44 = v74;
        v43 = sub_1354A4((_QWORD *)(v32 > 1), v33 + 1, 1, (_QWORD *)v14);
        v25 = v44;
        v14 = (uint64_t)v43;
      }
      *(_QWORD *)(v14 + 16) = v33 + 1;
      v34 = v14 + 112 * v33;
      *(_QWORD *)(v34 + 32) = 0x656C746974627573;
      *(_QWORD *)(v34 + 40) = 0xE800000000000000;
      *(_QWORD *)(v34 + 48) = v45;
      *(_QWORD *)(v34 + 56) = v22;
      *(_QWORD *)(v34 + 64) = v24;
      *(_OWORD *)(v34 + 72) = v25;
      *(_BYTE *)(v34 + 88) = v26;
      *(_QWORD *)(v34 + 96) = v27;
      *(_QWORD *)(v34 + 104) = v28;
      *(_BYTE *)(v34 + 112) = v29;
      *(_QWORD *)(v34 + 116) = v30;
      *(_DWORD *)(v34 + 124) = v31;
      __asm { FMOV            V0.2D, #16.0 }
      *(_OWORD *)(v34 + 128) = _Q0;
      v12 = v72;
      v10 = v71;
      v11 = v70;
      v9 = v69;
      v8 = v68;
      v7 = v67;
      v6 = v66;
      v4 = v65[1];
      v5 = v65[2];
      v40 = 23.0;
      v3 = v65[0];
    }
    else
    {
      v40 = 30.0;
    }
  }
  else
  {
    sub_1B188((uint64_t)&v81);
    v40 = 30.0;
  }
  v41 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents) = v14;
  sub_B7480(v41);
  swift_bridgeObjectRelease(v41);
  v48[0] = 0x656C746974;
  v48[1] = 0xE500000000000000;
  v48[2] = v47;
  v48[3] = v46;
  v48[4] = v3;
  v48[5] = v4;
  v48[6] = v5;
  v49 = v6;
  v50 = v7;
  v51 = v8;
  v52 = v9;
  v53 = v11;
  v54 = v10;
  v55 = v12;
  v56 = v40;
  v57 = 0x4030000000000000;
  return sub_1B1E0((uint64_t)v48);
}

double sub_B8F58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  double result;

  v4 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithSystemFontSize:weight:", a1, 17.0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "blackColor");
  v7 = objc_msgSend(v5, "clearColor");
  v8 = objc_msgSend(v4, "typeSafeCopy");

  v9 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_textColor);
  v10 = v9;
  v11 = v8;

  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = 3;
  *(_QWORD *)(a2 + 32) = 4;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  result = 0.0000305175781;
  *(_QWORD *)(a2 + 52) = 0x3F00000000000000;
  *(_DWORD *)(a2 + 60) = 1065353216;
  return result;
}

double sub_B907C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  double result;

  v3 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:weight:", 4, 5);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "blackColor");
  v6 = objc_msgSend(v4, "clearColor");
  v7 = objc_msgSend(v3, "typeSafeCopy");

  v8 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_textColor);
  v9 = v8;
  v10 = v7;

  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = 3;
  *(_QWORD *)(a1 + 32) = 4;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  result = 0.0000305175781;
  *(_QWORD *)(a1 + 52) = 0x3F00000000000000;
  *(_DWORD *)(a1 + 60) = 1065353216;
  return result;
}

void sub_B919C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15SubtitledButton_subtitle + 8));

}

uint64_t type metadata accessor for SubtitledButton()
{
  return objc_opt_self(_TtC12NowPlayingUI15SubtitledButton);
}

void destroy for MultilineButton.LineComponent(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

uint64_t initializeWithCopy for MultilineButton.LineComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 84) = *(_QWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v8 = v5;
  v9 = v6;
  v10 = v7;
  return a1;
}

uint64_t assignWithCopy for MultilineButton.LineComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a2 + 32);
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v10 = v8;

  v11 = *(void **)(a1 + 40);
  v12 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  v13 = v12;

  v14 = *(void **)(a1 + 48);
  v15 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v15;
  v16 = v15;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for MultilineButton.LineComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v7 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 84) = *(_QWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultilineButton.LineComponent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultilineButton.LineComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultilineButton.LineComponent()
{
  return &type metadata for MultilineButton.LineComponent;
}

BOOL sub_B9594(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[4];
  _OWORD v21[4];

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = *((_OWORD *)a1 + 3);
      v21[0] = *((_OWORD *)a1 + 2);
      v21[1] = v16;
      v17 = *((_OWORD *)a1 + 5);
      v21[2] = *((_OWORD *)a1 + 4);
      v21[3] = v17;
      v18 = *(_OWORD *)(a2 + 48);
      v20[0] = *(_OWORD *)(a2 + 32);
      v20[1] = v18;
      v19 = *(_OWORD *)(a2 + 80);
      v20[2] = *(_OWORD *)(a2 + 64);
      v20[3] = v19;
      return (sub_746EC((uint64_t)v21, (uint64_t)v20) & 1) != 0
          && *((double *)a1 + 12) == *(double *)(a2 + 96)
          && *((double *)a1 + 13) == *(double *)(a2 + 104);
    }
  }
  return result;
}

void sub_B9668(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v5;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  void *v10;
  id v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  char v17;
  uint64_t v18;
  _BYTE v19[24];

  v3 = v2;
  v5 = &v2[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates];
  if (a1)
  {
    swift_beginAccess(v5, v19, 33, 0);
    v7 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v5);
    v18 = *(_QWORD *)v5;
    *(_QWORD *)v5 = 0x8000000000000000;
    sub_13D790((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    v9 = *(_QWORD *)v5;
    *(_QWORD *)v5 = v18;
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    swift_beginAccess(&v2[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates], v19, 33, 0);
    v7 = (id)sub_15A96C(a2);
  }
  swift_endAccess(v19);

  v10 = *(void **)&v3[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView];
  v11 = objc_msgSend(v3, "state");
  v12 = &v3[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates];
  swift_beginAccess(v12, v19, 0, 0);
  v13 = *(_QWORD *)v12;
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    v14 = sub_13A05C((uint64_t)v11);
    if ((v15 & 1) != 0 || (v14 = sub_13A05C(0), v16 = 0, (v17 & 1) != 0))
      v16 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v10, "setImage:", v16, v18);

}

uint64_t sub_B97D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_12C178(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_B986C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_B99FC();
  result = Set.init(minimumCapacity:)(v2, &type metadata for ContextActionType, v3);
  v8 = result;
  if (v2)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_12C324(&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_B98DC()
{
  _BYTE *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundCornerRadius] = 0x4020000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_borderColor] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_isActivityIndicatorActive] = 0;
  v1 = &v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_contentEdgeInsets];
  *v1 = xmmword_170BC0;
  v1[1] = xmmword_170BC0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_lineComponents] = _swiftEmptyArrayStorage;
  v2 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_textStackView;
  _s9StackViewCMa();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImageView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_backgroundImagesForStates;
  *(_QWORD *)&v0[v4] = sub_CE1FC(_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI15MultilineButton_activityIndicatorView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/MultilineButton.swift", 34, 2, 28, 0);
  __break(1u);
}

unint64_t sub_B99FC()
{
  unint64_t result;

  result = qword_1FFA40;
  if (!qword_1FFA40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContextActionType, &type metadata for ContextActionType);
    atomic_store(result, (unint64_t *)&qword_1FFA40);
  }
  return result;
}

void sub_B9A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexSet.Index(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.startIndex.getter(v12);
  v15 = IndexSet.subscript.getter(v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (!a2)
  {
    v16 = 0;
    if ((v15 & 0x8000000000000000) == 0)
    {
LABEL_4:
      v17 = *(_QWORD *)(a3 + 16);
      if (v15 < v17)
      {
        if (v16 < v17)
        {
          v18 = a2 == 0;
          v19 = a3 + 32;
          v20 = *(void **)(a3 + 32 + 88 * v15);
          v21 = *(void **)(v19 + 88 * v16);
          v22 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
          type metadata accessor for MainActor(0);
          v23 = v20;
          v24 = v21;
          v25 = v23;
          v26 = v24;
          v27 = swift_retain(v4);
          v28 = static MainActor.shared.getter(v27);
          v29 = swift_allocObject(&unk_1CE790, 64, 7);
          *(_QWORD *)(v29 + 16) = v28;
          *(_QWORD *)(v29 + 24) = &protocol witness table for MainActor;
          *(_BYTE *)(v29 + 32) = v18;
          *(_QWORD *)(v29 + 40) = v26;
          *(_QWORD *)(v29 + 48) = v4;
          *(_QWORD *)(v29 + 56) = v25;
          v30 = sub_F0A84((uint64_t)v9, (uint64_t)&unk_1FFBE0, v29);
          swift_release(v30);

          return;
        }
        goto LABEL_10;
      }
LABEL_9:
      __break(1u);
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = a2 - 1;
  if (!__OFSUB__(a2, 1))
  {
    if ((v15 & 0x8000000000000000) == 0)
      goto LABEL_4;
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_B9C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 120);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 112);
  }
  else
  {
    v4 = type metadata accessor for ExplicitContentPresenter();
    v5 = BaseObjectGraph.inject<A>(_:)(&v11, v4, v4);
    v6 = v11;
    v3 = ExplicitContentPresenter.symbol.getter(v5);
    v8 = v7;
    swift_release(v6);
    v9 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v1 + 112) = v3;
    *(_QWORD *)(v1 + 120) = v8;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRelease(v9);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

void sub_B9CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[4];

  v2 = v1;
  v77 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016B0);
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  v4 = __chkstk_darwin(v3);
  v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v62 = (char *)&v58 - v6;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDEC0);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v58 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  __chkstk_darwin(v8);
  v72 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBD40);
  __chkstk_darwin(v69);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016F0);
  __chkstk_darwin(v68);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_204250);
  __chkstk_darwin(v65);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFB28);
  v66 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFB30);
  v20 = *(_QWORD *)(v19 - 8);
  v70 = v19;
  v71 = v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFB38);
  v24 = *(_QWORD *)(v23 - 8);
  v73 = v23;
  v74 = v24;
  v25 = __chkstk_darwin(v23);
  v67 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = dispatch thunk of PlaybackController.$nowPlayingItem.getter(v25);
  v28 = dispatch thunk of PlaybackController.$tracklist.getter(v27);
  dispatch thunk of PlaybackController.$durationSnapshot.getter(v28);
  v29 = sub_27A8C(&qword_1FBC70, &qword_204250, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v30 = sub_27A8C(&qword_1FFB40, &qword_2016F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v31 = sub_27A8C(&qword_1FBD50, &qword_1FBD40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publishers.Zip3.init(_:_:_:)(v15, v13, v11, v65, v68, v69, v29, v30, v31);
  v32 = sub_27A8C(&qword_1FFB48, &qword_1FFB28, (uint64_t)&protocol conformance descriptor for Publishers.Zip3<A, B, C>);
  Publisher.removeDuplicates(by:)(sub_BA2F8, 0, v16, v32);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v18, v16);
  v33 = v72;
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)(300);
  v34 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v35 = (void *)static OS_dispatch_queue.main.getter();
  v78[0] = v35;
  v36 = sub_27A8C(&qword_1FFB50, &qword_1FFB30, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v37 = sub_2FE50();
  v38 = v67;
  v39 = v70;
  Publisher.throttle<A>(for:scheduler:latest:)(v33, v78, 1, v70, v34, v36, v37);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v76);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v22, v39);
  v40 = swift_allocObject(&unk_1CE4D0, 24, 7);
  swift_weakInit(v40 + 16, v2);
  v41 = swift_allocObject(&unk_1CE4F8, 32, 7);
  *(_QWORD *)(v41 + 16) = sub_BDBA4;
  *(_QWORD *)(v41 + 24) = v40;
  v42 = sub_27A8C(&qword_1FFB58, &qword_1FFB38, (uint64_t)&protocol conformance descriptor for Publishers.Throttle<A, B>);
  v43 = v73;
  v44 = Publisher<>.sink(receiveValue:)(sub_BDBD0, v41, v73, v42);
  v45 = swift_release(v41);
  (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v38, v43, v45);
  v46 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = v44;
  swift_release(v46);
  if (v77)
  {
    v78[0] = v77;
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
    v48 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v49 = v58;
    Publisher<>.removeDuplicates()(v47, v48, &protocol witness table for Bool);
    v50 = *(_QWORD *)(v2 + 24) + OBJC_IVAR____TtC12NowPlayingUI14QueueViewModel__isLocalPlayback;
    swift_beginAccess(v50, v78, 33, 0);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
    v52 = v62;
    Published.projectedValue.getter(v51);
    swift_endAccess(v78);
    v53 = sub_27A8C(&qword_1FDEE0, &qword_1FDEC0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v54 = v60;
    Publisher<>.assign(to:)(v52, v60, v53);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v54);
    v56 = v63;
    v55 = v64;
    v57 = v61;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v61, v52, v64);
    swift_beginAccess(v50, v78, 33, 0);
    Published.projectedValue.setter(v57, v51);
    swift_endAccess(v78);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
  }
}

BOOL sub_BA2F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  float64x2_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  char v18;
  id v19;
  id v20;
  char v21;
  _BOOL8 result;
  float64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(double *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v7 = *(void **)a2;
  v8 = *(void **)(a2 + 8);
  v9 = *(float64x2_t *)(a1 + 16);
  v10 = *(float64x2_t *)(a1 + 32);
  v12 = *(float64x2_t *)(a2 + 16);
  v11 = *(float64x2_t *)(a2 + 32);
  v13 = *(double *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)a1)
  {
    if (!v7)
      return 0;
    v27 = *(float64x2_t *)(a1 + 16);
    v29 = *(float64x2_t *)(a1 + 32);
    v23 = *(float64x2_t *)(a2 + 16);
    v25 = *(float64x2_t *)(a2 + 32);
    sub_F174(0, &qword_1FB380, MPModelPodcastEpisode_ptr);
    v16 = v7;
    v17 = v2;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    v12 = v23;
    v11 = v25;
    v9 = v27;
    v10 = v29;
    if ((v18 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (!v3)
  {
    if (!v8)
      goto LABEL_9;
    return 0;
  }
  if (!v8)
    return 0;
  v28 = v9;
  v30 = v10;
  v24 = v12;
  v26 = v11;
  sub_F174(0, &qword_1FFBC8, MPCPlayerResponseTracklist_ptr);
  v19 = v8;
  v20 = v3;
  v21 = static NSObject.== infix(_:_:)(v20, v19);

  v12 = v24;
  v11 = v26;
  v9 = v28;
  v10 = v30;
  if ((v21 & 1) == 0)
    return 0;
LABEL_9:
  result = v14 == 2 && v5 == 2;
  if (v5 != 2 && v14 != 2)
  {
    result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, v12), (int32x4_t)vceqq_f64(v10, v11))), 0xFuLL))) & 1) != 0&& v4 == v13&& *(float *)&v6 == *(float *)&v15&& *((float *)&v6 + 1) == *((float *)&v15 + 1)&& ((((v5 & 1) == 0) ^ v14) & 1) != 0)
    {
      return ((v5 & 0x100) == 0) ^ (v14 >> 8) & 1;
    }
  }
  return result;
}

double sub_BA4D8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v10 = Strong;
    sub_BA550(a1, a2, a3);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

double sub_BA550(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v3[6];
  if (v12)
  {
    swift_retain(v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
    Task.cancel()();
    swift_release(v12);
  }
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = a2;
  swift_retain(v4);
  v15 = static MainActor.shared.getter(a1);
  v16 = (_QWORD *)swift_allocObject(&unk_1CE520, 120, 7);
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v4;
  v16[5] = a1;
  v16[6] = a2;
  sub_4AD4C(a3, (uint64_t)(v16 + 7));
  v16[14] = v8;
  v17 = sub_F0A84((uint64_t)v11, (uint64_t)&unk_1FFB68, (uint64_t)v16);
  v18 = v4[6];
  v4[6] = v17;
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_BA6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v8[24] = a4;
  v8[25] = a8;
  v12 = type metadata accessor for Logger(0);
  v8[26] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[27] = v13;
  v8[28] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v8[29] = v14;
  v8[30] = static MainActor.shared.getter(v14);
  v15 = (_QWORD *)swift_task_alloc(dword_1FFB74);
  v8[31] = v15;
  *v15 = v8;
  v15[1] = sub_BA780;
  return sub_BACE8((uint64_t)(v8 + 2), a5, a6, a7);
}

uint64_t sub_BA780()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 232), &protocol witness table for MainActor, v4);
  if (v0)
    v7 = sub_BAAAC;
  else
    v7 = sub_BA804;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_BA804()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[2];

  v1 = *(_QWORD *)(v0 + 256);
  v2 = swift_release(*(_QWORD *)(v0 + 240));
  static Task<>.checkCancellation()(v2);
  if (v1)
  {
    v3 = sub_BDCEC((uint64_t *)(v0 + 16));
    static Logger.nowPlaying.getter(v3);
    swift_errorRetain(v1);
    v4 = swift_errorRetain(v1);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    v7 = os_log_type_enabled(v5, v6);
    v9 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 208);
    if (v7)
    {
      v27 = *(_QWORD *)(v0 + 216);
      v11 = *(_QWORD *)(v0 + 200);
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(64, -1);
      v28[0] = v13;
      *(_DWORD *)v12 = 136315394;
      v26 = v8;
      v14 = _typeName(_:qualified:)(v11, 0);
      v16 = v15;
      *(_QWORD *)(v0 + 168) = sub_C6F4(v14, v15, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v16);
      *(_WORD *)(v12 + 12) = 2080;
      swift_getErrorValue(v1, v0 + 176, v0 + 144);
      v17 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
      v19 = v18;
      *(_QWORD *)(v0 + 184) = sub_C6F4(v17, v18, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v12 + 14, v12 + 22);
      swift_bridgeObjectRelease(v19);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, v5, v6, "[%s]: Loading queue and chapters encountered an error: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      swift_errorRelease(v1);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v10);
    }
    else
    {
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
  }
  else
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + 24);
    KeyPath = swift_getKeyPath(&unk_170CC0);
    v22 = swift_getKeyPath(&unk_170CE8);
    v23 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 96) = v23;
    v24 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 128) = v24;
    swift_retain();
    static Published.subscript.setter(v0 + 80, v20, KeyPath, v22);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BAAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 240));
  v1 = *(_QWORD *)(v0 + 256);
  static Logger.nowPlaying.getter(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v19 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 224);
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(64, -1);
    v22 = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = _typeName(_:qualified:)(v6, 0);
    v11 = v10;
    *(_QWORD *)(v0 + 168) = sub_C6F4(v9, v10, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue(v1, v0 + 176, v0 + 144);
    v12 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
    v14 = v13;
    *(_QWORD *)(v0 + 184) = sub_C6F4(v12, v13, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v7 + 14, v7 + 22);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v4, v5, "[%s]: Loading queue and chapters encountered an error: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[15] = v6;
  v5[16] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[17] = v8;
  v5[18] = v9;
  return swift_task_switch(sub_BAD60, v8, v9);
}

uint64_t sub_BAD60()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = (void *)v0[11];
  if (v1 && (v2 = (void *)v0[12]) != 0)
  {
    v3 = *(_QWORD *)(v0[14] + 16);
    v4 = dword_1FFB7C;
    v5 = v1;
    v6 = v2;
    v7 = (_QWORD *)swift_task_alloc(v4);
    v0[19] = v7;
    *v7 = v0;
    v7[1] = sub_BAE94;
    v7[10] = v3;
    v7[11] = v6;
    return swift_task_switch(sub_BB154, 0, 0);
  }
  else
  {
    swift_release(v0[16]);
    if (qword_1F9510 != -1)
      swift_once(&qword_1F9510, sub_A2964);
    v9 = qword_210140;
    v10 = qword_210168;
    v11 = unk_210170;
    v12 = qword_210178;
    v13 = v0[10];
    v14 = unk_210148;
    v15 = xmmword_210158;
    *(_OWORD *)(v13 + 24) = xmmword_210158;
    *(_QWORD *)v13 = v9;
    *(_OWORD *)(v13 + 8) = v14;
    *(_QWORD *)(v13 + 40) = v10;
    *(_QWORD *)(v13 + 48) = v11;
    *(_QWORD *)(v13 + 56) = v12;
    v16 = (uint64_t (*)(void))v0[1];
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v9);
    return v16();
  }
}

uint64_t sub_BAE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  v3[20] = a1;
  v3[21] = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_BAEEC, v3[17], v3[18]);
}

uint64_t sub_BAEEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v8;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 88);
  v8 = *(_OWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 176) = static MainActor.shared.getter(a1);
  v5 = swift_task_alloc(64);
  *(_QWORD *)(v1 + 184) = v5;
  *(_OWORD *)(v5 + 16) = v8;
  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 48) = v3;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v1 + 192) = v6;
  *v6 = v1;
  v6[1] = sub_BAFC8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v1 + 16);
}

uint64_t sub_BAFC8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[17];
    v5 = v2[18];
    v6 = sub_BB0C4;
  }
  else
  {
    v7 = v2[22];
    v8 = v2[23];
    v9 = v2[21];
    swift_bridgeObjectRelease(v2[20]);
    swift_bridgeObjectRelease(v9);
    swift_release(v7);
    swift_task_dealloc(v8);
    v4 = v2[17];
    v5 = v2[18];
    v6 = sub_BB058;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_BB058()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 88);
  v2 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 128));

  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_OWORD *)(v0 + 24);
  v5 = *(_OWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)v7 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 8) = v4;
  *(_OWORD *)(v7 + 24) = v5;
  *(_QWORD *)(v7 + 40) = v3;
  *(_OWORD *)(v7 + 48) = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BB0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v6 = *(void **)(v0 + 88);
  v5 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_release(v1);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BB13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch(sub_BB154, 0, 0);
}

void sub_BB154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  void (*v15)(void *, uint64_t, uint64_t);
  _QWORD *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v1 + 64) = _swiftEmptyArrayStorage;
  v2 = v1 + 64;
  *(_QWORD *)(v1 + 72) = _swiftEmptyArrayStorage;
  v3 = v1 + 72;
  v4 = static Podcasts.isBlueMoonEnabled()(a1);
  v6 = *(_QWORD *)(v1 + 80);
  v5 = *(void **)(v1 + 88);
  if ((v4 & 1) != 0)
  {
    v7 = objc_msgSend(*(id *)(v1 + 88), "displayItems");
    v8 = (_QWORD *)swift_allocObject(&unk_1CE610, 48, 7);
    v8[2] = v5;
    v8[3] = v6;
    v8[4] = v2;
    v8[5] = v3;
    v9 = swift_allocObject(&unk_1CE638, 32, 7);
    v10 = sub_BDFC4;
    *(_QWORD *)(v9 + 16) = sub_BDFC4;
    *(_QWORD *)(v9 + 24) = v8;
    *(_QWORD *)(v1 + 48) = sub_72310;
    *(_QWORD *)(v1 + 56) = v9;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = 1107296256;
    *(_QWORD *)(v1 + 32) = sub_BE3B8;
    *(_QWORD *)(v1 + 40) = &block_descriptor_41;
    v11 = _Block_copy((const void *)(v1 + 16));
    v12 = *(_QWORD *)(v1 + 56);
    v13 = v5;
    swift_retain();
    swift_retain();
    objc_msgSend(v7, "enumerateSectionsUsingBlock:", v11, swift_release(v12).n128_f64[0]);

    _Block_release(v11);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 126, 202, 44, 1);
    swift_release(v9);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v15 = 0;
      v16 = 0;
LABEL_6:
      v24 = *(_QWORD *)(v1 + 64);
      v23 = *(_QWORD *)(v1 + 72);
      sub_145A0((uint64_t)v10, (uint64_t)v8);
      sub_145A0((uint64_t)v15, (uint64_t)v16);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v24, v23);
      return;
    }
    __break(1u);
  }
  else
  {
    v17 = objc_msgSend(*(id *)(v1 + 88), "items");
    v16 = (_QWORD *)swift_allocObject(&unk_1CE598, 48, 7);
    v16[2] = v5;
    v16[3] = v6;
    v16[4] = v2;
    v16[5] = v3;
    v18 = swift_allocObject(&unk_1CE5C0, 32, 7);
    v15 = sub_BDF60;
    *(_QWORD *)(v18 + 16) = sub_BDF60;
    *(_QWORD *)(v18 + 24) = v16;
    *(_QWORD *)(v1 + 48) = sub_F2F8;
    *(_QWORD *)(v1 + 56) = v18;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = 1107296256;
    *(_QWORD *)(v1 + 32) = sub_BD960;
    *(_QWORD *)(v1 + 40) = &block_descriptor_17;
    v19 = _Block_copy((const void *)(v1 + 16));
    v20 = *(_QWORD *)(v1 + 56);
    v21 = v5;
    swift_retain();
    swift_retain();
    objc_msgSend(v17, "enumerateItemsUsingBlock:", v19, swift_release(v20).n128_f64[0]);

    _Block_release(v19);
    v22 = swift_isEscapingClosureAtFileLocation(v18, "", 126, 241, 34, 1);
    swift_release(v18);
    if ((v22 & 1) == 0)
    {
      v10 = 0;
      v8 = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_BB424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFB90);
  v7[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[19] = v9;
  v7[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  v7[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v7[22] = v11;
  v7[23] = static MainActor.shared.getter(v11);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v12);
  v7[24] = v13;
  v7[25] = v14;
  return swift_task_switch(sub_BB4F0, v13, v14);
}

uint64_t sub_BB4F0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = v0[21];
  v3 = v0[15];
  v2 = (void *)v0[16];
  v5 = v0[13];
  v4 = v0[14];
  v6 = (uint64_t *)v0[12];
  v7 = type metadata accessor for TaskPriority(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v1, 1, 1, v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1CE548, 48, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = v4;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v4);
  sub_BBAA0(v1, (uint64_t)&unk_1FFBA0, (uint64_t)v9);
  sub_9944(v1, (uint64_t *)&unk_1FB3C0);
  v8(v1, 1, 1, v7);
  v10 = (_QWORD *)swift_allocObject(&unk_1CE570, 48, 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v3;
  v10[5] = v2;
  swift_retain();
  v11 = v2;
  sub_BBAA0(v1, (uint64_t)&unk_1FFBB0, (uint64_t)v10);
  sub_9944(v1, (uint64_t *)&unk_1FB3C0);
  v12 = *v6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
  v14 = ThrowingTaskGroup.makeAsyncIterator()(v12, &type metadata for NowPlayingQueueController.TaskResult, v13, &protocol self-conformance witness table for Error);
  v0[26] = _swiftEmptyArrayStorage;
  v0[27] = _swiftEmptyArrayStorage;
  v0[28] = _swiftEmptyArrayStorage;
  v15 = static MainActor.shared.getter(v14);
  v0[29] = v15;
  v16 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  v0[30] = v16;
  *v16 = v0;
  v16[1] = sub_BB6C4;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 7, v15, &protocol witness table for MainActor, v0[18], v0 + 10);
}

uint64_t sub_BB6C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v3);
  swift_release(v2[29]);
  if (v0)
    v4 = sub_BB984;
  else
    v4 = sub_BB738;
  return swift_task_switch(v4, v2[24], v2[25]);
}

uint64_t sub_BB738(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int8x16_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(unsigned __int8 *)(v1 + 72);
  if (v3 == 255)
  {
    v12 = *(_QWORD *)(v1 + 224);
    v13 = *(_QWORD *)(v1 + 184);
    v14 = *(_QWORD *)(v1 + 160);
    v32 = *(_QWORD *)(v1 + 168);
    v16 = *(_QWORD *)(v1 + 128);
    v15 = *(_QWORD *)(v1 + 136);
    v17 = *(_QWORD **)(v1 + 120);
    v18 = *(_QWORD *)(v1 + 88);
    v19 = v17 + 7;
    v31 = *(int8x16_t *)(v1 + 208);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 152) + 8))(v14, *(_QWORD *)(v1 + 144));
    swift_release(v13);
    v20 = v17[10];
    v21 = v17[11];
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v16, v15, v20, v21);
    v22 = *(_QWORD *)(v1 + 48);
    v23 = *(_OWORD *)(v1 + 16);
    v24 = *(_OWORD *)(v1 + 32);
    *(_QWORD *)v18 = v12;
    *(_OWORD *)(v18 + 8) = v23;
    *(_OWORD *)(v18 + 24) = v24;
    *(_QWORD *)(v18 + 40) = v22;
    *(int8x16_t *)(v18 + 48) = vextq_s8(v31, v31, 8uLL);
    swift_task_dealloc(v32);
    swift_task_dealloc(v14);
    v11 = *(uint64_t (**)(void))(v1 + 8);
    return v11();
  }
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 248);
  static Task<>.checkCancellation()(a1);
  if (v5)
  {
    v7 = *(_QWORD *)(v1 + 216);
    v6 = *(_QWORD *)(v1 + 224);
    v8 = *(_QWORD *)(v1 + 208);
    v9 = *(_QWORD *)(v1 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 152) + 8))(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 144));
    swift_release(v9);
    sub_BDF0C(v2, v4, v3);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    v10 = *(_QWORD *)(v1 + 160);
    swift_task_dealloc(*(_QWORD *)(v1 + 168));
    swift_task_dealloc(v10);
    v11 = *(uint64_t (**)(void))(v1 + 8);
    return v11();
  }
  if ((v3 & 1) != 0)
  {
    v27 = *(_QWORD *)(v1 + 208);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 216));
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(v4);
    v26 = sub_BDF0C(v2, v4, v3);
    v28 = *(_QWORD *)(v1 + 224);
    *(_QWORD *)(v1 + 208) = v4;
    *(_QWORD *)(v1 + 216) = v2;
    v2 = v28;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 224));
  }
  *(_QWORD *)(v1 + 224) = v2;
  v29 = static MainActor.shared.getter(v26);
  *(_QWORD *)(v1 + 232) = v29;
  v30 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 240) = v30;
  *v30 = v1;
  v30[1] = sub_BB6C4;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 56, v29, &protocol witness table for MainActor, *(_QWORD *)(v1 + 144), v1 + 80);
}

uint64_t sub_BB984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 184));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v3);
  v7 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BBA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch(sub_BBA2C, 0, 0);
}

uint64_t sub_BBA2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void);

  static Task<>.checkCancellation()();
  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[2];
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = v2;
  *(_BYTE *)(v3 + 16) = 1;
  v5 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  return v5();
}

double sub_BBAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double result;
  _QWORD v27[3];
  _QWORD v28[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2808C(a1, (uint64_t)v10, (uint64_t *)&unk_1FB3C0);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_9944((uint64_t)v10, (uint64_t *)&unk_1FB3C0);
    v13 = 12544;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
    {
LABEL_3:
      v15 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v14);
      v17 = swift_unknownObjectRetain(v14);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15, v17);
      v20 = v19;
      swift_unknownObjectRelease(v14);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = v21 | 0x3100;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = *v4;
  v23 = (_QWORD *)(v20 | v18);
  if (v20 | v18)
  {
    v28[0] = 0;
    v28[1] = 0;
    v23 = v28;
    v28[2] = v18;
    v28[3] = v20;
  }
  v27[0] = 1;
  v27[1] = v23;
  v27[2] = v22;
  v24 = swift_task_create(v13, v27, &type metadata for NowPlayingQueueController.TaskResult, a2, a3);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_BBC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch(sub_BBC48, 0, 0);
}

uint64_t sub_BBC48()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  static Task<>.checkCancellation()();
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_BBCE0, v3, v4);
}

uint64_t sub_BBCE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_task_switch(sub_BBD1C, 0, 0);
}

uint64_t sub_BBD1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v1[10];
  v5 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v4);
  *(_QWORD *)v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v5);
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_BBD8C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 7);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  return v0;
}

uint64_t sub_BBDE0()
{
  uint64_t v0;

  sub_BBD8C();
  return swift_deallocClassInstance(v0, 128, 7);
}

uint64_t type metadata accessor for NowPlayingQueueController()
{
  return objc_opt_self(_TtC12NowPlayingUI25NowPlayingQueueController);
}

uint64_t sub_BBE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[6] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v6[7] = v9;
  v6[8] = v10;
  return swift_task_switch(sub_BBE90, v9, v10);
}

uint64_t sub_BBE90()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v3;

  v3 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommands(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommands(_:options:);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommands(_:options:)
                                  + 1));
  v0[9] = v1;
  *v1 = v0;
  v1[1] = sub_BBEF8;
  return ((uint64_t (*)(_QWORD, _QWORD))v3)(v0[4], v0[5]);
}

uint64_t sub_BBEF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[7];
    v7 = v4[8];
    v8 = sub_BBFAC;
  }
  else
  {
    v4[11] = a1;
    v6 = v4[7];
    v7 = v4[8];
    v8 = sub_BBF6C;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_BBF6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BBFAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BBFE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v7 + 64) = a6;
  *(_QWORD *)(v7 + 72) = a7;
  *(_QWORD *)(v7 + 56) = a5;
  *(_BYTE *)(v7 + 144) = a4;
  v8 = type metadata accessor for PlaybackController.QueueCommand.Location(0);
  *(_QWORD *)(v7 + 80) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 88) = v9;
  *(_QWORD *)(v7 + 96) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 104) = static MainActor.shared.getter(v10);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
  *(_QWORD *)(v7 + 112) = v12;
  *(_QWORD *)(v7 + 120) = v13;
  return swift_task_switch(sub_BC07C, v12, v13);
}

uint64_t sub_BC07C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  int v6;
  unsigned int *v7;
  uint64_t v8;
  _QWORD *boxed_opaque_existential_1;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  char *v16;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 96);
  v4 = *(void **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(void **)(v0 + 56);
  v6 = *(unsigned __int8 *)(v0 + 144);
  *v2 = v5;
  if (v6)
    v7 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.before(_:);
  else
    v7 = (unsigned int *)&enum case for PlaybackController.QueueCommand.Location.after(_:);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v2, *v7, v3);
  v8 = type metadata accessor for PlaybackController.QueueCommand(0);
  *(_QWORD *)(v0 + 40) = v8;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v10 = (char *)boxed_opaque_existential_1
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FFBE8) + 48);
  *boxed_opaque_existential_1 = v4;
  (*(void (**)(char *, _QWORD *, uint64_t))(v1 + 16))(v10, v2, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v10, 0, 1, v3);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(boxed_opaque_existential_1, enum case for PlaybackController.QueueCommand.moveItem(_:), v8);
  v11 = *((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:) + 1);
  v16 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
      + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v12 = v5;
  v13 = v4;
  v14 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 128) = v14;
  *v14 = v0;
  v14[1] = sub_BC1DC;
  return ((uint64_t (*)(uint64_t, _QWORD))v16)(v0 + 16, 0);
}

uint64_t sub_BC1DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 128);
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[14];
    v7 = v4[15];
    v8 = sub_BC2B4;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 2);
    v6 = v4[14];
    v7 = v4[15];
    v8 = sub_BC25C;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_BC25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 104));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BC2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release(*(_QWORD *)(v0 + 104));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BC318(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(double *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a5;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 40) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  *(_QWORD *)(v5 + 48) = v8;
  *(_QWORD *)(v5 + 56) = v9;
  return swift_task_switch(sub_BC388, v8, v9);
}

uint64_t sub_BC388()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  _QWORD *boxed_opaque_existential_1;
  _QWORD *v7;
  char *v9;

  v1 = v0[4];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE28);
  v3 = swift_allocObject(v2, 112, 7);
  v0[8] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_16E1B0;
  v4 = type metadata accessor for PlaybackController.TransportCommand(0);
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = &protocol witness table for PlaybackController.TransportCommand;
  *__swift_allocate_boxed_opaque_existential_1((_QWORD *)(v3 + 32)) = v1;
  v5 = *(void (**)(void))(*(_QWORD *)(v4 - 8) + 104);
  v5();
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = &protocol witness table for PlaybackController.TransportCommand;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(v3 + 72));
  ((void (*)(_QWORD *, _QWORD, uint64_t))v5)(boxed_opaque_existential_1, enum case for PlaybackController.TransportCommand.play(_:), v4);
  v9 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommands(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommands(_:options:);
  v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommands(_:options:)
                                  + 1));
  v0[9] = v7;
  *v7 = v0;
  v7[1] = sub_BC49C;
  return ((uint64_t (*)(uint64_t, _QWORD))v9)(v3, 0);
}

uint64_t sub_BC49C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[6];
    v7 = v4[7];
    v8 = sub_BC558;
  }
  else
  {
    swift_bridgeObjectRelease(v4[8]);
    v4[11] = a1;
    v6 = v4[6];
    v7 = v4[7];
    v8 = sub_BC518;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_BC518()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BC558()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BC598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a1;
  v4[8] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[9] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[10] = v7;
  v4[11] = v8;
  return swift_task_switch(sub_BC604, v7, v8);
}

uint64_t sub_BC604()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *boxed_opaque_existential_1;
  _QWORD *v3;
  char *v5;

  v1 = type metadata accessor for PlaybackController.QueueCommand(0);
  v0[5] = v1;
  v0[6] = &protocol witness table for PlaybackController.QueueCommand;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(boxed_opaque_existential_1, enum case for PlaybackController.QueueCommand.clearHardQueue(_:), v1);
  v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v3 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                  + 1));
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_BC6B4;
  return ((uint64_t (*)(_QWORD *, _QWORD))v5)(v0 + 2, 0);
}

uint64_t sub_BC6B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  *(_QWORD *)(*(_QWORD *)v2 + 104) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_BC770;
  }
  else
  {
    v4[14] = a1;
    __swift_destroy_boxed_opaque_existential_0(v4 + 2);
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_BC730;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_BC730()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BC770()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_BC7B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  __n128 v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  double v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFBB8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for QueueModelSection(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v35 - v18;
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  v23 = swift_bridgeObjectRelease(v21);
  QueueModelSection.init(tracklistSection:)(v22, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_9944((uint64_t)v12, &qword_1FFBB8);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v24(v19, v12, v13);
    v37 = objc_msgSend(a4, "displayItems");
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    v25 = *(unsigned __int8 *)(v14 + 80);
    v26 = (v25 + 24) & ~v25;
    v27 = (v15 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = a2;
    v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject(&unk_1CE688, v28 + 8, v25 | 7);
    *(_QWORD *)(v29 + 16) = v40;
    v24((char *)(v29 + v26), v16, v13);
    *(_QWORD *)(v29 + v27) = v38;
    *(_QWORD *)(v29 + v28) = v39;
    v30 = swift_allocObject(&unk_1CE6B0, 32, 7);
    *(_QWORD *)(v30 + 16) = sub_BE068;
    *(_QWORD *)(v30 + 24) = v29;
    aBlock[4] = sub_F2F8;
    v42 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_BD078;
    aBlock[3] = &block_descriptor_50;
    v31 = _Block_copy(aBlock);
    v32 = v42;
    swift_retain();
    swift_retain();
    *(_QWORD *)&v33 = swift_release(v32).n128_u64[0];
    v34 = v37;
    objc_msgSend(v37, "enumerateItemsInSectionAtIndex:usingBlock:", v36, v31, v33);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v30, "", 126, 205, 72, 1);
    swift_release(v29);
    swift_release(v30);
    if ((v31 & 1) != 0)
      __break(1u);
  }
}

void sub_BCA84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD **a6, _QWORD **a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  int v57;
  _QWORD **v58;
  char v59;
  _QWORD *v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  id v69;
  void *v70;
  __n128 v71;
  _BYTE v72[12];
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  _QWORD **v79;
  uint64_t v80;
  _QWORD **v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;

  v81 = a6;
  v82 = a4;
  v83 = a5;
  v9 = type metadata accessor for QueueModelSection(0);
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  __chkstk_darwin(v9);
  v84 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for InteractionContext.Origin(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v15);
  v17 = &v72[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v18);
  v20 = &v72[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  *(_QWORD *)&v22 = __chkstk_darwin(v21).n128_u64[0];
  v24 = &v72[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = objc_msgSend(a1, "metadataObject", v22);
  if (!v25)
    return;
  v26 = v25;
  v87 = objc_msgSend(v25, "podcastEpisode");

  if (!v87)
    return;
  v27 = objc_msgSend(v87, "title");
  if (!v27)
  {

    return;
  }
  v28 = v27;
  v79 = a7;
  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = objc_msgSend(v87, "author");
  if (!v31)
  {

    v50 = v30;
LABEL_13:
    swift_bridgeObjectRelease(v50);
    return;
  }
  v32 = v31;
  v80 = v30;
  v33 = objc_msgSend(v31, "name");

  if (!v33)
  {

    v50 = v80;
    goto LABEL_13;
  }
  v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v75 = v34;

  v76 = (void *)MPModelPodcastEpisode.contentId.getter();
  v77 = v35;
  if ((_BYTE)v36 == 0xFF)
  {

    swift_bridgeObjectRelease(v80);
    v50 = v75;
    goto LABEL_13;
  }
  v73 = v36;
  v37 = v75;
  v38 = type metadata accessor for PresentationSource(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v24, 1, 1, v38);
  swift_storeEnumTagMultiPayload(v17, v15, 13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for InteractionContext.Origin.none(_:), v11);
  v39 = v82;
  swift_retain();
  v40 = v87;
  InteractionContext.init(page:view:origin:)(v17, 7, v14);
  v41 = type metadata accessor for NowPlayingContextActionConfiguration(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = a1;
  v43 = sub_AC0BC(v39, a1, v40, (uint64_t)v24, 0, 0, (uint64_t)v20);

  swift_retain();
  v44 = MPModelPodcastEpisode.sublineStringForQueue.getter();
  v47 = v80;
  if (v45)
  {
    v48 = (uint64_t)v44;
    v49 = v45;
    *(_QWORD *)&v46 = swift_bridgeObjectRelease(v37).n128_u64[0];
    v74 = v48;
  }
  else
  {
    v49 = v37;
  }
  v52 = v84;
  v51 = v85;
  objc_msgSend(v40, "duration", v46);
  v54 = v53;
  v55 = v40;
  LODWORD(v87) = objc_msgSend(v40, "isExplicitEpisode");
  v56 = v86;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v51 + 16))(v52, v83, v86);
  v57 = (*(uint64_t (**)(_BYTE *, uint64_t))(v51 + 88))(v52, v56);
  v58 = v79;
  v59 = v73;
  if (v57 == enum case for QueueModelSection.hardQueue(_:))
  {
    v58 = v81;
  }
  else if (v57 != enum case for QueueModelSection.softQueue(_:))
  {
    swift_release(v43);

    sub_1B164(v76, v77, v59);
    swift_release(v43);
    swift_bridgeObjectRelease(v49);
    v71 = swift_bridgeObjectRelease(v47);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v51 + 8))(v52, v56, v71);
    return;
  }
  v60 = *v58;
  v61 = v42;
  swift_retain();
  v63 = v76;
  v62 = v77;
  sub_BE0F0(v76, v77, v59);
  v64 = v61;
  sub_1B140(v63, v62, v59);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v49);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v60);
  *v58 = v60;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v60 = sub_1356EC(0, v60[2] + 1, 1, v60);
    *v58 = v60;
  }
  v67 = v60[2];
  v66 = v60[3];
  if (v67 >= v66 >> 1)
  {
    v60 = sub_1356EC((_QWORD *)(v66 > 1), v67 + 1, 1, v60);
    *v58 = v60;
  }
  v60[2] = v67 + 1;
  v68 = &v60[11 * v67];
  v70 = v76;
  v69 = v77;
  v68[4] = v64;
  v68[5] = v70;
  v68[6] = v69;
  *((_BYTE *)v68 + 56) = v59;
  v68[8] = v78;
  v68[9] = v47;
  v68[10] = v74;
  v68[11] = v49;
  v68[12] = v54;
  *((_BYTE *)v68 + 104) = (_BYTE)v87;
  v68[14] = v43;
  swift_release(v43);

  sub_BE104(v70, v69, v59);
  swift_release(v43);
  sub_1B164(v70, v69, v59);
  swift_release(v43);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v47);
}

void sub_BD078(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_BD0C4(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, _QWORD **a6, _QWORD **a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  id v76;
  id v77;
  id v78;
  unsigned int v79;
  _QWORD *v80;
  _QWORD *v81;
  id v82;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  char v90;
  unint64_t v91;
  _QWORD *v92;
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  _QWORD **v99;
  _QWORD **v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  id v109;
  char *v110;
  id v111;

  v99 = a6;
  v100 = a7;
  v108 = a5;
  v111 = a1;
  v9 = type metadata accessor for InteractionContext.Origin(0);
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  __chkstk_darwin(v9);
  v107 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v101);
  v103 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v12);
  v106 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v14);
  v102 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v110 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFBC0);
  __chkstk_darwin(v19);
  v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v22);
  v24 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v96 - v26;
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v96 - v30;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))((char *)&v96 - v30, a2, v16, v29);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v33 = 1;
  v32(v31, 0, 1, v16);
  v109 = a4;
  v34 = objc_msgSend(a4, "playingItemIndexPath");
  if (v34)
  {
    v35 = v34;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v34);

    v33 = 0;
  }
  v32(v27, v33, 1, v16);
  v36 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2808C((uint64_t)v31, (uint64_t)v21, (uint64_t *)&unk_1FA950);
  sub_2808C((uint64_t)v27, v36, (uint64_t *)&unk_1FA950);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v37((uint64_t)v21, 1, v16) == 1)
  {
    sub_9944((uint64_t)v27, (uint64_t *)&unk_1FA950);
    sub_9944((uint64_t)v31, (uint64_t *)&unk_1FA950);
    if (v37(v36, 1, v16) == 1)
    {
      sub_9944((uint64_t)v21, (uint64_t *)&unk_1FA950);
      return;
    }
    goto LABEL_8;
  }
  sub_2808C((uint64_t)v21, (uint64_t)v24, (uint64_t *)&unk_1FA950);
  if (v37(v36, 1, v16) == 1)
  {
    sub_9944((uint64_t)v27, (uint64_t *)&unk_1FA950);
    sub_9944((uint64_t)v31, (uint64_t *)&unk_1FA950);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
LABEL_8:
    sub_9944((uint64_t)v21, &qword_1FFBC0);
    goto LABEL_10;
  }
  v38 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v110, v36, v16);
  v39 = sub_8330((unint64_t *)&unk_203F00, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v40 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v38, v16, v39);
  v41 = *(void (**)(char *, uint64_t))(v17 + 8);
  v41(v38, v16);
  sub_9944((uint64_t)v27, (uint64_t *)&unk_1FA950);
  sub_9944((uint64_t)v31, (uint64_t *)&unk_1FA950);
  v41(v24, v16);
  sub_9944((uint64_t)v21, (uint64_t *)&unk_1FA950);
  if ((v40 & 1) != 0)
    return;
LABEL_10:
  v42 = objc_msgSend(v111, "metadataObject");
  if (v42)
  {
    v43 = v42;
    v44 = objc_msgSend(v42, "podcastEpisode");

    if (v44)
    {
      v45 = objc_msgSend(v44, "title");
      if (!v45)
      {

        return;
      }
      v46 = v45;
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v49 = v48;

      v50 = objc_msgSend(v44, "author");
      if (!v50
        || (v51 = v50, v52 = objc_msgSend(v50, "name"), v51, !v52))
      {

LABEL_30:
        v95 = v49;
LABEL_31:
        swift_bridgeObjectRelease(v95);
        return;
      }
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v55 = v54;

      v110 = (char *)MPModelPodcastEpisode.contentId.getter();
      if (v57 == -1)
      {

        swift_bridgeObjectRelease(v49);
        v95 = v55;
        goto LABEL_31;
      }
      v58 = v57;
      v97 = v53;
      v98 = v56;
      v96 = v47;
      v59 = type metadata accessor for PresentationSource(0);
      v60 = (uint64_t)v102;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v102, 1, 1, v59);
      v61 = v103;
      swift_storeEnumTagMultiPayload(v103, v101, 13);
      v62 = v107;
      (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v107, enum case for InteractionContext.Origin.none(_:), v105);
      v63 = v108;
      swift_retain();
      v64 = v44;
      v65 = (uint64_t)v106;
      InteractionContext.init(page:view:origin:)(v61, 7, v62);
      v66 = type metadata accessor for NowPlayingContextActionConfiguration(0);
      swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
      v67 = sub_AC0BC(v63, 0, v64, v60, 0, 0, v65);

      swift_retain();
      v68 = MPModelPodcastEpisode.sublineStringForQueue.getter();
      if (v69)
      {
        v70 = (uint64_t)v68;
        v71 = v69;
        swift_bridgeObjectRelease(v55);
        v97 = v70;
        v55 = v71;
      }
      v72 = v98;
      objc_msgSend(v64, "duration");
      v74 = v73;
      v75 = objc_msgSend(v64, "isExplicitEpisode");
      swift_retain();
      v76 = v111;
      sub_BE0F0(v110, v72, v58);
      v77 = objc_msgSend(v109, "reorderCommand");
      if (v77
        && (v78 = v77, v79 = objc_msgSend(v77, "canMoveItem:", v76), swift_unknownObjectRelease(v78), v79))
      {
        v80 = v99;
        v81 = *v99;
        v82 = v76;
        sub_1B140(v110, v72, v58);
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v55);
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v81);
        *v80 = v81;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v81 = sub_1356EC(0, v81[2] + 1, 1, v81);
          *v99 = v81;
        }
        v85 = v81[2];
        v84 = v81[3];
        v86 = v85 + 1;
        if (v85 < v84 >> 1)
          goto LABEL_29;
        v87 = sub_1356EC((_QWORD *)(v84 > 1), v85 + 1, 1, v81);
        v81 = v87;
        v88 = v99;
      }
      else
      {
        v89 = v100;
        v81 = *v100;
        v82 = v76;
        sub_1B140(v110, v72, v58);
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v55);
        swift_retain();
        v90 = swift_isUniquelyReferenced_nonNull_native(v81);
        *v89 = v81;
        if ((v90 & 1) == 0)
        {
          v81 = sub_1356EC(0, v81[2] + 1, 1, v81);
          *v100 = v81;
        }
        v85 = v81[2];
        v91 = v81[3];
        v86 = v85 + 1;
        if (v85 < v91 >> 1)
          goto LABEL_29;
        v87 = sub_1356EC((_QWORD *)(v91 > 1), v85 + 1, 1, v81);
        v81 = v87;
        v88 = v100;
      }
      *v88 = v87;
LABEL_29:
      v81[2] = v86;
      v92 = &v81[11 * v85];
      v93 = v110;
      v92[4] = v82;
      v92[5] = v93;
      v94 = v98;
      v92[6] = v98;
      *((_BYTE *)v92 + 56) = v58;
      v92[8] = v96;
      v92[9] = v49;
      v92[10] = v97;
      v92[11] = v55;
      v92[12] = v74;
      *((_BYTE *)v92 + 104) = v75;
      v92[14] = v67;
      swift_release(v67);

      sub_BE104(v93, v94, v58);
      swift_release(v67);
      sub_1B164(v93, v94, v58);
      swift_release(v67);
      swift_bridgeObjectRelease(v55);
      goto LABEL_30;
    }
  }
}

uint64_t sub_BD960(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(void);
  id v11;
  uint64_t v13;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(void))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a2;
  v10();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_BDA1C(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _typeName(_:qualified:)(v1, 0);
}

uint64_t sub_BDA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a3;
  *(_QWORD *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 96) = 1;
  *(_QWORD *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 120) = 0;
  *(_QWORD *)(v4 + 104) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = 0;
  v9 = type metadata accessor for Podcasts(0);
  v16 = v9;
  v17 = sub_8330(&qword_1FB510, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v10 = __swift_allocate_boxed_opaque_existential_1(&v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v10, enum case for Podcasts.blueMooniOS(_:), v9);
  swift_retain(a1);
  swift_retain(a2);
  swift_retain(v6);
  LOBYTE(v6) = isFeatureEnabled(_:)(&v15);
  __swift_destroy_boxed_opaque_existential_0(&v15);
  if ((v6 & 1) != 0)
  {
    v11 = type metadata accessor for ChaptersController();
    v12 = &off_1D4058;
  }
  else
  {
    v11 = type metadata accessor for DeprecatedChaptersController();
    v12 = &off_1D4040;
  }
  v13 = swift_allocObject(v11, 16, 7);
  v16 = v11;
  v17 = (uint64_t)v12;
  *(_QWORD *)&v15 = v13;
  sub_27890(&v15, v4 + 56);
  sub_B9CB8(a4);
  return v4;
}

uint64_t sub_BDB80()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_BDBA4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_BA4D8(a1, a2, a3, v3);
}

uint64_t sub_BDBAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BDBD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, _BYTE *);
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[56];

  v2 = *(uint64_t (**)(uint64_t, uint64_t, _BYTE *))(v1 + 16);
  v3 = *a1;
  v4 = a1[1];
  sub_4AD4C((uint64_t)(a1 + 2), (uint64_t)v6);
  return v2(v3, v4, v6);
}

uint64_t sub_BDC18()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_BDC54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (uint64_t)(v1 + 7);
  v10 = v1[14];
  v11 = (_QWORD *)swift_task_alloc(dword_1FFB64);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_281D8;
  return sub_BA6BC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t *sub_BDCEC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[3];
  v4 = a1[6];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t sub_BDD44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc(dword_1FFB84);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_281D8;
  return sub_BB424(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_BDDD4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_BDE08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1FFB9C);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_281D8;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_BBA2C, 0, 0);
}

uint64_t sub_BDE70()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_BDEA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1FFBAC);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_27CA8;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_BBC48, 0, 0);
}

uint64_t sub_BDF0C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_BDF24(result, a2, a3 & 1);
  return result;
}

uint64_t sub_BDF24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

void sub_BDF60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_BD0C4(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD ***)(v3 + 32), *(_QWORD ***)(v3 + 40));
}

uint64_t sub_BDF6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_17(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_BDFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_BC7B0(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_BDFD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BDFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for QueueModelSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_BE068(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for QueueModelSection(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_BCA84(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD ***)(v3 + v9), *(_QWORD ***)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_BE0E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_BE0F0(id result, id a2, char a3)
{
  if (a3 != -1)
    return sub_1B140(result, a2, a3);
  return result;
}

void sub_BE104(void *a1, id a2, char a3)
{
  if (a3 != -1)
    sub_1B164(a1, a2, a3);
}

uint64_t sub_BE11C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain(a1);
    a1 = a2;
  }
  return swift_bridgeObjectRetain(a1);
}

uint64_t destroy for NowPlayingQueueController.TaskResult(uint64_t a1)
{
  return sub_BDF24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12NowPlayingUI25NowPlayingQueueControllerC10TaskResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_BE11C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NowPlayingQueueController.TaskResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_BE11C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_BDF24(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NowPlayingQueueController.TaskResult(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_BDF24(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingItemState.ID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingItemState.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_BE2C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_BE2C8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingQueueController.TaskResult()
{
  return &type metadata for NowPlayingQueueController.TaskResult;
}

uint64_t sub_BE2E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_BE320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1FFBDC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_281D8;
  return sub_BBFE0(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t *sub_BE3C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *v4 = *a2;
      swift_retain();
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = *(int *)(a3 + 20);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    v17 = *(_QWORD *)v16;
    LOBYTE(v16) = v16[8];
    *(_QWORD *)v15 = v17;
    v15[8] = (char)v16;
    v18 = (char *)v4 + v14;
    v19 = (char *)a2 + v14;
    v20 = *(_QWORD *)v19;
    LOBYTE(v19) = v19[8];
    *(_QWORD *)v18 = v20;
    v18[8] = (char)v19;
    swift_retain();
  }
  swift_retain();
  return v4;
}

double sub_BE4CC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

_QWORD *sub_BE548(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  v16 = (char *)a1 + v12;
  v17 = (char *)a2 + v12;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = v17[8];
  *(_QWORD *)v16 = v18;
  v16[8] = (char)v17;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_BE628(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_BE730((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  swift_release(v15);
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = v18[8];
  v20 = *(_QWORD *)v17;
  *(_QWORD *)v17 = v19;
  v17[8] = (char)v18;
  swift_retain();
  swift_release(v20);
  return a1;
}

uint64_t sub_BE730(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_BE770(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

char *sub_BE840(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_BE730((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_release(v12);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)v15;
  LOBYTE(v15) = v15[8];
  v17 = *(_QWORD *)v14;
  *(_QWORD *)v14 = v16;
  v14[8] = (char)v15;
  swift_release(v17);
  return a1;
}

uint64_t sub_BE934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BE940);
}

uint64_t sub_BE940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_BE9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BE9CC);
}

uint64_t sub_BE9CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t _s10StaticTextVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1FFC58;
  if (!qword_1FFC58)
    return swift_getSingletonMetadata(a1, &_s10StaticTextVMn);
  return result;
}

void sub_BEA88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_930E4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_BEAFC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A1148, 1);
}

uint64_t sub_BEB0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  char v37;
  void (*v38)(_BYTE *, uint64_t);
  unsigned int *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  _QWORD v60[2];

  v59 = a1;
  v2 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v2);
  v58 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for BlendMode(0);
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  __chkstk_darwin(v4);
  v55 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ColorSchemeContrast(0);
  v53 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v49[-v10];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB030);
  __chkstk_darwin(v54);
  v13 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = (uint64_t *)(v1 + *(int *)(_s10StaticTextVMa(0) + 20));
  v15 = *v14;
  v16 = *((_BYTE *)v14 + 8);
  v17 = swift_retain();
  v18 = sub_56D88(v17, v16);
  swift_release(v15);
  v20 = *(_QWORD *)(v18 + 16);
  v19 = *(_QWORD *)(v18 + 24);
  swift_bridgeObjectRetain(v19);
  swift_release(v18);
  v60[0] = v20;
  v60[1] = v19;
  v21 = sub_11CEC();
  v22 = Text.init<A>(_:)(v60, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  if (qword_1F9538 != -1)
    swift_once(&qword_1F9538, sub_EEF9C);
  v29 = v26 & 1;
  v30 = Text.font(_:)(qword_210278, v22, v24, v29, v28);
  v51 = v31;
  v52 = v32;
  v50 = v33;
  sub_25404(v22, v24, v29);
  swift_bridgeObjectRelease(v28);
  sub_562AC((uint64_t)v11);
  v34 = enum case for ColorSchemeContrast.standard(_:);
  v35 = v53;
  v36 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v53 + 104);
  v36(v8, enum case for ColorSchemeContrast.standard(_:), v6);
  v37 = static ColorSchemeContrast.== infix(_:_:)(v11, v8);
  v38 = *(void (**)(_BYTE *, uint64_t))(v35 + 8);
  v38(v8, v6);
  v38(v11, v6);
  sub_562AC((uint64_t)v11);
  v36(v8, v34, v6);
  LOBYTE(v34) = static ColorSchemeContrast.== infix(_:_:)(v11, v8);
  v38(v8, v6);
  v38(v11, v6);
  v39 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  v41 = v55;
  v40 = v56;
  if ((v34 & 1) == 0)
    v39 = (unsigned int *)&enum case for BlendMode.normal(_:);
  v42 = v57;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v56 + 104))(v55, *v39, v57);
  v43 = v50 & 1;
  if ((v37 & 1) != 0)
    v44 = 0.35;
  else
    v44 = 0.55;
  v45 = (uint64_t)v58;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v40 + 16))(v58, v41, v42);
  sub_BEEC8(v45, (uint64_t)&v13[*(int *)(v54 + 36)]);
  v47 = v51;
  v46 = v52;
  *(_QWORD *)v13 = v30;
  *((_QWORD *)v13 + 1) = v47;
  v13[16] = v43;
  *((_QWORD *)v13 + 3) = v46;
  *((double *)v13 + 4) = v44;
  sub_278A8(v30, v47, v43);
  swift_bridgeObjectRetain(v46);
  sub_29BA4(v45);
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v41, v42);
  sub_25404(v30, v47, v43);
  swift_bridgeObjectRelease(v46);
  return sub_BEF0C((uint64_t)v13, v59);
}

uint64_t sub_BEEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BEF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_BEF58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FFC98;
  if (!qword_1FFC98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB030);
    sub_BEFC4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FFC98);
  }
  return result;
}

unint64_t sub_BEFC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FFCA0;
  if (!qword_1FFCA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FFCA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1FFCA0);
  }
  return result;
}

uint64_t sub_BF028(uint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = *(_BYTE *)(a2 + 8) == 2 && *(_QWORD *)a2 == 0;
    return *(_BYTE *)(a1 + 8) != 1 && v3;
  }
  else if (*(_BYTE *)(a2 + 8))
  {
    return 0;
  }
  else
  {
    return static CGFloat.==~ infix(_:_:)(*(double *)a1, *(double *)a2);
  }
}

char *sub_BF068(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  objc_super v44;

  v5 = v4;
  v10 = &v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  *(_OWORD *)v10 = xmmword_170DA0;
  *((_OWORD *)v10 + 1) = xmmword_170DB0;
  *(int64x2_t *)&v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkSize] = vdupq_n_s64(0x4044000000000000uLL);
  v11 = &v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkTreatment];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = -2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkExplicitBackgroundColor] = 0;
  v13 = &v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkAccessoryStyle];
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = 0;
  v13[24] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_isDisabled] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomBottomSeparator] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomTopSeparator] = 0;
  v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment] = 0;
  v14 = &v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment];
  *(_QWORD *)v14 = 0;
  v14[8] = 2;
  v15 = &v4[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent;
  type metadata accessor for ArtworkComponentImageView();
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v18 = v5;
  v19 = objc_msgSend(v17, "init");
  v20 = _s9ComponentCMa();
  swift_allocObject(v20, 256, 7);
  *(_QWORD *)&v5[v16] = sub_FF910(v19);
  v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_wantsCustomHandlingOfSeparatorInset] = 0;
  v21 = &v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_proposedHorizontalLockupSeparatorInset];
  v22 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v21 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v21 + 1) = v22;
  *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext] = 0;
  v23 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView;
  _s9StackViewCMa();
  *(_QWORD *)&v18[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customBottomSeparatorView] = 0;
  v18[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_rowPosition] = 1;

  v44.receiver = v18;
  v44.super_class = (Class)type metadata accessor for HorizontalLockupCollectionViewCell(0);
  v24 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  v25 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent;
  v26 = *(_QWORD *)&v24[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent];
  v27 = qword_1F9588;
  v28 = v24;
  swift_retain();
  if (v27 != -1)
    swift_once(&qword_1F9588, sub_FDE28);
  v29 = (void *)qword_210310;
  v30 = (id)qword_210310;
  sub_FFFEC(v29, 0x3FF0000000000000);
  swift_release(v26);
  v31 = *(_QWORD *)&v24[v25];
  v32 = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v31 + 24) = 0x70756B636F6CLL;
  *(_QWORD *)(v31 + 32) = 0xE600000000000000;
  swift_bridgeObjectRelease(v32);
  v33 = *(_QWORD *)&v24[v25];
  v34 = *(double *)(v33 + 88);
  v35 = *(double *)(v33 + 96);
  *(_OWORD *)(v33 + 88) = *(_OWORD *)&v28[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkSize];
  v36 = swift_retain();
  sub_FFE24(v36, v34, v35);
  swift_release(v33);
  v37 = *(_QWORD *)&v24[v25];
  v38 = swift_allocObject(&unk_1CE9F0, 24, 7);
  swift_unknownObjectUnownedInit(v38 + 16, v28);
  v39 = *(_QWORD *)(v37 + 184);
  v40 = *(_QWORD *)(v37 + 192);
  *(_QWORD *)(v37 + 184) = sub_C0C94;
  *(_QWORD *)(v37 + 192) = v38;
  sub_145A0(v39, v40);
  v41 = objc_msgSend(v28, "contentView");
  objc_msgSend(v41, "addSubview:", *(_QWORD *)(*(_QWORD *)&v24[v25] + 104));
  v42 = *(id *)&v28[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView];
  objc_msgSend(v41, "addSubview:", v42);

  return v28;
}

void sub_BF418(uint64_t a1)
{
  void (*v1)(char *);
  uint64_t v2;
  char *Strong;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  objc_msgSend(Strong, "setNeedsLayout");
  v1 = *(void (**)(char *))&Strong[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler];
  if (v1)
  {
    v2 = *(_QWORD *)&Strong[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler
                          + 8];
    swift_retain();
    v1(Strong);
    sub_145A0((uint64_t)v1, v2);
  }

}

void sub_BF4D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  unsigned __int8 v29;
  id v30;
  double v31;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double MinX;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  CGFloat v46;
  double v47;
  double v48;
  __n128 v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  CGFloat v66;
  double v67;
  double v68;
  id v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  double v78;
  double v79;
  double v80;
  double v81;
  CGFloat v82;
  double v83;
  double v84;
  double v85;
  CGFloat v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double MaxX;
  double *v108;
  uint64_t v109;
  double v110;
  id v111;
  CGFloat v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118;
  void *v119;
  id v120;
  void *v121;
  CGFloat v122;
  id v123;
  id v124;
  uint64_t v125;
  void *v126;
  id v127;
  void *v128;
  id v129;
  id v130;
  double v131;
  CGFloat v132;
  CGFloat v133;
  double v134;
  CGFloat v135;
  CGFloat v136;
  CGFloat v137;
  CGFloat v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double height;
  double y;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  objc_super v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;

  v1 = v0;
  v2 = type metadata accessor for CGRect.LayoutAxis(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for HorizontalLockupCollectionViewCell(0);
  v152.receiver = v0;
  v152.super_class = v6;
  objc_msgSendSuper2(&v152, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v141 = v7;
  v140 = v8;
  v139 = v9;
  v146 = v10;
  v11 = COERCE_DOUBLE(objc_msgSend(v0, "contentView"));
  objc_msgSend(*(id *)&v11, "bounds");
  v151 = v12;
  v14 = v13;
  v16 = v15;
  v148 = v17;
  v18 = COERCE_DOUBLE(objc_msgSend(v0, "traitCollection"));
  v142 = UITraitCollection.safeDisplayScale.getter();
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v20 = v19;
  v22 = v21;
  v23 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v24 = objc_msgSend(v0, "tableViewCell");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "layoutManager");

    if (v26)
    {
      if (objc_msgSend(v1, "isEditing"))
      {
        v147 = v18;
        v27 = objc_msgSend(v1, "tableViewCell");
        if (!v27)
        {
          __break(1u);
          return;
        }
        v28 = v27;
        v29 = objc_msgSend(v27, "showingDeleteConfirmation");

        if ((v29 & 1) != 0)
        {

        }
        else
        {
          v30 = objc_msgSend(v1, "tableViewCell");
          objc_msgSend(v26, "contentEndingRectForCell:forNewEditingState:", v30, 1);
          height = v32;
          y = v31;
          v34 = v33;
          v36 = v35;

          v153.size.width = height;
          v153.origin.x = y;
          v153.origin.y = v34;
          v153.size.height = v36;
          MinX = CGRectGetMinX(v153);

          if (v22 - MinX > 8.0)
            v22 = v22 - MinX;
          else
            v22 = 8.0;
        }
        v18 = v147;
      }
      else
      {

      }
    }
  }
  v149 = v14;
  v150 = v16;
  v38 = v148;
  v39 = UIEdgeInsetsInsetRect(v151, v14, v16, v148, v20, v22);
  v41 = v40;
  v42 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  v43 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets + 8];
  v44 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets + 16];
  v138 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets + 24];
  v147 = v154.origin.y + v42;
  v45 = v154.size.height - v42 - v44;
  v154.origin.x = v39;
  height = v154.size.height;
  y = v154.origin.y;
  v154.size.width = v41;
  v46 = CGRectGetMinX(v154);
  v143 = v43;
  v47 = v43 + v46;
  v48 = v142;
  v49.n128_f64[0] = sub_1000F4(0, 0, 1, v142);
  v50 = v49.n128_f64[0];
  v52 = v51;
  static CGRect.LayoutAxis.vertical.getter(v49);
  v53 = v47;
  v54 = v38;
  v55 = CGRect.centeringAlong(axes:bounds:scale:)(v5, v39, v147, v41, v45, v48, v53, 0.0, v50, v52);
  v57 = v56;
  v59 = v58;
  v61 = v60;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v62 = CGRect.applyingLayoutDirection(_:inBounds:)(v23, v151, v149, v150, v54, v55, v57, v59, v61);
  if ((sub_1002D0(v62, v63, v64, v65, v48) & 1) != 0)
  {
    v155.origin.x = v55;
    v155.origin.y = v57;
    v155.size.width = v59;
    v155.size.height = v61;
    v66 = v138 + v143 + CGRectGetWidth(v155);
    v67 = v39 + v66;
    v68 = v41 - v66;
  }
  else
  {
    v68 = v41;
    v67 = v39;
  }
  v69 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView];
  v70 = v150;
  v71 = v151;
  v72 = v148;
  v73 = v149;
  v137 = v67;
  v74 = v67;
  v75 = y;
  v138 = v68;
  v76 = v68;
  v77 = height;
  objc_msgSend(v69, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v23, v151, v149, v150, v148, v74, y, v76, height));

  objc_msgSend(v1, "separatorInset");
  v147 = v78;
  v134 = v79;
  v143 = v80;
  v131 = v81;
  v133 = v39;
  v156.origin.x = v39;
  v82 = v71;
  v156.origin.y = v75;
  v132 = v41;
  v156.size.width = v41;
  v156.size.height = v77;
  v136 = CGRectGetMinX(v156);
  v157.origin.x = v71;
  v157.origin.y = v73;
  v157.size.width = v70;
  v157.size.height = v72;
  v135 = CGRectGetMinX(v157);
  objc_msgSend(*(id *)&v11, "frame");
  v83 = v141;
  v84 = v140;
  v85 = v139;
  v86 = v73;
  v87 = v146;
  v158.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v23, v141, v140, v139, v146, v88, v89, v90, v91);
  v92 = CGRectGetMinX(v158);
  v159.origin.x = v83;
  v159.origin.y = v84;
  v159.size.width = v85;
  v159.size.height = v87;
  v93 = CGRectGetMinX(v159);
  if (v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment] == 1)
  {
    v160.origin.x = v137;
    v160.size.height = height;
    v160.origin.y = y;
    v160.size.width = v138;
    v94 = CGRectGetMinX(v160);
    v161.origin.x = v82;
    v161.origin.y = v86;
    v161.size.width = v70;
    v161.size.height = v148;
    v95 = v94 - CGRectGetMinX(v161);
    objc_msgSend(*(id *)&v11, "frame");
    v162.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v23, v83, v84, v85, v87, v96, v97, v98, v99);
    v100 = CGRectGetMinX(v162);
    v163.origin.x = v83;
    v163.origin.y = v84;
    v163.size.width = v85;
    v163.size.height = v87;
    v101 = v95 + v100 - CGRectGetMinX(v163);
  }
  else
  {
    v101 = v136 - v135 + v92 - v93;
  }
  if (v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment + 8])
  {
    v102 = 0.0;
    v103 = v146;
    v104 = v149;
    v105 = v150;
    if (v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment + 8] == 1)
      v102 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment];
  }
  else
  {
    v106 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment];
    v105 = v150;
    v164.origin.x = v151;
    v164.size.height = v148;
    v104 = v149;
    v164.origin.y = v149;
    v164.size.width = v150;
    MaxX = CGRectGetMaxX(v164);
    v165.origin.x = v133;
    v165.size.height = height;
    v165.origin.y = y;
    v165.size.width = v132;
    v102 = MaxX - CGRectGetMaxX(v165) + v106;
    v103 = v146;
  }
  v108 = (double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_proposedHorizontalLockupSeparatorInset];
  *v108 = v147;
  v108[1] = v101;
  v108[2] = v143;
  v108[3] = v102;
  if (v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomBottomSeparator] == 1
    && (v109 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_rowPosition,
        v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_rowPosition] != 2))
  {
    v111 = objc_msgSend((id)objc_opt_self(UIColor), "tableSeparatorLightColor");
    v112 = v104;
    v113 = CGRect.applyingLayoutDirection(_:inBounds:)(v23, v83, v84, v85, v103, v101, v104, v105 - v101, 1.0 / v142);
    v115 = v114;
    v117 = v116;
    v118 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customBottomSeparatorView;
    v119 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customBottomSeparatorView];
    if (v1[v109] == 3)
    {
      objc_msgSend(v119, "removeFromSuperview");
    }
    else
    {
      if (v119)
      {
        v120 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customBottomSeparatorView];
      }
      else
      {
        v120 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        objc_msgSend(v120, "setBackgroundColor:", v111);
        v121 = *(void **)&v1[v118];
        *(_QWORD *)&v1[v118] = v120;

        v119 = 0;
      }
      v122 = v148;
      v123 = v119;
      v124 = objc_msgSend(v120, "superview");

      if (!v124)
        objc_msgSend(*(id *)&v11, "addSubview:", v120);
      v166.origin.x = v151;
      v166.origin.y = v112;
      v166.size.width = v105;
      v166.size.height = v122;
      objc_msgSend(v120, "setFrame:", v113, CGRectGetHeight(v166) - v117, v115, v117);

    }
    if (v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomTopSeparator] == 1
      && (v1[v109] == 3 || !v1[v109]))
    {
      v125 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView;
      v126 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView];
      if (v126)
      {
        v110 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView];
      }
      else
      {
        v110 = COERCE_DOUBLE(objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0));
        objc_msgSend(*(id *)&v110, "setBackgroundColor:", v111);
        v128 = *(void **)&v1[v125];
        *(double *)&v1[v125] = v110;

        v126 = 0;
      }
      v129 = v126;
      v130 = objc_msgSend(*(id *)&v110, "superview");

      if (!v130)
        objc_msgSend(*(id *)&v11, "addSubview:", *(_QWORD *)&v110);
      objc_msgSend(*(id *)&v110, "setFrame:", v113, 0.0, v115, v117);

      v11 = *(double *)&v111;
    }
    else
    {
      v127 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView];
      objc_msgSend(v127, "removeFromSuperview");

      v11 = v18;
      v110 = *(double *)&v111;
    }
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customBottomSeparatorView], "removeFromSuperview");
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView], "removeFromSuperview");
    if (((static CGFloat.==~ infix(_:_:)(v147, v147) & 1) == 0
       || (static CGFloat.==~ infix(_:_:)(v134, v101) & 1) == 0
       || (static CGFloat.==~ infix(_:_:)(v143, v143) & 1) == 0
       || (static CGFloat.==~ infix(_:_:)(v131, v102) & 1) == 0)
      && (v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_wantsCustomHandlingOfSeparatorInset] & 1) == 0)
    {
      objc_msgSend(v1, "setSeparatorInset:", v147, v101, v143, v102);
    }
    v110 = v18;
  }

}

double sub_BFEEC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
  objc_msgSend(*(id *)(v1 + 104), "clearArtworkCatalogs");
  result = 7.29112205e-304;
  *(_DWORD *)(v1 + 232) = 0x1000000;
  return result;
}

uint64_t sub_C0040(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double v5;
  id v6;
  double v7;
  uint64_t result;
  void (*v9)(char *);
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for HorizontalLockupCollectionViewCell(0);
  objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAE8);
  v5 = Optional<A>.safeDisplayScale.getter(v4, &protocol witness table for UITraitCollection);
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = UITraitCollection.safeDisplayScale.getter();

  result = static CGFloat.==~ infix(_:_:)(v5, v7);
  if ((result & 1) == 0)
  {
    result = (uint64_t)objc_msgSend(v2, "setNeedsLayout");
    v9 = *(void (**)(char *))&v2[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler];
    if (v9)
    {
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler
                         + 8];
      swift_retain();
      v9(v2);
      return sub_145A0((uint64_t)v9, v10);
    }
  }
  return result;
}

void sub_C0218()
{
  uint64_t v0;

  sub_791D4(*(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder), *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder + 16));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkExplicitBackgroundColor));
  sub_C0C60(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkAccessoryStyle));

  sub_145A0(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache));
}

id sub_C02EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HorizontalLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C0400()
{
  return type metadata accessor for HorizontalLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for HorizontalLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1FFCF0;
  if (!qword_1FFCF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HorizontalLockupCollectionViewCell);
  return result;
}

uint64_t sub_C0444(uint64_t a1)
{
  _QWORD v2[22];

  v2[0] = " ";
  v2[1] = &unk_170E30;
  v2[2] = &unk_170E48;
  v2[3] = &unk_170E60;
  v2[4] = &unk_170E78;
  v2[5] = &unk_170E90;
  v2[6] = &unk_170E78;
  v2[7] = &unk_170EA8;
  v2[8] = &unk_170EA8;
  v2[9] = &unk_170EA8;
  v2[10] = &unk_170EA8;
  v2[11] = &unk_170EC0;
  v2[12] = &unk_170ED8;
  v2[13] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[14] = &unk_170EA8;
  v2[15] = " ";
  v2[16] = &unk_170E78;
  v2[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[18] = &unk_170E78;
  v2[19] = &unk_170E78;
  v2[20] = &unk_170E78;
  v2[21] = &unk_170EF0;
  return swift_updateClassMetadata2(a1, 256, 22, v2, a1 + 112);
}

uint64_t storeEnumTagSinglePayload for HorizontalLockupCollectionViewCell.RowPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_C0558 + 4 * byte_170DC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_C058C + 4 * byte_170DC0[v4]))();
}

uint64_t sub_C058C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C0594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC059CLL);
  return result;
}

uint64_t sub_C05A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC05B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_C05B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C05BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalLockupCollectionViewCell.RowPosition()
{
  return &type metadata for HorizontalLockupCollectionViewCell.RowPosition;
}

uint64_t getEnumTagSinglePayload for HorizontalLockupCollectionViewCell.TrailingSeparatorAlignment(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalLockupCollectionViewCell.TrailingSeparatorAlignment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_C0664(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_C067C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalLockupCollectionViewCell.TrailingSeparatorAlignment()
{
  return &type metadata for HorizontalLockupCollectionViewCell.TrailingSeparatorAlignment;
}

uint64_t storeEnumTagSinglePayload for HorizontalLockupCollectionViewCell.LeadingSeparatorAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C06F0 + 4 * byte_170DCF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C0724 + 4 * byte_170DCA[v4]))();
}

uint64_t sub_C0724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C072C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC0734);
  return result;
}

uint64_t sub_C0740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC0748);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C074C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C0754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalLockupCollectionViewCell.LeadingSeparatorAlignment()
{
  return &type metadata for HorizontalLockupCollectionViewCell.LeadingSeparatorAlignment;
}

unint64_t sub_C0774()
{
  unint64_t result;

  result = qword_1FFD00;
  if (!qword_1FFD00)
  {
    result = swift_getWitnessTable(&unk_170F9C, &type metadata for HorizontalLockupCollectionViewCell.LeadingSeparatorAlignment);
    atomic_store(result, (unint64_t *)&qword_1FFD00);
  }
  return result;
}

unint64_t sub_C07BC()
{
  unint64_t result;

  result = qword_1FFD08;
  if (!qword_1FFD08)
  {
    result = swift_getWitnessTable(&unk_171064, &type metadata for HorizontalLockupCollectionViewCell.RowPosition);
    atomic_store(result, (unint64_t *)&qword_1FFD08);
  }
  return result;
}

uint64_t sub_C0800()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext, v3, 0, 0);
  return swift_retain(*v1);
}

double sub_C0848(uint64_t a1)
{
  double result;

  sub_C0BD8(a1);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*sub_C086C(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_C08C4;
}

void sub_C08C4(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
    v6 = *(_QWORD *)(v4 + v3[4]);
    v7 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v5 + 16) = v6;
    swift_retain(v6);
    swift_release(v7);
  }
  free(v3);
}

double sub_C091C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double result;

  v2 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache) = a1;
  swift_retain();
  swift_release(v3);
  v4 = *(char **)(v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView);
  v5 = *(_QWORD *)(v1 + v2);
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache];
  *(_QWORD *)&v4[OBJC_IVAR____TtCV12NowPlayingUI14DeprecatedText9StackView_textDrawingCache] = v5;
  swift_retain_n(v5, 2);
  v7 = v4;
  sub_4E06C(v6);

  swift_release(v6);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_C09A8()
{
  _BYTE *v0;
  _BYTE *v1;
  _OWORD *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  *v2 = xmmword_170DA0;
  v2[1] = xmmword_170DB0;
  *(int64x2_t *)&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkSize] = vdupq_n_s64(0x4044000000000000uLL);
  v3 = &v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkTreatment];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkPlaceholder];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = -2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkExplicitBackgroundColor] = 0;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkAccessoryStyle];
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = 0;
  v5[24] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_lockupArtworkCatalog] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_isDisabled] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomBottomSeparator] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_allowsCustomTopSeparator] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment] = 0;
  v6 = &v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_trailingSeparatorAlignment];
  *(_QWORD *)v6 = 0;
  v6[8] = 2;
  v7 = &v0[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_layoutInvalidationHandler];
  *v7 = 0;
  v7[1] = 0;
  v8 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent;
  type metadata accessor for ArtworkComponentImageView();
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v10 = _s9ComponentCMa();
  swift_allocObject(v10, 256, 7);
  *(_QWORD *)&v1[v8] = sub_FF910(v9);
  v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_wantsCustomHandlingOfSeparatorInset] = 0;
  v11 = &v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_proposedHorizontalLockupSeparatorInset];
  v12 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v11 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v11[1] = v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext] = 0;
  v13 = OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textStackView;
  _s9StackViewCMa();
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_textDrawingCache] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customTopSeparatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_customBottomSeparatorView] = 0;
  v1[OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_rowPosition] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/HorizontalLockupCollectionViewCell.swift", 53, 2, 66, 0);
  __break(1u);
}

uint64_t sub_C0BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkCachingContext, v9, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  swift_release(v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI34HorizontalLockupCollectionViewCell_artworkComponent);
  v6 = *v3;
  v7 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = *v3;
  swift_retain(v6);
  return swift_release(v7);
}

void sub_C0C60(id a1)
{
  if ((unint64_t)a1 >= 3)

}

uint64_t sub_C0C70()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_C0C94()
{
  uint64_t v0;

  sub_BF418(v0);
}

uint64_t sub_C0C9C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_171348);
  v4 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 33);
}

BOOL sub_C0D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  char v15;
  _BOOL8 result;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 160);
  KeyPath = swift_getKeyPath(&unk_171398);
  v17 = v1;
  v3 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v17, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v1 + 24);
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5 >> 62)
    return 0;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  v9 = *(double *)(v5 + 32);
  v8 = *(double *)(v5 + 40);
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 48);
  v13 = *(double *)(v0 + 56);
  v12 = *(double *)(v0 + 64);
  if (v6 == v10 && v7 == v11)
  {
    if (v9 == v13)
      return v8 == v12;
    return 0;
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v10, v11, 0);
  result = 0;
  if ((v15 & 1) != 0 && v9 == v13)
    return v8 == v12;
  return result;
}

uint64_t sub_C0E1C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_171370);
  v4 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 32);
}

void sub_C0EA0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171370);
  v6 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 32);
}

double sub_C0F2C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_171370);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_A6C4, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C0FD4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

void sub_C0FDC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&off_171348);
  v6 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 33);
}

double sub_C1068(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&off_171348);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_C2A90, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C1110()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_171320);
  v4 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 72);
}

void sub_C1198(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171320);
  v7 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + 80);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 72);
  *(_BYTE *)(a2 + 8) = v6;
}

double sub_C122C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_171320);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_C285C, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C12D8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1712F8);
  v4 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 88);
}

void sub_C1360(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1712F8);
  v7 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + 96);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 88);
  *(_BYTE *)(a2 + 8) = v6;
}

double sub_C13F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1712F8);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_C2840, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C14A0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_1712D0);
  v4 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 104);
}

void sub_C1528(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&off_1712D0);
  v7 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + 112);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 104);
  *(_BYTE *)(a2 + 8) = v6;
}

double sub_C15BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&off_1712D0);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_C2AB8, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C1668()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1712A8);
  v4 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + 120);
}

void sub_C16F0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1712A8);
  v7 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v3 + 128);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 120);
  *(_BYTE *)(a2 + 8) = v6;
}

double sub_C1784(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[4];
  char v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1712A8);
  v8[2] = v4;
  v8[3] = v2;
  v9 = v3;
  v10 = v4;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_C2AA4, v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void *sub_C1830()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_171280);
  v5 = v0;
  v2 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v5, KeyPath, v2);
  swift_release(KeyPath);
  v3 = *(void **)(v0 + 136);
  sub_15450(v3);
  return v3;
}

id sub_C18C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171280);
  v9 = v3;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(void **)(v3 + 136);
  v7 = *(_QWORD *)(v3 + 144);
  *a2 = v6;
  a2[1] = v7;
  return sub_15450(v6);
}

double sub_C1958(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[7];
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_171280);
  v8[2] = v4;
  v8[3] = v2;
  v8[4] = v3;
  v9 = v4;
  sub_15450(v2);
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_C27A4, v8, (char *)&type metadata for () + 8, v6);
  sub_4375C(v2);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_C1A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned __int8 v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FFE38);
  withObservationTracking<A>(_:onChange:)(&v15, sub_C2930, v0, sub_C2938, v0, v1);
  v2 = v15;
  v3 = sub_C1F2C(v15, v16);
  KeyPath = swift_getKeyPath(&off_171348);
  v15 = v0;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, KeyPath, v5);
  swift_release(KeyPath);
  if ((v3 & 1) == *(_BYTE *)(v0 + 33))
  {
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  else
  {
    v6 = swift_getKeyPath(&unk_171370);
    v15 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, v6, v5);
    swift_release(v6);
    if (*(_BYTE *)(v0 + 32) == 1)
    {
      v8 = __chkstk_darwin(v7);
      v13 = v0;
      v14 = v3 & 1;
      v9 = static Animation.default.getter(v8);
      withAnimation<A>(_:_:)(v9, sub_C29A0, v12, (char *)&type metadata for () + 8);
      swift_release(v9);
    }
    else
    {
      v11 = swift_getKeyPath(&off_171348);
      __chkstk_darwin(v11);
      v13 = v0;
      v14 = v3 & 1;
      v15 = v0;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v15, v11, sub_C2990, v12, (char *)&type metadata for () + 8, v5);
      swift_release(v11);
    }
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

void sub_C1C34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 160);
  KeyPath = swift_getKeyPath(&unk_171398);
  v7 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 24);
  v6 = swift_getKeyPath(&unk_1713C0);
  v7 = v3;
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, v6, v5);
  swift_release(v6);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(v3 + 32);
}

double sub_C1D08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  _BYTE v14[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject(&unk_1CEB68, 24, 7);
  swift_beginAccess(a1, v14, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  swift_weakInit(v6 + 16, Strong);
  swift_release(Strong);
  type metadata accessor for MainActor(0);
  v8 = swift_retain();
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1CEB90, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v6;
  swift_release(v6);
  v11 = sub_FABDC((uint64_t)v4, (uint64_t)&unk_1FFE48, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_C1E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  return swift_task_switch(sub_C1EB4, v7, v8);
}

uint64_t sub_C1EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    sub_C1A20();
    v3 = swift_release(Strong);
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_C1F2C(uint64_t result, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  char v14;
  int v15;

  if (!result)
  {
LABEL_12:
    v15 = a2;
    if (a2)
      goto LABEL_13;
    return 0;
  }
  v4 = *(_QWORD *)(result + 16);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
    v8 = *(double *)(v4 + 32);
    v7 = *(double *)(v4 + 40);
    v9 = *(_QWORD *)(v2 + 40);
    v10 = *(_QWORD *)(v2 + 48);
    v12 = *(double *)(v2 + 56);
    v11 = *(double *)(v2 + 64);
    if (v5 != v9 || v6 != v10)
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v9, v10, 0);
      result = 0;
      if ((v14 & 1) == 0 || v8 != v12)
        goto LABEL_12;
LABEL_11:
      result = v7 == v11;
      goto LABEL_12;
    }
    if (v8 == v12)
      goto LABEL_11;
  }
  result = 0;
  v15 = a2;
  if (!a2)
    return 0;
LABEL_13:
  if (v15 != 1)
    return *(unsigned __int8 *)(v2 + 152);
  return result;
}

double sub_C1FDC(uint64_t a1, char a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&off_171348);
  v7[2] = a1;
  v8 = a2;
  v9 = a1;
  v5 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_C2A90, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C2090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  sub_4375C(*(id *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 160));
  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI14SpeakerContent___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_C2100()
{
  return type metadata accessor for SpeakerContent(0);
}

uint64_t type metadata accessor for SpeakerContent(uint64_t a1)
{
  uint64_t result;

  result = qword_1FFD40;
  if (!qword_1FFD40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SpeakerContent);
  return result;
}

uint64_t sub_C2144(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_171128;
  v4[1] = &unk_171140;
  v4[2] = &unk_171140;
  v4[3] = &unk_171158;
  v4[4] = &unk_171170;
  v4[5] = &unk_171170;
  v4[6] = &unk_171170;
  v4[7] = &unk_171170;
  v4[8] = &unk_171188;
  v4[9] = &unk_171140;
  v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[11] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t initializeWithCopy for TextContent.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for TextContent.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TextContent.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for SpeakerContent.ID()
{
  return &type metadata for SpeakerContent.ID;
}

double sub_C22D8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&off_1712D0);
  v9 = v2;
  v10 = a1;
  v11 = a2 & 1;
  v12 = v2;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_C2824, &v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_C2388(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_1712A8);
  v9 = v2;
  v10 = a1;
  v11 = a2 & 1;
  v12 = v2;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_C2808, &v8, (char *)&type metadata for () + 8, v6);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_C2438(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_171280);
  v9 = v2;
  v10 = a1;
  v11 = a2;
  v12 = v2;
  v6 = sub_8330(&qword_1FB028, type metadata accessor for SpeakerContent, (uint64_t)&unk_17120C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_C27A4, &v8, (char *)&type metadata for () + 8, v6);
  sub_4375C(a1);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_C24F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 56);
  return swift_bridgeObjectRetain(v3);
}

Swift::Int sub_C2510(uint64_t a1, uint64_t a2, double a3, double a4)
{
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, 0);
  String.hash(into:)(v11, a1, a2);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a3;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = *(_QWORD *)&a4;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  return Hasher._finalize()();
}

Swift::Int sub_C2594()
{
  uint64_t v0;

  return sub_C2510(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_C25A0(uint64_t a1)
{
  _QWORD *v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;

  v2 = v1[2];
  v3 = v1[3];
  String.hash(into:)(a1, *v1, v1[1]);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v3;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
}

Swift::Int sub_C25EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  _QWORD v9[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  Hasher.init(_seed:)(v9, a1);
  String.hash(into:)(v9, v2, v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v5;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

BOOL sub_C2664(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  BOOL v11;
  _BOOL8 result;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v7 = a1[2];
  v6 = a1[3];
  v8 = *(_QWORD *)(a2 + 8);
  v10 = *(double *)(a2 + 16);
  v9 = *(double *)(a2 + 24);
  v11 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v8;
  result = 0;
  if ((v11 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v8, 0) & 1) != 0)
    && v7 == v10
    && v6 == v9)
  {
    return 1;
  }
  return result;
}

unint64_t sub_C26D4()
{
  unint64_t result;

  result = qword_1FFE20;
  if (!qword_1FFE20)
  {
    result = swift_getWitnessTable(&unk_1711A4, &type metadata for SpeakerContent.ID);
    atomic_store(result, (unint64_t *)&qword_1FFE20);
  }
  return result;
}

unint64_t sub_C271C()
{
  unint64_t result;

  result = qword_1FFE28;
  if (!qword_1FFE28)
  {
    result = swift_getWitnessTable(&unk_1711CC, &type metadata for SpeakerContent.ID);
    atomic_store(result, (unint64_t *)&qword_1FFE28);
  }
  return result;
}

uint64_t sub_C2760(uint64_t a1)
{
  uint64_t result;

  result = sub_8330(&qword_1FFE30, type metadata accessor for SpeakerContent, (uint64_t)&unk_171228);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_C27A4()
{
  sub_C27B8();
}

void sub_C27B8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = v0[2];
  v1 = (void *)v0[3];
  v3 = v0[4];
  v4 = *(void **)(v2 + 136);
  *(_QWORD *)(v2 + 136) = v1;
  *(_QWORD *)(v2 + 144) = v3;
  sub_15450(v1);
  sub_4375C(v4);
}

void sub_C2808()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 128) = v2;
}

void sub_C2824()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 + 104) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 112) = v2;
}

void sub_C2840()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 96) = v2;
}

void sub_C285C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 80) = v2;
}

uint64_t sub_C2870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;

  *(_WORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 72) = 0;
  *(_BYTE *)(v8 + 80) = 1;
  *(_QWORD *)(v8 + 88) = 0;
  *(_BYTE *)(v8 + 96) = 1;
  *(_QWORD *)(v8 + 104) = 0;
  *(_BYTE *)(v8 + 112) = 1;
  *(_QWORD *)(v8 + 120) = 0;
  *(_BYTE *)(v8 + 128) = 1;
  *(_OWORD *)(v8 + 136) = xmmword_16B100;
  ObservationRegistrar.init()(a1);
  *(_QWORD *)(v8 + 40) = a1;
  *(_QWORD *)(v8 + 48) = a2;
  *(double *)(v8 + 56) = a7;
  *(double *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  *(_BYTE *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 160) = a6;
  swift_retain();
  sub_C1A20();
  return v8;
}

void sub_C2930(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_C1C34(v1, a1);
}

double (*sub_C2938())()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(&unk_1CEB68, 24, 7);
  swift_weakInit(v1 + 16, v0);
  return sub_C29E0;
}

void sub_C2990()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 33) = *(_BYTE *)(v0 + 24);
}

double sub_C29A0()
{
  uint64_t v0;

  return sub_C1FDC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_C29BC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_C29E0()
{
  uint64_t v0;

  return sub_C1D08(v0);
}

uint64_t sub_C29E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C2A14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1FFE44);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_27CA8;
  return sub_C1E48(a1, v4, v5, v6);
}

void sub_C2A90()
{
  sub_C2990();
}

void sub_C2AA4()
{
  sub_C2808();
}

void sub_C2AB8()
{
  sub_C2824();
}

void Artwork.Placeholder.image(forFittingSize:imageHandler:)(void (*a1)(void *), double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  void *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  _QWORD v14[14];
  _BYTE v15[24];

  if ((a7 & 0x80) == 0)
    goto LABEL_2;
  if (!(a6 | a5) && a7 == 128)
    goto LABEL_5;
  if (a5 == 1 && !a6 && a7 == 128)
  {
LABEL_2:
    v8 = 0;
LABEL_8:
    a1(v8);

    return;
  }
  if (a5 == 2 && !a6 && a7 == 128 || a5 == 3 && !a6 && a7 == 128 || a5 == 4 && !a6 && a7 == 128)
  {
LABEL_5:
    if (qword_1F96B8 == -1)
      goto LABEL_6;
  }
  else
  {
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, v15, 0, 0);
    sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v14);
    v11 = v14[0];
    if (v14[0])
      goto LABEL_7;
    __break(1u);
  }
  swift_once(&qword_1F96B8, sub_15D030);
LABEL_6:
  swift_beginAccess(&static NowPlayingDataProvider.shared, v15, 0, 0);
  sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v14);
  v11 = v14[0];
  if (v14[0])
  {
LABEL_7:
    v12 = v14[1];
    swift_unknownObjectRetain(v11);
    sub_4AE24((uint64_t)v14);
    ObjectType = swift_getObjectType(v11);
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, double, double))(v12 + 224))(ObjectType, v12, a2, a3);
    swift_unknownObjectRelease(v11);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t Artwork.CachingContext.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Artwork.CachingContext.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t == infix(_:_:)(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a2 & 1) != 0)
  {
    if (a1)
      return a4 & (a3 != 0);
    else
      return a4 & (a3 == 0);
  }
  else if ((a4 & 1) != 0)
  {
    return 0;
  }
  else
  {
    return static CGFloat.==~ infix(_:_:)(*(double *)&a1, *(double *)&a3);
  }
}

BOOL sub_C2CE8(uint64_t a1, uint64_t a2)
{
  return _s12NowPlayingUI7ArtworkV14AccessoryStyleO2eeoiySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(char **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_C2D10(uint64_t a1, uint64_t a2)
{
  return _s12NowPlayingUI7ArtworkV11PlaceholderO2eeoiySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void Artwork.CornerTreatment.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  Swift::UInt v4;

  if ((a3 & 1) != 0)
  {
    if (*(double *)&a2 == 0.0)
      v4 = 1;
    else
      v4 = 2;
    goto LABEL_9;
  }
  Hasher._combine(_:)(0xBuLL);
  if ((~a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(double *)&a2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (*(double *)&a2 < 9.22337204e18)
  {
    v4 = (uint64_t)*(double *)&a2;
LABEL_9:
    Hasher._combine(_:)(v4);
    return;
  }
LABEL_12:
  __break(1u);
}

Swift::Int Artwork.CornerTreatment.hashValue.getter(uint64_t a1, char a2)
{
  char v3;
  _QWORD v5[9];

  v3 = a2 & 1;
  Hasher.init(_seed:)(v5, 0);
  Artwork.CornerTreatment.hash(into:)((uint64_t)v5, a1, v3);
  return Hasher._finalize()();
}

Swift::Int sub_C2DFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  Artwork.CornerTreatment.hash(into:)((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_C2E48(uint64_t a1)
{
  uint64_t v1;

  Artwork.CornerTreatment.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

Swift::Int sub_C2E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  Artwork.CornerTreatment.hash(into:)((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_C2E9C(uint64_t a1, uint64_t a2)
{
  double v2;
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  v2 = *(double *)a2;
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v4 = *(_QWORD *)&v2 == 0;
    if (v2 == 0.0)
      v5 = *(unsigned __int8 *)(a2 + 8);
    else
      v5 = 0;
    if (v4)
      v3 = 0;
    if (*(_QWORD *)a1)
      return v3;
    else
      return v5;
  }
  else if ((v3 & 1) != 0)
  {
    return 0;
  }
  else
  {
    return static CGFloat.==~ infix(_:_:)(*(double *)a1, *(double *)a2);
  }
}

uint64_t static Artwork.BorderTreatment.== infix(_:_:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  sub_27330();
  if ((static NSObject.== infix(_:_:)(a1, a2) & 1) != 0)
    return static CGFloat.==~ infix(_:_:)(a3, a4);
  else
    return 0;
}

uint64_t sub_C2F50(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_27330();
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)&v2, *(_QWORD *)&v4) & 1) != 0)
    return static CGFloat.==~ infix(_:_:)(v3, v5);
  else
    return 0;
}

uint64_t _s12NowPlayingUI7ArtworkV11PlaceholderO2eeoiySbAE_AEtFZ_0(unint64_t a1, uint64_t a2, unsigned __int8 a3, unint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  char v12;
  char v14;
  char v16;

  if (!(a3 >> 6))
  {
    if (a6 < 0x40u)
    {
      sub_27330();
      sub_C35BC((id)a1, a2, a3);
      sub_C35BC((id)a4, a5, a6);
      v14 = static NSObject.== infix(_:_:)(a1, a4);
      sub_791E8((void *)a4, a5, a6);
      sub_791E8((void *)a1, a2, a3);
      v12 = v14 & a6;
      v16 = (a6 & 1) == 0 && a2 == a5;
      if ((v14 & 1) == 0)
        v16 = v14 & a6;
      if ((a3 & 1) == 0)
        v12 = v16;
      return v12 & 1;
    }
    goto LABEL_51;
  }
  if (a3 >> 6 == 1)
  {
    if ((a6 & 0xC0) == 0x40)
    {
      v12 = (a2 | a5) == 0;
      if (!a2 || !a5)
        return v12 & 1;
      if (a1 != a4 || a2 != a5)
        return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
      goto LABEL_50;
    }
    goto LABEL_51;
  }
  if (a2 | a1 || a3 != 128)
  {
    if (a1 == 1 && !a2 && a3 == 128)
    {
      if ((a6 & 0xC0) != 0x80 || a4 != 1)
        goto LABEL_51;
    }
    else if (a1 == 2 && !a2 && a3 == 128)
    {
      if ((a6 & 0xC0) != 0x80 || a4 != 2)
        goto LABEL_51;
    }
    else if (a1 == 3 && !a2 && a3 == 128)
    {
      if ((a6 & 0xC0) != 0x80 || a4 != 3)
        goto LABEL_51;
    }
    else if (a1 == 4 && !a2 && a3 == 128 || (a6 & 0xC0) != 0x80 || a4 != 5)
    {
      goto LABEL_51;
    }
    if (a5)
    {
LABEL_51:
      v12 = 0;
      return v12 & 1;
    }
  }
  else if ((a6 & 0xC0) != 0x80 || a5 | a4)
  {
    goto LABEL_51;
  }
  if (a6 != 128)
    goto LABEL_51;
LABEL_50:
  v12 = 1;
  return v12 & 1;
}

BOOL _s12NowPlayingUI7ArtworkV14AccessoryStyleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char *a5, uint64_t a6, uint64_t a7, char a8)
{
  unsigned int v13;
  _BOOL4 v14;

  switch(a1)
  {
    case 0:
      return !a5;
    case 1:
      return a5 == (_BYTE *)&dword_0 + 1;
    case 2:
      return a5 == (_BYTE *)&dword_0 + 2;
  }
  if ((unint64_t)a5 < 3 || (a4 & 1) != 0 || (a8 & 1) != 0)
    return 0;
  v13 = objc_msgSend(a5, "isArtworkVisuallyIdenticalToCatalog:", a1);
  v14 = *(double *)&a3 == *(double *)&a7;
  if (*(double *)&a2 != *(double *)&a6)
    v14 = 0;
  return v13 && v14;
}

unint64_t sub_C32CC()
{
  unint64_t result;

  result = qword_1FFE50;
  if (!qword_1FFE50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Artwork.CornerTreatment, &type metadata for Artwork.CornerTreatment);
    atomic_store(result, (unint64_t *)&qword_1FFE50);
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork()
{
  return &type metadata for Artwork;
}

uint64_t type metadata accessor for Artwork.CachingContext()
{
  return objc_opt_self(_TtCV12NowPlayingUI7Artwork14CachingContext);
}

void destroy for Artwork.AccessoryStyle(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

uint64_t initializeWithCopy for Artwork.AccessoryStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v4 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for Artwork.AccessoryStyle(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v8 = *(__int128 *)((char *)a2 + 8);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_OWORD *)(a1 + 8) = v8;
      v9 = v5;
      return a1;
    }
LABEL_7:
    v10 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  v7 = *(__int128 *)((char *)a2 + 8);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  return a1;
}

uint64_t assignWithTake for Artwork.AccessoryStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork.AccessoryStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 25))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Artwork.AccessoryStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_C3584(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Artwork.AccessoryStyle()
{
  return &type metadata for Artwork.AccessoryStyle;
}

id sub_C35BC(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1)
    return (id)swift_bridgeObjectRetain(a2);
  if (!(a3 >> 6))
    return result;
  return result;
}

void destroy for Artwork.Placeholder(uint64_t a1)
{
  sub_791E8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12NowPlayingUI7ArtworkV11PlaceholderOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_C35BC(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Artwork.Placeholder(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_C35BC(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_791E8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Artwork.Placeholder(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_791E8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork.Placeholder(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Artwork.Placeholder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_C3774(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 16);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_C3794(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_C37A4(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork.Placeholder()
{
  return &type metadata for Artwork.Placeholder;
}

ValueMetadata *type metadata accessor for Artwork.CornerTreatment()
{
  return &type metadata for Artwork.CornerTreatment;
}

ValueMetadata *type metadata accessor for Artwork.BorderTreatment()
{
  return &type metadata for Artwork.BorderTreatment;
}

uint64_t sub_C3800()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  _BYTE v28[24];

  v1 = v0;
  v2 = type metadata accessor for NowPlayingHostedContentID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDFF0);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  v10 = __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = __chkstk_darwin(v10);
  v15 = &v28[-v14 - 8];
  __chkstk_darwin(v13);
  v17 = &v28[-v16 - 8];
  v18 = v0[3];
  if (v18 == 1)
  {
    v27 = 1;
    __swift_project_boxed_opaque_existential_1(v0 + 9, v0[12]);
    dispatch thunk of NowPlayingViewModel.selectedContent.getter();
    if (qword_1F9480 != -1)
      swift_once(&qword_1F9480, sub_35F0C);
    v20 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingHostedContentID.transcript);
    swift_beginAccess(v20, v28, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v15, v20, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_C5810((uint64_t)v17, (uint64_t)v8);
    sub_C5810((uint64_t)v15, v21);
    v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v22((uint64_t)v8, 1, v2) == 1)
    {
      sub_9944((uint64_t)v15, (uint64_t *)&unk_1FB9D0);
      sub_9944((uint64_t)v17, (uint64_t *)&unk_1FB9D0);
      if (v22(v21, 1, v2) == 1)
      {
        sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
        goto LABEL_14;
      }
    }
    else
    {
      sub_C5810((uint64_t)v8, (uint64_t)v12);
      if (v22(v21, 1, v2) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v21, v2);
        v23 = sub_C5858();
        v24 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v5, v2, v23);
        v25 = *(void (**)(char *, uint64_t))(v3 + 8);
        v25(v5, v2);
        sub_9944((uint64_t)v15, (uint64_t *)&unk_1FB9D0);
        sub_9944((uint64_t)v17, (uint64_t *)&unk_1FB9D0);
        v25(v12, v2);
        sub_9944((uint64_t)v8, (uint64_t *)&unk_1FB9D0);
        if ((v24 & 1) != 0)
LABEL_14:
          __asm { BR              X11 }
LABEL_15:
        v19 = 65;
        v18 = v27;
        goto LABEL_16;
      }
      sub_9944((uint64_t)v15, (uint64_t *)&unk_1FB9D0);
      sub_9944((uint64_t)v17, (uint64_t *)&unk_1FB9D0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    }
    sub_9944((uint64_t)v8, (uint64_t *)&unk_1FDFF0);
    goto LABEL_15;
  }
  if (v18 == 2)
    v19 = 0;
  else
    v19 = v0[3];
LABEL_16:
  sub_9027C(v18);
  return v19;
}

Swift::Int sub_C3D30()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 0x6C616D726F6ELL;
  else
    v2 = 0x64656C616373;
  String.hash(into:)(v4, v2, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

uint64_t sub_C3D9C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x6C616D726F6ELL;
  else
    v2 = 0x64656C616373;
  String.hash(into:)(a1, v2, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

Swift::Int sub_C3DDC(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 0x6C616D726F6ELL;
  else
    v3 = 0x64656C616373;
  String.hash(into:)(v5, v3, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

uint64_t sub_C3E44@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1C6568, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_C3EA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x64656C616373;
  if (*v1)
    v2 = 0x6C616D726F6ELL;
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_C3ED0(char *a1, char *a2)
{
  return sub_15D5B0(*a1, *a2);
}

uint64_t sub_C3EDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_C58A0(*a1, *a2);
}

uint64_t sub_C3EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t result;
  void *v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char **)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_7748();
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v10 = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v12 = *(void **)(v1 + 152);
    if (v12)
      objc_msgSend(v12, "invalidate");
    v13 = sub_C3800();
    v15 = v14;
    static Logger.transcripts.getter(v13);
    sub_A694(v13, v15);
    v16 = sub_A694(v13, v15);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v37 = v3;
      v20 = v19;
      v36 = swift_slowAlloc(64, -1);
      v39 = v36;
      *(_DWORD *)v20 = 136315394;
      v38 = sub_C6F4(0xD000000000000019, 0x80000000001899D0, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v20 + 4, v20 + 12);
      *(_WORD *)(v20 + 12) = 2080;
      sub_A694(v13, v15);
      sub_C4768(v13, v15);
      v34 = v5;
      v35 = v2;
      v22 = v21;
      v24 = v23;
      sub_A6A8(v13, v15);
      v38 = sub_C6F4(v22, v24, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v20 + 14, v20 + 22);
      swift_bridgeObjectRelease(v24);
      sub_A6A8(v13, v15);
      sub_A6A8(v13, v15);
      _os_log_impl(&dword_0, v17, v18, "%s State changed to %s", (uint8_t *)v20, 0x16u);
      v25 = v36;
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v35);
    }
    else
    {
      sub_A6A8(v13, v15);
      sub_A6A8(v13, v15);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    if (v15 < 2u)
    {
      *(_BYTE *)(v1 + 145) = v13;
      if (v13 != 128)
        sub_C44B8();
    }
    else if (v15 - 3 >= 2)
    {
      *(_BYTE *)(v1 + 145) = v13;
    }
    else
    {
      *(_BYTE *)(v1 + 145) = 65;
    }
    sub_A694(v13, v15);
    sub_A230(v13, v15);
    v26 = *(unsigned __int8 *)(v1 + 144);
    if (v26 == 255
      || (v27 = *(_QWORD *)(v1 + 136),
          sub_A694(v13, v15),
          sub_C57B8(v27, v26),
          sub_C54D8(v27, v26),
          v29 = v28,
          sub_A6A8(v13, v15),
          sub_C52F0(v27, v26),
          (v29 & 1) == 0))
    {
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 120);
      if (Strong)
      {
        v31 = Strong;
        sub_8D264(v13, v15, *(_BYTE *)(v1 + 16));
        swift_unknownObjectRelease(v31);
      }
      v32 = *(_QWORD *)(v1 + 136);
      *(_QWORD *)(v1 + 136) = v13;
      v33 = *(_BYTE *)(v1 + 144);
      *(_BYTE *)(v1 + 144) = v15;
      return sub_C52F0(v32, v33);
    }
    else
    {
      return sub_A6A8(v13, v15);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C4300@<X0>(uint64_t result@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  char v3;

  v3 = *a2;
  *a3 = *(_BYTE *)(result + 1);
  a3[1] = v3;
  return result;
}

uint64_t sub_C4314(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  if ((a1 & 1) == 0 || (a2 & 1) != 0)
  {
    swift_beginAccess(a3 + 16, v6, 0, 0);
    result = swift_weakLoadStrong(v3);
    v5 = result;
    if (!result)
      return result;
  }
  else
  {
    swift_beginAccess(a3 + 16, v6, 0, 0);
    result = swift_weakLoadStrong(v3);
    if (!result)
      return result;
    v5 = result;
    *(_BYTE *)(result + 16) = 15;
  }
  sub_C3EE8();
  return swift_release(v5);
}

uint64_t sub_C43A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v15[24];

  v4 = type metadata accessor for PlaybackController.TransportCommand(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 != enum case for PlaybackController.TransportCommand.seekTo(_:)
    && v8 != enum case for PlaybackController.TransportCommand.jumpForward(_:)
    && v8 != enum case for PlaybackController.TransportCommand.jumpBackward(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11 = a2 + 16;
  swift_beginAccess(v11, v15, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v12 = result;
    *(_BYTE *)(result + 16) = 6;
    sub_C3EE8();
    return swift_release(v12);
  }
  return result;
}

void sub_C44B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(uint64_t);
  void *v10;
  _QWORD v11[3];
  void *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;

  v1 = v0;
  v2 = *(void **)(v0 + 152);
  if (v2)
    objc_msgSend(v2, "invalidate");
  v3 = swift_allocObject(&unk_1CF1B8, 24, 7);
  swift_weakInit(v3 + 16, v1);
  v13 = sub_C57F0;
  v14 = v3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_C4674;
  v12 = &block_descriptor_18;
  v4 = _Block_copy(v11);
  v5 = (void *)objc_opt_self(NSTimer);
  swift_retain(v3);
  v6 = objc_msgSend(v5, "timerWithTimeInterval:repeats:block:", 0, v4, 5.0);
  _Block_release(v4);
  v7 = v14;
  swift_release(v3);
  swift_release(v7);
  sub_DF78(v1 + 168, (uint64_t)v11);
  v8 = v12;
  v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, (uint64_t)v12);
  (*((void (**)(id, const NSRunLoopMode, void *, uint64_t (*)(uint64_t)))v9 + 1))(v6, NSDefaultRunLoopMode, v8, v9);
  __swift_destroy_boxed_opaque_existential_0(v11);
  v10 = *(void **)(v1 + 152);
  *(_QWORD *)(v1 + 152) = v6;

}

uint64_t sub_C4618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    *(_BYTE *)(result + 16) = 1;
    sub_C3EE8();
    return swift_release(v4);
  }
  return result;
}

void sub_C4674(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_C46C4()
{
  uint64_t v0;

  sub_90290(*(_QWORD *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 112));
  sub_1EC0C(v0 + 120);
  sub_C52F0(*(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 168));
  return v0;
}

uint64_t sub_C4724()
{
  uint64_t v0;

  sub_C46C4();
  return swift_deallocClassInstance(v0, 208, 7);
}

void sub_C4744(uint64_t a1)
{
  sub_C54D8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_C475C(uint64_t *a1, uint64_t *a2)
{
  return sub_C5304(*a1, *a2);
}

void sub_C4768(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_C47B4()
{
  unsigned __int8 v0;
  Swift::String v1;
  void *object;

  v1._countAndFlagsBits = sub_C48C8(v0);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  return 0x676E696B63617254;
}

void sub_C48BC()
{
  uint64_t v0;

  sub_C4768(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_C48C8(unsigned __int8 a1)
{
  uint64_t v1;
  unint64_t v2;
  char v3;
  Swift::String v4;
  char v6;
  _QWORD v7[2];

  if (!(a1 >> 6))
  {
    v3 = a1 & 1;
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    v4._countAndFlagsBits = 0x657263736C6C7546;
    v4._object = (void *)0xED0000202F206E65;
    String.append(_:)(v4);
    v6 = v3;
    _print_unlocked<A, B>(_:_:)(&v6, v7, &type metadata for TranscriptStateMachine.ZoomMode, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    return v7[0];
  }
  if (a1 >> 6 == 1)
  {
    strcpy((char *)v7, "Contained / ");
    BYTE5(v7[1]) = 0;
    HIWORD(v7[1]) = -5120;
    if ((a1 & 1) != 0)
      v1 = 0x6C616D726F6ELL;
    else
      v1 = 0x64656C616373;
    v2 = 0xE600000000000000;
    String.append(_:)(*(Swift::String *)&v1);
    swift_bridgeObjectRelease(0xE600000000000000);
    return v7[0];
  }
  if (a1 == 128)
    return 0x657370616C6C6F43;
  else
    return 0x686372616553;
}

uint64_t sub_C49EC()
{
  unsigned __int8 *v0;

  return sub_C48C8(*v0);
}

id sub_C49F4(uint64_t a1, uint64_t a2)
{
  id *v2;

  return objc_msgSend(*v2, "addTimer:forMode:", a1, a2);
}

uint64_t type metadata accessor for TranscriptStateMachine()
{
  return objc_opt_self(_TtC12NowPlayingUI22TranscriptStateMachine);
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.ZoomMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C4A78 + 4 * byte_17155B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C4AAC + 4 * byte_171556[v4]))();
}

uint64_t sub_C4AAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC4ABCLL);
  return result;
}

uint64_t sub_C4AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC4AD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C4AD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4ADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.ZoomMode()
{
  return &type metadata for TranscriptStateMachine.ZoomMode;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.ViewMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 130 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 130) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 130;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 130;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 130;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.ViewMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_C4BE4 + 4 * byte_171565[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_C4C18 + 4 * byte_171560[v4]))();
}

uint64_t sub_C4C18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4C20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC4C28);
  return result;
}

uint64_t sub_C4C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC4C48);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_C4C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C4C60(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return v1 & 1 | 2u;
}

_BYTE *sub_C4C7C(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_C4C8C(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = a2 & 1 | 0x80;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.ViewMode()
{
  return &type metadata for TranscriptStateMachine.ViewMode;
}

unint64_t destroy for TranscriptStateMachine.EngineState(unint64_t *a1)
{
  unint64_t result;
  int v2;

  result = *a1;
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_errorRelease();
  return result;
}

_QWORD *_s12NowPlayingUI22TranscriptStateMachineC11EngineStateOwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  LODWORD(v4) = -1;
  if (*a2 < 0xFFFFFFFFuLL)
    v4 = *a2;
  if ((v4 + 1) <= 1)
    swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

unint64_t *assignWithCopy for TranscriptStateMachine.EngineState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unsigned int v8;
  unint64_t v9;

  v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = v3;
  v6 = v5 + 1;
  v7 = *a2;
  if (*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      swift_errorRetain(*a2);
    *a1 = v7;
  }
  else if (v8 > 1)
  {
    ((void (*)(void))swift_errorRelease)();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain(*a2);
    v9 = *a1;
    *a1 = v7;
    swift_errorRelease(v9);
  }
  return a1;
}

unint64_t *assignWithTake for TranscriptStateMachine.EngineState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = v3;
  v6 = v5 + 1;
  v7 = *a2;
  if (*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {
    swift_errorRelease(v3);
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  swift_errorRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.EngineState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.EngineState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_C4EF8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_C4F18(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.EngineState()
{
  return &type metadata for TranscriptStateMachine.EngineState;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.UserEvent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.UserEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_C5034 + 4 * byte_17156F[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_C5068 + 4 * byte_17156A[v4]))();
}

uint64_t sub_C5068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C5070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC5078);
  return result;
}

uint64_t sub_C5084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC508CLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_C5090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C5098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.UserEvent()
{
  return &type metadata for TranscriptStateMachine.UserEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptStateMachine.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_A694(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for TranscriptStateMachine.State(uint64_t a1)
{
  return sub_A6A8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for TranscriptStateMachine.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_A694(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_A6A8(v5, v6);
  return a1;
}

uint64_t assignWithTake for TranscriptStateMachine.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_A6A8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_C5220(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_C5238(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.State()
{
  return &type metadata for TranscriptStateMachine.State;
}

unint64_t sub_C5264()
{
  unint64_t result;

  result = qword_1FFFE0;
  if (!qword_1FFFE0)
  {
    result = swift_getWitnessTable(&unk_1716EC, &type metadata for TranscriptStateMachine.UserEvent);
    atomic_store(result, (unint64_t *)&qword_1FFFE0);
  }
  return result;
}

unint64_t sub_C52AC()
{
  unint64_t result;

  result = qword_1FFFE8;
  if (!qword_1FFFE8)
  {
    result = swift_getWitnessTable(&unk_17177C, &type metadata for TranscriptStateMachine.ZoomMode);
    atomic_store(result, (unint64_t *)&qword_1FFFE8);
  }
  return result;
}

uint64_t sub_C52F0(uint64_t a1, char a2)
{
  if (a2 != -1)
    return sub_A6A8(a1, a2);
  return a1;
}

uint64_t sub_C5304(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  _BYTE v18[8];
  _QWORD v19[3];
  _BYTE v20[8];

  if (a1 == 1)
  {
    if (a2 != 1)
      goto LABEL_24;
LABEL_6:
    v4 = 1;
    return v4 & 1;
  }
  if (a1 == 2)
  {
    if (a2 == 2)
      goto LABEL_6;
LABEL_24:
    v4 = 0;
    return v4 & 1;
  }
  if ((unint64_t)(a2 - 1) < 2)
    goto LABEL_24;
  if (a1)
  {
    swift_getErrorValue(a1, v18, v17);
    v5 = v17[1];
    v6 = v17[2];
    sub_9027C(a2);
    sub_9027C(a1);
    v7 = Error.localizedDescription.getter(v5, v6);
    v9 = v8;
    if (!a2)
    {
      if (v8)
        goto LABEL_18;
      v11 = 0;
      goto LABEL_22;
    }
    v10 = v7;
  }
  else
  {
    swift_errorRetain(a2);
    v9 = 0;
    v10 = 0;
    v11 = 0;
    if (!a2)
      goto LABEL_22;
  }
  swift_getErrorValue(a2, v20, v19);
  v12 = v19[1];
  v13 = v19[2];
  swift_errorRetain(a2);
  v14 = Error.localizedDescription.getter(v12, v13);
  v11 = v15;
  sub_90290(a2);
  if (!v9)
  {
LABEL_22:
    sub_90290(a1);
    sub_90290(a2);
    if (v11)
    {
      swift_bridgeObjectRelease(v11);
      goto LABEL_24;
    }
    goto LABEL_6;
  }
  if (!v11)
  {
LABEL_18:
    swift_bridgeObjectRetain(v9);
    sub_90290(a1);
    sub_90290(a2);
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_24;
  }
  if (v10 == v14 && v9 == v11)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v9, v14, v11, 0);
  swift_bridgeObjectRetain(v9);
  sub_90290(a1);
  sub_90290(a2);
  swift_bridgeObjectRelease_n(v9, 2);
  swift_bridgeObjectRelease(v11);
  return v4 & 1;
}

void sub_C54D8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

BOOL sub_C5518(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (a4)
    return 0;
  v6 = v5 >> 6;
  if (!v6)
  {
    if (v4 < 0x40u)
      goto LABEL_10;
    return 0;
  }
  if (v6 != 1)
  {
    if (v5 == 128)
      return v4 == 128;
    else
      return v4 == 129;
  }
  if ((v4 & 0xC0) != 0x40)
    return 0;
LABEL_10:
  if ((v5 & 1) != 0)
    v8 = 0x6C616D726F6ELL;
  else
    v8 = 0x64656C616373;
  if ((v4 & 1) != 0)
    v9 = 0x6C616D726F6ELL;
  else
    v9 = 0x64656C616373;
  if (v8 != v9)
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, 0xE600000000000000, v9, 0xE600000000000000, 0);
    swift_bridgeObjectRelease_n(0xE600000000000000, 2);
    return v10 & 1;
  }
  swift_bridgeObjectRelease_n(0xE600000000000000, 2);
  return 1;
}

uint64_t sub_C57B8(uint64_t a1, char a2)
{
  if (a2 != -1)
    return sub_A694(a1, a2);
  return a1;
}

uint64_t sub_C57CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C57F0(uint64_t a1)
{
  uint64_t v1;

  return sub_C4618(a1, v1);
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C5810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_C5858()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FE008;
  if (!qword_1FE008)
  {
    v1 = type metadata accessor for NowPlayingHostedContentID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingHostedContentID, v1);
    atomic_store(result, (unint64_t *)&qword_1FE008);
  }
  return result;
}

uint64_t sub_C58A0(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  if (!(a1 >> 6))
  {
    if (a2 < 0x40u)
      goto LABEL_6;
    return 0;
  }
  if (a1 >> 6 != 1)
  {
    if (a1 == 128)
    {
      if (a2 == 128)
        return 1;
    }
    else if (a2 == 129)
    {
      return 1;
    }
    return 0;
  }
  if ((a2 & 0xC0) != 0x40)
    return 0;
LABEL_6:
  if ((a1 & 1) != 0)
    v2 = 0x6C616D726F6ELL;
  else
    v2 = 0x64656C616373;
  if ((a2 & 1) != 0)
    v3 = 0x6C616D726F6ELL;
  else
    v3 = 0x64656C616373;
  if (v2 == v3)
  {
    swift_bridgeObjectRelease_n(0xE600000000000000, 2);
    return 1;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE600000000000000, v3, 0xE600000000000000, 0);
    swift_bridgeObjectRelease_n(0xE600000000000000, 2);
    return v5 & 1;
  }
}

void _s7ContextVwxx(uint64_t a1)
{
  sub_11BEC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));

}

uint64_t _s7ContextVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_11B84(*(void **)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(void **)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = v8;
  return a1;
}

uint64_t _s7ContextVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  id v14;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_11B84(*(void **)a2, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_11BEC(v8, v9, v10, v11);
  v12 = *(void **)(a2 + 32);
  v13 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  v14 = v12;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t _s7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_11BEC(v6, v7, v8, v9);
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t _s7ContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s7ContextVMa()
{
  return &_s7ContextVN;
}

uint64_t sub_C5C6C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_200000);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v30)
      goto LABEL_37;
    v15 = *(_QWORD *)(v31 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v30)
        goto LABEL_37;
      v15 = *(_QWORD *)(v31 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v30)
          goto LABEL_37;
        v15 = *(_QWORD *)(v31 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v30)
            goto LABEL_37;
          v15 = *(_QWORD *)(v31 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v13);
    *(_QWORD *)&v41[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    v18 = *(void **)&v41[0];
    type metadata accessor for Key(0);
    v21 = v20;
    v22 = v18;
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v33, v41, v21, &type metadata for AnyHashable, 7);
    v32 = v19;
    swift_dynamicCast(v36, &v32, (char *)&type metadata for Swift.AnyObject + 8, (char *)&type metadata for Any + 8, 7);
    v37 = v33;
    v38 = v34;
    v39 = v35;
    sub_ECEC(v36, v40);
    v33 = v37;
    v34 = v38;
    v35 = v39;
    sub_ECEC(v40, v41);
    sub_ECEC(v41, &v37);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)&v7[8 * v25];
      }
      while (v29 == -1);
      v10 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v33;
    *(_OWORD *)(v11 + 16) = v34;
    *(_QWORD *)(v11 + 32) = v35;
    result = (uint64_t)sub_ECEC(&v37, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v30)
  {
LABEL_37:
    swift_release(v3);
    sub_ECB8(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v31 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v30)
      goto LABEL_37;
    v15 = *(_QWORD *)(v31 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_C6030(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _OWORD v34[4];
  _OWORD v35[2];
  _OWORD v36[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_200008);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v32 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v32 << 6);
      goto LABEL_28;
    }
    v11 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v30)
      goto LABEL_37;
    v12 = *(_QWORD *)(v31 + 8 * v11);
    v13 = v32 + 1;
    if (!v12)
    {
      v13 = v32 + 2;
      if (v32 + 2 >= v30)
        goto LABEL_37;
      v12 = *(_QWORD *)(v31 + 8 * v13);
      if (!v12)
      {
        v13 = v32 + 3;
        if (v32 + 3 >= v30)
          goto LABEL_37;
        v12 = *(_QWORD *)(v31 + 8 * v13);
        if (!v12)
        {
          v13 = v32 + 4;
          if (v32 + 4 >= v30)
            goto LABEL_37;
          v12 = *(_QWORD *)(v31 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v32 = v13;
LABEL_28:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v36[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    *(_QWORD *)&v35[0] = v15;
    v16 = *(id *)&v36[0];
    swift_unknownObjectRetain(v15);
    swift_dynamicCast((char *)v36 + 8, v35, (char *)&type metadata for Swift.AnyObject + 8, (char *)&type metadata for Any + 8, 7);
    v17 = *(_QWORD *)&v36[0];
    sub_ECEC((_OWORD *)((char *)v36 + 8), v34);
    sub_ECEC(v34, v36);
    sub_ECEC(v36, v35);
    v18 = v3[5];
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;
    Hasher.init(_seed:)(&v33, v18);
    String.hash(into:)(&v33, v19, v21);
    v22 = Hasher._finalize()();
    swift_bridgeObjectRelease(v21);
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)&v7[8 * v25];
      }
      while (v29 == -1);
      v8 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v17;
    sub_ECEC(v35, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v32 + 5;
  if (v32 + 5 >= v30)
  {
LABEL_37:
    swift_release(v3);
    sub_ECB8(a1);
    return;
  }
  v12 = *(_QWORD *)(v31 + 8 * v14);
  if (v12)
  {
    v13 = v32 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v30)
      goto LABEL_37;
    v12 = *(_QWORD *)(v31 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_C63D4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _OWORD v35[4];
  _OWORD v36[2];
  _OWORD v37[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_200010);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v32 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v33 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v33 << 6);
      goto LABEL_28;
    }
    v11 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v31)
      goto LABEL_37;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    v13 = v33 + 1;
    if (!v12)
    {
      v13 = v33 + 2;
      if (v33 + 2 >= v31)
        goto LABEL_37;
      v12 = *(_QWORD *)(v32 + 8 * v13);
      if (!v12)
      {
        v13 = v33 + 3;
        if (v33 + 3 >= v31)
          goto LABEL_37;
        v12 = *(_QWORD *)(v32 + 8 * v13);
        if (!v12)
        {
          v13 = v33 + 4;
          if (v33 + 4 >= v31)
            goto LABEL_37;
          v12 = *(_QWORD *)(v32 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v33 = v13;
LABEL_28:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v37[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    *(_QWORD *)&v36[0] = v15;
    v16 = *(id *)&v37[0];
    swift_bridgeObjectRetain(v15);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_200018);
    swift_dynamicCast((char *)v37 + 8, v36, v17, (char *)&type metadata for Any + 8, 7);
    v18 = *(_QWORD *)&v37[0];
    sub_ECEC((_OWORD *)((char *)v37 + 8), v35);
    sub_ECEC(v35, v37);
    sub_ECEC(v37, v36);
    v19 = v3[5];
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
    Hasher.init(_seed:)(&v34, v19);
    String.hash(into:)(&v34, v20, v22);
    v23 = Hasher._finalize()();
    swift_bridgeObjectRelease(v22);
    v24 = -1 << *((_BYTE *)v3 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~v7[v25 >> 6]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v25) & ~v7[v25 >> 6])) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = v7[v26];
      }
      while (v30 == -1);
      v8 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v18;
    sub_ECEC(v36, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v33 + 5;
  if (v33 + 5 >= v31)
  {
LABEL_37:
    swift_release(v3);
    sub_ECB8(a1);
    return;
  }
  v12 = *(_QWORD *)(v32 + 8 * v14);
  if (v12)
  {
    v13 = v33 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      goto LABEL_37;
    v12 = *(_QWORD *)(v32 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_C6778(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  Class isa;
  id v10;
  Swift::UInt64 v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;
  Swift::UInt64 v14;
  Swift::UInt64 v15;
  Swift::UInt64 v16;

  v2 = (Swift::UInt *)v1;
  v4 = *(void **)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_BYTE *)(v1 + 24);
  if ((v7 & 1) != 0)
  {
    v8 = v4;
    NSObject.hash(into:)(a1);
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 8));
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(a1, v4, v5);
    type metadata accessor for Key(0);
    sub_75328();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v10 = -[objc_class hash](isa, "hash");

    Hasher._combine(_:)((Swift::UInt)v10);
  }
  sub_11BEC(v4, v5, v6, v7);
  Hasher._combine(_:)(v2[5]);
  v11 = v2[7];
  if ((v2[6] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v12 = v2[6];
  else
    v12 = 0;
  Hasher._combine(_:)(v12);
  if ((v11 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v13 = v11;
  else
    v13 = 0;
  Hasher._combine(_:)(v13);
  if ((v2[12] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v14 = v2[12];
  else
    v14 = 0;
  Hasher._combine(_:)(v14);
  if ((v2[13] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v15 = v2[13];
  else
    v15 = 0;
  Hasher._combine(_:)(v15);
  Hasher._combine(_:)(v2[14]);
  if ((v2[15] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v16 = v2[15];
  else
    v16 = 0;
  Hasher._combine(_:)(v16);
}

Swift::Int sub_C68B8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_C6778((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_C68F8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_C6778((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_C6930(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[8];
  _OWORD v14[8];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[3];
  v14[2] = a2[2];
  v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_C6A30((uint64_t)v13, (uint64_t)v14) & 1;
}

unint64_t sub_C69A4()
{
  unint64_t result;

  result = qword_1FFFF8;
  if (!qword_1FFFF8)
  {
    result = swift_getWitnessTable(&unk_1718C4, &_s7ContextVN);
    atomic_store(result, (unint64_t *)&qword_1FFFF8);
  }
  return result;
}

void sub_C69E8(double a1, double a2)
{
  Swift::UInt64 v3;
  Swift::UInt64 v4;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *(_QWORD *)&a1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)&a2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
}

uint64_t sub_C6A30(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  NSDictionary v11;
  NSDictionary v12;
  Class isa;
  uint64_t v14;
  Class v15;
  _BYTE v17[32];
  _BYTE v18[32];
  _QWORD v19[2];
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_C6C50(a1, (uint64_t)v18);
  sub_C6C50(a2, (uint64_t)v17);
  sub_C6C50((uint64_t)v18, (uint64_t)v19);
  if ((v20 & 1) != 0)
  {
    v4 = (void *)v19[0];
    v5 = sub_C6C50((uint64_t)v17, (uint64_t)&v21);
    if ((v24 & 1) == 0)
      goto LABEL_20;
    if (v4 != v21)
    {
      v5 = (uint64_t)objc_msgSend(v4, "isEqualToAttributedString:");
      if ((v5 & 1) == 0)
        goto LABEL_20;
    }
LABEL_14:
    if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
      && (static CGSize.==~ infix(_:_:)(v5, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a2 + 48), *(double *)(a2 + 56)) & 1) != 0&& (static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 96), *(double *)(a2 + 96)) & 1) != 0&& (static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 104), *(double *)(a2 + 104)) & 1) != 0&& *(_QWORD *)(a1 + 112) == *(_QWORD *)(a2 + 112))
    {
      v10 = static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 120), *(double *)(a2 + 120));
      return v10 & 1;
    }
LABEL_20:
    v10 = 0;
    return v10 & 1;
  }
  v6 = (void *)v19[0];
  v7 = v19[1];
  sub_C6C50((uint64_t)v17, (uint64_t)&v21);
  if ((v24 & 1) != 0)
    goto LABEL_20;
  v8 = v23;
  if (v6 == v21 && v7 == v22
    || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v21, v22, 0), v10 = 0, (v9 & 1) != 0))
  {
    type metadata accessor for Key(0);
    sub_75328();
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v12.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    if (v11.super.isa == v12.super.isa)
    {

    }
    else
    {
      isa = v12.super.isa;
      v14 = sub_C5C6C(v8);
      v15 = Dictionary._bridgeToObjectiveC()().super.isa;
      LOBYTE(v14) = -[objc_class isEqualToDictionary:](v11.super.isa, "isEqualToDictionary:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      if ((v14 & 1) == 0)
        goto LABEL_20;
    }
    goto LABEL_14;
  }
  return v10 & 1;
}

uint64_t sub_C6C50(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8(a2, a1);
  return a2;
}

id sub_C6CB0()
{
  id v0;
  id v1;
  id v2;
  uint64_t *v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:leadingAdjustment:", 2, 1);
  v2 = objc_msgSend(v1, "preferredFont");

  objc_msgSend(v0, "setFont:", v2);
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    if (qword_1F95C8 != -1)
      swift_once(&qword_1F95C8, sub_FE0E0);
    v3 = &qword_210350;
  }
  else
  {
    if (qword_1F95C0 != -1)
      swift_once(&qword_1F95C0, sub_FE034);
    v3 = &qword_210348;
  }
  objc_msgSend(v0, "setTextColor:", *v3);
  return v0;
}

void sub_C6DD0()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  double v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  Class isa;
  objc_super v118;

  v1 = v0;
  v118.receiver = v0;
  v118.super_class = (Class)type metadata accessor for LyricsViewController();
  objc_msgSendSuper2(&v118, "viewDidLoad");
  v2 = objc_msgSend(v0, "traitCollection");
  if (objc_msgSend(v2, "userInterfaceStyle") == (char *)&dword_0 + 2)
    v3 = 3;
  else
    v3 = 0;
  v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", v3);

  v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v4);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v1, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = v6;
  objc_msgSend(v6, "addSubview:", v5);

  v8 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_backgroundView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_backgroundView] = v5;
  v9 = v5;

  v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "_barHairlineShadowColor");
  objc_msgSend(v10, "setBackgroundColor:", v11);

  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = v12;
  objc_msgSend(v12, "addSubview:", v10);

  v14 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_titleLabel];
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = objc_msgSend(v1, "view");
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = v15;
  objc_msgSend(v15, "addSubview:", v14);

  v17 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_subtitleLabel];
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v19 = v18;
  objc_msgSend(v18, "addSubview:", v17);

  v20 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v20, "setLargeTitleDisplayMode:", 2);

  v21 = objc_msgSend(v1, "navigationItem");
  sub_F174(0, &qword_2000D0, UIBarButtonItem_ptr);
  v22 = swift_allocObject(&unk_1CF350, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v1);
  v23 = UIBarButtonItem.init(barButtonSystemItem:handler:)(0, (uint64_t)sub_C7EC0, v22);
  objc_msgSend(v21, "setRightBarButtonItem:", v23);

  v24 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_lyricsTextViewController];
  objc_msgSend(v1, "addChildViewController:", v24);
  v25 = objc_msgSend(v24, "view");
  if (!v25)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v26 = v25;
  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v28 = v27;
  objc_msgSend(v27, "addSubview:", v26);

  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v24, "didMoveToParentViewController:", v1);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v30 = swift_allocObject(v29, 176, 7);
  *(_OWORD *)(v30 + 16) = xmmword_171930;
  v31 = objc_msgSend(v9, "leadingAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "leadingAnchor");

  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v30 + 32) = v35;
  v36 = objc_msgSend(v9, "trailingAnchor");
  v37 = objc_msgSend(v1, "view");
  if (!v37)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "trailingAnchor");

  v40 = objc_msgSend(v36, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v30 + 40) = v40;
  v41 = objc_msgSend(v9, "topAnchor");
  v42 = objc_msgSend(v1, "view");
  if (!v42)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v43 = v42;
  v44 = objc_msgSend(v42, "topAnchor");

  v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);
  *(_QWORD *)(v30 + 48) = v45;
  v46 = objc_msgSend(v9, "bottomAnchor");
  v47 = objc_msgSend(v1, "view");
  if (!v47)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, "bottomAnchor");

  v50 = objc_msgSend(v46, "constraintEqualToAnchor:", v49);
  *(_QWORD *)(v30 + 56) = v50;
  v51 = objc_msgSend(v14, "leadingAnchor");
  v52 = objc_msgSend(v1, "view");
  if (!v52)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "layoutMarginsGuide");

  v55 = objc_msgSend(v54, "leadingAnchor");
  v56 = objc_msgSend(v51, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v30 + 64) = v56;
  v57 = objc_msgSend(v14, "topAnchor");
  v58 = objc_msgSend(v1, "view");
  if (!v58)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "safeAreaLayoutGuide");

  v61 = objc_msgSend(v60, "topAnchor");
  v62 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v61, 20.0);

  *(_QWORD *)(v30 + 72) = v62;
  v63 = objc_msgSend(v14, "trailingAnchor");
  v64 = objc_msgSend(v1, "view");
  if (!v64)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v65 = v64;
  v66 = objc_msgSend(v64, "layoutMarginsGuide");

  v67 = objc_msgSend(v66, "trailingAnchor");
  v68 = objc_msgSend(v63, "constraintLessThanOrEqualToAnchor:", v67);

  *(_QWORD *)(v30 + 80) = v68;
  v69 = objc_msgSend(v17, "leadingAnchor");
  v70 = objc_msgSend(v14, "leadingAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v30 + 88) = v71;
  v72 = objc_msgSend(v17, "topAnchor");
  v73 = objc_msgSend(v14, "bottomAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, 10.0);

  *(_QWORD *)(v30 + 96) = v74;
  v75 = objc_msgSend(v17, "trailingAnchor");
  v76 = objc_msgSend(v1, "view");
  if (!v76)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v77 = v76;
  v78 = objc_msgSend(v76, "layoutMarginsGuide");

  v79 = objc_msgSend(v78, "trailingAnchor");
  v80 = objc_msgSend(v75, "constraintLessThanOrEqualToAnchor:", v79);

  *(_QWORD *)(v30 + 104) = v80;
  v81 = objc_msgSend(v10, "trailingAnchor");
  v82 = objc_msgSend(v1, "view");
  if (!v82)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v83 = v82;
  v84 = objc_msgSend(v82, "trailingAnchor");

  v85 = objc_msgSend(v81, "constraintEqualToAnchor:", v84);
  *(_QWORD *)(v30 + 112) = v85;
  v86 = objc_msgSend(v10, "heightAnchor");
  v87 = objc_msgSend(v1, "traitCollection");
  v88 = UITraitCollection.safeDisplayScale.getter();

  v89 = objc_msgSend(v86, "constraintEqualToConstant:", 1.0 / v88);
  *(_QWORD *)(v30 + 120) = v89;
  v90 = objc_msgSend(v10, "leadingAnchor");
  v91 = objc_msgSend(v14, "leadingAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)(v30 + 128) = v92;
  v93 = objc_msgSend(v10, "topAnchor");
  v94 = objc_msgSend(v17, "bottomAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v94, 16.0);

  *(_QWORD *)(v30 + 136) = v95;
  v96 = objc_msgSend(v26, "leadingAnchor");
  v97 = objc_msgSend(v1, "view");
  if (!v97)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v98 = v97;
  v99 = objc_msgSend(v97, "leadingAnchor");

  v100 = objc_msgSend(v96, "constraintEqualToAnchor:", v99);
  *(_QWORD *)(v30 + 144) = v100;
  v101 = objc_msgSend(v26, "trailingAnchor");
  v102 = objc_msgSend(v1, "view");
  if (!v102)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v103 = v102;
  v104 = objc_msgSend(v102, "trailingAnchor");

  v105 = objc_msgSend(v101, "constraintEqualToAnchor:", v104);
  *(_QWORD *)(v30 + 152) = v105;
  v106 = objc_msgSend(v26, "bottomAnchor");
  v107 = objc_msgSend(v1, "view");
  if (v107)
  {
    v108 = v107;
    v109 = (void *)objc_opt_self(NSLayoutConstraint);
    v110 = objc_msgSend(v108, "bottomAnchor");

    v111 = objc_msgSend(v106, "constraintEqualToAnchor:", v110);
    *(_QWORD *)(v30 + 160) = v111;
    v112 = objc_msgSend(v26, "topAnchor");
    v113 = objc_msgSend(v10, "bottomAnchor");
    v114 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);

    *(_QWORD *)(v30 + 168) = v114;
    specialized Array._endMutation()(v115);
    v116 = v30;
    sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v109, "activateConstraints:", isa, swift_bridgeObjectRelease(v116).n128_f64[0]);

    return;
  }
LABEL_40:
  __break(1u);
}

void sub_C7B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_C7BF8(uint64_t a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for LyricsViewController();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_backgroundView];
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "traitCollection");
    if (objc_msgSend(v5, "userInterfaceStyle") == (char *)&dword_0 + 2)
      v6 = 3;
    else
      v6 = 0;
    v7 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", v6);

    objc_msgSend(v4, "setEffect:", v7);
  }
}

id sub_C7DE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LyricsViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI20LyricsViewController);
}

uint64_t sub_C7E9C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_C7EC0(uint64_t a1)
{
  uint64_t v1;

  sub_C7B64(a1, v1);
}

void sub_C7EC8()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_titleLabel;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = objc_msgSend((id)objc_opt_self(MTMPUFontDescriptor), "fontDescriptorWithTextStyle:leadingAdjustment:weight:", 8, 1, 2);
  v4 = objc_msgSend(v3, "preferredFont");

  objc_msgSend(v2, "setFont:", v4);
  *(_QWORD *)&v0[v1] = v2;
  v5 = OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_subtitleLabel;
  *(_QWORD *)&v0[v5] = sub_C6CB0();
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI20LyricsViewController_backgroundView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/LyricsViewController.swift", 39, 2, 24, 0);
  __break(1u);
}

uint64_t sub_C7FD8()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "removeTarget:action:forControlEvents:", v0, "handleActionFromControl:", *(_QWORD *)(v0 + 24));

  }
  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for ControlEventHandler()
{
  return objc_opt_self(_TtC12NowPlayingUI19ControlEventHandler);
}

uint64_t sub_C80B0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

_QWORD *sub_C80D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  void *v13;

  v8 = type metadata accessor for ControlEventHandler();
  v9 = (_QWORD *)swift_allocObject(v8, 48, 7);
  v10 = swift_unknownObjectWeakInit(v9 + 2, 0);
  swift_unknownObjectWeakAssign(v10, a1);
  v9[3] = a2;
  v11 = swift_allocObject(&unk_1CF388, 32, 7);
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  v9[4] = sub_F2F8;
  v9[5] = v11;
  Strong = swift_unknownObjectWeakLoadStrong(v9 + 2);
  if (Strong)
  {
    v13 = (void *)Strong;
    swift_retain(v9);
    objc_msgSend(v13, "addTarget:action:forControlEvents:", v9, "handleActionFromControl:", a2);

    swift_release(v9);
  }

  return v9;
}

uint64_t sub_C81AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_C81D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD aBlock[5];
  uint64_t v57;

  v7 = v6;
  v47 = a5;
  v48 = a6;
  v46 = a4;
  v54 = a3;
  v44 = a1;
  v50 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  __chkstk_darwin(v10);
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptSentenceSplittingBehavior(0);
  v13 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v43 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TranscriptModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v7, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v12);
  v19 = *(unsigned __int8 *)(v16 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = *(unsigned __int8 *)(v13 + 80);
  v22 = (v17 + v21 + v20) & ~v21;
  v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_1CF3B0, v25 + 16, v19 | v21 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v26 + v20, v18, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v26 + v22, v43, v42);
  *(_QWORD *)(v26 + v23) = v44;
  v28 = v46;
  v27 = v47;
  *(_QWORD *)(v26 + v24) = v46;
  v29 = (_QWORD *)(v26 + v25);
  v30 = v48;
  *v29 = v27;
  v29[1] = v30;
  aBlock[4] = sub_C8720;
  v57 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_19;
  v31 = _Block_copy(aBlock);
  swift_retain();
  v32 = v28;
  v33 = swift_retain();
  v34 = v45;
  static DispatchQoS.unspecified.getter(v33);
  v55 = _swiftEmptyArrayStorage;
  v35 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v37 = sub_F574();
  v39 = v49;
  v38 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v36, v37, v50, v35);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v34, v39, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
  *(_QWORD *)&result = swift_release(v57).n128_u64[0];
  return result;
}

double sub_C84EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a5;
  v25 = a6;
  v26 = a2;
  v23 = a1;
  v9 = type metadata accessor for TranscriptModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1CF400, v17 + 16, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18 + v14, v12, v9);
  *(_QWORD *)(v18 + v15) = a3;
  *(_QWORD *)(v18 + v16) = a4;
  v19 = (_QWORD *)(v18 + v17);
  v20 = v25;
  *v19 = v24;
  v19[1] = v20;
  swift_retain();
  v21 = a4;
  swift_retain();
  TranscriptModel.createParagraphs(with:completion:)(v26, sub_C9474, v18);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_C862C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for TranscriptModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for TranscriptSentenceSplittingBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11));

  swift_release(*(_QWORD *)(v0 + v13 + 8));
  return swift_deallocObject(v0, v13 + 16, v15);
}

double sub_C8720()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for TranscriptModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for TranscriptSentenceSplittingBehavior(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_C84EC(v0 + v2, v0 + v5, *(_QWORD *)(v0 + v6), *(void **)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_19(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_C87C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t (*v27)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v28;
  double v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  double v50;
  uint64_t v51;
  unint64_t v52;
  double *v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  void *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  void (*v113)(char *, uint64_t, __n128);
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD aBlock[5];
  _QWORD *v144;
  uint64_t v145;

  v124 = a5;
  v137 = a3;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v126 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v125 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  __chkstk_darwin(v15);
  v140 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TranscriptModel.Paragraph(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  __chkstk_darwin(v19);
  v24 = (char *)&v113 - v20;
  v145 = (uint64_t)_swiftEmptyArrayStorage;
  v127 = *(_QWORD *)(v23 + 16);
  if (!v127)
    goto LABEL_77;
  v121 = v22;
  v114 = a6;
  v117 = v13;
  v118 = v12;
  v119 = v10;
  v120 = a4;
  v115 = v9;
  v25 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v123 = v23;
  v26 = v23 + v25;
  v27 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, __n128))(v18 + 16);
  v122 = v26;
  v128 = v21;
  v116 = v27;
  v28 = ((uint64_t (*)(char *))v27)((char *)&v113 - v20);
  v29 = TranscriptModel.Paragraph.startTime.getter(v28);
  v31.n128_f64[0] = static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter();
  v32 = v137;
  if (v31.n128_f64[0] < v29)
  {
    v33 = TranscriptModel.Paragraph.startTime.getter(v30);
    v34 = type metadata accessor for SilentContent(0);
    swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
    v35 = sub_1462C(0, 0, v33, 0, 0, 1, 0, 1, 0xF000000000000007);
    v36 = type metadata accessor for TranscriptContentViewModel();
    v37 = swift_allocObject(v36, 24, 7);
    *(_QWORD *)(v37 + 16) = v35 | 0x4000000000000000;
    swift_retain();
    v38 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
    v40 = *(_QWORD *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFFF8));
    v39 = *(_QWORD *)((char *)&dword_18 + (v145 & 0xFFFFFFFFFFFFFF8));
    if (v40 >= v39 >> 1)
LABEL_67:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v37);
    specialized Array._endMutation()(v41);
    swift_release(v35);
    v31 = swift_release(v37);
  }
  v113 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
  v113(v24, v128, v31);
  v141 = *(_QWORD *)(v18 + 72);
  swift_bridgeObjectRetain(v123);
  v40 = v122;
  v18 = v127;
  v135 = a2;
  do
  {
    v42 = (uint64_t)v140;
    TranscriptModel.speaker(for:)(v40);
    v37 = sub_C94E0(v42, v32);
    sub_9944(v42, &qword_2001B8);
    v35 = v145;
    if ((unint64_t)v145 >> 62)
    {
      if (v145 < 0)
        v63 = v145;
      else
        v63 = v145 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v145);
      v24 = (char *)_CocoaArrayWrapper.endIndex.getter(v63);
      if (!v24)
      {
LABEL_34:
        swift_bridgeObjectRelease(v35);
        goto LABEL_46;
      }
    }
    else
    {
      v24 = *(char **)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v145);
      if (!v24)
        goto LABEL_34;
    }
    v43 = (unint64_t)(v24 - 1);
    if (__OFSUB__(v24, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    if ((v35 & 0xC000000000000001) != 0)
    {
      v44 = specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v35);
    }
    else
    {
      if ((v43 & 0x8000000000000000) != 0)
        goto LABEL_62;
      v39 = *(_QWORD *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFF8));
      if (v43 >= v39)
        goto LABEL_63;
      v44 = *(_QWORD *)(v35 + 8 * v43 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease(v35);
    v45 = *(_QWORD *)(v44 + 16);
    if (v45 >> 62)
    {
      swift_release(v44);
      goto LABEL_46;
    }
    v136 = v35 & 0xC000000000000001;
    swift_retain();
    swift_release(v44);
    KeyPath = swift_getKeyPath(&unk_1719F8);
    v47 = v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent___observationRegistrar;
    aBlock[0] = v37;
    v48 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
    v138 = v47;
    v139 = v48;
    ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, KeyPath, v48);
    swift_release(KeyPath);
    v24 = (char *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
    v49 = (double *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime);
    if ((*(_BYTE *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerStartTime + 8) & 1) == 0
      || (v49 = (double *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime),
          *(_BYTE *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime + 8) != 1))
    {
      v50 = *v49;
      v51 = swift_getKeyPath(&unk_171A20);
      aBlock[0] = v45;
      ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v51, v139);
      swift_release(v51);
      v52 = v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime;
      v53 = (double *)(v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime);
      if (*(_BYTE *)(v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__playerEndTime + 8) == 1
        && (v53 = (double *)(v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime),
            *(_BYTE *)(v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime + 8) == 1)
        || (v54 = v50 - *v53, static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter() >= v54))
      {
        v62 = v45;
LABEL_44:
        swift_release(v62);
        a2 = v135;
        goto LABEL_45;
      }
      v134 = *(_QWORD *)(v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime);
      v133 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceEndTime + 8);
      v132 = *(_QWORD *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime);
      v131 = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_referenceStartTime + 8);
      v55 = swift_getKeyPath(&unk_171A20);
      aBlock[0] = v45;
      ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v55, v139);
      swift_release(v55);
      v130 = *(_QWORD *)v52;
      v129 = *(unsigned __int8 *)(v52 + 8);
      v56 = swift_getKeyPath(&unk_1719F8);
      aBlock[0] = v37;
      ObservationRegistrar.access<A, B>(_:keyPath:)(aBlock, v56, v139);
      swift_release(v56);
      v32 = *(_QWORD *)v24;
      a2 = v24[8];
      if ((unint64_t)v35 >> 62)
      {
        if (v35 < 0)
          v64 = v35;
        else
          v64 = v35 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v35);
        v57 = _CocoaArrayWrapper.endIndex.getter(v64);
        if (v57)
          goto LABEL_23;
      }
      else
      {
        v57 = *(_QWORD *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v35);
        if (v57)
        {
LABEL_23:
          v58 = v57 - 1;
          if (__OFSUB__(v57, 1))
            goto LABEL_64;
          v39 = v136;
          if (v136)
          {
            v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v35);
          }
          else
          {
            if ((v58 & 0x8000000000000000) != 0)
              goto LABEL_65;
            v39 = *(_QWORD *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFF8));
            if (v58 >= v39)
              goto LABEL_66;
            v59 = *(_QWORD *)(v35 + 8 * v58 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease(v35);
          sub_10F86C();
          v61 = v60;
          swift_release(v59);
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease(v35);
      v61 = 0xF000000000000007;
LABEL_41:
      v65 = type metadata accessor for SilentContent(0);
      swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
      v66 = sub_1462C(v134, v133, v132, v131, v130, v129, v32, a2, v61);
      v67 = type metadata accessor for TranscriptContentViewModel();
      v68 = swift_allocObject(v67, 24, 7);
      *(_QWORD *)(v68 + 16) = v66 | 0x4000000000000000;
      swift_retain();
      v69 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
      v71 = *(_QWORD *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFFF8));
      v70 = *(_QWORD *)((char *)&dword_18 + (v145 & 0xFFFFFFFFFFFFFF8));
      if (v71 >= v70 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
      v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v68);
      specialized Array._endMutation()(v72);
      swift_release(v45);
      swift_release(v68);
      v62 = v66;
      goto LABEL_44;
    }
    swift_release(v45);
LABEL_45:
    v32 = v137;
LABEL_46:
    v73 = type metadata accessor for TranscriptContentViewModel();
    v74 = swift_allocObject(v73, 24, 7);
    *(_QWORD *)(v74 + 16) = v37;
    v75 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
    v77 = *(_QWORD *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFFF8));
    v76 = *(_QWORD *)((char *)&dword_18 + (v145 & 0xFFFFFFFFFFFFFF8));
    if (v77 >= v76 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
    v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v74);
    specialized Array._endMutation()(v78);
    swift_release(v37);
    v40 += v141;
    --v18;
  }
  while (v18);
  v79 = swift_bridgeObjectRelease(v123);
  v80 = v121;
  v81 = v116(v121, v122 + v141 * (v127 - 1), v128, v79);
  v82 = TranscriptModel.duration.getter(v81);
  v10 = v119;
  v12 = v118;
  v13 = v117;
  if ((v84 & 1) != 0)
    goto LABEL_76;
  v85 = v82;
  v86 = v83;
  v87 = (double)Duration.components.getter(v82, v83);
  v88 = v87 - TranscriptModel.Paragraph.endTime.getter();
  if (static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter() >= v88)
    goto LABEL_76;
  v89 = TranscriptModel.Paragraph.endTime.getter();
  v90 = Duration.components.getter(v85, v86);
  v91 = v145;
  if ((unint64_t)v145 >> 62)
  {
    if (v145 < 0)
      v97 = v145;
    else
      v97 = v145 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v145);
    v92 = _CocoaArrayWrapper.endIndex.getter(v97);
    if (!v92)
      goto LABEL_72;
LABEL_55:
    v93 = v92 - 1;
    if (__OFSUB__(v92, 1))
    {
      __break(1u);
    }
    else if ((v91 & 0xC000000000000001) == 0)
    {
      if ((v93 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v93 < *(_QWORD *)((char *)&dword_10 + (v91 & 0xFFFFFFFFFFFFF8)))
      {
        v94 = *(_QWORD *)(v91 + 8 * v93 + 32);
        swift_retain();
LABEL_60:
        swift_bridgeObjectRelease(v91);
        sub_10F86C();
        v96 = v95;
        swift_release(v94);
        goto LABEL_73;
      }
      __break(1u);
      return;
    }
    v94 = specialized _ArrayBuffer._getElementSlowPath(_:)(v93, v91);
    goto LABEL_60;
  }
  v92 = *(_QWORD *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v145);
  if (v92)
    goto LABEL_55;
LABEL_72:
  swift_bridgeObjectRelease(v91);
  v96 = 0xF000000000000007;
LABEL_73:
  v98 = type metadata accessor for SilentContent(0);
  swift_allocObject(v98, *(unsigned int *)(v98 + 48), *(unsigned __int16 *)(v98 + 52));
  v99 = sub_1462C(v89, 0, COERCE__INT64((double)v90), 0, 0, 1, 0, 1, v96);
  v100 = swift_allocObject(v73, 24, 7);
  *(_QWORD *)(v100 + 16) = v99 | 0x4000000000000000;
  swift_retain();
  v101 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v101);
  v103 = *(_QWORD *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFFF8));
  v102 = *(_QWORD *)((char *)&dword_18 + (v145 & 0xFFFFFFFFFFFFFF8));
  if (v103 >= v102 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v102 > 1, v103 + 1, 1);
  v104 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v103, v100);
  specialized Array._endMutation()(v104);
  swift_release(v99);
  swift_release(v100);
  v80 = v121;
LABEL_76:
  ((void (*)(uint64_t, uint64_t))v113)(v80, v128);
  v9 = v115;
  a6 = v114;
LABEL_77:
  v105 = v145;
  v106 = (_QWORD *)swift_allocObject(&unk_1CF428, 40, 7);
  v106[2] = v124;
  v106[3] = a6;
  v106[4] = v105;
  aBlock[4] = sub_C9A28;
  v144 = v106;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_9;
  v107 = _Block_copy(aBlock);
  v108 = swift_retain();
  v109 = v125;
  static DispatchQoS.unspecified.getter(v108);
  v142 = _swiftEmptyArrayStorage;
  v110 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v112 = sub_F574();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v142, v111, v112, v9, v110);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v109, v12, v107);
  _Block_release(v107);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v13);
  swift_release(v144);
}

uint64_t sub_C93D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for TranscriptModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  swift_release(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v5);
}

void sub_C9474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for TranscriptModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_C87C8(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_C94E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2001C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptModel.Sentence.SplitStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v42 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = TranscriptModel.Paragraph.sentences.getter(v14);
  v18 = Array<A>.content.getter();
  v43 = v19;
  v44 = v18;
  swift_bridgeObjectRelease(v17);
  v21 = TranscriptModel.Paragraph.sentences.getter(v20);
  v22 = sub_C979C(v21);
  swift_bridgeObjectRelease(v21);
  v23 = sub_C9A60(a1, (uint64_t)v16);
  v24 = TranscriptModel.Paragraph.startTime.getter(v23);
  v25 = TranscriptModel.Paragraph.endTime.getter();
  v27 = TranscriptModel.Paragraph.sentences.getter(v26);
  v28 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRelease(v27);
  if (v28 < 2)
  {
    v42 = v22;
    v30 = TranscriptModel.Paragraph.sentences.getter(v29);
    v31 = *(_QWORD *)(v30 + 16);
    v32 = type metadata accessor for TranscriptModel.Sentence(0);
    v33 = *(_QWORD *)(v32 - 8);
    if (v31)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v5, v30 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v32);
      v34 = 0;
    }
    else
    {
      v34 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v5, v34, 1, v32);
    v35 = swift_bridgeObjectRelease(v30);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v33 + 48))(v5, 1, v32, v35);
    v22 = v42;
    if (v36 != 1)
    {
      TranscriptModel.Sentence.splitStyle.getter();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v32);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v6);
      goto LABEL_9;
    }
    sub_9944((uint64_t)v5, (uint64_t *)&unk_2001C0);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v12, enum case for TranscriptModel.Sentence.SplitStyle.full(_:), v6);
LABEL_9:
  v38 = v44;
  v37 = v45;
  v39 = v43;
  v40 = type metadata accessor for TextContent(0);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  swift_retain();
  return sub_1279C8(v38, v39, (uint64_t)v22, (uint64_t)v16, 0, 1, 0, 1, v24, v25, (uint64_t)v12, v37);
}

_QWORD *sub_C979C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);

  v2 = type metadata accessor for TranscriptModel.Sentence(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return _swiftEmptyArrayStorage;
  v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v8 = *(_QWORD *)(v3 + 72);
  v37 = a1;
  v38 = v8;
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain(a1);
  v9 = _swiftEmptyArrayStorage;
  v39 = v2;
  while (1)
  {
    v11 = v9;
    v12 = v40(v5, v7, v2);
    v13 = TranscriptModel.Sentence.words.getter(v12);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = v9[2];
    v16 = v15 + v14;
    if (__OFADD__(v15, v14))
      break;
    v17 = v13;
    v18 = swift_bridgeObjectRetain(v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    if (isUniquelyReferenced_nonNull_native && v16 <= v9[3] >> 1)
    {
      if (*(_QWORD *)(v17 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v15 <= v16)
        v20 = v15 + v14;
      else
        v20 = v15;
      v9 = (_QWORD *)sub_135814(isUniquelyReferenced_nonNull_native, v20, 1, (unint64_t)v9);
      if (*(_QWORD *)(v17 + 16))
      {
LABEL_14:
        v21 = v9[2];
        v22 = (v9[3] >> 1) - v21;
        v23 = type metadata accessor for TranscriptModel.Word(0);
        if (v22 < v14)
          goto LABEL_28;
        v24 = *(_QWORD *)(v23 - 8);
        v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        v26 = *(_QWORD *)(v24 + 72);
        v27 = (char *)v9 + v25 + v26 * v21;
        v28 = v17 + v25;
        v29 = v26 * v14;
        v30 = &v27[v29];
        v31 = v28 + v29;
        if (v28 < (unint64_t)v30 && (unint64_t)v27 < v31)
          goto LABEL_30;
        swift_arrayInitWithCopy(v27);
        if (v14)
        {
          v33 = v9[2];
          v34 = __OFADD__(v33, v14);
          v35 = v33 + v14;
          if (v34)
            goto LABEL_29;
          v9[2] = v35;
        }
        goto LABEL_4;
      }
    }
    if (v14)
      goto LABEL_27;
LABEL_4:
    v10 = swift_bridgeObjectRelease(v17);
    v2 = v39;
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v39, v10);
    swift_bridgeObjectRelease(v11);
    v7 += v38;
    if (!--v6)
    {
      swift_bridgeObjectRelease(v37);
      return v9;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_C99FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C9A28()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_C9A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2001B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_C9AB0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_200340);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_retain();
    result = sub_139EC4((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C9BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203ED0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    v9 = swift_unknownObjectRetain(v7);
    result = sub_139F10(v8, v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v7;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C9CC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_200290);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = *(v6 - 1);
    v9 = v7;
    result = sub_139F14((uint64_t)v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C9DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002E0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v19 = v1;
  v6 = (_QWORD *)(v1 + 64);
  while (1)
  {
    v7 = *(v6 - 4);
    v8 = *(v6 - 3);
    v9 = *(v6 - 2);
    v10 = *((_BYTE *)v6 - 8);
    v11 = *v6;
    v12 = (void *)swift_unknownObjectRetain(v7);
    result = sub_139FB8(v12, v8, v9, v10);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = v4[6] + 32 * result;
    *(_QWORD *)v15 = v7;
    *(_QWORD *)(v15 + 8) = v8;
    *(_QWORD *)(v15 + 16) = v9;
    *(_BYTE *)(v15 + 24) = v10;
    *(_QWORD *)(v4[7] + 8 * result) = v11;
    v16 = v4[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v6 += 5;
    v4[2] = v18;
    if (!--v5)
    {
      swift_release(v4);
      v1 = v19;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C9EFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002D8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    v9 = swift_bridgeObjectRetain(v7);
    result = sub_139F60(v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v7;
    *(_QWORD *)(v4[7] + v12) = v8;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_C9FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_203F20);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    result = sub_139E60(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t result;
  char v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_200330);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 64);
  while (1)
  {
    v7 = *v6;
    v8 = v6[1];
    v9 = v6[2];
    v10 = v6[3];
    v11 = v6[4];
    v12 = v6[5];
    v13 = v6[6];
    v14 = v6[7];
    v15 = v6[8];
    v16 = *((_OWORD *)v6 - 1);
    v25 = *((_OWORD *)v6 - 2);
    v26 = v16;
    v27 = v7;
    swift_bridgeObjectRetain(v8);
    result = sub_13A08C((uint64_t)&v25);
    if ((v18 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v19 = v4[6] + 40 * result;
    v20 = v26;
    *(_OWORD *)v19 = v25;
    *(_OWORD *)(v19 + 16) = v20;
    *(_QWORD *)(v19 + 32) = v27;
    v21 = (_QWORD *)(v4[7] + (result << 6));
    *v21 = v8;
    v21[1] = v9;
    v21[2] = v10;
    v21[3] = v11;
    v21[4] = v12;
    v21[5] = v13;
    v21[6] = v14;
    v21[7] = v15;
    v22 = v4[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v6 += 13;
    v4[2] = v24;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA27C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_200300);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    v9 = v8;
    result = sub_139E60(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA394(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_200328);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    result = sub_139E60(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA4A4(uint64_t a1)
{
  return sub_CAD2C(a1, &qword_200008, &qword_2002A0, (uint64_t (*)(uint64_t))sub_139F10);
}

unint64_t sub_CA4C0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_200318);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    result = sub_139F10(v7, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v3[6] + v11) = v7;
    *(_QWORD *)(v3[7] + v11) = v6;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA5C8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_200310);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_bridgeObjectRetain(v6);
    result = sub_139F10(v7, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v3[6] + v11) = v7;
    *(_QWORD *)(v3[7] + v11) = v6;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA6D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_200320);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *(v5 - 1);
    v6 = *v5;
    swift_retain();
    swift_retain();
    result = sub_13A254(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA7D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F9FA0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_unknownObjectRetain(v7);
    result = sub_13A2AC((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CA8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002E8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  v28 = v3 + 64;
  swift_retain();
  v27 = v1;
  v6 = (_BYTE *)(v1 + 128);
  while (1)
  {
    v29 = v5;
    v7 = *((_QWORD *)v6 - 12);
    v8 = *((_QWORD *)v6 - 11);
    v9 = *((_QWORD *)v6 - 10);
    v10 = *(v6 - 72);
    v11 = *((_QWORD *)v6 - 8);
    v12 = *((_QWORD *)v6 - 7);
    v13 = *((_QWORD *)v6 - 6);
    v14 = *((_QWORD *)v6 - 5);
    v16 = *((_QWORD *)v6 - 4);
    v15 = *((_QWORD *)v6 - 3);
    v18 = *((_QWORD *)v6 - 2);
    v17 = *((_QWORD *)v6 - 1);
    v30 = *v6;
    swift_unknownObjectRetain(v7);
    result = sub_139FB8(v19, v8, v9, v10);
    if ((v21 & 1) != 0)
      break;
    *(_QWORD *)(v28 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v4[6] + 32 * result;
    *(_QWORD *)v22 = v7;
    *(_QWORD *)(v22 + 8) = v8;
    *(_QWORD *)(v22 + 16) = v9;
    *(_BYTE *)(v22 + 24) = v10;
    v23 = v4[7] + 72 * result;
    *(_QWORD *)v23 = v11;
    *(_QWORD *)(v23 + 8) = v12;
    *(_QWORD *)(v23 + 16) = v13;
    *(_QWORD *)(v23 + 24) = v14;
    *(_QWORD *)(v23 + 32) = v16;
    *(_QWORD *)(v23 + 40) = v15;
    *(_QWORD *)(v23 + 48) = v18;
    *(_QWORD *)(v23 + 56) = v17;
    *(_BYTE *)(v23 + 64) = v30;
    v24 = v4[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_11;
    v4[2] = v26;
    v6 += 104;
    v5 = v29 - 1;
    if (v29 == 1)
    {
      swift_release(v4);
      v1 = v27;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CAA64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2002F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_203EF0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2808C(v13, (uint64_t)v5, (uint64_t *)&unk_2002F0);
    result = sub_13A2F8((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for IndexPath(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_CABF8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2002D0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    result = sub_139E60(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CAD10(uint64_t a1)
{
  return sub_CAD2C(a1, &qword_2002A8, (uint64_t *)&unk_2002B0, (uint64_t (*)(uint64_t))sub_13A35C);
}

unint64_t sub_CAD2C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2808C(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_ECEC(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_CAE54(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2002C0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 72);
  while (1)
  {
    sub_CE160((uint64_t)(v5 - 5), (uint64_t)v13);
    v6 = *v5;
    sub_CE19C((uint64_t)v13);
    result = sub_13A3DC((uint64_t)v13);
    if ((v8 & 1) != 0)
      break;
    v9 = result;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    result = sub_CE160((uint64_t)v13, v3[6] + 40 * result);
    *(_QWORD *)(v3[7] + 8 * v9) = v6;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v5 += 6;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_CAF7C(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_13A2AC((uint64_t)a1);
      if ((v8 & 1) != 0)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
        swift_unknownObjectRetain(v6);
        return v6;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = __CocoaDictionary.lookup(_:)();

  if (!v4)
    return 0;
  v10 = v4;
  swift_unknownObjectRetain(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F9FB0);
  swift_dynamicCast(&v11, &v10, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
  v6 = v11;
  swift_unknownObjectRelease(v4);
  return v6;
}

char *PlayerPathCoordinator.__allocating_init(playerID:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return PlayerPathCoordinator.init(playerID:bundleID:)(a1, a2, a3, a4);
}

char *PlayerPathCoordinator.init(playerID:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  NSString v27;
  NSString v28;
  void *v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  objc_class *v34;
  id v35;
  uint64_t v36;
  void *v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  void **aBlock;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  objc_super v89;

  v74 = a1;
  v75 = a3;
  v73 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  v80 = v6;
  v81 = v7;
  __chkstk_darwin(v6);
  v79 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v4;
  v4[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_needsInitialPath] = 1;
  v70 = OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_invalidationQueue;
  v68 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v17 = v4;
  v76 = v16;
  static DispatchQoS.unspecified.getter(v17);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v18 = sub_8330((unint64_t *)&unk_1F96F0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2001E0);
  v20 = sub_720E4((unint64_t *)&qword_1F9700, (uint64_t *)&unk_2001E0);
  v21 = dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v19, v20, v11, v18);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v71 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v72, v21);
  v22 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000032, 0x8000000000183620, v16, v13, v10, 0);
  *(_QWORD *)&v69[v70] = v22;
  v23 = OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_failingPlayerPathTimers;
  *(_QWORD *)&v17[v23] = sub_CA7D8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_activeSystemRouteDidChangeNotificationObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playerPathInvalidationObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_applicationDidBecomeActiveNotificationObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_applicationWillResignActiveNotificationObserver] = 0;
  v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_updateBlocks] = _swiftEmptyArrayStorage;
  v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator__needsUpdate] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_routingController] = 0;
  v24 = &v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playerID];
  v25 = v73;
  *v24 = v74;
  v24[1] = v25;
  v26 = &v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_bundleID];
  *v26 = v75;
  v26[1] = a4;
  swift_bridgeObjectRetain_n(v25, 2);
  swift_bridgeObjectRetain_n(a4, 2);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v29 = (void *)objc_opt_self(MPCPlayerPath);
  v30 = objc_msgSend(v29, "pathWithRoute:bundleID:playerID:", 0, v27, v28);

  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(a4);
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v29, "pathWithRoute:bundleID:playerID:", 0, v31, v32, swift_bridgeObjectRelease(v25).n128_f64[0]);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v25);

  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_metadataPlayerPath] = v30;
  *(_QWORD *)&v17[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playbackPlayerPath] = v33;

  v34 = (objc_class *)type metadata accessor for PlayerPathCoordinator();
  v89.receiver = v17;
  v89.super_class = v34;
  v35 = objc_msgSendSuper2(&v89, "init");
  v36 = swift_allocObject(&unk_1CF478, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v35);
  v87 = sub_CBC64;
  v88 = v36;
  aBlock = _NSConcreteStackBlock;
  v84 = 1107296256;
  v85 = sub_F528;
  v86 = &block_descriptor_20;
  v37 = _Block_copy(&aBlock);
  v38 = v35;
  v39 = swift_retain();
  v40 = v76;
  static DispatchQoS.unspecified.getter(v39);
  v82 = _swiftEmptyArrayStorage;
  v41 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v43 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
  v44 = v79;
  v45 = v42;
  v46 = v80;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v82, v45, v43, v80, v41);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v40, v44, v37);
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v46);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v40, v78);
  v47 = v88;
  swift_release(v36);
  swift_release(v47);
  LOBYTE(v36) = v38[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating];
  v38[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating] = 1;
  v48 = swift_allocObject(&unk_1CF4C8, 25, 7);
  *(_QWORD *)(v48 + 16) = v38;
  *(_BYTE *)(v48 + 24) = v36;
  v49 = (void *)objc_opt_self(MPAVRoutingController);
  v50 = swift_allocObject(&unk_1CF4F0, 32, 7);
  *(_QWORD *)(v50 + 16) = sub_CD9C0;
  *(_QWORD *)(v50 + 24) = v48;
  v87 = sub_CD9CC;
  v88 = v50;
  aBlock = _NSConcreteStackBlock;
  v84 = 1107296256;
  v85 = sub_6BDB4;
  v86 = &block_descriptor_9_0;
  v51 = _Block_copy(&aBlock);
  v52 = v88;
  v53 = v38;
  swift_retain();
  swift_release(v52);
  objc_msgSend(v49, "getActiveRouteWithTimeout:completion:", v51, 1.0);
  swift_release(v48);
  _Block_release(v51);
  v54 = (void *)MPAVRoutingControllerActiveSystemRouteDidChangeNotification;
  v55 = swift_allocObject(&unk_1CF478, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v53);
  v56 = type metadata accessor for NotificationObserver();
  swift_allocObject(v56, 56, 7);
  v57 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v54, 0, 1, (uint64_t)sub_CD9D4, v55);
  v58 = *(_QWORD *)&v53[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_activeSystemRouteDidChangeNotificationObserver];
  *(_QWORD *)&v53[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_activeSystemRouteDidChangeNotificationObserver] = v57;
  swift_release(v58);
  v59 = (void *)MTApplicationDidBecomeActiveNotification;
  v60 = swift_allocObject(&unk_1CF478, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16, v53);
  swift_allocObject(v56, 56, 7);
  v61 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v59, 0, 1, (uint64_t)sub_CDD54, v60);
  v62 = *(_QWORD *)&v53[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_applicationDidBecomeActiveNotificationObserver];
  *(_QWORD *)&v53[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_applicationDidBecomeActiveNotificationObserver] = v61;
  swift_release(v62);
  v63 = (void *)MTApplicationWillResignActiveNotification;
  v64 = swift_allocObject(&unk_1CF478, 24, 7);
  swift_unknownObjectWeakInit(v64 + 16, v53);
  swift_allocObject(v56, 56, 7);
  v65 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v63, 0, 1, (uint64_t)sub_CDD70, v64);
  v66 = *(_QWORD *)&v53[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_applicationWillResignActiveNotificationObserver];
  *(_QWORD *)&v53[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_applicationWillResignActiveNotificationObserver] = v65;
  swift_release(v66);
  sub_CDA58();

  return v53;
}

uint64_t type metadata accessor for PlayerPathCoordinator()
{
  return objc_opt_self(_TtC12NowPlayingUI21PlayerPathCoordinator);
}

uint64_t sub_CB8D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_CB8FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t Strong;
  id v16;
  char v17;
  id v18;
  __n128 v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v11 = swift_allocObject(&unk_1CF808, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = (void *)objc_opt_self(NSThread);
  swift_retain_n(a1, 2);
  v13 = v10;
  if (!objc_msgSend(v12, "isMainThread"))
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v36 = v13;
    v34 = static OS_dispatch_queue.main.getter(v19);
    aBlock[4] = sub_CE438;
    v38 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_79;
    v20 = _Block_copy(aBlock);
    v35 = v7;
    v21 = v20;
    v22 = v38;
    swift_retain();
    swift_release(v22);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = v3;
    v25 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v33 = a1;
    v27 = v6;
    v28 = v26;
    v29 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v2, v25);
    v30 = (void *)v34;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v27);
    v31 = v36;

    v32 = v33;
LABEL_8:
    swift_release(v32);
    swift_release(v11);
    return;
  }
  v14 = v13;
  swift_beginAccess(a1 + 16, aBlock, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong)
  {

    v32 = a1;
    goto LABEL_8;
  }
  v16 = (id)Strong;
  if (*(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_needsInitialPath) == 1)
  {
    v17 = *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating) = 1;
    v18 = v14;
    v16 = v16;
    sub_CC374(v18, v16, v17);
    swift_release(a1);
    swift_release(v11);

  }
  else
  {

    swift_release(a1);
    swift_release(v11);
  }

}

void sub_CBC64()
{
  uint64_t v0;

  sub_CB8FC(v0);
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_CBC84(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  char v6;
  id v7;
  id v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (*((_BYTE *)Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_needsInitialPath) == 1)
    {
      v6 = *((_BYTE *)Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating);
      *((_BYTE *)Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating) = 1;
      v7 = Strong;
      v8 = a2;
      sub_CC374(v8, v7, v6);

    }
  }
}

void sub_CBD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating) = 1;
    v6 = swift_allocObject(&unk_1CF740, 25, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_BYTE *)(v6 + 24) = v5;
    v7 = (void *)objc_opt_self(MPAVRoutingController);
    v8 = swift_allocObject(&unk_1CF768, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_CE4A4;
    *(_QWORD *)(v8 + 24) = v6;
    aBlock[4] = sub_CE4A8;
    v13 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_6BDB4;
    aBlock[3] = &block_descriptor_67;
    v9 = _Block_copy(aBlock);
    v10 = v13;
    v11 = v4;
    swift_retain();
    swift_release(v10);
    objc_msgSend(v7, "getActiveRouteWithTimeout:completion:", v9, 1.0);
    swift_release(v6);
    _Block_release(v9);

  }
}

void sub_CBE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_routingController);
    v8 = v7;

    if (v7)
    {
      objc_msgSend(v8, "setDiscoveryMode:", a3);

    }
  }
}

id PlayerPathCoordinator.metadataPlayerPath.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_metadataPlayerPath);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_metadataPlayerPath, v3, 0, 0);
  return *v1;
}

void sub_CBFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating) = 1;
    v6 = swift_allocObject(&unk_1CF678, 25, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_BYTE *)(v6 + 24) = v5;
    v7 = (void *)objc_opt_self(MPAVRoutingController);
    v8 = swift_allocObject(&unk_1CF6A0, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_CE4A4;
    *(_QWORD *)(v8 + 24) = v6;
    aBlock[4] = sub_CE4A8;
    v13 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_6BDB4;
    aBlock[3] = &block_descriptor_49;
    v9 = _Block_copy(aBlock);
    v10 = v13;
    v11 = v4;
    swift_retain();
    swift_release(v10);
    objc_msgSend(v7, "getActiveRouteWithTimeout:completion:", v9, 1.0);
    swift_release(v6);
    _Block_release(v9);

  }
}

id PlayerPathCoordinator.playbackPlayerPath.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playbackPlayerPath);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playbackPlayerPath, v3, 0, 0);
  return *v1;
}

void PlayerPathCoordinator.updatePlayerPaths(with:)(void *a1)
{
  _BYTE *v1;
  char v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD v12[5];
  uint64_t v13;

  v3 = v1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating];
  v1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating] = 1;
  v4 = swift_allocObject(&unk_1CF540, 25, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = v3;
  if (a1)
  {
    v5 = v1;
    v6 = a1;
    sub_CC374(v6, v5, v3);

    swift_release(v4);
  }
  else
  {
    v7 = (void *)objc_opt_self(MPAVRoutingController);
    v8 = swift_allocObject(&unk_1CF568, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_CE4A4;
    *(_QWORD *)(v8 + 24) = v4;
    v12[4] = sub_CE4A8;
    v13 = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_6BDB4;
    v12[3] = &block_descriptor_23_0;
    v9 = _Block_copy(v12);
    v10 = v13;
    v11 = v1;
    swift_retain();
    swift_release(v10);
    objc_msgSend(v7, "getActiveRouteWithTimeout:completion:", v9, 1.0);
    swift_release(v4);
    _Block_release(v9);
  }
}

double sub_CC374(void *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  double result;
  __n128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1CF7B8, 33, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a1;
  *(_BYTE *)(v13 + 32) = a3;
  v14 = (void *)objc_opt_self(NSThread);
  v15 = a2;
  v16 = a1;
  v17 = (char *)v15;
  v18 = v16;
  if (objc_msgSend(v14, "isMainThread"))
  {
    sub_CC624(v17, v18, a3 & 1);

  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v31 = static OS_dispatch_queue.main.getter(v20);
    aBlock[4] = sub_CE428;
    v35 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_73;
    v21 = _Block_copy(aBlock);
    v22 = v35;
    swift_retain();
    swift_release(v22);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = v7;
    v25 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v30 = v17;
    v27 = v26;
    v28 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v6, v25);
    v29 = (void *)v31;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);

  }
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_CC624(char *a1, void *a2, char a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char **v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  char v25;
  id v26;

  v6 = objc_msgSend(a1, "metadataPlayerPath");
  v26 = objc_msgSend(v6, "route");

  v7 = objc_msgSend(a1, "metadataPlayerPath");
  v8 = objc_msgSend(v7, "route");

  if (v8)
  {
    v9 = objc_msgSend(v8, "connection");

    if (v9)
    {
      v10 = objc_msgSend(v9, "isInvalidated");

      if (!v26)
        goto LABEL_7;
LABEL_6:
      sub_F174(0, &qword_1FBD80, MPAVRoute_ptr);
      v11 = a2;
      v12 = v26;
      v13 = static NSObject.== infix(_:_:)(v12, v11);

      if (!(v10 & 1 | ((v13 & 1) == 0)))
        goto LABEL_11;
      goto LABEL_7;
    }
  }
  v10 = 0;
  if (v26)
    goto LABEL_6;
LABEL_7:
  a1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_needsInitialPath] = 0;
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_bundleID + 8];
  v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playerID + 8];
  v16 = &selRef_layoutDirection;
  if ((objc_msgSend(a2, "isDeviceRoute") & 1) != 0)
  {
    v25 = a3;
    v17 = a2;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v14);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v20 = objc_msgSend((id)objc_opt_self(MPCPlayerPath), "pathWithRoute:bundleID:playerID:", v17, v18, v19);

    v16 = &selRef_layoutDirection;
    a3 = v25;
  }
  else
  {
    v20 = objc_msgSend((id)objc_opt_self(MPCPlayerPath), "pathWithRoute:bundleID:playerID:", a2, 0, 0);
  }
  v21 = a2;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v14);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v24 = objc_msgSend((id)objc_opt_self(MPCPlayerPath), v16[153], v21, v22, v23);

  objc_msgSend(a1, "setMetadataPlayerPath:", v20);
  objc_msgSend(a1, "setPlaybackPlayerPath:", v24);

LABEL_11:
  sub_CD8EC(a3 & 1);

}

void sub_CC938(void *a1, void (*a2)(id))
{
  id v4;
  id v5;

  if (a1)
    v5 = a1;
  else
    v5 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v4 = a1;
  a2(v5);

}

double PlayerPathCoordinator.didReceiveResponse(for:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_invalidationQueue];
  v11 = swift_allocObject(&unk_1CF5B8, 32, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_CDE00;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_29;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  static DispatchQoS.unspecified.getter(a1);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v16 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_CCB98(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_failingPlayerPathTimers, v5, 33, 0);
  v3 = sub_15AA00(a2);
  result = swift_endAccess(v5);
  if (v3)
  {
    swift_getObjectType(v3);
    OS_dispatch_source.cancel()();
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

double PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char v15;
  double result;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)_convertErrorToNSError(_:)(a2);
  v15 = sub_CCE18();

  if ((v15 & 1) != 0)
  {
    v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_invalidationQueue];
    v17 = swift_allocObject(&unk_1CF608, 32, 7);
    *(_QWORD *)(v17 + 16) = v3;
    *(_QWORD *)(v17 + 24) = a1;
    aBlock[4] = sub_CDE08;
    v27 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_35_0;
    v18 = v7;
    v19 = _Block_copy(aBlock);
    v20 = v3;
    static DispatchQoS.unspecified.getter(a1);
    v25 = _swiftEmptyArrayStorage;
    v21 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v23 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v22, v23, v6, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  }
  return result;
}

uint64_t sub_CCE18()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v42;
  id v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;

  v1 = v0;
  v2 = objc_msgSend(v0, "domain");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = (char *)objc_msgSend(v1, "code");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPAVRouteConnectionErrorDomain);
  if (v7 == v3 && v8 == v5)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    if (v6 == (_BYTE *)&dword_0 + 2)
      return 1;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v5, 0);
    swift_bridgeObjectRelease(v5);
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
    if ((v11 & 1) != 0 && v6 == (_BYTE *)&dword_0 + 2)
      return 1;
  }
  v46 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = objc_msgSend(v1, "userInfo", v12);
  v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPRequestUnderlyingErrorsUserInfoKey);
  v18 = v17;
  if (*(_QWORD *)(v15 + 16) && (v19 = sub_139E60(v16, v17), (v20 & 1) != 0))
  {
    sub_CD54(*(_QWORD *)(v15 + 56) + 32 * v19, (uint64_t)&v44);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v15);
    if (*((_QWORD *)&v45 + 1))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_200370);
      if ((swift_dynamicCast(&v43, &v44, (char *)&type metadata for Any + 8, v21, 6) & 1) != 0)
        sub_A5694((uint64_t)v43);
      goto LABEL_16;
    }
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v15);
  }
  sub_43D44((uint64_t)&v44);
LABEL_16:
  v22 = objc_msgSend(v1, "userInfo");
  v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v26 = v25;
  if (*(_QWORD *)(v23 + 16) && (v27 = sub_139E60(v24, v25), (v28 & 1) != 0))
  {
    sub_CD54(*(_QWORD *)(v23 + 56) + 32 * v27, (uint64_t)&v44);
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
  }
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v23);
  if (*((_QWORD *)&v45 + 1))
  {
    v29 = sub_F174(0, &qword_1FF5D8, NSError_ptr);
    if ((swift_dynamicCast(&v43, &v44, (char *)&type metadata for Any + 8, v29, 6) & 1) != 0)
    {
      v30 = v43;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
      v32 = *(_QWORD *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8));
      v31 = *(_QWORD *)((char *)&dword_18 + (v46 & 0xFFFFFFFFFFFFFF8));
      if (v32 >= v31 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
      v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
      specialized Array._endMutation()(v33);

    }
  }
  else
  {
    sub_43D44((uint64_t)&v44);
  }
  v34 = v46;
  if (v46 >> 62)
    goto LABEL_44;
  v35 = *(_QWORD *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(v46, 2);
  if (v35)
  {
    while (1)
    {
      v36 = (v34 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34)
          : *(id *)(v34 + 32);
      v37 = v36;
      if ((sub_CCE18() & 1) != 0)
        break;

      if (v35 != 1)
      {
        v38 = 5;
        while (1)
        {
          v39 = (v34 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38 - 4, v34)
              : *(id *)(v34 + 8 * v38);
          v37 = v39;
          v40 = v38 - 3;
          if (__OFADD__(v38 - 4, 1))
            break;
          if ((sub_CCE18() & 1) != 0)
            goto LABEL_31;

          ++v38;
          if (v40 == v35)
            goto LABEL_40;
        }
        __break(1u);
LABEL_44:
        v42 = v34 < 0 ? v34 : v34 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v34, 2);
        v35 = _CocoaArrayWrapper.endIndex.getter(v42);
        if (v35)
          continue;
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n(v34, 2);

    v13 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n(v34, 2);
    v13 = 0;
  }
  swift_bridgeObjectRelease(v34);
  return v13;
}

void sub_CD22C(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t);
  uint64_t v46;
  char *v47;
  void (*v48)(_QWORD *, uint64_t);
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD aBlock[5];
  uint64_t v72;
  char v73[32];

  v4 = type metadata accessor for DispatchTimeInterval(0);
  v68 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v55 - v8);
  v70 = type metadata accessor for DispatchTime(0);
  v66 = *(_QWORD *)(v70 - 8);
  v10 = __chkstk_darwin(v70);
  v65 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v69 = (char *)&v55 - v12;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v63 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  __chkstk_darwin(v13);
  v62 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = a1;
  v22 = (uint64_t *)&a1[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_failingPlayerPathTimers];
  swift_beginAccess(v22, v73, 0, 0);
  v67 = v22;
  v23 = *v22;
  v24 = a2;
  swift_bridgeObjectRetain(v23);
  v25 = sub_CAF7C(v24, v23);

  swift_bridgeObjectRelease(v23);
  swift_unknownObjectRelease(v25);
  if (!v25)
  {
    sub_F174(0, &qword_200348, OS_dispatch_source_ptr);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_8330(&qword_200350, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v57 = v4;
    v27 = v26;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_200358);
    v58 = v7;
    v29 = v28;
    v30 = sub_720E4((unint64_t *)&unk_200360, &qword_200358);
    v31 = dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v18, v27);
    v32 = v59;
    v33 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v21, *(_QWORD *)&v59[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_invalidationQueue], v31);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    ObjectType = swift_getObjectType(v33);
    v35 = swift_allocObject(&unk_1CF478, 24, 7);
    swift_unknownObjectWeakInit(v35 + 16, v32);
    v36 = swift_allocObject(&unk_1CF6F0, 32, 7);
    *(_QWORD *)(v36 + 16) = v35;
    *(_QWORD *)(v36 + 24) = v24;
    aBlock[4] = sub_CE3F4;
    v72 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_56;
    v37 = _Block_copy(aBlock);
    v59 = (char *)v24;
    v38 = swift_retain();
    static DispatchQoS.unspecified.getter(v38);
    v39 = v62;
    v56 = ObjectType;
    v40 = sub_CD840();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v17, v39, v37, ObjectType, v40);
    _Block_release(v37);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v39, v64);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v17, v61);
    v41 = v72;
    swift_release(v35);
    swift_release(v41);
    v42 = v65;
    static DispatchTime.now()(v43);
    *v9 = 5;
    v44 = v68;
    v45 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v68 + 104);
    v46 = v57;
    v45(v9, enum case for DispatchTimeInterval.seconds(_:), v57);
    v47 = v69;
    + infix(_:_:)(v42, v9);
    v48 = *(void (**)(_QWORD *, uint64_t))(v44 + 8);
    v48(v9, v46);
    v49 = *(void (**)(char *, uint64_t))(v66 + 8);
    v50 = v42;
    v51 = v70;
    v49(v50, v70);
    v45(v9, enum case for DispatchTimeInterval.never(_:), v46);
    v52 = v58;
    *v58 = 0;
    v45(v52, enum case for DispatchTimeInterval.nanoseconds(_:), v46);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v47, v9, v52, v56);
    v48(v52, v46);
    v48(v9, v46);
    v49(v47, v51);
    OS_dispatch_source.resume()();
    swift_beginAccess(v67, aBlock, 33, 0);
    v53 = v59;
    swift_unknownObjectRetain(v33);
    sub_CDEC0(v54, v53);
    swift_endAccess(aBlock);
    swift_unknownObjectRelease(v33);

  }
}

void sub_CD760(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    swift_beginAccess(Strong + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_failingPlayerPathTimers, v10, 33, 0);
    v6 = a2;
    v7 = sub_15AA00((unint64_t)v6);
    swift_endAccess(v10);

    swift_unknownObjectRelease(v7);
  }
  v8 = (void *)objc_opt_self(MPAVRoutingController);
  v9 = objc_msgSend(v8, "systemRoute");
  objc_msgSend(v8, "setActiveRoute:completion:", v9, 0);

}

double sub_CD840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v3 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
  *(_QWORD *)&result = dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1).n128_u64[0];
  return result;
}

uint64_t sub_CD8EC(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_isUpdating) = result;
  if (v2 == 1 && (result & 1) == 0)
  {
    v3 = v1;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator__needsUpdate) = 0;
    v4 = OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_updateBlocks;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_updateBlocks);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_updateBlocks));
      v7 = (_QWORD *)(v5 + 40);
      do
      {
        v9 = (void (*)(uint64_t))*(v7 - 1);
        v8 = *v7;
        v10 = swift_retain(*v7);
        v9(v10);
        swift_release(v8);
        v7 += 2;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease(v5);
      v5 = *(_QWORD *)(v3 + v4);
    }
    *(_QWORD *)(v3 + v4) = &_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v5);
  }
  return result;
}

double sub_CD9C0(void *a1)
{
  uint64_t v1;

  return sub_CC374(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_CD9CC(void *a1)
{
  uint64_t v1;

  sub_CC938(a1, *(void (**)(id))(v1 + 16));
}

void sub_CD9D4(uint64_t a1)
{
  uint64_t v1;

  sub_CBD28(a1, v1);
}

void sub_CD9DC(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v7;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_routingController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_routingController) = a1;
  v4 = a1;
  v7 = v4;
  if (!a1)
  {
    if (!v3)
      goto LABEL_10;
    goto LABEL_9;
  }
  if ((v4 != v3 || v3 == 0) && v3 != 0)
LABEL_9:
    objc_msgSend(v3, "setDiscoveryMode:", 0);
LABEL_10:

}

void sub_CDA58()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;

  v1 = objc_msgSend(v0, "playbackPlayerPath");
  v12 = objc_msgSend(v1, "route");

  if (!v12)
    goto LABEL_4;
  if ((objc_msgSend(v12, "isDeviceRoute") & 1) != 0)
  {

LABEL_4:
    sub_CD9DC(0);
    return;
  }
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_routingController])
  {
    v2 = v12;
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
    v3 = objc_allocWithZone((Class)MPAVRoutingController);
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "initWithDataSource:name:", v10, v4);

    v6 = v5;
    sub_CD9DC(v5);
    v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v8 = objc_msgSend(v7, "applicationState");

    if (v8)
      v9 = 0;
    else
      v9 = 2;
    objc_msgSend(v6, "setDiscoveryMode:", v9, v10);

    v2 = v11;
  }

}

void PlayerPathCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("NowPlayingUI.PlayerPathCoordinator", 34, "init()", 6, 0);
  __break(1u);
}

id PlayerPathCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayerPathCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_CDD54(uint64_t a1)
{
  uint64_t v1;

  sub_CBE70(a1, v1, 2);
}

void sub_CDD70(uint64_t a1)
{
  uint64_t v1;

  sub_CBE70(a1, v1, 0);
}

uint64_t sub_CDD8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_CDDB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CDDD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CDE00()
{
  uint64_t v0;

  return sub_CCB98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_CDE08()
{
  uint64_t v0;

  sub_CD22C(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

const char *keypath_get_selector_metadataPlayerPath()
{
  return "metadataPlayerPath";
}

id sub_CDE1C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "metadataPlayerPath");
  *a2 = result;
  return result;
}

id sub_CDE54(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setMetadataPlayerPath:", *a1);
}

const char *keypath_get_selector_playbackPlayerPath()
{
  return "playbackPlayerPath";
}

id sub_CDE74@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "playbackPlayerPath");
  *a2 = result;
  return result;
}

id sub_CDEAC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setPlaybackPlayerPath:", *a1);
}

void sub_CDEC0(uint64_t a1, void *a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v10;
  Swift::Int v11;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  v8 = __CocoaDictionary.count.getter(v7);
  if (!__OFADD__(v8, 1))
  {
    v6 = sub_EF34(v7, v8 + 1);
    *v3 = v6;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_13DDFC(a1, a2, isUniquelyReferenced_nonNull_native);
    v10 = *v3;
    *v3 = v11;
    swift_bridgeObjectRelease(v10);
    return;
  }
  __break(1u);
}

unint64_t sub_CDF60(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&qword_203EE0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = sub_13A05C(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain(v4);
    result = sub_13A05C(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_CE05C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _OWORD *v11;
  char v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&qword_200288);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 40);
  result = sub_13A0FC(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    v8 = v3[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    v3[2] = v10;
    if (!--v1)
      goto LABEL_8;
    v11 = (_OWORD *)((char *)v7 + 24);
    v4 = *((_BYTE *)v7 - 8);
    v13 = *v7;
    swift_retain();
    result = sub_13A0FC(v4);
    v7 = v11;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_CE160(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_CE19C(uint64_t a1)
{
  sub_CE1D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_CE1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  v5 = a2;
  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v5 = a4;
  }
  return swift_bridgeObjectRetain(v5);
}

unint64_t sub_CE1FC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_203F10);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_13A05C(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_13A05C(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

double sub_CE2F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _BYTE v16[24];

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_metadataPlayerPath);
  swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_metadataPlayerPath, v16, 1, 0);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

  v7 = (void *)_MPAVRouteConnectionDidInvalidateNotification;
  v8 = *v4;
  v9 = swift_allocObject(&unk_1CF478, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v2);
  v10 = type metadata accessor for NotificationObserver();
  swift_allocObject(v10, 56, 7);
  v11 = v7;
  v12 = v8;
  v13 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v11, (uint64_t)v8, 1, (uint64_t)sub_CE3E8, v9);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playerPathInvalidationObserver);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI21PlayerPathCoordinator_playerPathInvalidationObserver) = v13;
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

void sub_CE3E8(uint64_t a1)
{
  uint64_t v1;

  sub_CBFC8(a1, v1);
}

void sub_CE3F4()
{
  uint64_t v0;

  sub_CD760(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_CE3FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_CE428()
{
  uint64_t v0;

  sub_CC624(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_CE438()
{
  uint64_t v0;

  sub_CBC84(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_CE4AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  CGFloat x;
  CGFloat y;
  CGFloat height;
  double width;
  CGFloat v19;
  CGFloat v20;
  int v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double MaxY;
  double v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  int v36;
  CGFloat v37;
  char *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  CGFloat v53;
  double v54;
  double v55;
  double v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  double v72;
  double v73;
  double v74;
  double v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat rect;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat MinY;
  CGFloat v86;
  CGFloat v87;
  CGFloat MinX;
  CGFloat v89;
  CGFloat v90;
  double MaxX;
  CGFloat v92;
  double v93;
  CGRect v94;
  double v95;
  double v96;
  double v97;
  double v98;
  char v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;

  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
    v63 = *(_QWORD *)(v1 + 16);
    if (v63)
    {
      v62 = v1 + 32;
      swift_bridgeObjectRetain(v1);
      v2 = 0;
      v3 = 0.0;
      v61 = v1;
      while (v2 < *(_QWORD *)(v1 + 16))
      {
        v8 = *(_QWORD *)(v62 + 8 * v2);
        v9 = *(_QWORD *)(v8 + 16);
        if (v9)
        {
          swift_bridgeObjectRetain(*(_QWORD *)(v62 + 8 * v2));
          v10 = *(_QWORD *)(v8 + 32);
          v11 = *(_QWORD *)(v8 + 40);
          v12 = *(_QWORD *)(v8 + 48);
          v13 = *(_BYTE *)(v8 + 56);
          swift_unknownObjectRetain(v10);
          sub_CEA0C(v14, v11, v12, v13, (uint64_t)&v94);
          x = v94.origin.x;
          y = v94.origin.y;
          width = v94.size.width;
          height = v94.size.height;
          v20 = v95;
          v19 = v96;
          v66 = v97;
          v67 = v98;
          v64 = v95;
          v65 = v96;
          if ((v99 & 1) != 0)
          {
            v21 = 1;
            v20 = v94.origin.x;
            v19 = v94.origin.y;
            v92 = v94.size.width;
            v22 = v94.size.height;
          }
          else
          {
            v21 = 0;
            v92 = v97;
            v22 = v98;
          }
          v70 = v94.origin.y;
          v71 = v94.origin.x;
          v23 = v94.origin.x;
          v24 = v94.origin.y;
          v25 = v94.size.width;
          v26 = v94.size.height;
          MinX = CGRectGetMinX(*(CGRect *)(&height - 3));
          v107.origin.x = x;
          v107.origin.y = y;
          v107.size.width = width;
          v107.size.height = v26;
          MinY = CGRectGetMinY(v107);
          v108.origin.x = x;
          v108.origin.y = y;
          v108.size.width = width;
          v108.size.height = v26;
          v27 = CGRectGetWidth(v108);
          v109.origin.x = v20;
          v109.origin.y = v19;
          v109.size.width = v92;
          v109.size.height = v22;
          v28 = CGRectGetWidth(v109);
          if (v27 <= v28)
            v27 = v28;
          v110.origin.x = v20;
          v110.origin.y = v19;
          v110.size.width = v92;
          v29 = v71;
          v110.size.height = v22;
          MaxY = CGRectGetMaxY(v110);
          v111.origin.x = v71;
          v111.origin.y = v70;
          v111.size.width = width;
          v111.size.height = v26;
          v112.size.height = MaxY - CGRectGetMinY(v111);
          v112.origin.y = MinY;
          v112.origin.x = MinX;
          v112.size.width = v27;
          v31 = CGRectGetMaxY(v112);
          swift_unknownObjectRelease(v10);
          if (v3 <= v31)
            v3 = v31;
          v32 = v9 - 1;
          v68 = v26;
          v69 = width;
          if (v9 == 1)
          {
            v93 = v3;
            v33 = v64;
            v34 = v65;
            v35 = v66;
            v75 = v67;
            v36 = v21;
            v37 = v70;
          }
          else
          {
            v38 = (char *)(v8 + 88);
            do
            {
              v43 = *((_QWORD *)v38 - 3);
              v44 = *((_QWORD *)v38 - 2);
              v45 = *((_QWORD *)v38 - 1);
              v46 = *v38;
              swift_unknownObjectRetain(v43);
              sub_CEA0C(v47, v44, v45, v46, (uint64_t)&v94);
              v29 = v94.origin.x;
              v48 = v94.origin.y;
              width = v94.size.width;
              v49 = v94.size.height;
              v73 = v96;
              v74 = v95;
              v75 = v98;
              v72 = v97;
              if ((v99 & 1) != 0)
              {
                v36 = 1;
                v86 = v94.origin.y;
                v89 = v94.origin.x;
                v80 = v94.size.height;
                v82 = v94.size.width;
              }
              else
              {
                v36 = 0;
                v86 = v96;
                v89 = v95;
                v80 = v98;
                v82 = v97;
              }
              v76 = v94.origin.y;
              rect = CGRectGetMinX(v94);
              v113.origin.x = v29;
              v113.origin.y = v48;
              v113.size.width = width;
              v113.size.height = v49;
              v77 = CGRectGetMinY(v113);
              v114.origin.x = v29;
              v114.origin.y = v48;
              v114.size.width = width;
              v114.size.height = v49;
              v39 = CGRectGetWidth(v114);
              v115.origin.x = v89;
              v115.origin.y = v86;
              v115.size.width = v82;
              v115.size.height = v80;
              v40 = CGRectGetWidth(v115);
              if (v39 <= v40)
                v39 = v40;
              v116.origin.x = v89;
              v116.origin.y = v86;
              v116.size.width = v82;
              v116.size.height = v80;
              v37 = v76;
              v41 = CGRectGetMaxY(v116);
              v117.origin.x = v29;
              v117.origin.y = v76;
              v117.size.width = width;
              v117.size.height = v49;
              v118.size.height = v41 - CGRectGetMinY(v117);
              v118.origin.y = v77;
              v118.origin.x = rect;
              v118.size.width = v39;
              v42 = CGRectGetMaxY(v118);
              swift_unknownObjectRelease(v43);
              if (v3 <= v42)
                v3 = v42;
              v38 += 32;
              --v32;
            }
            while (v32);
            v93 = v3;
            v26 = v49;
            v34 = v73;
            v33 = v74;
            v35 = v72;
          }
          swift_bridgeObjectRelease(v8);
          if (v36)
            v50 = v29;
          else
            v50 = v33;
          if (v36)
            v51 = v37;
          else
            v51 = v34;
          v83 = v51;
          if (v36)
            v52 = width;
          else
            v52 = v35;
          if (v36)
            v53 = v26;
          else
            v53 = v75;
          v119.origin.x = v29;
          v119.origin.y = v37;
          v119.size.width = width;
          v119.size.height = v26;
          v90 = CGRectGetMinX(v119);
          v120.origin.x = v29;
          v120.origin.y = v37;
          v120.size.width = width;
          v120.size.height = v26;
          v87 = CGRectGetMinY(v120);
          v121.origin.x = v29;
          v121.origin.y = v37;
          v121.size.width = width;
          v121.size.height = v26;
          v54 = CGRectGetWidth(v121);
          v122.origin.x = v50;
          v122.origin.y = v83;
          v122.size.width = v52;
          v122.size.height = v53;
          v55 = CGRectGetWidth(v122);
          if (v54 <= v55)
            v54 = v55;
          v123.origin.x = v50;
          v123.origin.y = v83;
          v123.size.width = v52;
          v123.size.height = v53;
          v56 = CGRectGetMaxY(v123);
          v124.origin.x = v29;
          v124.origin.y = v37;
          v124.size.width = width;
          v124.size.height = v26;
          v125.size.height = v56 - CGRectGetMinY(v124);
          v125.origin.y = v87;
          v125.origin.x = v90;
          v125.size.width = v54;
          MaxX = CGRectGetMaxX(v125);
          v57 = v71;
          v58 = v70;
          v59 = v69;
          v60 = v68;
          v1 = v61;
          if ((v21 & 1) == 0)
          {
            v57 = v64;
            v58 = v65;
            v59 = v66;
            v60 = v67;
          }
          v79 = v60;
          v100.origin.x = v71;
          v100.origin.y = v70;
          v100.size.width = v69;
          v100.size.height = v68;
          v84 = CGRectGetMinX(v100);
          v101.origin.x = v71;
          v101.origin.y = v70;
          v101.size.width = v69;
          v101.size.height = v68;
          v81 = CGRectGetMinY(v101);
          v102.origin.x = v71;
          v102.origin.y = v70;
          v102.size.width = v69;
          v102.size.height = v68;
          v4 = CGRectGetWidth(v102);
          v103.origin.x = v57;
          v103.origin.y = v58;
          v103.size.width = v59;
          v103.size.height = v79;
          v5 = CGRectGetWidth(v103);
          if (v4 <= v5)
            v4 = v5;
          v104.origin.x = v57;
          v104.origin.y = v58;
          v104.size.width = v59;
          v104.size.height = v79;
          v6 = CGRectGetMaxY(v104);
          v105.origin.x = v71;
          v105.origin.y = v70;
          v105.size.width = v69;
          v105.size.height = v68;
          v106.size.height = v6 - CGRectGetMinY(v105);
          v106.origin.y = v81;
          v106.origin.x = v84;
          v106.size.width = v4;
          v3 = v93;
          v7 = MaxX - CGRectGetMinX(v106);
        }
        else
        {
          v7 = 0.0;
        }
        if (++v2 == v63)
        {
          swift_bridgeObjectRelease(v1);
          goto LABEL_49;
        }
      }
      __break(1u);
    }
    else
    {
      v3 = 0.0;
      v7 = 0.0;
LABEL_49:
      *(double *)(v0 + 48) = v7;
      *(double *)(v0 + 56) = v3;
      *(_BYTE *)(v0 + 64) = 0;
    }
  }
}

void sub_CEA0C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  CGFloat MaxX;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  uint64_t v20;
  CGFloat v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  double v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  unsigned __int8 *v40;
  uint64_t v41;
  void *v42;
  int v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  void *v48;
  id v49;
  void *v50;
  double v51;
  uint64_t v52;
  char v53;
  __n128 v54;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  double v63;
  double v64;
  double MaxY;
  CGFloat v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  __n128 v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  CGFloat v84;
  uint64_t v85;
  uint64_t v86;
  double *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  CGFloat v92;
  void *v93;
  void *v94;
  uint64_t v95;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v97;
  void *v98;
  void *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  double v115;
  double v116;
  _QWORD *v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  CGFloat rect;
  uint64_t ObjectType;
  CGFloat v126;
  CGFloat v127;
  uint64_t v128;
  CGFloat MinY;
  CGFloat v130;
  double v131;
  CGFloat MinX;
  int v133;
  double v134;
  uint64_t v135;
  int v136;
  __int128 v137[2];
  uint64_t v138;
  _QWORD v139[2];
  char v140[24];
  char v141[24];
  CGRect v142;
  double v143;
  double v144;
  double v145;
  double v146;
  char v147;
  CGRect v148;
  double v149;
  double v150;
  double v151;
  double v152;
  char v153;
  _QWORD v154[3];
  uint64_t v155;
  CGFloat v156;
  CGFloat v157;
  CGFloat v158;
  uint64_t v159;
  char v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;

  v136 = a4 & 1;
  v9 = (_QWORD *)(v5 + 72);
  swift_beginAccess(v5 + 72, v141, 0, 0);
  v123 = v5;
  v10 = *(_QWORD *)(v5 + 72);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v10);
    v11 = sub_139FB8(a1, a2, a3, v136);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(v10 + 56) + 72 * v11;
      MaxX = *(double *)v13;
      v15 = *(double *)(v13 + 8);
      v17 = *(double *)(v13 + 16);
      v16 = *(double *)(v13 + 24);
      v18 = *(double *)(v13 + 32);
      v19 = *(double *)(v13 + 40);
      v21 = *(double *)(v13 + 48);
      v20 = *(_QWORD *)(v13 + 56);
      v22 = *(_BYTE *)(v13 + 64);
      swift_unknownObjectRelease(a1);
      swift_bridgeObjectRelease(v10);
LABEL_78:
      *(CGFloat *)a5 = MaxX;
      *(double *)(a5 + 8) = v15;
      *(CGFloat *)(a5 + 16) = v17;
      *(CGFloat *)(a5 + 24) = v16;
      *(CGFloat *)(a5 + 32) = v18;
      *(CGFloat *)(a5 + 40) = v19;
      *(CGFloat *)(a5 + 48) = v21;
      *(_QWORD *)(a5 + 56) = v20;
      *(_BYTE *)(a5 + 64) = v22 & 1;
      return;
    }
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease(v10);
  }
  v23 = *(_QWORD *)(v123 + 16);
  v24 = *(_QWORD *)(v23 + 16);
  v121 = *(_QWORD *)(v24 + 16);
  if (!v121)
  {
    v26 = 0;
    v18 = 0.0;
    v19 = 0.0;
    v22 = 1;
    v21 = 0.0;
    v20 = 0;
    v16 = 0.0;
    v17 = 0.0;
    v15 = 0.0;
    MaxX = 0.0;
LABEL_77:
    *(CGFloat *)v154 = MaxX;
    *(double *)&v154[1] = v15;
    *(CGFloat *)&v154[2] = v17;
    v155 = *(_QWORD *)&v16;
    v156 = v18;
    v157 = v19;
    v158 = v21;
    v159 = v20;
    v160 = v22 & 1;
    swift_beginAccess(v9, v137, 33, 0);
    swift_unknownObjectRetain(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    v139[0] = *v9;
    *v9 = 0x8000000000000000;
    sub_13DF5C((uint64_t)v154, a1, a2, a3, v136, isUniquelyReferenced_nonNull_native);
    v97 = *v9;
    *v9 = v139[0];
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease(v97);
    swift_endAccess(v137);
    swift_unknownObjectRelease(v26);
    goto LABEL_78;
  }
  v100 = v9;
  v102 = a5;
  v25 = (_QWORD *)(v23 + 56);
  v120 = v24 + 32;
  swift_bridgeObjectRetain(v24);
  v117 = v25;
  swift_beginAccess(v25, v140, 0, 0);
  v26 = 0;
  v27 = 0;
  v28 = 0.0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v18 = 0.0;
  v101 = a3;
  v32 = *(double *)&a3;
  v103 = 1;
  v19 = 0.0;
  v21 = 0.0;
  v20 = 0;
  v16 = 0.0;
  v17 = 0.0;
  v131 = 0.0;
  MaxX = 0.0;
  v119 = v24;
  v104 = *(double *)&a3;
  while (2)
  {
    if (v31 < *(_QWORD *)(v24 + 16))
    {
      v133 = v29;
      v134 = v28;
      v135 = v27;
      v33 = *(_QWORD *)(v120 + 8 * v31);
      v34 = *(_QWORD *)(v33 + 16);
      if (!v34)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v120 + 8 * v31));
        swift_bridgeObjectRelease(v30);
        goto LABEL_72;
      }
      v128 = v30;
      v122 = v31;
      ObjectType = swift_getObjectType(a1);
      v35 = a1;
      v36 = *(void **)(v33 + 32);
      v27 = *(_QWORD *)(v33 + 40);
      v28 = *(double *)(v33 + 48);
      v29 = *(unsigned __int8 *)(v33 + 56);
      swift_bridgeObjectRetain(v33);
      v37 = v36;
      v38 = v35;
      if (v36 == v35)
      {
        if (!v136)
        {
          swift_bridgeObjectRetain(v33);
          swift_unknownObjectRetain(v35);
          if ((v29 & 1) == 0 && (static CGFloat.==~ infix(_:_:)(v32, v28) & 1) != 0)
          {
            a1 = v35;
            v45 = v128;
LABEL_28:
            v46 = ObjectType;
            v47 = swift_bridgeObjectRelease(v33);
            goto LABEL_33;
          }
          goto LABEL_13;
        }
        v37 = v35;
        if ((v29 & 1) != 0)
        {
          v45 = v128;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRetain(v33);
      swift_unknownObjectRetain(v37);
LABEL_13:
      swift_unknownObjectRelease(v26);
      swift_bridgeObjectRelease(v128);
      v39 = v34 - 1;
      if (v34 == 1)
      {
LABEL_7:
        swift_bridgeObjectRelease(v33);
        v26 = v36;
        a1 = v38;
        v24 = v119;
        v31 = v122;
        goto LABEL_8;
      }
      v40 = (unsigned __int8 *)(v33 + 88);
      v26 = v36;
      v41 = v27;
      while (1)
      {
        v43 = v29;
        v44 = v28;
        v36 = (void *)*((_QWORD *)v40 - 3);
        v27 = *((_QWORD *)v40 - 2);
        v28 = *((double *)v40 - 1);
        v29 = *v40;
        v42 = v36;
        if (v36 != v38)
          goto LABEL_16;
        if (v136)
          break;
        v133 = v43;
        v134 = v44;
        v135 = v41;
        swift_bridgeObjectRetain(v33);
        swift_unknownObjectRetain(v38);
        if ((v29 & 1) == 0 && (static CGFloat.==~ infix(_:_:)(v32, v28) & 1) != 0)
        {
          v45 = v33;
          a1 = v38;
          goto LABEL_28;
        }
LABEL_17:
        swift_bridgeObjectRelease(v33);
        swift_unknownObjectRelease(v26);
        v40 += 32;
        v26 = v36;
        v41 = v27;
        if (!--v39)
          goto LABEL_7;
      }
      v42 = v38;
      if ((v29 & 1) != 0)
      {
        v133 = v43;
        v134 = v44;
        v135 = v41;
        v45 = v33;
LABEL_32:
        a1 = v38;
        v47 = swift_unknownObjectRetain(v38);
        v46 = ObjectType;
LABEL_33:
        v48 = (void *)(*(uint64_t (**)(uint64_t, __n128))(a2 + 8))(v46, v47);
        v49 = objc_msgSend(v48, "collectionViewLayout");
        v50 = v49;
        if ((*(_BYTE *)(v123 + 65) & 1) == 0)
          objc_msgSend(v49, "prepareLayout");
        objc_msgSend(v50, "collectionViewContentSize", v98, v99);
        v16 = v51;
        v17 = v32;
        if (v136)
          v17 = *(double *)(v123 + 24);
        v131 = 0.0;
        if (!v45)
          goto LABEL_56;
        v52 = swift_bridgeObjectRetain(v45);
        v53 = sub_15970(v52, v33);
        swift_bridgeObjectRelease(v45);
        if ((v53 & 1) != 0 && v26)
        {
          v105 = v17;
          v107 = v16;
          v109 = v21;
          v111 = v19;
          v113 = v20;
          v115 = v18;
          swift_unknownObjectRetain(v26);
          v54 = swift_bridgeObjectRelease(v45);
          sub_CEA0C(&v142, v54);
          x = v142.origin.x;
          y = v142.origin.y;
          width = v142.size.width;
          height = v142.size.height;
          v59 = v142.origin.x;
          v60 = v142.origin.y;
          v61 = v142.size.width;
          v62 = v142.size.height;
          v31 = v122;
          if ((v147 & 1) == 0)
          {
            v61 = v145;
            v62 = v146;
            v59 = v143;
            v60 = v144;
          }
          v126 = v62;
          MinX = CGRectGetMinX(v142);
          v161.origin.x = x;
          v161.origin.y = y;
          v161.size.width = width;
          v161.size.height = height;
          MinY = CGRectGetMinY(v161);
          v162.origin.x = x;
          v162.origin.y = y;
          v162.size.width = width;
          v162.size.height = height;
          v63 = CGRectGetWidth(v162);
          v163.origin.x = v59;
          v163.origin.y = v60;
          v163.size.width = v61;
          v163.size.height = v126;
          v64 = CGRectGetWidth(v163);
          if (v63 <= v64)
            v63 = v64;
          v164.origin.x = v59;
          v164.origin.y = v60;
          v164.size.width = v61;
          v164.size.height = v126;
          MaxY = CGRectGetMaxY(v164);
          v165.origin.x = x;
          v165.origin.y = y;
          v165.size.width = width;
          v165.size.height = height;
          v66 = MaxY - CGRectGetMinY(v165);
          v166.origin.x = MinX;
          v166.origin.y = MinY;
          v166.size.width = v63;
          v166.size.height = v66;
          MaxX = CGRectGetMaxX(v166);
          v167.origin.x = MinX;
          v167.origin.y = MinY;
          v167.size.width = v63;
          v167.size.height = v66;
          v131 = CGRectGetMinY(v167);
          swift_unknownObjectRelease(v26);
          v20 = v113;
          v18 = v115;
          v21 = v109;
          v19 = v111;
          v17 = v105;
          v16 = v107;
          v32 = v104;
          goto LABEL_57;
        }
        v67 = *(_QWORD *)(v45 + 16);
        if (!v67)
        {
          swift_bridgeObjectRelease(v45);
LABEL_56:
          MaxX = 0.0;
          v31 = v122;
          goto LABEL_57;
        }
        v98 = v48;
        v99 = v50;
        v106 = v17;
        v108 = v16;
        v110 = v21;
        v112 = v19;
        v114 = v20;
        v116 = v18;
        v68 = v45;
        v69 = v45 + 56;
        v131 = 0.0;
        do
        {
          v75 = *(_QWORD *)(v69 - 24);
          v76 = swift_unknownObjectRetain(v75);
          sub_CEA0C(&v148, v76);
          v78 = v148.origin.x;
          v77 = v148.origin.y;
          v79 = v148.size.width;
          v80 = v148.size.height;
          v81 = v148.origin.x;
          v82 = v148.origin.y;
          v83 = v148.size.width;
          v84 = v148.size.height;
          if ((v153 & 1) == 0)
          {
            v83 = v151;
            v84 = v152;
            v81 = v149;
            v82 = v150;
          }
          rect = v148.origin.x;
          v130 = CGRectGetMinX(v148);
          v168.origin.x = v78;
          v168.origin.y = v77;
          v168.size.width = v79;
          v168.size.height = v80;
          v127 = CGRectGetMinY(v168);
          v169.origin.x = v78;
          v169.origin.y = v77;
          v169.size.width = v79;
          v169.size.height = v80;
          v70 = CGRectGetWidth(v169);
          v170.origin.x = v81;
          v170.origin.y = v82;
          v170.size.width = v83;
          v170.size.height = v84;
          v71 = CGRectGetWidth(v170);
          if (v70 <= v71)
            v70 = v71;
          v171.origin.x = v81;
          v171.origin.y = v82;
          v171.size.width = v83;
          v171.size.height = v84;
          v72 = CGRectGetMaxY(v171);
          v172.origin.x = rect;
          v172.origin.y = v77;
          v172.size.width = v79;
          v172.size.height = v80;
          v173.size.height = v72 - CGRectGetMinY(v172);
          v173.origin.y = v127;
          v173.origin.x = v130;
          v173.size.width = v70;
          v73 = CGRectGetMaxY(v173);
          swift_unknownObjectRelease(v75);
          v74 = v131;
          if (v131 <= v73)
            v74 = v73;
          v131 = v74;
          v69 += 32;
          --v67;
        }
        while (v67);
        swift_bridgeObjectRelease(v68);
        MaxX = 0.0;
        a1 = v38;
        v20 = v114;
        v18 = v116;
        v21 = v110;
        v19 = v112;
        v17 = v106;
        v16 = v108;
        v31 = v122;
        v32 = v104;
        v48 = v98;
LABEL_57:
        v85 = *v117;
        v86 = *(_QWORD *)(*v117 + 16);
        if (v86)
        {
          swift_bridgeObjectRetain(*v117);
          v87 = (double *)(v85 + 56);
          while (1)
          {
            if (*((void **)v87 - 3) == a1)
            {
              if ((*(_BYTE *)v87 & 1) != 0)
              {
                if (v136)
                  goto LABEL_65;
              }
              else if (!v136 && (static CGFloat.==~ infix(_:_:)(*(v87 - 1), v32) & 1) != 0)
              {
LABEL_65:
                swift_bridgeObjectRelease(v85);
                v139[0] = a1;
                v139[1] = a2;
                swift_unknownObjectRetain(a1);
                v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FF5B0);
                v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2004B0);
                if ((swift_dynamicCast(v137, v139, v88, v89, 6) & 1) != 0)
                {
                  v90 = v50;
                  sub_27890(v137, (uint64_t)v154);
                  v91 = v155;
                  v92 = v156;
                  __swift_project_boxed_opaque_existential_1(v154, v155);
                  v93 = (void *)(*(uint64_t (**)(uint64_t, CGFloat))(*(_QWORD *)&v92 + 8))(v91, COERCE_CGFLOAT(*(_QWORD *)&v92));
                  if (v93)
                  {
                    v94 = v93;
                    v174.origin.x = MaxX;
                    v174.origin.y = v131;
                    v174.size.width = v17;
                    v174.size.height = v16;
                    objc_msgSend(v93, "sizeThatFits:", CGRectGetWidth(v174), 1.79769313e308);
                    v20 = v95;
                    v175.origin.x = MaxX;
                    v175.origin.y = v131;
                    v175.size.width = v17;
                    v175.size.height = v16;
                    v18 = CGRectGetMinX(v175);
                    v176.origin.x = MaxX;
                    v176.origin.y = v131;
                    v176.size.width = v17;
                    v176.size.height = v16;
                    v19 = CGRectGetMaxY(v176);
                    v177.origin.x = MaxX;
                    v177.origin.y = v131;
                    v177.size.width = v17;
                    v177.size.height = v16;
                    v21 = CGRectGetWidth(v177);
                    swift_unknownObjectRelease(a1);

                    __swift_destroy_boxed_opaque_existential_0(v154);
                    v103 = 0;
                  }
                  else
                  {
                    swift_unknownObjectRelease(a1);

                    __swift_destroy_boxed_opaque_existential_0(v154);
                  }
                }
                else
                {
                  v138 = 0;
                  memset(v137, 0, sizeof(v137));

                  swift_unknownObjectRelease(a1);
                  sub_CF7D8((uint64_t)v137);
                }
                goto LABEL_71;
              }
            }
            v87 += 4;
            if (!--v86)
            {
              swift_unknownObjectRelease(a1);

              swift_bridgeObjectRelease(v85);
              goto LABEL_70;
            }
          }
        }
        swift_unknownObjectRelease(a1);

LABEL_70:
LABEL_71:
        v24 = v119;
LABEL_72:
        v28 = v134;
        v27 = v135;
        v29 = v133;
LABEL_8:
        ++v31;
        v30 = v33;
        if (v31 == v121)
        {
          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v24);
          a3 = v101;
          a5 = v102;
          v9 = v100;
          v22 = v103;
          v15 = v131;
          goto LABEL_77;
        }
        continue;
      }
LABEL_16:
      swift_bridgeObjectRetain(v33);
      swift_unknownObjectRetain(v42);
      goto LABEL_17;
    }
    break;
  }
  __break(1u);
}

_QWORD *sub_CF428(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v17;
  uint64_t v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v28;
  double v29;
  double MinY;
  double v31;
  double MinX;
  CGFloat v33;
  _BYTE v34[32];
  char v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[7];
  _BYTE v39[7];
  CGRect v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  *(double *)&v34[16] = a3;
  *(double *)&v34[24] = a4;
  *(double *)v34 = a1;
  *(double *)&v34[8] = a2;
  v4 = sub_94A98();
  v5 = v4[2];
  v28 = v4;
  if (v5)
  {
    v6 = (char *)(v4 + 7);
    v7 = _swiftEmptyArrayStorage;
    do
    {
      v8 = *((_QWORD *)v6 - 3);
      v9 = *((_QWORD *)v6 - 2);
      v10 = *((_QWORD *)v6 - 1);
      v11 = *v6;
      swift_unknownObjectRetain(v8);
      sub_CEA0C(v12, v9, v10, v11, (uint64_t)&v40);
      x = v40.origin.x;
      y = v40.origin.y;
      width = v40.size.width;
      height = v40.size.height;
      v18 = v41;
      v17 = v42;
      v36 = v44;
      v37 = v43;
      v35 = v45;
      v46 = CGRectIntersection(v40, *(CGRect *)v34);
      v19 = v46.origin.x;
      v20 = v46.origin.y;
      v21 = v46.size.width;
      v22 = v46.size.height;
      if (CGRectIsNull(v46))
      {
        swift_unknownObjectRelease(v8);
      }
      else
      {
        v47.origin.x = v19;
        v47.origin.y = v20;
        v47.size.width = v21;
        v47.size.height = v22;
        MinX = CGRectGetMinX(v47);
        v48.origin.x = x;
        v48.origin.y = y;
        v48.size.width = width;
        v48.size.height = height;
        v31 = CGRectGetMinX(v48);
        v49.origin.x = v19;
        v49.origin.y = v20;
        v49.size.width = v21;
        v49.size.height = v22;
        MinY = CGRectGetMinY(v49);
        v50.origin.x = x;
        v50.origin.y = y;
        v50.size.width = width;
        v50.size.height = height;
        v29 = CGRectGetMinY(v50);
        v51.origin.x = v19;
        v51.origin.y = v20;
        v51.size.width = v21;
        v51.size.height = v22;
        v33 = CGRectGetWidth(v51);
        v52.origin.x = v19;
        v52.origin.y = v20;
        v52.size.width = v21;
        v52.size.height = v22;
        v23 = CGRectGetHeight(v52);
        swift_unknownObjectRetain(v8);
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
          v7 = sub_135828(0, v7[2] + 1, 1, v7);
        v25 = v7[2];
        v24 = v7[3];
        if (v25 >= v24 >> 1)
          v7 = sub_135828((_QWORD *)(v24 > 1), v25 + 1, 1, v7);
        v7[2] = v25 + 1;
        v26 = &v7[17 * v25];
        v26[4] = v8;
        v26[5] = v9;
        v26[6] = v10;
        *((_BYTE *)v26 + 56) = v11;
        *((_DWORD *)v26 + 15) = *(_DWORD *)&v39[3];
        *(_DWORD *)((char *)v26 + 57) = *(_DWORD *)v39;
        *((CGFloat *)v26 + 8) = x;
        *((CGFloat *)v26 + 9) = y;
        *((CGFloat *)v26 + 10) = width;
        *((CGFloat *)v26 + 11) = height;
        v26[12] = v18;
        v26[13] = v17;
        v26[14] = v37;
        v26[15] = v36;
        *((_BYTE *)v26 + 128) = v35;
        *((_DWORD *)v26 + 33) = *(_DWORD *)&v38[3];
        *(_DWORD *)((char *)v26 + 129) = *(_DWORD *)v38;
        *((double *)v26 + 17) = MinX - v31;
        *((double *)v26 + 18) = MinY - v29;
        *((CGFloat *)v26 + 19) = v33;
        *((CGFloat *)v26 + 20) = v23;
        swift_unknownObjectRelease(v8);
      }
      v6 += 32;
      --v5;
    }
    while (v5);
  }
  else
  {
    v7 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v28);
  return v7;
}

uint64_t sub_CF6F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for CompositeCollectionViewLayoutData()
{
  return objc_opt_self(_TtC12NowPlayingUI33CompositeCollectionViewLayoutData);
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CompositeComponentCollectionViewContentFrames(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CompositeComponentCollectionViewContentFrames(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 65) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CompositeComponentCollectionViewContentFrames()
{
  return &type metadata for CompositeComponentCollectionViewContentFrames;
}

uint64_t sub_CF7D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2004B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for CompositeComponentCollectionViewLayoutMetrics(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v4 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  v5 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(__int128 *)((char *)a2 + 104);
  *(_OWORD *)(a1 + 120) = *(__int128 *)((char *)a2 + 120);
  *(_OWORD *)(a1 + 104) = v6;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for CompositeComponentCollectionViewLayoutMetrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = v7;
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v8 = *((_OWORD *)a2 + 4);
  v9 = *((_OWORD *)a2 + 5);
  *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
  *((_OWORD *)a1 + 4) = v8;
  *((_OWORD *)a1 + 5) = v9;
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CompositeComponentCollectionViewLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeComponentCollectionViewLayoutMetrics(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositeComponentCollectionViewLayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositeComponentCollectionViewLayoutMetrics()
{
  return &type metadata for CompositeComponentCollectionViewLayoutMetrics;
}

uint64_t sub_CFA80@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171CD8);
  v7 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_retain();
}

double sub_CFB10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_171CD8);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  swift_retain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_D500C, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_CFBC8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_171C90);
  v2 = swift_getKeyPath(&unk_171CB8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

_QWORD *sub_CFC38(uint64_t a1, uint64_t *a2, __n128 a3)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;

  if ((unint64_t)a1 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v4)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v4, a3);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    v7 = a1 & 0xC000000000000001;
    while (v4 != v6)
    {
      if (v7)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
        v11 = v8;
      }
      else
      {
        v11 = *(_QWORD *)(a1 + 8 * v6 + 32);
        v8 = swift_retain();
      }
      v12 = *(_QWORD *)(v11 + 16);
      if (v12 >> 62 == 1)
      {
        v13 = *(_QWORD *)(v12 + 16);
        v14 = swift_allocObject(&unk_1CFBA0, 24, 7);
        *(_QWORD *)(v14 + 16) = v13;
        v15 = *a2;
        if (*(_QWORD *)(*a2 + 16))
        {
          v16 = v12 & 0x3FFFFFFFFFFFFFFFLL;
          sub_D15C(v13);
          swift_retain();
          v17 = sub_13A254(v14 | 0x4000000000000000);
          if ((v18 & 1) != 0)
          {
            v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v17);
            swift_retain();
            swift_release(v14);
            v20 = *(_QWORD *)(v19 + 16);
            if (v20 >> 62 == 1)
            {
              v21 = *(_BYTE *)(v16 + 32);
              *(_QWORD *)(v20 + 24) = *(_QWORD *)(v16 + 24);
              *(_BYTE *)(v20 + 32) = v21;
              v22 = *(_BYTE *)(v16 + 48);
              *(_QWORD *)(v20 + 40) = *(_QWORD *)(v16 + 40);
              *(_BYTE *)(v20 + 48) = v22;
              v23 = *(_BYTE *)(v16 + 64);
              *(_QWORD *)(v20 + 56) = *(_QWORD *)(v16 + 56);
              *(_BYTE *)(v20 + 64) = v23;
              v24 = *(_BYTE *)(v16 + 80);
              *(_QWORD *)(v20 + 72) = *(_QWORD *)(v16 + 72);
              *(_BYTE *)(v20 + 80) = v24;
              swift_release(v11);
              v14 = v16;
              v11 = v19;
            }
            else
            {
              swift_release(v16);
              v14 = v19;
            }
          }
          else
          {
            swift_release(v16);
          }
          v7 = a1 & 0xC000000000000001;
        }
        else
        {
          sub_D15C(v13);
        }
        swift_release(v14);
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v11);
      specialized ContiguousArray._endMutation()(v10);
      if (v4 == v6)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_24:
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v25);
    a3 = swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_CFE88()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_171D00);
  v2 = swift_getKeyPath(&unk_171D28);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_CFF00()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_171D48);
  v2 = swift_getKeyPath(&unk_171D70);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_CFF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD v87[3];
  CAFrameRateRange v88;

  v2 = v1;
  v86 = a1;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE0F0);
  v79 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v73 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE140);
  v5 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  v76 = v5;
  __chkstk_darwin(v4);
  v71 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006B8);
  v8 = *(_QWORD *)(v7 - 8);
  v80 = v7;
  v81 = v8;
  __chkstk_darwin(v7);
  v72 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006C0);
  v11 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  v83 = v11;
  __chkstk_darwin(v10);
  v74 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006C8);
  v14 = *(_QWORD *)(v13 - 8);
  v84 = v13;
  v85 = v14;
  __chkstk_darwin(v13);
  v78 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v16);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006D0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006D8);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__rawViewModels, v87, 33, 0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_200670);
  Published.projectedValue.getter(v27);
  swift_endAccess(v87);
  v28 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *(_QWORD *)&v87[0] = static OS_dispatch_queue.main.getter(v29);
  v70 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
  v69(v18, 1, 1, v70);
  v30 = sub_27A8C(&qword_2006E0, &qword_2006D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v68 = sub_2FE50();
  Publisher.receive<A>(on:options:)(v87, v18, v19, v28, v30, v68);
  sub_9944((uint64_t)v18, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v31 = swift_allocObject(&unk_1CFA10, 24, 7);
  swift_weakInit(v31 + 16, v2);
  v32 = sub_27A8C(&qword_2006E8, &qword_2006D8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v33 = Publisher<>.sink(receiveValue:)(sub_D5050, v31, v23, v32);
  v34 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v26, v23, v34);
  v35 = v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions;
  swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions, v87, 33, 0);
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v67 = v36;
  v66 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v35, v36, v66);
  swift_endAccess(v87);
  swift_release(v33);
  swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__alignedViewModels, v87, 33, 0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE158);
  v38 = v71;
  Published.projectedValue.getter(v37);
  swift_endAccess(v87);
  swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__elapsedTime, v87, 33, 0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1C8);
  v40 = v73;
  Published.projectedValue.getter(v39);
  swift_endAccess(v87);
  v41 = sub_27A8C(&qword_1FE160, &qword_1FE140, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v42 = sub_27A8C(&qword_1FE1E0, &qword_1FE0F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v43 = v72;
  v44 = v75;
  v45 = v77;
  Publisher.combineLatest<A>(_:)(v40, v75, v77, v41, v42);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v40, v45);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v38, v44);
  memset(v87, 0, 32);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006F0);
  v47 = sub_27A8C(&qword_2006F8, &qword_2006B8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v48 = v74;
  v49 = v80;
  Publisher.scan<A>(_:_:)(v87, sub_D1C48, 0, v80, v46, v47);
  v50.n128_f64[0] = (*(double (**)(char *, uint64_t))(v81 + 8))(v43, v49);
  *(_QWORD *)&v87[0] = static OS_dispatch_queue.main.getter(v50);
  v69(v18, 1, 1, v70);
  v51 = sub_27A8C(&qword_200700, &qword_2006C0, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  v52 = v78;
  v53 = v82;
  Publisher.receive<A>(on:options:)(v87, v18, v82, v28, v51, v68);
  sub_9944((uint64_t)v18, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v53);
  v54 = swift_allocObject(&unk_1CFA10, 24, 7);
  swift_weakInit(v54 + 16, v2);
  v55 = swift_allocObject(&unk_1CFA38, 32, 7);
  *(_QWORD *)(v55 + 16) = sub_D5058;
  *(_QWORD *)(v55 + 24) = v54;
  v56 = sub_27A8C(&qword_200708, &qword_2006C8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v57 = v84;
  v58 = Publisher<>.sink(receiveValue:)(sub_D5084, v55, v84, v56);
  v59 = swift_release(v55);
  (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v52, v57, v59);
  swift_beginAccess(v35, v87, 33, 0);
  AnyCancellable.store<A>(in:)(v35, v67, v66);
  swift_endAccess(v87);
  swift_release(v58);
  sub_D20B4(v86);
  if ((static Podcasts.isBlueMoonEnabled()(v60) & 1) != 0)
  {
    sub_F174(0, &qword_1FC7C8, CADisplayLink_ptr);
    v61 = swift_allocObject(&unk_1CFA10, 24, 7);
    swift_weakInit(v61 + 16, v2);
    v62 = sub_12F338((uint64_t)sub_D50B0, v61);
    LOBYTE(v87[0]) = 0;
    v88 = CAFrameRateRange.init(minimum:maximum:preferred:)(10.0, 60.0, (Swift::Float_optional *)0x42700000);
    objc_msgSend(v62, "setPreferredFrameRateRange:", *(double *)&v88.minimum, *(double *)&v88.maximum, *(double *)&v88.preferred);
    v63 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
    objc_msgSend(v62, "addToRunLoop:forMode:", v63, NSRunLoopCommonModes);

    v64 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink) = v62;

  }
  else
  {
    sub_D23F8();
  }
}

uint64_t sub_D07B8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v10 = a2;
    else
      v10 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a2);
    v6 = (unint64_t)a1 >> 62;
    if (!((unint64_t)a1 >> 62))
    {
LABEL_3:
      if (v5 == *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_4;
      return 0;
    }
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    v6 = (unint64_t)a1 >> 62;
    if (!((unint64_t)a1 >> 62))
      goto LABEL_3;
  }
  if (a1 < 0)
    v11 = a1;
  else
    v11 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(a1);
  if (v5 == v12)
  {
LABEL_4:
    if (v4)
    {
      if (a2 < 0)
        v8 = a2;
      else
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(a1);
      if (!_CocoaArrayWrapper.endIndex.getter(v8))
        goto LABEL_35;
    }
    else
    {
      v7 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(a1);
      if (!v7)
      {
LABEL_35:
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(a2);
        return 1;
      }
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      if (!v6)
        goto LABEL_14;
    }
    else
    {
      if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
      {
        __break(1u);
        JUMPOUT(0xD0C60);
      }
      v9 = *(_QWORD *)(a2 + 32);
      swift_retain();
      if (!v6)
      {
LABEL_14:
        if (!*(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8)))
        {
LABEL_34:
          swift_bridgeObjectRelease(a1);
          swift_bridgeObjectRelease(a2);
          swift_release(v9);
          return 1;
        }
LABEL_30:
        if ((a1 & 0xC000000000000001) != 0)
          specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        else
          swift_retain();
        __asm { BR              X10 }
      }
    }
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
    if (!v14)
      goto LABEL_34;
    goto LABEL_30;
  }
  return 0;
}

double sub_D0C80@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171D48);
  v5 = swift_getKeyPath(&unk_171D70);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_D0CFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_171D48);
  v5 = swift_getKeyPath(&unk_171D70);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_D0D74()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_171D90);
  v2 = swift_getKeyPath(&unk_171DB8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_D0DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE108);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_200678);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_200680);
  v25 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__activeParagraph, v26, 33, 0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1B8);
  Published.projectedValue.getter(v13);
  swift_endAccess(v26);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_200688);
  v15 = sub_27A8C(&qword_1FE1C0, &qword_1FE108, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher.map<A>(_:)(sub_D2914, 0, v2, v14, v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = sub_27A8C(&qword_200690, &qword_200678, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  Publisher.removeDuplicates(by:)(sub_D2920, 0, v6, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  KeyPath = swift_getKeyPath(&unk_171CD8);
  v26[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_presentationContext);
  v18 = v26[0];
  v19 = sub_27A8C(&qword_200698, &qword_200680, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  swift_retain(v18);
  v20 = Publisher<>.assign<A>(to:on:)(KeyPath, v26, v10, v19);
  swift_release(v18);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  v21 = v1 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions;
  swift_beginAccess(v21, v26, 33, 0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v23 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v21, v22, v23);
  swift_endAccess(v26);
  return swift_release(v20);
}

uint64_t sub_D10BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t *v7;
  void **v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  __int128 v22;
  uint64_t v23;
  char v24[24];
  void *v25;
  _OWORD v26[2];

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_avObserver;
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_avObserver, v24, 0, 0);
  sub_2808C(v1, (uint64_t)&v21, &qword_2006A8);
  v2 = v21;
  if (v21)
  {
    v25 = v21;
    sub_ECEC(&v22, v26);
    v21 = v2;
    sub_CD54((uint64_t)v26, (uint64_t)&v22);
    v3 = v23;
    v4 = __swift_project_boxed_opaque_existential_1(&v22, v23);
    v5 = v2;
    v6 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
    __swift_destroy_boxed_opaque_existential_0(&v22);
    objc_msgSend(v5, "removeTimeObserver:", v6);

    swift_unknownObjectRelease(v6);
    v7 = (uint64_t *)&unk_2006B0;
    v8 = &v25;
  }
  else
  {
    v7 = &qword_2006A8;
    v8 = &v21;
  }
  sub_9944((uint64_t)v8, v7);
  v9 = OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink);
  if (v10)
  {
    objc_msgSend(v10, "invalidate");
    v11 = *(void **)(v0 + v9);
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(v0 + v9) = 0;

  swift_release(*(_QWORD *)(v0 + 16));
  v12 = v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__elapsedTime;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__activeParagraph;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__alignedViewModels;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__rawViewModels;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_200670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_chaptersProvider));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_player));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_playbackController));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_alignmentCoordinator));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_presentationContext));

  sub_9944(v1, &qword_2006A8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_dynamicAdObserver));

  return v0;
}

uint64_t sub_D1350()
{
  uint64_t v0;

  sub_D10BC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_D1374()
{
  return type metadata accessor for LiveTranscriptObserver(0);
}

uint64_t type metadata accessor for LiveTranscriptObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_200550;
  if (!qword_200550)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LiveTranscriptObserver);
  return result;
}

void sub_D13B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[15];

  v10[0] = &unk_171BB8;
  sub_D1508();
  if (v3 <= 0x3F)
  {
    v10[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_2D488(319, &qword_200568, &qword_1FE230);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_2D488(319, &qword_200570, &qword_1FE220);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_2D488(319, &qword_200578, (uint64_t *)&unk_200580);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          v10[5] = &unk_171BD0;
          v10[6] = &unk_171BE8;
          v10[7] = (char *)&value witness table for Builtin.NativeObject + 64;
          v10[8] = (char *)&value witness table for Builtin.NativeObject + 64;
          v10[9] = (char *)&value witness table for Builtin.NativeObject + 64;
          v10[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
          v10[11] = &unk_171C00;
          v10[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v10[13] = &unk_171C18;
          v10[14] = &unk_171C18;
          swift_updateClassMetadata2(a1, 256, 15, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_D1508()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_200560)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Double);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_200560);
  }
}

uint64_t initializeWithCopy for LiveTranscriptObserver.ActiveParagraph(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for LiveTranscriptObserver.ActiveParagraph(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *(_OWORD *)(a1 + 1) = v6;
  return a1;
}

uint64_t *assignWithTake for LiveTranscriptObserver.ActiveParagraph(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for LiveTranscriptObserver.ActiveParagraph()
{
  return &type metadata for LiveTranscriptObserver.ActiveParagraph;
}

double sub_D1640(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_D169C(v2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_D169C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v4);
  v75 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_200710);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_200740);
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  __chkstk_darwin(v9);
  v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE138);
  v65 = *(_QWORD *)(v11 - 8);
  v66 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006D0);
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_200748);
  v70 = *(_QWORD *)(v17 - 8);
  v71 = v17;
  __chkstk_darwin(v17);
  v76 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_200750);
  v73 = *(_QWORD *)(v19 - 8);
  v74 = v19;
  __chkstk_darwin(v19);
  v72 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchPredicate(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (uint64_t *)((char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v24 = static OS_dispatch_queue.main.getter(v26);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  v27 = _dispatchPreconditionTest(_:)(v24);
  (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v24, v21);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v28 = OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_dynamicAdObserver;
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_dynamicAdObserver);
  if (a1)
  {
    if (v29)
      return;
    v60 = v2;
    swift_beginAccess(v2 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__rawViewModels, v77, 33, 0);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_200670);
    Published.projectedValue.getter(v30);
    swift_endAccess(v77);
    v32 = NowPlayingAlignmentCoordinator.$alignment.getter(v31);
    NowPlayingAlignmentCoordinator.$transcriptModel.getter(v32);
    KeyPath = swift_getKeyPath(&unk_171DD8);
    v34 = sub_27A8C(&qword_200720, &qword_200710, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v35 = v67;
    v36 = v62;
    Publisher.map<A>(_:)(KeyPath, v62, v34);
    v37 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v8, v36, v37);
    v38 = sub_27A8C(&qword_2006E0, &qword_2006D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v39 = sub_27A8C(&qword_1FE168, &qword_1FE138, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v40 = sub_27A8C(&qword_200758, &qword_200740, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
    v41 = v64;
    v42 = v66;
    v43 = v69;
    Publisher.combineLatest<A, B>(_:_:)(v13, v35, v64, v66, v69, v38, v39, v40);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v43);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v42);
    v44.n128_f64[0] = (*(double (**)(char *, uint64_t))(v63 + 8))(v16, v41);
    v77[0] = (id)static OS_dispatch_queue.main.getter(v44);
    v45 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v46 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v75, 1, 1, v45);
    v47 = sub_27A8C(&qword_200760, &qword_200748, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
    v48 = sub_2FE50();
    v49 = v71;
    v50 = v72;
    v51 = v76;
    Publisher.receive<A>(on:options:)(v77, v46, v71, v25, v47, v48);
    sub_9944(v46, &qword_1FB2C0);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v49);
    v52 = swift_allocObject(&unk_1CFA10, 24, 7);
    swift_weakInit(v52 + 16, v60);
    v53 = swift_allocObject(&unk_1CFBF0, 32, 7);
    *(_QWORD *)(v53 + 16) = sub_D55E4;
    *(_QWORD *)(v53 + 24) = v52;
    v54 = sub_27A8C(&qword_200768, &qword_200750, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v55 = v74;
    v56 = Publisher<>.sink(receiveValue:)(sub_D55F0, v53, v74, v54);
    v2 = v60;
    v57 = v56;
    v58 = swift_release(v53);
    (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v50, v55, v58);
    v29 = *(_QWORD *)(v2 + v28);
  }
  else
  {
    v57 = 0;
  }
  *(_QWORD *)(v2 + v28) = v57;
  swift_release(v29);
}

uint64_t sub_D1C48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v4 = *a2;
  v3 = a2[1];
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = v5;
  *(_QWORD *)(a3 + 16) = v4;
  *(_QWORD *)(a3 + 24) = v3;
  swift_bridgeObjectRetain(v5);
  return swift_bridgeObjectRetain(v4);
}

double sub_D1C7C(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  _BYTE v12[24];

  if (a3)
  {
    v8 = a5 + 16;
    swift_beginAccess(a5 + 16, v12, 0, 0);
    Strong = swift_weakLoadStrong(v8);
    if (Strong)
    {
      v11 = Strong;
      sub_D1CF8(a3, a1, *(double *)&a4);
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

void sub_D1CF8(void **a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  void **aBlock;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;

  v4 = v3;
  v43 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v17 = static OS_dispatch_queue.main.getter(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v19 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) != 0)
  {
    aBlock = a1;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE220);
    v21 = sub_27A8C(&qword_1FE228, &qword_1FE220, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v20, v21) & 1) != 0)
    {
      v40 = v10;
      v41 = v8;
      v42 = v7;
      if (*(_QWORD *)(v4 + 16))
      {
        v22 = *(_BYTE *)(v4 + 40);
        v23 = *(void ***)(v4 + 16);
        v24 = v23;
        v25 = *(_QWORD *)(v4 + 24);
        v26 = *(uint64_t (**)(uint64_t))(v4 + 32);
      }
      else
      {
        KeyPath = swift_getKeyPath(&off_171D00);
        v28 = swift_getKeyPath(&unk_171D28);
        static Published.subscript.getter(&aBlock, v4, KeyPath, v28);
        swift_release(KeyPath);
        swift_release(v28);
        v24 = aBlock;
        v25 = v48;
        v26 = v49;
        v22 = (char)v50;
        v23 = *(void ***)(v4 + 16);
      }
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
      *(_BYTE *)(v4 + 40) = 0;
      *(_QWORD *)(v4 + 32) = 0;
      swift_retain();
      swift_release(v23);
      v29 = swift_allocObject(&unk_1CFAB0, 80, 7);
      *(_QWORD *)(v29 + 16) = v24;
      *(_QWORD *)(v29 + 24) = v25;
      *(_QWORD *)(v29 + 32) = v26;
      *(_BYTE *)(v29 + 40) = v22;
      v30 = v43;
      *(_QWORD *)(v29 + 48) = v43;
      *(_QWORD *)(v29 + 56) = a1;
      *(double *)(v29 + 64) = a3;
      *(_QWORD *)(v29 + 72) = v4;
      v51 = sub_D5228;
      v52 = v29;
      aBlock = _NSConcreteStackBlock;
      v48 = 1107296256;
      v49 = sub_F528;
      v50 = &block_descriptor_41_0;
      v31 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(a1);
      swift_retain();
      v32 = swift_retain();
      static DispatchQoS.unspecified.getter(v32);
      v46 = _swiftEmptyArrayStorage;
      v33 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
      v35 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
      v36 = v40;
      v37 = v42;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v34, v35, v42, v33);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v36, v31);
      _Block_release(v31);
      v38 = swift_release(v24);
      (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v36, v37, v38);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v45);
      swift_release(v52);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_D20B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38[3];

  v37 = a1;
  v36 = type metadata accessor for TranscriptSentenceSplittingBehavior(0);
  v1 = *(_QWORD *)(v36 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  __chkstk_darwin(v36);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_200710);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_200718);
  v35 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  NowPlayingAlignmentCoordinator.$transcriptModel.getter(v11);
  v14 = sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v38[0] = (id)static OS_dispatch_queue.main.getter(v15);
  v16 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  v17 = sub_27A8C(&qword_200720, &qword_200710, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v18 = sub_2FE50();
  Publisher.receive<A>(on:options:)(v38, v5, v6, v14, v17, v18);
  sub_9944((uint64_t)v5, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = swift_allocObject(&unk_1CFA10, 24, 7);
  v20 = v33;
  swift_weakInit(v19 + 16, v33);
  v21 = v34;
  v22 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v34, v37, v36);
  v23 = *(unsigned __int8 *)(v1 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = swift_allocObject(&unk_1CFA88, v24 + v2, v23 | 7);
  *(_QWORD *)(v25 + 16) = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v25 + v24, v21, v22);
  v26 = sub_27A8C(&qword_200728, &qword_200718, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v27 = Publisher<>.sink(receiveValue:)(sub_D519C, v25, v10, v26);
  v28 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v13, v10, v28);
  v29 = v20 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions;
  swift_beginAccess(v20 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions, v38, 33, 0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
  v31 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v29, v30, v31);
  swift_endAccess(v38);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

uint64_t sub_D23F8()
{
  uint64_t v0;
  uint64_t v1;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeEpoch epoch;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  double v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  void *v16;
  double v17;
  id v18;
  uint64_t v19;
  void **aBlock;
  unint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t *);
  void *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  _QWORD v28[4];
  CMTime v29;

  v1 = v0;
  v29 = CMTime.init(seconds:preferredTimescale:)(0.0166666667, 1000000000);
  value = v29.value;
  timescale = v29.timescale;
  epoch = v29.epoch;
  v5 = HIDWORD(*(_QWORD *)&v29.timescale);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_player + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_player));
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(ObjectType, v6);
  objc_msgSend(v8, "currentTime");
  v9 = CMTime.seconds.getter(aBlock, v22, v23);
  KeyPath = swift_getKeyPath(&unk_171D48);
  v11 = swift_getKeyPath(&unk_171D70);
  aBlock = *(void ***)&v9;
  swift_retain();
  static Published.subscript.setter(&aBlock, v1, KeyPath, v11);
  v27 = v8;
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v12 = v8;
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = swift_allocObject(&unk_1CFA10, 24, 7);
  swift_weakInit(v15 + 16, v1);
  v25 = sub_D50C0;
  v26 = v15;
  aBlock = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_D30A4;
  v24 = &block_descriptor_21;
  v16 = _Block_copy(&aBlock);
  *(_QWORD *)&v17 = swift_release(v26).n128_u64[0];
  aBlock = (void **)value;
  v22 = __PAIR64__(v5, timescale);
  v23 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
  v18 = objc_msgSend(v12, "addPeriodicTimeObserverForInterval:queue:usingBlock:", &aBlock, v14, v16, v17);
  _Block_release(v16);

  _bridgeAnyObjectToAny(_:)(v28, v18);
  swift_unknownObjectRelease(v18);

  v19 = v1 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_avObserver;
  swift_beginAccess(v19, &aBlock, 33, 0);
  sub_D50E0((uint64_t)&v27, v19);
  return swift_endAccess(&aBlock);
}

BOOL sub_D2628(uint64_t a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  _BOOL4 v21;

  v14 = a4 & 1;
  sub_10F86C();
  v16 = v15;
  sub_10F86C();
  v18 = v17;
  sub_10F96C(v16);
  v20 = v19;
  swift_release(v18 & 0x3FFFFFFFFFFFFFFFLL);
  swift_release(v16 & 0x3FFFFFFFFFFFFFFFLL);
  if ((a6 ^ a2) >> 14)
    v21 = 0;
  else
    v21 = (a7 ^ a3) < 0x4000;
  if ((a4 & 1) != 0)
    v21 = 0;
  if ((a8 & 1) != 0)
    v21 = v14;
  return (v20 & 1) != 0 && v21;
}

void sub_D26EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v18 = 0;
  v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  v8._object = (void *)0x8000000000189F90;
  v8._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v8);
  if ((a4 & 1) != 0)
  {
    v11 = 0xE300000000000000;
    v10 = 7104878;
  }
  else
  {
    v14 = a3;
    v15 = a2;
    v16 = 0;
    v17 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(&v15, &v16, &type metadata for String.Index, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v9._countAndFlagsBits = 3943982;
    v9._object = (void *)0xE300000000000000;
    String.append(_:)(v9);
    _print_unlocked<A, B>(_:_:)(&v14, &v16, &type metadata for String.Index, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v10 = v16;
    v11 = v17;
  }
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0x6E65746E6F63202CLL;
  v13._object = (void *)0xEB00000000203A74;
  String.append(_:)(v13);
  __asm { BR              X10 }
}

uint64_t sub_D2824()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  _QWORD v4[2];
  uint64_t v5;

  v4[0] = v0;
  v4[1] = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006A0);
  _print_unlocked<A, B>(_:_:)(v4, &v5, v1, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return v5;
}

void sub_D28FC()
{
  uint64_t v0;

  sub_D26EC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_D2914@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

BOOL sub_D2920(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BOOL8 result;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  _QWORD v12[9];

  v2 = *a1;
  v3 = *a2;
  result = (*a1 | *a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    sub_10F86C();
    v7 = v6;
    Hasher.init(_seed:)(v12, 0);
    swift_retain_n(v3, 2);
    swift_retain_n(v2, 2);
    sub_11141C((uint64_t)v12, v7);
    v8 = Hasher._finalize()();
    swift_release(v7 & 0x3FFFFFFFFFFFFFFFLL);
    sub_10F86C();
    v10 = v9;
    Hasher.init(_seed:)(v12, 0);
    sub_11141C((uint64_t)v12, v10);
    v11 = Hasher._finalize()();
    swift_release_n(v2, 2);
    swift_release_n(v3, 2);
    swift_release(v10 & 0x3FFFFFFFFFFFFFFFLL);
    return v8 == v11;
  }
  return result;
}

double sub_D2A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  _QWORD v29[3];
  char v30;
  _BYTE v31[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_200730);
  __chkstk_darwin(v6);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v31, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    sub_2808C(a1, (uint64_t)v8, &qword_200730);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_9944((uint64_t)v8, &qword_200730);
      KeyPath = swift_getKeyPath(&unk_171D90);
      v17 = swift_getKeyPath(&unk_171DB8);
      v29[0] = 0;
      swift_retain();
      static Published.subscript.setter(v29, v15, KeyPath, v17);
      v18 = swift_getKeyPath(&unk_171C90);
      v19 = swift_getKeyPath(&unk_171CB8);
      v29[0] = _swiftEmptyArrayStorage;
      swift_retain();
      static Published.subscript.setter(v29, v15, v18, v19);
      v20 = swift_getKeyPath(&off_171D00);
      v21 = swift_getKeyPath(&unk_171D28);
      memset(v29, 0, sizeof(v29));
      v30 = 0;
      static Published.subscript.setter(v29, v15, v20, v21);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v22 = *(_QWORD *)(v15 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_presentationContext);
      v23 = *(_QWORD *)(v15 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_workQueue);
      sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
      v25 = (void *)static OS_dispatch_queue.main.getter(v24);
      v26 = swift_allocObject(&unk_1CFA10, 24, 7);
      swift_weakInit(v26 + 16, v15);
      swift_retain();
      sub_C81D0(v22, a3, v23, v25, (uint64_t)sub_D51E4, v26);

      v27 = swift_release(v26);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
      swift_release(v26);
      *(_QWORD *)&result = swift_release(v15).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_D2CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v24, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v9 = result;
    static Logger.transcripts.getter(result);
    v10 = swift_bridgeObjectRetain_n(a1, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v23 = v21;
      *(_DWORD *)v13 = 136315138;
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v20 = a1;
        else
          v20 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v14 = _CocoaArrayWrapper.endIndex.getter(v20);
        swift_bridgeObjectRelease(a1);
      }
      else
      {
        v14 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
      }
      if (v14)
        v15 = 0x64656E69666544;
      else
        v15 = 0x7974706D45;
      if (v14)
        v16 = 0xE700000000000000;
      else
        v16 = 0xE500000000000000;
      v22 = sub_C6F4(v15, v16, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v16);
      _os_log_impl(&dword_0, v11, v12, "Received updated transcript models: %s", v13, 0xCu);
      v17 = v21;
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    KeyPath = swift_getKeyPath(&unk_171D90);
    v19 = swift_getKeyPath(&unk_171DB8);
    v23 = a1;
    swift_bridgeObjectRetain(a1);
    return static Published.subscript.setter(&v23, v9, KeyPath, v19);
  }
  return result;
}

uint64_t sub_D2F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  char v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = PlaybackController.currentTime.getter();
    if ((v6 & 1) != 0)
    {
      return swift_release(v4);
    }
    else
    {
      v7 = v5;
      KeyPath = swift_getKeyPath(&unk_171D48);
      v9 = swift_getKeyPath(&unk_171D70);
      v10 = v7;
      return static Published.subscript.setter(&v10, v4, KeyPath, v9);
    }
  }
  return result;
}

uint64_t sub_D2FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  double v10;
  uint64_t KeyPath;
  uint64_t v12;
  double v13;
  _BYTE v14[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v14, 0, 0);
  result = swift_weakLoadStrong(v7);
  if (result)
  {
    v9 = result;
    v10 = CMTime.seconds.getter(a1, a2, a3);
    KeyPath = swift_getKeyPath(&unk_171D48);
    v12 = swift_getKeyPath(&unk_171D70);
    v13 = v10;
    return static Published.subscript.setter(&v13, v9, KeyPath, v12);
  }
  return result;
}

uint64_t sub_D30A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v6(v2, v3, v4);
  return swift_release(v5);
}

uint64_t sub_D30F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[5];

  if (result)
  {
    v10 = result;
    sub_2808C(a2, (uint64_t)&v14, &qword_200770);
    if (v15)
    {
      v11 = a6 + 16;
      sub_27890(&v14, (uint64_t)v16);
      swift_beginAccess(v11, &v14, 0, 0);
      Strong = swift_weakLoadStrong(v11);
      if (Strong)
      {
        v13 = Strong;
        sub_D31D4(v10, (uint64_t)v16, a3, a4, a5 & 1);
        swift_release(v13);
      }
      return __swift_destroy_boxed_opaque_existential_0(v16);
    }
    else
    {
      return sub_9944((uint64_t)&v14, &qword_200770);
    }
  }
  return result;
}

void sub_D31D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  char v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)();
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  void *v27;
  void *v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD aBlock[3];
  void *v57;
  uint64_t (*v58)();
  uint64_t v59;
  __int128 v60[3];

  v6 = v5;
  v52 = a5;
  v50 = a3;
  v51 = a4;
  v49 = a2;
  v53 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (_QWORD *)((char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v17 = static OS_dispatch_queue.main.getter(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v19 = _dispatchPreconditionTest(_:)(v17);
  v20 = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) != 0)
  {
    v47 = v11;
    v21 = (void *)dispatch thunk of PlaybackController.nowPlayingItem.getter(v20);
    sub_DF78(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_chaptersProvider, (uint64_t)aBlock);
    if (v21)
    {
      v22 = v57;
      v23 = v58;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v57);
      v24 = (_QWORD *)(*((uint64_t (**)(void *, void *, uint64_t (*)()))v23 + 2))(v21, v22, v23);

      __swift_destroy_boxed_opaque_existential_0(aBlock);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(aBlock);
      v24 = _swiftEmptyArrayStorage;
    }
    v25 = *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_player + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_player));
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 208))(ObjectType, v25);
    v48 = v8;
    v46 = v7;
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, "duration");
      v30 = v29;

    }
    else
    {
      v30 = 0.0;
    }
    v31 = static Duration.seconds(_:)(v30);
    v33 = v32;
    v45[1] = *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_workQueue);
    v34 = *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_presentationContext);
    v35 = *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_alignmentCoordinator);
    sub_DF78(v49, (uint64_t)v60);
    v36 = swift_allocObject(&unk_1CFC18, 136, 7);
    v37 = v53;
    *(_QWORD *)(v36 + 16) = v53;
    sub_27890(v60, v36 + 24);
    v38 = v51;
    *(_QWORD *)(v36 + 64) = v50;
    *(_QWORD *)(v36 + 72) = v38;
    *(_BYTE *)(v36 + 80) = v52 & 1;
    *(_QWORD *)(v36 + 88) = v31;
    *(_QWORD *)(v36 + 96) = v33;
    *(_QWORD *)(v36 + 104) = v24;
    *(_QWORD *)(v36 + 112) = v35;
    *(_QWORD *)(v36 + 120) = v34;
    *(_QWORD *)(v36 + 128) = v6;
    v58 = sub_D5670;
    v59 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    v57 = &block_descriptor_76;
    v39 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(v37);
    swift_retain();
    swift_retain();
    v40 = swift_retain();
    static DispatchQoS.unspecified.getter(v40);
    v55 = _swiftEmptyArrayStorage;
    v41 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v43 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
    v44 = v46;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v42, v43, v46, v41);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v39);
    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v44);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v47);
    swift_release(v59);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_D35F0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[5];
  uint64_t v62;

  v54 = a11;
  v19 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v19 - 8);
  v60 = v19;
  __chkstk_darwin(v19);
  v58 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v21 - 8);
  v57 = v21;
  __chkstk_darwin(v21);
  v55 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_200730);
  __chkstk_darwin(v23);
  v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a5 & 1) != 0)
    v26 = a6;
  else
    v26 = a3;
  if ((a5 & 1) != 0)
    v27 = a7;
  else
    v27 = a4;
  sub_10FAD0(a2, v26, v27, a6, a7, a1);
  v29 = v28;
  v30 = sub_110488(a8, v28);
  v31 = swift_bridgeObjectRelease(v29);
  NowPlayingAlignmentCoordinator.transcriptModel.getter(v31);
  v32 = type metadata accessor for TranscriptModel(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32) == 1)
  {
    sub_9944((uint64_t)v25, &qword_200730);
  }
  else
  {
    v34 = TranscriptModel.speakers.getter();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v32);
    aBlock[0] = v34;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_200778);
    v36 = sub_27A8C(&qword_200780, &qword_200778, (uint64_t)&protocol conformance descriptor for [A : B]);
    v37 = Collection.isNotEmpty.getter(v35, v36);
    swift_bridgeObjectRelease(v34);
    if ((v37 & 1) != 0)
    {
      v38 = sub_110EC8(a10, (uint64_t)v30);
      swift_bridgeObjectRelease(v30);
      v30 = (_QWORD *)v38;
    }
  }
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v40 = (void *)static OS_dispatch_queue.main.getter(v39);
  v41 = swift_allocObject(&unk_1CFC68, 32, 7);
  *(_QWORD *)(v41 + 16) = v54;
  *(_QWORD *)(v41 + 24) = v30;
  aBlock[4] = sub_D5708;
  v62 = v41;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_F528;
  aBlock[3] = &block_descriptor_82;
  v42 = _Block_copy(aBlock);
  v43 = v62;
  swift_retain();
  swift_release(v43);
  v44 = v55;
  static DispatchQoS.unspecified.getter(v45);
  aBlock[0] = _swiftEmptyArrayStorage;
  v46 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v48 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
  v49 = v58;
  v50 = v47;
  v51 = v60;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v50, v48, v60, v46);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v44, v49, v42);
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v44, v57);
}

void sub_D3984(unint64_t isUniquelyReferenced_nonNull_native, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;

  v39 = _swiftEmptyDictionarySingleton;
  KeyPath = swift_getKeyPath(&unk_171C90);
  v5 = swift_getKeyPath(&unk_171CB8);
  static Published.subscript.getter(&v38, isUniquelyReferenced_nonNull_native, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v38;
  if (v38 >> 62)
  {
LABEL_28:
    if (v6 < 0)
      v33 = v6;
    else
      v33 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v6, 2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v6);
    if (v7)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease_n(v6, 2);
    v28 = swift_bridgeObjectRetain(a2);
    v30 = sub_CFC38(v28, (uint64_t *)&v39, v29);
    swift_bridgeObjectRelease(a2);
    v31 = swift_getKeyPath(&unk_171C90);
    v32 = swift_getKeyPath(&unk_171CB8);
    v38 = (unint64_t)v30;
    swift_retain();
    static Published.subscript.setter(&v38, isUniquelyReferenced_nonNull_native, v31, v32);
    swift_bridgeObjectRelease(v39);
    return;
  }
  v7 = *(_QWORD *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v38);
  if (!v7)
    goto LABEL_24;
LABEL_3:
  v34 = a2;
  v35 = isUniquelyReferenced_nonNull_native;
  isUniquelyReferenced_nonNull_native = v6 & 0xC000000000000001;
  v8 = _swiftEmptyDictionarySingleton;
  a2 = 4;
  v36 = v6 & 0xC000000000000001;
  v37 = v6;
  while (1)
  {
    v9 = a2 - 4;
    if (isUniquelyReferenced_nonNull_native)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2 - 4, v6);
      v11 = a2 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_25;
    }
    else
    {
      v10 = *(_QWORD *)(v6 + 8 * a2);
      swift_retain();
      v11 = a2 - 3;
      if (__OFADD__(v9, 1))
      {
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v12 = *(_QWORD *)(v10 + 16);
    if (v12 >> 62 != 1)
    {
      swift_release(v10);
      goto LABEL_5;
    }
    v6 = v7;
    v13 = *(_QWORD *)(v12 + 16);
    v14 = swift_allocObject(&unk_1CFBA0, 24, 7);
    *(_QWORD *)(v14 + 16) = v13;
    v15 = v14 | 0x4000000000000000;
    sub_D15C(v13);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
    v38 = (unint64_t)v8;
    v17 = sub_13A254(v14 | 0x4000000000000000);
    v18 = v8[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      goto LABEL_26;
    v21 = v16;
    if (v8[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1402DC();
      goto LABEL_18;
    }
    sub_13C1B0(v20, isUniquelyReferenced_nonNull_native);
    v22 = sub_13A254(v15);
    if ((v21 & 1) != (v23 & 1))
      break;
    v17 = v22;
LABEL_18:
    v8 = (_QWORD *)v38;
    isUniquelyReferenced_nonNull_native = 8 * v17;
    if ((v21 & 1) != 0)
    {
      v24 = *(_QWORD *)(v38 + 56);
      swift_release(*(_QWORD *)(v24 + isUniquelyReferenced_nonNull_native));
      *(_QWORD *)(v24 + isUniquelyReferenced_nonNull_native) = v10;
    }
    else
    {
      *(_QWORD *)(v38 + 8 * (v17 >> 6) + 64) |= 1 << v17;
      *(_QWORD *)(v8[6] + 8 * v17) = v15;
      *(_QWORD *)(v8[7] + 8 * v17) = v10;
      v25 = v8[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_27;
      v8[2] = v27;
      swift_retain();
    }
    swift_release(v10);
    swift_release(v14);
    swift_bridgeObjectRelease(0x8000000000000000);
    v7 = v6;
    isUniquelyReferenced_nonNull_native = v36;
    v6 = v37;
LABEL_5:
    ++a2;
    if (v11 == v7)
    {
      v39 = v8;
      a2 = v34;
      isUniquelyReferenced_nonNull_native = v35;
      goto LABEL_24;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TranscriptContentViewModel.ID);
  __break(1u);
}

uint64_t sub_D3CC4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  char v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void **v59;
  unint64_t v60;
  unint64_t v61;
  void **v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD v109[3];
  void **aBlock;
  uint64_t v111;
  uint64_t (*v112)(uint64_t);
  void *v113;
  void (*v114)();
  uint64_t v115;

  v94 = a8;
  v100 = type metadata accessor for DispatchWorkItemFlags(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptModel.Word(0);
  v15 = *(_QWORD *)(v14 - 8);
  v103 = v14;
  v104 = v15;
  __chkstk_darwin(v14);
  v102 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD0);
  __chkstk_darwin(v17);
  v93 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a6)
  {
    swift_retain();
    if ((sub_D07B8(a7, a6) & 1) != 0)
    {
      v19 = swift_retain();
      sub_D4784(v19);
      v21 = v20;
      swift_release(a1);
      if ((v21 & 1) != 0)
      {
        v22 = a1;
LABEL_36:
        swift_retain();
        v45 = *(_QWORD *)(a1 + 16);
        if (v45 >> 62)
        {
          swift_release(a1);
          swift_retain();
          v63 = 0;
          v23 = 0;
          v64 = 1;
          a1 = v22;
        }
        else
        {
          v101 = v22;
          v46 = *(_QWORD *)(v45 + 64);
          swift_retain();
          swift_retain();
          v47 = swift_bridgeObjectRetain(v46);
          v48 = sub_D5264(v47, a1);
          swift_bridgeObjectRelease(v46);
          swift_release(a1);
          v49 = v48[2];
          if (v49)
          {
            v107 = (_QWORD *)v45;
            aBlock = (void **)_swiftEmptyArrayStorage;
            sub_A9A94(0, v49, 0);
            v50 = *(unsigned __int8 *)(v104 + 80);
            v106 = (unint64_t)v48;
            v51 = (char *)v48 + ((v50 + 32) & ~v50);
            v108 = *(_QWORD *)(v104 + 72);
            v52 = *(uint64_t (**)(char *, char *, uint64_t))(v104 + 16);
            do
            {
              v54 = v102;
              v53 = v103;
              v55 = v52(v102, v51, v103);
              v56 = TranscriptModel.Word.text.getter(v55);
              v58 = v57;
              (*(void (**)(char *, uint64_t))(v104 + 8))(v54, v53);
              v59 = aBlock;
              if ((swift_isUniquelyReferenced_nonNull_native(aBlock) & 1) == 0)
              {
                sub_A9A94(0, (int64_t)v59[2] + 1, 1);
                v59 = aBlock;
              }
              v61 = (unint64_t)v59[2];
              v60 = (unint64_t)v59[3];
              if (v61 >= v60 >> 1)
              {
                sub_A9A94(v60 > 1, v61 + 1, 1);
                v59 = aBlock;
              }
              v59[2] = (void *)(v61 + 1);
              v62 = &v59[2 * v61];
              v62[4] = (void *)v56;
              v62[5] = v58;
              v51 += v108;
              --v49;
            }
            while (v49);
            swift_bridgeObjectRelease(v106);
            v45 = (unint64_t)v107;
          }
          else
          {
            swift_bridgeObjectRelease(v48);
            v59 = (void **)_swiftEmptyArrayStorage;
          }
          aBlock = v59;
          v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2034D0);
          v66 = sub_27A8C(&qword_200738, (uint64_t *)&unk_2034D0, (uint64_t)&protocol conformance descriptor for [A]);
          v67 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v65, v66);
          v69 = v68;
          swift_bridgeObjectRelease(v59);
          v70 = *(_QWORD *)(v45 + 56);
          aBlock = *(void ***)(v45 + 48);
          v111 = v70;
          v109[0] = v67;
          v109[1] = v69;
          v71 = type metadata accessor for Locale(0);
          v72 = (uint64_t)v93;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v93, 1, 1, v71);
          v73 = sub_11CEC();
          swift_bridgeObjectRetain(v70);
          v63 = StringProtocol.range<A>(of:options:range:locale:)(v109, 0, 0, 0, 1, v72, &type metadata for String, &type metadata for String, v73, v73);
          v23 = v74;
          LOBYTE(v73) = v75;
          swift_release(v45);
          v64 = v73 & 1;
          sub_9944(v72, &qword_1FCAD0);
          v76 = v111;
          swift_bridgeObjectRelease(v69);
          swift_bridgeObjectRelease(v76);
          v22 = v101;
        }
        goto LABEL_55;
      }
    }
    swift_release(a1);
  }
  if (!((unint64_t)a7 >> 62))
  {
    v23 = *(_QWORD *)((char *)&dword_10 + (a7 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a7);
    if (v23)
      goto LABEL_9;
LABEL_54:
    swift_bridgeObjectRelease(a7);
    a1 = 0;
    v63 = 0;
    v64 = 0;
    v22 = 0;
    goto LABEL_55;
  }
LABEL_50:
  if (a7 < 0)
    v77 = a7;
  else
    v77 = a7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a7);
  v23 = _CocoaArrayWrapper.endIndex.getter(v77);
  if (!v23)
    goto LABEL_54;
LABEL_9:
  v101 = 0;
  v24 = (uint64_t (*)(uint64_t, uint64_t))(a7 & 0xC000000000000001);
  v25 = 4;
  v106 = a7 & 0xC000000000000001;
  v107 = (_QWORD *)v23;
  v108 = a7;
  do
  {
    v26 = v25 - 4;
    if (v24)
    {
      a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25 - 4, a7);
      v27 = v25 - 3;
      if (__OFADD__(v26, 1))
        goto LABEL_49;
    }
    else
    {
      a1 = *(_QWORD *)(a7 + 8 * v25);
      swift_retain();
      v27 = v25 - 3;
      if (__OFADD__(v26, 1))
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    v28 = *(_QWORD *)(a1 + 16);
    v29 = v28 >> 62;
    if (v28 >> 62)
    {
      v30 = v28 & 0x3FFFFFFFFFFFFFFFLL;
      v31 = sub_8330(&qword_1FDF58, type metadata accessor for SilentContent, (uint64_t)&unk_16B61C);
      v32 = v28 & 0x3FFFFFFFFFFFFFFFLL;
    }
    else
    {
      v31 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
      v30 = v28 & 0x3FFFFFFFFFFFFFFFLL;
      v32 = v28;
    }
    ObjectType = swift_getObjectType(v32);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 32);
    swift_retain();
    v34 = COERCE_DOUBLE(v24(ObjectType, v31));
    a7 = v35;
    swift_release(v30);
    if ((a7 & 1) == 0)
    {
      v105 = a1;
      if ((_DWORD)v29)
      {
        v36 = sub_8330(&qword_1FDF58, type metadata accessor for SilentContent, (uint64_t)&unk_16B61C);
        v37 = v30;
      }
      else
      {
        v36 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
        v37 = v28;
      }
      v24 = (uint64_t (*)(uint64_t, uint64_t))swift_getObjectType(v37);
      v38 = *(uint64_t (**)(_QWORD, uint64_t))(v36 + 56);
      swift_retain();
      a7 = v38(v24, v36);
      ObjectType = v39;
      swift_release(v30);
      a1 = v105;
      if ((ObjectType & 1) == 0
        && Double.roundedDownToNearestMillisecond.getter(v34) <= a2
        && Double.roundedDownToNearestMillisecond.getter(*(double *)&a7) > a2)
      {
        swift_bridgeObjectRelease(v108);
        swift_release(v101);
        v22 = a1;
        goto LABEL_36;
      }
    }
    switch((int)v29)
    {
      case 0:
        v40 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
        goto LABEL_31;
      case 1:
        v40 = sub_8330(&qword_1FDF58, type metadata accessor for SilentContent, (uint64_t)&unk_16B61C);
        v28 = v30;
LABEL_31:
        v41 = swift_getObjectType(v28);
        v42 = *(void (**)(uint64_t, uint64_t))(v40 + 32);
        swift_retain();
        v42(v41, v40);
        v44 = v43;
        swift_release(v30);
        if ((v44 & 1) == 0)
          __asm { BR              X9 }
        swift_release(a1);
        ObjectType = (uint64_t)v107;
        a7 = v108;
        v24 = (uint64_t (*)(uint64_t, uint64_t))v106;
        break;
      default:
        swift_release(a1);
        break;
    }
    ++v25;
  }
  while (v27 != ObjectType);
  swift_bridgeObjectRelease(a7);
  v22 = v101;
  if (v101)
  {
    a1 = v101;
    goto LABEL_36;
  }
  a1 = 0;
  v63 = 0;
  v23 = 0;
  v64 = 0;
LABEL_55:
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  v79 = (void *)static OS_dispatch_queue.main.getter(v78);
  v80 = swift_allocObject(&unk_1CFB00, 49, 7);
  *(_QWORD *)(v80 + 16) = v94;
  *(_QWORD *)(v80 + 24) = a1;
  *(_QWORD *)(v80 + 32) = v63;
  *(_QWORD *)(v80 + 40) = v23;
  *(_BYTE *)(v80 + 48) = v64;
  v114 = sub_D5254;
  v115 = v80;
  aBlock = _NSConcreteStackBlock;
  v111 = 1107296256;
  v112 = sub_F528;
  v113 = &block_descriptor_47;
  v81 = _Block_copy(&aBlock);
  v82 = v115;
  swift_retain();
  swift_retain();
  swift_release(v82);
  v83 = v95;
  static DispatchQoS.unspecified.getter(v84);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v85 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
  v87 = sub_27A8C((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0, (uint64_t)&protocol conformance descriptor for [A]);
  v88 = v98;
  v89 = v86;
  v90 = v100;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v89, v87, v100, v85);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v83, v88, v81);
  _Block_release(v81);
  swift_release(a1);

  v91 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v99 + 8))(v88, v90, v91);
  return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v83, v97);
}

void sub_D4784(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_D47C4()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  char v5;

  v2 = sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
  ObjectType = swift_getObjectType(v0);
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 32);
  swift_retain();
  v4(ObjectType, v2);
  LOBYTE(v2) = v5;
  swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
  return 0;
}

void sub_D49B0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, char a5)
{
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;

  KeyPath = swift_getKeyPath(&unk_171C90);
  v11 = swift_getKeyPath(&unk_171CB8);
  static Published.subscript.getter(&v23, a1, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = v23;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE220);
  v14 = sub_27A8C(&qword_1FE228, &qword_1FE220, (uint64_t)&protocol conformance descriptor for [A]);
  LOBYTE(KeyPath) = Collection.isNotEmpty.getter(v13, v14);
  swift_bridgeObjectRelease(v12);
  if ((KeyPath & 1) != 0)
  {
    v15 = swift_getKeyPath(&off_171D00);
    v16 = swift_getKeyPath(&unk_171D28);
    static Published.subscript.getter(&v23, a1, v15, v16);
    swift_release(v15);
    swift_release(v16);
    v17 = v23;
    if (v23)
    {
      if (a2)
      {
        v18 = v24;
        v19 = v25;
        v20 = v26 & 1;
        swift_retain();
        swift_retain();
        LOBYTE(v18) = sub_D2628(a2, a3, a4, a5 & 1, v17, v18, v19, v20);
        swift_release_n(v17, 2);
        swift_release(a2);
        if ((v18 & 1) != 0)
          return;
      }
      else
      {
        swift_release(v23);
      }
LABEL_9:
      v21 = swift_getKeyPath(&off_171D00);
      v22 = swift_getKeyPath(&unk_171D28);
      v23 = a2;
      v24 = a3;
      v25 = a4;
      v26 = a5;
      swift_retain();
      swift_retain();
      static Published.subscript.setter(&v23, a1, v21, v22);
      return;
    }
    if (a2)
      goto LABEL_9;
  }
}

uint64_t sub_D4BB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171D90);
  v5 = swift_getKeyPath(&unk_171DB8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_D4C2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_171D90);
  v5 = swift_getKeyPath(&unk_171DB8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_D4CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _UNKNOWN **v54;

  v49 = a5;
  v50 = a6;
  v47 = a3;
  v48 = a4;
  v45 = a1;
  v46 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_200670);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE158);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1B8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1C8);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  v21 = v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__elapsedTime;
  *(_QWORD *)&v51 = 0;
  Published.init(initialValue:)(&v51, &type metadata for Double);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v20, v17);
  v22 = v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__activeParagraph;
  v51 = 0uLL;
  LOBYTE(v53) = 0;
  v52 = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE230);
  Published.init(initialValue:)(&v51, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22, v16, v13);
  v24 = v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__alignedViewModels;
  *(_QWORD *)&v51 = &_swiftEmptyArrayStorage;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE220);
  Published.init(initialValue:)(&v51, v25);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v24, v12, v42);
  v26 = v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver__rawViewModels;
  *(_QWORD *)&v51 = 0;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_200580);
  Published.init(initialValue:)(&v51, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v26, v9, v44);
  v28 = v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_avObserver;
  *(_OWORD *)v28 = 0u;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_QWORD *)(v28 + 32) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_subscriptions) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_dynamicAdObserver) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_displayLink) = 0;
  v29 = (_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_player);
  v30 = v45;
  v31 = v46;
  *v29 = v45;
  v29[1] = v31;
  v33 = v47;
  v32 = v48;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_playbackController) = v47;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_alignmentCoordinator) = v32;
  v35 = v49;
  v34 = v50;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_presentationContext) = v49;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_workQueue) = v34;
  swift_unknownObjectRetain(v30);
  swift_retain(v33);
  swift_retain(v32);
  swift_retain(v35);
  if ((static Podcasts.isBlueMoonEnabled()(v34) & 1) != 0)
  {
    v36 = type metadata accessor for ChaptersController();
    v37 = &off_1D4058;
  }
  else
  {
    v36 = type metadata accessor for DeprecatedChaptersController();
    v37 = &off_1D4040;
  }
  v38 = swift_allocObject(v36, 16, 7);
  v53 = v36;
  v54 = v37;
  *(_QWORD *)&v51 = v38;
  sub_27890(&v51, v6 + OBJC_IVAR____TtC12NowPlayingUI22LiveTranscriptObserver_chaptersProvider);
  sub_D0DE4();
  return v6;
}

uint64_t sub_D500C()
{
  uint64_t v0;

  return sub_9DD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_D502C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_D5050(uint64_t *a1)
{
  uint64_t v1;

  return sub_D1640(a1, v1);
}

double sub_D5058(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v4;

  return sub_D1C7C(a1, a2, a3, a4, v4);
}

uint64_t sub_D5060()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D5084(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_D50B0(uint64_t a1)
{
  uint64_t v1;

  return sub_D2F50(a1, v1);
}

uint64_t sub_D50C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_D2FF8(a1, a2, a3, v3);
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_21(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_D50E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2006A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_D5128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TranscriptSentenceSplittingBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_D519C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TranscriptSentenceSplittingBehavior(0) - 8) + 80);
  return sub_D2A18(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_D51E4(uint64_t a1)
{
  uint64_t v1;

  return sub_D2CD0(a1, v1);
}

uint64_t sub_D51EC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_D5228()
{
  uint64_t v0;

  return sub_D3CC4(*(_QWORD *)(v0 + 16), *(double *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 72));
}

uint64_t sub_D5244()
{
  return objectdestroy_43Tm((void (*)(_QWORD))&_swift_release, 49);
}

void sub_D5254()
{
  uint64_t v0;

  sub_D49B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

_QWORD *sub_D5264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD, _QWORD, _QWORD);
  char *v17;
  uint64_t v18;
  _QWORD *v19;

  v18 = a2;
  v4 = type metadata accessor for TranscriptModel.Word(0);
  v5 = __chkstk_darwin(v4);
  v17 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  result = _swiftEmptyArrayStorage;
  v19 = _swiftEmptyArrayStorage;
  if (*(_QWORD *)(a1 + 16))
  {
    v10 = *(unsigned __int8 *)(v8 + 80);
    v13[1] = v2;
    v14 = (v10 + 32) & ~v10;
    v11 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v8 + 16);
    v15 = v8;
    v16 = v11;
    v12 = v11((char *)v13 - v7, a1 + v14, v4);
    TranscriptModel.Word.startTime.getter(v12);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_D5538()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_D555C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D5580()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((~v1 & 0xF000000000000007) != 0)
    swift_release(v1 & 0x3FFFFFFFFFFFFFFFLL);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D55B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = TranscriptModel.duration.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_D55E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_D30F8(a1, a2, a3, a4, a5 & 1, v5);
}

uint64_t sub_D55F0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, a1 + 8, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
}

uint64_t sub_D5624()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  __swift_destroy_boxed_opaque_existential_0(v0 + 3);
  swift_bridgeObjectRelease(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  swift_release(v0[16]);
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_D5670()
{
  uint64_t v0;

  return sub_D35F0(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_D56B4()
{
  return objectdestroy_43Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, 32);
}

uint64_t objectdestroy_43Tm(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16));
  a1(*(_QWORD *)(v2 + 24));
  return swift_deallocObject(v2, a2, 7);
}

void sub_D5708()
{
  uint64_t v0;

  sub_D3984(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_D5738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;

  v36 = a1;
  v9 = type metadata accessor for AnimationTimelineSchedule(0);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_200998);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v38 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_171EF8);
  v18 = swift_getKeyPath(&unk_171F20);
  v19 = swift_retain();
  static Published.subscript.getter(&v44, v19, KeyPath, v18);
  swift_release(a2);
  swift_release(KeyPath);
  swift_release(v18);
  v41 = v14;
  v42 = a5;
  v39 = v15;
  if (v45 == 1
    && (unint64_t)(v44 - 1) <= 1
    && (v20 = swift_retain(),
        v21 = dispatch thunk of NowPlayingViewModel.PlaybackPosition.isPaused.getter(v20),
        swift_release(a4),
        (v21 & 1) != 0))
  {
    v22 = 1;
  }
  else
  {
    v23 = swift_getKeyPath(&unk_171F40);
    v24 = swift_getKeyPath(&unk_171F68);
    v25 = swift_retain();
    static Published.subscript.getter(&v43, v25, v23, v24);
    swift_release(a2);
    swift_release(v23);
    swift_release(v24);
    v22 = v43 ^ 1;
  }
  v26 = v36;
  AnimationTimelineSchedule.init(minimumInterval:paused:)(0, 1, v22 & 1);
  v27 = (_QWORD *)swift_allocObject(&unk_1CFD50, 48, 7);
  v27[2] = v26;
  v27[3] = a2;
  v27[4] = a3;
  v27[5] = a4;
  v28 = v40;
  v29 = v37;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v13, v9);
  v30 = swift_allocObject(&unk_1CFD78, 32, 7);
  *(_QWORD *)(v30 + 16) = sub_D71B0;
  *(_QWORD *)(v30 + 24) = v27;
  v31 = type metadata accessor for NowPlayingSleepTimerRemainingText(0);
  v32 = sub_8330(&qword_1FCB48, (uint64_t (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule, (uint64_t)&protocol conformance descriptor for AnimationTimelineSchedule);
  v33 = sub_8330(&qword_2009A0, type metadata accessor for NowPlayingSleepTimerRemainingText, (uint64_t)&unk_1720E8);
  swift_retain();
  swift_retain();
  v34 = v38;
  TimelineView<>.init(_:content:)(v29, sub_D72C4, v30, v9, v31, v32, v33);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v42, v34, v41);
}

uint64_t sub_D5A44@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  __n128 v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v25[15];
  uint64_t v26;

  v6 = type metadata accessor for NowPlayingSleepTimerRemainingText(0);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  swift_retain();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB58);
  TimelineView.Context.date.getter(v13);
  v14 = sub_D649C(a2, (uint64_t)v12);
  v16 = v15;
  swift_release(a1);
  v17 = swift_release(a2);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v17);
  KeyPath = swift_getKeyPath(&unk_171F40);
  v19 = swift_getKeyPath(&unk_171F68);
  v20 = swift_retain_n(a1, 2);
  static Published.subscript.getter(&v26, v20, KeyPath, v19);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v19);
  v21 = v26;
  if ((v16 & 1) != 0)
    v21 = 0;
  *(_QWORD *)v8 = v14;
  v8[8] = v16 & 1;
  *((_QWORD *)v8 + 2) = a1;
  v8[24] = v21;
  v22 = &v8[*(int *)(v6 + 28)];
  *v22 = swift_getKeyPath(&unk_171F88);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  return sub_D72FC((uint64_t)v8, a3);
}

uint64_t sub_D5C10@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_D5738(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_D5C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t *v62;
  void (*v63)(char *, uint64_t);
  void *v64;
  uint64_t *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  uint64_t *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;

  v2 = v1;
  v113 = a1;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v111 = *(_QWORD *)(v3 - 8);
  v112 = v3;
  __chkstk_darwin(v3);
  v110 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for BlendMode(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v96 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE60);
  __chkstk_darwin(v97);
  v95 = (uint64_t *)((char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = type metadata accessor for ColorSchemeContrast(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v95 - v10;
  v12 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, v9);
  __chkstk_darwin(v12);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A60);
  v108 = *(_QWORD *)(v15 - 8);
  v109 = v15;
  __chkstk_darwin(v15);
  v107 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A68);
  __chkstk_darwin(v103);
  v106 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A70);
  __chkstk_darwin(v105);
  v104 = (uint64_t)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = v2;
  v19 = sub_D7C44(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  v21 = v20;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1);
  v22._countAndFlagsBits = 0x6954207065656C53;
  v22._object = (void *)0xEC0000002072656DLL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v22);
  v23._countAndFlagsBits = v19;
  v23._object = v21;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v23);
  swift_bridgeObjectRelease(v21);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  v25 = LocalizedStringKey.init(stringInterpolation:)(v14);
  v26 = Text.init(_:tableName:bundle:comment:)(v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Font.caption2.getter();
  v34 = Font.monospacedDigit()();
  swift_release(v33);
  v35 = Text.font(_:)(v34, v26, v28, v32, v30);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release(v34);
  v42 = v39 & 1;
  sub_25404(v26, v28, v32);
  swift_bridgeObjectRelease(v30);
  v44 = static Font.Weight.medium.getter(v43);
  v45 = Text.fontWeight(_:)(*(_QWORD *)&v44, 0, v35, v37, v42, v41);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  sub_25404(v35, v37, v42);
  swift_bridgeObjectRelease(v41);
  type metadata accessor for NowPlayingSleepTimerRemainingText(0);
  sub_562AC((uint64_t)v11);
  v52 = v101;
  v53 = v100;
  v54 = v102;
  (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v100, enum case for ColorSchemeContrast.standard(_:), v102);
  LOBYTE(v28) = static ColorSchemeContrast.== infix(_:_:)(v11, v53);
  v55 = *(void (**)(char *, uint64_t))(v52 + 8);
  v55(v53, v54);
  v56 = ((uint64_t (*)(char *, uint64_t))v55)(v11, v54);
  if ((v28 & 1) != 0)
  {
    if (qword_1F9450 != -1)
      swift_once(&qword_1F9450, sub_1547C);
    v57 = qword_210038;
    v58 = v98;
    v59 = v96;
    v60 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v96, enum case for BlendMode.plusLighter(_:), v99);
    v61 = (void *)v97;
    v62 = v95;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))((char *)v95 + *(int *)(v97 + 36), v59, v60);
    *v62 = v57;
    v63 = *(void (**)(char *, uint64_t))(v58 + 8);
    swift_retain();
    v63(v59, v60);
    v64 = (void *)sub_D7DD8();
    v65 = v62;
    v66 = v61;
  }
  else
  {
    v115 = static Color.secondary.getter(v56);
    v66 = &type metadata for Color;
    v64 = &protocol witness table for Color;
    v65 = &v115;
  }
  v67 = AnyShapeStyle.init<A>(_:)(v65, v66, v64);
  v115 = v67;
  v68 = Text.foregroundStyle<A>(_:)(&v115, v45, v47, v49 & 1, v51, &type metadata for AnyShapeStyle, &protocol witness table for AnyShapeStyle);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  sub_25404(v45, v47, v49 & 1);
  swift_release(v67);
  v75 = swift_bridgeObjectRelease(v51);
  v115 = v68;
  v116 = v70;
  v117 = v72 & 1;
  v118 = v74;
  v77 = v110;
  v76 = v111;
  v78 = v112;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v111 + 104))(v110, enum case for DynamicTypeSize.large(_:), v112, v75);
  v79 = v107;
  View.dynamicTypeSize(_:)(v77, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
  sub_25404(v115, v116, v117);
  swift_bridgeObjectRelease(v118);
  LOBYTE(v78) = static Edge.Set.bottom.getter(v80);
  v81 = EdgeInsets.init(_all:)(2.0);
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v89 = v108;
  v88 = v109;
  v90 = (uint64_t)v106;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v106, v79, v109);
  v91 = v90 + *(int *)(v103 + 36);
  *(_BYTE *)v91 = v78;
  *(double *)(v91 + 8) = v81;
  *(_QWORD *)(v91 + 16) = v83;
  *(_QWORD *)(v91 + 24) = v85;
  *(_QWORD *)(v91 + 32) = v87;
  *(_BYTE *)(v91 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v79, v88);
  if (*(_BYTE *)(v114 + 24))
    v92 = 1.0;
  else
    v92 = 0.0;
  v93 = v104;
  sub_D7D48(v90, v104);
  *(double *)(v93 + *(int *)(v105 + 36)) = v92;
  sub_9944(v90, &qword_200A68);
  return sub_D7D90(v93, v113);
}

double sub_D6304()
{
  return sub_D63B0((uint64_t)&unk_171FB8, (uint64_t)&unk_171FE0);
}

uint64_t sub_D6318()
{
  return sub_D642C((uint64_t)&unk_171EF8, (uint64_t)&unk_171F20);
}

uint64_t sub_D632C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_171F40);
  v2 = swift_getKeyPath(&unk_171F68);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_D639C()
{
  return sub_D63B0((uint64_t)&unk_172048, (uint64_t)&unk_172070);
}

double sub_D63B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_D6418()
{
  return sub_D642C((uint64_t)&unk_172000, (uint64_t)&off_172028);
}

uint64_t sub_D642C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_D649C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  double v33;
  char v34;

  v3 = v2;
  v30[1] = a2;
  v32 = a1;
  v31 = type metadata accessor for NowPlayingViewModel.DurationSnapshot(0);
  __chkstk_darwin(v31);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2009B0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static Podcasts.isBlueMoonEnabled()(v9);
  KeyPath = swift_getKeyPath(&unk_171EF8);
  v12 = swift_getKeyPath(&unk_171F20);
  if ((v10 & 1) != 0)
  {
    static Published.subscript.getter(&v33, v3, KeyPath, v12);
    swift_release(KeyPath);
    swift_release(v12);
    if (v34 == 1)
      __asm { BR              X10 }
LABEL_11:
    v20 = swift_getKeyPath(&unk_172048);
    v21 = swift_getKeyPath(&unk_172070);
    static Published.subscript.getter(&v33, v3, v20, v21);
    swift_release(v20);
    swift_release(v21);
    v22 = v33;
    v24 = Date.init()(v23);
    v25 = Date.timeIntervalSinceReferenceDate.getter(v24);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v26 = ceil(v22 - v25);
    if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
          return (uint64_t)v26 & ~((uint64_t)v26 >> 63);
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  static Published.subscript.getter(&v33, v3, KeyPath, v12);
  swift_release(KeyPath);
  swift_release(v12);
  if (v34 != 1)
  {
    v28 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 16));
    v19 = (*(double (**)(uint64_t, uint64_t))(v28 + 296))(ObjectType, v28);
    if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v19 <= -9.22337204e18)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= 9.22337204e18)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    return (uint64_t)v19;
  }
  if ((unint64_t)(*(_QWORD *)&v33 - 1) < 2)
  {
    v13 = swift_getKeyPath(&unk_171FB8);
    v14 = swift_getKeyPath(&unk_171FE0);
    static Published.subscript.getter(&v33, v3, v13, v14);
    swift_release(v13);
    swift_release(v14);
    if (v33 > 0.0)
    {
      v15 = *(_QWORD *)(v3 + 24);
      v16 = swift_getObjectType(*(_QWORD *)(v3 + 16));
      v17 = (*(double (**)(uint64_t, uint64_t))(v15 + 296))(v16, v15);
      v8 = (char *)swift_getKeyPath(&unk_171FB8);
      v18 = swift_getKeyPath(&unk_171FE0);
      static Published.subscript.getter(&v33, v3, v8, v18);
      swift_release(v8);
      swift_release(v18);
      v19 = v17 / v33;
      if ((~COERCE__INT64(v17 / v33) & 0x7FF0000000000000) == 0)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      if (v19 <= -9.22337204e18)
      {
LABEL_27:
        __break(1u);
        JUMPOUT(0xD6A70);
      }
      if (v19 >= 9.22337204e18)
      {
        __break(1u);
        goto LABEL_11;
      }
      return (uint64_t)v19;
    }
  }
  return 0;
}

uint64_t sub_D6A90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  v1 = &v0[OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__desiredRate];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FE1C8);
  v3 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = &v0[OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__sleepTimerMode];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC3C8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = &v0[OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__isVisible];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v3(&v0[OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__fireDate], v2);
  v8 = &v0[OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__currentChapterEndTime];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2009B8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_D6B90()
{
  return type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(0);
}

uint64_t type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_2007E0, (uint64_t)&nominal type descriptor for NowPlayingSleepTimerRemaining.ViewModel);
}

void sub_D6BAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[6];

  v11[0] = &unk_171E28;
  sub_41ED0(319, (unint64_t *)&qword_200560, (uint64_t)&type metadata for Double);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v11[1] = v4;
    sub_41ED0(319, &qword_1FC140, (uint64_t)&type metadata for PlayerAutoStopMode);
    if (v6 <= 0x3F)
    {
      v11[2] = *(_QWORD *)(v5 - 8) + 64;
      sub_41ED0(319, (unint64_t *)&qword_2013A0, (uint64_t)&type metadata for Bool);
      if (v8 <= 0x3F)
      {
        v11[3] = *(_QWORD *)(v7 - 8) + 64;
        v11[4] = v4;
        sub_D6CA4(319);
        if (v10 <= 0x3F)
        {
          v11[5] = *(_QWORD *)(v9 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 6, v11, a1 + 80);
        }
      }
    }
  }
}

void sub_D6CA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_2007F0)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FB3B0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_2007F0);
  }
}

_QWORD *initializeWithCopy for NowPlayingSleepTimerRemaining(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for NowPlayingSleepTimerRemaining(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for NowPlayingSleepTimerRemaining(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingSleepTimerRemaining()
{
  return &type metadata for NowPlayingSleepTimerRemaining;
}

uint64_t sub_D6DF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A1C9C, 1);
}

uint64_t sub_D6E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingSleepTimerRemaining.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

id sub_D6E44()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  result = objc_msgSend(v0, "setStyle:", 1);
  qword_200788 = (uint64_t)v0;
  return result;
}

double sub_D6E90@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171FB8);
  v5 = swift_getKeyPath(&unk_171FE0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_D6F0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_171FB8);
  v5 = swift_getKeyPath(&unk_171FE0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_D6F84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171EF8);
  v5 = swift_getKeyPath(&unk_171F20);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_D700C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_171EF8);
  v6 = swift_getKeyPath(&unk_171F20);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

uint64_t sub_D7090@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_171F40);
  v5 = swift_getKeyPath(&unk_171F68);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_D7110(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_171F40);
  v5 = swift_getKeyPath(&unk_171F68);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_D7184()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D71B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_D5A44(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_D71BC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  return sub_D71C8(a1, a2, a3, &qword_200A88);
}

uint64_t sub_D71C8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCB58);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  result = __swift_instantiateConcreteTypeFromMangledName(a4);
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    a2((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_D72A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D72C4(uint64_t a1)
{
  uint64_t v1;

  return sub_D71C8(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_2009A8);
}

uint64_t type metadata accessor for NowPlayingSleepTimerRemainingText(uint64_t a1)
{
  return sub_256F8(a1, qword_200A18, (uint64_t)&nominal type descriptor for NowPlayingSleepTimerRemainingText);
}

uint64_t sub_D72FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingSleepTimerRemainingText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_D7358(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  char v26;

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2009B8);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v7 + OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__currentChapterEndTime;
  v25 = 0;
  v26 = 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB3B0);
  Published.init(initialValue:)(&v25, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  swift_beginAccess(v7 + OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__desiredRate, &v25, 33, 0);
  v23 = a6;
  swift_unknownObjectRetain(a1);
  Published.init(initialValue:)(&v23, &type metadata for Double);
  swift_endAccess(&v25);
  swift_beginAccess(v7 + OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__sleepTimerMode, &v25, 33, 0);
  v23 = *(double *)&a3;
  v24 = a4 & 1;
  Published.init(initialValue:)(&v23, &type metadata for PlayerAutoStopMode);
  swift_endAccess(&v25);
  swift_beginAccess(v7 + OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__fireDate, &v25, 33, 0);
  v23 = a7;
  Published.init(initialValue:)(&v23, &type metadata for Double);
  swift_endAccess(&v25);
  swift_beginAccess(v7 + OBJC_IVAR____TtCV12NowPlayingUI29NowPlayingSleepTimerRemaining9ViewModel__isVisible, &v25, 33, 0);
  LOBYTE(v23) = a5;
  Published.init(initialValue:)(&v23, &type metadata for Bool);
  swift_endAccess(&v25);
  return v7;
}

_QWORD *sub_D7558(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v5 = *(int *)(a3 + 28);
    v6 = (_QWORD *)(a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    swift_retain();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
    {
      v9 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
      v10 = v6;
      v11 = v8;
      v12 = 1;
    }
    else
    {
      *v6 = *v7;
      swift_retain();
      v10 = v6;
      v11 = v8;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return v3;
}

double sub_D764C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 16));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_D76C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  swift_retain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
    v9 = 1;
  }
  else
  {
    *v5 = *v6;
    swift_retain();
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v9);
  return a1;
}

uint64_t sub_D7784(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release(v7);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  if ((uint64_t *)a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_9944(a1 + v8, &qword_1FABA0);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t sub_D7870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_D7930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v6);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_9944(a1 + v7, &qword_1FABA0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_D7A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D7A24);
}

uint64_t sub_D7A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_D7AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D7AB0);
}

uint64_t sub_D7AB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_D7B28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_1720D0;
  sub_930E4(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

unint64_t sub_D7BB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200A58;
  if (!qword_200A58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200998);
    sub_8330(&qword_2009A0, type metadata accessor for NowPlayingSleepTimerRemainingText, (uint64_t)&unk_1720E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> TimelineView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200A58);
  }
  return result;
}

uint64_t sub_D7C34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A1CC4, 1);
}

uint64_t sub_D7C44(uint64_t a1, char a2)
{
  double v3;
  id v4;
  uint64_t countAndFlagsBits;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  Swift::String v10;

  if ((a2 & 1) != 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10._object = (void *)0xE000000000000000;
    v6._object = (void *)0x8000000000185B10;
    v6._countAndFlagsBits = 0xD000000000000010;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v10._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v4, v7, v10)._countAndFlagsBits;
  }
  else
  {
    if (qword_1F9528 != -1)
      swift_once(&qword_1F9528, sub_D6E44);
    v3 = (double)a1;
    if (a1 < 0)
      v3 = 0.0;
    v4 = objc_msgSend((id)qword_200788, "stringFromSeconds:", v3);
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  }
  v8 = countAndFlagsBits;

  return v8;
}

uint64_t sub_D7D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D7D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_200A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_D7DD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FAED8;
  if (!qword_1FAED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FAE60);
    result = swift_getWitnessTable(&protocol conformance descriptor for _BlendModeShapeStyle<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1FAED8);
  }
  return result;
}

unint64_t sub_D7E28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200A78;
  if (!qword_200A78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200A70);
    sub_D7E94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200A78);
  }
  return result;
}

unint64_t sub_D7E94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_200A80;
  if (!qword_200A80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200A68);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200A80);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptContentViewModel.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2 & 0x3FFFFFFFFFFFFFFFLL;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for TranscriptContentViewModel.ID(_QWORD *a1)
{
  return swift_release(*a1 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t *assignWithCopy for TranscriptContentViewModel.ID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2 & 0x3FFFFFFFFFFFFFFFLL;
  v4 = *a1;
  *a1 = *a2;
  v5 = v4 & 0x3FFFFFFFFFFFFFFFLL;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

uint64_t *assignWithTake for TranscriptContentViewModel.ID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptContentViewModel.ID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptContentViewModel.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_D8080(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_D808C(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_D809C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for TranscriptContentType()
{
  return &type metadata for TranscriptContentType;
}

void sub_D80C0(uint64_t a1)
{
  __asm { BR              X10 }
}

_QWORD *sub_D80F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = a1[2];
  v1 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (_QWORD *)swift_allocObject(&unk_1CFF08, 48, 7);
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v3;
  v5[5] = v4;
  swift_bridgeObjectRetain(v1);
  return v5;
}

void sub_D81BC(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  sub_D80C0(*v1);
  *a1 = v3;
}

void sub_D81E4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_D8218()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  _QWORD v4[8];

  strcpy((char *)v4, "Text Content ");
  swift_retain(v0 & 0x3FFFFFFFFFFFFFFFLL);
  v1._countAndFlagsBits = sub_12BB84();
  object = v1._object;
  String.append(_:)(v1);
  swift_release(v0 & 0x3FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRelease(object);
  return v4[0];
}

void sub_D83B8()
{
  uint64_t *v0;

  sub_D81E4(*v0);
}

uint64_t sub_D83C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_D83E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D8408()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((~v1 & 0xF000000000000007) != 0)
    swift_release(v1 & 0x3FFFFFFFFFFFFFFFLL);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D8444(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    v4 = __CocoaSet.startIndex.getter(v3);
    v6 = v5;
    v7 = __CocoaSet.endIndex.getter(v3);
    v9 = static __CocoaSet.Index.== infix(_:_:)(v4, v6, v7, v8);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = sub_E1F74(a1);
  if ((v13 & 1) == 0)
  {
    v6 = v12;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v12)
    {
      v4 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_E3E8C(v4, v6, v2 != 0);
        return 0;
      }
LABEL_10:
      sub_E1D0C(v4, v6, v2 != 0, a1);
      v10 = v14;
      sub_E3E8C(v4, v6, v2 != 0);
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_D8550()
{
  qword_200A90 = 0x4034000000000000;
}

id sub_D86D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController____lazy_storage___upsellString;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController____lazy_storage___upsellString);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController____lazy_storage___upsellString);
  }
  else
  {
    v4 = sub_D8734();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_D8734()
{
  id v0;
  id v1;
  NSString v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *object;
  id v15;
  NSString v16;
  id v17;
  Swift::String v19;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleSubheadline);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v2, v1);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v5 = objc_msgSend(v3, "imageWithTintColor:renderingMode:", v4, 1);

  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v0, "setImage:", v5);

  v6 = sub_F174(0, &qword_200C58, NSMutableAttributedString_ptr);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "attributedStringWithAttachment:", v0);
  v8 = objc_allocWithZone((Class)NSAttributedString);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithString:", v9);

  objc_msgSend(v7, "appendAttributedString:", v10);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12._countAndFlagsBits = 0xD000000000000016;
  v19._object = (void *)0xE000000000000000;
  v12._object = (void *)0x8000000000187D30;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v19)._object;

  v15 = objc_allocWithZone((Class)NSAttributedString);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithString:", v16, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v7, "appendAttributedString:", v17);
  return v7;
}

void sub_D89E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE *v4;
  char v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    swift_beginAccess(v1, &v6, 0, 0);
    v4 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
    if (v4)
    {
      v5 = v4[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible];

    }
    else
    {
      v5 = 1;
    }
    sub_D8A74(v5);

  }
}

void sub_D8A74(char a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  double v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  CGFloat v22;
  id v23;
  void *v24;
  CGFloat ty;
  id v26;
  void *v27;
  CGAffineTransform v28;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel);
  if ((a1 & 1) != 0)
  {
    if (v3)
    {
      objc_msgSend(v3, "alpha");
      if (v4 == 1.0)
        return;
      goto LABEL_7;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (!v3)
    goto LABEL_26;
  objc_msgSend(v3, "alpha");
  if (v5 == 0.0)
    return;
LABEL_7:
  v6 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellAnimator;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellAnimator);
  if (v7)
    objc_msgSend(v7, "stopAnimation:", 1);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel);
  if ((a1 & 1) == 0)
  {
    if (v8)
    {
      v18 = qword_1F9530;
      v19 = v8;
      if (v18 != -1)
        swift_once(&qword_1F9530, sub_D8550);
      CGAffineTransformMakeTranslation(&v28, -*(double *)&qword_200A90, 0.0);
      objc_msgSend(v19, "setTransform:", &v28);

      v20 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel);
      if (v20)
      {
        *(_OWORD *)&v28.a = 0x3FF0000000000000uLL;
        v28.c = 0.0;
        v28.d = 1.0;
        *(_OWORD *)&v28.tx = 0uLL;
        objc_msgSend(v20, "setTransform:", &v28);
        goto LABEL_23;
      }
      goto LABEL_31;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!v8)
    goto LABEL_27;
  *(_OWORD *)&v28.a = 0x3FF0000000000000uLL;
  v28.c = 0.0;
  v28.d = 1.0;
  *(_OWORD *)&v28.tx = 0uLL;
  objc_msgSend(v8, "setTransform:", &v28);
  v9 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel);
  if (!v10)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v11 = qword_1F9530;
  v12 = v10;
  if (v11 != -1)
    swift_once(&qword_1F9530, sub_D8550);
  CGAffineTransformMakeTranslation(&v28, *(CGFloat *)&qword_200A90, 0.0);
  objc_msgSend(v12, "setTransform:", &v28);

  v13 = *(void **)(v1 + v9);
  if (!v13)
    goto LABEL_29;
  v14 = objc_msgSend(v13, "attributedText");

  if (!v14)
  {
    v15 = *(void **)(v1 + v9);
    if (v15)
    {
      v16 = v15;
      v17 = sub_D86D8();
      objc_msgSend(v16, "setAttributedText:", v17);

      goto LABEL_23;
    }
LABEL_32:
    __break(1u);
    return;
  }
LABEL_23:
  v21 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v1);
  v22 = COERCE_DOUBLE(swift_allocObject(&unk_1D0440, 25, 7));
  *(_QWORD *)(*(_QWORD *)&v22 + 16) = v21;
  *(_BYTE *)(*(_QWORD *)&v22 + 24) = a1 & 1;
  v23 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  *(_QWORD *)&v28.tx = sub_E4018;
  v28.ty = v22;
  *(_QWORD *)&v28.a = _NSConcreteStackBlock;
  *(_QWORD *)&v28.b = 1107296256;
  *(_QWORD *)&v28.c = sub_F528;
  *(_QWORD *)&v28.d = &block_descriptor_90_0;
  v24 = _Block_copy(&v28);
  ty = v28.ty;
  swift_retain(v21);
  swift_release(*(_QWORD *)&ty);
  v26 = objc_msgSend(v23, "initWithDuration:curve:animations:", 0, v24, 0.5);
  _Block_release(v24);
  swift_release(v21);
  v27 = *(void **)(v1 + v6);
  *(_QWORD *)(v1 + v6) = v26;

  objc_msgSend(*(id *)(v1 + v6), "startAnimation");
}

void sub_D8DD8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v2 = v1;
  v4 = a1 & 1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v27 - v16;
  v18 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible) = a1;
  if (v18 != v4)
  {
    if ((a1 & 1) != 0)
    {
      sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
      v19 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()(v19);
      + infix(_:_:)(v15, 1.0);
      v20 = *(void (**)(char *, uint64_t))(v12 + 8);
      v20(v15, v11);
      v21 = swift_allocObject(&unk_1D0198, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16, v2);
      aBlock[4] = sub_E4024;
      v32 = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F528;
      aBlock[3] = &block_descriptor_94;
      v22 = _Block_copy(aBlock);
      swift_release(v32);
      static DispatchQoS.unspecified.getter(v23);
      aBlock[0] = &_swiftEmptyArrayStorage;
      v24 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
      v26 = sub_F574();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v5, v24);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v22);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
      v20(v17, v11);
    }
    else
    {
      sub_D8A74(0);
    }
  }
}

void sub_D9124()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  NSString v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  NSString v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  double v56;
  id v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  id v105;
  void *v106;
  id v107;
  uint64_t v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  id v113;
  id v114;
  double v115;
  NSString *v116;
  void *v117;
  id v118;
  id v119;
  void *v120;
  id v121;
  uint64_t v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  double v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  id v134;
  void *v135;
  void *v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  id v141;
  uint64_t IsAccessibilityContentSizeCategory;
  void *v143;
  void *v144;
  char *v145;
  uint64_t v146;
  void *v147;
  void *v148;
  uint64_t v149;
  id v150;
  char *v151;
  uint64_t v152;
  void *v153;
  void *v154;
  uint64_t v155;
  id v156;
  void *v157;
  uint64_t v158;
  id v159;
  void *v160;
  uint64_t v161;
  id v162;
  char *v163;
  uint64_t v164;
  void *v165;
  void *v166;
  uint64_t v167;
  id v168;
  void *v169;
  uint64_t v170;
  id v171;
  void *v172;
  uint64_t v173;
  id v174;
  void *v175;
  id v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  id v193;
  id v194;
  Class isa;
  id v196;
  uint64_t v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  id v205;
  void *v206;
  uint64_t v207;
  void (*v208)(uint64_t);
  uint64_t v209;
  uint64_t v210;
  id v211;
  void *v212;
  void *v213;
  id v214;
  id v215;
  void *v216;
  id v217;
  uint64_t v218;
  id v219;
  void *v220;
  id v221;
  void *v222;
  id v223;
  id v224;
  void *v225;
  id v226;
  id v227;
  void *v228;
  uint64_t v229;
  void *v230;
  _QWORD *v231;
  id v232;
  void *v233;
  id v234;
  id v235;
  void *v236;
  id v237;
  void *v238;
  id v239;
  id v240;
  void *v241;
  id v242;
  void *v243;
  id v244;
  id v245;
  void *v246;
  id v247;
  id v248;
  id v249;
  void *v250;
  id v251;
  id v252;
  id v253;
  double v254;
  id v255;
  void *v256;
  id v257;
  id v258;
  void *v259;
  id v260;
  void *v261;
  id v262;
  id v263;
  id v264;
  void *v265;
  id v266;
  id v267;
  id v268;
  void *v269;
  id v270;
  id v271;
  id v272;
  void *v273;
  id v274;
  id v275;
  id v276;
  void *v277;
  id v278;
  id v279;
  void *v280;
  id v281;
  id v282;
  id v283;
  void *v284;
  id v285;
  id v286;
  void *v287;
  id v288;
  id v289;
  void *v290;
  id v291;
  void *v292;
  id v293;
  id v294;
  void *v295;
  id v296;
  id v297;
  id v298;
  void *v299;
  id v300;
  void *v301;
  id v302;
  id v303;
  void *v304;
  id v305;
  void *v306;
  id v307;
  id v308;
  void *v309;
  id v310;
  id v311;
  id v312;
  void *v313;
  id v314;
  id v315;
  id v316;
  void *v317;
  id v318;
  void *v319;
  id v320;
  id v321;
  void *v322;
  id v323;
  void *v324;
  id v325;
  id v326;
  double v327;
  id v328;
  void *v329;
  id v330;
  void *v331;
  id v332;
  id v333;
  void *v334;
  id v335;
  void *v336;
  id v337;
  id v338;
  void *v339;
  id v340;
  void *v341;
  id v342;
  id v343;
  void *v344;
  id v345;
  void *v346;
  id v347;
  id v348;
  void *v349;
  id v350;
  void *v351;
  void *v352;
  void *v353;
  id v354;
  id v355;
  uint64_t v356;
  uint64_t v357;
  Class v358;
  void *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t inited;
  uint64_t v366;
  uint64_t v367;
  uint64_t ObjectType;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  id v373;
  _QWORD *v374;
  char *v375;
  uint64_t v376;
  unint64_t v377;
  unint64_t v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  id (**v382)(double, double);
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  void *v386;
  void *v387;
  id v388;
  void *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  void *Strong;
  void *v397;
  uint64_t v398;
  id v399;
  id v400;
  uint64_t v401;
  uint64_t v402;
  void *v403;
  id v404;
  uint64_t v405;
  id v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  id v411;
  id v412;
  _QWORD v413[14];
  _DWORD v414[6];
  char v415[68];
  int v416;
  objc_super v417;

  v1 = v0;
  v417.receiver = v0;
  v417.super_class = (Class)type metadata accessor for MiniPlayerViewController();
  objc_msgSendSuper2(&v417, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
  v3 = v2;
  if (qword_1F95E8 != -1)
    swift_once(&qword_1F95E8, sub_FE2AC);
  objc_msgSend(v3, "setTintColor:", qword_210370);

  v4 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
  v5 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playbackCancellationGesture;
  v6 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playbackCancellationGesture];
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playbackCancellationGesture] = v4;

  v7 = *(void **)&v1[v5];
  if (!v7)
    goto LABEL_144;
  objc_msgSend(v7, "setNumberOfTouchesRequired:", 2);
  v8 = *(void **)&v1[v5];
  if (!v8)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  objc_msgSend(v8, "setMinimumPressDuration:", 2.0);
  v9 = *(void **)&v1[v5];
  if (!v9)
  {
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  v10 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  swift_retain();
  v11 = v9;
  v12 = sub_118234((uint64_t)sub_E402C, v10);
  swift_release(v12);

  swift_release_n(v10, 2);
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  if (!*(_QWORD *)&v1[v5])
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  v14 = v13;
  objc_msgSend(v13, "addGestureRecognizer:");

  v15 = *(void **)&v1[v5];
  if (!v15)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  objc_msgSend(v15, "setDelegate:", v1);
  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  v17 = v16;
  v18 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v19 = objc_allocWithZone((Class)type metadata accessor for ContextActionsPresentationRegistration());
  swift_retain_n(v18, 2);
  v20 = v1;
  v21 = (char *)sub_72324(v20, (uint64_t)sub_E4034, v18);
  v22 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v21);
  v23 = *(void **)&v21[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction];
  *(_QWORD *)&v21[OBJC_IVAR____TtC12NowPlayingUI38ContextActionsPresentationRegistration_interaction] = v22;
  v24 = v22;

  objc_msgSend(v17, "addInteraction:", v24);
  swift_release_n(v18, 2);

  v25 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_contextActionRegistration];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_contextActionRegistration] = v21;

  v26 = objc_msgSend(v20, "view");
  if (!v26)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "layer");

  objc_msgSend(v28, "setAllowsGroupBlending:", 0);
  v29 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v30 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide;
  v31 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide] = v29;

  v32 = *(void **)&v20[v30];
  if (!v32)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  v33 = v32;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setIdentifier:", v34);

  v35 = objc_msgSend(v20, "view");
  if (!v35)
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  if (!*(_QWORD *)&v20[v30])
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  v36 = v35;
  objc_msgSend(v35, "addLayoutGuide:");

  type metadata accessor for NowPlayingContentView();
  v37 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38 = objc_msgSend(v20, "view");
  if (!v38)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  v39 = v38;
  objc_msgSend(v38, "addSubview:", v37);

  v40 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView] = v37;
  v41 = v37;

  v42 = objc_msgSend(objc_allocWithZone((Class)MPCPlayerRequest), "init");
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v42, "setLabel:", v43);

  v44 = sub_A37BC();
  objc_msgSend(v42, "setPlayingItemProperties:", v44);

  v45 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController];
  objc_msgSend(v45, "setDelegate:", v20);
  objc_msgSend(v45, "setRequest:", v42);
  v46 = objc_msgSend(objc_allocWithZone((Class)MPRouteLabel), "init");
  v47 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel;
  v48 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel] = v46;

  v49 = *(void **)&v20[v47];
  if (!v49)
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v50 = *(void **)&v20[v47];
  if (!v50)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  sub_F174(0, (unint64_t *)&qword_200C60, UIFont_ptr);
  v51 = v50;
  v52 = (void *)static UIFont.preferredFont(forTextStyle:traits:)(UIFontTextStyleCaption2, 2);
  objc_msgSend(v51, "setFont:", v52);

  v53 = *(void **)&v20[v47];
  if (!v53)
  {
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  objc_msgSend(v53, "setForcesUppercaseText:", 1);
  v54 = *(void **)&v20[v47];
  if (!v54)
  {
LABEL_159:
    __break(1u);
    goto LABEL_160;
  }
  v55 = objc_msgSend(v54, "layer");
  LODWORD(v56) = 1050253722;
  objc_msgSend(v55, "setOpacity:", v56);

  v57 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v58 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel;
  v59 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel] = v57;

  v60 = *(void **)&v20[v58];
  if (!v60)
  {
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  objc_msgSend(v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v61 = *(void **)&v20[v58];
  if (!v61)
  {
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  objc_msgSend(v61, "setNumberOfLines:", 1);
  v62 = *(void **)&v20[v58];
  if (!v62)
  {
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  v407 = v30;
  v63 = (void *)objc_opt_self(UIFont);
  v64 = v62;
  v411 = v63;
  v65 = objc_msgSend(v63, "_preferredFontForTextStyle:weight:", UIFontTextStyleSubheadline, UIFontWeightMedium);
  objc_msgSend(v64, "setFont:", v65);

  v66 = *(void **)&v20[v58];
  if (!v66)
  {
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  objc_msgSend(v66, "_setTextColorFollowsTintColor:", 1);
  v67 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v68 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel;
  v69 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel] = v67;

  v70 = *(void **)&v20[v68];
  if (!v70)
  {
LABEL_164:
    __break(1u);
    goto LABEL_165;
  }
  objc_msgSend(v70, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v71 = *(void **)&v20[v68];
  if (!v71)
  {
LABEL_165:
    __break(1u);
    goto LABEL_166;
  }
  v403 = v42;
  objc_msgSend(v71, "setNumberOfLines:", 1);
  v72 = *(void **)&v20[v68];
  if (!v72)
  {
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  v404 = v41;
  v73 = (void *)objc_opt_self(UIColor);
  v74 = v72;
  v75 = objc_msgSend(v73, "secondaryLabelColor");
  objc_msgSend(v74, "setTextColor:", v75);

  v409 = v68;
  v76 = *(void **)&v20[v68];
  if (!v76)
  {
LABEL_167:
    __break(1u);
    goto LABEL_168;
  }
  v77 = v76;
  v78 = objc_msgSend(v411, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v77, "setFont:", v78);

  v79 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v80 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel;
  v81 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel] = v79;

  v82 = *(void **)&v20[v80];
  if (!v82)
  {
LABEL_168:
    __break(1u);
    goto LABEL_169;
  }
  objc_msgSend(v82, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v83 = *(void **)&v20[v80];
  if (!v83)
  {
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  objc_msgSend(v83, "setNumberOfLines:", 1);
  v84 = *(void **)&v20[v80];
  if (!v84)
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  v85 = v84;
  v86 = objc_msgSend(v73, "secondaryLabelColor");
  objc_msgSend(v85, "setTextColor:", v86);

  v87 = *(void **)&v20[v80];
  if (!v87)
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  objc_msgSend(v87, "setAlpha:", 0.0);
  v88 = *(void **)&v20[v80];
  if (!v88)
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  v89 = v88;
  v90 = objc_msgSend(v411, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v89, "setFont:", v90);

  v91 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v92 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemStackView;
  v93 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemStackView];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemStackView] = v91;

  v94 = *(void **)&v20[v92];
  if (!v94)
  {
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  objc_msgSend(v94, "setAxis:", 1);
  v95 = *(void **)&v20[v92];
  if (!v95)
  {
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
  objc_msgSend(v95, "setSpacing:", 3.0);
  v96 = *(void **)&v20[v92];
  if (!v96)
  {
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  objc_msgSend(v96, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v97 = objc_msgSend(v20, "view");
  if (!v97)
  {
LABEL_176:
    __break(1u);
    goto LABEL_177;
  }
  if (!*(_QWORD *)&v20[v92])
  {
LABEL_177:
    __break(1u);
    goto LABEL_178;
  }
  v98 = v97;
  objc_msgSend(v97, "addSubview:");

  v99 = *(void **)&v20[v92];
  if (!v99)
  {
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  v100 = *(_QWORD *)&v20[v47];
  if (!v100)
  {
LABEL_179:
    __break(1u);
    goto LABEL_180;
  }
  objc_msgSend(v99, "insertArrangedSubview:atIndex:", v100, 0);
  v101 = *(void **)&v20[v92];
  if (!v101)
  {
LABEL_180:
    __break(1u);
    goto LABEL_181;
  }
  v102 = *(_QWORD *)&v20[v58];
  if (!v102)
  {
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
  objc_msgSend(v101, "insertArrangedSubview:atIndex:", v102, 1);
  v103 = *(void **)&v20[v92];
  if (!v103)
  {
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  v104 = *(_QWORD *)&v20[v68];
  if (!v104)
  {
LABEL_183:
    __break(1u);
    goto LABEL_184;
  }
  objc_msgSend(v103, "insertArrangedSubview:atIndex:", v104, 2);
  v105 = objc_msgSend(v20, "view");
  if (!v105)
  {
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  if (!*(_QWORD *)&v20[v80])
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  v106 = v105;
  objc_msgSend(v105, "addSubview:");

  v107 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v108 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel;
  v109 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel] = v107;

  v110 = *(void **)&v20[v108];
  if (!v110)
  {
LABEL_186:
    __break(1u);
    goto LABEL_187;
  }
  v408 = v92;
  v402 = v80;
  objc_msgSend(v110, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v111 = *(void **)&v20[v108];
  if (!v111)
  {
LABEL_187:
    __break(1u);
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  objc_msgSend(v111, "setNumberOfLines:", 1);
  v112 = (void *)objc_opt_self(UIApplication);
  v113 = objc_msgSend(v112, "sharedApplication");
  v114 = objc_msgSend(v113, "preferredContentSizeCategory");

  LODWORD(v113) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v114);
  v115 = 17.0;
  if ((_DWORD)v113)
  {
    v116 = UIFontTextStyleBody;
    v115 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v116, 17.0);

  }
  v117 = *(void **)&v20[v108];
  if (!v117)
    goto LABEL_188;
  v118 = v117;
  v119 = objc_msgSend(v411, "systemFontOfSize:", v115);
  objc_msgSend(v118, "setFont:", v119);

  v120 = *(void **)&v20[v108];
  if (!v120)
  {
LABEL_189:
    __break(1u);
    goto LABEL_190;
  }
  objc_msgSend(v120, "_setTextColorFollowsTintColor:", 1);
  v121 = objc_msgSend(objc_allocWithZone((Class)MTMPUMarqueeView), "init");
  v122 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView;
  v123 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView] = v121;

  v124 = *(void **)&v20[v122];
  if (!v124)
  {
LABEL_190:
    __break(1u);
    goto LABEL_191;
  }
  type metadata accessor for UILayoutPriority(0);
  v126 = v125;
  v414[0] = 1132068864;
  v416 = 0x40000000;
  v127 = sub_8330(&qword_200C68, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  v128 = v124;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v413, v414, &v416, v126, v127);
  LODWORD(v129) = v413[0];
  objc_msgSend(v128, "setContentCompressionResistancePriority:forAxis:", 0, v129);

  v130 = *(void **)&v20[v122];
  if (!v130)
  {
LABEL_191:
    __break(1u);
    goto LABEL_192;
  }
  objc_msgSend(v130, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v131 = *(void **)&v20[v122];
  if (!v131)
  {
LABEL_192:
    __break(1u);
    goto LABEL_193;
  }
  objc_msgSend(v131, "setContentGap:", 32.0);
  v132 = *(void **)&v20[v122];
  if (!v132)
  {
LABEL_193:
    __break(1u);
    goto LABEL_194;
  }
  objc_msgSend(v132, "setFadeEdgeInsets:", 0.0, 24.0, 0.0, 24.0);
  v133 = *(void **)&v20[v122];
  if (!v133)
  {
LABEL_194:
    __break(1u);
    goto LABEL_195;
  }
  v134 = objc_msgSend(v133, "contentView");
  if (!v134)
  {
LABEL_195:
    __break(1u);
    goto LABEL_196;
  }
  if (!*(_QWORD *)&v20[v108])
  {
LABEL_196:
    __break(1u);
    goto LABEL_197;
  }
  v135 = v134;
  objc_msgSend(v134, "addSubview:");

  v136 = *(void **)&v20[v122];
  if (!v136)
  {
LABEL_197:
    __break(1u);
    goto LABEL_198;
  }
  objc_msgSend(v136, "setViewForContentSize:", *(_QWORD *)&v20[v108]);
  v137 = *(void **)&v20[v122];
  if (!v137)
  {
LABEL_198:
    __break(1u);
    goto LABEL_199;
  }
  objc_msgSend(v137, "setUserInteractionEnabled:", 0);
  v138 = objc_msgSend(v20, "view");
  if (!v138)
  {
LABEL_199:
    __break(1u);
    goto LABEL_200;
  }
  if (!*(_QWORD *)&v20[v122])
  {
LABEL_200:
    __break(1u);
    goto LABEL_201;
  }
  v139 = v138;
  objc_msgSend(v138, "addSubview:");

  v140 = objc_msgSend(v112, "sharedApplication");
  v141 = objc_msgSend(v140, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v141);
  v143 = *(void **)&v20[v58];
  if (!v143)
  {
LABEL_201:
    __break(1u);
    goto LABEL_202;
  }
  objc_msgSend(v143, "setHidden:", IsAccessibilityContentSizeCategory);
  v144 = *(void **)&v20[v122];
  if (!v144)
  {
LABEL_202:
    __break(1u);
    goto LABEL_203;
  }
  v401 = v108;
  objc_msgSend(v144, "setHidden:", IsAccessibilityContentSizeCategory ^ 1);
  sub_E0274();
  v145 = sub_E2AC4();
  v146 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton;
  v147 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton] = v145;

  v148 = *(void **)&v20[v146];
  if (!v148)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  v149 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v149 + 16, v20);
  swift_retain();
  v150 = v148;
  sub_148370(64, (uint64_t)sub_E4060, v149);

  swift_release_n(v149, 2);
  v151 = sub_E2AC4();
  v152 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton;
  v153 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton] = v151;

  v154 = *(void **)&v20[v152];
  if (!v154)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  v155 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v155 + 16, v20);
  swift_retain();
  v156 = v154;
  sub_148370(64, (uint64_t)sub_E4084, v155);

  swift_release_n(v155, 2);
  v157 = *(void **)&v20[v152];
  if (!v157)
  {
LABEL_205:
    __break(1u);
    goto LABEL_206;
  }
  v158 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v158 + 16, v20);
  swift_retain();
  v159 = v157;
  sub_148370(0x1000000, (uint64_t)sub_E40AC, v158);

  swift_release_n(v158, 2);
  v160 = *(void **)&v20[v152];
  if (!v160)
  {
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }
  v161 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v161 + 16, v20);
  swift_retain();
  v162 = v160;
  sub_148370(0x2000000, (uint64_t)sub_E40D0, v161);

  swift_release_n(v161, 2);
  v163 = sub_E2AC4();
  v164 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton;
  v165 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton] = v163;

  v166 = *(void **)&v20[v164];
  if (!v166)
  {
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  v167 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v167 + 16, v20);
  swift_retain();
  v168 = v166;
  sub_148370(64, (uint64_t)sub_E40F4, v167);

  swift_release_n(v167, 2);
  v169 = *(void **)&v20[v164];
  if (!v169)
  {
LABEL_208:
    __break(1u);
    goto LABEL_209;
  }
  v170 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v170 + 16, v20);
  swift_retain();
  v171 = v169;
  sub_148370(0x1000000, (uint64_t)sub_E411C, v170);

  swift_release_n(v170, 2);
  v172 = *(void **)&v20[v164];
  if (!v172)
  {
LABEL_209:
    __break(1u);
    goto LABEL_210;
  }
  v410 = v122;
  v173 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v173 + 16, v20);
  swift_retain();
  v174 = v172;
  sub_148370(0x2000000, (uint64_t)sub_E4140, v173);

  swift_release_n(v173, 2);
  v175 = *(void **)&v20[v152];
  if (!v175)
  {
LABEL_210:
    __break(1u);
    goto LABEL_211;
  }
  v176 = objc_msgSend(v175, "widthAnchor");
  v177 = objc_msgSend(v176, "constraintEqualToConstant:", 50.0);

  v178 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController;
  v179 = *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController];
  v180 = swift_allocObject(&unk_1D04B8, 24, 7);
  swift_unknownObjectUnownedInit(v180 + 16, v20);
  v181 = swift_allocObject(&unk_1D04E0, 32, 7);
  *(_QWORD *)(v181 + 16) = v180;
  *(_QWORD *)(v181 + 24) = v177;
  v182 = *(_QWORD *)(v179 + 136);
  v183 = *(_QWORD *)(v179 + 144);
  *(_QWORD *)(v179 + 136) = sub_E4168;
  *(_QWORD *)(v179 + 144) = v181;
  v184 = v177;
  sub_145A0(v182, v183);
  v185 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v186 = swift_allocObject(v185, 48, 7);
  *(_OWORD *)(v186 + 16) = xmmword_16B2E0;
  v405 = v146;
  v187 = *(void **)&v20[v146];
  if (!v187)
  {
LABEL_211:
    __break(1u);
    goto LABEL_212;
  }
  v188 = v186;
  *(_QWORD *)(v186 + 32) = v187;
  v189 = *(void **)&v20[v152];
  if (!v189)
  {
LABEL_212:
    __break(1u);
    goto LABEL_213;
  }
  v190 = type metadata accessor for NowPlayingTransportControlStackView();
  *(_QWORD *)(v188 + 40) = v189;
  v413[0] = v188;
  specialized Array._endMutation()(v190);
  v191 = v413[0];
  v192 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
  v193 = v187;
  v194 = v189;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v196 = objc_msgSend(v192, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v191).n128_f64[0]);

  v197 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack;
  v198 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack] = v196;

  v199 = *(void **)&v20[v197];
  if (!v199)
  {
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  objc_msgSend(v199, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v200 = *(void **)&v20[v197];
  if (!v200)
  {
LABEL_214:
    __break(1u);
    goto LABEL_215;
  }
  objc_msgSend(v200, "setSemanticContentAttribute:", 1);
  v201 = *(void **)&v20[v197];
  if (!v201)
  {
LABEL_215:
    __break(1u);
    goto LABEL_216;
  }
  objc_msgSend(v201, "setAxis:", 0);
  v202 = *(void **)&v20[v197];
  if (!v202)
  {
LABEL_216:
    __break(1u);
    goto LABEL_217;
  }
  objc_msgSend(v202, "setDistribution:", 1);
  v203 = *(void **)&v20[v197];
  if (!v203)
  {
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
  objc_msgSend(v203, "setAlignment:", 3);
  v204 = *(void **)&v20[v197];
  if (!v204)
  {
LABEL_218:
    __break(1u);
    goto LABEL_219;
  }
  objc_msgSend(v204, "setSpacing:", 4.0);
  v205 = objc_msgSend(v20, "view");
  if (!v205)
  {
LABEL_219:
    __break(1u);
    goto LABEL_220;
  }
  if (!*(_QWORD *)&v20[v197])
  {
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
    goto LABEL_222;
  }
  v206 = v205;
  objc_msgSend(v205, "addSubview:");

  v207 = *(_QWORD *)&v20[v178];
  v208 = *(void (**)(uint64_t))(v207 + 136);
  if (v208)
  {
    v209 = *(_QWORD *)(v207 + 144);
    v210 = swift_retain();
    v208(v210);
    sub_145A0((uint64_t)v208, v209);
  }
  v211 = objc_msgSend(v20, "view");
  if (!v211)
    goto LABEL_221;
  v212 = v211;
  v412 = objc_msgSend(v211, "layoutMarginsGuide");

  v213 = *(void **)&v20[v407];
  if (!v213)
  {
LABEL_222:
    __break(1u);
    goto LABEL_223;
  }
  v214 = objc_msgSend(v213, "leadingAnchor");
  v215 = objc_msgSend(v20, "view");
  if (!v215)
  {
LABEL_223:
    __break(1u);
    goto LABEL_224;
  }
  v216 = v215;
  v217 = objc_msgSend(v215, "leadingAnchor");

  v218 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin;
  v219 = objc_msgSend(v214, "constraintEqualToAnchor:constant:", v217, *(double *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin]);

  v220 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_leadingArtworkConstraint];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_leadingArtworkConstraint] = v219;
  v221 = v219;

  v222 = *(void **)&v20[v197];
  if (!v222)
  {
LABEL_224:
    __break(1u);
    goto LABEL_225;
  }
  v223 = objc_msgSend(v222, "trailingAnchor");
  v224 = objc_msgSend(v20, "view");
  if (!v224)
  {
LABEL_225:
    __break(1u);
    goto LABEL_226;
  }
  v225 = v224;
  v226 = objc_msgSend(v224, "trailingAnchor");

  v227 = objc_msgSend(v223, "constraintEqualToAnchor:constant:", v226, -*(double *)&v20[v218]);
  v228 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_trailingTransportControlsConstraint];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_trailingTransportControlsConstraint] = v227;
  v400 = v227;

  v229 = swift_allocObject(v185, 264, 7);
  *(_OWORD *)(v229 + 16) = xmmword_1721E0;
  *(_QWORD *)(v229 + 32) = v184;
  v230 = *(void **)&v20[v152];
  if (!v230)
  {
LABEL_226:
    __break(1u);
    goto LABEL_227;
  }
  v231 = (_QWORD *)v229;
  v399 = v184;
  v232 = objc_msgSend(v230, "widthAnchor");
  v233 = *(void **)&v20[v152];
  if (!v233)
  {
LABEL_227:
    __break(1u);
    goto LABEL_228;
  }
  v234 = objc_msgSend(v233, "heightAnchor");
  v235 = objc_msgSend(v232, "constraintEqualToAnchor:", v234);

  v231[5] = v235;
  v236 = *(void **)&v20[v405];
  if (!v236)
  {
LABEL_228:
    __break(1u);
    goto LABEL_229;
  }
  v237 = objc_msgSend(v236, "widthAnchor");
  v238 = *(void **)&v20[v152];
  if (!v238)
  {
LABEL_229:
    __break(1u);
    goto LABEL_230;
  }
  v239 = objc_msgSend(v238, "widthAnchor");
  v240 = objc_msgSend(v237, "constraintEqualToAnchor:", v239);

  v231[6] = v240;
  v241 = *(void **)&v20[v405];
  if (!v241)
  {
LABEL_230:
    __break(1u);
    goto LABEL_231;
  }
  v242 = objc_msgSend(v241, "heightAnchor");
  v243 = *(void **)&v20[v405];
  if (!v243)
  {
LABEL_231:
    __break(1u);
    goto LABEL_232;
  }
  v244 = objc_msgSend(v243, "widthAnchor");
  v245 = objc_msgSend(v242, "constraintEqualToAnchor:", v244);

  v231[7] = v245;
  v231[8] = v221;
  v246 = *(void **)&v20[v407];
  if (!v246)
  {
LABEL_232:
    __break(1u);
    goto LABEL_233;
  }
  v406 = v221;
  v247 = objc_msgSend(v246, "centerYAnchor");
  v248 = objc_msgSend(v412, "centerYAnchor");
  v249 = objc_msgSend(v247, "constraintEqualToAnchor:", v248);

  v231[9] = v249;
  v250 = *(void **)&v20[v407];
  if (!v250)
  {
LABEL_233:
    __break(1u);
    goto LABEL_234;
  }
  v251 = objc_msgSend(v250, "heightAnchor");
  v252 = objc_msgSend(v412, "heightAnchor");
  v253 = objc_msgSend(v251, "constraintEqualToAnchor:constant:", v252, -8.0);

  v414[0] = 1144750080;
  v416 = 0x40000000;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(v413, v414, &v416);
  LODWORD(v254) = v413[0];
  v255 = objc_msgSend(v253, "withPriority:", v254);

  v231[10] = v255;
  v256 = *(void **)&v20[v407];
  if (!v256)
  {
LABEL_234:
    __break(1u);
    goto LABEL_235;
  }
  v257 = objc_msgSend(v256, "heightAnchor");
  v258 = objc_msgSend(v257, "constraintLessThanOrEqualToConstant:", 48.0);

  v231[11] = v258;
  v259 = *(void **)&v20[v407];
  if (!v259)
  {
LABEL_235:
    __break(1u);
    goto LABEL_236;
  }
  v260 = objc_msgSend(v259, "widthAnchor");
  v261 = *(void **)&v20[v407];
  if (!v261)
  {
LABEL_236:
    __break(1u);
    goto LABEL_237;
  }
  v262 = objc_msgSend(v261, "heightAnchor");
  v263 = objc_msgSend(v260, "constraintEqualToAnchor:", v262);

  v231[12] = v263;
  v264 = objc_msgSend(v404, "centerXAnchor");
  v265 = *(void **)&v20[v407];
  if (!v265)
  {
LABEL_237:
    __break(1u);
    goto LABEL_238;
  }
  v266 = objc_msgSend(v265, "centerXAnchor");
  v267 = objc_msgSend(v264, "constraintEqualToAnchor:", v266);

  v231[13] = v267;
  v268 = objc_msgSend(v404, "centerYAnchor");
  v269 = *(void **)&v20[v407];
  if (!v269)
  {
LABEL_238:
    __break(1u);
    goto LABEL_239;
  }
  v270 = objc_msgSend(v269, "centerYAnchor");
  v271 = objc_msgSend(v268, "constraintEqualToAnchor:", v270);

  v231[14] = v271;
  v272 = objc_msgSend(v404, "widthAnchor");
  v273 = *(void **)&v20[v407];
  if (!v273)
  {
LABEL_239:
    __break(1u);
    goto LABEL_240;
  }
  v274 = objc_msgSend(v273, "widthAnchor");
  v275 = objc_msgSend(v272, "constraintEqualToAnchor:", v274);

  v231[15] = v275;
  v276 = objc_msgSend(v404, "heightAnchor");
  v277 = *(void **)&v20[v407];
  if (!v277)
  {
LABEL_240:
    __break(1u);
    goto LABEL_241;
  }
  v278 = objc_msgSend(v277, "heightAnchor");
  v279 = objc_msgSend(v276, "constraintEqualToAnchor:", v278);

  v231[16] = v279;
  v280 = *(void **)&v20[v197];
  if (!v280)
  {
LABEL_241:
    __break(1u);
    goto LABEL_242;
  }
  v281 = objc_msgSend(v280, "centerYAnchor");
  v282 = objc_msgSend(v412, "centerYAnchor");
  v283 = objc_msgSend(v281, "constraintEqualToAnchor:", v282);

  v231[17] = v283;
  v231[18] = v400;
  v284 = *(void **)&v20[v408];
  if (!v284)
  {
LABEL_242:
    __break(1u);
    goto LABEL_243;
  }
  v285 = v400;
  v286 = objc_msgSend(v284, "trailingAnchor");
  v287 = *(void **)&v20[v197];
  if (!v287)
  {
LABEL_243:
    __break(1u);
    goto LABEL_244;
  }
  v288 = objc_msgSend(v287, "leadingAnchor");
  v289 = objc_msgSend(v286, "constraintEqualToAnchor:constant:", v288, 8.0);

  v231[19] = v289;
  v290 = *(void **)&v20[v408];
  if (!v290)
  {
LABEL_244:
    __break(1u);
    goto LABEL_245;
  }
  v291 = objc_msgSend(v290, "leadingAnchor");
  v292 = *(void **)&v20[v407];
  if (!v292)
  {
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
  v293 = objc_msgSend(v292, "trailingAnchor");
  v294 = objc_msgSend(v291, "constraintEqualToAnchor:constant:", v293, 16.0);

  v231[20] = v294;
  v295 = *(void **)&v20[v408];
  if (!v295)
  {
LABEL_246:
    __break(1u);
    goto LABEL_247;
  }
  v296 = objc_msgSend(v295, "centerYAnchor");
  v297 = objc_msgSend(v412, "centerYAnchor");
  v298 = objc_msgSend(v296, "constraintEqualToAnchor:", v297);

  v231[21] = v298;
  v299 = *(void **)&v20[v410];
  if (!v299)
  {
LABEL_247:
    __break(1u);
    goto LABEL_248;
  }
  v300 = objc_msgSend(v299, "leadingAnchor");
  v301 = *(void **)&v20[v407];
  if (!v301)
  {
LABEL_248:
    __break(1u);
    goto LABEL_249;
  }
  v302 = objc_msgSend(v301, "trailingAnchor");
  v303 = objc_msgSend(v300, "constraintEqualToAnchor:", v302);

  v231[22] = v303;
  v304 = *(void **)&v20[v410];
  if (!v304)
  {
LABEL_249:
    __break(1u);
    goto LABEL_250;
  }
  v305 = objc_msgSend(v304, "trailingAnchor");
  v306 = *(void **)&v20[v197];
  if (!v306)
  {
LABEL_250:
    __break(1u);
    goto LABEL_251;
  }
  v307 = objc_msgSend(v306, "leadingAnchor");
  v308 = objc_msgSend(v305, "constraintLessThanOrEqualToAnchor:", v307);

  v231[23] = v308;
  v309 = *(void **)&v20[v410];
  if (!v309)
  {
LABEL_251:
    __break(1u);
    goto LABEL_252;
  }
  v310 = objc_msgSend(v309, "topAnchor");
  v311 = objc_msgSend(v412, "topAnchor");
  v312 = objc_msgSend(v310, "constraintEqualToAnchor:", v311);

  v231[24] = v312;
  v313 = *(void **)&v20[v410];
  if (!v313)
  {
LABEL_252:
    __break(1u);
    goto LABEL_253;
  }
  v314 = objc_msgSend(v313, "bottomAnchor");
  v315 = objc_msgSend(v412, "bottomAnchor");
  v316 = objc_msgSend(v314, "constraintEqualToAnchor:", v315);

  v231[25] = v316;
  v317 = *(void **)&v20[v401];
  if (!v317)
  {
LABEL_253:
    __break(1u);
    goto LABEL_254;
  }
  v318 = objc_msgSend(v317, "topAnchor");
  v319 = *(void **)&v20[v410];
  if (!v319)
  {
LABEL_254:
    __break(1u);
    goto LABEL_255;
  }
  v320 = objc_msgSend(v319, "topAnchor");
  v321 = objc_msgSend(v318, "constraintEqualToAnchor:", v320);

  v231[26] = v321;
  v322 = *(void **)&v20[v401];
  if (!v322)
  {
LABEL_255:
    __break(1u);
    goto LABEL_256;
  }
  v323 = objc_msgSend(v322, "centerYAnchor");
  v324 = *(void **)&v20[v410];
  if (!v324)
  {
LABEL_256:
    __break(1u);
    goto LABEL_257;
  }
  v325 = objc_msgSend(v324, "centerYAnchor");
  v326 = objc_msgSend(v323, "constraintEqualToAnchor:", v325);

  LODWORD(v327) = 1147207680;
  v328 = objc_msgSend(v326, "withPriority:", v327);

  v231[27] = v328;
  v329 = *(void **)&v20[v401];
  if (!v329)
  {
LABEL_257:
    __break(1u);
    goto LABEL_258;
  }
  v330 = objc_msgSend(v329, "leadingAnchor");
  v331 = *(void **)&v20[v410];
  if (!v331)
  {
LABEL_258:
    __break(1u);
    goto LABEL_259;
  }
  v332 = objc_msgSend(v331, "leadingAnchor");
  v333 = objc_msgSend(v330, "constraintGreaterThanOrEqualToAnchor:constant:", v332, 24.0);

  v231[28] = v333;
  v334 = *(void **)&v20[v402];
  if (!v334)
  {
LABEL_259:
    __break(1u);
    goto LABEL_260;
  }
  v335 = objc_msgSend(v334, "topAnchor");
  v336 = *(void **)&v20[v409];
  if (!v336)
  {
LABEL_260:
    __break(1u);
    goto LABEL_261;
  }
  v337 = objc_msgSend(v336, "topAnchor");
  v338 = objc_msgSend(v335, "constraintEqualToAnchor:", v337);

  v231[29] = v338;
  v339 = *(void **)&v20[v402];
  if (!v339)
  {
LABEL_261:
    __break(1u);
    goto LABEL_262;
  }
  v340 = objc_msgSend(v339, "leadingAnchor");
  v341 = *(void **)&v20[v409];
  if (!v341)
  {
LABEL_262:
    __break(1u);
    goto LABEL_263;
  }
  v342 = objc_msgSend(v341, "leadingAnchor");
  v343 = objc_msgSend(v340, "constraintEqualToAnchor:", v342);

  v231[30] = v343;
  v344 = *(void **)&v20[v402];
  if (!v344)
  {
LABEL_263:
    __break(1u);
    goto LABEL_264;
  }
  v345 = objc_msgSend(v344, "trailingAnchor");
  v346 = *(void **)&v20[v409];
  if (!v346)
  {
LABEL_264:
    __break(1u);
    goto LABEL_265;
  }
  v347 = objc_msgSend(v346, "trailingAnchor");
  v348 = objc_msgSend(v345, "constraintEqualToAnchor:", v347);

  v231[31] = v348;
  v349 = *(void **)&v20[v402];
  if (!v349)
  {
LABEL_265:
    __break(1u);
    goto LABEL_266;
  }
  v350 = objc_msgSend(v349, "bottomAnchor");
  v351 = *(void **)&v20[v409];
  if (!v351)
  {
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
    goto LABEL_269;
  }
  v352 = v350;
  v353 = (void *)objc_opt_self(NSLayoutConstraint);
  v354 = objc_msgSend(v351, "bottomAnchor");
  v355 = objc_msgSend(v352, "constraintEqualToAnchor:", v354);

  v231[32] = v355;
  v413[0] = v231;
  specialized Array._endMutation()(v356);
  v357 = v413[0];
  sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
  v358 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v353, "activateConstraints:", v358, swift_bridgeObjectRelease(v357).n128_f64[0]);

  v359 = (void *)MPAVRouteDidChangeNotification;
  v360 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v360 + 16, v20);
  v361 = type metadata accessor for NotificationObserver();
  swift_allocObject(v361, 56, 7);
  v362 = NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(v359, 0, 1, (uint64_t)sub_E4170, v360);
  v363 = *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_routeDidChangeObserver];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_routeDidChangeObserver] = v362;
  swift_release(v363);
  v364 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD948);
  inited = swift_initStackObject(v364, v415);
  *(_OWORD *)(inited + 16) = xmmword_16B3D0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v414, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v413, (uint64_t *)&unk_1FC7F0);
  v366 = v413[0];
  if (!v413[0])
    goto LABEL_267;
  v367 = v413[1];
  swift_unknownObjectRetain(v413[0]);
  sub_4AE24((uint64_t)v413);
  ObjectType = swift_getObjectType(v366);
  v369 = (*(uint64_t (**)(uint64_t, uint64_t))(v367 + 8))(ObjectType, v367);
  swift_unknownObjectRelease(v366);
  *(_QWORD *)(inited + 32) = v369;
  *(_QWORD *)(inited + 40) = 0xD000000000000012;
  *(_QWORD *)(inited + 48) = 0x8000000000186EB0;
  *(_BYTE *)(inited + 56) = 0;
  v370 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v370 + 16, v20);
  v371 = swift_allocObject(&unk_1D0508, 32, 7);
  *(_QWORD *)(v371 + 16) = v370;
  *(_QWORD *)(v371 + 24) = v404;
  v372 = type metadata accessor for DeprecatedBinding();
  swift_allocObject(v372, 40, 7);
  v373 = v404;
  v374 = DeprecatedBinding.init(_:configurationBlock:)(inited, (uint64_t)sub_E417C, v371);
  v375 = &v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_bindings];
  swift_beginAccess(&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_bindings], v413, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v376);
  v378 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v375 & 0xFFFFFFFFFFFFFF8));
  v377 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v375 & 0xFFFFFFFFFFFFFF8));
  if (v378 >= v377 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v377 > 1, v378 + 1, 1);
  v379 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v378, v374);
  specialized Array._endMutation()(v379);
  swift_endAccess(v413);
  v380 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v380 + 16, v20);
  v381 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MiniPlayerViewController.HighlightGestureRecognizer()), "initWithTarget:action:", 0, 0);
  v382 = (id (**)(double, double))&v381[OBJC_IVAR____TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer_handlePoint];
  v383 = *(_QWORD *)&v381[OBJC_IVAR____TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer_handlePoint];
  v384 = *(_QWORD *)&v381[OBJC_IVAR____TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer_handlePoint
                        + 8];
  *v382 = sub_E4184;
  v382[1] = (id (*)(double, double))v380;
  sub_145A0(v383, v384);
  v385 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizer;
  v386 = *(void **)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizer];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizer] = v381;

  v387 = *(void **)&v20[v385];
  if (!v387)
    goto LABEL_268;
  objc_msgSend(v387, "setDelegate:", v20);
  v388 = objc_msgSend(v20, "view");
  if (!v388)
  {
LABEL_269:
    __break(1u);
    goto LABEL_270;
  }
  if (!*(_QWORD *)&v20[v385])
  {
LABEL_270:
    __break(1u);
    goto LABEL_271;
  }
  v389 = v388;
  objc_msgSend(v388, "addGestureRecognizer:");

  v390 = *(_QWORD *)&v20[v385];
  if (!v390)
  {
LABEL_271:
    __break(1u);
    return;
  }
  v391 = swift_allocObject(&unk_1D0198, 24, 7);
  swift_unknownObjectWeakInit(v391 + 16, v20);
  v392 = type metadata accessor for GestureRecognizerHandler();
  v393 = swift_allocObject(v392, 40, 7);
  v394 = swift_unknownObjectWeakInit(v393 + 16, 0);
  swift_unknownObjectWeakAssign(v394, v390);
  v395 = swift_allocObject(&unk_1D0530, 32, 7);
  *(_QWORD *)(v395 + 16) = sub_E418C;
  *(_QWORD *)(v395 + 24) = v391;
  *(_QWORD *)(v393 + 24) = sub_E41B8;
  *(_QWORD *)(v393 + 32) = v395;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v393 + 16);
  if (Strong)
  {
    v397 = Strong;
    objc_msgSend(Strong, "addTarget:action:", v393, "handleActionFromGestureRecognizer:");

  }
  v398 = *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizerHandler];
  *(_QWORD *)&v20[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizerHandler] = v393;

  swift_release(v398);
}

void sub_DB730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (a2 == 3)
    {
      objc_msgSend((id)objc_opt_self(MPAVRoutingController), "setActiveRoute:completion:", 0, 0);
      v7 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController], "response");
      v8 = v7;
      if (v7)
      {
        v9 = objc_msgSend(v7, "tracklist");

        v10 = objc_msgSend(v9, "resetCommand");
        if (v10)
        {
          v8 = objc_msgSend(v10, "clear");
          swift_unknownObjectRelease(v10);
        }
        else
        {
          v8 = 0;
        }
      }
      objc_msgSend((id)objc_opt_self(MPCPlayerChangeRequest), "performRequest:completion:", v8, 0);

    }
  }
}

id sub_DB86C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id result;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char v67[24];
  char v68[32];

  v3 = type metadata accessor for InteractionContext.Origin(0);
  v65 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v66 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v63);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v7);
  v64 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD4B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD978);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for PresentationSource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2 + 16;
  swift_beginAccess(a2 + 16, v68, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return 0;
  v21 = (void *)Strong;
  v22 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController), "response");
  v23 = v22;
  if (!v22)
  {

    return v23;
  }
  v62 = v6;
  v24 = objc_msgSend(v22, "tracklist");

  if (!v24)
  {

    return 0;
  }
  v60 = v3;
  v25 = sub_B61B8();
  if (!v25)
  {

    return 0;
  }
  v26 = v25;
  v61 = v24;
  v23 = objc_msgSend(v25, "metadataObject");

  if (!v23)
  {

    return v23;
  }
  v27 = objc_msgSend(v23, "flattenedGenericObject");
  v28 = objc_msgSend(v27, "anyObject");

  if (!v28)
  {
LABEL_18:

    return 0;
  }
  v29 = objc_opt_self(MPModelPodcastEpisode);
  v30 = swift_dynamicCastObjCClass(v28, v29);
  if (!v30)
  {

    goto LABEL_18;
  }
  v31 = (void *)v30;
  result = objc_msgSend(v21, "view");
  v59 = result;
  if (result)
  {
    v58 = v31;
    result = objc_msgSend(v21, "view");
    if (result)
    {
      v33 = result;
      v57 = v28;
      objc_msgSend(result, "bounds");
      v35 = v34;
      v37 = v36;
      v39 = v38;
      v41 = v40;

      *v14 = v59;
      v14[1] = v35;
      v14[2] = v37;
      v14[3] = v39;
      v14[4] = v41;
      v42 = enum case for PresentationSource.Position.view(_:);
      v43 = type metadata accessor for PresentationSource.Position(0);
      v44 = *(_QWORD *)(v43 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v44 + 104))(v14, v42, v43);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v14, 0, 1, v43);
      v45 = v21;
      PresentationSource.init(viewController:position:)(v45, v14);
      v46 = *(_QWORD *)&v45[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_objectGraph];
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v18, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      swift_beginAccess(v19, v67, 0, 0);
      v47 = swift_unknownObjectWeakLoadStrong(v19);
      v59 = v45;
      v56 = v46;
      if (v47)
      {
        v48 = (void *)v47;
        v50 = *(_QWORD *)(v47 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook);
        v49 = *(_QWORD *)(v47 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook + 8);
        swift_retain();
        sub_2BE00(v50, v49);

      }
      else
      {
        swift_retain();
        v50 = 0;
        v49 = 0;
      }
      v51 = v60;
      v52 = v66;
      v53 = v62;
      swift_storeEnumTagMultiPayload(v62, v63, 13);
      (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v52, enum case for InteractionContext.Origin.none(_:), v51);
      v54 = (uint64_t)v64;
      InteractionContext.init(page:view:origin:)(v53, 7, v52);
      v55 = type metadata accessor for NowPlayingContextActionConfiguration(0);
      swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
      v23 = (id)sub_AC0BC(v56, 0, v58, (uint64_t)v11, v50, v49, v54);
      sub_145A0(v50, v49);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return v23;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_DBDB8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  char *Strong;
  void *v9;
  id v10;
  unsigned __int8 v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, __n128);
  __n128 v19;
  uint64_t v20;

  v7 = a2 + 16;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v9 = *(void **)&Strong[*a3];
  v10 = v9;

  if (v9)
  {
    v11 = objc_msgSend(v10, "isHolding");

    if ((v11 & 1) == 0)
    {
      v12 = (char *)swift_unknownObjectUnownedLoadStrong(v7);
      v13 = *(_QWORD *)&v12[*a4 + 16];
      swift_bridgeObjectRetain(v13);

      if (v13)
      {
        if (*(_QWORD *)(v13 + 16) && (v14 = sub_13A0FC(0), (v15 & 1) != 0))
        {
          v16 = *(_QWORD *)(v13 + 56) + 16 * v14;
          v18 = *(void (**)(uint64_t *, __n128))v16;
          v17 = *(_QWORD *)(v16 + 8);
          swift_retain();
          v19 = swift_bridgeObjectRelease(v13);
          v20 = a1;
          v18(&v20, v19);
          swift_release(v17);
        }
        else
        {
          swift_bridgeObjectRelease(v13);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_DBEC8(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned __int8 a4)
{
  char *Strong;
  uint64_t v8;
  double result;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, __n128);
  __n128 v15;
  uint64_t v16;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v8 = *(_QWORD *)&Strong[*a3 + 16];
  swift_bridgeObjectRetain(v8);

  if (v8)
  {
    if (*(_QWORD *)(v8 + 16) && (v10 = sub_13A0FC(a4), (v11 & 1) != 0))
    {
      v12 = *(_QWORD *)(v8 + 56) + 16 * v10;
      v14 = *(void (**)(uint64_t *, __n128))v12;
      v13 = *(_QWORD *)(v12 + 8);
      swift_retain();
      v15 = swift_bridgeObjectRelease(v8);
      v16 = a1;
      v14(&v16, v15);
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
  }
  return result;
}

void sub_DBF84(uint64_t a1, void *a2)
{
  SEL *v3;
  char *Strong;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char *v23;
  double v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  id v55;
  void *v56;
  char *v57;
  void *v58;
  id v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  void *v64;
  id v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  id v74;
  void *v75;
  char *v76;
  void *v77;
  id v78;
  char *v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int64_t v93;
  void *v94;
  id v95;
  void *v96;
  char *v97;
  void *v98;
  id v99;
  char *v100;
  uint64_t *v101;
  uint64_t v102;
  double v103;
  double v104;
  double v105;
  void *v106;
  id v107;
  uint64_t v108;
  char *v109;
  void *v110;
  SEL *i;
  void *v112;
  char *v113;
  void *v114;
  id v115;
  char *v116;
  void *v117;
  id v118;
  char *v119;
  void *v120;
  id v121;
  id v122;
  char *v123;
  void *v124;
  id v125;
  id v126;
  double v127;
  char *v128;
  void *v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  id v136;
  uint64_t v137;
  double v138;
  id v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  char *v149;
  double v150;
  double v151;
  double v152;
  double v153;
  void *v154;
  void *v155;
  SEL *j;
  id v157;
  void *v158;
  _QWORD *v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  void *v169;

  v3 = (SEL *)(a1 + 16);
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  v5 = &Strong[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration];
  v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration + 16];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;

  swift_bridgeObjectRelease(v6);
  v7 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v8 = &v7[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration];
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration + 16];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;

  swift_bridgeObjectRelease(v9);
  v10 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v11 = &v10[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration];
  v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration + 16];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;

  swift_bridgeObjectRelease(v12);
  v13 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v14 = objc_msgSend(v13, "view");

  if (!v14)
  {
    __break(1u);
    goto LABEL_108;
  }
  v15 = objc_msgSend(v14, "effectiveUserInterfaceLayoutDirection");

  v16 = UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(v15, -26.0, 6.0, -26.0, -10.0);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v24 = *(double *)&v23[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin];

  v25 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v26 = objc_msgSend(v25, "view");

  if (!v26)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v27 = objc_msgSend(v26, "effectiveUserInterfaceLayoutDirection");

  v28 = UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(v27, v16, 6.0, v20, -v24);
  v167 = v29;
  v168 = v28;
  v165 = v31;
  v166 = v30;
  v32 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v33 = objc_msgSend(v32, "view");

  if (!v33)
  {
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  v169 = a2;
  v34 = objc_msgSend(v33, "effectiveUserInterfaceLayoutDirection");

  v35 = UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(v34, v16, 0.0, v20, -10.0);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v43 = objc_msgSend(v42, "view");

  if (!v43)
    goto LABEL_110;
  v163 = (char *)objc_msgSend(v43, "effectiveUserInterfaceLayoutDirection");

  v44 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v45 = objc_msgSend(v44, "traitCollection");

  v46 = (char *)objc_msgSend(v45, "horizontalSizeClass");
  v47 = v46 == (_BYTE *)&dword_0 + 2;
  v48 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v49 = *(_QWORD *)&v48[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController];
  swift_retain();

  v50 = *(_QWORD *)(v49 + 64);
  v51 = *(unsigned __int8 *)(v49 + 72);
  v52 = *(_QWORD *)(v49 + 80);
  swift_bridgeObjectRetain(v52);
  swift_release(v49);
  v53 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v54 = *(void **)&v53[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton];
  v55 = v54;

  if (v52)
  {
    if (v54)
    {
      v56 = (void *)sub_138790(v46 == (_BYTE *)&dword_0 + 2, 1, v50, v51);
      objc_msgSend(v55, "setImage:forState:", v56, 0);

      v57 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
      v58 = *(void **)&v57[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton];
      v59 = v58;

      if (v58)
      {
        objc_msgSend(v59, "setEnabled:", 1);

        v60 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
        v61 = (uint64_t *)&v60[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration];
        v62 = *(_QWORD *)&v60[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration + 16];
        *v61 = v50;
        v61[1] = v51;
        v61[2] = v52;

        swift_bridgeObjectRelease(v62);
        goto LABEL_12;
      }
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  if (!v54)
  {
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  objc_msgSend(v55, "setEnabled:", 0);

  v63 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v64 = *(void **)&v63[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton];
  v65 = v64;

  if (!v64)
  {
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  v66 = (void *)sub_138790(v46 == (_BYTE *)&dword_0 + 2, 1, 0, 3);
  objc_msgSend(v65, "setImage:forState:", v66, 0);

LABEL_12:
  v67 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v68 = *(_QWORD *)&v67[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController];
  swift_retain();

  v69 = *(_QWORD *)(v68 + 88);
  v70 = *(unsigned __int8 *)(v68 + 96);
  v71 = *(_QWORD *)(v68 + 104);
  swift_bridgeObjectRetain(v71);
  swift_release(v68);
  v72 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v73 = *(void **)&v72[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton];
  v74 = v73;

  if (v71)
  {
    if (v73)
    {
      v75 = (void *)sub_138790(v46 == (_BYTE *)&dword_0 + 2, 1, v69, v70);
      objc_msgSend(v74, "setImage:forState:", v75, 0);

      v76 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
      v77 = *(void **)&v76[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton];
      v78 = v77;

      if (v77)
      {
        objc_msgSend(v78, "setEnabled:", 1);

        v79 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
        v80 = (uint64_t *)&v79[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration];
        v81 = *(_QWORD *)&v79[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration + 16];
        *v80 = v69;
        v80[1] = v70;
        v80[2] = v71;

        swift_bridgeObjectRelease(v81);
        goto LABEL_19;
      }
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  if (!v73)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  objc_msgSend(v74, "setEnabled:", 0);

  v82 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v83 = *(void **)&v82[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton];
  v84 = v83;

  if (!v83)
  {
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  v85 = (void *)sub_138790(v46 == (_BYTE *)&dword_0 + 2, 1, 0x10000000000000, 0);
  objc_msgSend(v84, "setImage:forState:", v85, 0);

LABEL_19:
  v86 = swift_unknownObjectUnownedLoadStrong(v3);
  v87 = (void *)v86;
  v164 = v41;
  if (v46 != (_BYTE *)&dword_0 + 2)
  {
    v103 = v39;
    v104 = v37;
    v105 = v35;
    v106 = *(void **)(v86 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton);
    v107 = v106;

    if (v106)
    {
      objc_msgSend(v107, "removeFromSuperview");
      *(double *)&v108 = 37.0;
      goto LABEL_35;
    }
    goto LABEL_117;
  }
  v88 = *(_QWORD *)(v86 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController);
  swift_retain();

  v89 = *(_QWORD *)(v88 + 40);
  v90 = *(unsigned __int8 *)(v88 + 48);
  v91 = *(_QWORD *)(v88 + 56);
  swift_bridgeObjectRetain(v91);
  swift_release(v88);
  v92 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v93 = (int64_t)&qword_200000;
  v94 = *(void **)&v92[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton];
  v95 = v94;

  if (v91)
  {
    if (v94)
    {
      v96 = (void *)sub_138790(v47, 1, v89, v90);
      objc_msgSend(v95, "setImage:forState:", v96, 0);

      v97 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
      v98 = *(void **)&v97[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton];
      v99 = v98;

      if (v98)
      {
        objc_msgSend(v99, "setEnabled:", 1);

        v100 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
        v101 = (uint64_t *)&v100[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration];
        v102 = *(_QWORD *)&v100[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration
                              + 16];
        *v101 = v89;
        v101[1] = v90;
        v101[2] = v91;

        swift_bridgeObjectRelease(v102);
        while (1)
        {
          v113 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
          v114 = *(void **)&v113[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack];
          v115 = v114;

          if (!v114)
            goto LABEL_118;
          v103 = v39;
          v116 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
          v117 = *(void **)&v116[*(_QWORD *)(v93 + 2880)];
          v118 = v117;

          if (!v117)
            goto LABEL_119;
          v104 = v37;
          objc_msgSend(v115, "insertArrangedSubview:atIndex:", v118, 0);

          v119 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
          v120 = *(void **)&v119[*(_QWORD *)(v93 + 2880)];
          v121 = v120;

          if (!v120)
            goto LABEL_120;
          v105 = v35;
          v122 = objc_msgSend(v121, "heightAnchor");

          v123 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
          v124 = *(void **)&v123[*(_QWORD *)(v93 + 2880)];
          v125 = v124;

          if (!v124)
            goto LABEL_121;
          v126 = objc_msgSend(v125, "widthAnchor");

          v107 = objc_msgSend(v122, "constraintEqualToAnchor:", v126);
          objc_msgSend(v107, "setActive:", 1);
          *(double *)&v108 = 50.0;
LABEL_35:
          v127 = *(double *)&v108;

          objc_msgSend(v169, "setConstant:", v127);
          v128 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
          v129 = *(void **)&v128[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack];
          v130 = v129;

          if (!v129)
            goto LABEL_111;
          v93 = (int64_t)&selRef_layoutDirection;
          v131 = objc_msgSend(v130, "arrangedSubviews");

          v132 = sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
          v133 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v131, v132);

          v35 = v105;
          if ((unint64_t)v133 >> 62)
          {
            if (v133 < 0)
              v147 = v133;
            else
              v147 = v133 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v133);
            v134 = _CocoaArrayWrapper.endIndex.getter(v147);
            swift_bridgeObjectRelease(v133);
          }
          else
          {
            v134 = *(_QWORD *)((char *)&dword_10 + (v133 & 0xFFFFFFFFFFFFF8));
          }
          v37 = v104;
          swift_bridgeObjectRelease(v133);
          if (!v134)
            return;
          v39 = v103;
          v135 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
          i = *(SEL **)&v135[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack];
          v3 = i;

          if (!i)
            goto LABEL_116;
          v136 = -[SEL arrangedSubviews](v3, "arrangedSubviews");

          v137 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v136, v132);
          v138 = v164;
          if ((unint64_t)v137 >> 62)
          {
            if (v137 < 0)
              v3 = (SEL *)v137;
            else
              v3 = (SEL *)(v137 & 0xFFFFFFFFFFFFFF8);
            swift_bridgeObjectRetain(v137);
            v47 = _CocoaArrayWrapper.endIndex.getter(v3);
            if (!v47)
              goto LABEL_62;
          }
          else
          {
            v47 = *(_QWORD *)((char *)&dword_10 + (v137 & 0xFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain(v137);
            if (!v47)
              goto LABEL_62;
          }
          if (v47 < 1)
          {
            __break(1u);
            goto LABEL_105;
          }
          for (i = 0; i != (SEL *)v47; i = (SEL *)((char *)i + 1))
          {
            if ((v137 & 0xC000000000000001) != 0)
              v139 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v137);
            else
              v139 = *(id *)(v137 + 8 * (_QWORD)i + 32);
            v140 = v139;
            v141 = type metadata accessor for NowPlayingTransportButton();
            v142 = swift_dynamicCastClass(v140, v141);
            if (v142)
            {
              v143 = v142;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
              v145 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
              v144 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
              if (v145 >= v144 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v144 > 1, v145 + 1, 1);
              v146 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v145, v143);
              specialized Array._endMutation()(v146);
            }
            else
            {

            }
          }
LABEL_62:
          swift_bridgeObjectRelease(v137);
          swift_bridgeObjectRelease(v137);
          v93 = (unint64_t)_swiftEmptyArrayStorage >> 62;
          if ((unint64_t)_swiftEmptyArrayStorage >> 62)
          {
            if ((uint64_t)_swiftEmptyArrayStorage < 0)
              v159 = _swiftEmptyArrayStorage;
            else
              v159 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
            swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
            v47 = _CocoaArrayWrapper.endIndex.getter(v159);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            if (!v47)
              goto LABEL_130;
            swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
            v160 = _CocoaArrayWrapper.endIndex.getter(v159);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            if (!v160)
            {
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              v148 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, _swiftEmptyArrayStorage);
              if (!v93)
                goto LABEL_67;
              goto LABEL_92;
            }
          }
          else if (!*(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8)))
          {
            goto LABEL_90;
          }
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
            goto LABEL_91;
          if (!*(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8)))
            goto LABEL_97;
          v148 = (id)_swiftEmptyArrayStorage[4];
          if (!v93)
          {
LABEL_67:
            if (!*(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8)))
              goto LABEL_96;
            goto LABEL_68;
          }
LABEL_92:
          if ((uint64_t)_swiftEmptyArrayStorage < 0)
            v161 = _swiftEmptyArrayStorage;
          else
            v161 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
          swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
          v47 = _CocoaArrayWrapper.endIndex.getter(v161);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          if (!v47)
          {
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
            goto LABEL_98;
          }
LABEL_68:
          sub_E2C30(0, 1, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingTransportButton);
          v149 = v163;
          v151 = v167;
          v150 = v168;
          if (v163 != (_BYTE *)&dword_0 + 1)
          {
            v150 = v35;
            v151 = v37;
          }
          v153 = v165;
          v152 = v166;
          if (v163 != (_BYTE *)&dword_0 + 1)
          {
            v152 = v39;
            v153 = v164;
          }
          i = (SEL *)&selRef_boundingRectWithSize_options_attributes_context_;
          objc_msgSend(v148, "setHitRectInsets:", v150, v151, v152, v153, v163);

          v154 = (void *)sub_DCD90();
          if (v154)
          {
            v155 = v154;
            if (v149 != (_BYTE *)&dword_0 + 1)
            {
              v37 = v167;
              v35 = v168;
              v138 = v165;
              v39 = v166;
            }
            objc_msgSend(v154, "setHitRectInsets:", v35, v37, v39, v138);

          }
          v93 = (int64_t)_swiftEmptyArrayStorage;
          if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
          {
            v3 = *(SEL **)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
            if (!v3)
              goto LABEL_102;
            goto LABEL_78;
          }
LABEL_98:
          if (v93 < 0)
            v162 = v93;
          else
            v162 = v93 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v93, 2);
          v3 = (SEL *)_CocoaArrayWrapper.endIndex.getter(v162);
          if (!v3)
            goto LABEL_102;
LABEL_78:
          if ((uint64_t)v3 >= 1)
          {
            for (j = 0; j != v3; j = (SEL *)((char *)j + 1))
            {
              if ((v93 & 0xC000000000000001) != 0)
                v157 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v93);
              else
                v157 = *(id *)(v93 + 8 * (_QWORD)j + 32);
              v158 = v157;
              objc_msgSend(v157, i[415], v16, v18, v20, v22, v163);

            }
LABEL_102:
            swift_bridgeObjectRelease_n(v93, 3);
            return;
          }
LABEL_105:
          __break(1u);
LABEL_106:
          swift_once(&qword_1F9670, sub_1392BC);
LABEL_29:
          v112 = (void *)sub_138790(v47, 1, qword_210420, 0);
          -[SEL setImage:forState:](i, "setImage:forState:", v112, 0);

        }
      }
      goto LABEL_127;
    }
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  if (!v94)
  {
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  objc_msgSend(v95, "setEnabled:", 0);

  v109 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v110 = *(void **)&v109[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton];
  i = v110;

  if (v110)
  {
    if (qword_1F9670 != -1)
      goto LABEL_106;
    goto LABEL_29;
  }
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
}

unint64_t sub_DCD90()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_3;
    return 0;
  }
  if (v1 < 0)
    v5 = *v0;
  else
    v5 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v0);
  v6 = _CocoaArrayWrapper.endIndex.getter(v5);
  swift_bridgeObjectRelease(v1);
  if (!v6)
    return 0;
LABEL_3:
  result = sub_E1CA0();
  if (!result)
  {
    v3 = *v0;
    if ((unint64_t)*v0 >> 62)
    {
      if (v3 < 0)
        v7 = *v0;
      else
        v7 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v0);
      v8 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v3);
      result = v8 - 1;
      if (!__OFSUB__(v8, 1))
        return sub_AD8C0(result);
    }
    else
    {
      v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
      result = v4 - 1;
      if (!__OFSUB__(v4, 1))
        return sub_AD8C0(result);
    }
    __break(1u);
  }
  return result;
}

void sub_DCE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_E0274();

  }
}

void sub_DCEA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _QWORD v20[14];
  _BYTE v21[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v21, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v20, (uint64_t *)&unk_1FC7F0);
  v2 = v20[0];
  if (v20[0])
  {
    v3 = a1 + 16;
    v4 = v20[1];
    swift_unknownObjectRetain(v20[0]);
    sub_4AE24((uint64_t)v20);
    ObjectType = swift_getObjectType(v2);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v2);
    v7 = objc_msgSend(v6, "metadataPlayerPath");

    swift_beginAccess(v3, v20, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = *(id *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController);

      v11 = objc_msgSend(v10, "request");
      objc_msgSend(v11, "setPlayerPath:", v7);

    }
    swift_beginAccess(v3, v19, 0, 0);
    v12 = swift_unknownObjectWeakLoadStrong(v3);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = *(id *)(v12 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController);

      objc_msgSend(v14, "setNeedsReloadForSignificantRequestChange");
    }
    v15 = v7;
    sub_F5C70(v7);
    swift_beginAccess(v3, v18, 0, 0);
    v16 = swift_unknownObjectWeakLoadStrong(v3);
    if (v16)
    {
      v17 = (void *)v16;
      sub_E0274();

    }
  }
  else
  {
    __break(1u);
  }
}

id sub_DD0AC(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  char *Strong;
  void *v7;
  void *v8;
  id v9;
  id result;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  _BYTE v16[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return &dword_0 + 1;
  v7 = Strong;
  v8 = *(void **)&Strong[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack];
  if (!v8)
  {

    return &dword_0 + 1;
  }
  v9 = v8;
  result = objc_msgSend(v7, "view");
  if (result)
  {
    v11 = result;
    objc_msgSend(result, "convertPoint:toCoordinateSpace:", v9, a2, a3);
    v13 = v12;
    v15 = v14;

    LODWORD(v11) = objc_msgSend(v9, "pointInside:withEvent:", 0, v13, v15);
    return (id)(v11 ^ 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_DD1A4(void *a1, uint64_t a2)
{
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *Strong;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = (char *)objc_msgSend(a1, "state");
  if ((unint64_t)(v3 - 3) < 2)
  {
    v8 = (void *)objc_opt_self(UIView);
    v15[4] = sub_E41C0;
    v16 = a2;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_F528;
    v15[3] = &block_descriptor_122_0;
    v9 = _Block_copy(v15);
    v10 = v16;
    swift_retain();
    swift_release(v10);
    objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 2, v9, 0, 0.48, 0.0);
    _Block_release(v9);
    return;
  }
  v4 = a2 + 16;
  if ((unint64_t)(v3 - 1) > 1)
  {
    swift_beginAccess(v4, v15, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
    if (!Strong)
      return;
    v12 = Strong;
    v13 = objc_msgSend(Strong, "view");

    if (v13)
    {
      v14 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v13, "setBackgroundColor:", v14);

      return;
    }
LABEL_14:
    __break(1u);
    return;
  }
  swift_beginAccess(v4, v15, 0, 0);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (!v5)
    return;
  v6 = v5;
  v7 = objc_msgSend(v5, "view");

  if (!v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (qword_1F9600 != -1)
    swift_once(&qword_1F9600, sub_FE408);
  objc_msgSend(v7, "setBackgroundColor:", qword_210378);

}

void sub_DD3A4(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "view");

    if (v4)
    {
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v4, "setBackgroundColor:", v5);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_DD484(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = (char *)objc_msgSend(v4, "userInterfaceStyle");

  if (v5 == (_BYTE *)&dword_0 + 2)
    v6 = 2;
  else
    v6 = 1;
  if (MTMPUDeviceGetGraphicsQuality() == 1000)
  {
    v7 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel];
    if (v7)
    {
      objc_msgSend(v7, "_setDrawsAsBackdropOverlayWithBlendMode:", v6);
      v8 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel];
      if (v8)
      {
        objc_msgSend(v8, "_setDrawsAsBackdropOverlayWithBlendMode:", v6);
        v9 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel];
        if (v9)
        {
          objc_msgSend(v9, "_setDrawsAsBackdropOverlayWithBlendMode:", v6);
          v10 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel];
          if (v10)
          {
            objc_msgSend(v10, "_setDrawsAsBackdropOverlayWithBlendMode:", v6);
            v11 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton];
            if (v11)
            {
              v12 = objc_msgSend(v11, "imageView");
              if (v12)
              {
                v13 = v12;
                objc_msgSend(v12, "_setDrawsAsBackdropOverlayWithBlendMode:", v6);

              }
              v14 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton];
              if (v14)
              {
                v15 = objc_msgSend(v14, "imageView");
                if (v15)
                {
                  v16 = v15;
                  objc_msgSend(v15, "_setDrawsAsBackdropOverlayWithBlendMode:", v6);

                }
                goto LABEL_15;
              }
LABEL_28:
              __break(1u);
              return;
            }
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_15:
  if (a1)
    v17 = objc_msgSend(a1, "horizontalSizeClass");
  else
    v17 = 0;
  v18 = objc_msgSend(v2, "traitCollection");
  v19 = objc_msgSend(v18, "horizontalSizeClass");

  if (!a1 || v17 != v19)
  {
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController];
    v21 = *(void (**)(uint64_t))(v20 + 136);
    if (v21)
    {
      v22 = *(_QWORD *)(v20 + 144);
      v23 = swift_retain();
      v21(v23);
      sub_145A0((uint64_t)v21, v22);
    }
    sub_E0274();
  }
}

id sub_DD6F8(char a1)
{
  char *v1;
  id v3;
  id v4;
  int IsAccessibilityContentSizeCategory;
  uint64_t v6;
  id result;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MiniPlayerViewController();
  objc_msgSendSuper2(&v8, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v4);
  v6 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView;
  result = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = objc_msgSend(result, "isHidden");
  if ((result & 1) == 0 && ((IsAccessibilityContentSizeCategory ^ 1) & 1) == 0)
  {
    result = *(id *)&v1[v6];
    if (result)
      return objc_msgSend(result, "setMarqueeEnabled:withOptions:", 1, 0);
LABEL_8:
    __break(1u);
  }
  return result;
}

void sub_DD960()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  char v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  id v28;
  id v29;
  _QWORD v30[14];
  char v31[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView])
  {
    v3 = type metadata accessor for NowPlayingContentView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
    sub_DDC30(v4);

    sub_DDFB4();
  }
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController], "response");
  if (v5)
  {
    v29 = v5;
    v6 = objc_msgSend(v5, "playerPath");
    v7 = objc_msgSend(v6, "isSystemPodcastsPath");

    if ((v7 & 1) == 0)
    {

      return;
    }
    v9 = static Podcasts.isBlueMoonEnabled()(v8);
    v10 = *(void **)&v1[v2];
    if ((v9 & 1) != 0)
    {
      if (!v10)
        goto LABEL_22;
      v11 = v10;
      v12 = objc_msgSend(v29, "videoOutput");
      v13 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput;
      v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput];
      *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = v12;
      swift_unknownObjectRetain(v12);
      swift_unknownObjectRelease(v14);
      v15 = *(id *)&v11[v13];
      if (v15)
        v15 = objc_msgSend(v15, "playerViewController");
      sub_F5B84(v15);

      swift_unknownObjectRelease(v12);
      v16 = *(_QWORD *)&v1[v2];
      if (!v16)
        goto LABEL_22;
    }
    else
    {
      if (!v10)
        goto LABEL_22;
      v17 = qword_1F96B8;
      v18 = v10;
      if (v17 != -1)
        swift_once(&qword_1F96B8, sub_15D030);
      swift_beginAccess(&static NowPlayingDataProvider.shared, v31, 0, 0);
      sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v30, (uint64_t *)&unk_1FC7F0);
      v19 = v30[0];
      if (!v30[0])
      {
        __break(1u);
        return;
      }
      v20 = v30[1];
      swift_unknownObjectRetain(v30[0]);
      sub_4AE24((uint64_t)v30);
      ObjectType = swift_getObjectType(v19);
      v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 248))(ObjectType, v20);
      swift_unknownObjectRelease(v19);
      sub_F5B84(v22);

      v16 = *(_QWORD *)&v1[v2];
      if (!v16)
        goto LABEL_22;
    }
    v23 = *(void **)(v16 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController);
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v24, "parentViewController");
      if (!v25)
        goto LABEL_20;
      v26 = v25;
      sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
      v27 = v1;
      v28 = v26;
      LOBYTE(v26) = static NSObject.== infix(_:_:)(v28, v27);

      if ((v26 & 1) == 0)
LABEL_20:
        objc_msgSend(v24, "removeFromParentViewController");

    }
LABEL_22:

  }
}

void sub_DDC30(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  char *v4;
  id v5;
  void *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;
  id v31;
  id v32;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
  *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView] = a1;
  v4 = a1;

  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityScale] = 0x3FF0000000000000;
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, "view");
  if (!v5)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = v5;
  objc_msgSend(v5, "addSubview:", v4);

  v7 = v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates];
  v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates] = 0;
  if (v7 == 1)
    objc_msgSend(v4, "setNeedsLayout");
  v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode] = 2;
  sub_F5D6C();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_16D2B0;
  v10 = objc_msgSend(v4, "centerXAnchor");
  v11 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide;
  v12 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide];
  if (!v12)
    goto LABEL_11;
  v13 = objc_msgSend(v12, "centerXAnchor");
  v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v9 + 32) = v14;
  v15 = objc_msgSend(v4, "centerYAnchor");
  v16 = *(void **)&v2[v11];
  if (!v16)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v17 = objc_msgSend(v16, "centerYAnchor");
  v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v9 + 40) = v18;
  v19 = objc_msgSend(v4, "widthAnchor");
  v20 = *(void **)&v2[v11];
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v21 = objc_msgSend(v20, "widthAnchor");
  v22 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v9 + 48) = v22;
  v23 = objc_msgSend(v4, "heightAnchor");
  v24 = *(void **)&v2[v11];
  if (!v24)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v25 = v23;
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = objc_msgSend(v24, "heightAnchor");
  v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v9 + 56) = v28;
  specialized Array._endMutation()(v29);
  sub_F174(0, (unint64_t *)&qword_1FC7E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController], "removeFromParentViewController");
  v31 = objc_msgSend(v2, "view");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "layoutIfNeeded");

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_DDFB4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  double v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  void *object;
  NSString v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  double v64;
  NSString v65;
  void *v66;
  void *v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  uint64_t IsAccessibilityContentSizeCategory;
  uint64_t v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  id v100;
  Swift::String v101;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController];
  v3 = objc_msgSend(v2, "response");
  v4 = &unk_200000;
  if (!v3)
    goto LABEL_9;
  v5 = v3;
  v6 = objc_msgSend(v3, "playerPath");
  v7 = objc_msgSend(v6, "isSystemPodcastsPath");

  if (!v7
    || (v8 = objc_msgSend(v5, "tracklist"), v9 = sub_B61B8(), v8, !v9)
    || (v10 = objc_msgSend(v9, "metadataObject"), v9, !v10))
  {

LABEL_9:
    v17 = objc_msgSend(v2, "response");
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, "playerPath");

    }
    else
    {
      v19 = 0;
    }
    v20 = type metadata accessor for NowPlayingMetadataPlaceholder();
    swift_allocObject(v20, 40, 7);
    v21 = sub_1092B8(v19);
    if (v21)
    {
      v22 = v21;
      v23 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView;
      v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
      if (v24)
      {
        v25 = *(_QWORD *)(v24 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
        v26 = (void *)v21[2];
        v27 = *(void **)(v25 + 80);
        *(_QWORD *)(v25 + 80) = v26;
        v28 = v26;
        swift_retain(v25);
        sub_FFC90(v27);
        swift_release(v25);

      }
      v29 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel;
      v30 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel];
      if (!v30)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      v31 = v22[4];
      v32 = v30;
      if (v31)
      {
        swift_bridgeObjectRetain(v31);
        v34 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v33 = swift_bridgeObjectRelease(v31).n128_u64[0];
      }
      else
      {
        v34 = 0;
      }
      objc_msgSend(v30, "setText:", v34, v33);

      v61 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel];
      if (!v61)
        goto LABEL_67;
      v62 = v22[4];
      v63 = v61;
      if (v62)
      {
        swift_bridgeObjectRetain(v62);
        v65 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v64 = swift_bridgeObjectRelease(v62).n128_u64[0];
      }
      else
      {
        v65 = 0;
      }
      objc_msgSend(v61, "setText:", v65, v64);

      v66 = *(void **)&v1[v29];
      if (!v66)
        goto LABEL_68;
      objc_msgSend(v66, "_setTextColorFollowsTintColor:", 0);
      v67 = *(void **)&v1[v29];
      if (!v67)
      {
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      v4 = &unk_200000;
      v68 = qword_1F95E8;
      v69 = v67;
      if (v68 != -1)
        swift_once(&qword_1F95E8, sub_FE2AC);
      objc_msgSend(v69, "setTextColor:", qword_210370);

      v70 = *(void **)&v1[v23];
      if (v70)
      {
        v71 = v70;
        sub_F5C70(0);

      }
      swift_release(v22);
    }
    else
    {
      v35 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView;
      v36 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
      if (v36)
      {
        v37 = *(_QWORD *)(v36 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent);
        v38 = *(void **)(v37 + 80);
        *(_QWORD *)(v37 + 80) = 0;
        swift_retain(v37);
        sub_FFC90(v38);
        swift_release(v37);

      }
      v39 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel;
      v40 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel];
      if (!v40)
        goto LABEL_70;
      v41 = (void *)objc_opt_self(NSBundle);
      v42 = v40;
      v43 = objc_msgSend(v41, "mainBundle");
      v101._object = (void *)0xE000000000000000;
      v44._object = (void *)0x800000000018A8D0;
      v44._countAndFlagsBits = 0xD000000000000020;
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      v101._countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v101)._object;

      v47 = String._bridgeToObjectiveC()();
      objc_msgSend(v42, "setText:", v47, swift_bridgeObjectRelease(object).n128_f64[0]);

      v48 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel];
      if (!v48)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v49 = *(void **)&v1[v39];
      if (!v49)
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v50 = v48;
      v51 = objc_msgSend(v49, "text");
      objc_msgSend(v50, "setText:", v51);

      v52 = *(void **)&v1[v39];
      if (!v52)
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      objc_msgSend(v52, "_setTextColorFollowsTintColor:", 0);
      v53 = *(void **)&v1[v39];
      if (!v53)
      {
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      v54 = qword_1F95E8;
      v55 = v53;
      v4 = (_QWORD *)&unk_200000;
      if (v54 != -1)
        swift_once(&qword_1F95E8, sub_FE2AC);
      objc_msgSend(v55, "setTextColor:", qword_210370);

      v56 = *(void **)&v1[v35];
      if (v56)
      {
        v57 = v56;
        v58 = objc_msgSend(v2, "response");
        if (v58)
        {
          v59 = v58;
          v60 = objc_msgSend(v58, "playerPath");

        }
        else
        {
          v60 = 0;
        }
        sub_F5C70(v60);

      }
    }
LABEL_54:
    objc_msgSend(v1, "accessibilityUpdateMetadata");
    sub_E0274();
    v87 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v88 = objc_msgSend(v87, "preferredContentSizeCategory");

    IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v88);
    v90 = v4[348];
    v91 = *(void **)&v1[v90];
    if (v91)
    {
      v100 = v91;
      v92 = objc_msgSend(v100, "text");
      if (!v92)
      {
LABEL_62:
        IsAccessibilityContentSizeCategory = 1;
        goto LABEL_63;
      }

      v93 = *(void **)&v1[v90];
      if (v93)
      {
        v94 = objc_msgSend(v93, "text");
        if (v94)
        {
          v95 = v94;
          v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
          v98 = v97;

          if (!v96 && v98 == 0xE000000000000000)
          {
            swift_bridgeObjectRelease(0xE000000000000000);
            goto LABEL_62;
          }
          v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v96, v98, 0, 0xE000000000000000, 0);
          swift_bridgeObjectRelease(v98);
          if ((v99 & 1) != 0)
            goto LABEL_62;
        }
LABEL_63:
        objc_msgSend(v100, "setHidden:", IsAccessibilityContentSizeCategory);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_66;
  }
  v11 = objc_msgSend(v10, "flattenedGenericObject");
  v12 = objc_msgSend(v11, "anyObject");

  if (v12)
  {
    v13 = objc_opt_self(MPModelPodcastEpisode);
    v14 = swift_dynamicCastObjCClass(v12, v13);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = v12;
      sub_DE7BC(v15);
LABEL_50:

      v84 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
      if (v84)
      {
        v85 = v84;
        sub_F5C70(objc_msgSend(v5, "playerPath"));

      }
      v86 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel];
      if (!v86)
        goto LABEL_76;
      objc_msgSend(v86, "_setTextColorFollowsTintColor:", 1);

      goto LABEL_54;
    }
    v72 = objc_opt_self(MPModelSong);
    v73 = swift_dynamicCastObjCClass(v12, v72);
    if (v73)
    {
      v74 = (void *)v73;
      v75 = v12;
      sub_DF2D0(v74);
      goto LABEL_50;
    }
    v76 = objc_opt_self(MPModelTVEpisode);
    v77 = swift_dynamicCastObjCClass(v12, v76);
    if (v77)
    {
      v78 = (void *)v77;
      v79 = v12;
      sub_DF630(v78);
      goto LABEL_50;
    }
    v80 = objc_opt_self(MPModelMovie);
    v81 = swift_dynamicCastObjCClass(v12, v80);
    if (v81)
    {
      v82 = (void *)v81;
      v83 = v12;
      sub_DFA4C(v82);
      goto LABEL_50;
    }
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

void sub_DE7BC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *object;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  NSString v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  double v35;
  Swift::String_optional v36;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _QWORD aBlock[5];
  uint64_t v56;
  _QWORD v57[14];
  char v58[32];
  Swift::String v59;
  Swift::String v60;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = __chkstk_darwin(v8);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel];
  if (!v13)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v51 = v10;
  v52 = v9;
  v53 = v5;
  v14 = v13;
  v15 = objc_msgSend(a1, "title");
  if (v15)
  {
    v16 = v15;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  }
  else
  {
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v59._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v18._object = (void *)0xED0000454C544954;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v59._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v16, v19, v59)._object;
  }
  v20 = object;

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v22 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel];
  if (!v22)
    goto LABEL_18;
  v23 = v22;
  v24 = objc_msgSend(a1, "title");
  if (v24)
  {
    v25 = v24;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  }
  else
  {
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v60._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v27._object = (void *)0xED0000454C544954;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v60._countAndFlagsBits = 0;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v25, v28, v60)._object;
  }
  v29 = v26;

  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setText:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

  v31 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel];
  if (!v31)
    goto LABEL_19;
  v32 = v31;
  v33 = objc_msgSend(v2, "traitCollection");
  v34 = objc_msgSend(v33, "horizontalSizeClass");

  v36 = MPModelPodcastEpisode.miniplayerSubtitleText(for:)((UIUserInterfaceSizeClass)v34);
  if (v36.value._object)
  {
    v37 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v35 = swift_bridgeObjectRelease(v36.value._object).n128_u64[0];
  }
  else
  {
    v37 = 0;
  }
  objc_msgSend(v32, "setText:", v37, v35);

  sub_E03AC();
  sub_DED08(a1);
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v58, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v57, (uint64_t *)&unk_1FC7F0);
  v38 = v57[0];
  if (v57[0])
  {
    v39 = v57[1];
    swift_unknownObjectRetain(v57[0]);
    sub_4AE24((uint64_t)v57);
    ObjectType = swift_getObjectType(v38);
    v41 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 216))(ObjectType, v39);
    swift_unknownObjectRelease(v38);
    v42 = swift_allocObject(&unk_1D0198, 24, 7);
    swift_unknownObjectWeakInit(v42 + 16, v2);
    v43 = swift_allocObject(&unk_1D03A0, 32, 7);
    *(_QWORD *)(v43 + 16) = a1;
    *(_QWORD *)(v43 + 24) = v42;
    aBlock[4] = sub_E3FE0;
    v56 = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_76_0;
    v44 = _Block_copy(aBlock);
    v45 = a1;
    v46 = swift_retain(v42);
    static DispatchQoS.unspecified.getter(v46);
    v54 = &_swiftEmptyArrayStorage;
    v47 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v49 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v48, v49, v4, v47);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v44);
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v52);
    v50 = v56;
    swift_release(v42);
    swift_release(v50);
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_DED08(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30[24];

  v2 = v1;
  v3 = (uint64_t)a1;
  v4 = objc_msgSend(a1, "podcast");
  if (!v4)
    goto LABEL_18;
  v5 = v4;
  v6 = MPModelObject.adamID.getter(v4);
  v8 = v7;

  if ((v8 & 1) != 0)
    goto LABEL_18;
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = MPModelObject.adamID.getter(v9);
    if ((v11 & 1) != 0)
      goto LABEL_18;
    v3 = v10;
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (qword_1F96B8 == -1)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_24:
  swift_once(&qword_1F96B8, sub_15D030);
LABEL_7:
  swift_beginAccess(&static NowPlayingDataProvider.shared, v30, 0, 0);
  if ((_QWORD)static NowPlayingDataProvider.shared)
  {
    v12 = qword_210548;
    if (qword_210548)
    {
      v13 = swift_retain(qword_210548);
      v14 = EpisodeUpsellBannerDataProvider.metricsController.getter(v13);
      if (v14)
      {
        v15 = v14;
        v16 = AdamID.init(rawValue:)(v3);
        v17 = v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_adamIdForUpsellHint;
        if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_adamIdForUpsellHint + 8) & 1) == 0
          && v16 == *(_QWORD *)v17
          && *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider))
        {
          swift_release(v12);
          v18 = v15;
        }
        else
        {
          *(_QWORD *)v17 = v16;
          *(_BYTE *)(v17 + 8) = 0;
          v19 = sub_40324();
          swift_retain(v12);
          swift_retain(v15);
          v20 = BinaryInteger.description.getter(&type metadata for UInt64, v19);
          v22 = v21;
          v23 = type metadata accessor for NowPlayingEpisodeUpsellBannerProvider(0);
          swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
          v24 = NowPlayingEpisodeUpsellBannerProvider.init(dataProvider:metricsController:episodeAdamId:presentationType:)(v12, v15, v20, v22, 1);
          v25 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider;
          v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider);
          *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider) = v24;
          swift_release(v26);
          v27 = *(_QWORD *)(v2 + v25);
          if (v27)
          {
            v28 = swift_allocObject(&unk_1D0198, 24, 7);
            swift_unknownObjectWeakInit(v28 + 16, v2);
            swift_retain(v27);
            swift_retain(v28);
            dispatch thunk of NowPlayingEpisodeUpsellBannerProvider.nowPlayingEpisodeUpsellBannerPublisher(episodeStoreTrackId:podcastStoreTrackId:imageFetchCompletion:)(v3, v6, sub_E3FEC, v28);
            swift_release(v27);
            swift_release_n(v28, 2);
          }
          swift_release(v15);
          v18 = v12;
        }
LABEL_21:
        swift_release(v18);
        return;
      }
      swift_release(v12);
    }
LABEL_18:
    v29 = *(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible) = 0;
    if ((v29 & 1) != 0)
      sub_D8A74(0);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider) = 0;
    goto LABEL_21;
  }
  __break(1u);
}

void sub_DEF8C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t Strong;
  void *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "artworkCatalog");
  v12 = swift_allocObject(&unk_1D03F0, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (void *)objc_opt_self(NSThread);
  swift_retain_n(a2, 2);
  v14 = v11;
  if (objc_msgSend(v13, "isMainThread"))
  {
    swift_beginAccess(a2 + 16, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong
      && (v16 = (void *)Strong,
          v17 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView),
          v18 = v17,
          v16,
          v17))
    {
      v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
      swift_retain(v19);

      v20 = *(void **)(v19 + 80);
      *(_QWORD *)(v19 + 80) = v11;
      v21 = v14;
      sub_FFC90(v20);
      swift_release(a2);
      swift_release(v12);
      swift_release(v19);

    }
    else
    {
      swift_release(a2);
      swift_release(v12);
    }

  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v22 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_E41C8;
    v37 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_82_0;
    v23 = _Block_copy(aBlock);
    v34 = v5;
    v24 = v14;
    v25 = v23;
    v26 = v37;
    swift_retain(v12);
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v28 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = v8;
    v29 = v28;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v31 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v4, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v33);

    swift_release(a2);
    swift_release(v12);
  }
}

void sub_DF2D0(void *a1)
{
  sub_DFA68(a1, (uint64_t)&unk_1D0300, (uint64_t)sub_E3F78, (uint64_t)&block_descriptor_63_0);
}

void sub_DF2EC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t Strong;
  void *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "artworkCatalog");
  v12 = swift_allocObject(&unk_1D0350, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (void *)objc_opt_self(NSThread);
  swift_retain_n(a2, 2);
  v14 = v11;
  if (objc_msgSend(v13, "isMainThread"))
  {
    swift_beginAccess(a2 + 16, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong
      && (v16 = (void *)Strong,
          v17 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView),
          v18 = v17,
          v16,
          v17))
    {
      v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
      swift_retain(v19);

      v20 = *(void **)(v19 + 80);
      *(_QWORD *)(v19 + 80) = v11;
      v21 = v14;
      sub_FFC90(v20);
      swift_release(a2);
      swift_release(v12);
      swift_release(v19);

    }
    else
    {
      swift_release(a2);
      swift_release(v12);
    }

  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v22 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_E3F84;
    v37 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_69;
    v23 = _Block_copy(aBlock);
    v34 = v5;
    v24 = v14;
    v25 = v23;
    v26 = v37;
    swift_retain(v12);
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v28 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = v8;
    v29 = v28;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v31 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v4, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v33);

    swift_release(a2);
    swift_release(v12);
  }
}

void sub_DF630(void *a1)
{
  sub_DFA68(a1, (uint64_t)&unk_1D0260, (uint64_t)sub_E3F60, (uint64_t)&block_descriptor_50_0);
}

void sub_DF64C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t Strong;
  void *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "artworkCatalog");
  v12 = swift_allocObject(&unk_1D02B0, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (void *)objc_opt_self(NSThread);
  swift_retain_n(a2, 2);
  v14 = v11;
  if (objc_msgSend(v13, "isMainThread"))
  {
    swift_beginAccess(a2 + 16, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong
      && (v16 = (void *)Strong,
          v17 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView),
          v18 = v17,
          v16,
          v17))
    {
      v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
      swift_retain(v19);

      v20 = *(void **)(v19 + 80);
      *(_QWORD *)(v19 + 80) = v11;
      v21 = v14;
      sub_FFC90(v20);
      swift_release(a2);
      swift_release(v12);
      swift_release(v19);

    }
    else
    {
      swift_release(a2);
      swift_release(v12);
    }

  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v22 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_E41C8;
    v37 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_56_0;
    v23 = _Block_copy(aBlock);
    v34 = v5;
    v24 = v14;
    v25 = v23;
    v26 = v37;
    swift_retain(v12);
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v28 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = v8;
    v29 = v28;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v31 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v4, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v33);

    swift_release(a2);
    swift_release(v12);
  }
}

void sub_DF990(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView);
    v7 = v6;

    if (v6)
    {
      v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
      swift_retain(v8);

      v9 = *(void **)(v8 + 80);
      *(_QWORD *)(v8 + 80) = a2;
      v10 = a2;
      sub_FFC90(v9);
      swift_release(v8);

    }
  }
}

void sub_DFA4C(void *a1)
{
  sub_DFA68(a1, (uint64_t)&unk_1D01C0, (uint64_t)sub_E3F40, (uint64_t)&block_descriptor_37);
}

void sub_DFA68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *object;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  NSString v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  _QWORD aBlock[5];
  uint64_t v59;
  _QWORD v60[14];
  char v61[32];
  Swift::String v62;
  Swift::String v63;

  v8 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v15 = __chkstk_darwin(v14);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(v8 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel);
  if (!v19)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v51 = a2;
  v52 = a3;
  v53 = a4;
  v54 = v16;
  v55 = v15;
  v56 = v11;
  v20 = v19;
  v21 = objc_msgSend(a1, "title");
  if (v21)
  {
    v22 = v21;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v62._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v24._object = (void *)0xED0000454C544954;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v62._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v22, v25, v62)._object;
  }
  v26 = object;

  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v28 = *(void **)(v8 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel);
  if (!v28)
    goto LABEL_14;
  v29 = v28;
  v30 = objc_msgSend(a1, "title");
  if (v30)
  {
    v31 = v30;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  }
  else
  {
    v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v63._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0x5F4E574F4E4B4E55;
    v33._object = (void *)0xED0000454C544954;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v63._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v31, v34, v63)._object;
  }
  v35 = v32;

  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setText:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v61, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v60, (uint64_t *)&unk_1FC7F0);
  v37 = v60[0];
  if (v60[0])
  {
    v38 = v60[1];
    swift_unknownObjectRetain(v60[0]);
    sub_4AE24((uint64_t)v60);
    ObjectType = swift_getObjectType(v37);
    v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 216))(ObjectType, v38);
    swift_unknownObjectRelease(v37);
    v41 = swift_allocObject(&unk_1D0198, 24, 7);
    swift_unknownObjectWeakInit(v41 + 16, v8);
    v42 = swift_allocObject(v51, 32, 7);
    *(_QWORD *)(v42 + 16) = a1;
    *(_QWORD *)(v42 + 24) = v41;
    aBlock[4] = v52;
    v59 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = v53;
    v43 = _Block_copy(aBlock);
    v44 = a1;
    v45 = swift_retain(v41);
    static DispatchQoS.unspecified.getter(v45);
    v57 = &_swiftEmptyArrayStorage;
    v46 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v48 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v57, v47, v48, v10, v46);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v13, v43);
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v55);
    v49 = v59;
    swift_release(v41);
    swift_release(v49);
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_DFF38(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t Strong;
  void *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "artworkCatalog");
  v12 = swift_allocObject(&unk_1D0210, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (void *)objc_opt_self(NSThread);
  swift_retain_n(a2, 2);
  v14 = v11;
  if (objc_msgSend(v13, "isMainThread"))
  {
    swift_beginAccess(a2 + 16, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong
      && (v16 = (void *)Strong,
          v17 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView),
          v18 = v17,
          v16,
          v17))
    {
      v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
      swift_retain(v19);

      v20 = *(void **)(v19 + 80);
      *(_QWORD *)(v19 + 80) = v14;
      v21 = v14;
      sub_FFC90(v20);
      swift_release(a2);
      swift_release(v12);
      swift_release(v19);

    }
    else
    {
      swift_release(a2);
      swift_release(v12);
    }

  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v22 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_E3F4C;
    v37 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_43;
    v23 = _Block_copy(aBlock);
    v34 = v8;
    v24 = v23;
    v25 = v37;
    swift_retain(v12);
    swift_release(v25);
    static DispatchQoS.unspecified.getter(v26);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v27 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = a2;
    v28 = v5;
    v29 = v27;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v31 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v4, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v34);

    swift_release(v33);
    swift_release(v12);
  }
}

id sub_E0274()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[14];
  _BYTE v10[24];

  v1 = v0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v10, 0, 0);
  result = (id)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v9, (uint64_t *)&unk_1FC7F0);
  v3 = v9[0];
  if (v9[0])
  {
    v4 = v9[1];
    swift_unknownObjectRetain(v9[0]);
    sub_4AE24((uint64_t)v9);
    ObjectType = swift_getObjectType(v3);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
    v7 = objc_msgSend(v6, "metadataPlayerPath");

    v8 = objc_msgSend(v7, "route");
    if (!v8)
      return sub_E03AC();
    result = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel);
    if (result)
    {
      objc_msgSend(result, "setRoute:", v8);

      return sub_E03AC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_E03AC()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  id v18;
  id v19;
  int IsAccessibilityContentSizeCategory;
  uint64_t v21;
  id v22;
  double v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned __int8 v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];

  v1 = v0;
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v34, 0, 0);
  result = (id)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v32, (uint64_t *)&unk_1FC7F0);
  v3 = v32;
  if (!v32)
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v4 = v33;
  swift_unknownObjectRetain(v32);
  sub_4AE24((uint64_t)&v32);
  ObjectType = swift_getObjectType(v3);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  v7 = objc_msgSend(v6, "metadataPlayerPath");

  v8 = objc_msgSend(v7, "route");
  if (v8)
  {
    v9 = objc_msgSend(v8, "isDeviceRoute");

  }
  else
  {
    v9 = 0;
  }
  v10 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel;
  result = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel);
  if (!result)
    goto LABEL_26;
  v11 = objc_msgSend(result, "text");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

    v32 = v13;
    v33 = v15;
    v16 = sub_5DAB0();
    v17 = Collection.isNotEmpty.getter(&type metadata for String, v16);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v19 = objc_msgSend(v18, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v19);
  v21 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel;
  result = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel);
  if (!result)
    goto LABEL_27;
  v22 = objc_msgSend(result, "text");
  if (!v22)
  {
    if (v9 || (v17 & 1) == 0)
    {
      v30 = 0;
      v29 = 0;
      if ((IsAccessibilityContentSizeCategory & 1) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  v24 = v22;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v27 = v26;

  v32 = v25;
  v33 = v27;
  v28 = sub_5DAB0();
  v29 = Collection.isNotEmpty.getter(&type metadata for String, v28);
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v27).n128_u64[0];
  if (!(v9 & 1 | ((v17 & 1) == 0)))
  {
LABEL_18:
    v30 = IsAccessibilityContentSizeCategory ^ 1;
    goto LABEL_20;
  }
  v30 = 0;
  if (IsAccessibilityContentSizeCategory)
LABEL_20:
    v29 = 0;
LABEL_21:
  result = *(id *)(v1 + v10);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(result, "setHidden:", v30 ^ 1u, v23);
  result = *(id *)(v1 + v21);
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v31 = (v29 ^ 1) & 1;
  objc_msgSend(result, "setHidden:", v31);
  result = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel);
  if (result)
    return objc_msgSend(result, "setHidden:", v31);
LABEL_30:
  __break(1u);
  return result;
}

id sub_E0724(uint64_t a1)
{
  return sub_4AC44(a1, type metadata accessor for MiniPlayerViewController);
}

uint64_t type metadata accessor for MiniPlayerViewController()
{
  return objc_opt_self(_TtC12NowPlayingUI24MiniPlayerViewController);
}

_QWORD *sub_E0988(uint64_t a1, char a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  char *v12;

  if ((a2 & 1) != 0)
    return 0;
  v3 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
  if (!v3)
    return 0;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = v5 == 0x6B726F77747241 && v6 == 0xE700000000000000;
  if (!v7
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, 0x6B726F77747241, 0xE700000000000000, 0) & 1) == 0)
  {
    return 0;
  }
  v8 = type metadata accessor for PresentationDonationItem();
  v9 = (_QWORD *)swift_allocObject(v8, 80, 7);
  v9[6] = 0;
  v9[7] = 0;
  v9[2] = 0x6B726F77747241;
  v9[3] = 0xE700000000000000;
  v9[4] = v3;
  v9[5] = 0;
  v10 = swift_allocObject(&unk_1D0058, 32, 7);
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = v3;
  v9[8] = sub_E24B8;
  v9[9] = v10;
  v11 = v3;
  v12 = v2;
  sub_145A0(0, 0);
  return v9;
}

id sub_E0A7C()
{
  void *v0;
  id result;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for PresentationDonationTarget();
    v4 = (_QWORD *)swift_allocObject(v3, 104, 7);
    v4[2] = 0x6B726F77747241;
    v4[3] = 0xE700000000000000;
    v4[4] = v2;
    v4[11] = 0;
    v4[12] = 0;
    v4[9] = sub_E0BBC;
    v4[10] = 0;
    sub_145A0(0, 0);
    v5 = swift_allocObject(&unk_1D0080, 24, 7);
    *(_QWORD *)(v5 + 16) = v0;
    v4[5] = sub_E2500;
    v4[6] = v5;
    v6 = v0;
    sub_145A0(0, 0);
    v7 = swift_allocObject(&unk_1D00A8, 24, 7);
    *(_QWORD *)(v7 + 16) = v6;
    v4[7] = sub_E2548;
    v4[8] = v7;
    v8 = v6;
    sub_145A0(0, 0);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_16B2D0;
    *(_QWORD *)(v10 + 32) = v4;
    v11 = v10;
    specialized Array._endMutation()(v10);
    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_E0BBC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  id v6;

  v1 = *(void **)(a1 + 32);
  v2 = type metadata accessor for NowPlayingContentView();
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates) = 1;
    v6 = v1;
    if ((v5 & 1) == 0)
      objc_msgSend(v4, "setNeedsLayout");
    *((_BYTE *)v4 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode) = 2;
    sub_F5D6C();

  }
}

void sub_E0C68(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(void **)(a1 + 32);
  v2 = type metadata accessor for NowPlayingContentView();
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v1;
    sub_DDC30(v4);

  }
}

void sub_E0CDC(char *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned __int8 v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;

  v2 = OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse;
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__systemPodcastsResponse])
    return;
  v4 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController), "response");
  v5 = v4;
  if (!v4)
  {
    v14 = type metadata accessor for NowPlayingMetadataPlaceholder();
    swift_allocObject(v14, 40, 7);
    v15 = sub_1092B8(0);
    v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder];
    *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder] = v15;
    swift_release(v16);
    goto LABEL_6;
  }
  v6 = objc_msgSend(v4, "playerPath");
  v7 = type metadata accessor for NowPlayingMetadataPlaceholder();
  swift_allocObject(v7, 40, 7);
  v8 = sub_1092B8(v6);
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder];
  *(_QWORD *)&a1[OBJC_IVAR____TtC12NowPlayingUI32NowPlayingControlsViewController__placeholder] = v8;
  swift_release(v9);
  v10 = v5;
  v11 = objc_msgSend(v10, "playerPath");
  v12 = objc_msgSend(v11, "isSystemPodcastsPath");

  v13 = v5;
  if ((v12 & 1) == 0)
  {

LABEL_6:
    v13 = 0;
  }
  v17 = *(void **)&a1[v2];
  *(_QWORD *)&a1[v2] = v13;
  v18 = v13;

  sub_1218A8();
  v19 = objc_msgSend(a1, "view");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "setNeedsLayout");

    v21 = objc_msgSend(a1, "view");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

_QWORD *sub_E0EC4(uint64_t a1, char a2)
{
  return sub_E0988(a1, a2 & 1);
}

void sub_E0ECC(void *a1, void (*a2)(uint64_t), uint64_t a3, char *a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  unsigned int v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  char v29;
  void *v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];

  v7 = objc_msgSend(a1, "request");
  v8 = objc_opt_self(MPCPlayerRequest);
  v9 = swift_dynamicCastObjCClass(v7, v8);
  if (v9)
  {
    v10 = (void *)v9;
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, &v52, 0, 0);
    sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v53, (uint64_t *)&unk_1FC7F0);
    v11 = v53;
    if (v53)
    {
      v12 = v54;
      swift_unknownObjectRetain(v53);
      sub_4AE24((uint64_t)&v53);
      ObjectType = swift_getObjectType(v11);
      v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
      swift_unknownObjectRelease(v11);
      v15 = objc_msgSend(v10, "playerPath");
      if (v15)
      {
        v16 = v15;
        PlayerPathCoordinator.didReceiveResponse(for:)(v15);

        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_7:
  v17 = swift_unknownObjectRelease(v7);
  a2(v17);
  sub_DDFB4();
  v18 = objc_msgSend(a1, "response");
  if (!v18)
  {
LABEL_11:
    v22 = 0;
    goto LABEL_13;
  }
  v19 = v18;
  v20 = objc_opt_self(MPCPlayerResponse);
  v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, "playerPath");
    v24 = objc_msgSend(v23, "isSystemPodcastsPath");

    if (v24)
      goto LABEL_13;
    swift_unknownObjectRelease(v19);
    goto LABEL_11;
  }
  swift_unknownObjectRelease(v19);
LABEL_13:
  if (!objc_msgSend(a4, "isViewLoaded"))
  {
LABEL_35:
    v51 = *(_QWORD *)&a4[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController];
    swift_retain();
    sub_138D3C(v22);
    swift_release(v51);

    return;
  }
  v25 = objc_msgSend(a4, "view");
  if (!v25)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "window");

  if (!v27)
    goto LABEL_35;
  v29 = static Podcasts.isBlueMoonEnabled()(v28);
  v30 = *(void **)&a4[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
  if ((v29 & 1) != 0)
  {
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v22, "videoOutput");
      v33 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput;
      v34 = *(_QWORD *)&v31[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput];
      *(_QWORD *)&v31[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = v32;
      swift_unknownObjectRetain(v32);
      swift_unknownObjectRelease(v34);
      v35 = *(id *)&v31[v33];
      if (v35)
        v35 = objc_msgSend(v35, "playerViewController");
      sub_F5B84(v35);

      swift_unknownObjectRelease(v32);
    }
    goto LABEL_29;
  }
  if (!v30)
  {
LABEL_29:
    v44 = *(_QWORD *)&a4[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
    if (v44)
    {
      v45 = *(void **)(v44 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController);
      if (v45)
      {
        v46 = v45;
        v47 = objc_msgSend(v46, "parentViewController");
        if (!v47)
          goto LABEL_33;
        v48 = v47;
        sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
        v49 = a4;
        v50 = v48;
        LOBYTE(v48) = static NSObject.== infix(_:_:)(v50, v49);

        if ((v48 & 1) == 0)
LABEL_33:
          objc_msgSend(v46, "removeFromParentViewController");

      }
    }
    goto LABEL_35;
  }
  if (!v22)
  {
    v43 = v30;
    v42 = 0;
    goto LABEL_28;
  }
  v36 = qword_1F96B8;
  v37 = v30;
  v38 = v22;
  if (v36 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v55, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v53, (uint64_t *)&unk_1FC7F0);
  v39 = v53;
  if (v53)
  {
    v40 = v54;
    swift_unknownObjectRetain(v53);
    sub_4AE24((uint64_t)&v53);
    v41 = swift_getObjectType(v39);
    v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 248))(v41, v40);

    swift_unknownObjectRelease(v39);
LABEL_28:
    sub_F5B84(v42);

    goto LABEL_29;
  }
LABEL_39:
  __break(1u);
}

void sub_E13B8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[14];
  _BYTE v11[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v11, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v10, (uint64_t *)&unk_1FC7F0);
  v4 = v10[0];
  if (v10[0])
  {
    v5 = v10[1];
    swift_unknownObjectRetain(v10[0]);
    sub_4AE24((uint64_t)v10);
    ObjectType = swift_getObjectType(v4);
    v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
    v8 = objc_msgSend(a1, "playerPath");
    if (v8)
    {
      v9 = v8;
      PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)(v8, a2);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_E1538(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_F174(0, &qword_1FC800, UITouch_ptr);
  v10 = sub_4C000();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

id sub_E15E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  objc_super v16;
  _QWORD v17[3];
  uint64_t v18;

  v5 = &v2[OBJC_IVAR____TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer_handlePoint];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  sub_2808C(a1, (uint64_t)v17, &qword_1FD880);
  v6 = v18;
  if (v18)
  {
    v7 = __swift_project_boxed_opaque_existential_1(v17, v18);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    __swift_destroy_boxed_opaque_existential_0(v17);
  }
  else
  {
    v12 = 0;
  }
  v13 = (objc_class *)type metadata accessor for MiniPlayerViewController.HighlightGestureRecognizer();
  v16.receiver = v2;
  v16.super_class = v13;
  v14 = objc_msgSendSuper2(&v16, "initWithTarget:action:", v12, a2);
  swift_unknownObjectRelease(v12);
  sub_43D44(a1);
  return v14;
}

id sub_E1778()
{
  return sub_4AC44(0, type metadata accessor for MiniPlayerViewController.HighlightGestureRecognizer);
}

uint64_t type metadata accessor for MiniPlayerViewController.HighlightGestureRecognizer()
{
  return objc_opt_self(_TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer);
}

void sub_E17BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  int v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  v4 = type metadata accessor for NowPlayingEpisodeUpsellBannerModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4) == 1)
  {
    swift_beginAccess(v3, v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (!Strong)
      return;
    v6 = (void *)Strong;
    v7 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible) = 0;
    if (v7 == 1)
      sub_D8A74(0);
  }
  else
  {
    swift_beginAccess(v3, v9, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v3);
    if (!v8)
      return;
    v6 = (void *)v8;
    sub_D8DD8(1);
  }

}

void sub_E1880(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  double v8;
  uint64_t v9;
  void *v10;
  double v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  CGAffineTransform v19;
  _BYTE v20[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel);
    if (v7)
    {
      if ((a2 & 1) != 0)
        v8 = 1.0;
      else
        v8 = 0.0;
      objc_msgSend(v7, "setAlpha:", v8);
      v9 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel;
      v10 = *(void **)&v5[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel];
      if (v10)
      {
        if ((a2 & 1) != 0)
          v11 = 0.0;
        else
          v11 = 1.0;
        objc_msgSend(v10, "setAlpha:", v11);
        v12 = *(void **)&v5[v9];
        if ((a2 & 1) == 0)
        {
          if (v12)
          {
            *(_OWORD *)&v19.a = 0x3FF0000000000000uLL;
            v19.c = 0.0;
            v19.d = 1.0;
            *(_OWORD *)&v19.tx = 0uLL;
            objc_msgSend(v12, "setTransform:", &v19);
            v17 = *(void **)&v5[v6];
            if (v17)
            {
              v18 = qword_1F9530;
              v16 = v17;
              if (v18 != -1)
                swift_once(&qword_1F9530, sub_D8550);
              CGAffineTransformMakeTranslation(&v19, *(CGFloat *)&qword_200A90, 0.0);
              objc_msgSend(v16, "setTransform:", &v19, *(_OWORD *)&v19.a, *(_OWORD *)&v19.c, *(_OWORD *)&v19.tx);
              goto LABEL_21;
            }
LABEL_28:
            __break(1u);
            return;
          }
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        if (v12)
        {
          v13 = qword_1F9530;
          v14 = v12;
          if (v13 != -1)
            swift_once(&qword_1F9530, sub_D8550);
          CGAffineTransformMakeTranslation(&v19, -*(double *)&qword_200A90, 0.0);
          objc_msgSend(v14, "setTransform:", &v19);

          v15 = *(void **)&v5[v6];
          if (v15)
          {
            v16 = v15;
            objc_msgSend(v16, "setTransform:", &v19, 0x3FF0000000000000, 0, 0, 0x3FF0000000000000, 0, 0);
LABEL_21:

            return;
          }
          goto LABEL_26;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
}

void sub_E1A88(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  void *v5;
  double v6;
  id v7;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC12NowPlayingUI14MiniPlayerView_controller);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack);
    v7 = v5;

    if (v5)
    {
      v6 = 1.0;
      if ((a1 & 1) != 0)
        v6 = 0.0;
      objc_msgSend(v7, "setAlpha:", v6);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_E1BFC(uint64_t a1)
{
  return sub_4AC44(a1, type metadata accessor for MiniPlayerView);
}

uint64_t type metadata accessor for MiniPlayerView()
{
  return objc_opt_self(_TtC12NowPlayingUI14MiniPlayerView);
}

void sub_E1C38(char a1)
{
  sub_E1A88(a1);
}

uint64_t sub_E1C58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for ContextMenuPreviewMargins.none(_:);
  v3 = type metadata accessor for ContextMenuPreviewMargins(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_E1CA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v0);
  *v0 = v1;
  if (!(_DWORD)result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    result = sub_135E78(v1);
    v1 = result;
    *v0 = result;
  }
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  if (v4)
  {
    v5 = v4 - 1;
    v6 = *(_QWORD *)((char *)&stru_20.cmd + 8 * v5 + (v1 & 0xFFFFFFFFFFFFFF8));
    *(_QWORD *)(v3 + 16) = v5;
    specialized Array._endMutation()(result);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_E1D0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v11 = __CocoaSet.Index.element.getter(v7, a2);
        v21 = v11;
        v12 = sub_F174(0, &qword_1FC800, UITouch_ptr);
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v4 = v22;
        swift_unknownObjectRelease(v11);
        v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v14 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v13 & ~v14;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v16 = static NSObject.== infix(_:_:)(v15, v4);

          if ((v16 & 1) == 0)
          {
            v17 = ~v14;
            do
            {
              v7 = (v7 + 1) & v17;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v19 = static NSObject.== infix(_:_:)(v18, v4);

            }
            while ((v19 & 1) == 0);
          }

LABEL_20:
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.element(at:)(a1, a2, v8);
  v21 = v9;
  v10 = sub_F174(0, &qword_1FC800, UITouch_ptr);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  swift_unknownObjectRelease(v9);
}

uint64_t sub_E1F74(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

id sub_E1FFC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_leadingArtworkConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_trailingTransportControlsConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin] = 0x4041000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playbackCancellationGesture] = 0;
  v3 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController;
  v4 = type metadata accessor for TransportControlsController();
  v5 = swift_allocObject(v4, 152, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_QWORD *)(v5 + 144) = 0;
  *(_QWORD *)&v1[v3] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton] = 0;
  v6 = &v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration];
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton] = 0;
  v7 = &v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration];
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton] = 0;
  v8 = &v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration];
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_bindings] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_contextActionRegistration] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_preferredContentSizeDidChangeObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_routeDidChangeObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizerHandler] = 0;
  v9 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController;
  v10 = objc_allocWithZone((Class)MPRequestResponseController);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider] = 0;
  v12 = &v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_adamIdForUpsellHint];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellAnimator] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController____lazy_storage___upsellString] = 0;
  v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible] = 0;
  v13 = &v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_objectGraph] = a1;
  swift_retain();

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for MiniPlayerViewController();
  return objc_msgSendSuper2(&v15, "initWithNibName:bundle:", 0, 0);
}

void sub_E2294(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v2 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v2)
  {
    v14 = v2;
    v3 = type metadata accessor for NowPlayingViewController(0);
    v4 = swift_dynamicCastClass(v14, v3);
    if (v4
      && (v5 = *(void **)(v4 + OBJC_IVAR____TtC12NowPlayingUI24NowPlayingViewController_controlsViewController)) != 0)
    {
      v6 = (void *)objc_opt_self(UIView);
      v7 = swift_allocObject(&unk_1CFFE0, 32, 7);
      *(_QWORD *)(v7 + 16) = v5;
      *(_QWORD *)(v7 + 24) = v1;
      v8 = swift_allocObject(&unk_1D0008, 32, 7);
      *(_QWORD *)(v8 + 16) = sub_E2488;
      *(_QWORD *)(v8 + 24) = v7;
      aBlock[4] = sub_ECE4;
      v16 = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F318;
      aBlock[3] = &block_descriptor_22;
      v9 = _Block_copy(aBlock);
      v10 = v16;
      v11 = v5;
      v12 = v1;
      swift_retain();
      objc_msgSend(v6, "performWithoutAnimation:", v9, swift_release(v10).n128_f64[0]);

      _Block_release(v9);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 119, 759, 40, 1);
      swift_release(v7);
      swift_release(v8);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
    else
    {

    }
  }
}

uint64_t sub_E245C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_E2488()
{
  uint64_t v0;

  sub_E0CDC(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_E2490()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_22(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_E24B8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if ((a1 & 1) != 0)
  {
    v4 = *(void **)(v3 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView) = 0;

  }
  else
  {
    sub_DDC30(*(void **)(v2 + 24));
  }
}

id sub_E2500()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide);
  if (result)
    return objc_msgSend(result, "layoutFrame");
  __break(1u);
  return result;
}

uint64_t sub_E2524()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E2548(uint64_t a1)
{
  sub_E0C68(a1);
}

uint64_t sub_E2550(uint64_t a1, uint64_t a2)
{
  return sub_E2C30(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptContentViewModel);
}

char *sub_E255C(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_135948(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[32 * a1 + 32];
    v15 = &v4[32 * a2 + 32];
    if (a1 != a2 || result >= &v15[32 * v14])
      result = (char *)memmove(result, v15, 32 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void *sub_E26B4(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  void *result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1355CC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = (void *)swift_arrayDestroy(&v4[5 * a1 + 4], v7, &type metadata for QueueModel.Chapter);
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (_QWORD *)&v16[40 * v15])
      result = memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v19 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v19, 1046, 0);
  __break(1u);
  return result;
}

void sub_E2828()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkLayoutGuide] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_leadingArtworkConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_trailingTransportControlsConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_providedArtworkMargin] = 0x4041000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemRouteLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemSubtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingUpsellLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playbackCancellationGesture] = 0;
  v1 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController;
  v2 = type metadata accessor for TransportControlsController();
  v3 = swift_allocObject(v2, 152, 7);
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_QWORD *)(v3 + 144) = 0;
  *(_QWORD *)&v0[v1] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButton] = 0;
  v4 = &v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration];
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton] = 0;
  v5 = &v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration];
  v5[1] = 0;
  v5[2] = 0;
  *v5 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton] = 0;
  v6 = &v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration];
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_bindings] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_contextActionRegistration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_preferredContentSizeDidChangeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_routeDidChangeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_highlightGestureRecognizerHandler] = 0;
  v7 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playerRequestController;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_episodeUpsellHintProvider] = 0;
  v8 = &v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_adamIdForUpsellHint];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellAnimator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController____lazy_storage___upsellString] = 0;
  v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_upsellHintVisible] = 0;
  v9 = &v0[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_openMiniPlayerHook];
  *v9 = 0;
  v9[1] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/MiniPlayerViewController.swift", 43, 2, 45, 0);
  __break(1u);
}

char *sub_E2AC4()
{
  char *v0;
  id v1;
  void *v2;
  char *result;
  id v4;
  void *v5;
  double v6;

  type metadata accessor for NowPlayingTransportButton();
  v0 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 0);
  v1 = objc_msgSend(v0, "imageView");
  if (v1)
  {
    v2 = v1;
    if (qword_1F9610 != -1)
      swift_once(&qword_1F9610, sub_FE4B4);
    objc_msgSend(v2, "setTintColor:", qword_210388);

  }
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidth] = 0x4040000000000000;
  result = *(char **)&v0[OBJC_IVAR____TtC12NowPlayingUI25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  if (result)
  {
    objc_msgSend(result, "setConstant:", 32.0);
    objc_msgSend(v0, "invalidateIntrinsicContentSize");
    v4 = objc_msgSend(v0, "imageView");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setContentMode:", 4);

    }
    objc_msgSend(v0, "setContentHorizontalAlignment:", 5);
    objc_msgSend(v0, "setPointerInteractionEnabled:", 1);
    LODWORD(v6) = 1148846080;
    objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v6);
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_E2C30(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  if (v9 < v3)
    goto LABEL_34;
LABEL_4:
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    v11 = v10 - v9;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v25 = v7;
    else
      v25 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v7);
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v7);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((char *)&dword_18 + (v7 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4);
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v6(0);
  v16 = (void *)swift_arrayDestroy(v13 + 32 + 8 * v5, v9, v15);
  if (!v8)
    return specialized Array._endMutation()(v16);
  if (!((unint64_t)v7 >> 62))
  {
    v17 = *(_QWORD *)(v13 + 16);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7 < 0)
    v26 = v7;
  else
    v26 = v13;
  swift_bridgeObjectRetain(v7);
  v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  v16 = (void *)swift_bridgeObjectRelease(v7);
  v18 = v27 - v3;
  if (__OFSUB__(v27, v3))
    goto LABEL_52;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (const void *)(v13 + 32 + 8 * v3);
    if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v19 + 8 * v18)
      v16 = memmove((void *)(v13 + 32 + 8 * v5), v19, 8 * v18);
    if (!((unint64_t)v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        return specialized Array._endMutation()(v16);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v7 < 0)
      v28 = v7;
    else
      v28 = v13;
    swift_bridgeObjectRetain(v7);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    v16 = (void *)swift_bridgeObjectRelease(v7);
    v21 = v29 + v8;
    if (!__OFADD__(v29, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void *sub_E2F00(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *result;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGPoint v15;
  CGRect v16;

  v3 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack;
  result = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsStack);
  if (result)
  {
    objc_msgSend(result, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    objc_msgSend(a1, "locationInView:", *(_QWORD *)(v1 + v3));
    v15.x = v13;
    v15.y = v14;
    v16.origin.x = v6;
    v16.origin.y = v8;
    v16.size.width = v10;
    v16.size.height = v12;
    return (void *)!CGRectContainsPoint(v16, v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_E2F98()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  NSString *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t IsAccessibilityContentSizeCategory;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;

  v1 = (void *)objc_opt_self(UIApplication);
  v2 = objc_msgSend(v1, "sharedApplication");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LODWORD(v2) = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v3);
  v4 = 17.0;
  if ((_DWORD)v2)
  {
    v5 = UIFontTextStyleBody;
    v4 = sub_15F8FC((uint64_t)UIContentSizeCategoryAccessibilityLarge, (uint64_t)v5, 17.0);

  }
  v6 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextTitleLabel);
  if (!v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = (void *)objc_opt_self(UIFont);
  v8 = v6;
  v9 = objc_msgSend(v7, "systemFontOfSize:", v4);
  objc_msgSend(v8, "setFont:", v9);

  v10 = objc_msgSend(v1, "sharedApplication");
  v11 = objc_msgSend(v10, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v11);
  v13 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemTitleLabel);
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v13, "setHidden:", IsAccessibilityContentSizeCategory);
  v14 = OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView;
  v15 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_nowPlayingItemLargeTextMarqueeView);
  if (!v15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(v15, "setHidden:", IsAccessibilityContentSizeCategory ^ 1);
  sub_E0274();
  v16 = *(void **)(v0 + v14);
  if (v16)
  {
    objc_msgSend(v16, "setMarqueeEnabled:withOptions:", IsAccessibilityContentSizeCategory, 0);
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_E3168(void *a1, char *a2, void (**a3)(_QWORD))
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  unsigned __int8 v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  char v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[24];

  v6 = objc_msgSend(a1, "request");
  v7 = objc_opt_self(MPCPlayerRequest);
  v8 = swift_dynamicCastObjCClass(v6, v7);
  if (v8)
  {
    v9 = (void *)v8;
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, &v50, 0, 0);
    sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v51, (uint64_t *)&unk_1FC7F0);
    v10 = v51;
    if (v51)
    {
      v11 = v52;
      swift_unknownObjectRetain(v51);
      sub_4AE24((uint64_t)&v51);
      ObjectType = swift_getObjectType(v10);
      v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
      swift_unknownObjectRelease(v10);
      v14 = objc_msgSend(v9, "playerPath");
      if (v14)
      {
        v15 = v14;
        PlayerPathCoordinator.didReceiveResponse(for:)(v14);

        goto LABEL_7;
      }
    }
    else
    {
      _Block_release(a3);
      __break(1u);
    }
    _Block_release(a3);
    __break(1u);
    goto LABEL_38;
  }
LABEL_7:
  swift_unknownObjectRelease(v6);
  a3[2](a3);
  sub_DDFB4();
  v16 = objc_msgSend(a1, "response");
  if (!v16)
  {
LABEL_11:
    v20 = 0;
    goto LABEL_13;
  }
  v17 = v16;
  v18 = objc_opt_self(MPCPlayerResponse);
  v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
  v20 = v19;
  if (v19)
  {
    v21 = objc_msgSend(v19, "playerPath");
    v22 = objc_msgSend(v21, "isSystemPodcastsPath");

    if ((v22 & 1) != 0)
      goto LABEL_13;
    swift_unknownObjectRelease(v17);
    goto LABEL_11;
  }
  swift_unknownObjectRelease(v17);
LABEL_13:
  if (!objc_msgSend(a2, "isViewLoaded"))
  {
LABEL_35:
    v49 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_transportControlsController];
    swift_retain();
    sub_138D3C(v20);
    swift_release(v49);

    return;
  }
  v23 = objc_msgSend(a2, "view");
  if (!v23)
  {
LABEL_38:
    _Block_release(a3);
    __break(1u);
    goto LABEL_39;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "window");

  if (!v25)
    goto LABEL_35;
  v27 = static Podcasts.isBlueMoonEnabled()(v26);
  v28 = *(void **)&a2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
  if ((v27 & 1) != 0)
  {
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v20, "videoOutput");
      v31 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput;
      v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput];
      *(_QWORD *)&v29[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = v30;
      swift_unknownObjectRetain(v30);
      swift_unknownObjectRelease(v32);
      v33 = *(id *)&v29[v31];
      if (v33)
        v33 = objc_msgSend(v33, "playerViewController");
      sub_F5B84(v33);

      swift_unknownObjectRelease(v30);
    }
    goto LABEL_29;
  }
  if (!v28)
  {
LABEL_29:
    v42 = *(_QWORD *)&a2[OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_artworkView];
    if (v42)
    {
      v43 = *(void **)(v42 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController);
      if (v43)
      {
        v44 = v43;
        v45 = objc_msgSend(v44, "parentViewController");
        if (!v45)
          goto LABEL_33;
        v46 = v45;
        sub_F174(0, (unint64_t *)&qword_1F9F30, UIViewController_ptr);
        v47 = a2;
        v48 = v46;
        LOBYTE(v46) = static NSObject.== infix(_:_:)(v48, v47);

        if ((v46 & 1) == 0)
LABEL_33:
          objc_msgSend(v44, "removeFromParentViewController");

      }
    }
    goto LABEL_35;
  }
  if (!v20)
  {
    v41 = v28;
    v40 = 0;
    goto LABEL_28;
  }
  v34 = qword_1F96B8;
  v35 = v28;
  v36 = v20;
  if (v34 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v53, 0, 0);
  sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v51, (uint64_t *)&unk_1FC7F0);
  v37 = v51;
  if (v51)
  {
    v38 = v52;
    swift_unknownObjectRetain(v51);
    sub_4AE24((uint64_t)&v51);
    v39 = swift_getObjectType(v37);
    v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 248))(v39, v38);

    swift_unknownObjectRelease(v37);
LABEL_28:
    sub_F5B84(v40);

    goto LABEL_29;
  }
LABEL_39:
  _Block_release(a3);
  __break(1u);
}

double sub_E35F4(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  double result;
  __n128 v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  _QWORD *v34;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_1D0120, 24, 7);
  *(_QWORD *)(v12 + 16) = a3;
  v13 = (_QWORD *)swift_allocObject(&unk_1D0148, 48, 7);
  v13[2] = a1;
  v13[3] = sub_2BE90;
  v13[4] = v12;
  v13[5] = a2;
  v14 = (void *)objc_opt_self(NSThread);
  v15 = a1;
  swift_retain_n(v12, 2);
  v16 = a2;
  v17 = v15;
  v18 = (char *)v16;
  _Block_copy(a3);
  if (objc_msgSend(v14, "isMainThread"))
  {
    _Block_copy(a3);
    sub_E3168(v17, v18, (void (**)(_QWORD))a3);
    _Block_release(a3);

    swift_release_n(v12, 2);
  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter(v20);
    aBlock[4] = sub_E3F04;
    v34 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_28_0;
    v22 = _Block_copy(aBlock);
    v23 = v34;
    swift_retain();
    swift_release(v23);
    static DispatchQoS.unspecified.getter(v24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v29 = v17;
    v26 = v25;
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v28 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v6, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);

    swift_release_n(v12, 2);
  }
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

id sub_E38F8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id result;
  void **v20;
  uint64_t v21;
  uint64_t ObjectType;
  void *v23;
  void *v24;
  __n128 v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void **aBlock;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  void *v41;
  void (*v42)();
  uint64_t v43;
  char v44[32];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "request", v10);
  v14 = objc_opt_self(MPCPlayerRequest);
  v15 = swift_dynamicCastObjCClass(v13, v14);
  if (!v15)
    goto LABEL_10;
  v16 = (void *)v15;
  v37 = v8;
  v17 = swift_allocObject(&unk_1D00D0, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = (void *)objc_opt_self(NSThread);
  swift_unknownObjectRetain(v13);
  swift_errorRetain(a2);
  swift_unknownObjectRetain(v13);
  swift_errorRetain(a2);
  if (!objc_msgSend(v18, "isMainThread"))
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v36 = static OS_dispatch_queue.main.getter(v25);
    v42 = sub_E3EA4;
    v43 = v17;
    aBlock = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_F528;
    v41 = &block_descriptor_19_1;
    v26 = _Block_copy(&aBlock);
    v35 = v5;
    v27 = v26;
    v28 = v43;
    swift_retain();
    swift_release(v28);
    static DispatchQoS.unspecified.getter(v29);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v30 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v32 = sub_F574();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v31, v32, v4, v30);
    v33 = (void *)v36;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v37);
    swift_unknownObjectRelease(v13);
    swift_release(v17);
    goto LABEL_9;
  }
  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v44, 0, 0);
  result = (id)sub_2808C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&aBlock, (uint64_t *)&unk_1FC7F0);
  v20 = aBlock;
  if (aBlock)
  {
    v21 = v39;
    swift_unknownObjectRetain(aBlock);
    sub_4AE24((uint64_t)&aBlock);
    ObjectType = swift_getObjectType(v20);
    v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21);
    swift_unknownObjectRelease(v20);
    result = objc_msgSend(v16, "playerPath");
    if (result)
    {
      v24 = result;
      PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)(result, a2);
      swift_unknownObjectRelease(v13);
      swift_release(v17);

LABEL_9:
      swift_errorRelease(a2);
LABEL_10:
      swift_unknownObjectRelease(v13);
      return &dword_0 + 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_E3C88(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t (*v12)(uint64_t, double, double);
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v2 = v1;
  v4 = swift_bridgeObjectRetain(a1);
  v5 = (void *)sub_D8444(v4);
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (v5)
  {
    v7 = objc_msgSend(v2, "view", v6);
    objc_msgSend(v5, "locationInView:", v7);
    v9 = v8;
    v11 = v10;

  }
  else
  {
    v11 = 0.0;
    v9 = 0.0;
  }
  v12 = *(uint64_t (**)(uint64_t, double, double))&v2[OBJC_IVAR____TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer_handlePoint];
  if (v12
    && (v13 = *(_QWORD *)&v2[OBJC_IVAR____TtCC12NowPlayingUI24MiniPlayerViewControllerP33_C27FD6FABBED677CC1601843453D6A0126HighlightGestureRecognizer_handlePoint
                           + 8],
        v14 = swift_retain(),
        v15 = v12(v14, v9, v11),
        sub_145A0((uint64_t)v12, v13),
        (v15 & 1) == 0)
    || objc_msgSend(v2, "state"))
  {
    v16 = 4;
  }
  else
  {
    v16 = 1;
  }
  return objc_msgSend(v2, "setState:", v16);
}

void sub_E3D88(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  void *v4;
  double v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;

  v3 = swift_bridgeObjectRetain(a1);
  v4 = (void *)sub_D8444(v3);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (!v4)
    goto LABEL_6;
  v6 = objc_msgSend(v1, "view", v5);
  objc_msgSend(v4, "previousLocationInView:", v6);
  v8 = v7;
  v10 = v9;

  v11 = objc_msgSend(v1, "view");
  objc_msgSend(v4, "locationInView:", v11);
  v13 = v12;
  v15 = v14;

  v5 = vabdd_f64(v13, v8);
  v16 = vabdd_f64(v15, v10);
  if (v5 > 10.0 || v16 > 10.0)
LABEL_6:
    objc_msgSend(v1, "setState:", 4, v5);
}

uint64_t sub_E3E8C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_E3E98()
{
  return objectdestroy_15Tm((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_E3EA4()
{
  uint64_t v0;

  sub_E13B8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_E3EAC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E3ED0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_E3F04()
{
  uint64_t v0;

  sub_E0ECC(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_E3F10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E3F34()
{
  return objectdestroy_15Tm((void (*)(_QWORD))&_swift_release);
}

void sub_E3F40()
{
  uint64_t v0;

  sub_DFF38(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_E3F4C()
{
  uint64_t v0;

  sub_DF990(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_E3F54()
{
  return objectdestroy_15Tm((void (*)(_QWORD))&_swift_release);
}

void sub_E3F60()
{
  uint64_t v0;

  sub_DF64C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_E3F6C()
{
  return objectdestroy_15Tm((void (*)(_QWORD))&_swift_release);
}

void sub_E3F78()
{
  uint64_t v0;

  sub_DF2EC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_E3F84()
{
  uint64_t v0;

  sub_DF990(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_E3F9C()
{
  return objectdestroy_15Tm((void (*)(_QWORD))&_swift_release);
}

uint64_t objectdestroy_15Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void sub_E3FE0()
{
  uint64_t v0;

  sub_DEF8C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_E3FEC(uint64_t a1)
{
  uint64_t v1;

  sub_E17BC(a1, v1);
}

uint64_t sub_E3FF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_E4018()
{
  uint64_t v0;

  sub_E1880(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_E4024()
{
  uint64_t v0;

  sub_D89E8(v0);
}

void sub_E402C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_DB730(a1, a2, v2);
}

id sub_E4034(uint64_t a1)
{
  uint64_t v1;

  return sub_DB86C(a1, v1);
}

uint64_t sub_E403C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_E4060(uint64_t a1)
{
  uint64_t v1;

  return sub_DBEC8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_playPauseButtonConfiguration, 0);
}

void sub_E4084(uint64_t a1)
{
  uint64_t v1;

  sub_DBDB8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButton, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration);
}

double sub_E40AC(uint64_t a1)
{
  uint64_t v1;

  return sub_DBEC8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration, 1u);
}

double sub_E40D0(uint64_t a1)
{
  uint64_t v1;

  return sub_DBEC8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipButtonConfiguration, 2u);
}

void sub_E40F4(uint64_t a1)
{
  uint64_t v1;

  sub_DBDB8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButton, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration);
}

double sub_E411C(uint64_t a1)
{
  uint64_t v1;

  return sub_DBEC8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration, 1u);
}

double sub_E4140(uint64_t a1)
{
  uint64_t v1;

  return sub_DBEC8(a1, v1, &OBJC_IVAR____TtC12NowPlayingUI24MiniPlayerViewController_skipBackwardButtonConfiguration, 2u);
}

void sub_E4168()
{
  uint64_t v0;

  sub_DBF84(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_E4170(uint64_t a1)
{
  uint64_t v1;

  sub_DCE58(a1, v1);
}

void sub_E417C()
{
  uint64_t v0;

  sub_DCEA8(*(_QWORD *)(v0 + 16));
}

id sub_E4184(double a1, double a2)
{
  uint64_t v2;

  return sub_DD0AC(v2, a1, a2);
}

void sub_E418C(void *a1)
{
  uint64_t v1;

  sub_DD1A4(a1, v1);
}

uint64_t sub_E4194()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_E41B8(void *a1)
{
  uint64_t v1;

  sub_118144(a1, *(void (**)(uint64_t))(v1 + 16));
}

void sub_E41C0()
{
  uint64_t v0;

  sub_DD3A4(v0);
}

uint64_t _s11ContentViewVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[6]);
  return swift_release(a1[8]);
}

uint64_t _s11ContentViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = v10;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v7);
  swift_retain(v9);
  return a1;
}

uint64_t _s11ContentViewVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  swift_retain(v8);
  swift_release(v10);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  swift_retain(v11);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  v16 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  swift_retain(v14);
  swift_release(v16);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s11ContentViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v6;
  swift_release(v7);
  v8 = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v8;
  swift_release(v9);
  v10 = *(_BYTE *)(a2 + 72);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v10;
  swift_release(v11);
  return a1;
}

uint64_t _s11ContentViewVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s11ContentViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s11ContentViewVMa()
{
  return &_s11ContentViewVN;
}

uint64_t sub_E457C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A226C, 1);
}

uint64_t sub_E458C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t v47;
  __n128 v48;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  void *v57;
  __int128 v58;

  v2 = v1;
  v53 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_200C70);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_200C78);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_200C80);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_200C88);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_200C90);
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_200C98);
  v19 = *(_QWORD *)(v18 - 8);
  v51 = v18;
  v52 = v19;
  __chkstk_darwin(v18);
  v50 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E4AA4((__int128 *)v2);
  sub_2808C((uint64_t)v5, (uint64_t)v8, &qword_200C70);
  sub_9944((uint64_t)v5, &qword_200C70);
  sub_2808C((uint64_t)v8, (uint64_t)v11, &qword_200C78);
  *(_WORD *)&v11[*(int *)(v9 + 36)] = 256;
  sub_9944((uint64_t)v8, &qword_200C78);
  v22 = static Alignment.leading.getter(v21);
  sub_10A9D4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v22, v23);
  sub_9944((uint64_t)v11, &qword_200C80);
  v58 = *(_OWORD *)(v2 + 16);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  State.projectedValue.getter(&v54, v24);
  v25 = v54;
  v26 = v55;
  LOBYTE(v5) = v56;
  sub_2808C((uint64_t)v14, (uint64_t)v17, &qword_200C88);
  v27 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v27 = v25;
  *((_QWORD *)v27 + 1) = v26;
  v27[16] = (char)v5;
  sub_9944((uint64_t)v14, &qword_200C88);
  v28 = *(_QWORD *)(v2 + 32);
  LOBYTE(v26) = *(_BYTE *)(v2 + 40);
  v29 = swift_retain();
  v30 = sub_56DA0(v29, (char)v26);
  swift_release(v28);
  KeyPath = swift_getKeyPath(&unk_172340);
  v54 = v30;
  v32 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v54, KeyPath, v32);
  swift_release(KeyPath);
  LOBYTE(KeyPath) = *(_BYTE *)(v30 + OBJC_IVAR____TtC12NowPlayingUI11TextContent__isSelected);
  swift_release(v30);
  LOBYTE(v54) = KeyPath;
  v33 = (_OWORD *)swift_allocObject(&unk_1D0640, 89, 7);
  v34 = *(_OWORD *)(v2 + 48);
  v33[3] = *(_OWORD *)(v2 + 32);
  v33[4] = v34;
  *(_OWORD *)((char *)v33 + 73) = *(_OWORD *)(v2 + 57);
  v35 = *(_OWORD *)(v2 + 16);
  v33[1] = *(_OWORD *)v2;
  v33[2] = v35;
  sub_E5638((_QWORD *)v2);
  v36 = sub_E569C();
  v37 = v50;
  View.onChange<A>(of:initial:_:)(&v54, 0, sub_E5618, v33, v15, &type metadata for Bool, v36, &protocol witness table for Bool);
  swift_release(v33);
  sub_9944((uint64_t)v17, &qword_200C90);
  v38 = *(_QWORD *)(v2 + 48);
  LOBYTE(v33) = *(_BYTE *)(v2 + 56);
  v39 = swift_retain();
  v40 = sub_56D88(v39, (char)v33);
  swift_release(v38);
  v41 = swift_getKeyPath(&unk_172368);
  v54 = v40;
  v42 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v54, v41, v42);
  swift_release(v41);
  LOBYTE(v38) = *(_BYTE *)(v40 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive);
  swift_release(v40);
  LOBYTE(v58) = v38;
  v43 = (_OWORD *)swift_allocObject(&unk_1D0668, 89, 7);
  v44 = *(_OWORD *)(v2 + 48);
  v43[3] = *(_OWORD *)(v2 + 32);
  v43[4] = v44;
  *(_OWORD *)((char *)v43 + 73) = *(_OWORD *)(v2 + 57);
  v45 = *(_OWORD *)(v2 + 16);
  v43[1] = *(_OWORD *)v2;
  v43[2] = v45;
  sub_E5638((_QWORD *)v2);
  v54 = v15;
  v55 = &type metadata for Bool;
  v56 = v36;
  v57 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v47 = v51;
  View.onChange<A>(of:initial:_:)(&v58, 1, sub_E5904, v43, v51, &type metadata for Bool, OpaqueTypeConformance2, &protocol witness table for Bool);
  v48 = swift_release(v43);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v52 + 8))(v37, v47, v48);
}

uint64_t sub_E4AA4(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;

  v2 = _s10StaticTextVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v48 - v6;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_200CF0);
  __chkstk_darwin(v51);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s8LiveTextVMa(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - v13;
  v52 = *a1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  State.wrappedValue.getter(&v53, v15);
  if ((v53 & 1) != 0)
    goto LABEL_3;
  v16 = *((_QWORD *)a1 + 8);
  v17 = *((_BYTE *)a1 + 72);
  v18 = swift_retain();
  v19 = sub_56DC0(v18, v17);
  swift_release(v16);
  v20 = v2;
  KeyPath = swift_getKeyPath(&unk_172390);
  *(_QWORD *)&v52 = v19;
  v49 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v52, KeyPath, v49);
  v22 = KeyPath;
  v2 = v20;
  swift_release(v22);
  LODWORD(v16) = *(unsigned __int8 *)(v19 + 17);
  swift_release(v19);
  if ((_DWORD)v16 == 1)
  {
LABEL_3:
    *v11 = swift_getKeyPath(&unk_1723B8);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    swift_storeEnumTagMultiPayload(v11, v23, 0);
    v24 = (char *)v11 + *(int *)(v9 + 20);
    v25 = type metadata accessor for TextContent.LiveText(0);
    v26 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
    *(_QWORD *)v24 = Environment.init<A>(_:)(v25, v25, v26);
    v24[8] = v27 & 1;
    v28 = (char *)v11 + *(int *)(v9 + 24);
    v29 = type metadata accessor for TranscriptPresentationContext(0);
    v30 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
    *(_QWORD *)v28 = Environment.init<A>(_:)(v29, v29, v30);
    v28[8] = v31 & 1;
    v32 = _s8LiveTextVMa;
    sub_25680((uint64_t)v11, (uint64_t)v14, _s8LiveTextVMa);
    sub_278B8((uint64_t)v14, (uint64_t)v8, _s8LiveTextVMa);
    swift_storeEnumTagMultiPayload(v8, v51, 0);
    v33 = sub_8330(&qword_200CD8, _s8LiveTextVMa, (uint64_t)&unk_173C70);
    v34 = sub_8330(&qword_200CE0, _s10StaticTextVMa, (uint64_t)&unk_170D40);
    _ConditionalContent<>.init(storage:)(v8, v9, v2, v33, v34);
    v35 = (uint64_t)v14;
  }
  else
  {
    *v4 = swift_getKeyPath(&unk_1723B8);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    swift_storeEnumTagMultiPayload(v4, v36, 0);
    v37 = (char *)v4 + *(int *)(v20 + 20);
    v38 = type metadata accessor for TextContent.LiveText(0);
    v39 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
    *(_QWORD *)v37 = Environment.init<A>(_:)(v38, v38, v39);
    v37[8] = v40 & 1;
    v41 = (char *)v4 + *(int *)(v20 + 24);
    v42 = type metadata accessor for TranscriptPresentationContext(0);
    *(_QWORD *)v41 = Environment.init<A>(_:)(v42, v42, v49);
    v41[8] = v43 & 1;
    v32 = _s10StaticTextVMa;
    v44 = v50;
    sub_25680((uint64_t)v4, v50, _s10StaticTextVMa);
    sub_278B8(v44, (uint64_t)v8, _s10StaticTextVMa);
    swift_storeEnumTagMultiPayload(v8, v51, 1);
    v45 = sub_8330(&qword_200CD8, _s8LiveTextVMa, (uint64_t)&unk_173C70);
    v46 = sub_8330(&qword_200CE0, _s10StaticTextVMa, (uint64_t)&unk_170D40);
    _ConditionalContent<>.init(storage:)(v8, v9, v20, v45, v46);
    v35 = v44;
  }
  return sub_90FE0(v35, v32);
}

uint64_t sub_E4F30(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  _QWORD v8[3];
  char v9;

  v5 = *a2;
  v8[2] = a3;
  v9 = v5;
  v6 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v6, a4, v8, (char *)&type metadata for () + 8);
  return swift_release(v6);
}

_QWORD *sub_E4F94(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  v2 = a2 & 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  result = State.wrappedValue.getter(&v5, v3);
  if (v5 != v2)
  {
    LOBYTE(v5) = v2;
    return (_QWORD *)State.wrappedValue.setter(&v5, v3);
  }
  return result;
}

uint64_t sub_E5020@<X0>(uint64_t a1@<X8>)
{
  return sub_E458C(a1);
}

uint64_t sub_E5060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v31 = a1;
  v32 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_200CF8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_200D00);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_200D08);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_200D10);
  v19 = Binding.wrappedValue.getter(&v36, v18);
  if (v36 == 1)
  {
    v20 = static Alignment.center.getter(v19);
    v22 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v31, v8);
    v23 = (uint64_t *)&v17[*(int *)(v15 + 36)];
    *v23 = v20;
    v23[1] = v22;
    sub_2808C((uint64_t)v17, (uint64_t)v14, &qword_200D08);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    v24 = sub_E5BF0();
    v25 = sub_27A8C(&qword_200D20, &qword_200CF8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v14, v15, v8, v24, v25);
    return sub_9944((uint64_t)v17, &qword_200D08);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v27(v11, v31, v8);
    v27(v14, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload(v14, v12, 1);
    v28 = sub_E5BF0();
    v29 = sub_27A8C(&qword_200D20, &qword_200CF8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v14, v15, v8, v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_E52B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_E5060(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_E52C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a1;
  v1 = type metadata accessor for BlendMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v5);
  v7 = (_OWORD *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_200D48);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_200D50);
  __chkstk_darwin(v47);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_200D58);
  __chkstk_darwin(v48);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)v7 + *(int *)(v5 + 20);
  v16 = enum case for RoundedCornerStyle.continuous(_:);
  v17 = type metadata accessor for RoundedCornerStyle(0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  __asm { FMOV            V0.2D, #12.0 }
  *v7 = _Q0;
  v24 = static Color.white.getter(v18);
  v25 = Color.opacity(_:)(0.1);
  swift_release(v24);
  sub_278B8((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v10[*(int *)(v8 + 52)] = v25;
  *(_WORD *)&v10[*(int *)(v8 + 56)] = 256;
  sub_90FE0((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for BlendMode.plusLighter(_:), v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v12[*(int *)(v47 + 36)], v4, v1);
  sub_2808C((uint64_t)v10, (uint64_t)v12, &qword_200D48);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v26 = sub_9944((uint64_t)v10, &qword_200D48);
  LOBYTE(v2) = static Edge.Set.vertical.getter(v26);
  v27 = EdgeInsets.init(_all:)(-8.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2808C((uint64_t)v12, (uint64_t)v14, &qword_200D50);
  v34 = &v14[*(int *)(v48 + 36)];
  *v34 = v2;
  *((double *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  v35 = sub_9944((uint64_t)v12, &qword_200D50);
  LOBYTE(v2) = static Edge.Set.horizontal.getter(v35);
  v36 = EdgeInsets.init(_all:)(-16.0);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v49;
  sub_2808C((uint64_t)v14, v49, &qword_200D58);
  v44 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_200D60) + 36);
  *(_BYTE *)v44 = v2;
  *(double *)(v44 + 8) = v36;
  *(_QWORD *)(v44 + 16) = v38;
  *(_QWORD *)(v44 + 24) = v40;
  *(_QWORD *)(v44 + 32) = v42;
  *(_BYTE *)(v44 + 40) = 0;
  return sub_9944((uint64_t)v14, &qword_200D58);
}

uint64_t sub_E5618(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_E4F30(a1, a2, v2 + 16, (uint64_t)sub_E5940);
}

_QWORD *sub_E5638(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[6];
  swift_retain(a1[8]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

unint64_t sub_E569C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200CA0;
  if (!qword_200CA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200C90);
    sub_3FA84(&qword_200CA8, &qword_200C88, (void (*)(void))sub_E5728);
    sub_E5870();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200CA0);
  }
  return result;
}

uint64_t sub_E5728()
{
  return sub_3FA84(&qword_200CB0, &qword_200C80, (void (*)(void))sub_E574C);
}

uint64_t sub_E574C()
{
  return sub_3FA84(&qword_200CB8, &qword_200C78, (void (*)(void))sub_E5770);
}

unint64_t sub_E5770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200CC0;
  if (!qword_200CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200C70);
    sub_E57D4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_200CC0);
  }
  return result;
}

unint64_t sub_E57D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200CC8;
  if (!qword_200CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200CD0);
    sub_8330(&qword_200CD8, _s8LiveTextVMa, (uint64_t)&unk_173C70);
    sub_8330(&qword_200CE0, _s10StaticTextVMa, (uint64_t)&unk_170D40);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200CC8);
  }
  return result;
}

unint64_t sub_E5870()
{
  unint64_t result;

  result = qword_200CE8;
  if (!qword_200CE8)
  {
    result = swift_getWitnessTable(&unk_172414, &_s11ContentViewV19SelectionBackgroundVN);
    atomic_store(result, (unint64_t *)&qword_200CE8);
  }
  return result;
}

uint64_t objectdestroyTm_6()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 89, 7);
}

uint64_t sub_E5904(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_E4F30(a1, a2, v2 + 16, (uint64_t)sub_E5924);
}

_QWORD *sub_E5924()
{
  uint64_t v0;

  return sub_E4F94(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_E5940()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v4;
  __int128 v5;

  v1 = *(_BYTE *)(v0 + 24);
  v5 = *(_OWORD *)(*(_QWORD *)(v0 + 16) + 16);
  v4 = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE98);
  return State.wrappedValue.setter(&v4, v2);
}

uint64_t _s11ContentViewV19SelectionBackgroundVwxx(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t _s11ContentViewV19SelectionBackgroundVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *_s11ContentViewV19SelectionBackgroundVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t _s11ContentViewV19SelectionBackgroundVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t _s11ContentViewV19SelectionBackgroundVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11ContentViewV19SelectionBackgroundVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s11ContentViewV19SelectionBackgroundVMa()
{
  return &_s11ContentViewV19SelectionBackgroundVN;
}

uint64_t sub_E5B4C()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  void *v6;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200C98);
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200C90);
  v4 = &type metadata for Bool;
  v5 = sub_E569C();
  v6 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v3 = v0;
  v4 = &type metadata for Bool;
  v5 = OpaqueTypeConformance2;
  v6 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_E5BE0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A22B8, 1);
}

unint64_t sub_E5BF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200D18;
  if (!qword_200D18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200D08);
    sub_27A8C(&qword_200D20, &qword_200CF8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_27A8C(&qword_200D28, &qword_200D30, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200D18);
  }
  return result;
}

ValueMetadata *_s11ContentViewV23SelectionBackgroundViewVMa()
{
  return &_s11ContentViewV23SelectionBackgroundViewVN;
}

unint64_t sub_E5CA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200D38;
  if (!qword_200D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200D40);
    sub_E5BF0();
    sub_27A8C(&qword_200D20, &qword_200CF8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200D38);
  }
  return result;
}

uint64_t sub_E5D24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A22E0, 1);
}

uint64_t sub_E5D34()
{
  return sub_3FA84(&qword_200D68, &qword_200D60, (void (*)(void))sub_E5D68);
}

uint64_t sub_E5D68()
{
  return sub_3FA84(&qword_200D70, &qword_200D58, (void (*)(void))sub_E5D8C);
}

unint64_t sub_E5D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_200D78;
  if (!qword_200D78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_200D50);
    sub_27A8C(&qword_200D80, &qword_200D48, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_200D78);
  }
  return result;
}

uint64_t NowPlayingMetricsControllerWrapper.__allocating_init(metricsController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_allocObject(v1, 41, 7);
  *(_BYTE *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 1;
  *(_QWORD *)(result + 16) = a1;
  return result;
}

Swift::Void __swiftcall NowPlayingMetricsControllerWrapper.willTransitionToMiniPlayer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  MetricsController.observe(lifecycleEvent:)(2);
  type metadata accessor for PageContextTracker(0);
  v2 = ((uint64_t (*)(void))static PageContextTracker.shared.getter)();
  v3 = PageContextTracker.value.getter();
  v5 = v4;
  v6 = swift_release(v2);
  v7 = static MetricsPageContext.nowPlaying.getter(v6);
  v9 = v8;
  if (!v5)
    goto LABEL_7;
  if (v3 == v7 && v5 == v8)
  {
    swift_bridgeObjectRelease(v5);
    v10 = swift_bridgeObjectRelease(v9);
LABEL_6:
    v12 = static PageContextTracker.shared.getter(v10);
    PageContextTracker.pop()();
    v9 = v13;
    swift_release(v12);
LABEL_7:
    swift_bridgeObjectRelease(v9);
    goto LABEL_8;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v8, 0);
  swift_bridgeObjectRelease(v5);
  v10 = swift_bridgeObjectRelease(v9);
  if ((v11 & 1) != 0)
    goto LABEL_6;
LABEL_8:
  *(_BYTE *)(v1 + 24) = 0;
}

uint64_t NowPlayingMetricsControllerWrapper.didTransitionToFullPlayer(currentlySelectedContentId:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  sub_E67C8(a1);
  result = MetricsController.observe(lifecycleEvent:)(1);
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

void NowPlayingMetricsControllerWrapper.updateMetricsPageForNewHostedContent(from:to:with:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v7 = sub_E68FC(a1);
  v9 = v8;
  v11 = sub_E68FC(a2);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v9);
    if ((v13 & 1) == 0)
    {
      sub_E67C8(a2);
      sub_E613C(a3, a4 & 1, a2);
    }
  }
}

uint64_t NowPlayingMetricsControllerWrapper.sendEvent(event:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = type metadata accessor for MetricsData(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of MetricsEvent.metricsData.getter(v2);
  MetricsController.process(_:)(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t NowPlayingMetricsControllerWrapper.updateMetricsPageForNewAdamId(newAdamId:selectedContentId:)(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  v4 = a2 & 1;
  if ((*(_BYTE *)(v3 + 40) & 1) != 0)
  {
    if (!v4)
    {
LABEL_7:
      *(_QWORD *)(v3 + 32) = result;
      *(_BYTE *)(v3 + 40) = v4 != 0;
      return sub_E613C(result, v4, a3);
    }
  }
  else if (v4 || *(_QWORD *)(v3 + 32) != result)
  {
    goto LABEL_7;
  }
  return result;
}

uint64_t NowPlayingMetricsControllerWrapper.init(metricsController:)(uint64_t a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_E613C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = v3;
  v42 = type metadata accessor for MetricsEventType(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ScalarDictionary(0);
  v44 = *(_QWORD *)(v46 - 8);
  v10 = __chkstk_darwin(v46);
  v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_200E38);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for MetricsPageFields(0);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v3 + 24) == 1)
    MetricsController.observe(lifecycleEvent:)(2);
  v19 = sub_E68FC(a3);
  v21 = v20;
  if ((a2 & 1) != 0)
  {
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v47 = a1;
    v22 = sub_40324();
    v23 = BinaryInteger.description.getter(&type metadata for UInt64, v22);
  }
  MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)(v23, v24, v19, v21, 0, 0, 0);
  MetricsController.reset()();
  ScalarDictionary.init()();
  v38 = sub_E64EC((uint64_t)_swiftEmptyArrayStorage);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_200E40);
  v26 = *(_QWORD *)(type metadata accessor for PageMetrics.Instruction(0) - 8);
  v27 = swift_allocObject(v25, ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ 2 * *(_QWORD *)(v26 + 72), *(unsigned __int8 *)(v26 + 80) | 7);
  v39 = v4;
  v28 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_16E1B0;
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v40 + 104);
  v30 = v42;
  v29(v9, enum case for MetricsEventType.page(_:), v42);
  PageMetrics.Instruction.init(eventType:)(v9);
  v29(v9, enum case for MetricsEventType.impressions(_:), v30);
  v31 = PageMetrics.Instruction.init(eventType:)(v9);
  v32 = MetricsPageFields.metricsFields.getter(v31);
  v33 = v44;
  v34 = v41;
  v35 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v13, v46);
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v28, v32, v34, v38);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v35);
  v36 = type metadata accessor for PageMetrics(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v16, 0, 1, v36);
  MetricsController.pageMetrics.setter(v16);
  if (*(_BYTE *)(v39 + 24) == 1)
    MetricsController.observe(lifecycleEvent:)(1);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v18, v45);
}

uint64_t NowPlayingMetricsControllerWrapper.observe(lifecycleEvent:)(uint64_t a1)
{
  return MetricsController.observe(lifecycleEvent:)(a1);
}

uint64_t NowPlayingMetricsControllerWrapper.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t NowPlayingMetricsControllerWrapper.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 41, 7);
}

unint64_t sub_E64EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_200E48);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_2808C(v7, (uint64_t)&v16, &qword_200E50);
    v8 = v16;
    v9 = v17;
    result = sub_E6620(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_ECEC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E6620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_E6684(a1, a2, v5);
}

unint64_t sub_E6684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_E67C8(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for NowPlayingHostedContentID(0);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  v4 = type metadata accessor for PageContextTracker(0);
  v5 = static PageContextTracker.shared.getter(v4);
  v6 = v5;
  if (v3 != 1)
  {
    v15 = static MetricsPageContext.nowPlaying.getter(v5);
    v13 = v16;
    PageContextTracker.push(_:)(v15);
    v17 = v6;
LABEL_9:
    swift_release(v17);
    return swift_bridgeObjectRelease(v13);
  }
  v7 = PageContextTracker.value.getter();
  v9 = v8;
  v10 = swift_release(v6);
  v11 = static MetricsPageContext.nowPlaying.getter(v10);
  v13 = v12;
  if (v9)
  {
    if (v7 == v11 && v9 == v12)
    {
      swift_bridgeObjectRelease(v9);
      result = swift_bridgeObjectRelease(v13);
    }
    else
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v12, 0);
      swift_bridgeObjectRelease(v9);
      result = swift_bridgeObjectRelease(v13);
      if ((v18 & 1) == 0)
        return result;
    }
    v19 = static PageContextTracker.shared.getter(result);
    PageContextTracker.pop()();
    v13 = v20;
    v17 = v19;
    goto LABEL_9;
  }
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_E68FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];

  v2 = type metadata accessor for NowPlayingHostedContentID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDFF0);
  v6 = __chkstk_darwin(v5);
  v49 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v48 = (char *)&v44 - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v44 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v44 - v19;
  if (qword_1F9480 != -1)
    swift_once(&qword_1F9480, sub_35F0C);
  v21 = __swift_project_value_buffer(v2, (uint64_t)static NowPlayingHostedContentID.transcript);
  v22 = swift_beginAccess(v21, v51, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v20, v21, v2, v22);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56);
  v23(v20, 0, 1, v2);
  v50 = v5;
  v24 = (uint64_t)&v9[*(int *)(v5 + 48)];
  v47 = a1;
  sub_2808C(a1, (uint64_t)v9, (uint64_t *)&unk_1FB9D0);
  sub_2808C((uint64_t)v20, v24, (uint64_t *)&unk_1FB9D0);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v25((uint64_t)v9, 1, v2) == 1)
  {
    sub_9944((uint64_t)v20, (uint64_t *)&unk_1FB9D0);
    if (v25(v24, 1, v2) == 1)
    {
      v26 = sub_9944((uint64_t)v9, (uint64_t *)&unk_1FB9D0);
      return static MetricsPageType.transcript.getter(v26);
    }
    goto LABEL_8;
  }
  sub_2808C((uint64_t)v9, (uint64_t)v18, (uint64_t *)&unk_1FB9D0);
  if (v25(v24, 1, v2) == 1)
  {
    sub_9944((uint64_t)v20, (uint64_t *)&unk_1FB9D0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v2);
LABEL_8:
    v26 = sub_9944((uint64_t)v9, (uint64_t *)&unk_1FDFF0);
    v27 = v50;
    goto LABEL_11;
  }
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  v45 = v13;
  v29 = v46;
  v28(v46, v24, v2);
  v30 = sub_C5858();
  v31 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v29, v2, v30);
  v32 = *(void (**)(char *, uint64_t))(v3 + 8);
  v33 = v29;
  v13 = v45;
  v32(v33, v2);
  sub_9944((uint64_t)v20, (uint64_t *)&unk_1FB9D0);
  v32(v18, v2);
  v26 = sub_9944((uint64_t)v9, (uint64_t *)&unk_1FB9D0);
  v27 = v50;
  if ((v31 & 1) != 0)
    return static MetricsPageType.transcript.getter(v26);
LABEL_11:
  v35 = (uint64_t)v48;
  static NowPlayingHostedContentID.queue.getter(v26);
  v23((char *)v35, 0, 1, v2);
  v36 = v49;
  v37 = v49 + *(int *)(v27 + 48);
  sub_2808C(v47, v49, (uint64_t *)&unk_1FB9D0);
  sub_2808C(v35, v37, (uint64_t *)&unk_1FB9D0);
  if (v25(v36, 1, v2) != 1)
  {
    sub_2808C(v36, (uint64_t)v13, (uint64_t *)&unk_1FB9D0);
    if (v25(v37, 1, v2) != 1)
    {
      v39 = v13;
      v40 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v46, v37, v2);
      v41 = sub_C5858();
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v39, v40, v2, v41);
      v43 = *(void (**)(char *, uint64_t))(v3 + 8);
      v43(v40, v2);
      sub_9944(v35, (uint64_t *)&unk_1FB9D0);
      v43(v39, v2);
      v38 = sub_9944(v36, (uint64_t *)&unk_1FB9D0);
      if ((v42 & 1) != 0)
        return static MetricsPageType.queue.getter(v38);
      return static MetricsPageType.nowPlaying.getter(v38);
    }
    sub_9944(v35, (uint64_t *)&unk_1FB9D0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
LABEL_16:
    v38 = sub_9944(v36, (uint64_t *)&unk_1FDFF0);
    return static MetricsPageType.nowPlaying.getter(v38);
  }
  sub_9944(v35, (uint64_t *)&unk_1FB9D0);
  if (v25(v37, 1, v2) != 1)
    goto LABEL_16;
  v38 = sub_9944(v36, (uint64_t *)&unk_1FB9D0);
  return static MetricsPageType.queue.getter(v38);
}

uint64_t type metadata accessor for NowPlayingMetricsControllerWrapper()
{
  return objc_opt_self(_TtC12NowPlayingUI34NowPlayingMetricsControllerWrapper);
}

void sub_E6E04(uint64_t a1, uint64_t a2, uint64_t (*a3)(), uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  uint64_t v14;
  char isEscapingClosureAtFileLocation;
  objc_class *ObjectType;
  char v18;
  uint64_t v19;
  objc_super v20;
  void **aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v19 = OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates;
  v18 = v4[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates];
  v8 = (_QWORD *)swift_allocObject(&unk_1D07B0, 40, 7);
  v8[2] = v4;
  v8[3] = a1;
  v8[4] = a2;
  v9 = swift_allocObject(&unk_1D07D8, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_E8344;
  *(_QWORD *)(v9 + 24) = v8;
  v25 = sub_ECE4;
  v26 = v9;
  aBlock = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_F318;
  v24 = &block_descriptor_23;
  v10 = _Block_copy(&aBlock);
  v11 = v26;
  v12 = v4;
  swift_retain(v9);
  sub_2BE00(a1, a2);
  v13 = swift_release(v11).n128_u64[0];
  if (a3)
  {
    v25 = a3;
    v26 = a4;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_153D78;
    v24 = &block_descriptor_6_1;
    a3 = (uint64_t (*)())_Block_copy(&aBlock);
    v14 = v26;
    swift_retain(a4);
    v13 = swift_release(v14).n128_u64[0];
  }
  v20.receiver = v12;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "performBatchUpdates:completion:", v10, a3, *(double *)&v13, a4);
  _Block_release(a3);
  _Block_release(v10);
  v4[v19] = v18;
  swift_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 142, 180, 35, 1);
  swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_E6FEC()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  objc_class *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char *i;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  double *v30;
  void *v31;
  double v32;
  char v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  char v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double MaxY;
  double Height;
  double rect;
  CGFloat rect_8;
  uint64_t rect_16;
  void *rect_24;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  objc_super v69;
  objc_super v70;
  char v71[32];
  uint64_t v72;
  _BYTE v73[40];
  _QWORD v74[4];
  char v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_layoutSubviewsIgnoreCount])
  {
    v0[OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_didIgnoreLayoutSubviews] = 1;
    return;
  }
  v3 = ObjectType;
  v70.receiver = v1;
  v70.super_class = ObjectType;
  objc_msgSendSuper2(&v70, "layoutSubviews");
  rect_24 = v1;
  v69.receiver = v1;
  v69.super_class = v3;
  v4 = objc_msgSendSuper2(&v69, "collectionViewLayout");
  v5 = type metadata accessor for CompositeCollectionViewLayout();
  v6 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0)
                 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData);
  swift_retain();

  if (v6)
  {
    v7 = *(_QWORD *)(v6 + 16);
    swift_beginAccess(v7 + 56, v68, 0, 0);
    v8 = *(_QWORD *)(v7 + 56);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v61 = v6;
      v10 = &qword_1FF5B0;
      rect_16 = swift_bridgeObjectRetain(v8);
      for (i = (char *)(rect_16 + 56); ; i += 32)
      {
        v13 = (void *)*((_QWORD *)i - 3);
        v12 = *((_QWORD *)i - 2);
        v14 = *((_QWORD *)i - 1);
        v15 = *i;
        v64[0] = v13;
        v64[1] = v12;
        swift_unknownObjectRetain_n(v13, 2);
        v16 = __swift_instantiateConcreteTypeFromMangledName(v10);
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2004B0);
        if ((swift_dynamicCast(v62, v64, v16, v17, 6) & 1) != 0)
          break;
        v63 = 0;
        memset(v62, 0, sizeof(v62));
        swift_unknownObjectRelease(v13);
        sub_9944((uint64_t)v62, &qword_2004B8);
LABEL_7:
        if (!--v9)
        {
          swift_release(v61);
          swift_bridgeObjectRelease(rect_16);
          return;
        }
      }
      v18 = v10;
      sub_27890(v62, (uint64_t)v65);
      v20 = v66;
      v19 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
      if (!v21)
        goto LABEL_12;
      v22 = (void *)v21;
      sub_CEA0C(v13, v12, v14, v15, (uint64_t)v71);
      sub_97EB4((uint64_t)&v72, (uint64_t)v73);
      sub_97EB4((uint64_t)v73, (uint64_t)v74);
      if ((v75 & 1) != 0)
      {
        objc_msgSend(v22, "removeFromSuperview");

LABEL_12:
        swift_unknownObjectRelease(v13);
LABEL_21:
        __swift_destroy_boxed_opaque_existential_0(v65);
        v10 = v18;
        goto LABEL_7;
      }
      v23 = *(double *)v74;
      v24 = *(double *)&v74[1];
      v25 = *(double *)&v74[2];
      v26 = *(double *)&v74[3];
      swift_unknownObjectRetain(v13);
      v27 = sub_94A98();
      v28 = v27;
      v29 = v27[2];
      if (v29)
      {
        v30 = (double *)&v27[4 * v29];
        v31 = *(void **)v30;
        v32 = v30[2];
        v33 = *((_BYTE *)v30 + 24);
        swift_unknownObjectRetain(*(_QWORD *)v30);
        swift_bridgeObjectRelease(v28);
        if (v13 != v31)
        {
          swift_unknownObjectRelease(v13);
          swift_unknownObjectRelease(v31);
          goto LABEL_17;
        }
        if ((v15 & 1) != 0)
        {
          swift_unknownObjectRelease_n(v13, 2);
          if ((v33 & 1) != 0)
          {
LABEL_28:
            objc_msgSend(rect_24, "bounds");
            v40 = v39;
            v42 = v41;
            v44 = v43;
            v46 = v45;
            objc_msgSend(rect_24, "contentInset");
            v49 = UIEdgeInsetsInsetRect(v40, v42, v44, v46, v47, v48);
            rect_8 = v50;
            v52 = v51;
            v54 = v53;
            v76.origin.x = v23;
            v76.origin.y = v24;
            v76.size.width = v25;
            v76.size.height = v26;
            MaxY = CGRectGetMaxY(v76);
            rect = v49;
            v77.origin.x = v49;
            v77.origin.y = rect_8;
            v77.size.width = v52;
            v77.size.height = v54;
            if (MaxY < CGRectGetHeight(v77))
            {
              v78.origin.x = v49;
              v78.origin.y = rect_8;
              v78.size.width = v52;
              v78.size.height = v54;
              Height = CGRectGetHeight(v78);
              v79.origin.x = v23;
              v79.origin.y = v24;
              v79.size.width = v25;
              v79.size.height = v26;
              v26 = v26 + Height - CGRectGetMaxY(v79);
            }
          }
        }
        else if ((v33 & 1) != 0)
        {
          swift_unknownObjectRelease_n(v13, 2);
        }
        else
        {
          swift_unknownObjectRetain(v13);
          v38 = static CGFloat.==~ infix(_:_:)(*(double *)&v14, v32);
          swift_unknownObjectRelease_n(v13, 3);
          if ((v38 & 1) != 0)
            goto LABEL_28;
        }
      }
      else
      {
        swift_unknownObjectRelease(v13);
        swift_bridgeObjectRelease(v28);
      }
LABEL_17:
      objc_msgSend(v22, "setFrame:", v23, v24, v25, v26, *(_QWORD *)&rect);
      v34 = objc_msgSend(v22, "superview");
      if (!v34)
        goto LABEL_19;
      v35 = v34;
      sub_60ED4();
      v36 = rect_24;
      v37 = v35;
      LOBYTE(v35) = static NSObject.== infix(_:_:)(v37, v36);

      if ((v35 & 1) == 0)
LABEL_19:
        objc_msgSend(rect_24, "addSubview:", v22);
      swift_unknownObjectRelease(v13);

      goto LABEL_21;
    }
    swift_release(v6);
  }
  else
  {
    __break(1u);
  }
}

id sub_E750C(void *a1, void *a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id result;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, __n128);
  id v45;
  __n128 v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  char *v56;
  id v57;
  uint64_t (*v58)(char *, uint64_t);
  id v59;
  uint64_t v60;
  uint64_t v61;
  objc_super v62;
  objc_super v63;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = type metadata accessor for IndexPath(0);
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v56 - v19;
  v63.receiver = v3;
  v63.super_class = ObjectType;
  result = objc_msgSendSuper2(&v63, "_applyLayoutAttributes:toView:", a1, a2, v18);
  if (a1 && a2)
  {
    v62.receiver = v3;
    v62.super_class = ObjectType;
    v22 = a1;
    v59 = a2;
    v23 = objc_msgSendSuper2(&v62, "collectionViewLayout");
    v24 = type metadata accessor for CompositeCollectionViewLayout();
    v25 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0)
                    + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData);
    swift_retain();

    v26 = objc_msgSend(v22, "indexPath");
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26);

    sub_94CB4((uint64_t)objc_msgSend(v22, "representedElementCategory"), 0, 0, (uint64_t)v12);
    v27 = swift_release(v25);
    v29 = v60;
    v28 = v61;
    v30 = *(void (**)(char *, uint64_t, __n128))(v60 + 8);
    v30(v9, v61, v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {

      return (id)sub_9944((uint64_t)v12, &qword_1FA938);
    }
    else
    {
      v31 = *(int *)(v13 + 48);
      v32 = v28;
      v33 = &v20[v31];
      v34 = &v12[v31];
      v57 = v22;
      v58 = (uint64_t (*)(char *, uint64_t))v30;
      v35 = *(_QWORD *)v12;
      v36 = *((_QWORD *)v12 + 1);
      v37 = *((_QWORD *)v12 + 2);
      v38 = v20;
      v56 = v20;
      v39 = v29;
      v40 = v12[24];
      *(_QWORD *)v38 = v35;
      *((_QWORD *)v38 + 1) = v36;
      *((_QWORD *)v38 + 2) = v37;
      v38[24] = v40;
      v41 = v32;
      (*(void (**)(char *, char *))(v39 + 32))(v33, v34);
      v42 = &v16[*(int *)(v13 + 48)];
      *(_QWORD *)v16 = v35;
      *((_QWORD *)v16 + 1) = v36;
      *((_QWORD *)v16 + 2) = v37;
      v16[24] = v40;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v42, v33, v41);
      v43 = swift_getObjectType(v35);
      v44 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v36 + 8);
      v45 = v59;
      v46 = swift_unknownObjectRetain(v35);
      v47 = (void *)v44(v43, v36, v46);
      swift_unknownObjectRelease(v35);
      objc_msgSend(v47, "music_inheritedLayoutInsets");
      v49 = v48;
      v51 = v50;
      v53 = v52;
      v55 = v54;

      objc_msgSend(v45, "music_setLayoutInsets:", v49, v51, v53, v55);
      sub_9944((uint64_t)v56, &qword_1FA940);
      return (id)v58(v42, v41);
    }
  }
  return result;
}

uint64_t sub_E794C()
{
  return sub_E7A48((SEL *)&selRef_allowsMultipleSelection);
}

uint64_t sub_E799C()
{
  return sub_E7A48((SEL *)&selRef__allowsMultipleSelectionDuringEditing);
}

uint64_t sub_E79EC()
{
  return sub_E7A48((SEL *)&selRef_allowsSelection);
}

uint64_t sub_E7A3C()
{
  return sub_E7A48((SEL *)&selRef__allowsSelectionDuringEditing);
}

uint64_t sub_E7A48(SEL *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  void *v19;
  objc_super v21;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v22.receiver = v1;
  v22.super_class = ObjectType;
  if ((objc_msgSendSuper2(&v22, *a1) & 1) != 0)
    return 1;
  v21.receiver = v1;
  v21.super_class = ObjectType;
  v5 = -[SEL collectionViewLayout](&v21, "collectionViewLayout");
  v6 = type metadata accessor for CompositeCollectionViewLayout();
  v7 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0)
                 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData);
  swift_retain();

  v8 = sub_94A98();
  v9 = v8;
  v10 = v8[2];
  if (v10)
  {
    v11 = v10 - 1;
    v12 = v8 + 5;
    do
    {
      v13 = v11;
      v15 = *(v12 - 1);
      v14 = *v12;
      v16 = swift_getObjectType(v15);
      v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 8);
      v18 = swift_unknownObjectRetain(v15);
      v19 = (void *)v17(v16, v14, v18);
      v4 = objc_msgSend(v19, *a1);

      swift_unknownObjectRelease(v15);
      if ((v4 & 1) != 0)
        break;
      v11 = v13 - 1;
      v12 += 4;
    }
    while (v13);
  }
  else
  {
    v4 = 0;
  }
  swift_release(v7);
  swift_bridgeObjectRelease(v9);
  return (uint64_t)v4;
}

id sub_E7BB0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v7, *a4, a3);
}

void sub_E7C74()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  Swift::String v6;
  void *object;
  Swift::String v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType(v0);
  v2 = objc_msgSendSuper2(&v9, "collectionViewLayout");
  v3 = type metadata accessor for CompositeCollectionViewLayout();
  v4 = swift_dynamicCastClass(v2, v3);

  if (!v4)
  {
    _StringGuts.grow(_:)(60);
    ObjectType = swift_getObjectType(v1);
    v6._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
    object = v6._object;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(object);
    v8._object = (void *)0x800000000018AC70;
    v8._countAndFlagsBits = 0xD00000000000003ALL;
    String.append(_:)(v8);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "NowPlayingUI/CompositeCollectionView.swift", 42, 2, 140, 0);
    __break(1u);
  }
}

uint64_t sub_E7DA0()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  id v3;
  uint64_t result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  objc_super v13;
  objc_super v14;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v14.receiver = v1;
  v14.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v14, "dataSource");
  result = swift_unknownObjectRelease(v3);
  if (v3)
  {
    v13.receiver = v1;
    v13.super_class = ObjectType;
    v5 = objc_msgSendSuper2(&v13, "dataSource");
    if (!v5
      || (v6 = v5,
          v7 = type metadata accessor for CompositeCollectionViewController(),
          v8 = swift_dynamicCastClass(v6, v7),
          result = swift_unknownObjectRelease(v6),
          !v8))
    {
      _StringGuts.grow(_:)(61);
      v9 = swift_getObjectType(v1);
      v10._countAndFlagsBits = _typeName(_:qualified:)(v9, 0);
      object = v10._object;
      String.append(_:)(v10);
      swift_bridgeObjectRelease(object);
      v12._object = (void *)0x800000000018AC30;
      v12._countAndFlagsBits = 0xD00000000000003BLL;
      String.append(_:)(v12);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "NowPlayingUI/CompositeCollectionView.swift", 42, 2, 148, 0);
      __break(1u);
    }
  }
  return result;
}

id sub_E7EE8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v5, *a3);
}

uint64_t sub_E7F40(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType(a1);
  v8 = *a4;
  swift_unknownObjectRetain(a3);
  v9 = v12.receiver;
  v10 = objc_msgSendSuper2(&v12, v8, a3);
  a5(v10);

  return swift_unknownObjectRelease(a3);
}

uint64_t sub_E7FB8()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  id v3;
  uint64_t result;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  objc_super v13;
  objc_super v14;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v14.receiver = v1;
  v14.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v14, "delegate");
  result = swift_unknownObjectRelease(v3);
  if (v3)
  {
    v13.receiver = v1;
    v13.super_class = ObjectType;
    v5 = objc_msgSendSuper2(&v13, "delegate");
    if (!v5
      || (v6 = v5,
          v7 = type metadata accessor for CompositeCollectionViewController(),
          v8 = swift_dynamicCastClass(v6, v7),
          result = swift_unknownObjectRelease(v6),
          !v8))
    {
      _StringGuts.grow(_:)(58);
      v9 = swift_getObjectType(v1);
      v10._countAndFlagsBits = _typeName(_:qualified:)(v9, 0);
      object = v10._object;
      String.append(_:)(v10);
      swift_bridgeObjectRelease(object);
      v12._object = (void *)0x800000000018ABF0;
      v12._countAndFlagsBits = 0xD000000000000038;
      String.append(_:)(v12);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "NowPlayingUI/CompositeCollectionView.swift", 42, 2, 156, 0);
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for CompositeCollectionView()
{
  return objc_opt_self(_TtC12NowPlayingUI23CompositeCollectionView);
}

uint64_t sub_E8310()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_E8344()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 24);
  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates) = 1;
  if (v1)
    return v1();
  return result;
}

uint64_t sub_E837C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_23(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_E83A4(char a1)
{
  uint64_t v1;

  return sub_153DB4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_E83AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t type metadata accessor for StringTextPosition()
{
  return objc_opt_self(_TtC12NowPlayingUI18StringTextPosition);
}

char *sub_E84A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  char *result;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  unint64_t v31;

  v28 = a2;
  v29 = a3;
  v27 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FCAD0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 56);
  if ((v8 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v8) & 0xF;
  else
    v9 = v7 & 0xFFFFFFFFFFFFLL;
  v10 = 7;
  if (((v8 >> 60) & ((v7 & 0x800000000000000) == 0)) != 0)
    v10 = 11;
  v25 = v10 | (v9 << 16);
  v26 = v7;
  v11 = type metadata accessor for Locale(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v24 = 4 * v9;
  v13 = (char *)&_swiftEmptyArrayStorage;
  v14 = 15;
  while (1)
  {
    v30[2] = v26;
    v31 = v8;
    v30[0] = v27;
    v30[1] = v28;
    v12(v6, 1, 1, v11);
    v15 = sub_11CEC();
    swift_bridgeObjectRetain(v8);
    v16 = StringProtocol.range<A>(of:options:range:locale:)(v30, v29, v14, v25, 0, v6, &type metadata for String, &type metadata for String, v15, v15);
    v14 = v17;
    v19 = v18;
    sub_75370((uint64_t)v6);
    swift_bridgeObjectRelease(v31);
    if ((v19 & 1) != 0)
      break;
    result = (char *)swift_isUniquelyReferenced_nonNull_native(v13);
    if ((result & 1) == 0)
    {
      result = sub_1343B4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
      v13 = result;
    }
    v22 = *((_QWORD *)v13 + 2);
    v21 = *((_QWORD *)v13 + 3);
    if (v22 >= v21 >> 1)
    {
      result = sub_1343B4((char *)(v21 > 1), v22 + 1, 1, v13);
      v13 = result;
    }
    *((_QWORD *)v13 + 2) = v22 + 1;
    v23 = &v13[16 * v22];
    *((_QWORD *)v23 + 4) = v16;
    *((_QWORD *)v23 + 5) = v14;
    if (v24 < v14 >> 14)
    {
      __break(1u);
      return result;
    }
  }
  return v13;
}

void *sub_E8690(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _BYTE *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(_BYTE *, uint64_t, __n128);
  Class isa;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  _BYTE v40[4];
  int v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD v47[4];
  CGRect v48;
  CGRect v49;

  v41 = a5;
  v45 = a4;
  v42 = a2;
  v43 = a3;
  v14 = type metadata accessor for IndexPath(0);
  v44 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = &v40[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = &v40[-v19];
  v21 = objc_msgSend(a1, "copy", v18);
  _bridgeAnyObjectToAny(_:)(v47, v21);
  swift_unknownObjectRelease(v21);
  v22 = sub_F174(0, (unint64_t *)&qword_1FEAC0, UICollectionViewLayoutAttributes_ptr);
  swift_dynamicCast(&v46, v47, (char *)&type metadata for Any + 8, v22, 7);
  v23 = v46;
  v24 = objc_msgSend(a1, "indexPath");
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v25 = objc_msgSend(a1, "representedElementCategory");
  v26 = objc_msgSend(a1, "representedElementKind");
  if (v26)
  {
    v27 = v26;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  sub_953B0((uint64_t)v16, (uint64_t)v25, v28, v30, v42, v43, v45, v41 & 1, (uint64_t)v20);
  v31 = swift_bridgeObjectRelease(v30);
  v32 = *(void (**)(_BYTE *, uint64_t, __n128))(v44 + 8);
  v32(v16, v14, v31);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  ((void (*)(_BYTE *, uint64_t))v32)(v20, v14);
  objc_msgSend(v23, "setIndexPath:", isa);

  objc_msgSend(a1, "center");
  v35 = v34;
  v37 = v36;
  v48.origin.x = a6;
  v48.origin.y = a7;
  v48.size.width = a8;
  v48.size.height = a9;
  v38 = v35 + CGRectGetMinX(v48);
  v49.origin.x = a6;
  v49.origin.y = a7;
  v49.size.width = a8;
  v49.size.height = a9;
  objc_msgSend(v23, "setCenter:", v38, v37 + CGRectGetMinY(v49));
  return v23;
}

double sub_E8910(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double result;

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData];
  *(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData] = a1;
  if (v4 != swift_retain(a1))
  {
    v5 = objc_msgSend(v2, "collectionView");
    if (v5)
    {
      v6 = v5;
      v7 = type metadata accessor for CompositeCollectionView();
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
      {
        v9 = *(_BYTE *)(v8 + OBJC_IVAR____TtC12NowPlayingUI23CompositeCollectionView_isPerformingBatchUpdates);

        if ((v9 & 1) != 0)
          goto LABEL_8;
      }
      else
      {

      }
    }
    objc_msgSend(v2, "invalidateLayout");
  }
LABEL_8:
  swift_release(v4);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void sub_E89D0()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t ObjectType;
  uint64_t (*v32)(uint64_t, uint64_t);
  id v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  char v38[24];
  objc_super v39;

  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for CompositeCollectionViewLayout();
  objc_msgSendSuper2(&v39, "prepareLayout");
  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;
    objc_msgSend(v2, "contentInset");
    v15 = UIEdgeInsetsInsetRect_0(v4, v6, v8, v10, v11, v12, v13, v14);
    v17 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData;
    v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData];
    if (!v18 || (*(double *)(v18 + 24) == v15 ? (v19 = *(double *)(v18 + 32) == v16) : (v19 = 0), !v19))
    {
      v20 = sub_ED18C(v15, v16);
      v21 = *(_QWORD *)&v0[v17];
      *(_QWORD *)&v0[v17] = v20;
      swift_release(v21);
    }
    v22 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CompositeCollectionViewLayout.InvalidationContext()), "init");
    v23 = *(_QWORD *)&v0[v17];
    swift_retain();
    sub_EC37C((uint64_t)v22, v23);
    swift_release(v23);
    v24 = &v22[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences];
    swift_beginAccess(&v22[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences], v38, 0, 0);
    v25 = *(_QWORD *)v24;
    v26 = *(_QWORD *)(*(_QWORD *)v24 + 16);
    if (v26)
    {
      v36 = v22;
      v37 = v2;
      swift_bridgeObjectRetain(v25);
      v27 = (void **)(v25 + 64);
      do
      {
        v28 = (uint64_t)*(v27 - 4);
        v29 = (uint64_t)*(v27 - 3);
        v30 = *v27;
        v27 += 5;
        ObjectType = swift_getObjectType(v28);
        v32 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
        swift_unknownObjectRetain(v28);
        v33 = v30;
        v34 = (void *)v32(ObjectType, v29);
        v35 = objc_msgSend(v34, "collectionViewLayout");

        objc_msgSend(v35, "invalidateLayoutWithContext:", v33);
        swift_unknownObjectRelease(v28);

        --v26;
      }
      while (v26);

      swift_bridgeObjectRelease(v25);
    }
    else
    {

    }
  }
}

_QWORD *sub_E8C9C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  CGPoint v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t ObjectType;
  uint64_t (*v31)(uint64_t, _QWORD);
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  CGPoint v36;
  CGSize v37;
  uint64_t v38;
  unint64_t v39;
  double v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v45;
  void *v46;
  id v47;
  char *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  double *v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  double *v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  void (*v85)(char *, uint64_t, __n128);
  Class isa;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  BOOL v92;
  id v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *result;
  unint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  id v105;
  id v106;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v108;
  __n128 v109;
  char v110;
  unint64_t v111;
  id v112;
  id v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  void *v144;
  _QWORD v145[4];
  unint64_t v146;
  __int128 v147;
  __int128 v148;
  CGPoint v149;
  CGSize v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  double v155;
  _QWORD *v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;

  v9 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v9);
  v124 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v122 - v12;
  __chkstk_darwin(v14);
  v17 = (uint64_t)&v122 - v16;
  v156 = _swiftEmptyArrayStorage;
  v122 = v4;
  if (!*(_QWORD *)(v4 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData))
    return _swiftEmptyArrayStorage;
  v138 = v15;
  v134 = swift_retain();
  v18 = sub_CF428(a1, a2, a3, a4);
  v19 = v18;
  v20 = v18[2];
  v139 = v9;
  v126 = v20;
  if (!v20)
  {
    swift_bridgeObjectRelease(v18);
    v17 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_92;
  }
  v21 = 0;
  v125 = v18 + 4;
  v132 = UICollectionElementKindGlobalHeader;
  v133 = (char *)&type metadata for Any + 8;
  v141 = v17;
  v123 = v18;
  while (1)
  {
    v127 = v21;
    v22 = &v125[17 * v21];
    v147 = *(_OWORD *)v22;
    v23 = *((_OWORD *)v22 + 1);
    v24 = (CGPoint)*((_OWORD *)v22 + 2);
    v25 = *((_OWORD *)v22 + 4);
    v150 = (CGSize)*((_OWORD *)v22 + 3);
    v151 = v25;
    v149 = v24;
    v148 = v23;
    v26 = *((_OWORD *)v22 + 5);
    v27 = *((_OWORD *)v22 + 6);
    v28 = *((_OWORD *)v22 + 7);
    v155 = *((double *)v22 + 16);
    v153 = v27;
    v154 = v28;
    v152 = v26;
    v29 = v147;
    v129 = *(double *)&v148;
    v142 = BYTE8(v148);
    ObjectType = swift_getObjectType(v147);
    v31 = *(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v29 + 1) + 8);
    sub_30974(&v147);
    v128 = *((_QWORD *)&v29 + 1);
    v32 = (void *)v31(ObjectType, *((_QWORD *)&v29 + 1));
    v33 = objc_msgSend(v32, "collectionViewLayout");

    v34 = objc_msgSend(v33, "layoutAttributesForElementsInRect:", *((double *)&v153 + 1), v154, v155);
    if (!v34)
    {
      sub_1B690(&v147);
      goto LABEL_86;
    }
    v140 = sub_F174(0, (unint64_t *)&qword_1FEAC0, UICollectionViewLayoutAttributes_ptr);
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v140);

    v146 = (unint64_t)_swiftEmptyArrayStorage;
    v36 = v149;
    v37 = v150;
    if (!((unint64_t)v35 >> 62))
    {
      v38 = *(_QWORD *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFF8));
      if (v38)
        goto LABEL_7;
      goto LABEL_84;
    }
    if (v35 < 0)
      v97 = v35;
    else
      v97 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v38 = _CocoaArrayWrapper.endIndex.getter(v97);
    swift_bridgeObjectRelease(v35);
    if (v38)
    {
LABEL_7:
      v39 = 0;
      v137 = v35 & 0xC000000000000001;
      v131 = v35 & 0xFFFFFFFFFFFFFF8;
      v130 = v35 + 32;
      v40 = v129;
      v136 = v35;
      v135 = v38;
      while (1)
      {
        if (v137)
        {
          v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v35);
        }
        else
        {
          if (v39 >= *(_QWORD *)(v131 + 16))
            goto LABEL_113;
          v42 = *(id *)(v130 + 8 * v39);
        }
        v43 = v42;
        if (__OFADD__(v39++, 1))
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          if (v17 < 0)
            v121 = v17;
          else
            v121 = v17 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v17);
          v99 = _CocoaArrayWrapper.endIndex.getter(v121);
          goto LABEL_94;
        }
        sub_30974(&v147);
        v45 = objc_msgSend(v43, "copy");
        _bridgeAnyObjectToAny(_:)(v145, v45);
        swift_unknownObjectRelease(v45);
        swift_dynamicCast(&v144, v145, v133, v140, 7);
        v46 = v144;
        v47 = objc_msgSend(v43, "indexPath");
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v47);

        v48 = (char *)objc_msgSend(v43, "representedElementCategory");
        v49 = objc_msgSend(v43, "representedElementKind");
        if (v49)
        {
          v50 = v49;
          v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
          v143 = v52;

        }
        else
        {
          v51 = 0;
          v143 = 0;
        }
        v53 = IndexPath.count.getter(v49);
        if (v53 == 2)
          v54 = IndexPath.section.getter(2);
        else
          v54 = v53 <= 0 ? NSNotFound.getter() : IndexPath.subscript.getter(0);
        v55 = v54;
        if (v48 == (_BYTE *)&dword_0 + 2)
          break;
        v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
        v65 = v64;
        v17 = v141;
        if (!v143)
        {
          swift_bridgeObjectRelease(v64);
LABEL_54:
          v66 = sub_958B0((void *)v29, v128, *(uint64_t *)&v129, v142);
          v69 = *((_QWORD *)&v29 + 1) + v66;
          if (__OFADD__(*((_QWORD *)&v29 + 1), v66))
            goto LABEL_114;
LABEL_55:
          v75 = v139;
          goto LABEL_60;
        }
        if (v51 == v63 && v143 == v64)
        {
          swift_bridgeObjectRelease(v64);
        }
        else
        {
          v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v143, v63, v64, 0);
          swift_bridgeObjectRelease(v65);
          if ((v70 & 1) == 0)
            goto LABEL_54;
        }
        v71 = sub_94A98();
        v72 = v71;
        v73 = v71[2];
        if (v73)
        {
          v69 = 0;
          v74 = (double *)(v71 + 7);
          v75 = v139;
          v76 = v142;
          do
          {
            if (*((_QWORD *)v74 - 3) == (_QWORD)v29)
            {
              if ((*(_BYTE *)v74 & 1) != 0)
              {
                if ((v76 & 1) != 0)
                  goto LABEL_57;
              }
              else if ((v76 & 1) == 0)
              {
                v77 = static CGFloat.==~ infix(_:_:)(*(v74 - 1), v40);
                v76 = v142;
                if ((v77 & 1) != 0)
                  goto LABEL_57;
              }
            }
            ++v69;
            v74 += 4;
          }
          while (v73 != v69);
          v69 = 0;
LABEL_57:
          v17 = v141;
        }
        else
        {
          v69 = 0;
          v75 = v139;
        }
        swift_bridgeObjectRelease(v72);
LABEL_60:
        v78 = IndexPath.count.getter(v66);
        if (v78 == 2)
        {
          v79 = IndexPath.section.getter(2);
          if (v69 != v79)
            goto LABEL_67;
        }
        else if (v78 <= 0)
        {
          v79 = NSNotFound.getter();
          if (v69 != v79)
          {
LABEL_67:
            v81 = IndexPath.count.getter(v79);
            if (v81 >= 2)
            {
              v82 = IndexPath.count.getter(v81);
              if (v82 == 2)
              {
                v83 = IndexPath.item.getter(2);
              }
              else if (v82 <= 2)
              {
                v83 = NSNotFound.getter();
              }
              else
              {
                v83 = IndexPath.subscript.getter(1);
              }
              v80 = v138;
              IndexPath.init(item:section:)(v83, v69);
            }
            else
            {
              IndexPath.init(index:)(v69);
              v80 = v138;
            }
            goto LABEL_75;
          }
        }
        else
        {
          v79 = IndexPath.subscript.getter(0);
          if (v69 != v79)
            goto LABEL_67;
        }
        v80 = v138;
        (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v17, v13, v75);
LABEL_75:
        v84 = swift_bridgeObjectRelease(v143);
        v85 = *(void (**)(char *, uint64_t, __n128))(v80 + 8);
        v85(v13, v75, v84);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        ((void (*)(uint64_t, uint64_t))v85)(v17, v75);
        objc_msgSend(v46, "setIndexPath:", isa);

        objc_msgSend(v43, "center");
        v88 = v87;
        v90 = v89;
        v157.origin = v36;
        v157.size = v37;
        v91 = v88 + CGRectGetMinX(v157);
        v158.origin = v36;
        v158.size = v37;
        objc_msgSend(v46, "setCenter:", v91, v90 + CGRectGetMinY(v158));
        sub_1B690(&v147);
        objc_msgSend(v46, "frame");
        v160.origin = v36;
        v160.size = v37;
        v92 = CGRectIntersectsRect(v159, v160);
        v35 = v136;
        if (v92)
        {
          v93 = v46;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
          v95 = *(_QWORD *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8));
          v94 = *(_QWORD *)((char *)&dword_18 + (v146 & 0xFFFFFFFFFFFFFF8));
          if (v95 >= v94 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
          v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v93);
          specialized Array._endMutation()(v41);
        }

        if (v39 == v135)
        {
          swift_bridgeObjectRelease(v35);
          v96 = (_QWORD *)v146;
          v19 = v123;
          goto LABEL_85;
        }
      }
      v56 = sub_94A98();
      v57 = v56;
      v58 = v56[2];
      if (v58)
      {
        v59 = 0;
        v60 = (double *)(v56 + 7);
        v61 = v142;
        do
        {
          if (*((_QWORD *)v60 - 3) == (_QWORD)v29)
          {
            if ((*(_BYTE *)v60 & 1) != 0)
            {
              if ((v61 & 1) != 0)
                goto LABEL_38;
            }
            else if ((v61 & 1) == 0)
            {
              v62 = static CGFloat.==~ infix(_:_:)(*(v60 - 1), v40);
              v61 = v142;
              if ((v62 & 1) != 0)
                goto LABEL_38;
            }
          }
          ++v59;
          v60 += 4;
        }
        while (v58 != v59);
      }
      v59 = 0;
LABEL_38:
      swift_bridgeObjectRelease(v57);
      v67 = v59 + 1;
      v17 = v141;
      if (__OFADD__(v59, 1))
        goto LABEL_110;
      v68 = 1000000 * v67;
      if ((unsigned __int128)(v67 * (__int128)1000000) >> 64 != (1000000 * v67) >> 63)
        goto LABEL_111;
      v69 = v55 + v68;
      if (__OFADD__(v55, v68))
        goto LABEL_112;
      goto LABEL_55;
    }
LABEL_84:
    swift_bridgeObjectRelease(v35);
    v96 = _swiftEmptyArrayStorage;
LABEL_85:
    v98 = swift_bridgeObjectRetain(v96);
    sub_A5AB8(v98);
    sub_1B690(&v147);
    swift_bridgeObjectRelease(v96);
LABEL_86:
    v21 = v127 + 1;
    if (v127 + 1 == v126)
      break;
    if (v21 >= v19[2])
    {
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  swift_bridgeObjectRelease(v19);
  v17 = (uint64_t)v156;
LABEL_92:
  if ((unint64_t)v17 >> 62)
    goto LABEL_115;
  v99 = *(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v17);
LABEL_94:
  result = (_QWORD *)v134;
  if (v99)
  {
    if (v99 >= 1)
    {
      v101 = (unint64_t *)(v122
                                + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes);
      swift_beginAccess(v122 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes, &v147, 0, 0);
      v102 = 0;
      v103 = (uint64_t)v124;
      while (1)
      {
        v112 = *(id *)(v17 + 8 * v102 + 32);
        if (objc_msgSend(v112, "representedElementCategory") != (char *)&dword_0 + 2)
          goto LABEL_100;
        v113 = objc_msgSend(v112, "representedElementKind");
        if (!v113)
          goto LABEL_100;
        v114 = v113;
        v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
        v117 = v116;

        v118 = *v101;
        if (*(_QWORD *)(*v101 + 16))
        {
          swift_bridgeObjectRetain(v117);
          swift_bridgeObjectRetain(v118);
          v119 = sub_139E60(v115, v117);
          if ((v120 & 1) != 0)
          {
            v104 = *(_QWORD *)(*(_QWORD *)(v118 + 56) + 8 * v119);
            swift_bridgeObjectRetain(v104);
            swift_bridgeObjectRelease(v117);
            swift_bridgeObjectRelease(v118);
            goto LABEL_99;
          }
          swift_bridgeObjectRelease(v117);
          swift_bridgeObjectRelease(v118);
        }
        v104 = sub_CAA64((uint64_t)_swiftEmptyArrayStorage);
LABEL_99:
        v105 = objc_msgSend(v112, "indexPath", v122);
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v105);

        v106 = v112;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v104);
        v145[0] = v104;
        sub_13E220((uint64_t)v106, v103, isUniquelyReferenced_nonNull_native);
        v108 = v145[0];
        v109 = swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(uint64_t, uint64_t, __n128))(v138 + 8))(v103, v139, v109);
        swift_beginAccess(v101, v145, 33, 0);
        v110 = swift_isUniquelyReferenced_nonNull_native(*v101);
        v146 = *v101;
        *v101 = 0x8000000000000000;
        sub_13E0C4(v108, v115, v117, v110);
        v111 = *v101;
        *v101 = v146;
        swift_bridgeObjectRelease(v117);
        swift_bridgeObjectRelease(v111);
        swift_endAccess(v145);
LABEL_100:
        ++v102;

        if (v99 == v102)
        {
          swift_release(v134);
          swift_bridgeObjectRelease(v17);
          return v156;
        }
      }
    }
    __break(1u);
  }
  else
  {
    swift_release(v134);
    swift_bridgeObjectRelease(v17);
    return (_QWORD *)v17;
  }
  return result;
}

void sub_E9994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(void);
  uint64_t v27;
  char *v28;
  uint64_t ObjectType;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  char *v32;
  void *v33;
  id v34;
  Class isa;
  id v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  void (*v39)(void);
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  void *v54;
  void *v55;
  uint64_t v56;
  void (*v57)(void);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[10];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - v9;
  v59 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData;
  v60 = v0;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData);
  if (!v11)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v12 = *(_QWORD *)(v11 + 16);
  swift_retain();
  sub_94CB4(0, 0, 0, (uint64_t)v3);
  v13 = swift_release(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v13) == 1)
  {
    sub_9944((uint64_t)v3, &qword_1FA938);
    return;
  }
  v14 = *(int *)(v4 + 48);
  v15 = &v10[v14];
  v16 = &v3[v14];
  v17 = *(_QWORD *)v3;
  v18 = *((_QWORD *)v3 + 1);
  v19 = *((_QWORD *)v3 + 2);
  v20 = v3[24];
  *(_QWORD *)v10 = *(_QWORD *)v3;
  *((_QWORD *)v10 + 1) = v18;
  *((_QWORD *)v10 + 2) = v19;
  v10[24] = v20;
  v21 = type metadata accessor for IndexPath(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v58 = v10;
  v24 = v22;
  v23(v15, v16, v21);
  v56 = v4;
  v25 = &v7[*(int *)(v4 + 48)];
  *(_QWORD *)v7 = v17;
  *((_QWORD *)v7 + 1) = v18;
  *((_QWORD *)v7 + 2) = v19;
  v7[24] = v20;
  v26 = *(void (**)(void))(v24 + 16);
  v27 = v24;
  v28 = v25;
  v57 = v26;
  v26();
  ObjectType = swift_getObjectType(v17);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 8);
  v31 = swift_unknownObjectRetain(v17);
  v32 = v15;
  v33 = (void *)v30(ObjectType, v18, v31);
  swift_unknownObjectRelease(v17);
  v34 = objc_msgSend(v33, "collectionViewLayout");

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v36 = objc_msgSend(v34, "layoutAttributesForItemAtIndexPath:", isa);

  v37 = *(void (**)(char *, uint64_t))(v27 + 8);
  v37(v28, v21);
  if (!v36)
  {
    v40 = (uint64_t)v58;
    goto LABEL_9;
  }
  v55 = v36;
  v38 = &v7[*(int *)(v56 + 48)];
  v39 = v57;
  v40 = (uint64_t)v58;
  v41 = *(void **)v58;
  v42 = *((_QWORD *)v58 + 1);
  v43 = *((_QWORD *)v58 + 2);
  v44 = v58[24];
  *(_QWORD *)v7 = *(_QWORD *)v58;
  *((_QWORD *)v7 + 1) = v42;
  *((_QWORD *)v7 + 2) = v43;
  v7[24] = v44;
  ((void (*)(char *, char *, uint64_t))v39)(v38, v32, v21);
  v45 = swift_unknownObjectRetain(v41);
  ((void (*)(char *, uint64_t, __n128))v37)(v38, v21, v45);
  v47 = v59;
  v46 = v60;
  v48 = *(_QWORD *)(v60 + v59);
  if (!v48)
    goto LABEL_11;
  swift_retain();
  sub_CEA0C(v41, v42, v43, v44, (uint64_t)v61);
  swift_release(v48);
  v49 = *(_QWORD *)(v46 + v47);
  if (v49)
  {
    v51 = *(double *)&v61[2];
    v50 = *(double *)&v61[3];
    v53 = *(double *)v61;
    v52 = *(double *)&v61[1];
    swift_retain();
    v54 = v55;
    sub_E8690(v55, v41, v42, v43, v44, v53, v52, v51, v50);
    swift_unknownObjectRelease(v41);

    swift_release(v49);
LABEL_9:
    sub_9944(v40, &qword_1FA940);
    return;
  }
LABEL_12:
  __break(1u);
}

void *sub_E9DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  double v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  __n128 v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  _BYTE v35[24];

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  sub_ED2B8(a3, 2, a1, a2, v3, a1, a2, (SEL *)&selRef_layoutAttributesForDecorationViewOfKind_atIndexPath_);
  v12 = v11;
  swift_bridgeObjectRelease(a2);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v13, "representedElementKind");
    if (!v14)
    {
LABEL_9:

      return v12;
    }
    v15 = v14;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

    v19 = (_QWORD *)(v3 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes);
    swift_beginAccess(v3 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes, v35, 0, 0);
    v20 = *v19;
    if (*(_QWORD *)(*v19 + 16))
    {
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v20);
      v21 = sub_139E60(v16, v18);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRelease(v18);
        *(_QWORD *)&v24 = swift_bridgeObjectRelease(v20).n128_u64[0];
LABEL_8:
        v25 = objc_msgSend(v13, "indexPath", v24);
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v25);

        v13 = v13;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
        v34[0] = v23;
        sub_13E220((uint64_t)v13, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
        v27 = v34[0];
        v28 = swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v28);
        swift_beginAccess(v19, v34, 33, 0);
        v29 = swift_isUniquelyReferenced_nonNull_native(*v19);
        v33 = *v19;
        *v19 = 0x8000000000000000;
        sub_13E0C4(v27, v16, v18, v29);
        v30 = *v19;
        *v19 = v33;
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v30);
        swift_endAccess(v34);
        goto LABEL_9;
      }
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v20);
    }
    v23 = sub_CAA64((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_8;
  }
  return v12;
}

uint64_t sub_EA294()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSString v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  Class isa;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  objc_super v86;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F70);
  __chkstk_darwin(v6);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  v12 = String._bridgeToObjectiveC()();
  v13 = (objc_class *)type metadata accessor for CompositeCollectionViewLayout();
  v86.receiver = v0;
  v86.super_class = v13;
  v14 = objc_msgSendSuper2(&v86, "indexPathsToDeleteForDecorationViewOfKind:", v12);

  v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v2);
  v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes];
  v16 = *(_QWORD *)(v15 + 64);
  v69 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v70 = (unint64_t)(v17 + 63) >> 6;
  v72 = v15;
  swift_bridgeObjectRetain(v15);
  v20 = 0;
  v75 = v5;
  v76 = v0;
  v79 = v11;
  v80 = v8;
LABEL_6:
  if (v19)
  {
    v73 = (v19 - 1) & v19;
    v74 = v20;
    v21 = __clz(__rbit64(v19)) | (v20 << 6);
  }
  else
  {
    v22 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_64;
    if (v22 >= v70)
    {
LABEL_61:
      swift_release(v72);
      return v78;
    }
    v23 = *(_QWORD *)(v69 + 8 * v22);
    v24 = v20 + 1;
    if (!v23)
    {
      v24 = v20 + 2;
      if (v20 + 2 >= v70)
        goto LABEL_61;
      v23 = *(_QWORD *)(v69 + 8 * v24);
      if (!v23)
      {
        v24 = v20 + 3;
        if (v20 + 3 >= v70)
          goto LABEL_61;
        v23 = *(_QWORD *)(v69 + 8 * v24);
        if (!v23)
        {
          v25 = v20 + 4;
          if (v20 + 4 >= v70)
            goto LABEL_61;
          v23 = *(_QWORD *)(v69 + 8 * v25);
          if (!v23)
          {
            while (1)
            {
              v24 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_66;
              if (v24 >= v70)
                goto LABEL_61;
              v23 = *(_QWORD *)(v69 + 8 * v24);
              ++v25;
              if (v23)
                goto LABEL_21;
            }
          }
          v24 = v20 + 4;
        }
      }
    }
LABEL_21:
    v73 = (v23 - 1) & v23;
    v74 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
  }
  v26 = *(_QWORD *)(v72 + 56);
  v27 = (uint64_t *)(*(_QWORD *)(v72 + 48) + 16 * v21);
  v28 = v27[1];
  v82 = *v27;
  v83 = v28;
  v29 = *(_QWORD *)(v26 + 8 * v21);
  v30 = *(_QWORD *)(v29 + 64);
  v77 = v29 + 64;
  v31 = 1 << *(_BYTE *)(v29 + 32);
  if (v31 < 64)
    v32 = ~(-1 << v31);
  else
    v32 = -1;
  v33 = v32 & v30;
  v81 = (unint64_t)(v31 + 63) >> 6;
  v71 = v81 - 1;
  swift_bridgeObjectRetain(v28);
  v84 = v29;
  swift_bridgeObjectRetain(v29);
  v85 = 0;
  while (1)
  {
    if (v33)
    {
      v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      v36 = v35 | (v85 << 6);
LABEL_30:
      v37 = v84;
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(v84 + 48) + *(_QWORD *)(v3 + 72) * v36, v2);
      v38 = *(_QWORD *)(v37 + 56);
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F78);
      v40 = *(void **)(v38 + 8 * v36);
      *(_QWORD *)&v8[*(int *)(v39 + 48)] = v40;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 0, 1, v39);
      v41 = v40;
      goto LABEL_49;
    }
    v42 = v85 + 1;
    if (__OFADD__(v85, 1))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
    }
    if (v42 < v81)
    {
      v43 = *(_QWORD *)(v77 + 8 * v42);
      if (v43)
        goto LABEL_34;
      v44 = v85 + 2;
      ++v85;
      if (v42 + 1 < v81)
      {
        v43 = *(_QWORD *)(v77 + 8 * v44);
        if (v43)
          goto LABEL_37;
        v85 = v42 + 1;
        if (v42 + 2 < v81)
        {
          v43 = *(_QWORD *)(v77 + 8 * (v42 + 2));
          if (v43)
          {
            v42 += 2;
            goto LABEL_34;
          }
          v44 = v42 + 3;
          v85 = v42 + 2;
          if (v42 + 3 < v81)
          {
            v43 = *(_QWORD *)(v77 + 8 * v44);
            if (v43)
            {
LABEL_37:
              v42 = v44;
LABEL_34:
              v33 = (v43 - 1) & v43;
              v36 = __clz(__rbit64(v43)) + (v42 << 6);
              v85 = v42;
              goto LABEL_30;
            }
            while (1)
            {
              v42 = v44 + 1;
              if (__OFADD__(v44, 1))
                goto LABEL_65;
              if (v42 >= v81)
                break;
              v43 = *(_QWORD *)(v77 + 8 * v42);
              ++v44;
              if (v43)
                goto LABEL_34;
            }
            v85 = v71;
          }
        }
      }
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F78);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v8, 1, 1, v45);
    v33 = 0;
LABEL_49:
    sub_ED65C((uint64_t)v8, (uint64_t)v11);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F78);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v11, 1, v46) == 1)
    {
      swift_bridgeObjectRelease(v83);
      swift_release(v84);
      v19 = v73;
      v20 = v74;
      goto LABEL_6;
    }
    v47 = *(void **)&v11[*(int *)(v46 + 48)];
    if (objc_msgSend(v47, "representedElementCategory") != (char *)&dword_0 + 2)
    {

      v34 = *(void (**)(char *, uint64_t))(v3 + 8);
      goto LABEL_27;
    }
    v48 = v3;
    v49 = v2;
    v50 = objc_msgSend(v47, "indexPath");
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v50);

    v51 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v53 = objc_msgSend(v1, "layoutAttributesForDecorationViewOfKind:atIndexPath:", v51, isa);

    if (!v53)
      break;
    v3 = v48;
    v34 = *(void (**)(char *, uint64_t))(v48 + 8);
    v2 = v49;
    v34(v5, v49);

LABEL_60:
    v11 = v79;
    v8 = v80;
LABEL_27:
    v34(v11, v2);
  }
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD898);
  v55 = *(_QWORD *)(v48 + 72);
  v56 = *(unsigned __int8 *)(v48 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = swift_allocObject(v54, v57 + v55, v56 | 7);
  v59 = v58 + v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v58 + v57, v5, v49);
  v60 = v78;
  v61 = *(_QWORD *)(v78 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v78);
  if (!isUniquelyReferenced_nonNull_native || (v63 = *(_QWORD *)(v60 + 24) >> 1, v63 <= v61))
  {
    v60 = sub_134B8C(isUniquelyReferenced_nonNull_native, v61 + 1, 1, v60);
    v63 = *(_QWORD *)(v60 + 24) >> 1;
  }
  v64 = *(_QWORD *)(v60 + 16);
  v1 = v76;
  if (v63 <= v64)
    goto LABEL_63;
  v65 = v60 + v57 + v64 * v55;
  if (v59 >= v65 + v55 || v65 >= v59 + v55)
  {
    v2 = v49;
    swift_arrayInitWithCopy(v65);
    v66 = *(_QWORD *)(v60 + 16) + 1;
    v78 = v60;
    *(_QWORD *)(v60 + 16) = v66;
    swift_setDeallocating(v58);
    swift_arrayDestroy(v59, 1, v49);
    swift_deallocClassInstance(v58, 32, 7);

    v3 = v48;
    v34 = *(void (**)(char *, uint64_t))(v48 + 8);
    v5 = v75;
    v34(v75, v49);
    goto LABEL_60;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_EAA68(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t Strong;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __n128 v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  id v38;
  char *v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  uint64_t ObjectType;
  uint64_t (*v68)(uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  char **v75;
  _QWORD *v76;
  objc_class *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, __n128);
  __n128 v85;
  void *v86;
  id v87;
  id v88;
  uint64_t ObjCClassMetadata;
  uint64_t v90;
  id v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char v99[24];
  objc_super v100;
  _QWORD aBlock[5];
  uint64_t v102;
  char v103[32];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CompositeCollectionViewLayout.InvalidationContext();
  v12 = swift_dynamicCastClass(a1, v11);
  if (v12)
  {
    v96 = v8;
    v97 = (char *)v12;
    v93 = v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_isInvalidatingLayout];
    v94 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_isInvalidatingLayout;
    v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_isInvalidatingLayout] = 1;
    v13 = (uint64_t *)&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes];
    swift_beginAccess(&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes], v103, 0, 0);
    v14 = *v13;
    v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes];
    *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes] = v14;
    v95 = a1;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(v15);
    v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributesRevision];
    v17 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      return;
    }
    v92 = v7;
    *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributesRevision] = v17;
    v18 = swift_allocObject(&unk_1D0920, 24, 7);
    v19 = v1;
    v20 = v18;
    v21 = v18 + 16;
    v98 = v19;
    swift_unknownObjectWeakInit(v18 + 16, v19);
    v22 = swift_allocObject(&unk_1D0948, 32, 7);
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v17;
    v23 = (void *)objc_opt_self(NSThread);
    swift_retain_n(v20, 2);
    if (objc_msgSend(v23, "isMainThread"))
    {
      swift_beginAccess(v21, v99, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v21);
      if (Strong)
      {
        v25 = (char *)Strong;
        if (v17 == *(_QWORD *)(Strong
                              + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributesRevision))
        {
          v26 = sub_CABF8((uint64_t)_swiftEmptyArrayStorage);
          v27 = *(_QWORD *)&v25[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes];
          *(_QWORD *)&v25[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes] = v26;
          swift_release_n(v20, 2);
          swift_release(v22);

          v28 = swift_bridgeObjectRelease(v27).n128_u64[0];
        }
        else
        {
          swift_release_n(v20, 2);
          swift_release(v22);

        }
LABEL_9:
        v37 = v98;
        v38 = objc_msgSend(v98, "collectionView", *(double *)&v28);
        v39 = v97;
        if (v38)
        {
          v40 = v38;
          objc_msgSend(v38, "bounds");
          v42 = v41;
          v44 = v43;
          v46 = v45;
          v48 = v47;
          objc_msgSend(v40, "contentInset");
          v53 = UIEdgeInsetsInsetRect_0(v42, v44, v46, v48, v49, v50, v51, v52);
          v55 = sub_ED18C(v53, v54);
          v56 = *(_QWORD *)&v37[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData];
          *(_QWORD *)&v37[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData] = v55;
          swift_release(v56);
          v57 = v95;
          sub_EC37C((uint64_t)v39, 0);

        }
        v58 = &v39[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences];
        swift_beginAccess(&v39[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences], aBlock, 0, 0);
        v59 = *(_QWORD *)v58;
        v60 = *(_QWORD *)(*(_QWORD *)v58 + 16);
        if (v60)
        {
          v96 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData;
          v92 = swift_bridgeObjectRetain(v59);
          v61 = (void **)(v92 + 64);
          do
          {
            v62 = *(v61 - 4);
            v63 = (uint64_t)*(v61 - 3);
            v64 = (uint64_t)*(v61 - 2);
            v65 = *((_BYTE *)v61 - 8);
            v66 = *v61;
            v61 += 5;
            ObjectType = swift_getObjectType(v62);
            v68 = *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8);
            swift_unknownObjectRetain_n(v62, 2);
            v69 = v66;
            v70 = v68(ObjectType, v63);
            v39 = v97;
            v71 = (void *)v70;
            v72 = v69;
            v73 = objc_msgSend(v71, "collectionViewLayout");
            objc_msgSend(v73, "invalidateLayoutWithContext:", v72);

            v74 = *(_QWORD *)&v98[v96];
            swift_retain();
            sub_15B374(v72, v39, v74, v62, v63, v64, v65, 0);
            swift_unknownObjectRelease_n(v62, 2);

            swift_release(v74);
            --v60;
          }
          while (v60);
          v75 = &selRef_layoutDirection;
        }
        else
        {
          v75 = &selRef_layoutDirection;
          if (*(_QWORD *)&v39[OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_sourceComponentItem])
            goto LABEL_18;
          v78 = *(_QWORD *)&v37[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData];
          swift_retain();
          v76 = sub_94A98();
          swift_release(v78);
          v79 = v76[2];
          if (!v79)
          {
LABEL_16:
            swift_bridgeObjectRelease(v76);
            v37 = v98;
LABEL_18:
            v77 = (objc_class *)type metadata accessor for CompositeCollectionViewLayout();
            v100.receiver = v37;
            v100.super_class = v77;
            objc_msgSendSuper2(&v100, v75[224], v39);

            v37[v94] = v93;
            return;
          }
          v92 = (uint64_t)v76;
          v80 = v76 + 5;
          do
          {
            v81 = *(v80 - 1);
            v82 = *v80;
            v83 = swift_getObjectType(v81);
            v84 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v82 + 8);
            v85 = swift_unknownObjectRetain(v81);
            v86 = (void *)v84(v83, v82, v85);
            v87 = objc_msgSend(v86, "collectionViewLayout");
            v88 = objc_msgSend((id)swift_getObjCClassFromObject(), "invalidationContextClass");
            ObjCClassMetadata = swift_getObjCClassMetadata(v88);
            v90 = sub_F174(0, &qword_200F68, UICollectionViewLayoutInvalidationContext_ptr);
            swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v90, 0, 0, 0);
            v91 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
            objc_msgSend(v91, "_setInvalidateEverything:", objc_msgSend(v39, "invalidateEverything"));
            objc_msgSend(v91, "_setInvalidateDataSourceCounts:", objc_msgSend(v39, "invalidateDataSourceCounts"));
            objc_msgSend(v87, "invalidateLayoutWithContext:", v91);
            swift_unknownObjectRelease(v81);

            v80 += 4;
            --v79;
          }
          while (v79);
        }
        v76 = (_QWORD *)v92;
        goto LABEL_16;
      }
    }
    else
    {
      sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
      v30 = (void *)static OS_dispatch_queue.main.getter(v29);
      aBlock[4] = sub_ED16C;
      v102 = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_F528;
      aBlock[3] = &block_descriptor_24;
      v31 = _Block_copy(aBlock);
      v32 = v102;
      swift_retain();
      swift_release(v32);
      static DispatchQoS.unspecified.getter(v33);
      aBlock[0] = _swiftEmptyArrayStorage;
      v34 = sub_F52C();
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
      v36 = sub_F574();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v36, v3, v34);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v31);
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v10, v92);
    }
    swift_release_n(v20, 2);
    v28 = swift_release(v22).n128_u64[0];
    goto LABEL_9;
  }
}

void sub_EB1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (*(_QWORD *)&Strong[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributesRevision] == a2)
    {
      v6 = sub_CABF8((uint64_t)_swiftEmptyArrayStorage);
      v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes];
      *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes] = v6;

      swift_bridgeObjectRelease(v7);
    }
    else
    {

    }
  }
}

id sub_EB29C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  int v43;
  _BOOL4 v44;
  int v45;
  double Width;
  double Height;
  id v48;
  double v49;
  double v50;
  double v51;
  double top;
  void *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  double MinX;
  double v62;
  double MinY;
  double v64;
  double v65;
  uint64_t ObjectType;
  uint64_t v67;
  id v68;
  double v69;
  uint64_t v70;
  void *v71;
  _QWORD *v72;
  CGFloat right;
  CGFloat bottom;
  CGFloat left;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  CGFloat v82;
  CGFloat rect;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  double v88;
  CGFloat rect2;
  objc_super v90;
  CGRect v91;
  CGRect v92;
  _QWORD v93[2];
  double v94;
  double v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;

  v5 = v4;
  result = objc_msgSend(v4, "collectionView");
  if (result)
  {
    v11 = result;
    v12 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData;
    v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData];
    if (v13)
    {
      swift_retain();
      objc_msgSend(v11, "contentInset");
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v90.receiver = v5;
      v90.super_class = (Class)type metadata accessor for CompositeCollectionViewLayout();
      if ((objc_msgSendSuper2(&v90, "shouldInvalidateLayoutForBoundsChange:", a1, a2, a3, a4) & 1) != 0
        || (v22 = UIEdgeInsetsInsetRect_0(a1, a2, a3, a4, v15, v17, v19, v21),
            (static CGFloat.==~ infix(_:_:)(*(double *)(v13 + 24), v22) & 1) == 0))
      {
        swift_release(v13);

        return &dword_0 + 1;
      }
      v70 = v13;
      v71 = v11;
      objc_msgSend(v11, "bounds");
      v24 = v23;
      v26 = v25;
      v28 = v27;
      rect2 = v29;
      v30 = *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData];
      swift_retain();
      v31 = sub_94A98();
      swift_release(v30);
      v72 = v31;
      v32 = v31[2];
      if (v32)
      {
        left = UIEdgeInsetsZero.left;
        right = UIEdgeInsetsZero.right;
        bottom = UIEdgeInsetsZero.bottom;
        v33 = (char *)(v31 + 7);
        v77 = v26;
        v78 = v24;
        v76 = v28;
        v88 = a3;
        v80 = a2;
        v81 = a4;
        v79 = a1;
        v87 = v12;
        do
        {
          v34 = *(_QWORD *)&v5[v12];
          if (v34)
          {
            v35 = (void *)*((_QWORD *)v33 - 3);
            v36 = *((_QWORD *)v33 - 2);
            v37 = *((uint64_t *)v33 - 1);
            v38 = *v33;
            swift_unknownObjectRetain(v35);
            swift_retain();
            v39 = objc_msgSend(v5, "collectionView");
            v40 = v39;
            if (v39)
            {
              v41 = objc_msgSend(v39, "traitCollection");

              objc_msgSend(v41, "displayScale");
            }
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F60);
            Optional<A>.safeDisplayScale.getter(v42, &protocol witness table for CGFloat);
            sub_CEA0C(v35, v36, v37, v38, (uint64_t)&v91);
            v102.origin.x = v24;
            v102.origin.y = v26;
            v102.size.width = v28;
            v102.size.height = rect2;
            v43 = CGRectIntersectsRect(v91, v102);
            sub_CEA0C(v35, v36, v37, v38, (uint64_t)&v92);
            v103.origin.x = a1;
            v103.origin.y = a2;
            v103.size.width = a3;
            v103.size.height = a4;
            v44 = CGRectIntersectsRect(v92, v103);
            v45 = v44;
            if (v43 && v44)
            {
              if ((v38 & 1) != 0)
              {
                v96.origin.x = a1;
                v96.origin.y = a2;
                v96.size.width = a3;
                v96.size.height = a4;
                Width = CGRectGetWidth(v96);
              }
              else
              {
                Width = *(double *)&v37;
              }
              v97.origin.x = a1;
              v97.origin.y = a2;
              v97.size.width = a3;
              v97.size.height = a4;
              Height = CGRectGetHeight(v97);
              v48 = objc_msgSend(v5, "collectionView");
              v49 = right;
              v50 = bottom;
              v51 = left;
              top = UIEdgeInsetsZero.top;
              if (v48)
              {
                v53 = v48;
                objc_msgSend(v48, "contentInset");
                top = v54;
                v51 = v55;
                v50 = v56;
                v49 = v57;

              }
              v85 = Height + v50 + top;
              v86 = Width + v49 + v51;
              sub_CEA0C(v35, v36, v37, v38, (uint64_t)v93);
              v59 = *(double *)v93;
              v58 = *(double *)&v93[1];
              v60 = v94;
              v82 = v95;
              rect = v94;
              a1 = v79;
              a2 = v80;
              v98.origin.x = v79;
              v98.origin.y = v80;
              v98.size.width = v88;
              a4 = v81;
              v98.size.height = v81;
              MinX = CGRectGetMinX(v98);
              v99.origin.x = v59;
              v99.origin.y = v58;
              v99.size.width = v60;
              v99.size.height = v82;
              v62 = MinX - CGRectGetMinX(v99);
              if (v62 < 0.0)
                v62 = 0.0;
              v84 = v62;
              v100.origin.x = v79;
              v100.origin.y = v80;
              v100.size.width = v88;
              v100.size.height = v81;
              MinY = CGRectGetMinY(v100);
              v101.origin.x = v59;
              v101.origin.y = v58;
              v101.size.width = rect;
              v101.size.height = v82;
              v64 = MinY - CGRectGetMinY(v101);
              if (v64 < 0.0)
                v65 = 0.0;
              else
                v65 = v64;
              ObjectType = swift_getObjectType(v35);
              v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(ObjectType, v36);
              v68 = objc_msgSend((id)v67, "collectionViewLayout");

              v69 = v65;
              a3 = v88;
              LOBYTE(v67) = objc_msgSend(v68, "shouldInvalidateLayoutForBoundsChange:", v84, v69, v86, v85);
              swift_unknownObjectRelease(v35);

              swift_release(v34);
              v12 = v87;
              v26 = v77;
              v24 = v78;
              v28 = v76;
              if ((v67 & 1) != 0)
              {
LABEL_25:

                swift_bridgeObjectRelease(v72);
                swift_release(v70);
                return &dword_0 + 1;
              }
            }
            else
            {
              swift_unknownObjectRelease(v35);
              swift_release(v34);
              v12 = v87;
              if (v43 != v45)
                goto LABEL_25;
            }
          }
          v33 += 32;
          --v32;
        }
        while (v32);
      }

      swift_bridgeObjectRelease(v72);
      swift_release(v70);
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t sub_EB83C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double Width;
  CGFloat v30;
  CGFloat v31;
  double Height;
  id v33;
  double v34;
  double v35;
  double v36;
  double top;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  double MinX;
  double v47;
  double MinY;
  double v49;
  double v50;
  uint64_t ObjectType;
  uint64_t (*v52)(uint64_t, uint64_t, __n128);
  __n128 v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  _QWORD *v64;
  uint64_t v65;
  CGFloat right;
  CGFloat bottom;
  CGFloat left;
  uint64_t v69;
  double v70;
  double v71;
  char *v72;
  CGFloat v73;
  CGFloat rect;
  double rect_8;
  double rect_16;
  double rect_24;
  uint64_t v78;
  double v79;
  double v80;
  char v81[24];
  objc_super v82;
  double v83;
  double v84;
  double v85;
  double v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;

  v5 = v4;
  v82.receiver = v4;
  v82.super_class = (Class)type metadata accessor for CompositeCollectionViewLayout();
  v10 = objc_msgSendSuper2(&v82, "invalidationContextForBoundsChange:", a1, a2, a3, a4);
  v11 = type metadata accessor for CompositeCollectionViewLayout.InvalidationContext();
  v12 = swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
  v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData];
  if (v13)
  {
    swift_retain();
    v14 = objc_msgSend(v5, "collectionView");
    v15 = v14;
    v65 = v12;
    if (v14)
    {
      v16 = objc_msgSend(v14, "traitCollection");

      objc_msgSend(v16, "displayScale");
      v18 = v17;

    }
    else
    {
      v18 = 0.0;
    }
    v83 = v18;
    LOBYTE(v84) = v15 == 0;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F60);
    Optional<A>.safeDisplayScale.getter(v19, &protocol witness table for CGFloat);
    v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData];
    swift_retain();
    v21 = sub_94A98();
    swift_release(v20);
    v22 = v21[2];
    v64 = v21;
    if (v22)
    {
      left = UIEdgeInsetsZero.left;
      right = UIEdgeInsetsZero.right;
      bottom = UIEdgeInsetsZero.bottom;
      v23 = (char *)(v21 + 7);
      v24 = _swiftEmptyArrayStorage;
      v69 = v13;
      v72 = v5;
      v70 = a2;
      v71 = a4;
      v79 = a1;
      v80 = a3;
      do
      {
        v25 = (void *)*((_QWORD *)v23 - 3);
        v26 = *((_QWORD *)v23 - 2);
        v27 = *((_QWORD *)v23 - 1);
        v28 = *v23;
        if ((*v23 & 1) != 0)
        {
          swift_unknownObjectRetain(*((_QWORD *)v23 - 3));
          v87.origin.x = a1;
          v87.origin.y = a2;
          v87.size.width = a3;
          v87.size.height = a4;
          Width = CGRectGetWidth(v87);
        }
        else
        {
          Width = *((double *)v23 - 1);
          swift_unknownObjectRetain(*((_QWORD *)v23 - 3));
        }
        v88.origin.x = a1;
        v30 = a2;
        v88.origin.y = a2;
        v88.size.width = a3;
        v31 = a4;
        v88.size.height = a4;
        Height = CGRectGetHeight(v88);
        v33 = objc_msgSend(v5, "collectionView");
        v34 = right;
        v35 = bottom;
        v36 = left;
        top = UIEdgeInsetsZero.top;
        if (v33)
        {
          v38 = v33;
          objc_msgSend(v33, "contentInset");
          top = v39;
          v36 = v40;
          v35 = v41;
          v34 = v42;

        }
        rect_16 = Height + v35 + top;
        rect_24 = Width + v34 + v36;
        v78 = v27;
        sub_CEA0C(v25, v26, v27, v28, (uint64_t)&v83);
        v43 = v83;
        v44 = v84;
        v45 = v85;
        v73 = v86;
        rect = v83;
        v89.origin.x = v79;
        v89.origin.y = v30;
        v89.size.width = v80;
        v89.size.height = v31;
        MinX = CGRectGetMinX(v89);
        v90.origin.x = v43;
        v90.origin.y = v44;
        v90.size.width = v45;
        v90.size.height = v73;
        v47 = MinX - CGRectGetMinX(v90);
        if (v47 < 0.0)
          v47 = 0.0;
        rect_8 = v47;
        v91.origin.x = v79;
        v91.origin.y = v30;
        v91.size.width = v80;
        v91.size.height = v31;
        MinY = CGRectGetMinY(v91);
        v92.origin.x = rect;
        v92.origin.y = v44;
        v92.size.width = v45;
        v92.size.height = v73;
        v49 = MinY - CGRectGetMinY(v92);
        if (v49 < 0.0)
          v50 = 0.0;
        else
          v50 = v49;
        ObjectType = swift_getObjectType(v25);
        v52 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 8);
        v53 = swift_unknownObjectRetain(v25);
        v54 = (void *)v52(ObjectType, v26, v53);
        swift_unknownObjectRelease(v25);
        v55 = objc_msgSend(v54, "collectionViewLayout");

        v56 = objc_msgSend(v55, "invalidationContextForBoundsChange:", rect_8, v50, rect_24, rect_16);
        swift_unknownObjectRetain(v25);
        v57 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
          v24 = sub_135A54(0, v24[2] + 1, 1, v24);
        v59 = v24[2];
        v58 = v24[3];
        a2 = v70;
        a4 = v71;
        a1 = v79;
        a3 = v80;
        if (v59 >= v58 >> 1)
          v24 = sub_135A54((_QWORD *)(v58 > 1), v59 + 1, 1, v24);
        v24[2] = v59 + 1;
        v60 = &v24[5 * v59];
        v60[4] = v25;
        v60[5] = v26;
        v60[6] = v78;
        *((_BYTE *)v60 + 56) = v28;
        v60[8] = v57;
        swift_unknownObjectRelease(v25);

        v23 += 32;
        --v22;
        v5 = v72;
        v13 = v69;
      }
      while (v22);
    }
    else
    {
      v24 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v64);
    v12 = v65;
    v61 = (uint64_t *)(v65
                    + OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences);
    swift_beginAccess(v65+ OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences, v81, 1, 0);
    v62 = *v61;
    *v61 = (uint64_t)v24;
    swift_release(v13);
    swift_bridgeObjectRelease(v62);
  }
  return v12;
}

uint64_t sub_EBD70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  void *v29;
  id v30;
  id v31;
  uint64_t result;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  id v36;

  v36 = a1;
  v35 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData))
  {
    __break(1u);
    goto LABEL_6;
  }
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData);
  swift_retain();
  v15 = v36;
  v16 = objc_msgSend(v36, "indexPath");
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v16);

  sub_94CB4((uint64_t)objc_msgSend(v15, "representedElementCategory"), 0, 0, (uint64_t)v7);
  v17 = v35;
  v34 = *(void (**)(char *, uint64_t))(v2 + 8);
  v34(v4, v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    result = sub_9944((uint64_t)v7, &qword_1FA938);
    __break(1u);
    goto LABEL_7;
  }
  v18 = *(int *)(v8 + 48);
  v19 = &v14[v18];
  v20 = &v7[v18];
  v21 = *(_QWORD *)v7;
  v22 = *((_QWORD *)v7 + 1);
  v23 = *((_QWORD *)v7 + 2);
  v24 = v7[24];
  *(_QWORD *)v14 = v21;
  *((_QWORD *)v14 + 1) = v22;
  *((_QWORD *)v14 + 2) = v23;
  v14[24] = v24;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v14[v18], v20, v17);
  v25 = &v11[*(int *)(v8 + 48)];
  *(_QWORD *)v11 = v21;
  *((_QWORD *)v11 + 1) = v22;
  *((_QWORD *)v11 + 2) = v23;
  v11[24] = v24;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v25, v19, v17);
  ObjectType = swift_getObjectType(v21);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v22 + 8);
  v28 = swift_unknownObjectRetain(v21);
  v29 = (void *)v27(ObjectType, v22, v28);
  swift_unknownObjectRelease(v21);
  v30 = objc_msgSend(v29, "collectionViewLayout");

  v31 = objc_msgSend(v30, "_decorationViewForLayoutAttributes:", v36);
  result = ((uint64_t (*)(char *, uint64_t))v34)(v25, v17);
  if (v31)
  {
    sub_9944((uint64_t)v14, &qword_1FA940);
    swift_release(v33);
    return (uint64_t)v31;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_EC0BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  void *v12;
  id v13;
  id v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData);
  swift_retain();
  v2 = sub_94A98();
  swift_release(v1);
  v3 = v2[2];
  if (v3)
  {
    v4 = v3 - 1;
    v5 = v2 + 5;
    do
    {
      v6 = v4;
      v8 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v8);
      v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 8);
      v11 = swift_unknownObjectRetain(v8);
      v12 = (void *)v10(ObjectType, v7, v11);
      v13 = objc_msgSend(v12, "collectionViewLayout");

      v14 = objc_msgSend(v13, "canBeEdited");
      swift_unknownObjectRelease(v8);
      if ((v14 & 1) != 0)
        break;
      v4 = v6 - 1;
      v5 += 4;
    }
    while (v6);
  }
  else
  {
    v14 = 0;
  }
  swift_bridgeObjectRelease(v2);
  return v14;
}

double sub_EC268(char a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  void *v14;
  id v15;
  double result;
  _QWORD *v17;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData);
  swift_retain();
  v4 = sub_94A98();
  swift_release(v3);
  v17 = v4;
  v5 = v4[2];
  if (v5)
  {
    v6 = v5 - 1;
    v7 = v4 + 5;
    v8 = a1 & 1;
    while (1)
    {
      v9 = *(v7 - 1);
      v10 = *v7;
      ObjectType = swift_getObjectType(v9);
      v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8);
      v13 = swift_unknownObjectRetain(v9);
      v14 = (void *)v12(ObjectType, v10, v13);
      v15 = objc_msgSend(v14, "collectionViewLayout");

      if (objc_msgSend(v15, "canBeEdited"))
        objc_msgSend(v15, "setEditing:", v8);

      swift_unknownObjectRelease(v9);
      if (!v6)
        break;
      --v6;
      v7 += 4;
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  return result;
}

double sub_EC37C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  double result;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  void *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  void *v29;
  uint64_t (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  void *v32;
  id v33;
  double v34;
  CGFloat v35;
  void *v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double Height;
  id v42;
  double v43;
  double v44;
  double v45;
  double top;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  unint64_t v52;
  unint64_t v53;
  double MinX;
  double MinY;
  id v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  uint64_t v69;
  id v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  void *v83;
  uint64_t v84;
  id v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  id v95;
  id v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  __n128 v105;
  __n128 v106;
  __n128 v107;
  __n128 v108;
  id v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  __n128 v118;
  __n128 v119;
  __n128 v120;
  __n128 v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  id v137;
  unint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  id v143;
  CGFloat right;
  CGFloat bottom;
  CGFloat left;
  uint64_t v147;
  char *v148;
  CGFloat v149;
  CGFloat v150;
  CGFloat v151;
  CGFloat v152;
  CGFloat v153;
  CGFloat v154;
  CGFloat v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  double Width;
  uint64_t v160;
  id v161;
  id v162;
  uint64_t v163;
  id v164;
  _BYTE v165[24];
  _QWORD v166[2];
  double v167;
  double v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;

  v3 = v2;
  v6 = objc_msgSend(v3, "collectionView");
  if (v6)
  {
    v8 = v6;
    v142 = a1;
    objc_msgSend(v6, "bounds");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v143 = v8;
    v17 = objc_msgSend(v8, "traitCollection");
    UITraitCollection.safeDisplayScale.getter();

    v18 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData];
    swift_retain();
    v19 = sub_94A98();
    swift_release(v18);
    v20 = v19[2];
    v141 = v19;
    if (v20)
    {
      left = UIEdgeInsetsZero.left;
      v21 = (unsigned __int8 *)(v19 + 7);
      v157 = _swiftEmptyArrayStorage;
      right = UIEdgeInsetsZero.right;
      bottom = UIEdgeInsetsZero.bottom;
      v147 = a2;
      v148 = v3;
      v154 = v12;
      v155 = v10;
      v152 = v16;
      v153 = v14;
      while (1)
      {
        v158 = v20;
        v22 = (void *)*((_QWORD *)v21 - 3);
        v23 = *((_QWORD *)v21 - 2);
        v24 = *((double *)v21 - 1);
        v25 = *v21;
        ObjectType = swift_getObjectType(v22);
        v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 16);
        v28 = swift_unknownObjectRetain(v22);
        v29 = (void *)v27(ObjectType, v23, v28);
        v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 8);
        v31 = swift_unknownObjectRetain(v22);
        v156 = v23;
        v32 = (void *)v30(ObjectType, v23, v31);
        swift_unknownObjectRelease(v22);
        v33 = objc_msgSend(v32, "collectionViewLayout");
        objc_msgSend(v32, "bounds");
        v35 = v34;
        v161 = v36;
        v38 = v37;
        v40 = v39;
        v163 = *(_QWORD *)&v24;
        if ((v25 & 1) != 0)
        {
          v169.origin.x = v10;
          v169.origin.y = v12;
          v169.size.width = v14;
          v169.size.height = v16;
          Width = CGRectGetWidth(v169);
        }
        else
        {
          Width = v24;
        }
        v170.origin.x = v10;
        v170.origin.y = v12;
        v170.size.width = v14;
        v170.size.height = v16;
        Height = CGRectGetHeight(v170);
        v42 = objc_msgSend(v3, "collectionView");
        v43 = right;
        v44 = bottom;
        v45 = left;
        top = UIEdgeInsetsZero.top;
        if (v42)
        {
          v47 = v42;
          objc_msgSend(v42, "contentInset");
          top = v48;
          v45 = v49;
          v44 = v50;
          v43 = v51;

        }
        *(double *)&v52 = Width + v43 + v45;
        *(double *)&v53 = Height + v44 + top;
        v171.origin.x = v35;
        *(_QWORD *)&v171.origin.y = v161;
        v171.size.width = v38;
        v171.size.height = v40;
        MinX = CGRectGetMinX(v171);
        v172.origin.x = v35;
        *(_QWORD *)&v172.origin.y = v161;
        v172.size.width = v38;
        v172.size.height = v40;
        MinY = CGRectGetMinY(v172);
        v56 = objc_msgSend(v29, "bounds");
        v58 = v57;
        v60 = v59;
        v62 = v61;
        v64 = v63;
        v65.n128_f64[0] = MinX;
        v66.n128_f64[0] = MinY;
        v67.n128_u64[0] = v52;
        v68.n128_u64[0] = v53;
        v69 = *(_QWORD *)&v24;
        if ((static CGRect.==~ infix(_:_:)(v56, v65, v66, v67, v68, v58, v60, v62, v64) & 1) == 0)
          objc_msgSend(v29, "setBounds:", MinX, MinY, *(double *)&v52, *(double *)&v53);
        v70 = objc_msgSend(v32, "bounds");
        v72 = v71;
        v74 = v73;
        v76 = v75;
        v78 = v77;
        v79.n128_f64[0] = MinX;
        v80.n128_f64[0] = MinY;
        v81.n128_u64[0] = v52;
        v82.n128_u64[0] = v53;
        v164 = v29;
        if ((static CGRect.==~ infix(_:_:)(v70, v79, v80, v81, v82, v72, v74, v76, v78) & 1) != 0)
        {
          v83 = 0;
          v160 = 0;
          v69 = 0;
          v84 = 0;
          v85 = 0;
          v162 = v33;
          if (v147)
            goto LABEL_20;
        }
        else
        {
          if (objc_msgSend(v33, "shouldInvalidateLayoutForBoundsChange:", MinX, MinY, *(double *)&v52, *(double *)&v53))
          {
            v85 = objc_msgSend(v33, "invalidationContextForBoundsChange:", MinX, MinY, *(double *)&v52, *(double *)&v53);
            swift_unknownObjectRetain(v22);
            v83 = v22;
            v84 = v25;
            v160 = v156;
          }
          else
          {
            v83 = 0;
            v160 = 0;
            v69 = 0;
            v84 = 0;
            v85 = 0;
          }
          objc_msgSend(v32, "setBounds:", MinX, MinY, *(double *)&v52, *(double *)&v53);
          v162 = v33;
          if (v147)
          {
LABEL_20:
            swift_retain();
            sub_CEA0C(v22, v156, v163, v25, (uint64_t)v166);
            v86 = *(double *)v166;
            v87 = *(double *)&v166[1];
            v88 = v167;
            v150 = v167;
            v151 = *(double *)v166;
            v149 = v168;
            v173.origin.x = v155;
            v173.origin.y = v154;
            v173.size.width = v153;
            v173.size.height = v152;
            v89 = CGRectGetMinX(v173);
            v174.origin.x = v86;
            v174.origin.y = v87;
            v174.size.width = v88;
            v174.size.height = v149;
            v90 = v89 - CGRectGetMinX(v174);
            if (v90 < 0.0)
              v91 = 0.0;
            else
              v91 = v90;
            v175.origin.x = v155;
            v175.origin.y = v154;
            v175.size.width = v153;
            v175.size.height = v152;
            v92 = CGRectGetMinY(v175);
            v176.size.width = v150;
            v176.origin.x = v151;
            v176.origin.y = v87;
            v176.size.height = v149;
            v93 = v92 - CGRectGetMinY(v176);
            if (v93 < 0.0)
              v94 = 0.0;
            else
              v94 = v93;
            v95 = objc_msgSend(v32, "_isAutomaticContentOffsetAdjustmentEnabled");
            objc_msgSend(v32, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
            v96 = objc_msgSend(v164, "bounds");
            v98 = v97;
            v100 = v99;
            v102 = v101;
            v104 = v103;
            v105.n128_f64[0] = v91;
            v106.n128_f64[0] = v94;
            v107.n128_u64[0] = v52;
            v108.n128_u64[0] = v53;
            if ((static CGRect.==~ infix(_:_:)(v96, v105, v106, v107, v108, v98, v100, v102, v104) & 1) == 0)
              objc_msgSend(v164, "setBounds:", v91, v94, *(double *)&v52, *(double *)&v53);
            v109 = objc_msgSend(v32, "bounds");
            v111 = v110;
            v113 = v112;
            v115 = v114;
            v117 = v116;
            v118.n128_f64[0] = v91;
            v119.n128_f64[0] = v94;
            v120.n128_u64[0] = v52;
            v121.n128_u64[0] = v53;
            if ((static CGRect.==~ infix(_:_:)(v109, v118, v119, v120, v121, v111, v113, v115, v117) & 1) == 0)
            {
              if (!v83)
              {
                if (objc_msgSend(v162, "shouldInvalidateLayoutForBoundsChange:", v91, v94, *(double *)&v52, *(double *)&v53))
                {
                  v85 = objc_msgSend(v162, "invalidationContextForBoundsChange:", v91, v94, *(double *)&v52, *(double *)&v53);
                  swift_unknownObjectRetain(v22);
                  v83 = v22;
                  v84 = v25;
                  v160 = v156;
                  v69 = v163;
                }
                else
                {
                  v83 = 0;
                }
              }
              objc_msgSend(v32, "setBounds:", v91, v94, *(double *)&v52, *(double *)&v53);
            }
            objc_msgSend(v143, "contentInset");
            v123 = v122;
            v125 = v124;
            v127 = v126;
            v129 = v128;
            objc_msgSend(v32, "contentInset");
            v131 = v130;
            v133 = v132;
            v135 = v134;
            if ((static CGFloat.==~ infix(_:_:)(v123, v136) & 1) == 0
              || (static CGFloat.==~ infix(_:_:)(v125, v131) & 1) == 0
              || (static CGFloat.==~ infix(_:_:)(v127, v133) & 1) == 0
              || (static CGFloat.==~ infix(_:_:)(v129, v135) & 1) == 0)
            {
              objc_msgSend(v32, "setContentInset:", v123, v125, v127, v129);
            }
            objc_msgSend(v32, "_setAutomaticContentOffsetAdjustmentEnabled:", v95);
            swift_release(v147);
            v33 = v162;
          }
        }
        v12 = v154;
        v10 = v155;
        v16 = v152;
        v14 = v153;
        if (v83)
        {
          sub_ED0CC(v83, v160, v69, v84, v85);
          swift_unknownObjectRetain(v83);
          v137 = v85;
          if ((swift_isUniquelyReferenced_nonNull_native(v157) & 1) == 0)
            v157 = sub_135A54(0, v157[2] + 1, 1, v157);
          v139 = v157[2];
          v138 = v157[3];
          if (v139 >= v138 >> 1)
            v157 = sub_135A54((_QWORD *)(v138 > 1), v139 + 1, 1, v157);
          v157[2] = v139 + 1;
          v140 = &v157[5 * v139];
          v140[4] = v83;
          v140[5] = v160;
          v140[6] = v69;
          *((_BYTE *)v140 + 56) = v84 != 0;
          v140[8] = v137;
          sub_ED0F8((uint64_t)v83, v160, v69, v84, v85);
          swift_unknownObjectRelease(v22);

          swift_unknownObjectRelease(v83);
          v33 = v162;
        }
        else
        {
          swift_unknownObjectRelease(v22);

        }
        v21 += 32;
        v20 = v158 - 1;
        v3 = v148;
        if (v158 == 1)
          goto LABEL_47;
      }
    }
    v157 = _swiftEmptyArrayStorage;
LABEL_47:
    swift_bridgeObjectRelease(v141);
    if (v142)
    {
      swift_beginAccess(v142+ OBJC_IVAR____TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext_componentInvalidationReferences, v165, 33, 0);
      sub_A595C((uint64_t)v157);
      swift_endAccess(v165);

    }
    else
    {

      *(_QWORD *)&result = swift_bridgeObjectRelease(v157).n128_u64[0];
    }
  }
  return result;
}

id sub_ECC70()
{
  return sub_606B0(type metadata accessor for CompositeCollectionViewLayout.InvalidationContext);
}

id sub_ECCB4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v1 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData;
  v2 = type metadata accessor for CompositeCollectionViewCountData();
  swift_allocObject(v2, 64, 7);
  v3 = v0;
  *(_QWORD *)&v0[v1] = sub_94B08((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData] = 0;
  v4 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes;
  *(_QWORD *)&v3[v4] = sub_CABF8((uint64_t)_swiftEmptyArrayStorage);
  v5 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes;
  *(_QWORD *)&v3[v5] = sub_CABF8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributesRevision] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_currentCollectionViewUpdates] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_isInvalidatingLayout] = 0;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for CompositeCollectionViewLayout();
  return objc_msgSendSuper2(&v7, "init");
}

id sub_ECDB8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData;
  v4 = type metadata accessor for CompositeCollectionViewCountData();
  swift_allocObject(v4, 64, 7);
  v5 = v1;
  *(_QWORD *)&v1[v3] = sub_94B08((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData] = 0;
  v6 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_decorationLayoutAttributes;
  *(_QWORD *)&v5[v6] = sub_CABF8((uint64_t)_swiftEmptyArrayStorage);
  v7 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributes;
  *(_QWORD *)&v5[v7] = sub_CABF8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_lastDecorationLayoutAttributesRevision] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_currentCollectionViewUpdates] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_isInvalidatingLayout] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for CompositeCollectionViewLayout();
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

id sub_ECED4()
{
  return sub_606B0(type metadata accessor for CompositeCollectionViewLayout);
}

uint64_t type metadata accessor for CompositeCollectionViewLayout()
{
  return objc_opt_self(_TtC12NowPlayingUI29CompositeCollectionViewLayout);
}

uint64_t type metadata accessor for CompositeCollectionViewLayout.InvalidationContext()
{
  return objc_opt_self(_TtCC12NowPlayingUI29CompositeCollectionViewLayout19InvalidationContext);
}

void destroy for CompositeCollectionViewLayout.InvalidationContext.ComponentInvalidationReference(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);

}

uint64_t initializeWithCopy for CompositeCollectionViewLayout.InvalidationContext.ComponentInvalidationReference(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v4 = (void *)*((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 32) = v4;
  swift_unknownObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t *assignWithCopy for CompositeCollectionViewLayout.InvalidationContext.ComponentInvalidationReference(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = v7;
  v8 = (void *)a2[4];
  v9 = (void *)a1[4];
  a1[4] = (uint64_t)v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for CompositeCollectionViewLayout.InvalidationContext.ComponentInvalidationReference(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for CompositeCollectionViewLayout.InvalidationContext.ComponentInvalidationReference()
{
  return &type metadata for CompositeCollectionViewLayout.InvalidationContext.ComponentInvalidationReference;
}

id sub_ED0CC(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_unknownObjectRetain(result);
    return a5;
  }
  return result;
}

void sub_ED0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {
    swift_unknownObjectRelease(a1);

  }
}

uint64_t sub_ED124()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_ED148()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_ED16C()
{
  uint64_t v0;

  sub_EB1B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_ED18C(double a1, double a2)
{
  char *v2;
  char *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  v6 = objc_msgSend(v2, "collectionView");
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, "traitCollection");

    objc_msgSend(v8, "displayScale");
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F60);
  v10 = Optional<A>.safeDisplayScale.getter(v9, &protocol witness table for CGFloat);
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_countData];
  v12 = type metadata accessor for CompositeCollectionViewLayoutData();
  v13 = swift_allocObject(v12, 80, 7);
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 56) = 0;
  *(_WORD *)(v13 + 64) = 1;
  swift_retain();
  *(_QWORD *)(v13 + 72) = sub_CA8E0((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v13 + 16) = v11;
  *(double *)(v13 + 24) = a1;
  *(double *)(v13 + 32) = a2;
  *(double *)(v13 + 40) = v10;
  return v13;
}

void sub_ED2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  char *v41;
  void *v42;
  id v43;
  NSString v44;
  Class isa;
  SEL *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  SEL *v63;
  uint64_t v64;
  void (*v65)(void);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  SEL *v71;
  _QWORD v72[10];

  v70 = a7;
  v71 = a8;
  v69 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - v20;
  v67 = OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData;
  v68 = a5;
  v22 = *(_QWORD *)(a5 + OBJC_IVAR____TtC12NowPlayingUI29CompositeCollectionViewLayout_layoutData);
  if (!v22)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v23 = *(_QWORD *)(v22 + 16);
  swift_retain();
  sub_94CB4(a2, a3, a4, (uint64_t)v14);
  v24 = swift_release(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v24) == 1)
  {
    sub_9944((uint64_t)v14, &qword_1FA938);
    return;
  }
  v25 = *(int *)(v15 + 48);
  v26 = &v21[v25];
  v27 = &v14[v25];
  v28 = *(_QWORD *)v14;
  v29 = *((_QWORD *)v14 + 1);
  v30 = *((_QWORD *)v14 + 2);
  v31 = v14[24];
  *(_QWORD *)v21 = *(_QWORD *)v14;
  *((_QWORD *)v21 + 1) = v29;
  *((_QWORD *)v21 + 2) = v30;
  v21[24] = v31;
  v32 = type metadata accessor for IndexPath(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = v27;
  v35 = v32;
  (*(void (**)(char *, char *))(v33 + 32))(v26, v34);
  v64 = v15;
  v36 = &v18[*(int *)(v15 + 48)];
  *(_QWORD *)v18 = v28;
  *((_QWORD *)v18 + 1) = v29;
  *((_QWORD *)v18 + 2) = v30;
  v18[24] = v31;
  v37 = v35;
  v65 = *(void (**)(void))(v33 + 16);
  v66 = v36;
  v65();
  ObjectType = swift_getObjectType(v28);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v29 + 8);
  v40 = swift_unknownObjectRetain(v28);
  v41 = v26;
  v42 = (void *)v39(ObjectType, v29, v40);
  swift_unknownObjectRelease(v28);
  v43 = objc_msgSend(v42, "collectionViewLayout");

  v44 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v46 = (SEL *)objc_msgSend(v43, *v71, v44, isa);

  v47 = *(void (**)(char *, uint64_t))(v33 + 8);
  v48 = v37;
  v47(v66, v37);
  if (!v46)
    goto LABEL_8;
  v71 = v46;
  v49 = &v18[*(int *)(v64 + 48)];
  v50 = *(void **)v21;
  v51 = *((_QWORD *)v21 + 1);
  v52 = *((_QWORD *)v21 + 2);
  v53 = v21[24];
  *(_QWORD *)v18 = *(_QWORD *)v21;
  *((_QWORD *)v18 + 1) = v51;
  *((_QWORD *)v18 + 2) = v52;
  v18[24] = v53;
  ((void (*)(char *, char *, uint64_t))v65)(v49, v41, v48);
  v54 = swift_unknownObjectRetain(v50);
  ((void (*)(char *, uint64_t, __n128))v47)(v49, v48, v54);
  v56 = v67;
  v55 = v68;
  v57 = *(_QWORD *)(v68 + v67);
  if (!v57)
    goto LABEL_10;
  swift_retain();
  sub_CEA0C(v50, v51, v52, v53, (uint64_t)v72);
  swift_release(v57);
  v58 = *(_QWORD *)(v55 + v56);
  if (v58)
  {
    v60 = *(double *)&v72[2];
    v59 = *(double *)&v72[3];
    v62 = *(double *)v72;
    v61 = *(double *)&v72[1];
    swift_retain();
    v63 = v71;
    sub_E8690(v71, v50, v51, v52, v53, v62, v61, v60, v59);
    swift_unknownObjectRelease(v50);

    swift_release(v58);
LABEL_8:
    sub_9944((uint64_t)v21, &qword_1FA940);
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_ED65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_200F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_ED6A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
  CGFloat vertical;
  uint64_t v7;
  void *v14;
  id result;

  *(_OWORD *)a1 = xmmword_16AE30;
  *(_OWORD *)(a1 + 16) = xmmword_16AE30;
  *(_OWORD *)(a1 + 32) = xmmword_16AE40;
  *(_BYTE *)(a1 + 48) = 4;
  *(_WORD *)(a1 + 49) = 0x8000;
  if (qword_1F9488 != -1)
    swift_once(&qword_1F9488, sub_370F8);
  v2 = MPULayoutSizeNoDimension;
  *(_QWORD *)(a1 + 56) = MPULayoutSizeNoDimension;
  *(_QWORD *)(a1 + 64) = 0x4034000000000000;
  *(_QWORD *)(a1 + 72) = v2;
  *(_OWORD *)(a1 + 80) = xmmword_172610;
  *(_OWORD *)(a1 + 96) = xmmword_170DA0;
  *(_OWORD *)(a1 + 112) = xmmword_172620;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *(CGFloat *)(a1 + 128) = UIEdgeInsetsZero.top;
  *(CGFloat *)(a1 + 136) = left;
  *(CGFloat *)(a1 + 144) = bottom;
  *(CGFloat *)(a1 + 152) = right;
  *(_OWORD *)(a1 + 160) = xmmword_172630;
  *(CGFloat *)(a1 + 176) = UIEdgeInsetsZero.top;
  *(CGFloat *)(a1 + 184) = left;
  *(CGFloat *)(a1 + 192) = bottom;
  *(CGFloat *)(a1 + 200) = right;
  *(_OWORD *)(a1 + 208) = xmmword_172640;
  *(_OWORD *)(a1 + 224) = xmmword_172640;
  *(_OWORD *)(a1 + 240) = xmmword_172650;
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  vertical = UIOffsetZero.vertical;
  *(_QWORD *)(a1 + 304) = &type metadata for StandardNowPlayingMetrics.TimeControlMetrics;
  *(_QWORD *)(a1 + 312) = &off_1D0BD0;
  v7 = swift_allocObject(&unk_1D0998, 176, 7);
  *(_QWORD *)(a1 + 280) = v7;
  *(_OWORD *)(v7 + 16) = xmmword_172660;
  *(UIFontWeight *)(v7 + 32) = UIFontWeightSemibold;
  *(_OWORD *)(v7 + 40) = xmmword_172670;
  *(_OWORD *)(v7 + 56) = xmmword_172680;
  __asm { FMOV            V0.2D, #6.0 }
  *(_OWORD *)(v7 + 72) = _Q0;
  *(_OWORD *)(v7 + 88) = _Q0;
  __asm { FMOV            V0.2D, #28.0 }
  *(_OWORD *)(v7 + 104) = _Q0;
  *(int64x2_t *)(v7 + 120) = vdupq_n_s64(0x4040000000000000uLL);
  *(_WORD *)(v7 + 136) = 257;
  *(CGFloat *)(v7 + 144) = UIOffsetZero.horizontal;
  *(CGFloat *)(v7 + 152) = vertical;
  *(CGFloat *)(v7 + 160) = UIOffsetZero.horizontal;
  *(CGFloat *)(v7 + 168) = vertical;
  *(_QWORD *)(a1 + 320) = 0;
  *(CGFloat *)(a1 + 328) = UIOffsetZero.horizontal;
  *(CGFloat *)(a1 + 336) = vertical;
  *(_QWORD *)(a1 + 344) = 0x4040000000000000;
  *(_QWORD *)(a1 + 352) = 0;
  v14 = (void *)objc_opt_self(MTMPUFontDescriptor);
  *(_QWORD *)(a1 + 360) = objc_msgSend(v14, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  result = objc_msgSend(v14, "fontDescriptorWithTextStyle:leadingAdjustment:", 0, 1);
  *(_QWORD *)(a1 + 368) = result;
  return result;
}

double sub_ED8A8()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_ED8B0()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_ED8B8()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double sub_ED8C0@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  id v7;
  id v8;
  int IsAccessibilityContentSizeCategory;
  char *v10;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  double Width;
  uint64_t v22;
  uint64_t v23;
  double result;
  CGRect v25;

  if (a2)
    v6 = UITraitCollection.screenSizeClass.getter();
  else
    v6 = &dword_0 + 1;
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  IsAccessibilityContentSizeCategory = _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v8);
  if (a2 && objc_msgSend(a2, "userInterfaceIdiom") == (char *)&dword_0 + 1)
  {
    v10 = (char *)objc_msgSend(a2, "horizontalSizeClass");
    _Q3 = xmmword_172690;
    v12 = 20.0;
    v13 = 0x4066000000000000;
    v14 = 38.0;
    v15 = 44.0;
    if (v10 == (_BYTE *)&dword_0 + 1 && a1)
    {
      v16 = a1;
      objc_msgSend(v16, "bounds");
      Width = CGRectGetWidth(v25);

      _Q3 = xmmword_172690;
      if (Width <= 320.0)
      {
LABEL_12:
        _Q3 = xmmword_172690;
        v14 = 30.0;
        v12 = 20.0;
        v22 = 0x405B800000000000;
LABEL_13:
        v13 = v22;
      }
      else
      {
        v13 = 0x4066000000000000;
        v14 = 38.0;
      }
      v15 = 44.0;
    }
  }
  else
  {
    _Q3 = xmmword_172690;
    v12 = 20.0;
    v14 = 38.0;
    v15 = 44.0;
    v13 = 0x4066000000000000;
    switch((unint64_t)v6)
    {
      case 2uLL:
        __asm { FMOV            V3.2D, #-30.0; jumptable 00000000000EDA38 case 2 }
        v14 = 30.0;
        v22 = 0x4059C00000000000;
        goto LABEL_13;
      case 3uLL:
      case 4uLL:
        goto LABEL_18;
      case 5uLL:
        v23 = 0x4069000000000000;
        goto LABEL_17;
      case 6uLL:
      case 7uLL:
        break;
      case 0xAuLL:
        v23 = 0x4064C00000000000;
LABEL_17:
        v13 = v23;
LABEL_18:
        if (IsAccessibilityContentSizeCategory)
          v12 = 33.0;
        else
          v12 = 20.0;
        v15 = 50.0;
        if (!IsAccessibilityContentSizeCategory)
          v15 = 44.0;
        v14 = 38.0;
        break;
      default:
        goto LABEL_12;
    }
  }
  *(double *)a3 = v12;
  *(_QWORD *)(a3 + 8) = 0x402A000000000000;
  *(double *)(a3 + 16) = v15;
  *(double *)(a3 + 24) = v15;
  *(_QWORD *)(a3 + 32) = 0x4038000000000000;
  *(_OWORD *)(a3 + 40) = _Q3;
  *(_QWORD *)(a3 + 56) = 0x4032000000000000;
  *(double *)(a3 + 64) = v14;
  *(_QWORD *)(a3 + 72) = v13;
  result = 24.0;
  *(_OWORD *)(a3 + 80) = xmmword_16AF70;
  return result;
}

double sub_EDB34()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

uint64_t sub_EDB40()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

double sub_EDB48()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double sub_EDB54()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

double sub_EDB5C()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double sub_EDB68()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

double sub_EDB74()
{
  uint64_t v0;

  return *(double *)(v0 + 208);
}

uint64_t sub_EDB80()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 49);
}

double sub_EDB88@<D0>(void *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  double result;
  __int128 v7;
  _OWORD v8[6];

  sub_ED8C0(a1, a2, (uint64_t)v8);
  v4 = v8[3];
  a3[2] = v8[2];
  a3[3] = v4;
  v5 = v8[5];
  a3[4] = v8[4];
  a3[5] = v5;
  result = *(double *)v8;
  v7 = v8[1];
  *a3 = v8[0];
  a3[1] = v7;
  return result;
}

uint64_t sub_EDBCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 176, 7);
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t getEnumTagSinglePayload for StandardNowPlayingMetrics.TimeControlMetrics(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 120);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StandardNowPlayingMetrics.TimeControlMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StandardNowPlayingMetrics.TimeControlMetrics()
{
  return &type metadata for StandardNowPlayingMetrics.TimeControlMetrics;
}

ValueMetadata *type metadata accessor for StandardNowPlayingUIConfiguration()
{
  return &type metadata for StandardNowPlayingUIConfiguration;
}

uint64_t initializeWithCopy for StandardNowPlayingMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v9 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 280, a2 + 280);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  v10 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v10;
  v11 = *(void **)(a2 + 360);
  v12 = *(void **)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v11;
  *(_QWORD *)(a1 + 368) = v12;
  v13 = v11;
  v14 = v12;
  return a1;
}

uint64_t assignWithCopy for StandardNowPlayingMetrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + 280), (_QWORD *)(a2 + 280));
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v4 = *(void **)(a2 + 360);
  v5 = *(void **)(a1 + 360);
  *(_QWORD *)(a1 + 360) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 368);
  v8 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for StandardNowPlayingMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)&v4 = *(_QWORD *)(a2 + 272);
  v5 = (_OWORD *)(a1 + 280);
  v6 = (_OWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v4;
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 280));
  v7 = v6[1];
  *v5 = *v6;
  v5[1] = v7;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v8 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v8;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v9 = *(void **)(a1 + 360);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);

  v10 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);

  return a1;
}

ValueMetadata *type metadata accessor for StandardNowPlayingMetrics()
{
  return &type metadata for StandardNowPlayingMetrics;
}

id sub_EE224()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TintColorObservingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TintColorObservingView()
{
  return objc_opt_self(_TtC12NowPlayingUI22TintColorObservingView);
}

uint64_t sub_EE288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  char v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  v68 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_201080);
  __chkstk_darwin(v3);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_201088);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_201090);
  __chkstk_darwin(v60);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_201098);
  __chkstk_darwin(v61);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2010A0);
  __chkstk_darwin(v62);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2010A8);
  v65 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2010B0);
  v18 = *(_QWORD *)(v17 - 8);
  v66 = v17;
  v67 = v18;
  __chkstk_darwin(v17);
  v64 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2010B8);
  v22 = sub_EE7BC(v2, (uint64_t)&v5[*(int *)(v21 + 44)]);
  v23 = static Edge.Set.vertical.getter(v22);
  v24 = EdgeInsets.init(_all:)(8.0);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_2808C((uint64_t)v5, (uint64_t)v8, &qword_201080);
  v31 = &v8[*(int *)(v6 + 36)];
  *v31 = v23;
  *((double *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_9944((uint64_t)v5, &qword_201080);
  v32 = type metadata accessor for TextContent(0);
  v33 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  v34 = Environment.init<A>(_:)(v32, v32, v33);
  LOBYTE(v2) = v35;
  sub_2808C((uint64_t)v8, (uint64_t)v10, &qword_201088);
  v36 = &v10[*(int *)(v60 + 36)];
  *(_QWORD *)v36 = v34;
  v36[8] = v2 & 1;
  sub_9944((uint64_t)v8, &qword_201088);
  v37 = Environment.init<A>(_:)(v32, v32, v33);
  LOBYTE(v2) = v38;
  sub_2808C((uint64_t)v10, (uint64_t)v12, &qword_201090);
  v39 = &v12[*(int *)(v61 + 36)];
  *(_QWORD *)v39 = v37;
  v39[8] = v2 & 1;
  sub_9944((uint64_t)v10, &qword_201090);
  sub_2808C((uint64_t)v12, (uint64_t)v14, &qword_201098);
  sub_9944((uint64_t)v12, &qword_201098);
  v40 = v59;
  v41 = *v59;
  v42 = sub_EFA48(&qword_2010C0, &qword_2010A0, (void (*)(void))sub_EFA00, (void (*)(void))sub_EFBC4);
  v43 = v62;
  View.environment<A>(_:)(v41, v62, v32, v42, v33);
  sub_9944((uint64_t)v14, &qword_2010A0);
  v44 = v40;
  v45 = *(_QWORD *)(*v40 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
  v46 = type metadata accessor for TextContent.LiveText(0);
  swift_retain();
  v69 = v43;
  v70 = v32;
  v71 = v42;
  v72 = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
  v48 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  v49 = v63;
  v50 = v64;
  View.environment<A>(_:)(v45, v63, v46, OpaqueTypeConformance2, v48);
  v51 = swift_release(v45);
  (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v16, v49, v51);
  v52 = *(_QWORD *)(*v44 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_presentationContext);
  v53 = type metadata accessor for TranscriptPresentationContext(0);
  swift_retain();
  v69 = v49;
  v70 = v46;
  v71 = OpaqueTypeConformance2;
  v72 = v48;
  v54 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
  v55 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  v56 = v66;
  View.environment<A>(_:)(v52, v66, v53, v54, v55);
  v57 = swift_release(v52);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v67 + 8))(v50, v56, v57);
}

uint64_t sub_EE7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  _BYTE *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;

  v56 = a2;
  v3 = type metadata accessor for TappablePaddingView(0);
  __chkstk_darwin(v3);
  v55 = &v46[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = (uint64_t *)&v46[-v6];
  __chkstk_darwin(v8);
  v10 = (uint64_t *)&v46[-v9];
  v12 = __chkstk_darwin(v11);
  v14 = &v46[-v13];
  v15 = static Alignment.leading.getter(v12);
  v16 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 16);
  *v10 = v15;
  v10[1] = v18;
  v10[2] = v16;
  v10[3] = v17;
  v19 = (uint64_t *)((char *)v10 + *(int *)(v3 + 24));
  *v19 = swift_getKeyPath(&unk_172800);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  sub_7AD1C((uint64_t)v10, (uint64_t)v14);
  v57 = 0;
  swift_retain();
  State.init(wrappedValue:)(&v58, &v57, &type metadata for Bool);
  v54 = v58;
  v53 = v59;
  v57 = 0;
  State.init(wrappedValue:)(&v58, &v57, &type metadata for Bool);
  v52 = v58;
  v21 = v59;
  v22 = type metadata accessor for TextContent(0);
  v23 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  v51 = Environment.init<A>(_:)(v22, v22, v23);
  LOBYTE(v19) = v24;
  v25 = type metadata accessor for TextContent.LiveText(0);
  v26 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  v49 = Environment.init<A>(_:)(v25, v25, v26);
  v50 = v27;
  v28 = type metadata accessor for TranscriptPresentationContext(0);
  v29 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  v30 = Environment.init<A>(_:)(v28, v28, v29);
  v47 = v31;
  v32 = static Alignment.trailing.getter(v30);
  v33 = *(_QWORD *)(a1 + 8);
  v48 = *(_QWORD *)(a1 + 16);
  v34 = v48;
  *v7 = v32;
  v7[1] = v35;
  v7[2] = v33;
  v7[3] = v34;
  v36 = (uint64_t *)((char *)v7 + *(int *)(v3 + 24));
  *v36 = swift_getKeyPath(&unk_172800);
  swift_storeEnumTagMultiPayload(v36, v20, 0);
  sub_7AD1C((uint64_t)v7, (uint64_t)v10);
  v37 = (uint64_t)v14;
  sub_7AD68((uint64_t)v14, (uint64_t)v7);
  v38 = v55;
  sub_7AD68((uint64_t)v10, (uint64_t)v55);
  v39 = v56;
  sub_7AD68((uint64_t)v7, v56);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_201100);
  v41 = v39 + *(int *)(v40 + 48);
  *(_BYTE *)v41 = v54;
  v42 = v53;
  *(_QWORD *)(v41 + 8) = v53;
  *(_BYTE *)(v41 + 16) = v52;
  v43 = v51;
  *(_QWORD *)(v41 + 24) = v21;
  *(_QWORD *)(v41 + 32) = v43;
  *(_BYTE *)(v41 + 40) = v19 & 1;
  v44 = v49;
  *(_QWORD *)(v41 + 48) = v49;
  *(_BYTE *)(v41 + 56) = v50 & 1;
  *(_QWORD *)(v41 + 64) = v30;
  *(_BYTE *)(v41 + 72) = v47 & 1;
  sub_7AD68((uint64_t)v38, v39 + *(int *)(v40 + 64));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_7ADAC((uint64_t)v10);
  sub_7ADAC(v37);
  sub_7ADAC((uint64_t)v38);
  swift_release(v30);
  swift_release(v44);
  swift_release(v43);
  swift_release(v21);
  swift_release(v42);
  return sub_7ADAC((uint64_t)v7);
}

uint64_t sub_EEB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  double v9;
  __n128 v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  double *v16;

  v7 = a3 & 1;
  swift_retain();
  v8 = sub_56DA0(a2, v7);
  swift_release(a2);
  v9 = sub_127898();
  v10 = swift_release(v8);
  v11 = static UnitPoint.leading.getter(v10);
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_201130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a4, a1, v14);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_201110);
  v16 = (double *)(a4 + *(int *)(result + 36));
  *v16 = v9;
  v16[1] = v9;
  v16[2] = v11;
  *((_QWORD *)v16 + 3) = v13;
  return result;
}

double sub_EEC1C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double result;
  _QWORD v9[3];
  char v10;

  v1 = *v0;
  v2 = *((_BYTE *)v0 + 8);
  v3 = static Animation.easeInOut.getter();
  v9[2] = v1;
  v10 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_201108);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_201110);
  v6 = sub_27A8C(&qword_201118, &qword_201108, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v7 = sub_EFF34();
  View.animation<A>(_:body:)(v3, sub_EFF28, v9, v4, v5, v6, v7);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_EECE4@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  Swift::String v25;

  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_201138);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_retain();
  v10 = sub_56DA0(v9, v5);
  swift_release(a1);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC12NowPlayingUI11TextContent_liveText);
  KeyPath = swift_getKeyPath(&unk_172998);
  v24[0] = v11;
  v13 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v24, KeyPath, v13);
  swift_release(KeyPath);
  if (*(_BYTE *)(v11 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__isActive) == 1)
  {
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v15._countAndFlagsBits = 0xD000000000000025;
    v25._object = (void *)0x800000000018AFA0;
    v15._object = (void *)0x800000000018AF70;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0xD00000000000001ALL;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v25);
    countAndFlagsBits = v17._countAndFlagsBits;
    object = v17._object;
    swift_release(v10);

  }
  else
  {
    swift_release(v10);
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v24[0] = countAndFlagsBits;
  v24[1] = object;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_201140);
  v21 = sub_27A8C(&qword_201148, &qword_201140, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v22 = sub_11CEC();
  View.accessibilityValue<A>(_:)(v24, v20, &type metadata for String, v21, v22);
  swift_bridgeObjectRelease(object);
  return sub_EFFC0((uint64_t)v8, a3);
}

uint64_t sub_EEF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_EECE4(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_EEF14()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_201150);
  v1 = sub_27A8C(&qword_201158, &qword_201150, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  return View.accessibilityCustomAttribute(_:value:)(0xD000000000000025, 0x800000000018AFC0, 1702195828, 0xE400000000000000, v0, v1);
}

uint64_t sub_EEF9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for Font.TextStyle.title3(_:), v3, v5);
  v8 = enum case for Font.Design.serif (_:);
  v9 = type metadata accessor for Font.Design(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
  v11 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  v12 = static Font.Weight.regular.getter(v11);
  v13 = static Font.system(_:design:weight:)(v7, v2, *(_QWORD *)&v12, 0);
  sub_9944((uint64_t)v2, &qword_1FB060);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_210278 = v13;
  return result;
}

uint64_t sub_EF0E8()
{
  uint64_t result;

  result = sub_EF104();
  qword_210280 = result;
  return result;
}

uint64_t sub_EF104()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  NSString *v4;
  NSString *v5;
  unint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  id v13;
  __n128 v14;
  double v15;
  id v16;
  _BYTE v18[48];
  _BYTE v19[48];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_200FB8);
  inited = swift_initStackObject(v0, v19);
  *(_OWORD *)(inited + 16) = xmmword_16B3D0;
  *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_200FC0);
  v3 = swift_initStackObject(v2, v18);
  *(_OWORD *)(v3 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v3 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v3 + 40) = UIFontWeightRegular;
  v4 = UIFontDescriptorTraitsAttribute;
  v5 = UIFontWeightTrait;
  *(_QWORD *)(inited + 40) = sub_CA4C0(v3);
  v6 = sub_CA5C8(inited);
  sub_7938C();
  v7 = (void *)((uint64_t (*)(void))static UIFont.title3.getter)();
  v8 = objc_msgSend(v7, "fontDescriptor");

  v9 = objc_msgSend(v8, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignSerif);
  if (v9)
  {
    sub_C63D4(v6);
    v11 = v10;
    swift_bridgeObjectRelease(v6);
    type metadata accessor for AttributeName(0);
    sub_8330(&qword_1F99D0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_16A58C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v9, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    if (v13)
    {
      objc_msgSend(v13, "pointSize");
      v16 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v13, v15);

      return (uint64_t)v16;
    }
  }
  else
  {
    v14 = swift_bridgeObjectRelease(v6);
  }
  return static UIFont.title3.getter(v14);
}

uint64_t *sub_EF31C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

double sub_EF400(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*a1);
  swift_release(a1[2]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_EF480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  swift_retain();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    *v6 = *v7;
    swift_retain();
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

uint64_t *sub_EF53C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_retain();
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_9944((uint64_t)a1 + v9, (uint64_t *)&unk_1FE3C0);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  return a1;
}

uint64_t sub_EF628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DeviceMetrics(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_EF6D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_9944((uint64_t)a1 + v8, (uint64_t *)&unk_1FE3C0);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FE3C0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DeviceMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_EF7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EF7C4);
}

uint64_t sub_EF7C4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_EF844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EF850);
}

char *sub_EF850(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAF40);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TextContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_201020;
  if (!qword_201020)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TextContentView);
  return result;
}

void sub_EF904(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for () + 64;
  sub_9D9E0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_EF988()
{
  return sub_8330(&qword_1FDF60, type metadata accessor for TextContent, (uint64_t)&unk_174884);
}

uint64_t sub_EF9B4(uint64_t a1)
{
  uint64_t result;

  result = sub_8330(&qword_1FE3A8, type metadata accessor for TextContentView, (uint64_t)&unk_1727AC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_EF9F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A266C, 1);
}

uint64_t sub_EFA00()
{
  return sub_EFA48(&qword_2010C8, &qword_201098, (void (*)(void))sub_EFA24, (void (*)(void))sub_EFB80);
}

uint64_t sub_EFA24()
{
  return sub_EFA48(&qword_2010D0, &qword_201090, (void (*)(void))sub_EFAB8, (void (*)(void))sub_EFB3C);
}

uint64_t sub_EFA48(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_EFAB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2010D8;
  if (!qword_2010D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201088);
    sub_27A8C(&qword_2010E0, &qword_201080, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2010D8);
  }
  return result;
}

unint64_t sub_EFB3C()
{
  unint64_t result;

  result = qword_2010E8;
  if (!qword_2010E8)
  {
    result = swift_getWitnessTable(&unk_172944, &type metadata for TextContentView.ActiveScaleEffect);
    atomic_store(result, (unint64_t *)&qword_2010E8);
  }
  return result;
}

unint64_t sub_EFB80()
{
  unint64_t result;

  result = qword_2010F0;
  if (!qword_2010F0)
  {
    result = swift_getWitnessTable(&unk_1728F4, &type metadata for TextContentView.AccessibilityLabel);
    atomic_store(result, (unint64_t *)&qword_2010F0);
  }
  return result;
}

unint64_t sub_EFBC4()
{
  unint64_t result;

  result = qword_2010F8;
  if (!qword_2010F8)
  {
    result = swift_getWitnessTable(&unk_1728A4, &type metadata for TextContentView.AccessibilityShouldIncludeMediaDescriptionsRotor);
    atomic_store(result, (unint64_t *)&qword_2010F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContentView.AccessibilityShouldIncludeMediaDescriptionsRotor()
{
  return &type metadata for TextContentView.AccessibilityShouldIncludeMediaDescriptionsRotor;
}

ValueMetadata *type metadata accessor for TextContentView.AccessibilityLabel()
{
  return &type metadata for TextContentView.AccessibilityLabel;
}

uint64_t initializeBufferWithCopyOfBuffer for TextContentView.ActiveScaleEffect(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain(v3);
  return a1;
}

uint64_t *_s12NowPlayingUI15TextContentViewV18AccessibilityLabelVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

uint64_t *assignWithTake for TextContentView.ActiveScaleEffect(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_release(v4);
  return a1;
}

uint64_t _s12NowPlayingUI15TextContentViewV18AccessibilityLabelVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s12NowPlayingUI15TextContentViewV18AccessibilityLabelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContentView.ActiveScaleEffect()
{
  return &type metadata for TextContentView.ActiveScaleEffect;
}

uint64_t sub_EFD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2010B0);
  v1 = type metadata accessor for TranscriptPresentationContext(255);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2010A8);
  v3 = type metadata accessor for TextContent.LiveText(255);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2010A0);
  v10 = type metadata accessor for TextContent(255);
  v11 = sub_EFA48(&qword_2010C0, &qword_2010A0, (void (*)(void))sub_EFA00, (void (*)(void))sub_EFBC4);
  v12 = sub_8330((unint64_t *)&qword_1F9D58, type metadata accessor for TextContent, (uint64_t)&unk_174808);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
  v5 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  v9 = v2;
  v10 = v3;
  v11 = OpaqueTypeConformance2;
  v12 = v5;
  v6 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
  v7 = sub_8330((unint64_t *)&qword_1F9D38, type metadata accessor for TranscriptPresentationContext, (uint64_t)&unk_16AB30);
  v9 = v0;
  v10 = v1;
  v11 = v6;
  v12 = v7;
  return swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
}

uint64_t sub_EFEF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A26E4, 1);
}

uint64_t sub_EFF08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A26BC, 1);
}

uint64_t sub_EFF18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A2694, 1);
}

uint64_t sub_EFF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_EEB60(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

unint64_t sub_EFF34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201120;
  if (!qword_201120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201110);
    sub_27A8C(&qword_201128, &qword_201130, (uint64_t)&protocol conformance descriptor for PlaceholderContentView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201120);
  }
  return result;
}

uint64_t sub_EFFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_201138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_F0008()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201108);
  v1[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201110);
  v1[2] = sub_27A8C(&qword_201118, &qword_201108, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v1[3] = sub_EFF34();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.animation<A>(_:body:)>>, 1);
}

uint64_t sub_F0090()
{
  return sub_F00C4(&qword_201160, &qword_201138, &qword_201148, &qword_201140);
}

uint64_t sub_F00C4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_27A8C(a3, a4, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_F015C()
{
  return sub_F00C4(&qword_201168, &qword_201170, &qword_201158, &qword_201150);
}

double sub_F019C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[4];
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_172A28);
  v4 = swift_getKeyPath(&unk_172A50);
  static Published.subscript.getter(v10, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v11;
  result = *(double *)v10;
  v7 = v10[1];
  v8 = v10[2];
  v9 = v10[3];
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_F0224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI22NowPlayingTipViewModel__style;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_201268);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_F0278()
{
  return type metadata accessor for NowPlayingTipViewModel(0);
}

uint64_t type metadata accessor for NowPlayingTipViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_2011A8;
  if (!qword_2011A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingTipViewModel);
  return result;
}

void sub_F02BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_F0328();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_F0328()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2011B8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for NowPlayingTipViewModel.Style);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2011B8);
  }
}

unint64_t destroy for NowPlayingTipViewModel.Style(_QWORD *a1)
{
  unint64_t result;

  result = a1[2];
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a1[4]);
    swift_release(a1[6]);
    return swift_release(a1[8]);
  }
  return result;
}

uint64_t initializeWithCopy for NowPlayingTipViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v4 = *(_QWORD *)(a2 + 64);
    v8 = *(_OWORD *)(a2 + 32);
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = v4;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    swift_retain(v4);
  }
  return a1;
}

uint64_t assignWithCopy for NowPlayingTipViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v14 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v15 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v15;
      v16 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v16;
      v17 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v17;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v15);
      swift_retain(v16);
      swift_retain(v17);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v18 = *(_OWORD *)(a2 + 16);
    v19 = *(_OWORD *)(a2 + 32);
    v20 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v19;
    *(_OWORD *)(a1 + 48) = v20;
    *(_OWORD *)(a1 + 16) = v18;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
    swift_release(*(_QWORD *)(a1 + 48));
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_retain(v9);
  swift_release(v10);
  v12 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v11;
  swift_retain(v11);
  swift_release(v13);
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NowPlayingTipViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
    swift_release(*(_QWORD *)(a1 + 48));
    swift_release(*(_QWORD *)(a1 + 64));
LABEL_5:
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingTipViewModel.Style(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NowPlayingTipViewModel.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_F0774(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_F078C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingTipViewModel.Style()
{
  return &type metadata for NowPlayingTipViewModel.Style;
}

uint64_t sub_F07D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingTipViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t destroy for NowPlayingTipConfiguration(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[6]);
  return swift_release(a1[8]);
}

uint64_t initializeWithCopy for NowPlayingTipConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for NowPlayingTipConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for NowPlayingTipConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingTipConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingTipConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingTipConfiguration()
{
  return &type metadata for NowPlayingTipConfiguration;
}

uint64_t sub_F0A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned __int8 v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_9944(a1, (uint64_t *)&unk_1FB3C0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
    {
LABEL_6:
      v16 = 0;
      return swift_task_create(v8, v16, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v17 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v9);
  v12 = swift_unknownObjectRetain(v9);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
  v15 = v14;
  swift_unknownObjectRelease(v9);
  if (!(v15 | v13))
    goto LABEL_6;
  v19[0] = 0;
  v19[1] = 0;
  v16 = v19;
  v19[2] = v13;
  v19[3] = v15;
  return swift_task_create(v8, v16, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t sub_F0BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_F0BD0(a1, a2, a3, &qword_2016A8);
}

uint64_t sub_F0BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_F0BD0(a1, a2, a3, &qword_2018B0);
}

uint64_t sub_F0BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_9944(a1, (uint64_t *)&unk_1FB3C0);
    v10 = 7168;
    v11 = *(_QWORD *)(a3 + 16);
    if (v11)
    {
LABEL_3:
      v12 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v11);
      v14 = swift_unknownObjectRetain(v11);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v12, v14);
      v17 = v16;
      swift_unknownObjectRelease(v11);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v10 = v18 | 0x1C00;
    v11 = *(_QWORD *)(a3 + 16);
    if (v11)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = __swift_instantiateConcreteTypeFromMangledName(a4);
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v10, v20, v19, a2, a3);
}

uint64_t sub_F0D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_F0BD0(a1, a2, a3, &qword_2017F8);
}

uint64_t sub_F0D10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_F0D3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  _OWORD *v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t (*v68)();
  __int128 v69;
  uint64_t v70;
  uint64_t (**v71)();
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  __int128 v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t OpaqueTypeConformance2;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158[8];
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  char v163[8];
  uint64_t v164;
  __int128 v165;
  unint64_t v166;
  unint64_t v167;
  double v168;
  __int128 v169;
  unint64_t v170;
  __int128 v171;

  v2 = v1;
  v157 = a1;
  v156 = type metadata accessor for AccessibilityChildBehavior(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for AutomaticHoverEffect(0);
  v143 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v139 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for ContentShapeKinds(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v129 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_201568);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v118 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_201570);
  __chkstk_darwin(v120);
  v8 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_201578);
  __chkstk_darwin(v126);
  v125 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_201580);
  __chkstk_darwin(v128);
  v127 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_201588);
  v134 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v130 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_201590);
  __chkstk_darwin(v133);
  v131 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_201598);
  __chkstk_darwin(v135);
  v132 = (uint64_t)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015A0);
  __chkstk_darwin(v141);
  v140 = (uint64_t)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015A8);
  v148 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v144 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015B0);
  v152 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v145 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2015B8);
  __chkstk_darwin(v153);
  v150 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = *(_OWORD *)(v2 + 8);
  v119 = *((_QWORD *)&v171 + 1);
  v18 = type metadata accessor for NowPlayingSpeedPicker.ViewModel(0);
  v121 = v18;
  v19 = sub_8330(&qword_1FB9B0, type metadata accessor for NowPlayingSpeedPicker.ViewModel, (uint64_t)&unk_172BB8);
  v122 = v19;
  v20 = swift_retain();
  v21 = ObservedObject.init(wrappedValue:)(v20, v18, v19);
  v23 = v22;
  KeyPath = swift_getKeyPath(&unk_172BF0);
  v164 = v2;
  v159 = v21;
  v160 = v23;
  v161 = KeyPath;
  v162 = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015C8);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015D0);
  v27 = sub_F40CC();
  v28 = sub_27A8C(&qword_2015F0, &qword_2015D0, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v29 = v118;
  v30 = Menu.init(content:label:)(sub_F4088, v163, sub_F4090, v158, v25, v26, v27, v28);
  v31 = static Alignment.center.getter(v30);
  v33 = v32;
  v34 = v123;
  v35 = v29;
  v36 = v29;
  v37 = v124;
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v8, v35, v124);
  v38 = &v8[*(int *)(v120 + 36)];
  *(_QWORD *)v38 = v21;
  *((_QWORD *)v38 + 1) = v23;
  v149 = v23;
  v147 = KeyPath;
  *((_QWORD *)v38 + 2) = KeyPath;
  v38[24] = 0;
  *((_QWORD *)v38 + 4) = v31;
  *((_QWORD *)v38 + 5) = v33;
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  swift_retain();
  swift_retain();
  v39(v36, v37);
  v124 = *(_QWORD *)v2;
  v169 = *(_OWORD *)(v2 + 24);
  v170 = *(_QWORD *)(v2 + 40);
  v40 = (_OWORD *)swift_allocObject(&unk_1D1040, 64, 7);
  v41 = *(_OWORD *)(v2 + 16);
  v40[1] = *(_OWORD *)v2;
  v40[2] = v41;
  v40[3] = *(_OWORD *)(v2 + 32);
  v42 = v125;
  sub_2808C((uint64_t)v8, v125, &qword_201570);
  v43 = (_QWORD *)(v42 + *(int *)(v126 + 36));
  *v43 = sub_F4180;
  v43[1] = v40;
  sub_24D30((uint64_t)&v171);
  swift_retain();
  sub_F4188((uint64_t)&v169);
  v44 = sub_9944((uint64_t)v8, &qword_201570);
  v45 = v129;
  static ContentShapeKinds.hoverEffect.getter(v44);
  v165 = v169;
  v166 = v170;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015F8);
  State.wrappedValue.getter(&v168, v46);
  v47 = (v168 + -20.0) * 0.5;
  v48 = -v47;
  v49 = v47 * 0.5 + -10.0;
  v50 = v128;
  v51 = (uint64_t)v127;
  v52 = &v127[*(int *)(v128 + 36)];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_201600);
  v54 = v137;
  v55 = v138;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(&v52[*(int *)(v53 + 40)], v45, v138);
  *(double *)v52 = v48;
  *((double *)v52 + 1) = v49;
  *((_QWORD *)v52 + 2) = 0;
  v52[24] = 0;
  sub_2808C(v42, v51, &qword_201578);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v55);
  v56 = sub_9944(v42, &qword_201578);
  v57 = v139;
  static CustomHoverEffect<>.automatic.getter(v56);
  v58 = sub_F41B0();
  v59 = sub_8330(&qword_201650, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v60 = v130;
  v61 = v142;
  View.hoverEffect<A>(_:isEnabled:)(v57, 1, v50, v142, v58, v59);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v57, v61);
  sub_9944(v51, &qword_201580);
  v62 = v119;
  swift_retain();
  v63 = static ObservableObject.environmentStore.getter();
  v64 = v134;
  v65 = (uint64_t)v131;
  v66 = v136;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v131, v60, v136);
  v67 = (uint64_t *)(v65 + *(int *)(v133 + 36));
  *v67 = v63;
  v67[1] = v62;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v60, v66);
  v68 = (uint64_t (*)())swift_allocObject(&unk_1D1068, 64, 7);
  v69 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v68 + 1) = *(_OWORD *)v2;
  *((_OWORD *)v68 + 2) = v69;
  *((_OWORD *)v68 + 3) = *(_OWORD *)(v2 + 32);
  v70 = v132;
  sub_2808C(v65, v132, &qword_201590);
  v71 = (uint64_t (**)())(v70 + *(int *)(v135 + 36));
  *v71 = sub_F4358;
  v71[1] = v68;
  v71[2] = 0;
  v71[3] = 0;
  sub_24D30((uint64_t)&v171);
  swift_retain();
  sub_F4188((uint64_t)&v169);
  sub_9944(v65, &qword_201590);
  v72 = swift_getKeyPath(&unk_172C20);
  v73 = swift_getKeyPath(&unk_172C48);
  v74 = swift_retain();
  static Published.subscript.getter(&v165, v74, v72, v73);
  swift_release(v72);
  swift_release(v73);
  sub_54C10((uint64_t)&v171);
  LOBYTE(v65) = v165;
  v75 = swift_getKeyPath(&unk_172C68);
  v76 = swift_allocObject(&unk_1D1090, 17, 7);
  *(_BYTE *)(v76 + 16) = (v65 & 1) == 0;
  v77 = v140;
  sub_2808C(v70, v140, &qword_201598);
  v78 = v141;
  v79 = (uint64_t *)(v77 + *(int *)(v141 + 36));
  *v79 = v75;
  v79[1] = (uint64_t)sub_F4720;
  v79[2] = v76;
  sub_9944(v70, &qword_201598);
  v80 = swift_getKeyPath(&unk_172C98);
  v81 = swift_getKeyPath(&unk_172CC0);
  v82 = swift_retain();
  static Published.subscript.getter(&v165, v82, v80, v81);
  swift_release(v80);
  swift_release(v81);
  sub_54C10((uint64_t)&v171);
  v83 = (_OWORD *)swift_allocObject(&unk_1D10B8, 64, 7);
  v84 = *(_OWORD *)(v2 + 16);
  v83[1] = *(_OWORD *)v2;
  v83[2] = v84;
  v83[3] = *(_OWORD *)(v2 + 32);
  sub_24D30((uint64_t)&v171);
  swift_retain();
  sub_F4188((uint64_t)&v169);
  v85 = sub_F4780();
  v86 = sub_1F700();
  v87 = v144;
  View.onChange<A>(of:initial:_:)(&v165, 0, sub_F4778, v83, v78, &type metadata for PlayerPlaybackSpeed, v85, v86);
  swift_release(v83);
  v88 = sub_9944(v77, &qword_2015A0);
  v89 = v154;
  static AccessibilityChildBehavior.combine.getter(v88);
  *(_QWORD *)&v165 = v78;
  *((_QWORD *)&v165 + 1) = &type metadata for PlayerPlaybackSpeed;
  v166 = v85;
  v167 = v86;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v91 = v145;
  v92 = v146;
  View.accessibilityElement(children:)(v89, v146, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v89, v156);
  v93 = v92;
  (*(void (**)(char *, uint64_t))(v148 + 8))(v87, v92);
  v94 = LocalizedStringKey.init(stringLiteral:)(0x6B63616279616C50, 0xEE00646565705320);
  v95 = Text.init(_:tableName:bundle:comment:)(v94);
  v97 = v96;
  v99 = v98;
  v101 = v100 & 1;
  *(_QWORD *)&v165 = v93;
  *((_QWORD *)&v165 + 1) = OpaqueTypeConformance2;
  v102 = swift_getOpaqueTypeConformance2(&v165, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v103 = (uint64_t)v150;
  v104 = v151;
  View.accessibilityLabel(_:)(v95, v97, v101, v99, v151, v102);
  sub_25404(v95, v97, v101);
  v105 = swift_bridgeObjectRelease(v99);
  (*(void (**)(char *, uint64_t, __n128))(v152 + 8))(v91, v104, v105);
  v106 = swift_getKeyPath(&unk_172C98);
  v107 = swift_getKeyPath(&unk_172CC0);
  v108 = swift_retain();
  static Published.subscript.getter(&v165, v108, v106, v107);
  swift_release(v106);
  swift_release(v107);
  sub_54C10((uint64_t)&v171);
  *(_QWORD *)&v165 = PlayerPlaybackSpeed.localizedName.getter();
  *((_QWORD *)&v165 + 1) = v109;
  v110 = sub_11CEC();
  v111 = Text.init<A>(_:)(&v165, &type metadata for String, v110);
  v113 = v112;
  v115 = v114;
  LOBYTE(v104) = v116 & 1;
  ModifiedContent<>.accessibilityValue(_:)();
  swift_release(v147);
  swift_release(v149);
  sub_25404(v111, v113, v104);
  swift_bridgeObjectRelease(v115);
  return sub_9944(v103, (uint64_t *)&unk_2015B8);
}

double sub_F1A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = type metadata accessor for NowPlayingSpeedPicker.ViewModel(0);
  v4 = sub_8330(&qword_1FB9B0, type metadata accessor for NowPlayingSpeedPicker.ViewModel, (uint64_t)&unk_172BB8);
  v5 = ObservedObject.projectedValue.getter(v1, v2, v3, v4);
  KeyPath = swift_getKeyPath(&unk_172C98);
  ObservedObject.Wrapper.subscript.getter(&v12, KeyPath, v5, v4);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = v12;
  v8 = v13;
  v10[0] = v12;
  v10[1] = v13;
  v11 = v14;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_201790);
  sub_F49BC();
  sub_F4A00();
  Picker.init(selection:label:content:)(v10);
  swift_release(v8);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_F1BD4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_172C98);
  v5 = swift_getKeyPath(&unk_172CC0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_F1C50(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_172C98);
  v5 = swift_getKeyPath(&unk_172CC0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_F1CC0(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  __int128 v11;

  v11 = *(_OWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_172CE8);
  v2 = swift_getKeyPath(&unk_172D10);
  v3 = swift_retain();
  static Published.subscript.getter(&v10, v3, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  sub_54C10((uint64_t)&v11);
  v4 = swift_getKeyPath(&unk_172D30);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA9A8);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2017B0);
  v7 = sub_27A8C(&qword_2017E8, &qword_1FA9A8, (uint64_t)&protocol conformance descriptor for [A]);
  v8 = sub_F4A64();
  return ForEach<>.init(_:id:content:)(&v10, v4, sub_F1DE0, 0, v5, v6, v7, &protocol witness table for Float, v8);
}

uint64_t sub_F1DE0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = PlayerPlaybackSpeed.localizedName.getter();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_BYTE *)(a2 + 32) = v3;
  *(_BYTE *)(a2 + 33) = v3;
  return result;
}

uint64_t sub_F1E24(_OWORD *a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  v5[0] = *a1;
  v5[1] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2015F8);
  return State.wrappedValue.setter(v5, v3);
}

uint64_t sub_F1E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char v107[8];
  _QWORD v108[4];
  char v109[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016B0);
  v105 = *(_QWORD *)(v1 - 8);
  v106 = v1;
  __chkstk_darwin(v1);
  v103 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v104 = (char *)&v75 - v4;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016B8);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v94 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016C0);
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  __chkstk_darwin(v6);
  v96 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016C8);
  v101 = *(_QWORD *)(v8 - 8);
  v102 = v8;
  __chkstk_darwin(v8);
  v100 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016D0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v87 = (char *)&v75 - v12;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016D8);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016E0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016E8);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016F0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016F8);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201700);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v85 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v90 = (char *)&v75 - v27;
  swift_beginAccess(v0 + 32, v109, 0, 0);
  v91 = v0 + 32;
  sub_2808C(v0 + 32, (uint64_t)v108, &qword_1FB2B8);
  v28 = v108[3];
  result = sub_9944((uint64_t)v108, &qword_1FB2B8);
  if (!v28)
  {
    v30 = v0;
    dispatch thunk of PlaybackController.$tracklist.getter(result);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201710);
    v32 = sub_27A8C(&qword_1FFB40, &qword_2016F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.map<A>(_:)(sub_F3110, 0, v17, v31, v32);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v33 = sub_27A8C(&qword_201720, &qword_2016F8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v34 = Publisher.share()(v21, v33);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    v108[0] = v34;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_201728);
    v36 = sub_27A8C(&qword_201730, &qword_201728, (uint64_t)&protocol conformance descriptor for Publishers.Share<A>);
    v37 = v90;
    Publisher<>.makeConnectable()(v35, v36);
    swift_release(v34);
    v76 = sub_27A8C(&qword_201738, (uint64_t *)&unk_201700, (uint64_t)&protocol conformance descriptor for Publishers.MakeConnectable<A>);
    v38 = v93;
    Publisher.compactMap<A>(_:)(sub_F3180, 0, v93, &type metadata for Float, v76);
    v39 = sub_27A8C(&qword_201740, &qword_2016D8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v40 = v79;
    v41 = v78;
    Publisher<>.removeDuplicates()(v78, v39, &protocol witness table for Float);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v14, v41);
    v42 = sub_27A8C(&qword_201748, &qword_2016E0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v43 = v82;
    v44 = v81;
    Publisher.compactMap<A>(_:)(sub_F31CC, 0, v81, &type metadata for PlayerPlaybackSpeed, v42);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v44);
    v45 = *(_QWORD *)(v30 + 16);
    v46 = v45 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__playbackSpeed;
    swift_beginAccess(v45 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__playbackSpeed, v108, 33, 0);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_201750);
    v48 = v87;
    Published.projectedValue.getter(v47);
    swift_endAccess(v108);
    v49 = sub_27A8C(&qword_201758, &qword_2016E8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v50 = v84;
    Publisher<>.assign(to:)(v48, v84, v49);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v50);
    v51 = v88;
    v52 = v86;
    v53 = v89;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v86, v48, v89);
    swift_beginAccess(v46, v108, 33, 0);
    Published.projectedValue.setter(v52, v47);
    swift_endAccess(v108);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v53);
    v54 = v92;
    v55 = v85;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v85, v37, v38);
    v108[0] = *(_QWORD *)(v30 + 72);
    swift_retain();
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
    v57 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v58 = v94;
    Publishers.CombineLatest.init(_:_:)(v55, v108, v38, v56, v76, v57);
    v59 = sub_27A8C(&qword_201770, &qword_2016B8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    v60 = v96;
    v61 = v97;
    Publisher.map<A>(_:)(sub_F3260, 0, v97, &type metadata for Bool, v59);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v61);
    v62 = sub_27A8C(&qword_201778, &qword_2016C0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v63 = v99;
    v64 = v100;
    Publisher<>.removeDuplicates()(v99, v62, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v60, v63);
    v65 = v45 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__isEnabled;
    swift_beginAccess(v45 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__isEnabled, v108, 33, 0);
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
    v67 = v104;
    Published.projectedValue.getter(v66);
    swift_endAccess(v108);
    v68 = sub_27A8C(&qword_201788, &qword_2016C8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v69 = v102;
    Publisher<>.assign(to:)(v67, v102, v68);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v64, v69);
    v71 = v105;
    v70 = v106;
    v72 = v103;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v103, v67, v106);
    swift_beginAccess(v65, v108, 33, 0);
    Published.projectedValue.setter(v72, v66);
    swift_endAccess(v108);
    v73.n128_f64[0] = (*(double (**)(char *, uint64_t))(v71 + 8))(v67, v70);
    Publishers.MakeConnectable.connect()(v108, v38, v73);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v38);
    v74 = v91;
    swift_beginAccess(v91, v107, 33, 0);
    sub_33098((uint64_t)v108, v74);
    return swift_endAccess(v107);
  }
  return result;
}

double sub_F2820(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  double result;
  _QWORD v29[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  v9 = *a3;
  v10 = type metadata accessor for TaskPriority(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
  v12 = swift_allocObject(&unk_1D10E0, 41, 7);
  *(_QWORD *)(v12 + 16) = 0;
  v13 = (_QWORD *)(v12 + 16);
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = v9;
  *(_BYTE *)(v12 + 40) = v8;
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10);
  v15 = swift_retain();
  if (v14 == 1)
  {
    sub_9944((uint64_t)v7, (uint64_t *)&unk_1FB3C0);
    v16 = 0;
    v17 = 0;
    v18 = 7168;
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v15);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    v18 = v19 | 0x1C00;
    v20 = *v13;
    if (*v13)
    {
      v21 = *(_QWORD *)(v12 + 24);
      ObjectType = swift_getObjectType(*v13);
      v23 = swift_unknownObjectRetain(v20);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v21, v23);
      v17 = v24;
      swift_unknownObjectRelease(v20);
    }
    else
    {
      v16 = 0;
      v17 = 0;
    }
  }
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016A8);
  if (v17 | v16)
  {
    v29[0] = 0;
    v29[1] = 0;
    v26 = v29;
    v29[2] = v16;
    v29[3] = v17;
  }
  else
  {
    v26 = 0;
  }
  v27 = swift_task_create(v18, v26, v25, &unk_2016A0, v12);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

uint64_t sub_F29E8@<X0>(uint64_t a1@<X8>)
{
  return sub_F0D3C(a1);
}

uint64_t sub_F2A20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  _QWORD v86[2];
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  void (*v94)(uint64_t@<X8>);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;

  v84 = a3;
  v83 = a2;
  v85 = a4;
  v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201810);
  v79 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_201820);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v74 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_201828);
  __chkstk_darwin(v75);
  v72 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_201830);
  __chkstk_darwin(v11);
  v82 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_201838);
  __chkstk_darwin(v80);
  v81 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_172C98);
  v15 = swift_getKeyPath(&unk_172CC0);
  v16 = swift_retain();
  static Published.subscript.getter(v86, v16, KeyPath, v15);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v15);
  v17 = PlayerPlaybackSpeed.localizedName.getter();
  v19 = v18;
  v20 = static Font.Weight.semibold.getter(v17);
  v21 = Text.fontWeight(_:)(*(_QWORD *)&v20, 0, v17, v19, 0, _swiftEmptyArrayStorage);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease(v19);
  v28 = v25 & 1;
  v29 = enum case for Font.Design.rounded(_:);
  v30 = type metadata accessor for Font.Design(0);
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v8, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v8, 0, 1, v30);
  v32 = Text.fontDesign(_:)(v8, v21, v23, v28, v27);
  v34 = v33;
  v71 = v35;
  v70 = v36 & 1;
  sub_25404(v21, v23, v28);
  swift_bridgeObjectRelease(v27);
  sub_9944((uint64_t)v8, &qword_1FB060);
  v37 = swift_getKeyPath(&unk_172E28);
  v67 = v37;
  v38 = swift_getKeyPath(&unk_172E58);
  v69 = static Alignment.center.getter(v38);
  v68 = v39;
  v40 = swift_getKeyPath(&unk_172C20);
  v41 = swift_getKeyPath(&unk_172C48);
  v42 = swift_retain();
  static Published.subscript.getter(v86, v42, v40, v41);
  swift_release(a1);
  swift_release(v40);
  swift_release(v41);
  v43 = 0.17;
  if (LOBYTE(v86[0]))
    v43 = 1.0;
  v86[0] = v32;
  v86[1] = v34;
  v44 = v70;
  v87 = v70;
  v45 = v71;
  v88 = v71;
  v89 = v37;
  v90 = 0x3FE0000000000000;
  v91 = v38;
  v46 = v38;
  v92 = 1;
  v93 = 0;
  v94 = sub_F3074;
  v95 = 0;
  v96 = v69;
  v97 = v68;
  v98 = v43;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_201840);
  v48 = sub_3FA84(&qword_201848, &qword_201840, (void (*)(void))sub_F513C);
  v49 = v73;
  View.mcui.getter(v47, v48);
  v50 = v32;
  v51 = (uint64_t)v72;
  sub_25404(v50, v34, v44);
  swift_release(v46);
  swift_release(v67);
  swift_bridgeObjectRelease(v45);
  swift_retain();
  LOBYTE(v46) = sub_F35DC();
  v52 = swift_release(a1);
  v53 = v46 & 1;
  v54 = v74;
  v55 = v78;
  MCUINamespace<A>.glowEffect(isActive:)(v53, v78, v48, v52);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v55);
  v56 = v76;
  v57 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v51, v54, v77);
  *(_WORD *)(v51 + *(int *)(v75 + 36)) = 257;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v57);
  LOBYTE(v57) = v84 & 1;
  v58 = v83;
  sub_2609C(v83, v84 & 1);
  LOBYTE(v56) = sub_569B8(v58, v57);
  v59 = sub_261F4(v58, v57);
  if ((v56 & 1) != 0)
    v61 = static Alignment.center.getter(v59);
  else
    v61 = static Alignment.leading.getter(v60);
  v63 = v82;
  sub_10ABF8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v82, 0.0, 1, INFINITY, 0, v61, v62);
  sub_9944(v51, &qword_201828);
  v64 = v81;
  sub_2808C(v63, v81, &qword_201830);
  v65 = v64 + *(int *)(v80 + 36);
  *(_QWORD *)v65 = 0xC024000000000000;
  *(_BYTE *)(v65 + 8) = 0;
  sub_9944(v63, &qword_201830);
  return sub_F52C8(v64, v85);
}

void sub_F3074(uint64_t a1@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = static Color.clear.getter();
  v3 = GeometryProxy.size.getter();
  *(_QWORD *)a1 = v2;
  *(double *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
}

uint64_t sub_F30B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_F2A20(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_F30C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[5];
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 3);
  *(_QWORD *)(a1 + 40) = v5;
  swift_retain(v5);
  swift_retain(v3);
  return swift_retain(v4);
}

void sub_F3110(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  v3 = *a1;
  if (v3 && (v4 = objc_msgSend(v3, "playingItem")) != 0)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "playbackRateCommand");

  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
}

id *sub_F3180@<X0>(id *result@<X0>, uint64_t a2@<X8>)
{
  id v3;
  int v4;

  v3 = *result;
  if (*result)
    result = (id *)objc_msgSend(*result, "preferredPlaybackRate");
  else
    v4 = 0;
  *(_DWORD *)a2 = v4;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

float *sub_F31CC@<X0>(float *result@<X0>, char *a2@<X8>)
{
  float v2;
  char v3;

  v2 = *result;
  if (*result == 0.75)
  {
    *a2 = 0;
  }
  else if (v2 == 1.0)
  {
    *a2 = 1;
  }
  else if (v2 == 1.25)
  {
    *a2 = 2;
  }
  else if (v2 == 1.5)
  {
    *a2 = 3;
  }
  else if (v2 == 1.75)
  {
    *a2 = 4;
  }
  else
  {
    if (v2 == 2.0)
      v3 = 5;
    else
      v3 = 6;
    *a2 = v3;
  }
  return result;
}

uint64_t sub_F3260@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(_QWORD *)result != 0) & ~*(_BYTE *)(result + 8);
  return result;
}

uint64_t sub_F327C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 96) = a5;
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = a4;
  return swift_task_switch(sub_F3298, 0, 0);
}

uint64_t sub_F3298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = *(char *)(v0 + 96);
  v2 = type metadata accessor for PlaybackController.TransportCommand(0);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(float *)__swift_allocate_boxed_opaque_existential_1((_QWORD *)(v0 + 16)) = flt_172E8C[v1];
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 104))();
  v5 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
     + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  v3 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                  + 1));
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_F3360;
  return ((uint64_t (*)(uint64_t, _QWORD))v5)(v0 + 16, 0);
}

uint64_t sub_F3360(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 72);
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_F33F4;
  }
  else
  {
    *(_QWORD *)(v4 + 88) = a1;
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v4 + 16));
    v6 = sub_F33DC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_F33DC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F33F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F3428()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_9944((uint64_t)(v0 + 4), &qword_1FB2B8);
  swift_release(v0[9]);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for NowPlayingSpeedPicker.Controller()
{
  return objc_opt_self(_TtCV12NowPlayingUI21NowPlayingSpeedPicker10Controller);
}

uint64_t sub_F348C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_172C98);
  v2 = swift_getKeyPath(&unk_172CC0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_F34FC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_172CE8);
  v2 = swift_getKeyPath(&unk_172D10);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_F356C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_172C20);
  v2 = swift_getKeyPath(&unk_172C48);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

BOOL sub_F35DC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_172C20);
  v2 = swift_getKeyPath(&unk_172C48);
  static Published.subscript.getter((uint64_t *)((char *)&v6 + 1), v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  if (BYTE1(v6) != 1)
    return 0;
  v3 = swift_getKeyPath(&unk_172C98);
  v4 = swift_getKeyPath(&unk_172CC0);
  static Published.subscript.getter(&v6, v0, v3, v4);
  swift_release(v3);
  swift_release(v4);
  return v6 != 1;
}

uint64_t sub_F36AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__playbackSpeed;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_201750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__availablePlaybackSpeeds;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2017F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__isEnabled;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_F3758()
{
  return type metadata accessor for NowPlayingSpeedPicker.ViewModel(0);
}

uint64_t type metadata accessor for NowPlayingSpeedPicker.ViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_201378, (uint64_t)&nominal type descriptor for NowPlayingSpeedPicker.ViewModel);
}

void sub_F3774(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_41ED0(319, &qword_201388, (uint64_t)&type metadata for PlayerPlaybackSpeed);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_F3834(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_41ED0(319, (unint64_t *)&qword_2013A0, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 3, v8, a1 + 80);
      }
    }
  }
}

void sub_F3834(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_201390)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1FA9A8);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_201390);
  }
}

uint64_t sub_F388C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v9 = a2[5];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = *(int *)(a3 + 20);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    v13 = type metadata accessor for NowPlayingButtonID(0);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain(v4);
    swift_retain(v8);
    swift_retain(v9);
    v14(v11, v12, v13);
    *(_BYTE *)(v7 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t sub_F3970(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[5]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for NowPlayingButtonID(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_F39C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v7 = *a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = a2[2];
  *(_QWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  v9 = a2[5];
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  v13 = type metadata accessor for NowPlayingButtonID(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v14(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_F3A84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  a1[1] = a2[1];
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  v10 = a1[5];
  v11 = a2[5];
  a1[5] = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for NowPlayingButtonID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_F3B54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NowPlayingButtonID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_F3BD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_release(v8);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v9 = a1[5];
  a1[5] = a2[5];
  swift_release(v9);
  v10 = *(int *)(a3 + 20);
  v11 = (uint64_t)a1 + v10;
  v12 = (uint64_t)a2 + v10;
  v13 = type metadata accessor for NowPlayingButtonID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_F3C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F3C88);
}

uint64_t sub_F3C88(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NowPlayingButtonID(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_F3D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F3D10);
}

char *sub_F3D10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NowPlayingButtonID(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingSpeedPicker(uint64_t a1)
{
  return sub_256F8(a1, qword_201520, (uint64_t)&nominal type descriptor for NowPlayingSpeedPicker);
}

uint64_t sub_F3D98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "0";
  result = type metadata accessor for NowPlayingButtonID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_172B10;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_F3E18()
{
  unint64_t result;

  result = qword_201560;
  if (!qword_201560)
  {
    result = swift_getWitnessTable(&unk_172B68, &type metadata for NowPlayingSpeedPicker.ContentView);
    atomic_store(result, (unint64_t *)&qword_201560);
  }
  return result;
}

uint64_t sub_F3E5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A2964, 1);
}

uint64_t sub_F3E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  _UNKNOWN **v19;
  char v20;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  v1 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2017F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_201750);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__playbackSpeed;
  v20 = 1;
  Published.init(initialValue:)(&v20, &type metadata for PlayerPlaybackSpeed);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v13 = v0 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__availablePlaybackSpeeds;
  v19 = &off_1C52F0;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA9A8);
  Published.init(initialValue:)(&v19, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  v15 = v0 + OBJC_IVAR____TtCV12NowPlayingUI21NowPlayingSpeedPicker9ViewModel__isEnabled;
  v18 = 0;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v15, v3, v17);
  return v0;
}

uint64_t sub_F4020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingSpeedPicker.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_F405C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

double sub_F4088()
{
  uint64_t v0;

  return sub_F1A9C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_F4090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  swift_retain();
  return sub_2609C(v4, v5);
}

unint64_t sub_F40CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2015D8;
  if (!qword_2015D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2015C8);
    sub_F4138();
    sub_427EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2015D8);
  }
  return result;
}

unint64_t sub_F4138()
{
  unint64_t result;

  result = qword_2015E0;
  if (!qword_2015E0)
  {
    result = swift_getWitnessTable(&unk_172DD4, &type metadata for NowPlayingSpeedPicker.PickerLabel);
    atomic_store(result, (unint64_t *)&qword_2015E0);
  }
  return result;
}

uint64_t sub_F4180(_OWORD *a1)
{
  uint64_t v1;

  return sub_F1E24(a1, v1 + 16);
}

uint64_t sub_F4188(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 16));
  return a1;
}

unint64_t sub_F41B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201608;
  if (!qword_201608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201580);
    sub_F4234();
    sub_27A8C(&qword_201648, &qword_201600, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201608);
  }
  return result;
}

unint64_t sub_F4234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201610;
  if (!qword_201610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201578);
    sub_F42B8();
    sub_27A8C(&qword_201638, &qword_201640, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201610);
  }
  return result;
}

unint64_t sub_F42B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201618;
  if (!qword_201618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201570);
    sub_27A8C(&qword_201620, &qword_201568, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    sub_27A8C(&qword_201628, &qword_201630, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201618);
  }
  return result;
}

uint64_t sub_F4358()
{
  return sub_F1E74();
}

void sub_F4378()
{
  xmmword_201270 = 0uLL;
}

double sub_F4388@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_1F9548 != -1)
    swift_once(&qword_1F9548, sub_F4378);
  result = *(double *)&xmmword_201270;
  *a1 = xmmword_201270;
  return result;
}

_QWORD *sub_F43DC(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  return a2(&v3);
}

uint64_t sub_F4410()
{
  uint64_t v0;

  v0 = type metadata accessor for NowPlayingButtonID(0);
  __swift_allocate_value_buffer(v0, qword_210288);
  __swift_project_value_buffer(v0, (uint64_t)qword_210288);
  return NowPlayingButtonID.init(_:)(0x6369506465657073, 0xEB0000000072656BLL);
}

uint64_t sub_F4474@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_172CE8);
  v5 = swift_getKeyPath(&unk_172D10);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_F44F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_172CE8);
  v5 = swift_getKeyPath(&unk_172D10);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_F4568@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_172C20);
  v5 = swift_getKeyPath(&unk_172C48);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_F45E8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_172C20);
  v5 = swift_getKeyPath(&unk_172C48);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_F465C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_F4688@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_F46B4(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_F46D8(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_F46FC(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_F4710()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_F4720(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t objectdestroyTm_7()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

double sub_F4778(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_F2820(a1, a2, (uint64_t *)(v2 + 16));
}

unint64_t sub_F4780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201658;
  if (!qword_201658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2015A0);
    sub_3FA84(&qword_201660, &qword_201598, (void (*)(void))sub_F4824);
    sub_27A8C(&qword_201680, &qword_201688, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201658);
  }
  return result;
}

unint64_t sub_F4824()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_201668;
  if (!qword_201668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201590);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201580);
    v2[1] = type metadata accessor for AutomaticHoverEffect(255);
    v2[2] = sub_F41B0();
    v2[3] = sub_8330(&qword_201650, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
    sub_27A8C(&qword_201670, &qword_201678, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201668);
  }
  return result;
}

uint64_t sub_F4914()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_F4940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  v6 = swift_task_alloc(dword_20169C);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_27CA8;
  *(_BYTE *)(v6 + 96) = v5;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = v4;
  return swift_task_switch(sub_F3298, 0, 0);
}

uint64_t sub_F49B4()
{
  uint64_t v0;

  return sub_F1CC0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_F49BC()
{
  unint64_t result;

  result = qword_201798;
  if (!qword_201798)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayerPlaybackSpeed, &type metadata for PlayerPlaybackSpeed);
    atomic_store(result, (unint64_t *)&qword_201798);
  }
  return result;
}

unint64_t sub_F4A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2017A0;
  if (!qword_2017A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201790);
    sub_F4A64();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_2017A0);
  }
  return result;
}

unint64_t sub_F4A64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2017A8;
  if (!qword_2017A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2017B0);
    sub_F4AE8();
    sub_27A8C(&qword_2017D8, &qword_2017E0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2017A8);
  }
  return result;
}

unint64_t sub_F4AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2017B8;
  if (!qword_2017B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2017C0);
    sub_27A8C(&qword_2017C8, &qword_2017D0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2017B8);
  }
  return result;
}

float sub_F4B74@<S0>(char *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = flt_172E8C[*a1];
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for SizePreferenceKey()
{
  return &type metadata for SizePreferenceKey;
}

uint64_t destroy for NowPlayingSpeedPicker.PickerLabel(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return sub_261F4(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for NowPlayingSpeedPicker.PickerLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_2609C(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for NowPlayingSpeedPicker.PickerLabel(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release(v4);
  v5 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_2609C(v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_261F4(v6, v7);
  return a1;
}

uint64_t assignWithTake for NowPlayingSpeedPicker.PickerLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;
  sub_261F4(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingSpeedPicker.PickerLabel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingSpeedPicker.PickerLabel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingSpeedPicker.PickerLabel()
{
  return &type metadata for NowPlayingSpeedPicker.PickerLabel;
}

uint64_t destroy for NowPlayingSpeedPicker.ContentView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for NowPlayingSpeedPicker.ContentView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  v6 = a2[5];
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for NowPlayingSpeedPicker.ContentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[3] = a2[3];
  a1[4] = a2[4];
  v8 = a1[5];
  v9 = a2[5];
  a1[5] = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

uint64_t *assignWithTake for NowPlayingSpeedPicker.ContentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_release(v6);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v7 = a1[5];
  a1[5] = a2[5];
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingSpeedPicker.ContentView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingSpeedPicker.ContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingSpeedPicker.ContentView()
{
  return &type metadata for NowPlayingSpeedPicker.ContentView;
}

unint64_t sub_F4F94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  ValueMetadata *v5;
  unint64_t v6;
  unint64_t v7;

  result = qword_201800;
  if (!qword_201800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2015B8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2015A8);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2015A0);
    v5 = &type metadata for PlayerPlaybackSpeed;
    v6 = sub_F4780();
    v7 = sub_1F700();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v4 = v2;
    v5 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_8330((unint64_t *)&qword_1FAF00, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201800);
  }
  return result;
}

uint64_t sub_F5084(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A298C, 1);
}

void sub_F5094(double *a1@<X8>)
{
  *a1 = EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_F50BC(double *a1)
{
  return EnvironmentValues.minimumScaleFactor.setter(*a1);
}

uint64_t sub_F50E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_F5110(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_F513C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201850;
  if (!qword_201850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201858);
    sub_F51C0();
    sub_27A8C(&qword_2018A0, &qword_2018A8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201850);
  }
  return result;
}

unint64_t sub_F51C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201860;
  if (!qword_201860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201868);
    sub_F5244();
    sub_27A8C(&qword_201890, &qword_201898, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201860);
  }
  return result;
}

unint64_t sub_F5244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201870;
  if (!qword_201870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201878);
    sub_27A8C(&qword_201880, &qword_201888, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201870);
  }
  return result;
}

uint64_t sub_F52C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_201838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_F5314()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2018B8;
  if (!qword_2018B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201838);
    sub_3FA84(&qword_2018C0, &qword_201830, (void (*)(void))sub_F53B8);
    sub_27A8C((unint64_t *)&unk_2018D0, &qword_1FC4A0, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2018B8);
  }
  return result;
}

unint64_t sub_F53B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2018C8;
  if (!qword_2018C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201828);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_201840);
    v2[1] = sub_3FA84(&qword_201848, &qword_201840, (void (*)(void))sub_F513C);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of MCUINamespace<A>.glowEffect(isActive:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2018C8);
  }
  return result;
}

id sub_F5474()
{
  return sub_F54AC(&qword_1F9560, (uint64_t)qword_2102B8, (uint64_t)sub_F57D4);
}

id sub_F5490()
{
  return sub_F54AC(&qword_1F9568, (uint64_t)qword_2102D0, (uint64_t)sub_F57F8);
}

id sub_F54AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  __n128 v18;
  unint64_t v19;
  void *v20;
  id v21;
  _OWORD v23[2];
  _BYTE v24[24];
  uint64_t v25;

  v7 = v3;
  v8 = type metadata accessor for NSUserDefaults.Keys(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1)
    swift_once(a1, a3);
  v12 = __swift_project_value_buffer(v8, a2);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  NSUserDefaults.Keys.rawValue.getter(v13);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v7, "objectForKey:", v16);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v23, v17);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_AD43C((uint64_t)v23, (uint64_t)v24);
  v18 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
  if (!v25)
  {
    sub_43D44((uint64_t)v24);
    return 0;
  }
  v19 = sub_F5B48();
  if ((swift_dynamicCast(v23, v24, (char *)&type metadata for Any + 8, v19, 6) & 1) == 0)
    return 0;
  v20 = *(void **)&v23[0];
  v21 = objc_msgSend(*(id *)&v23[0], "BOOLValue");

  return v21;
}

id sub_F5648()
{
  return sub_F54AC(&qword_1F9558, (uint64_t)qword_2102A0, (uint64_t)sub_F57B0);
}

BOOL sub_F5664()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  __n128 v12;
  _BOOL8 v13;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for NSUserDefaults.Keys(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F9560 != -1)
    swift_once(&qword_1F9560, sub_F57D4);
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_2102B8);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  NSUserDefaults.Keys.rawValue.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v1, "objectForKey:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v15, v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_AD43C((uint64_t)v15, (uint64_t)v16);
  v12 = swift_bridgeObjectRelease(v9);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);
  v13 = v17 != 0;
  sub_43D44((uint64_t)v16);
  return v13;
}

uint64_t sub_F57B0(uint64_t a1)
{
  return sub_F5840(a1, qword_2102A0, 0xD000000000000020, 0x800000000018B170);
}

uint64_t sub_F57D4(uint64_t a1)
{
  return sub_F5840(a1, qword_2102B8, 0xD00000000000001BLL, 0x800000000018B1C0);
}

uint64_t sub_F57F8(uint64_t a1)
{
  return sub_F5840(a1, qword_2102D0, 0xD00000000000001ALL, 0x800000000018B1A0);
}

uint64_t sub_F581C(uint64_t a1)
{
  return sub_F5840(a1, qword_2102E8, 0xD00000000000001CLL, 0x800000000018B150);
}

uint64_t sub_F5840(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for NSUserDefaults.Keys(0);
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  return NSUserDefaults.Keys.init(_:)(a3, a4);
}

uint64_t sub_F589C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSString v9;
  NSString v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  sub_43DCC(a1, (uint64_t)&v12);
  if (v13)
  {
    sub_ECEC(&v12, &v14);
    v6 = v15;
    v7 = __swift_project_boxed_opaque_existential_1(&v14, v15);
    v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setObject:forKey:", v8, v9, swift_bridgeObjectRelease(a3).n128_f64[0]);
    swift_unknownObjectRelease(v8);

    sub_43D44(a1);
    return __swift_destroy_boxed_opaque_existential_0(&v14);
  }
  else
  {
    sub_43D44((uint64_t)&v12);
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "removeObjectForKey:", v11, swift_bridgeObjectRelease(a3).n128_f64[0]);

    return sub_43D44(a1);
  }
}

float sub_F59A0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  __n128 v12;
  unint64_t v13;
  void *v14;
  float v15;
  float v16;
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for NSUserDefaults.Keys(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F9570 != -1)
    swift_once(&qword_1F9570, sub_F581C);
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_2102E8);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  NSUserDefaults.Keys.rawValue.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v1, "objectForKey:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v18, v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_AD43C((uint64_t)v18, (uint64_t)v19);
  v12 = swift_bridgeObjectRelease(v9);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);
  if (!v20)
  {
    sub_43D44((uint64_t)v19);
    return 0.7;
  }
  v13 = sub_F5B48();
  if ((swift_dynamicCast(v18, v19, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    return 0.7;
  v14 = *(void **)&v18[0];
  objc_msgSend(*(id *)&v18[0], "floatValue");
  v16 = v15;

  return v16;
}

unint64_t sub_F5B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FD878;
  if (!qword_1FD878)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FD878);
  }
  return result;
}

void sub_F5B84(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v3 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController);
  if (a1)
  {
    v5 = v4;
    v6 = v4;
LABEL_7:
    *(_QWORD *)(v1 + v3) = a1;
    v9 = a1;

    sub_F5F40(v4);
    return;
  }
  if (!v4)
  {
    v6 = 0;
    v5 = 0;
    goto LABEL_7;
  }
  v5 = v4;
  objc_msgSend(v5, "willMoveToParentViewController:", 0);
  v7 = objc_msgSend(v5, "view");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "removeFromSuperview");

    objc_msgSend(v5, "removeFromParentViewController");
    v6 = *(void **)(v1 + v3);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_F5C70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_playerPath);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_playerPath) = a1;
  v8 = a1;
  if (!v4)
  {
    if (!a1)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_F5D6C();
    sub_F6A98();
    goto LABEL_7;
  }
  if (!a1)
    goto LABEL_6;
  sub_F174(0, (unint64_t *)&unk_201960, MPCPlayerPath_ptr);
  v5 = v4;
  v6 = v8;
  v7 = static NSObject.== infix(_:_:)(v5, v6);

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

uint64_t sub_F5D34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

void sub_F5D6C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  double v7;
  char v8;
  double v9;
  char v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_playerPath];
  if (v2 && (v3 = objc_msgSend(v2, "route")) != 0)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "isDeviceRoute");

  }
  else
  {
    v5 = 1;
  }
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
  if (v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode] == 2)
  {
    swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent]);

    v7 = *(double *)(v6 + 144);
    v8 = *(_BYTE *)(v6 + 152);
    *(_QWORD *)(v6 + 144) = 0x4008000000000000;
    *(_BYTE *)(v6 + 152) = 0;
    if ((v8 & 1) == 0 && (static CGFloat.==~ infix(_:_:)(v7, 3.0) & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    v9 = *(double *)(v6 + 144);
    v10 = *(_BYTE *)(v6 + 152);
    *(_QWORD *)(v6 + 144) = 0x4018000000000000;
    *(_BYTE *)(v6 + 152) = 0;
    swift_retain(v6);
    if ((v10 & 1) == 0 && (static CGFloat.==~ infix(_:_:)(v9, 6.0) & 1) != 0)
      goto LABEL_13;
  }
  v11 = *(void (**)(uint64_t))(v6 + 184);
  if (v11)
  {
    v12 = *(_QWORD *)(v6 + 192);
    v13 = swift_retain(v12);
    v11(v13);
    sub_145A0((uint64_t)v11, v12);
  }
LABEL_13:
  swift_release(v6);
  if ((v5 & 1) != 0)
  {
    v14 = 0x80;
    v15 = &dword_4;
  }
  else
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.1);
    v14 = 0;
  }
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
  swift_retain(v16);
  sub_C35BC(v15, 0, v14);
  sub_FFE90(v15, 0, v14);
  objc_msgSend(v1, "setNeedsLayout", swift_release(v16).n128_f64[0]);
  sub_791E8(v15, 0, v14);
}

void sub_F5F40(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  char v32[96];

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController];
  if (!v3)
  {
    if (!a1)
      return;
    goto LABEL_16;
  }
  if (!a1 || v3 != a1)
  {
    v8 = v3;
    v9 = objc_msgSend(v8, "view");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "superview");
      v12 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent;
      if (!v11)
        goto LABEL_13;
      v13 = v11;
      v14 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent] + 104);
      sub_F174(0, (unint64_t *)&qword_1FD4A0, UIView_ptr);
      v15 = v14;
      v16 = v13;
      LOBYTE(v13) = static NSObject.== infix(_:_:)(v16, v15);

      if ((v13 & 1) == 0)
LABEL_13:
        objc_msgSend(*(id *)(*(_QWORD *)&v2[v12] + 104), "addSubview:", v10);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FD948);
      inited = swift_initStackObject(v17, v32);
      *(_OWORD *)(inited + 16) = xmmword_16E1B0;
      *(_QWORD *)(inited + 32) = v3;
      *(_OWORD *)(inited + 40) = xmmword_172EC0;
      *(_BYTE *)(inited + 56) = 0;
      *(_QWORD *)(inited + 64) = v3;
      *(_QWORD *)(inited + 72) = 0xD000000000000014;
      *(_QWORD *)(inited + 80) = 0x800000000018B3A0;
      *(_BYTE *)(inited + 88) = 0;
      v19 = swift_allocObject(&unk_1D15E8, 24, 7);
      *(_QWORD *)(v19 + 16) = v2;
      v20 = type metadata accessor for DeprecatedBinding();
      swift_allocObject(v20, 40, 7);
      v21 = v8;
      v22 = v2;
      v23 = DeprecatedBinding.init(_:configurationBlock:)(inited, (uint64_t)sub_F8AD4, v19);

      v24 = *(_QWORD *)&v22[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoBinding];
      *(_QWORD *)&v22[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoBinding] = v23;
      swift_retain(v23);
      objc_msgSend(v22, "setNeedsLayout", swift_release(v24).n128_f64[0]);
      swift_release(v23);
      return;
    }

LABEL_16:
    v25 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoBinding];
    *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoBinding] = 0;
    objc_msgSend(v1, "setNeedsLayout", swift_release(v25).n128_f64[0]);
    return;
  }
  v30 = a1;
  v4 = objc_msgSend(v1, "nextResponder");
  if (v4)
  {
    while (1)
    {
      v31 = v4;
      v5 = objc_opt_self(UIViewController);
      v6 = (void *)swift_dynamicCastObjCClass(v31, v5);
      if (v6)
        break;
      v7 = objc_msgSend(v31, "nextResponder");

      v4 = v7;
      if (!v7)
        goto LABEL_7;
    }
    v26 = v6;
    objc_msgSend(v6, "addChildViewController:", v30);
    v27 = objc_retain(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent]
                            + 104));
    v28 = objc_msgSend(v30, "view");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v27, "addSubview:", v28);

      objc_msgSend(v30, "didMoveToParentViewController:", v26);
      objc_msgSend(v2, "setNeedsLayout");

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
LABEL_7:

  }
}

char *sub_F62D0(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  id v47;
  Class isa;
  NSString v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  Class v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  objc_super v60;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode] = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityScale] = 0x3FF0000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoBinding] = 0;
  v11 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent;
  type metadata accessor for ArtworkComponentImageView();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = v5;
  v14 = objc_msgSend(v12, "init");
  v15 = _s9ComponentCMa();
  swift_allocObject(v15, 256, 7);
  *(_QWORD *)&v5[v11] = sub_FF910(v14);
  v16 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_borderColor] = 0;
  v17 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView;
  *(_QWORD *)&v13[v17] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_playerPath] = 0;
  v13[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates] = 0;

  v60.receiver = v13;
  v60.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v60, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  v19 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent;
  v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
  v21 = type metadata accessor for Artwork.CachingContext();
  v22 = swift_allocObject(v21, 16, 7);
  v23 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v20 + 16) = v22;
  swift_release(v23);
  v24 = *(_QWORD *)&v18[v19];
  v25 = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(v24 + 24) = 0x79616C5020776F4ELL;
  *(_QWORD *)(v24 + 32) = 0xEB00000000676E69;
  swift_bridgeObjectRelease(v25);
  v26 = *(_QWORD *)&v18[v19];
  *(_QWORD *)(v26 + 40) = 5;
  *(_BYTE *)(v26 + 48) = 0;
  v27 = *(double *)(v26 + 88);
  v28 = *(double *)(v26 + 96);
  *(double *)(v26 + 88) = a3;
  *(double *)(v26 + 96) = a4;
  v29 = swift_retain();
  sub_FFE24(v29, v27, v28);
  swift_release(v26);
  v30 = *(_QWORD *)&v18[v19];
  v31 = swift_allocObject(&unk_1D1390, 24, 7);
  swift_unknownObjectUnownedInit(v31 + 16, v18);
  v32 = *(_QWORD *)(v30 + 184);
  v33 = *(_QWORD *)(v30 + 192);
  *(_QWORD *)(v30 + 184) = sub_F89A0;
  *(_QWORD *)(v30 + 192) = v31;
  sub_145A0(v32, v33);
  v34 = *(_QWORD *)&v18[v19];
  v35 = swift_allocObject(&unk_1D1390, 24, 7);
  swift_unknownObjectUnownedInit(v35 + 16, v18);
  v36 = *(_QWORD *)(v34 + 200);
  v37 = *(_QWORD *)(v34 + 208);
  *(_QWORD *)(v34 + 200) = sub_F89D4;
  *(_QWORD *)(v34 + 208) = v35;
  sub_145A0(v36, v37);
  v38 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView;
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView], "setContentMode:", 1);
  v39 = objc_msgSend(v18, "layer");
  objc_msgSend(v39, "setAllowsGroupOpacity:", 0);

  v40 = objc_msgSend(v18, "layer");
  objc_msgSend(v40, "setAllowsGroupBlending:", 0);

  v41 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView;
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView], "setContentMode:", 2);
  objc_msgSend(*(id *)&v18[v41], "_setAnimatesContents:", 1);
  v42 = objc_msgSend(*(id *)&v18[v41], "layer");
  objc_msgSend(v42, "setCompositingFilter:", kCAFilterMultiplyBlendMode);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v44 = v43;
  v45 = objc_allocWithZone((Class)CAFilter);
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v45, "initWithType:", v46, swift_bridgeObjectRelease(v44).n128_f64[0]);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v49 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "setValue:forKey:", isa, v49);

  v50 = objc_msgSend(*(id *)&v18[v41], "layer");
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF68);
  v52 = swift_allocObject(v51, 64, 7);
  *(_OWORD *)(v52 + 16) = xmmword_16B3D0;
  *(_QWORD *)(v52 + 56) = sub_F174(0, &qword_2019A0, CAFilter_ptr);
  *(_QWORD *)(v52 + 32) = v47;
  v53 = v47;
  v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v50, "setFilters:", v54, swift_bridgeObjectRelease(v52).n128_f64[0]);

  objc_msgSend(*(id *)&v18[v38], "setHidden:", 1);
  v55 = *(void **)&v18[v38];
  v56 = objc_allocWithZone((Class)UIColor);
  v57 = v55;
  v58 = objc_msgSend(v56, "initWithWhite:alpha:", 0.0, 0.4);
  objc_msgSend(v57, "setTintColor:", v58);

  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v18[v41]);
  objc_msgSend(v18, "addSubview:", *(_QWORD *)(*(_QWORD *)&v18[v19] + 104));
  objc_msgSend(v18, "addSubview:", *(_QWORD *)&v18[v38]);
  sub_F5D6C();

  return v18;
}

void sub_F6864(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  id v3;

  v1 = a1 + 16;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  sub_F68B4();

  v3 = (id)swift_unknownObjectUnownedLoadStrong(v1);
  sub_F6A98();

}

double sub_F68B4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  char *v7;
  id v8;
  double result;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD *v20;

  v1 = swift_allocObject(&unk_1D13B8, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent] + 80);
  if (v2)
  {
    v3 = swift_allocObject(&unk_1D1430, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v0);
    v4 = (_QWORD *)swift_allocObject(&unk_1D1458, 40, 7);
    v4[2] = sub_F8A00;
    v4[3] = v1;
    v4[4] = v3;
    v19 = sub_F8A78;
    v20 = v4;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_6BDB4;
    v18 = &block_descriptor_16_0;
    v5 = _Block_copy(&v15);
    v6 = v20;
    v7 = v0;
    v8 = v2;
    swift_retain();
    objc_msgSend(v8, "requestRadiosityImageWithCompletionHandler:", v5, swift_release(v6).n128_f64[0]);
    swift_release(v1);
    _Block_release(v5);

  }
  else
  {
    v10 = (void *)objc_opt_self(UIView);
    v11 = swift_allocObject(&unk_1D13E0, 24, 7);
    *(_QWORD *)(v11 + 16) = v0;
    v19 = sub_F8A08;
    v20 = (_QWORD *)v11;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_F528;
    v18 = &block_descriptor_25;
    v12 = _Block_copy(&v15);
    v13 = v20;
    v14 = v0;
    swift_release(v13);
    objc_msgSend(v10, "animateWithDuration:animations:", v12, 0.2);
    _Block_release(v12);
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  return result;
}

void sub_F6A98()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_playerPath);
  if (!v1)
    goto LABEL_6;
  v2 = objc_msgSend(v1, "route");
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  if ((objc_msgSend(v2, "isDeviceRoute") & 1) != 0
    || (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent) + 234) & 1) != 0)
  {

LABEL_6:
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView), "setHidden:", 1);
    return;
  }
  v4 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView), "setHidden:", 0);
  v5 = *(void **)(v0 + v4);
  v6 = (void *)objc_opt_self(MPAVRoutingController);
  v7 = v5;
  v8 = objc_msgSend(v6, "_symbolImageForRoute:", v3);
  objc_msgSend(v7, "setImage:", v8);

}

void sub_F6BFC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  AVLayerVideoGravity v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  id v16;
  char v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  uint64_t v29;
  void *v30;
  double v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  double v42;
  CGFloat a;
  CGFloat b;
  uint64_t v45;
  double v46;
  char v47;
  unsigned int v48;
  double x;
  double width;
  double height;
  double v52;
  double v53;
  char v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  char v62;
  double v63;
  double v64;
  double v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  CGFloat v70;
  double y;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  double v77;
  char v78;
  double v79;
  char *v80;
  double v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  CGFloat v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  double v105;
  double v106;
  double v107;
  double v108;
  void *v109;
  double v110;
  double v111;
  id v112;
  CGFloat v113;
  double v114;
  int v115;
  double v116;
  uint64_t v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  CGFloat v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double *v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  CGFloat v140;
  CGFloat v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  CGFloat v152;
  double v153;
  double v154;
  double v155;
  double v156;
  Swift::String v157;
  unsigned int v158;
  uint64_t v159;
  void *v160;
  Swift::String v161;
  Swift::String v162;
  uint64_t v163;
  Swift::String v164;
  void *object;
  Swift::String v166;
  Swift::String v167;
  Swift::String v168;
  __n128 v169;
  CGFloat v170;
  CGFloat v171;
  __n128 v172;
  uint64_t v173;
  double v174;
  double v175;
  double v176;
  double v177;
  double v178;
  CGFloat v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  void *v183;
  id v184;
  double v185;
  CGFloat v186;
  double v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  unsigned int v191;
  AVLayerVideoGravity v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  void *v196;
  id v197;
  void *v198;
  double v199;
  double v200;
  double v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  uint64_t v207;
  void (*v208)(char *, uint64_t);
  uint64_t v209;
  uint64_t v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  double v214;
  double v215;
  CGFloat v216;
  CGFloat v217;
  int v218;
  CGFloat v219;
  uint64_t v220;
  CGFloat v221;
  char *v222;
  uint64_t v223;
  id v224;
  CGFloat v225;
  unsigned int v226;
  double v227;
  CGFloat v228;
  AVLayerVideoGravity v229;
  CGFloat v230;
  CGFloat v231;
  CGAffineTransform v232;
  char v233[8];
  char v234;
  objc_super v235;
  uint64_t v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;
  CGRect v255;
  CGRect v256;
  CGRect v257;
  CGRect v258;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v223 = type metadata accessor for CGRect.LayoutAxis(0);
  v3 = *(_QWORD *)(v223 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v223).n128_u64[0];
  v6 = (char *)&v207 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235.receiver = v1;
  v235.super_class = ObjectType;
  objc_msgSendSuper2(&v235, "layoutSubviews", v4);
  objc_msgSend(v1, "bounds");
  v8 = v7;
  v229 = v9;
  v11 = v10;
  v13 = v12;
  v14 = objc_msgSend(v1, "traitCollection");
  v15 = UITraitCollection.safeDisplayScale.getter();

  v224 = (id)objc_opt_self(UIColor);
  v16 = objc_msgSend(v224, "clearColor");
  v17 = v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates];
  v228 = v8;
  if ((v17 & 1) == 0)
  {
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
    v19 = *(double *)(v18 + 88);
    v20 = *(double *)(v18 + 96);
    *(double *)(v18 + 88) = v11;
    *(double *)(v18 + 96) = v13;
    v21 = swift_retain();
    v22 = v20;
    v8 = v228;
    sub_FFE24(v21, v19, v22);
    swift_release(v18);
  }
  v23 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent;
  v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent];
  swift_retain();
  v227 = v15;
  v25 = sub_1000F4(*(uint64_t *)&v11, *(uint64_t *)&v13, 0, v15);
  v27 = v26;
  *(_QWORD *)&v28 = swift_release(v24).n128_u64[0];
  v29 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput;
  v30 = *(void **)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput];
  if (v30)
  {
    v31 = *(double *)&v229;
LABEL_5:
    v32 = objc_msgSend(v30, "isReadyForDisplay", v28);
    goto LABEL_9;
  }
  v33 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController];
  v31 = *(double *)&v229;
  if (v33)
  {
    v34 = objc_opt_self(AVPlayerViewController);
    v30 = (void *)swift_dynamicCastObjCClass(v33, v34);
    if (v30)
      goto LABEL_5;
  }
  v32 = 0;
LABEL_9:
  v35 = *(void **)&v1[v29];
  v222 = v6;
  if (v35)
  {
    v36 = v16;
    v37 = objc_msgSend(v35, "presentationSize");
    v40 = v39;
    *(double *)&v41 = v39;
    v42 = v38;
  }
  else
  {
    if (qword_1F96B8 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    v36 = v16;
    swift_beginAccess(&static NowPlayingDataProvider.shared, v233, 0, 0);
    sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&v232);
    a = v232.a;
    if (!*(_QWORD *)&v232.a)
    {
      __break(1u);
      return;
    }
    b = v232.b;
    swift_unknownObjectRetain(*(_QWORD *)&v232.a);
    sub_4AE24((uint64_t)&v232);
    v45 = swift_getObjectType(*(_QWORD *)&a);
    *(double *)&v41 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, CGFloat))(*(_QWORD *)&b + 256))(v45, COERCE_CGFLOAT(*(_QWORD *)&b)));
    v42 = v46;
    LOBYTE(b) = v47;
    v37 = (id)swift_unknownObjectRelease(*(_QWORD *)&a);
    if ((LOBYTE(b) & 1) != 0)
    {
      v217 = v42;
      v219 = *(double *)&v41;
      v218 = 1;
      x = 0.0;
      y = 0.0;
      goto LABEL_44;
    }
    v40 = *(double *)&v41;
    v38 = v42;
  }
  if (v40 > 0.0)
    v48 = v32;
  else
    v48 = 0;
  x = 0.0;
  v32 = 0;
  v219 = *(double *)&v41;
  v217 = v42;
  if (v48 == 1 && v38 > 0.0)
  {
    CGRect.aspectFit(in:scale:)(v37, v8, v31, v11, v13, v227, 0.0, 0.0);
    width = v237.size.width;
    height = v237.size.height;
    v237.origin.x = 0.0;
    v237.origin.y = 0.0;
    v52 = CGRectGetWidth(v237);
    v238.origin.x = v228;
    *(_QWORD *)&v238.origin.y = v229;
    v238.size.width = v11;
    v238.size.height = v13;
    v53 = CGRectGetWidth(v238);
    v54 = static CGFloat.==~ infix(_:_:)(v53, 0.0);
    if ((v54 & 1) != 0)
      v55 = width;
    else
      v55 = v11;
    if ((v54 & 1) != 0)
      v56 = height;
    else
      v56 = v13;
    v57 = v228;
    if ((v54 & 1) != 0)
      v57 = 0.0;
    v58 = *(double *)&v229;
    if ((v54 & 1) != 0)
      v58 = 0.0;
    v59 = CGRectGetWidth(*(CGRect *)(&v55 - 2));
    v239.origin.x = 0.0;
    v239.origin.y = 0.0;
    v239.size.width = width;
    v239.size.height = height;
    v60 = CGRectGetHeight(v239);
    v240.origin.x = v228;
    *(_QWORD *)&v240.origin.y = v229;
    v240.size.width = v11;
    v240.size.height = v13;
    v61 = CGRectGetHeight(v240);
    v62 = static CGFloat.==~ infix(_:_:)(v61, 0.0);
    if ((v62 & 1) != 0)
      v63 = width;
    else
      v63 = v11;
    if ((v62 & 1) != 0)
      v64 = height;
    else
      v64 = v13;
    v65 = v228;
    if ((v62 & 1) != 0)
      v65 = 0.0;
    v66 = *(double *)&v229;
    if ((v62 & 1) != 0)
      v66 = 0.0;
    v67 = CGRectGetHeight(*(CGRect *)(&v63 - 2));
    v68 = v52 / v59;
    v31 = *(double *)&v229;
    v69 = v68 * -10.0;
    v70 = v60 / v67 * -10.0;
    v241.origin.x = 0.0;
    v241.origin.y = 0.0;
    v241.size.width = width;
    v8 = v228;
    v241.size.height = height;
    v242 = CGRectInset(v241, v69, v70);
    x = v242.origin.x;
    y = v242.origin.y;
    v25 = v242.size.width;
    v27 = v242.size.height;
    v72 = *(_QWORD *)&v1[v23];
    swift_retain();
    v73 = objc_msgSend(v224, "blackColor");
    v74 = *(void **)(v72 + 224);
    *(_QWORD *)(v72 + 224) = v73;
    v75 = v73;
    sub_100AA4((uint64_t)v74);
    swift_release(v72);

    v218 = 0;
    v32 = 1;
  }
  else
  {
    y = 0.0;
    v218 = 0;
  }
LABEL_44:
  v76 = v36;
  v243.origin.x = x;
  v243.origin.y = y;
  v243.size.width = v25;
  v243.size.height = v27;
  v221 = CGRectGetWidth(v243);
  v244.origin.x = v8;
  v244.origin.y = v31;
  v244.size.width = v11;
  v244.size.height = v13;
  v77 = CGRectGetWidth(v244);
  v78 = static CGFloat.==~ infix(_:_:)(v77, 0.0);
  v79 = 1.0;
  v225 = 1.0;
  v80 = v222;
  if ((v78 & 1) == 0)
  {
    v245.origin.x = v8;
    v245.origin.y = v31;
    v245.size.width = v11;
    v245.size.height = v13;
    v79 = CGRectGetWidth(v245);
  }
  v216 = v79;
  v226 = v32;
  v220 = v23;
  v246.origin.x = x;
  v246.origin.y = y;
  v246.size.width = v25;
  v246.size.height = v27;
  v215 = CGRectGetHeight(v246);
  v247.origin.x = v8;
  v247.origin.y = v31;
  v247.size.width = v11;
  v247.size.height = v13;
  v81 = CGRectGetHeight(v247);
  v82 = static CGFloat.==~ infix(_:_:)(v81, 0.0);
  if ((v82 & 1) == 0)
  {
    v248.origin.x = v8;
    v248.origin.y = v31;
    v248.size.width = v11;
    v248.size.height = v13;
    v225 = CGRectGetHeight(v248);
  }
  v83 = v8;
  v84 = v31;
  v85 = v8;
  v86 = v227;
  v87 = CGRect.aspectFit(in:scale:)(v82, v83, v84, v11, v13, v227, x, y);
  v89 = v88;
  v91 = v90;
  v93 = v92;
  v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201970);
  v95 = *(_QWORD *)(v3 + 72);
  v96 = *(unsigned __int8 *)(v3 + 80);
  v210 = v94;
  v213 = ((v96 + 32) & ~v96) + 2 * v95;
  v212 = v96 | 7;
  v97 = COERCE_DOUBLE(swift_allocObject(v94, v213, v96 | 7));
  v211 = xmmword_16E1B0;
  *(_OWORD *)(*(_QWORD *)&v97 + 16) = xmmword_16E1B0;
  static CGRect.LayoutAxis.horizontal.getter(*(_QWORD *)&v97);
  static CGRect.LayoutAxis.vertical.getter(v98);
  v232.a = v97;
  v99 = sub_8330((unint64_t *)&qword_1FD930, (uint64_t (*)(uint64_t))&type metadata accessor for CGRect.LayoutAxis, (uint64_t)&protocol conformance descriptor for CGRect.LayoutAxis);
  v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201980);
  v209 = sub_720E4((unint64_t *)&qword_1FD940, (uint64_t *)&unk_201980);
  v101 = v223;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v232, v100, v209, v223, v99);
  v214 = v11;
  v102 = CGRect.centeringAlong(axes:bounds:scale:)(v80, v85, *(double *)&v229, v11, v13, v86, v87, v89, v91, v93);
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v208 = *(void (**)(char *, uint64_t))(v3 + 8);
  v208(v80, v101);
  v109 = *(void **)&v1[v29];
  if (v109)
  {
    v110 = v221;
    v111 = v225;
  }
  else
  {
    v137 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController];
    v110 = v221;
    v111 = v225;
    if (!v137)
    {
      v112 = 0;
      goto LABEL_51;
    }
    v138 = objc_opt_self(AVPlayerViewController);
    v109 = (void *)swift_dynamicCastObjCClass(v137, v138);
    if (!v109)
    {
      v112 = 0;
      goto LABEL_51;
    }
  }
  v112 = objc_msgSend(v109, "videoGravity");
LABEL_51:
  v113 = v106;
  v114 = v110 / v216;
  v225 = *(double *)&OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode;
  v115 = v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode];
  v116 = v215 / v111;
  v207 = v100;
  if (v115 == 2)
  {
    v117 = v99;
    v118 = v102;
    v249.origin.x = v102;
    v119 = v104;
    v249.origin.y = v104;
    v249.size.width = v113;
    v249.size.height = v108;
    v250 = CGRectInset(v249, v114 * -8.0, v116 * -8.0);
    v216 = 0.0;
    v251 = CGRectOffset(v250, 0.0, 4.0);
    v120 = v251.origin.x;
    v121 = v251.origin.y;
    v122 = v251.size.width;
    v123 = v251.size.height;
    v228 = 0.0;
    v215 = 0.0;
    v221 = *(double *)&v76;
  }
  else
  {
    v221 = COERCE_DOUBLE(objc_msgSend(v224, "blackColor", v207));

    if ((v115 & 1) != 0)
    {
      v117 = v99;
      v139 = *(double *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityScale];
      v228 = v139 * 20.0;
      v140 = v114 * -56.0 * v139;
      v141 = v116 * -56.0 * v139;
      v118 = v102;
      v256.origin.x = v102;
      v119 = v104;
      v256.origin.y = v104;
      v256.size.width = v113;
      v256.size.height = v108;
      v257 = CGRectInset(v256, v140, v141);
      v258 = CGRectOffset(v257, 0.0, v116 * 20.0);
      v120 = v258.origin.x;
      v121 = v258.origin.y;
      v122 = v258.size.width;
      v123 = v258.size.height;
      v216 = 10.0;
      v135 = 0.24;
      v136 = (double *)&v234;
    }
    else
    {
      CGAffineTransformMakeScale(&v232, 0.8, 0.8);
      v252.origin.x = v102;
      v252.origin.y = v104;
      v252.size.width = v113;
      v252.size.height = v108;
      v253 = CGRectApplyAffineTransform(v252, &v232);
      v124 = v253.origin.x;
      v125 = v253.origin.y;
      v126 = v253.size.width;
      v127 = v253.size.height;
      v128 = COERCE_DOUBLE(swift_allocObject(v210, v213, v212));
      *(_OWORD *)(*(_QWORD *)&v128 + 16) = v211;
      static CGRect.LayoutAxis.horizontal.getter(*(_QWORD *)&v128);
      static CGRect.LayoutAxis.vertical.getter(v129);
      v232.a = v128;
      v130 = v100;
      v131 = v223;
      v117 = v99;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v232, v130, v209, v223, v99);
      v118 = CGRect.centeringAlong(axes:bounds:scale:)(v80, v228, *(double *)&v229, v214, v13, v227, v124, v125, v126, v127);
      v119 = v132;
      v113 = v133;
      v108 = v134;
      v208(v80, v131);
      v254.origin.x = v118;
      v254.origin.y = v119;
      v254.size.width = v113;
      v254.size.height = v108;
      v255 = CGRectInset(v254, v114 * 40.0, v116 * 40.0);
      v120 = v255.origin.x;
      v121 = v255.origin.y;
      v122 = v255.size.width;
      v123 = v255.size.height;
      v216 = 10.0;
      v215 = 0.08;
      v135 = 10.0;
      v136 = (double *)&v236;
    }
    *(v136 - 32) = v135;
  }
  *(double *)&v229 = COERCE_DOUBLE(AVLayerVideoGravityResize);

  v142 = v113;
  v143 = v227;
  v144 = UIRectIntegralWithScale(v118, v119, v142, v108, v227);
  v214 = v145;
  v147 = v146;
  v149 = v148;
  v150 = UIRectIntegralWithScale(v120, v121, v122, v123, v143);
  v152 = v151;
  v154 = v153;
  v156 = v155;
  v232.a = 0.0;
  v232.b = -2.68156159e154;
  _StringGuts.grow(_:)(85);
  v230 = v232.a;
  v231 = v232.b;
  v157._countAndFlagsBits = 0xD00000000000001ALL;
  v157._object = (void *)0x800000000018B2F0;
  String.append(_:)(v157);
  v158 = v226;
  if (v226)
    v159 = 1702195828;
  else
    v159 = 0x65736C6166;
  if (v226)
    v160 = (void *)0xE400000000000000;
  else
    v160 = (void *)0xE500000000000000;
  v161._countAndFlagsBits = v159;
  v161._object = v160;
  String.append(_:)(v161);
  swift_bridgeObjectRelease(v160);
  v162._countAndFlagsBits = 0xD000000000000018;
  v162._object = (void *)0x800000000018B310;
  String.append(_:)(v162);
  v232.a = v219;
  v232.b = v217;
  LOBYTE(v232.c) = v218;
  v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201990);
  v164._countAndFlagsBits = String.init<A>(describing:)(&v232, v163);
  object = v164._object;
  String.append(_:)(v164);
  swift_bridgeObjectRelease(object);
  v166._countAndFlagsBits = 0x3D65646F6D2E20;
  v166._object = (void *)0xE700000000000000;
  String.append(_:)(v166);
  LOBYTE(v232.a) = v1[*(_QWORD *)&v225];
  _print_unlocked<A, B>(_:_:)(&v232, &v230, &type metadata for NowPlayingContentView.ViewMode, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v167._object = (void *)0x800000000018B330;
  v167._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v167);
  v168._countAndFlagsBits = v159;
  v168._object = v160;
  String.append(_:)(v168);
  v169 = swift_bridgeObjectRelease(v160);
  v170 = v231;
  NSLog(_:_:)(*(_QWORD *)&v230, *(_QWORD *)&v231, _swiftEmptyArrayStorage, v169);
  swift_bridgeObjectRelease(*(_QWORD *)&v170);
  if (v158)
  {
    v171 = COERCE_DOUBLE(swift_allocObject(v210, v213, v212));
    *(_OWORD *)(*(_QWORD *)&v171 + 16) = v211;
    static CGRect.LayoutAxis.horizontal.getter(*(_QWORD *)&v171);
    static CGRect.LayoutAxis.vertical.getter(v172);
    v232.a = v171;
    v173 = v223;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v232, v207, v209, v223, v117);
    v174 = v144;
    v175 = v144;
    v176 = v214;
    v177 = v143;
    v178 = CGRect.centeringAlong(axes:bounds:scale:)(v80, v175, v214, v147, v149, v143, 0.0, 0.0, 0.0, 0.0);
    v219 = v179;
    v208(v80, v173);
    v180 = v220;
    v181 = *(_QWORD *)&v1[v220];
    swift_retain();
    v182 = objc_msgSend(v224, "blackColor");
    v183 = *(void **)(v181 + 224);
    *(_QWORD *)(v181 + 224) = v182;
    v184 = v182;
    sub_100AA4((uint64_t)v183);
    v185 = 1.0;
    v154 = 1.0;
    v186 = v221;
  }
  else
  {
    v187 = v150;
    v177 = v143;
    v185 = v156;
    v219 = v152;
    v178 = v187;
    v174 = v144;
    v180 = v220;
    v181 = *(_QWORD *)&v1[v220];
    swift_retain();
    v188 = objc_msgSend(v224, "clearColor");
    v183 = *(void **)(v181 + 224);
    *(_QWORD *)(v181 + 224) = v188;
    v184 = v188;
    sub_100AA4((uint64_t)v183);
    v186 = v221;
    v176 = v214;
  }
  swift_release(v181);

  v189 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController;
  v190 = *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController];
  v191 = v226;
  v192 = v229;
  if (v190)
  {
    v193 = objc_opt_self(AVPlayerViewController);
    v194 = (void *)swift_dynamicCastObjCClass(v190, v193);
    if (v194)
      objc_msgSend(v194, "setVideoGravity:forLayoutClass:", v192, 0);
  }
  v195 = *(_QWORD *)&v1[v180];
  swift_retain();
  sub_1002D0(v174, v176, v147, v149, v177);
  swift_release(v195);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView], "setFrame:", v178, v219, v154, v185);
  v196 = *(void **)&v1[v189];
  if (v196)
  {
    v197 = objc_msgSend(v196, "view");
    if (v197)
    {
      v198 = v197;
      objc_msgSend(v197, "setFrame:", 0.0, 0.0, v147, v149);
      objc_msgSend(v198, "setHidden:", v191 ^ 1);

    }
  }
  v199 = dbl_172ED0[v1[*(_QWORD *)&v225] == 2];
  v200 = v147 * v199;
  v201 = v149 * v199;
  v202 = *(id *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView];
  UIRectCenteredIntegralRect(0.0, 0.0, v200, v201, v174, v176, v147, v149);
  objc_msgSend(v202, "setFrame:");

  v232.a = v186;
  v232.b = v215;
  v232.c = v228;
  v232.d = 0.0;
  v232.tx = v216;
  v203 = *(id *)&v186;
  UIView.shadow.setter((uint64_t)&v232);
  v204 = objc_msgSend(v1, "layer");
  v205 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v174, v176, v147, v149, 6.0);
  v206 = objc_msgSend(v205, "CGPath");

  objc_msgSend(v204, "setShadowPath:", v206);
  objc_msgSend(v1, "invalidateIntrinsicContentSize");

}

void sub_F7D9C(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1D1598, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v7[4] = sub_F8B18;
  v8 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_F528;
  v7[3] = &block_descriptor_42;
  v4 = _Block_copy(v7);
  v5 = v8;
  v6 = a1;
  swift_release(v5);
  objc_msgSend(v2, "animateWithDuration:animations:", v4, 0.2);
  _Block_release(v4);
}

void sub_F7E68(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v1 = qword_1F9648;
  v2 = *(id *)(a1 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView);
  v3 = v2;
  if (v1 != -1)
  {
    swift_once(&qword_1F9648, sub_FE66C);
    v2 = v3;
  }
  objc_msgSend(v2, "setImage:", qword_2103C0);

}

double sub_F7EE0(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  double result;
  __n128 v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  void (*v44)();
  _QWORD *v45;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject(&unk_1D14A8, 48, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v15 = (void *)objc_opt_self(NSThread);
  v16 = a1;
  swift_retain_n(a3, 2);
  swift_retain_n(a4, 2);
  v17 = v16;
  if (objc_msgSend(v15, "isMainThread"))
  {
    if (a1)
    {
      v18 = (void *)objc_opt_self(UIView);
      v19 = swift_allocObject(&unk_1D14F8, 32, 7);
      *(_QWORD *)(v19 + 16) = a4;
      *(_QWORD *)(v19 + 24) = v17;
      v44 = sub_F8AC8;
      v45 = (_QWORD *)v19;
      aBlock = _NSConcreteStackBlock;
      v41 = 1107296256;
      v42 = sub_F528;
      v43 = &block_descriptor_28_1;
      v20 = _Block_copy(&aBlock);
      v21 = v45;
      v22 = v17;
      swift_retain();
      swift_release(v21);
      objc_msgSend(v18, "animateWithDuration:animations:", v20, 0.2);
      _Block_release(v20);
      swift_release(a4);
      swift_release(a3);
      swift_release(v14);

    }
    else
    {
      a2();
      swift_release(a4);
      swift_release(a3);
      *(_QWORD *)&result = swift_release(v14).n128_u64[0];
    }
  }
  else
  {
    sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
    v25 = (void *)static OS_dispatch_queue.main.getter(v24);
    v44 = sub_F8AB8;
    v45 = v14;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_F528;
    v43 = &block_descriptor_22_1;
    v26 = _Block_copy(&aBlock);
    v27 = v45;
    swift_retain();
    swift_release(v27);
    static DispatchQoS.unspecified.getter(v28);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v29 = sub_8330((unint64_t *)&qword_1FD850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v36 = v17;
    v30 = v29;
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v35 = a3;
    v32 = v31;
    v33 = sub_720E4((unint64_t *)&qword_1FD860, (uint64_t *)&unk_1FD9C0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v8, v30);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
    swift_release(a4);
    swift_release(v35);

    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

void sub_F8288(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  if (a1)
  {
    v6 = (void *)objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_1D1548, 32, 7);
    *(_QWORD *)(v7 + 16) = a4;
    *(_QWORD *)(v7 + 24) = a1;
    v11[4] = sub_F8AE4;
    v12 = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_F528;
    v11[3] = &block_descriptor_35_1;
    v8 = _Block_copy(v11);
    v9 = v12;
    v10 = a1;
    swift_retain(a4);
    swift_release(v9);
    objc_msgSend(v6, "animateWithDuration:animations:", v8, 0.2);
    _Block_release(v8);

  }
  else
  {
    a2();
  }
}

void sub_F8384(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView);

    objc_msgSend(v6, "setImage:", a2);
  }
}

id sub_F8520()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;

  result = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController);
  if (result)
  {
    result = objc_msgSend(result, "view");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v2 = result;
    v3 = objc_msgSend(result, "layer");

    if (v3)
    {
      v4 = objc_opt_self(AVPlayerLayer);
      result = (id)swift_dynamicCastObjCClass(v3, v4);
      if (result)
        return result;

    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NowPlayingContentView()
{
  return objc_opt_self(_TtC12NowPlayingUI21NowPlayingContentView);
}

uint64_t getEnumTagSinglePayload for NowPlayingContentView.ViewMode(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_F86B4 + 4 * byte_172EE0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingContentView.ViewMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_F876C + 4 * byte_172EEA[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_F87A0 + 4 * byte_172EE5[v5]))();
}

uint64_t sub_F87A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_F87A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xF87B0);
  return result;
}

uint64_t sub_F87BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xF87C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_F87C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_F87D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_F87DC(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_F87F8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingContentView.ViewMode()
{
  return &type metadata for NowPlayingContentView.ViewMode;
}

void sub_F8820()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_mode] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityScale] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoOutput] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_videoBinding] = 0;
  v2 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_artworkComponent;
  type metadata accessor for ArtworkComponentImageView();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v4 = _s9ComponentCMa();
  swift_allocObject(v4, 256, 7);
  *(_QWORD *)&v1[v2] = sub_FF910(v3);
  v5 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_radiosityView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_borderColor] = 0;
  v6 = OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_placeholderImageView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_playerPath] = 0;
  v1[OBJC_IVAR____TtC12NowPlayingUI21NowPlayingContentView_deferArtworkUpdates] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/NowPlayingContentView.swift", 40, 2, 128, 0);
  __break(1u);
}

uint64_t sub_F897C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_F89A0()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  objc_msgSend(Strong, "setNeedsLayout");

}

void sub_F89D4()
{
  uint64_t v0;

  sub_F6864(v0);
}

uint64_t sub_F89DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_F8A00()
{
  uint64_t v0;

  sub_F7D9C(*(void **)(v0 + 16));
}

void sub_F8A08()
{
  uint64_t v0;

  sub_F7E68(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_25(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_F8A28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_F8A4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_F8A78(void *a1)
{
  uint64_t v1;

  return sub_F7EE0(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_F8A84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_F8AB8()
{
  uint64_t v0;

  sub_F8288(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_F8AC8()
{
  uint64_t v0;

  sub_F8384(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_F8AD4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setNeedsLayout");
}

_QWORD *initializeBufferWithCopyOfBuffer for ShazamContainer(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for ShazamContainer(uint64_t a1)
{

}

_QWORD *assignWithCopy for ShazamContainer(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for ShazamContainer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for ShazamContainer()
{
  return &type metadata for ShazamContainer;
}

uint64_t sub_F8BD0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A2A18, 1);
}

uint64_t sub_F8BE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019A8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v8 + 1) = 0x4030000000000000;
  v8[16] = 0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019B8);
  v14 = sub_F8D80(a1, a2, (uint64_t)&v8[*(int *)(v13 + 44)]);
  v15 = static Color.white.getter(v14);
  KeyPath = swift_getKeyPath(&unk_172FC8);
  sub_2808C((uint64_t)v8, (uint64_t)v11, &qword_2019A8);
  v17 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *v17 = KeyPath;
  v17[1] = v15;
  v18 = sub_9944((uint64_t)v8, &qword_2019A8);
  v19 = static Edge.Set.leading.getter(v18);
  v20 = EdgeInsets.init(_all:)(32.0);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_2808C((uint64_t)v11, a3, &qword_2019B0);
  v27 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2019C0) + 36);
  *(_BYTE *)v27 = v19;
  *(double *)(v27 + 8) = v20;
  *(_QWORD *)(v27 + 16) = v22;
  *(_QWORD *)(v27 + 24) = v24;
  *(_QWORD *)(v27 + 32) = v26;
  *(_BYTE *)(v27 + 40) = 0;
  return sub_9944((uint64_t)v11, &qword_2019B0);
}

uint64_t sub_F8D80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _OWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  __int128 v140;
  _QWORD *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  unsigned __int8 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;

  v159 = a1;
  v157 = a3;
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019C8);
  __chkstk_darwin(v134);
  v138 = (uint64_t)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FADF0);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v158 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019D0);
  v153 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v135 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019D8);
  __chkstk_darwin(v8);
  v10 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v132 - v12;
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019E0);
  __chkstk_darwin(v161);
  v151 = (uint64_t)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v15);
  v150 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019E8);
  v17 = __chkstk_darwin(v160);
  v19 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for ButtonToggleStyle(0, v17);
  v143 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v142 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_2019F0);
  *(_QWORD *)&v140 = *(v141 - 1);
  __chkstk_darwin(v141);
  v22 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2019F8);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v162 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_201A00);
  __chkstk_darwin(v24);
  v152 = (uint64_t)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v146 = (char *)&v132 - v27;
  __chkstk_darwin(v28);
  v163 = (uint64_t)&v132 - v29;
  KeyPath = swift_getKeyPath(&unk_172FF8);
  v31 = swift_getKeyPath(&unk_173020);
  v32 = a2;
  static Published.subscript.getter(&v170, v32, KeyPath, v31);

  swift_release(KeyPath);
  swift_release(v31);
  v156 = v10;
  v155 = v13;
  v154 = v6;
  v149 = v19;
  v145 = v24;
  v33 = v32;
  if (v170 == 1)
  {
    v34 = 0x61685320706F7453;
    v35 = 0xEB000000006D617ALL;
  }
  else
  {
    v34 = 0x6D617A616853;
    v35 = 0xE600000000000000;
  }
  v36 = LocalizedStringKey.init(stringLiteral:)(v34, v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v159;
  v44 = v15;
  v133 = v15;
  v45 = type metadata accessor for ShazamState(0);
  v46 = sub_8330(&qword_203590, type metadata accessor for ShazamState, (uint64_t)&unk_16F78C);
  v139 = v33;
  v47 = (void *)ObservedObject.projectedValue.getter(v43, v33, v45, v46);
  v48 = swift_getKeyPath(&unk_172FF8);
  ObservedObject.Wrapper.subscript.getter(&v170, v48, v47, v46);
  swift_release(v48);

  v49 = Toggle<>.init(_:isOn:)(v36, v38, v40 & 1, v42, v170, v171, v172);
  v50 = v142;
  ButtonToggleStyle.init()(v49);
  v51 = sub_27A8C(&qword_201A08, &qword_2019F0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v52 = sub_8330(&qword_201A10, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
  v53 = v141;
  v54 = v144;
  View.toggleStyle<A>(_:)(v50, v141, v144, v51, v52);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v50, v54);
  v55 = (*(uint64_t (**)(char *, _QWORD *))(v140 + 8))(v22, v53);
  v56 = static Color.blue.getter(v55);
  v57 = static Alignment.center.getter(v56);
  _FrameLayout.init(width:height:alignment:)(&v164, 0, 1, 0x4042000000000000, 0, v57, v58);
  v59 = v164;
  LOBYTE(v36) = v165;
  v60 = v166;
  LODWORD(v144) = v167;
  v62 = v168;
  v61 = v169;
  v63 = v150;
  v64 = &v150[*(int *)(v44 + 20)];
  v65 = enum case for RoundedCornerStyle.continuous(_:);
  v66 = type metadata accessor for RoundedCornerStyle(0);
  v67 = *(_QWORD **)(*(_QWORD *)(v66 - 8) + 104);
  LODWORD(v143) = v65;
  v142 = (char *)v66;
  v141 = v67;
  ((void (*)(char *, uint64_t))v67)(v64, v65);
  __asm { FMOV            V0.2D, #8.0 }
  v140 = _Q0;
  *v63 = _Q0;
  v73 = v151;
  sub_F9E40((uint64_t)v63, v151);
  *(_WORD *)(v73 + *(int *)(v161 + 36)) = 256;
  v74 = (uint64_t)v149;
  sub_2808C(v73, (uint64_t)&v149[*(int *)(v160 + 36)], &qword_2019E0);
  *(_QWORD *)v74 = v56;
  *(_QWORD *)(v74 + 8) = v59;
  *(_BYTE *)(v74 + 16) = v36;
  *(_QWORD *)(v74 + 24) = v60;
  *(_BYTE *)(v74 + 32) = v144;
  v75 = v73;
  *(_QWORD *)(v74 + 40) = v62;
  *(_QWORD *)(v74 + 48) = v61;
  swift_retain();
  sub_9944(v73, &qword_2019E0);
  sub_F9E84((uint64_t)v63);
  swift_release(v56);
  v77 = static Alignment.center.getter(v76);
  v79 = v78;
  v80 = (uint64_t)v146;
  v81 = (uint64_t)&v146[*(int *)(v145 + 36)];
  sub_2808C(v74, v81, &qword_2019E8);
  v82 = (uint64_t *)(v81 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_201A18) + 36));
  *v82 = v77;
  v82[1] = v79;
  v83 = v147;
  v84 = v162;
  v85 = v148;
  (*(void (**)(uint64_t, char *, uint64_t))(v147 + 16))(v80, v162, v148);
  sub_9944(v74, &qword_2019E8);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
  sub_982C(v80, v163, &qword_201A00);
  v86 = swift_getKeyPath(&unk_173040);
  v87 = swift_getKeyPath(&unk_173068);
  v88 = v139;
  static Published.subscript.getter(&v170, v88, v86, v87);

  swift_release(v86);
  swift_release(v87);
  if (v171)
  {
    v89 = swift_allocObject(&unk_1D16A0, 32, 7);
    *(_QWORD *)(v89 + 16) = v159;
    *(_QWORD *)(v89 + 24) = v88;
    v90 = sub_11CEC();
    v91 = v88;
    v92 = Button<>.init<A>(_:action:)(&v170, sub_F9EEC, v89, &type metadata for String, v90);
    v93 = static Color.red.getter(v92);
    v94 = static Alignment.center.getter(v93);
    _FrameLayout.init(width:height:alignment:)(&v170, 0, 1, 0x4042000000000000, 0, v94, v95);
    v96 = v170;
    LOBYTE(v90) = v171;
    v97 = v172;
    v98 = v173;
    v99 = v63;
    v100 = v75;
    v101 = v174;
    v102 = v175;
    ((void (*)(char *, _QWORD, char *))v141)((char *)v99 + *(int *)(v133 + 20), v143, v142);
    *v99 = v140;
    sub_F9E40((uint64_t)v99, v100);
    *(_WORD *)(v100 + *(int *)(v161 + 36)) = 256;
    sub_2808C(v100, v74 + *(int *)(v160 + 36), &qword_2019E0);
    *(_QWORD *)v74 = v93;
    *(_QWORD *)(v74 + 8) = v96;
    *(_BYTE *)(v74 + 16) = v90;
    *(_QWORD *)(v74 + 24) = v97;
    *(_BYTE *)(v74 + 32) = v98;
    *(_QWORD *)(v74 + 40) = v101;
    *(_QWORD *)(v74 + 48) = v102;
    swift_retain();
    sub_9944(v100, &qword_2019E0);
    sub_F9E84((uint64_t)v99);
    swift_release(v93);
    LOBYTE(v99) = static Edge.Set.horizontal.getter(v103);
    v104 = EdgeInsets.init(_all:)(-8.0);
    v106 = v105;
    v108 = v107;
    v110 = v109;
    v111 = v138;
    sub_2808C(v74, v138, &qword_2019E8);
    v112 = v111 + *(int *)(v134 + 36);
    *(_BYTE *)v112 = (_BYTE)v99;
    *(double *)(v112 + 8) = v104;
    *(_QWORD *)(v112 + 16) = v106;
    *(_QWORD *)(v112 + 24) = v108;
    *(_QWORD *)(v112 + 32) = v110;
    *(_BYTE *)(v112 + 40) = 0;
    v113 = sub_9944(v74, &qword_2019E8);
    v114 = static Alignment.center.getter(v113);
    v116 = v115;
    v117 = v154;
    v118 = (uint64_t)v135;
    v119 = (uint64_t)&v135[*(int *)(v154 + 36)];
    sub_2808C(v111, v119, &qword_2019C8);
    v120 = (uint64_t *)(v119 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_201A28) + 36));
    *v120 = v114;
    v120[1] = v116;
    v121 = v136;
    v122 = v158;
    v123 = v137;
    (*(void (**)(uint64_t, char *, uint64_t))(v136 + 16))(v118, v158, v137);
    sub_9944(v111, &qword_2019C8);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
    v124 = (uint64_t)v155;
    sub_982C(v118, (uint64_t)v155, &qword_2019D0);
    v125 = 0;
  }
  else
  {
    v124 = (uint64_t)v155;
    v117 = v154;
    v125 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v124, v125, 1, v117);
  v126 = v163;
  v127 = v152;
  sub_2808C(v163, v152, &qword_201A00);
  v128 = (uint64_t)v156;
  sub_2808C(v124, (uint64_t)v156, &qword_2019D8);
  v129 = v157;
  sub_2808C(v127, v157, &qword_201A00);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_201A20);
  sub_2808C(v128, v129 + *(int *)(v130 + 48), &qword_2019D8);
  sub_9944(v124, &qword_2019D8);
  sub_9944(v126, &qword_201A00);
  sub_9944(v128, &qword_2019D8);
  return sub_9944(v127, &qword_201A00);
}

uint64_t sub_F98F0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_172FF8);
  v5 = swift_getKeyPath(&unk_173020);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_F996C(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_172FF8);
  v5 = swift_getKeyPath(&unk_173020);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_F99D8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  __n128 v13;
  id v15;
  NSURL *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  Class isa;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_173088);
  v11 = swift_getKeyPath(&unk_1730B0);
  v12 = a2;
  static Published.subscript.getter(v5, v12, KeyPath, v11);

  swift_release(KeyPath);
  v13 = swift_release(v11);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v13) == 1)
    return sub_9944((uint64_t)v5, (uint64_t *)&unk_1FB990);
  (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v9, v5, v6);
  v15 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v16);
  v18 = v17;
  v19 = sub_CAD10((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_8330(&qword_1F99F0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_16A648);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, "openURL:options:completionHandler:", v18, isa, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_F9BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_F8BE0(*(_QWORD *)v1, *(void **)(v1 + 8), a1);
}

double sub_F9BDC@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_173040);
  v5 = swift_getKeyPath(&unk_173068);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_F9C58(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_173040);
  v6 = swift_getKeyPath(&unk_173068);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_F9CD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_173088);
  v5 = swift_getKeyPath(&unk_1730B0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_F9D3C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB990);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_2808C(a1, (uint64_t)&v14 - v8, (uint64_t *)&unk_1FB990);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_173088);
  v12 = swift_getKeyPath(&unk_1730B0);
  sub_2808C((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1FB990);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_9944((uint64_t)v9, (uint64_t *)&unk_1FB990);
}

uint64_t sub_F9E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F9E84(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_F9EC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_F9EEC()
{
  uint64_t v0;

  return sub_F99D8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_F9F00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201A30;
  if (!qword_201A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2019C0);
    sub_F9F6C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201A30);
  }
  return result;
}

unint64_t sub_F9F6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201A38;
  if (!qword_201A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2019B0);
    sub_27A8C(&qword_201A40, &qword_2019A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_27A8C(&qword_1FE780, &qword_1FE788, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_201A38);
  }
  return result;
}

uint64_t type metadata accessor for NavigationController()
{
  return objc_opt_self(_TtC12NowPlayingUI20NavigationController);
}

uint64_t type metadata accessor for NavigationBarBackgroundView()
{
  return objc_opt_self(_TtC12NowPlayingUI27NavigationBarBackgroundView);
}

id sub_FA20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  objc_class *v5;
  _BYTE *v6;
  id v7;
  id v8;
  Class isa;
  objc_super v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_16B2E0;
  *(_QWORD *)(v3 + 32) = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1);
  result = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCompositingColor:", a1);
  if (result)
  {
    *(_QWORD *)(v3 + 40) = result;
    v11 = v3;
    specialized Array._endMutation()(result);
    v5 = (objc_class *)type metadata accessor for NavigationBarBackgroundView();
    v6 = objc_allocWithZone(v5);
    v6[OBJC_IVAR____TtC12NowPlayingUI27NavigationBarBackgroundView_shouldUseTraitCollectionGroupName] = 1;
    *(_QWORD *)&v6[OBJC_IVAR____TtC12NowPlayingUI27NavigationBarBackgroundView_appearanceStorage] = 0;
    v10.receiver = v6;
    v10.super_class = v5;
    v7 = objc_msgSendSuper2(&v10, "initWithEffect:", 0);
    sub_FA374();
    v8 = v7;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    objc_msgSend(v8, "setUserInteractionEnabled:", 0);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_FA374()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1FEB88;
  if (!qword_1FEB88)
  {
    v1 = objc_opt_self(UIVisualEffect);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1FEB88);
  }
  return result;
}

uint64_t sub_FA3B0(uint64_t a1, void *a2, double a3)
{
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v6._object = (void *)0x800000000018B550;
  v6._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v6);
  Double.write<A>(to:)(v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a3);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRetain(a2);
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(a2);
  v9._countAndFlagsBits = 41;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return v11[0];
}

Swift::Int sub_FA488()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  Hasher.init(_seed:)(v6, 0);
  String.hash(into:)(v6, v1, v2);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v3;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_FA4EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  String.hash(into:)(a1, v2, v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v4;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
}

Swift::Int sub_FA524(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  Hasher.init(_seed:)(v7, a1);
  String.hash(into:)(v7, v2, v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v4;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t sub_FA584()
{
  uint64_t v0;

  return sub_FA3B0(*(_QWORD *)v0, *(void **)(v0 + 8), *(double *)(v0 + 16));
}

BOOL sub_FA590(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  char v10;
  _BOOL8 result;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = a1[2];
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(double *)(a2 + 16);
  if (*(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v7)
    return v6 == v8;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v7, 0);
  result = 0;
  if ((v10 & 1) != 0)
    return v6 == v8;
  return result;
}

uint64_t sub_FA5EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_4375C(*(id *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  return swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for ChapterTitleContent()
{
  return objc_opt_self(_TtC12NowPlayingUI19ChapterTitleContent);
}

_QWORD *sub_FA644(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for ChapterTitleContent.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for ChapterTitleContent.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ChapterTitleContent.ID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChapterTitleContent.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChapterTitleContent.ID()
{
  return &type metadata for ChapterTitleContent.ID;
}

unint64_t sub_FA7A4()
{
  unint64_t result;

  result = qword_201BE8;
  if (!qword_201BE8)
  {
    result = swift_getWitnessTable(&unk_1731B8, &type metadata for ChapterTitleContent.ID);
    atomic_store(result, (unint64_t *)&qword_201BE8);
  }
  return result;
}

unint64_t sub_FA7EC()
{
  unint64_t result;

  result = qword_201BF0;
  if (!qword_201BF0)
  {
    result = swift_getWitnessTable(&unk_173208, &type metadata for ChapterTitleContent.ID);
    atomic_store(result, (unint64_t *)&qword_201BF0);
  }
  return result;
}

uint64_t sub_FA830()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_FA83C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_FA848()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_FA854(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t sub_FA864()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_FA870(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

void sub_FA880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + 96);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  sub_4375C(v3);
}

uint64_t sub_FA894@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain(v2);
}

unint64_t sub_FA8AC(uint64_t a1)
{
  unint64_t result;

  result = sub_FA8D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_FA8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201BF8;
  if (!qword_201BF8)
  {
    v1 = type metadata accessor for ChapterTitleContent();
    result = swift_getWitnessTable(&unk_173248, v1);
    atomic_store(result, (unint64_t *)&qword_201BF8);
  }
  return result;
}

double sub_FA914(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  int v11;
  double v12;
  double v13;
  uint64_t v15;
  double v16;

  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 * a3;
  v16 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    v12 = round(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    v12 = rint(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.up(_:))
  {
    v12 = ceil(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.down(_:))
  {
    v12 = floor(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    v12 = trunc(v10);
  }
  else if (v11 == enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    Double._roundSlowPath(_:)(a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v16;
  }
  return v12 / a2;
}

uint64_t sub_FAA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_FBF60(a1);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      v12 = swift_unknownObjectRetain(v9);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
      v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1D18E8, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_201D90, v17);
}

uint64_t sub_FABDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_FBF60(a1);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      v12 = swift_unknownObjectRetain(v9);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
      v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1D1960, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_201DE8);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  else
  {
    v19 = 0;
  }
  return swift_task_create(v8, v19, v18, &unk_201DE0, v17);
}

uint64_t sub_FAD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize(v4);
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_QWORD *)(v4 + 176) = 2;
  *(_BYTE *)(v4 + 184) = 0;
  *(_QWORD *)(v4 + 192) = 0;
  *(_QWORD *)(v4 + 200) = 0;
  *(_QWORD *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 120) = a4;
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject(&unk_1D1988, 56, 7);
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v4;
  v13[5] = a1;
  v13[6] = a2;
  swift_retain(v4);
  v14 = sub_FAA98((uint64_t)v11, (uint64_t)&unk_201DF8, (uint64_t)v13);
  swift_release(v14);
  return v4;
}

uint64_t sub_FAE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch(sub_FAE4C, a4, 0);
}

uint64_t sub_FAE4C()
{
  uint64_t v0;
  double v1;

  v1 = sub_FAF64(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

_QWORD *sub_FAE80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[24];
  if (v1)
  {
    swift_retain(v0[24]);
    Task.cancel()();
    swift_release(v1);
  }
  v2 = v0[25];
  if (v2)
  {
    swift_retain(v0[25]);
    Task.cancel()();
    swift_release(v2);
  }
  swift_release(v0[15]);
  swift_release(v0[24]);
  swift_release(v0[25]);
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_FAF2C()
{
  uint64_t v0;

  sub_FAE80();
  return swift_defaultActor_deallocate(v0);
}

uint64_t _s23SkippedDurationObserverCMa()
{
  return objc_opt_self(_TtCC12NowPlayingUI31NowPlayingMediaPlayerController23SkippedDurationObserver);
}

double sub_FAF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v10 = sub_FBDF0();
  v11 = (_QWORD *)swift_allocObject(&unk_1D1898, 48, 7);
  v11[2] = v2;
  v11[3] = v10;
  v11[4] = a1;
  v11[5] = v2;
  swift_retain_n(v2, 2);
  swift_retain();
  v12 = sub_FAA98((uint64_t)v7, (uint64_t)&unk_201D50, (uint64_t)v11);
  v13 = *(_QWORD *)(v2 + 192);
  *(_QWORD *)(v2 + 192) = v12;
  v14 = swift_release(v13);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v9)(v7, 1, 1, v8, v14);
  v15 = (_QWORD *)swift_allocObject(&unk_1D18C0, 48, 7);
  v15[2] = v2;
  v15[3] = v10;
  v15[4] = a2;
  v15[5] = v2;
  swift_retain_n(v2, 2);
  swift_retain();
  v16 = sub_FAA98((uint64_t)v7, (uint64_t)&unk_201D60, (uint64_t)v15);
  v17 = *(_QWORD *)(v2 + 200);
  *(_QWORD *)(v2 + 200) = v16;
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_FB0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[15] = a4;
  v5[16] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_201D98);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_201DA0);
  v5[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[22] = v11;
  v5[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_FB184, a5, 0);
}

uint64_t sub_FB184()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[18];
  v0[13] = v0[15];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_201DA8);
  v5 = sub_27A8C(&qword_201DB0, &qword_201DA8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.values.getter(v4, v5);
  AsyncPublisher.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[24] = sub_FBDF0();
  v6 = sub_27A8C(&qword_201DB8, &qword_201DA0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v0[25] = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[26] = v7;
  *v7 = v0;
  v7[1] = sub_FB29C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v0[21], v6);
}

uint64_t sub_FB29C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 208));
  if (v0)
  {
    if (v2[16])
    {
      v3 = v2[24];
      ObjectType = swift_getObjectType(v2[16]);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v3, v5);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v2[27] = v0;
    v9 = sub_FB614;
    v10 = v6;
  }
  else
  {
    v9 = sub_FB340;
    v10 = v2[16];
    v8 = 0;
  }
  return swift_task_switch(v9, v10, v8);
}

uint64_t sub_FB340(__n128 a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  __n128 v38;

  v4 = *(__n128 *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 64);
  if (v5 == 2)
  {
    v6 = *(_QWORD *)(v3 + 184);
    v7 = *(_QWORD *)(v3 + 160);
    v8 = *(_QWORD *)(v3 + 136);
    (*(void (**)(uint64_t, _QWORD, __n128, __n128, __n128, __n128))(*(_QWORD *)(v3 + 176) + 8))(v6, *(_QWORD *)(v3 + 168), a1, a2, a3, v4);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  v10 = *(_OWORD *)(v3 + 32);
  v11 = *(_OWORD *)(v3 + 48);
  v12 = *(_QWORD *)(v3 + 128);
  if ((*(_BYTE *)(v12 + 184) & 1) != 0 && *(_BYTE *)(v12 + 176) != 2)
  {
    v37 = *(_OWORD *)(v3 + 32);
    v38 = *(__n128 *)(v3 + 16);
    v13 = *(_QWORD *)(v3 + 136);
    v36 = *(_OWORD *)(v3 + 48);
    v14 = *(double *)&v11 - *(double *)(v12 + 160) - (v4.n128_f64[0] - *(double *)(v12 + 128)) * *(float *)(v12 + 168);
    v15 = type metadata accessor for TaskPriority(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v15);
    v18 = *(_QWORD *)(v12 + 112);
    v17 = *(_QWORD *)(v12 + 120);
    type metadata accessor for MainActor(0);
    v19 = swift_retain();
    v20 = static MainActor.shared.getter(v19);
    v21 = swift_allocObject(&unk_1D1910, 56, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v21 + 32) = v18;
    *(_QWORD *)(v21 + 40) = v17;
    *(double *)(v21 + 48) = v14;
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
    v23 = *(_QWORD *)(v3 + 136);
    if ((_DWORD)v22 == 1)
    {
      sub_FBF60(*(_QWORD *)(v3 + 136));
      v24 = 7168;
      if (v20)
      {
LABEL_7:
        v25 = *(_QWORD *)(v21 + 24);
        ObjectType = swift_getObjectType(v20);
        v27 = swift_unknownObjectRetain(v20);
        v28 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v25, v27);
        v30 = v29;
        swift_unknownObjectRelease(v20);
LABEL_10:
        v32 = swift_allocObject(&unk_1D1938, 32, 7);
        *(_QWORD *)(v32 + 16) = &unk_201DC8;
        *(_QWORD *)(v32 + 24) = v21;
        if (v30 | v28)
        {
          v33 = v3 + 72;
          *(_QWORD *)(v3 + 72) = 0;
          *(_QWORD *)(v3 + 80) = 0;
          *(_QWORD *)(v3 + 88) = v28;
          *(_QWORD *)(v3 + 96) = v30;
        }
        else
        {
          v33 = 0;
        }
        v34 = swift_task_create(v24, v33, (char *)&type metadata for () + 8, &unk_201DD0, v32);
        swift_release(v34);
        v12 = *(_QWORD *)(v3 + 128);
        v10 = v37;
        v4 = v38;
        v11 = v36;
        goto LABEL_14;
      }
    }
    else
    {
      v31 = TaskPriority.rawValue.getter(v22);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v23, v15);
      v24 = v31 | 0x1C00;
      v20 = *(_QWORD *)(v21 + 16);
      if (v20)
        goto LABEL_7;
    }
    v28 = 0;
    v30 = 0;
    goto LABEL_10;
  }
LABEL_14:
  *(__n128 *)(v12 + 128) = v4;
  *(_OWORD *)(v12 + 144) = v10;
  *(_OWORD *)(v12 + 160) = v11;
  *(_QWORD *)(v12 + 176) = v5 & 0x10101;
  *(_BYTE *)(v12 + 184) = 0;
  v35 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v3 + 224) = v35;
  *v35 = v3;
  v35[1] = sub_FB674;
  return dispatch thunk of AsyncIteratorProtocol.next()(v3 + 16, *(_QWORD *)(v3 + 168), *(_QWORD *)(v3 + 200));
}

uint64_t sub_FB614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 216);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
  v2 = swift_dynamicCast(v1, v0 + 112, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_FB674()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 224));
  if (v0)
  {
    v3 = v2[24];
    ObjectType = swift_getObjectType(v2[16]);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v3, v5);
    v8 = v7;
    v2[27] = v0;
    v9 = sub_FB614;
    v10 = v6;
    v11 = v8;
  }
  else
  {
    v10 = v2[16];
    v9 = sub_FB340;
    v11 = 0;
  }
  return swift_task_switch(v9, v10, v11);
}

uint64_t sub_FB70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[4] = a4;
  v5[5] = a5;
  v7 = type metadata accessor for PlaybackController.TransportCommand(0);
  v5[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[7] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[8] = swift_task_alloc(v9);
  v5[9] = swift_task_alloc(v9);
  v5[10] = swift_task_alloc(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_201D68);
  v5[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_201D70);
  v5[12] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[13] = v12;
  v5[14] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_201D78);
  v5[15] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[16] = v14;
  v5[17] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_FB808, a5, 0);
}

uint64_t sub_FB808()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  v0[2] = v0[4];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDEF0);
  v5 = sub_27A8C((unint64_t *)&unk_1FDEF8, &qword_1FDEF0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.values.getter(v4, v5);
  AsyncPublisher.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[18] = sub_FBDF0();
  v6 = sub_27A8C(&qword_201D80, &qword_201D78, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v0[19] = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[20] = v7;
  *v7 = v0;
  v7[1] = sub_FB91C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[11], v0[15], v6);
}

uint64_t sub_FB91C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  if (v0)
  {
    *(_QWORD *)(v2 + 168) = v0;
    v3 = *(_QWORD *)(v2 + 40);
    if (v3)
    {
      v4 = *(_QWORD *)(v2 + 144);
      ObjectType = swift_getObjectType(v3);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v4, v6);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v12 = sub_FBC34;
    v10 = v7;
  }
  else
  {
    v10 = *(_QWORD *)(v2 + 40);
    v11 = enum case for PlaybackController.TransportCommand.jumpBackward(_:);
    *(_DWORD *)(v2 + 184) = enum case for PlaybackController.TransportCommand.jumpForward(_:);
    *(_DWORD *)(v2 + 188) = v11;
    v12 = sub_FB9D0;
    v9 = 0;
  }
  return swift_task_switch(v12, v10, v9);
}

uint64_t sub_FB9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  char v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  double v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(v4, *(_QWORD *)(v0 + 120));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v1);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = *(unsigned int *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v11, v1, v2);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v14(v12, v10, v2);
  v15 = static PlaybackController.TransportCommand.== infix(_:_:)(v11, v12);
  v16 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v16(v12, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v13, v11, v2);
  if ((v15 & 1) != 0)
  {
    v16(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 48);
    v14(v18, *(unsigned int *)(v0 + 188), v19);
    v20 = static PlaybackController.TransportCommand.== infix(_:_:)(v17, v18);
    v16(v18, v19);
    v16(v17, v19);
    if ((v20 & 1) == 0)
    {
      v16(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48));
      goto LABEL_13;
    }
  }
  v22 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 40);
  v23 = *(_QWORD *)(v0 + 48);
  v14(v22, *(unsigned int *)(v0 + 184), v23);
  v25 = static PlaybackController.TransportCommand.== infix(_:_:)(v21, v22);
  v16(v22, v23);
  v16(v21, v23);
  if (*(_BYTE *)(v24 + 176) != 2)
  {
    v26 = *(_QWORD *)(v0 + 40);
    v27 = *(double *)(v26 + 160);
    if ((v25 & 1) != 0)
    {
      if (v27 >= *(double *)(v26 + 152) + -0.5)
        goto LABEL_13;
      goto LABEL_12;
    }
    if (v27 >= 0.5)
LABEL_12:
      *(_BYTE *)(v26 + 184) = 1;
  }
LABEL_13:
  v28 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 176) = v28;
  *v28 = v0;
  v28[1] = sub_FBC94;
  return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 152));
}

uint64_t sub_FBC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 168);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF88);
  v2 = swift_dynamicCast(v1, v0 + 24, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_FBC94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 176));
  if (v0)
  {
    v2[21] = v0;
    v3 = v2[5];
    if (v3)
    {
      v4 = v2[18];
      ObjectType = swift_getObjectType(v3);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v4, v6);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v11 = sub_FBC34;
    v10 = v7;
  }
  else
  {
    v10 = v2[5];
    v11 = sub_FB9D0;
    v9 = 0;
  }
  return swift_task_switch(v11, v10, v9);
}

uint64_t sub_FBD2C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(double *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 16) = a5;
  *(_QWORD *)(v6 + 24) = a6;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 40) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  return swift_task_switch(sub_FBD9C, v9, v10);
}

uint64_t sub_FBD9C()
{
  uint64_t v0;
  double v1;
  void (*v2)(uint64_t, double);
  uint64_t v3;

  v1 = *(double *)(v0 + 32);
  v2 = *(void (**)(uint64_t, double))(v0 + 16);
  v3 = swift_release(*(_QWORD *)(v0 + 40));
  v2(v3, round(v1));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_FBDE4()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_FBDF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_201D48;
  if (!qword_201D48)
  {
    v1 = _s23SkippedDurationObserverCMa();
    result = swift_getWitnessTable(&unk_173328, v1);
    atomic_store(result, (unint64_t *)&qword_201D48);
  }
  return result;
}

uint64_t sub_FBE38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_201D44);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_281D8;
  return sub_FB0CC(a1, v4, v5, v7, v6);
}

uint64_t objectdestroyTm_8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_FBEE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_201D5C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_27CA8;
  return sub_FB70C(a1, v4, v5, v7, v6);
}

uint64_t sub_FBF60(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB3C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_FBFA0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_FC004;
  return v6(a1);
}

uint64_t sub_FC004()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_FC050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_201D8C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_281D8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_201D88 + dword_201D88))(a1, v4);
}

uint64_t sub_FC0C0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_FC0EC(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_201DC4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_281D8;
  return sub_FBD2C(v8, a1, v4, v5, v6, v7);
}

uint64_t sub_FC174()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_FC198(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_FC200;
  return v5(v2 + 32);
}

uint64_t sub_FC200()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_FC250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_201DDC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_27CA8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_201DD8 + dword_201DD8))(a1, v4);
}

uint64_t sub_FC2C0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_FC2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(dword_201DF4);
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_281D8;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch(sub_FAE4C, v4, 0);
}

id sub_FC39C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  id v18;
  objc_class *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t ObjectType;
  uint64_t (*v40)(uint64_t, uint64_t, __n128);
  __n128 v41;
  id v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  id v47;
  id v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  char v52[24];
  objc_super v53;
  objc_super v54;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA938);
  __chkstk_darwin(v1);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FA940);
  v4 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (objc_class *)type metadata accessor for CompositeCollectionViewAwareTableCell(0);
  v54.receiver = v0;
  v54.super_class = v17;
  v18 = objc_msgSendSuper2(&v54, "_collectionView");
  if (v18)
  {
    v50 = v9;
    v19 = (objc_class *)type metadata accessor for CompositeCollectionView();
    v20 = (void *)swift_dynamicCastClass(v18, v19);
    if (v20)
    {
      v49 = v16;
      v53.receiver = v20;
      v53.super_class = v19;
      v21 = v18;
      v22 = objc_msgSendSuper2(&v53, "dataSource");
      if (v22)
      {
        v23 = v22;
        v48 = v21;
        v24 = type metadata accessor for CompositeCollectionViewController();
        v25 = swift_dynamicCastClass(v23, v24);
        if (v25)
        {
          v26 = v25;
          v47 = v23;
          v27 = (uint64_t)v0 + OBJC_IVAR____TtC12NowPlayingUI37CompositeCollectionViewAwareTableCell_lastAppliedIndexPath;
          swift_beginAccess(v27, v52, 0, 0);
          sub_FCE7C(v27, (uint64_t)v12);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
          {
            swift_unknownObjectRelease(v47);

            sub_9944((uint64_t)v12, (uint64_t *)&unk_1FA950);
          }
          else
          {
            v46 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
            v46(v49, v12, v13);
            v28 = *(_QWORD *)(v26 + OBJC_IVAR____TtC12NowPlayingUI33CompositeCollectionViewController_countData);
            swift_retain();
            sub_94CB4(0, 0, 0, (uint64_t)v3);
            v29 = swift_release(v28);
            v30 = v51;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v4 + 48))(v3, 1, v51, v29) == 1)
            {
              (*(void (**)(char *, uint64_t))(v14 + 8))(v49, v13);
              swift_unknownObjectRelease(v47);

              sub_9944((uint64_t)v3, &qword_1FA938);
            }
            else
            {
              v31 = *(int *)(v30 + 48);
              v32 = (uint64_t)v50;
              v33 = (char *)v50 + v31;
              v35 = *(_QWORD *)v3;
              v34 = *((_QWORD *)v3 + 1);
              v36 = *((_QWORD *)v3 + 2);
              v37 = v3[24];
              *v50 = *(_QWORD *)v3;
              *(_QWORD *)(v32 + 8) = v34;
              *(_QWORD *)(v32 + 16) = v36;
              *(_BYTE *)(v32 + 24) = v37;
              v46((char *)(v32 + v31), &v3[v31], v13);
              v38 = &v6[*(int *)(v51 + 48)];
              *(_QWORD *)v6 = v35;
              *((_QWORD *)v6 + 1) = v34;
              *((_QWORD *)v6 + 2) = v36;
              v6[24] = v37;
              (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v38, v33, v13);
              ObjectType = swift_getObjectType(v35);
              v40 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v34 + 8);
              v41 = swift_unknownObjectRetain(v35);
              v18 = (id)v40(ObjectType, v34, v41);
              swift_unknownObjectRelease(v35);
              swift_unknownObjectRelease(v47);
              v42 = v48;

              sub_9944(v32, &qword_1FA940);
              v43 = *(void (**)(char *, uint64_t))(v14 + 8);
              v43(v49, v13);
              v43(v38, v13);
            }
          }
        }
        else
        {
          swift_unknownObjectRelease(v23);

        }
      }
      else
      {

      }
    }
  }
  return v18;
}

void sub_FC7D4(void *a1)
{
  char *v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  objc_class *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  objc_super v28;
  _BYTE v29[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UnsafeMutableRawPointer.hashValue.getter(v4))
  {
    v7 = objc_msgSend(a1, "indexPath");
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v7);

    v8 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  else
  {
    v9 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC12NowPlayingUI37CompositeCollectionViewAwareTableCell_lastAppliedIndexPath];
  swift_beginAccess(&v1[OBJC_IVAR____TtC12NowPlayingUI37CompositeCollectionViewAwareTableCell_lastAppliedIndexPath], v29, 33, 0);
  sub_FCE34((uint64_t)v6, v10);
  swift_endAccess(v29);
  v11 = objc_msgSend(v1, "tableViewCell");
  if (!v11)
  {
    __break(1u);
    goto LABEL_12;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "_drawsSeparatorAtTopOfSection");

  v14 = objc_msgSend(v1, "tableViewCell");
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "_drawsSeparatorAtBottomOfSection");

  v17 = objc_msgSend(v1, "tableViewCell");
  if (!v17)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "showsReorderControl");

  v20 = (objc_class *)type metadata accessor for CompositeCollectionViewAwareTableCell(0);
  v28.receiver = v1;
  v28.super_class = v20;
  objc_msgSendSuper2(&v28, "applyLayoutAttributes:", a1);
  v21 = objc_msgSend(v1, "tableViewCell");
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v21;
  objc_msgSend(v21, "_setDrawsSeparatorAtTopOfSection:", v13);

  v23 = objc_msgSend(v1, "tableViewCell");
  if (!v23)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v24 = v23;
  objc_msgSend(v23, "_setDrawsSeparatorAtBottomOfSection:", v16);

  v25 = objc_msgSend(v1, "tableViewCell");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setShowsReorderControl:", v19);

    return;
  }
LABEL_16:
  __break(1u);
}

id sub_FCCD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CompositeCollectionViewAwareTableCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_FCD30()
{
  return type metadata accessor for CompositeCollectionViewAwareTableCell(0);
}

uint64_t type metadata accessor for CompositeCollectionViewAwareTableCell(uint64_t a1)
{
  uint64_t result;

  result = qword_201E30;
  if (!qword_201E30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CompositeCollectionViewAwareTableCell);
  return result;
}

void sub_FCD74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_FCDE0(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_FCDE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_201E40)
  {
    v2 = type metadata accessor for IndexPath(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_201E40);
  }
}

uint64_t sub_FCE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_FCE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_FCEC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  sub_145A0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  sub_145A0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for PresentationDonationItem()
{
  return objc_opt_self(_TtC12NowPlayingUI24PresentationDonationItem);
}

uint64_t sub_FCF28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  sub_145A0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_145A0(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_145A0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_145A0(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for PresentationDonationTarget()
{
  return objc_opt_self(_TtC12NowPlayingUI26PresentationDonationTarget);
}

uint64_t sub_FCF94(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  result = (uint64_t)&_swiftEmptyArrayStorage;
  v36 = *(_QWORD *)(a1 + 16);
  if (!v36)
    return result;
  v4 = a2 & 1;
  v30 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v33 = (uint64_t *)(a1 + 40);
  v35 = a1;
  while (1)
  {
    v31 = v5;
    v6 = (_QWORD *)(v30 + 16 * v5);
    v7 = *v6;
    v8 = v6[1];
    ObjectType = swift_getObjectType(*v6);
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    swift_unknownObjectRetain(v7);
    result = v10(ObjectType, v8);
    v32 = result;
    if ((unint64_t)result >> 62)
      break;
    v11 = *(_QWORD *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFF8));
    v12 = v35;
    if (v11)
      goto LABEL_6;
LABEL_3:
    v5 = v31 + 1;
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v32);
    if (v31 + 1 == v36)
    {
      swift_bridgeObjectRelease(v12);
      return (uint64_t)&_swiftEmptyArrayStorage;
    }
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  v11 = result;
  v12 = v35;
  if (!result)
    goto LABEL_3;
LABEL_6:
  v13 = 0;
  v34 = v11;
LABEL_9:
  if ((v32 & 0xC000000000000001) != 0)
  {
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v32);
    v14 = result;
    v15 = __OFADD__(v13, 1);
    v16 = v13 + 1;
    if (v15)
      goto LABEL_29;
    goto LABEL_15;
  }
  if (v13 >= *(_QWORD *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFFF8)))
    goto LABEL_30;
  v14 = *(_QWORD *)(v32 + 32 + 8 * v13);
  result = swift_retain(v14);
  v15 = __OFADD__(v13, 1);
  v16 = v13 + 1;
  if (!v15)
  {
LABEL_15:
    v37 = v16;
    swift_bridgeObjectRetain(v12);
    v17 = v33;
    v18 = v36;
    while (1)
    {
      v19 = *(v17 - 1);
      if (v19 != v7)
      {
        v20 = *v17;
        v21 = swift_getObjectType(*(v17 - 1));
        v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16);
        swift_unknownObjectRetain(v19);
        v23 = v22(v14, v4, v21, v20);
        if (v23)
        {
          v24 = v23;
          v12 = v35;
          swift_bridgeObjectRelease(v35);
          v25 = *(_QWORD *)(v24 + 40);
          *(_QWORD *)(v24 + 40) = v14;
          swift_retain(v14);
          swift_release(v25);
          v26 = swift_retain(v24);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
          v28 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
          v27 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
          if (v28 >= v27 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
          v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v24);
          specialized Array._endMutation()(v29);
          swift_unknownObjectRelease(v19);
          swift_release(v24);
          result = swift_release(v14);
LABEL_8:
          v13 = v37;
          if (v37 == v34)
            goto LABEL_3;
          goto LABEL_9;
        }
        swift_unknownObjectRelease(v19);
      }
      v17 += 2;
      if (!--v18)
      {
        swift_release(v14);
        v12 = v35;
        result = swift_bridgeObjectRelease(v35);
        goto LABEL_8;
      }
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t _s15LabelPropertiesVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_10B0C(*(void **)a2, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  return a1;
}

uint64_t _s15LabelPropertiesVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_10B0C(*(void **)a2, v5, v6, v7, v8, v9, v10);
  v12 = *(void **)a1;
  v13 = *(void **)(a1 + 8);
  v14 = *(void **)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  sub_10B64(v12, v13, v14, v15, v16, v17, v18);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t _s15LabelPropertiesVwta(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v12;
  sub_10B64(v4, v5, v6, v7, v8, v9, v10);
  v13 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v13;
  return a1;
}

uint64_t _s15LabelPropertiesVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x3FFFFFFF);
  v3 = ((*(_DWORD *)(a1 + 48) >> 1) & 0x3FFFFFFE | (*(_DWORD *)(a1 + 48) >> 31)) ^ 0x3FFFFFFF;
  if (v3 >= 0x3FFFFFFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s15LabelPropertiesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x3FFFFFFF;
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x3FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_QWORD *)(result + 48) = (4 * ((-a2 >> 1) & 0x1FFFFFFF)) | (a2 << 31);
      *(_QWORD *)(result + 56) = 0;
    }
  }
  return result;
}

ValueMetadata *_s15LabelPropertiesVMa()
{
  return &_s15LabelPropertiesVN;
}

double sub_FD4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double result;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  id v10;
  id v11;
  double v12;

  v3 = *(double *)(v2 + 80);
  if ((*(_BYTE *)(v2 + 51) & 0x80) != 0)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
    v7 = *(_QWORD *)(v2 + 24);
    swift_retain(v7);
    v9 = (void *)v8(a1, a2);
    v10 = objc_msgSend(v9, "MTMPU_tallestFontFromAttributes");

    if (v10)
    {
      v11 = v10;
      objc_msgSend(v11, "_scaledValueForValue:", v3);
      v3 = v12;

    }
    swift_release(v7);
    return v3;
  }
  else
  {
    objc_msgSend(*(id *)v2, "scaledValueForValue:", *(double *)(v2 + 80));
  }
  return result;
}

double sub_FD5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double result;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  id v10;
  id v11;
  double v12;

  v3 = *(double *)(v2 + 88);
  if ((*(_BYTE *)(v2 + 51) & 0x80) != 0)
  {
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
    v7 = *(_QWORD *)(v2 + 24);
    swift_retain(v7);
    v9 = (void *)v8(a1, a2);
    v10 = objc_msgSend(v9, "MTMPU_tallestFontFromAttributes");

    if (v10)
    {
      v11 = v10;
      objc_msgSend(v11, "_scaledValueForValue:", v3);
      v3 = v12;

    }
    swift_release(v7);
    return v3;
  }
  else
  {
    objc_msgSend(*(id *)v2, "scaledValueForValue:", *(double *)(v2 + 88));
  }
  return result;
}

Swift::Int sub_FD6B0()
{
  uint64_t v0;
  int v1;
  __int128 v2;
  uint64_t v3;
  Swift::UInt v4;
  Swift::UInt v5;
  _QWORD v7[9];
  __int128 v8[8];
  _OWORD v9[3];
  __int128 v10;

  Hasher.init(_seed:)(v7, 0);
  sub_75310((__int128 *)v0, v8);
  sub_75310(v8, v9);
  v1 = v10;
  *(_QWORD *)&v10 = v10 & 0xFFFFFFFF7FFFFFFFLL;
  if (v1 < 0)
  {
    v2 = v9[0];
    sub_11D30((_QWORD *)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    v3 = String.hashValue.getter(v2, *((_QWORD *)&v2 + 1));
    Hasher._combine(_:)(~v3);
  }
  else
  {
    v8[4] = v9[0];
    v8[5] = v9[1];
    v8[6] = v9[2];
    v8[7] = v10;
    sub_11D30((_QWORD *)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    sub_7487C((uint64_t)v7);
  }
  sub_11D30((_QWORD *)v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
  Hasher._combine(_:)(*(_QWORD *)(v0 + 64));
  Hasher._combine(_:)(*(_QWORD *)(v0 + 72));
  v4 = CGFloat.roundInteger.getter(*(double *)(v0 + 80));
  Hasher._combine(_:)(v4);
  v5 = CGFloat.roundInteger.getter(*(double *)(v0 + 88));
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

Swift::Int sub_FD7C0()
{
  return sub_FD6B0();
}

void sub_FD800(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  Swift::UInt v13;
  Swift::UInt v14;
  Swift::UInt v15;
  Swift::UInt v16;

  v3 = *(void **)v1;
  v4 = *(void **)(v1 + 8);
  v6 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v15 = *(_QWORD *)(v1 + 64);
  v16 = *(_QWORD *)(v1 + 72);
  v11 = *(double *)(v1 + 80);
  v10 = *(double *)(v1 + 88);
  sub_10B0C(*(void **)v1, v4, v6, v5, v8, v7, v9);
  if ((v9 & 0x80000000) != 0)
  {
    v12 = String.hashValue.getter(v3, v4);
    Hasher._combine(_:)(~v12);
  }
  else
  {
    sub_7487C(a1);
  }
  sub_10B64(v3, v4, v6, v5, v8, v7, v9);
  Hasher._combine(_:)(v15);
  Hasher._combine(_:)(v16);
  v13 = CGFloat.roundInteger.getter(v11);
  Hasher._combine(_:)(v13);
  v14 = CGFloat.roundInteger.getter(v10);
  Hasher._combine(_:)(v14);
}

Swift::Int sub_FD954(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::UInt v10;
  double v11;
  double v12;
  uint64_t v13;
  Swift::UInt v14;
  Swift::UInt v15;
  Swift::UInt v17;
  _QWORD v18[12];
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  uint64_t v24;

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v5 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v17 = *(_QWORD *)(v1 + 72);
  v12 = *(double *)(v1 + 80);
  v11 = *(double *)(v1 + 88);
  Hasher.init(_seed:)(v18, a1);
  if ((v9 & 0x80000000) != 0)
  {
    sub_10B0C(v2, v3, v5, v4, v6, v7, v9);
    v13 = String.hashValue.getter(v2, v3);
    Hasher._combine(_:)(~v13);
  }
  else
  {
    v18[9] = v2;
    v18[10] = v3;
    v18[11] = v5;
    v19 = v4;
    v20 = v6;
    v21 = v7;
    v22 = v9;
    v23 = HIDWORD(v9);
    v24 = v8;
    sub_10B0C(v2, v3, v5, v4, v6, v7, v9);
    sub_7487C((uint64_t)v18);
  }
  sub_10B64(v2, v3, v5, v4, v6, v7, v9);
  Hasher._combine(_:)(v10);
  Hasher._combine(_:)(v17);
  v14 = CGFloat.roundInteger.getter(v12);
  Hasher._combine(_:)(v14);
  v15 = CGFloat.roundInteger.getter(v11);
  Hasher._combine(_:)(v15);
  return Hasher._finalize()();
}

uint64_t sub_FDABC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_FDB5C((uint64_t)v9, (uint64_t)v10) & 1;
}

unint64_t sub_FDB18()
{
  unint64_t result;

  result = qword_202078;
  if (!qword_202078)
  {
    result = swift_getWitnessTable(&unk_17345C, &_s15LabelPropertiesVN);
    atomic_store(result, (unint64_t *)&qword_202078);
  }
  return result;
}

uint64_t sub_FDB5C(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned __int8 v5;
  __int128 v6;
  char v7;
  char v8;
  __int128 v10[4];
  __int128 v11[4];
  _OWORD v12[4];
  _OWORD v13[4];
  _OWORD v14[3];
  __int128 v15;
  _OWORD v16[3];
  __int128 v17;

  sub_75310((__int128 *)a1, v11);
  sub_75310((__int128 *)a2, v10);
  sub_75310(v11, v14);
  v4 = v15;
  *(_QWORD *)&v15 = v15 & 0xFFFFFFFF7FFFFFFFLL;
  if ((v4 & 0x80000000) == 0)
  {
    v12[0] = v14[0];
    v12[1] = v14[1];
    v12[2] = v14[2];
    v12[3] = v15;
    sub_75310(v10, v16);
    if ((v17 & 0x80000000) != 0)
      goto LABEL_12;
    *(_QWORD *)&v17 = v17 & 0xFFFFFFFF7FFFFFFFLL;
    v13[0] = v16[0];
    v13[1] = v16[1];
    v13[2] = v16[2];
    v13[3] = v17;
    sub_11D30((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    sub_11D30((_QWORD *)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B0C);
    v5 = sub_746EC((uint64_t)v12, (uint64_t)v13);
    sub_11D30((_QWORD *)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
    sub_11D30((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10B64);
    if ((v5 & 1) == 0)
      goto LABEL_12;
    goto LABEL_8;
  }
  v6 = v14[0];
  sub_75310(v10, v16);
  if ((v17 & 0x80000000) == 0)
    goto LABEL_12;
  *(_QWORD *)&v17 = v17 & 0xFFFFFFFF7FFFFFFFLL;
  if (v6 == v16[0]
    || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, *((_QWORD *)&v6 + 1), *(_QWORD *)&v16[0], *((_QWORD *)&v16[0] + 1), 0), v8 = 0, (v7 & 1) != 0))
  {
LABEL_8:
    if (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64)
      && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
      && (static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 80), *(double *)(a2 + 80)) & 1) != 0)
    {
      v8 = static CGFloat.==~ infix(_:_:)(*(double *)(a1 + 88), *(double *)(a2 + 88));
      return v8 & 1;
    }
LABEL_12:
    v8 = 0;
  }
  return v8 & 1;
}

void sub_FDCF0(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t *sub_FDD24()
{
  if (qword_1F95B0 != -1)
    swift_once(&qword_1F95B0, sub_FDF98);
  return &qword_210338;
}

UIImage __swiftcall UIImage.applying(tintColor:)(UIColor tintColor)
{
  void *v1;

  return (UIImage)objc_msgSend(v1, "imageWithTintColor:", tintColor.super.isa);
}

uint64_t *sub_FDD90()
{
  if (qword_1F9610 != -1)
    swift_once(&qword_1F9610, sub_FE4B4);
  return &qword_210388;
}

id sub_FDDD0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0901960784, 0.0901960784, 0.0901960784, 1.0);
  qword_210300 = (uint64_t)result;
  return result;
}

id sub_FDE14(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_systemBackgroundColor, &qword_210308);
}

id sub_FDE28()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.1);
  qword_210310 = (uint64_t)result;
  return result;
}

id sub_FDE64(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_separatorColor, &qword_210318);
}

id sub_FDE78()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.447058824, 0.141176471, 0.847058824, 1.0);
  qword_210320 = (uint64_t)result;
  return result;
}

id sub_FDEC4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.611764706, 0.352941176, 0.949019608, 1.0);
  qword_210328 = (uint64_t)result;
  return result;
}

void sub_FDF10()
{
  void *v0;
  uint64_t v1;

  if (qword_1F9598 != -1)
    swift_once(&qword_1F9598, sub_FDE78);
  v0 = (void *)qword_210320;
  if (qword_1F95A0 != -1)
    swift_once(&qword_1F95A0, sub_FDEC4);
  sub_FF1D4(v0, (void *)qword_210328);
  qword_210330 = v1;
}

id sub_FDF98(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_labelColor, &qword_210338);
}

id sub_FDFC8(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_secondaryLabelColor, &qword_210340);
}

id sub_FDFF8(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return *a4;
}

void sub_FE034()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0156862745, 0.0156862745, 0.0588235294, 0.45);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.898039216, 0.898039216, 0.917647059, 1.0);
  sub_FF1D4(v0, v1);
  v3 = v2;

  qword_210348 = v3;
}

void sub_FE0E0()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.388235294, 0.388235294, 0.4, 1.0);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.976470588, 0.976470588, 0.996078431, 1.0);
  sub_FF1D4(v0, v1);
  v3 = v2;

  qword_210350 = v3;
}

id sub_FE184()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.898039216, 0.898039216, 0.917647059, 1.0);
  qword_210358 = (uint64_t)result;
  return result;
}

void sub_FE1E8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.82);
  if (qword_1F9578 != -1)
    swift_once(&qword_1F9578, sub_FDDD0);
  sub_FF1D4(v0, (void *)qword_210300);
  v2 = v1;

  qword_210360 = v2;
}

id sub_FE270()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.32);
  qword_210368 = (uint64_t)result;
  return result;
}

void sub_FE2AC()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.67);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  sub_FF1D4(v0, v1);
  v3 = v2;

  qword_210370 = v3;
}

void sub_FE334()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.15);
  v2 = kCAFilterPlusD;
  v3 = objc_msgSend(v0, "_colorBlendedWithColor:compositingFilter:", v1, v2);

  if (v3)
    qword_202080 = (uint64_t)v3;
  else
    __break(1u);
}

id sub_FE3F4(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_tertiarySystemBackgroundColor, &qword_202088);
}

void sub_FE408()
{
  void *v0;
  uint64_t v1;

  if (qword_1F95F0 != -1)
    swift_once(&qword_1F95F0, sub_FE334);
  v0 = (void *)qword_202080;
  if (qword_1F95F8 != -1)
    swift_once(&qword_1F95F8, sub_FE3F4);
  sub_FF1D4(v0, (void *)qword_202088);
  qword_210378 = v1;
}

id sub_FE490(uint64_t a1)
{
  return sub_FE564(a1, &qword_1F9580, (void **)&qword_210308, (void **)&qword_210380, (uint64_t)sub_FDE14);
}

id sub_FE4B4(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_labelColor, &qword_210388);
}

id sub_FE4C8(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_210390);
}

id sub_FE4DC(uint64_t a1)
{
  return sub_FE564(a1, &qword_1F95A8, (void **)&qword_210330, &qword_210398, (uint64_t)sub_FDF10);
}

void **sub_FE500()
{
  if (qword_1F9620 != -1)
    swift_once(&qword_1F9620, sub_FE4DC);
  return &qword_210398;
}

id sub_FE540(uint64_t a1)
{
  return sub_FE564(a1, &qword_1F95A8, (void **)&qword_210330, &qword_2103A0, (uint64_t)sub_FDF10);
}

id sub_FE564(uint64_t a1, _QWORD *a2, void **a3, void **a4, uint64_t a5)
{
  void *v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return v7;
}

void **sub_FE5A8()
{
  if (qword_1F9628 != -1)
    swift_once(&qword_1F9628, sub_FE540);
  return &qword_2103A0;
}

id sub_FE5E8(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_secondaryLabelColor, &qword_2103A8);
}

id sub_FE5FC(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_2103B0);
}

id sub_FE610(uint64_t a1)
{
  return sub_FE624(a1, (SEL *)&selRef_systemFillColor, &qword_2103B8);
}

id sub_FE624(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

void sub_FE66C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v0, 0.0);
  v2 = v1;

  if (v2)
  {
    qword_2103C0 = v2;
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ALL, 0x800000000018B8D0, "NowPlayingUI/Theme.swift", 24, 2, 123, 0);
    __break(1u);
  }
}

void static UIImage.singlePointImage(filledWith:)(void *a1)
{
  _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(a1, 0.0);
}

id sub_FE720()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  qword_2103C8 = (uint64_t)result;
  return result;
}

uint64_t sub_FE790(void *a1, void *a2, void *a3)
{
  void *ObjCClassFromMetadata;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2020C8);
  v8 = swift_allocObject(v7, 160, 7);
  *(_OWORD *)(v8 + 16) = xmmword_16E1B0;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(v8 + 40) = 0x800000000018B860;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FC7D0);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_16B2E0;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  aBlock[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2020D0);
  *(_QWORD *)(v8 + 64) = aBlock[0];
  *(_QWORD *)(v8 + 120) = &type metadata for String;
  *(_QWORD *)(v8 + 88) = v11;
  *(_QWORD *)(v8 + 96) = 0xD000000000000027;
  *(_QWORD *)(v8 + 104) = 0x800000000018B880;
  *(_QWORD *)(v8 + 152) = sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
  *(_QWORD *)(v8 + 128) = a3;
  sub_F174(0, &qword_2020D8, NSDictionary_ptr);
  v12 = a1;
  v13 = a2;
  v14 = a3;
  v15 = (void *)NSDictionary.init(dictionaryLiteral:)(v8);
  v16 = swift_allocObject(&unk_1D1A98, 32, 7);
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v12;
  v17 = swift_allocObject(&unk_1D1AC0, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_FF688;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_FF6B4;
  v27 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_FEDD0;
  aBlock[3] = &block_descriptor_26;
  v18 = _Block_copy(aBlock);
  v19 = v27;
  v20 = v12;
  v21 = v14;
  v22 = objc_msgSend(ObjCClassFromMetadata, "cachedObjectWithKey:block:", v15, v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);

  _bridgeAnyObjectToAny(_:)(aBlock, v22);
  swift_unknownObjectRelease(v22);
  v23 = sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
  swift_dynamicCast(&v25, aBlock, (char *)&type metadata for Any + 8, v23, 7);
  return v25;
}

void sub_FEA08(uint64_t a1, uint64_t a2)
{
  Swift::String v4;
  Class isa;
  id v6;
  id v7;
  id v8;
  Swift::String v9;
  Class v10;
  id v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;
  uint64_t v31;

  sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
  v4._object = (void *)0x8000000000182720;
  v4._countAndFlagsBits = 0xD000000000000020;
  isa = UIImage.init(imageLiteralResourceName:)(v4).super.isa;
  v6 = -[objc_class imageAsset](isa, "imageAsset");

  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = objc_msgSend(v6, "imageWithTraitCollection:", a1);

  v8 = objc_msgSend(v7, "imageWithTintColor:", a2);
  v9._object = (void *)0x8000000000182750;
  v9._countAndFlagsBits = 0xD000000000000020;
  v10 = UIImage.init(imageLiteralResourceName:)(v9).super.isa;
  v11 = -[objc_class imageAsset](v10, "imageAsset");

  if (v11)
  {
    v12 = objc_msgSend(v11, "imageWithTraitCollection:", a1);

    v13 = objc_msgSend(v12, "imageWithTintColor:", a2);
    objc_msgSend(v8, "size");
    v15 = v14;
    v17 = v16;
    objc_msgSend(v13, "size");
    if (v15 <= v18)
      v15 = v18;
    if (v17 <= v19)
      v17 = v19;
    v20 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
    objc_msgSend(v8, "scale");
    objc_msgSend(v20, "setScale:");
    v21 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v20, v15, v17);
    v31 = 0;
    v22 = (_QWORD *)swift_allocObject(&unk_1D1B10, 40, 7);
    v22[2] = v8;
    v22[3] = v13;
    v22[4] = &v31;
    v23 = swift_allocObject(&unk_1D1B38, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_FF734;
    *(_QWORD *)(v23 + 24) = v22;
    aBlock[4] = sub_F2F8;
    v30 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_FDCF0;
    aBlock[3] = &block_descriptor_12;
    v24 = _Block_copy(aBlock);
    v25 = v30;
    v26 = v8;
    v27 = v13;
    swift_retain();
    v28 = objc_msgSend(v21, "imageWithActions:", v24, swift_release(v25).n128_f64[0]);

    _Block_release(v24);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v23, "", 105, 192, 45, 1);
    swift_release(v23);
    if ((v26 & 1) == 0)
    {
      swift_release(v22);
      return;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

void sub_FED44(void *a1, id a2, void *a3, void **a4)
{
  id v7;
  void *v8;

  objc_msgSend(a2, "drawAtPoint:blendMode:alpha:", 17, 0.0, 0.0, 1.0);
  objc_msgSend(a3, "drawAtPoint:blendMode:alpha:", 0, 0.0, 0.0, 1.0);
  v7 = objc_msgSend(a1, "currentImage");
  v8 = *a4;
  *a4 = v7;

}

id sub_FEDD0(uint64_t a1)
{
  void (*v1)(_QWORD *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  _QWORD v8[3];
  uint64_t v9;

  v1 = *(void (**)(_QWORD *__return_ptr, uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain();
  v1(v8, v3);
  swift_release(v2);
  v4 = v9;
  v5 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v6 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
  __swift_destroy_boxed_opaque_existential_0(v8);
  return v6;
}

void sub_FEEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  _QWORD v7[14];
  _BYTE v8[24];

  if (qword_1F96B8 != -1)
    swift_once(&qword_1F96B8, sub_15D030);
  swift_beginAccess(&static NowPlayingDataProvider.shared, v8, 0, 0);
  sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)v7);
  v0 = v7[0];
  if (v7[0])
  {
    v1 = v7[1];
    swift_unknownObjectRetain(v7[0]);
    sub_4AE24((uint64_t)v7);
    ObjectType = swift_getObjectType(v0);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 232))(ObjectType, v1);
    v5 = v4;
    swift_unknownObjectRelease(v0);
    v6._countAndFlagsBits = v3;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(v5);
    qword_2103D0 = 32;
    *(_QWORD *)algn_2103D8 = 0xE100000000000000;
  }
  else
  {
    __break(1u);
  }
}

id sub_FEFDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Theme();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_FF010(void *a1, void *a2, double *a3, void **a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  CGContext *v14;
  id v15;
  CGColor *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  const CGPath *v21;
  CGContext *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;

  v10 = type metadata accessor for CGPathFillRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (CGContext *)objc_msgSend(a1, "CGContext");
  v15 = objc_msgSend(objc_retainAutorelease(a2), "cgColor");
  if (v15)
  {
    v16 = (CGColor *)v15;
    CGContextSetFillColorWithColor(v14, v16);

    v17 = *a3;
    v18 = a3[1];
    if (a5 <= 0.0)
    {
      objc_msgSend(a1, "fillRect:", 0.0, 0.0, v17, v18);
    }
    else
    {
      v19 = 0;
      v20 = 0;
      v21 = CGPathCreateWithRoundedRect(*(CGRect *)(&v17 - 2), a5, a5, 0);
      v22 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextAddPath(v22, v21);

      v23 = objc_msgSend(a1, "CGContext");
      (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for CGPathFillRule.winding(_:), v10);
      CGContextRef.fillPath(using:)(v13);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    v24 = objc_msgSend(a1, "currentImage");
    v25 = *a4;
    *a4 = v24;

  }
  else
  {
    __break(1u);
  }
}

void sub_FF1D4(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  Class isa;
  id v12;
  uint64_t v13;

  v4 = (void *)objc_opt_self(UIColor);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2020B8);
  inited = swift_initStackObject(v5, &v13);
  *(_OWORD *)(inited + 16) = xmmword_16E1B0;
  v7 = (void *)objc_opt_self(UITraitCollection);
  *(_QWORD *)(inited + 32) = objc_msgSend(v7, "traitCollectionWithUserInterfaceStyle:", 0);
  *(_QWORD *)(inited + 40) = a1;
  v8 = a1;
  *(_QWORD *)(inited + 48) = objc_msgSend(v7, "traitCollectionWithUserInterfaceStyle:", 2);
  *(_QWORD *)(inited + 56) = a2;
  v9 = a2;
  v10 = sub_C9CC0(inited);
  sub_F174(0, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
  sub_F174(0, (unint64_t *)&qword_2034A0, UIColor_ptr);
  sub_FF604();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v4, "_dynamicColorWithColorsByTraitCollection:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  if (!v12)
    __break(1u);
}

void _sSo7UIImageC12NowPlayingUIE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(void *a1, double a2)
{
  double v9;
  id v10;
  id v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  char isEscapingClosureAtFileLocation;
  id v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;
  id v25;
  __int128 v26;

  __asm { FMOV            V0.2D, #1.0 }
  v26 = _Q0;
  v9 = 1.0;
  if (a2 > 0.0)
  {
    v9 = a2 + a2 + 1.0;
    *(double *)&v26 = v9;
    *((double *)&v26 + 1) = v9;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
  v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v11, "scale");
  v13 = v12;

  objc_msgSend(v10, "setScale:", v13);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v10, v9, v9);
  v25 = 0;
  v15 = swift_allocObject(&unk_1D1B88, 48, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = &v26;
  *(double *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = &v25;
  v16 = swift_allocObject(&unk_1D1BB0, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_FF8E0;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_72310;
  v24 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_FDCF0;
  aBlock[3] = &block_descriptor_22_2;
  v17 = _Block_copy(aBlock);
  v18 = v24;
  v19 = a1;
  swift_retain(v16);

  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 105, 332, 41, 1);
  swift_release(v16);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v25)
  {

    goto LABEL_10;
  }
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
    goto LABEL_12;
  if (a2 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a2 < 9.22337204e18)
  {
    v21 = v25;
    objc_msgSend(v21, "stretchableImageWithLeftCapWidth:topCapHeight:", (uint64_t)a2, (uint64_t)a2);

LABEL_10:
    v22 = v25;
    swift_release(v15);

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t type metadata accessor for Theme()
{
  return objc_opt_self(MusicAppTheme);
}

unint64_t sub_FF604()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2020C0;
  if (!qword_2020C0)
  {
    v1 = sub_F174(255, (unint64_t *)&qword_2034E0, UITraitCollection_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_2020C0);
  }
  return result;
}

uint64_t sub_FF65C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_FF688()
{
  uint64_t v0;

  sub_FEA08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_FF690()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_FF6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))(v1 + 16))();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2020E0);
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_26(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_FF708()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_FF734(void *a1)
{
  uint64_t v1;

  sub_FED44(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void ***)(v1 + 32));
}

uint64_t sub_FF740()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_FF750(uint64_t a1)
{
  Swift::String v2;
  Class isa;
  id v4;
  id v5;
  Swift::String v6;
  Class v7;
  id v8;
  id v9;

  sub_F174(0, (unint64_t *)&qword_1FB5B0, UIImage_ptr);
  v2._object = (void *)0x8000000000182720;
  v2._countAndFlagsBits = 0xD000000000000020;
  isa = UIImage.init(imageLiteralResourceName:)(v2).super.isa;
  v4 = -[objc_class imageAsset](isa, "imageAsset");

  if (v4)
  {
    v5 = objc_msgSend(v4, "imageWithTraitCollection:", a1);

    objc_msgSend(v5, "size");
    v6._object = (void *)0x8000000000182750;
    v6._countAndFlagsBits = 0xD000000000000020;
    v7 = UIImage.init(imageLiteralResourceName:)(v6).super.isa;
    v8 = -[objc_class imageAsset](v7, "imageAsset");

    if (v8)
    {
      v9 = objc_msgSend(v8, "imageWithTraitCollection:", a1);

      objc_msgSend(v9, "size");
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_FF8BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_FF8E0(void *a1)
{
  uint64_t v1;

  sub_FF010(a1, *(void **)(v1 + 16), *(double **)(v1 + 24), *(void ***)(v1 + 40), *(CGFloat *)(v1 + 32));
}

uint64_t sub_FF8F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_FF910(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  Swift::String v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  char v32;
  uint64_t result;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0xE000000000000000;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 56) = 0;
  v8 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v2 + 64) = objc_msgSend(v8, "clearColor");
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_QWORD *)(v2 + 120) = 0;
  *(_QWORD *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 112) = 1;
  *(_BYTE *)(v2 + 136) = -2;
  *(_QWORD *)(v2 + 144) = 0;
  *(_BYTE *)(v2 + 152) = 1;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_QWORD *)(v2 + 208) = 0;
  *(_QWORD *)(v2 + 224) = objc_msgSend(v8, "clearColor");
  *(_DWORD *)(v2 + 232) = 0x1000000;
  *(_WORD *)(v2 + 236) = 0;
  *(_QWORD *)(v2 + 240) = 0x3FF0000000000000;
  *(_QWORD *)(v2 + 248) = 0;
  objc_msgSend(a1, "setClipsToBounds:", 1);
  *(_QWORD *)(v2 + 104) = a1;
  v9 = a1;
  objc_msgSend(v9, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v18, "setFrame:", v11, v13, v15, v17);
  objc_msgSend(v18, "setAutoresizingMask:", 18);
  objc_msgSend(v18, "setHidden:", 1);
  objc_msgSend(v9, "addSubview:", v18);
  *(_QWORD *)(v2 + 216) = v18;
  v19 = type metadata accessor for ArtworkComponentImageView();
  v20 = swift_dynamicCastClass(v9, v19);
  if (v20)
  {
    swift_weakAssign(v20 + OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_artworkComponent, v2);
    v21 = v18;
  }
  else
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDF68);
    v23 = swift_allocObject(v22, 64, 7);
    *(_OWORD *)(v23 + 16) = xmmword_16B3D0;
    v36 = 0;
    v37 = 0xE000000000000000;
    v24 = v18;
    _StringGuts.grow(_:)(81);
    v25._countAndFlagsBits = 0xD000000000000028;
    v25._object = (void *)0x800000000018BC70;
    String.append(_:)(v25);
    v26._countAndFlagsBits = _typeName(_:qualified:)(*(_QWORD *)v2, 0);
    object = v26._object;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(object);
    v28._object = (void *)0x800000000018BCA0;
    v28._countAndFlagsBits = 0xD000000000000027;
    String.append(_:)(v28);
    v29 = v36;
    v30 = v37;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 32) = v29;
    *(_QWORD *)(v23 + 40) = v30;
    debugPrint(_:separator:terminator:)(v23, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v23);
  }
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v32 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v32 & 1) != 0)
  {
    v35 = *(void **)(v2 + 104);
    v34 = *(id *)(v2 + 112);
    if (objc_msgSend(v35, "contentMode") != v34)
      objc_msgSend(v35, "setContentMode:", v34);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_FFC90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = *(void **)(v1 + 80);
  if (!a1)
  {
    v7 = v3 != 0;
    if (v3)
      goto LABEL_4;
LABEL_8:
    if ((v7 & 1) == 0)
      return;
    goto LABEL_9;
  }
  if (v3)
  {
    v4 = a1;
    sub_F174(0, (unint64_t *)&qword_1FCE68, MPArtworkCatalog_ptr);
    v5 = v3;
    v6 = v4;
    LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    v7 = v4 ^ 1;
    v3 = *(void **)(v2 + 80);
    if (v3)
    {
LABEL_4:
      v8 = *(void **)(v2 + 104);
      v9 = v3;
      v10 = objc_msgSend(v8, "traitCollection");
      v11 = UITraitCollection.safeDisplayScale.getter();

      objc_msgSend(v9, "setDestinationScale:", v11);
      if ((v7 & 1) == 0)
        return;
      v12 = *(void **)(v2 + 80);
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v13, "setRenderHint:", (unint64_t)objc_msgSend(v13, "renderHint") | 1);

        v12 = *(void **)(v2 + 80);
      }
      goto LABEL_10;
    }
    goto LABEL_8;
  }
LABEL_9:
  v12 = 0;
LABEL_10:
  v14 = *(void **)(v2 + 72);
  *(_QWORD *)(v2 + 72) = v12;
  v15 = v12;

  objc_msgSend(*(id *)(v2 + 104), "clearArtworkCatalogs");
  *(_DWORD *)(v2 + 232) = 0x1000000;
  v16 = *(void (**)(uint64_t))(v2 + 184);
  if (v16)
  {
    v17 = *(_QWORD *)(v2 + 192);
    v18 = swift_retain(v17);
    v16(v18);
    sub_145A0((uint64_t)v16, v17);
  }
}

uint64_t sub_FFE24(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t result;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  result = static CGSize.==~ infix(_:_:)(a1, a2, a3, *(double *)(v3 + 88), *(double *)(v3 + 96));
  if ((result & 1) == 0)
  {
    result = *(_QWORD *)(v3 + 72);
    if (result)
      result = (uint64_t)objc_msgSend((id)result, "setFittingSize:", *(double *)(v3 + 88), *(double *)(v3 + 96));
    *(_BYTE *)(v3 + 236) = 0;
    v5 = *(void (**)(uint64_t))(v3 + 184);
    if (v5)
    {
      v6 = *(_QWORD *)(v3 + 192);
      v7 = swift_retain();
      v5(v7);
      return sub_145A0((uint64_t)v5, v6);
    }
  }
  return result;
}

void sub_FFE90(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;

  v7 = *(void **)(v3 + 120);
  v8 = *(_QWORD *)(v3 + 128);
  v9 = *(unsigned __int8 *)(v3 + 136);
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = a2;
  *(_BYTE *)(v3 + 136) = a3;
  sub_1028D4(v7, v8, v9);
  sub_1028D4(a1, a2, a3);
  sub_791D4(v7, v8, v9);
  v10 = *(unsigned __int8 *)(v3 + 136);
  if (v9 <= 0xFD)
  {
    if (v10 <= 0xFD)
    {
      v11 = *(void **)(v3 + 120);
      v12 = *(_QWORD *)(v3 + 128);
      sub_1028D4(v7, v8, v9);
      sub_1028D4(v11, v12, v10);
      v16 = _s12NowPlayingUI7ArtworkV11PlaceholderO2eeoiySbAE_AEtFZ_0((unint64_t)v7, v8, v9, (unint64_t)v11, v12, v10);
      sub_791D4(v11, v12, v10);
      sub_791D4(v7, v8, v9);
      if ((v16 & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (v10 > 0xFD)
  {
    goto LABEL_8;
  }
  *(_BYTE *)(v3 + 236) = 0;
  v13 = *(void (**)(uint64_t))(v3 + 184);
  if (v13)
  {
    v14 = *(_QWORD *)(v3 + 192);
    v15 = swift_retain(v14);
    v13(v15);
    sub_145A0((uint64_t)v13, v14);
  }
LABEL_8:
  sub_791D4(a1, a2, a3);
  sub_791D4(v7, v8, v9);
}

void sub_FFFEC(void *a1, uint64_t a2)
{
  double *v2;
  double *v3;
  void *v6;
  double v7;
  id v8;
  id v9;
  char v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  id v14;

  v3 = v2;
  v6 = (void *)*((_QWORD *)v3 + 20);
  v7 = v3[21];
  *((_QWORD *)v3 + 20) = a1;
  *((_QWORD *)v3 + 21) = a2;
  v14 = a1;
  if (v6)
  {
    if (a1)
    {
      sub_F174(0, (unint64_t *)&qword_1FA930, NSObject_ptr);
      v8 = v6;
      v9 = v14;
      if ((static NSObject.== infix(_:_:)(v8, v9) & 1) == 0)
      {

        v11 = (void (*)(uint64_t))*((_QWORD *)v3 + 23);
        if (!v11)
          goto LABEL_9;
        goto LABEL_8;
      }
      v10 = static CGFloat.==~ infix(_:_:)(v7, *(double *)&a2);

      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
  }
  else if (!a1)
  {
    goto LABEL_9;
  }
  v11 = (void (*)(uint64_t))*((_QWORD *)v3 + 23);
  if (v11)
  {
LABEL_8:
    v12 = *((_QWORD *)v3 + 24);
    v13 = swift_retain();
    v11(v13);
    sub_145A0((uint64_t)v11, v12);
  }
LABEL_9:
  v8 = v6;
LABEL_10:

}

double sub_1000F4(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char v22;
  double v24;
  char v25;

  if ((a3 & 1) != 0
    || (v7 = *(double *)&a1, (static CGFloat.==~ infix(_:_:)(*(double *)&a1, 0.0) & 1) != 0)
    || (v8 = *(double *)&a2, (static CGFloat.==~ infix(_:_:)(*(double *)&a2, 0.0) & 1) != 0))
  {
    v7 = *(double *)(v4 + 88);
    v8 = *(double *)(v4 + 96);
  }
  v9 = objc_msgSend(*(id *)(v4 + 104), "image");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "size");
    v13 = v12;
    v15 = v14;
    if (static CGFloat.epsilon.getter(v11) < v12 && static CGFloat.epsilon.getter(v16) < v15)
    {
      if (*(_BYTE *)(v4 + 152) == 1 && *(_QWORD *)(v4 + 144))
      {

        if (v8 >= v7)
          v8 = v7;
        v17 = 1.0;
        v7 = v8;
        goto LABEL_25;
      }
      if (*(_QWORD *)(v4 + 112) == 1)
      {
        v19 = *(double *)(v4 + 88);
        v18 = *(double *)(v4 + 96);
        v20 = (static CGFloat.==~ infix(_:_:)(v18, 0.0) & 1) != 0 ? 0.0 : v19 / v18;
        v21 = (static CGFloat.==~ infix(_:_:)(v15, 0.0) & 1) != 0 ? 0.0 : v13 / v15;
        if (vabdd_f64(v20, v21) > 0.1 && (static CGFloat.==~ infix(_:_:)(v7 / v13, v8 / v15) & 1) == 0)
        {
          if (v7 / v13 >= v8 / v15)
            v24 = v8 / v15;
          else
            v24 = v7 / v13;
          v7 = CGFloat.floorValue(scale:)(a4, v13 * v24);
          CGFloat.floorValue(scale:)(a4, v15 * v24);
          v25 = static CGFloat.==~ infix(_:_:)(v15, 0.0);

          if ((v25 & 1) != 0)
            v17 = 0.0;
          else
            v17 = v13 / v15;
          goto LABEL_25;
        }
      }
    }

  }
  v22 = static CGFloat.==~ infix(_:_:)(v8, 0.0);
  v17 = v7 / v8;
  if ((v22 & 1) != 0)
    v17 = 0.0;
LABEL_25:
  *(double *)(v4 + 240) = v17;
  return v7;
}

uint64_t sub_1002D0(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  void *v15;
  unsigned int v16;
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v22;
  id v23;
  double v24;
  void *v25;
  id v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  unsigned __int8 v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  char v52;
  double v53;
  double v54;
  id v55;
  uint64_t v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char v68;
  _QWORD aBlock[5];
  uint64_t v70;

  v6 = v5;
  v12 = *(void **)(v5 + 72);
  if (v12)
  {
    v13 = 0;
    v14 = 0;
    v15 = v12;
    goto LABEL_8;
  }
  v16 = *(unsigned __int8 *)(v6 + 136);
  if (v16 <= 0xFD)
  {
    v15 = *(void **)(v6 + 120);
    v13 = *(_QWORD *)(v6 + 128);
    v14 = v16 | 0x20;
    sub_C35BC(v15, v13, v16);
LABEL_8:
    v22 = v12;
    v23 = sub_10220C(v15, v13, v14);
    v24 = CGFloat.safeDisplayScale.getter(v23, a5);
    v25 = *(void **)(v6 + 104);
    v26 = objc_msgSend(v25, "frame");
    if ((static CGRect.==~ infix(_:_:)(v26, v27, v28, v29, v30, a1, a2, a3, a4) & 1) == 0)
      objc_msgSend(v25, "setFrame:", a1, a2, a3, a4);
    sub_100C38(v31, v32, a3, a4, v24);
    if (*(_QWORD *)(v6 + 176))
    {
      objc_msgSend(v25, "setBackgroundColor:");
      goto LABEL_27;
    }
    if ((v14 & 0x20) != 0)
    {
      if ((*(_BYTE *)(v6 + 232) & 1) != 0)
        goto LABEL_27;
      if (v14 > 0x3F)
      {
        v43 = (void *)objc_opt_self(UIColor);
        sub_C35BC(v15, v13, v14 & 0xDF);
        v44 = objc_msgSend(v43, "clearColor");
        objc_msgSend(v25, "setBackgroundColor:", v44);

        v41 = 0;
      }
      else
      {
        sub_C35BC(v15, v13, v14 & 0xDF);
        objc_msgSend(v25, "setBackgroundColor:", v15);
        if ((v14 & 1) != 0)
          v41 = 0;
        else
          v41 = v13;
      }
      objc_msgSend(v25, "_setDrawsAsBackdropOverlayWithBlendMode:", v41);
      sub_102230(v15, v13, v14);
    }
    else
    {
      if ((*(_BYTE *)(v6 + 232) & 1) != 0)
        goto LABEL_27;
      v33 = v15;
      objc_msgSend(v25, "_setDrawsAsBackdropOverlayWithBlendMode:", 0);
      v34 = objc_msgSend(v33, "dataSource");
      if (v34
        && (v35 = v34,
            v36 = objc_opt_self(MPMediaLibraryArtworkDataSource),
            v37 = swift_dynamicCastObjCClass(v35, v36),
            swift_unknownObjectRelease(v35),
            v37)
        || (v38 = objc_msgSend(v33, "existingColorAnalysisWithAlgorithm:", 1)) == 0)
      {
        v42 = *(id *)(v6 + 64);
        objc_msgSend(v25, "setBackgroundColor:", v42);
        sub_102230(v15, v13, v14);

      }
      else
      {
        v39 = v38;
        v40 = objc_msgSend(v38, "backgroundColor");
        objc_msgSend(v25, "setBackgroundColor:", v40);
        sub_102230(v15, v13, v14);

      }
    }
    *(_BYTE *)(v6 + 232) = 1;
LABEL_27:
    v45 = objc_msgSend(v25, "artworkCatalog");
    v46 = *(void **)(v6 + 72);
    v47 = v46 == 0;
    if (v45)
    {
      v48 = v45;
      if (v46)
      {
        sub_F174(0, (unint64_t *)&qword_1FCE68, MPArtworkCatalog_ptr);
        v49 = v46;
        v50 = v48;
        v47 = static NSObject.== infix(_:_:)(v50, v49);

        v48 = v49;
      }
      else
      {
        v47 = 0;
      }

    }
    v51 = objc_msgSend(v25, "artworkCatalog");

    if (v51 || *(_QWORD *)(v6 + 72))
    {
      if ((v47 & 1) == 0)
      {
LABEL_35:
        if (qword_1F9430 != -1)
          swift_once(&qword_1F9430, sub_DFBC);
        objc_msgSend(*(id *)(qword_210020 + 16), "addObject:", v6);
        *(_BYTE *)(v6 + 236) = 1;
        if ((v14 & 0x20) != 0)
        {
          sub_102254(0, 1);
        }
        else
        {
          v52 = *(_BYTE *)(v6 + 237);
          *(_BYTE *)(v6 + 237) = 1;
          v53 = *(double *)(v6 + 88);
          v54 = *(double *)(v6 + 96);
          v55 = v15;
          objc_msgSend(v55, "setFittingSize:", v53, v54);
          objc_msgSend(v55, "setDestinationScale:", v24);
          v56 = *(_QWORD *)(v6 + 32);
          swift_bridgeObjectRetain(v56);
          v57 = String._bridgeToObjectiveC()();
          objc_msgSend(v55, "setCacheIdentifier:forRequestingContext:", v57, *(_QWORD *)(v6 + 16), swift_bridgeObjectRelease(v56).n128_f64[0]);

          if ((*(_BYTE *)(v6 + 48) & 1) == 0)
          {
            v67 = *(_QWORD *)(v6 + 40);
            v68 = v52;
            v58 = objc_opt_self(MPArtworkCatalog);
            v59 = *(_QWORD *)(v6 + 32);
            swift_bridgeObjectRetain(v59);
            v60 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v59);
            aBlock[0] = *(_QWORD *)(v6 + 16);
            v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_202560);
            v62 = Optional._bridgeToObjectiveC()(v61);
            v63 = (void *)v58;
            v52 = v68;
            objc_msgSend(v63, "setCacheLimit:forCacheIdentifier:requestingContext:", v67, v60, v62);

            swift_unknownObjectRelease(v62);
          }
          v64 = swift_allocObject(&unk_1D1C50, 24, 7);
          swift_weakInit(v64 + 16, v6);
          v65 = swift_allocObject(&unk_1D1C78, 32, 7);
          *(_QWORD *)(v65 + 16) = v64;
          *(double *)(v65 + 24) = v24;
          aBlock[4] = sub_102894;
          v70 = v65;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100A14;
          aBlock[3] = &block_descriptor_9_1;
          v66 = _Block_copy(aBlock);
          objc_msgSend(v55, "setDestination:progressiveConfigurationBlock:", v25, v66, swift_release(v70).n128_f64[0]);
          sub_102230(v15, v13, v14);
          _Block_release(v66);
          *(_BYTE *)(v6 + 237) = v52;
          *(_BYTE *)(v6 + 236) = 0;
        }
      }
    }
    else if ((v47 & *(_BYTE *)(v6 + 236) & 1) == 0)
    {
      goto LABEL_35;
    }
    if (objc_msgSend(v25, "isHidden", v67))
      objc_msgSend(v25, "setHidden:", 0);
    sub_102230(v15, v13, v14);
    sub_102230(v15, v13, v14);
    return 1;
  }
  v17 = *(void **)(v6 + 104);
  objc_msgSend(v17, "setFrame:", a1, a2, a3, a4);
  objc_msgSend(v17, "setImage:", 0);
  objc_msgSend(v17, "setHidden:", 1);
  v18 = *(void (**)(uint64_t))(v6 + 200);
  if (v18)
  {
    v19 = *(_QWORD *)(v6 + 208);
    v20 = swift_retain();
    v18(v20);
    sub_145A0((uint64_t)v18, v19);
  }
  return 0;
}

double sub_1009A4(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  _BYTE v10[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    sub_102254(a2, a3 & 1);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t sub_100A14(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(_QWORD *, void *, uint64_t);
  id v9;
  _QWORD v11[4];

  v8 = *(void (**)(_QWORD *, void *, uint64_t))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v11[3] = swift_getObjectType(a2);
  v11[0] = a2;
  swift_retain();
  swift_unknownObjectRetain(a2);
  v9 = a3;
  v8(v11, a3, a4);
  swift_release(v7);

  return __swift_destroy_boxed_opaque_existential_0(v11);
}

void sub_100AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  double v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;

  v2 = v1;
  v4 = *(void **)(v2 + 224);
  sub_F174(0, (unint64_t *)&qword_2034A0, UIColor_ptr);
  v5 = v4;
  LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v5);

  if ((a1 & 1) == 0)
  {
    objc_msgSend(*(id *)(v2 + 224), "alphaComponent");
    v6 = *(void **)(v2 + 248);
    if (v7 <= 0.0)
    {
      if (!v6)
        return;
      objc_msgSend(v6, "removeFromSuperview");
      v8 = *(void **)(v2 + 248);
      *(_QWORD *)(v2 + 248) = 0;
    }
    else
    {
      if (v6)
      {
        v17 = *(id *)(v2 + 248);
      }
      else
      {
        v9 = *(void **)(v2 + 104);
        objc_msgSend(v9, "bounds");
        v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v10, v11, v12, v13);
        objc_msgSend(v17, "setUserInteractionEnabled:", 0);
        objc_msgSend(v9, "insertSubview:above:", v17, *(_QWORD *)(v2 + 216));
        v14 = *(void **)(v2 + 248);
        *(_QWORD *)(v2 + 248) = v17;

        v6 = 0;
      }
      v15 = *(_QWORD *)(v2 + 224);
      v16 = v6;
      objc_msgSend(v17, "setBackgroundColor:", v15);
      v8 = v17;
    }

  }
}

void sub_100C38(double a1, double a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v5;
  void *v8;
  double v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  int v18;
  id v19;
  void *v20;
  id v21;
  double Width;
  double Height;
  double v24;
  void *v25;
  id v26;
  CGRect v27;
  CGRect v28;

  v8 = *(void **)(v5 + 160);
  if (v8)
  {
    v10 = *(double *)(v5 + 168);
    v11 = *(void **)(v5 + 104);
    v12 = v8;
    v13 = objc_msgSend(v11, "layer");
    objc_msgSend(v13, "setBorderWidth:", v10 / a5);

    v14 = objc_msgSend(v11, "layer");
    v15 = objc_msgSend(v12, "CGColor");
    objc_msgSend(v14, "setBorderColor:", v15);

  }
  else
  {
    v11 = *(void **)(v5 + 104);
    v16 = objc_msgSend(v11, "layer");
    objc_msgSend(v16, "setBorderWidth:", 0.0);

    v15 = objc_msgSend(v11, "layer");
    objc_msgSend(v15, "setBorderColor:", 0);
  }

  v17 = *(double *)(v5 + 144);
  v18 = *(unsigned __int8 *)(v5 + 152);
  v19 = objc_msgSend(v11, "layer");
  v20 = v19;
  if (v18 == 1)
  {
    objc_msgSend(v19, "setCornerCurve:", kCACornerCurveCircular);

    v21 = objc_msgSend(v11, "layer");
    if (v17 == 0.0)
    {
      v24 = 0.0;
    }
    else
    {
      v27.origin.x = 0.0;
      v27.origin.y = 0.0;
      v27.size.width = a3;
      v27.size.height = a4;
      Width = CGRectGetWidth(v27);
      v28.origin.x = 0.0;
      v28.origin.y = 0.0;
      v28.size.width = a3;
      v28.size.height = a4;
      Height = CGRectGetHeight(v28);
      if (Height >= Width)
        Height = Width;
      v24 = Height * 0.5;
      if (v24 < 0.0)
        v24 = 0.0;
    }
    objc_msgSend(v21, "setCornerRadius:", v24);
  }
  else
  {
    objc_msgSend(v19, "setCornerCurve:", kCACornerCurveContinuous);

    v21 = objc_msgSend(v11, "layer");
    objc_msgSend(v21, "setCornerRadius:", v17);
  }

  v25 = *(void **)(v5 + 248);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v11, "bounds");
    objc_msgSend(v26, "setFrame:");

  }
}

id sub_100EE4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  char v9;
  id result;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char v19;
  double v20;
  void *v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v11 = *(_QWORD *)(v2 + 112);
    if (v11 == 1)
    {
      if (!a1)
        goto LABEL_10;
      objc_msgSend(a1, "size");
      v13 = v12;
      v15 = v14;
      v17 = *(double *)(v2 + 88);
      v16 = *(double *)(v2 + 96);
      v18 = (static CGFloat.==~ infix(_:_:)(v16, 0.0) & 1) != 0 ? 0.0 : v17 / v16;
      v19 = static CGFloat.==~ infix(_:_:)(v15, 0.0);
      v20 = v13 / v15;
      if ((v19 & 1) != 0)
        v20 = 0.0;
      if (vabdd_f64(v18, v20) <= 0.1)
        v11 = 2;
      else
LABEL_10:
        v11 = 1;
    }
    v21 = *(void **)(v2 + 104);
    result = objc_msgSend(v21, "contentMode");
    if (result != (id)v11)
      return objc_msgSend(v21, "setContentMode:", v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10107C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_1010DC(a2, 0);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_1010DC(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  void **v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id (*v39)();
  uint64_t v40;

  v3 = v2;
  *(_BYTE *)(v2 + 234) = a2;
  sub_100EE4(a1);
  if (a1)
  {
    v6 = *(void **)(v2 + 104);
    if ((*(_BYTE *)(v3 + 237) & 1) != 0 || (a2 & 1) == 0)
    {
      objc_msgSend(v6, "setImage:", a1);
    }
    else
    {
      v7 = *(void **)(v3 + 216);
      v8 = a1;
      v9 = objc_msgSend(v6, "image");
      objc_msgSend(v7, "setImage:", v9);

      v10 = objc_msgSend(v7, "image");
      if (v10)
        v11 = 0;
      else
        v11 = objc_msgSend(v6, "backgroundColor");
      objc_msgSend(v7, "setBackgroundColor:", v11);

      objc_msgSend(v7, "setAlpha:", 1.0);
      objc_msgSend(v7, "setHidden:", 0);
      objc_msgSend(v6, "setImage:", v8);
      v12 = (void *)objc_opt_self(UIView);
      v39 = sub_10218C;
      v40 = v3;
      v35 = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_F528;
      v38 = &block_descriptor_27;
      v13 = _Block_copy(&v35);
      v14 = v40;
      swift_retain();
      swift_release(v14);
      v39 = sub_1021B8;
      v40 = v3;
      v35 = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_153D78;
      v38 = &block_descriptor_3_0;
      v15 = _Block_copy(&v35);
      v16 = v40;
      swift_retain();
      swift_release(v16);
      objc_msgSend(v12, "animateWithDuration:animations:completion:", v13, v15, 0.2);
      _Block_release(v15);
      _Block_release(v13);
    }
    objc_msgSend(a1, "size");
    v18 = v17;
    v20 = v19;
    v22 = *(double *)(v3 + 88);
    v21 = *(double *)(v3 + 96);
    if ((static CGFloat.==~ infix(_:_:)(v21, 0.0) & 1) != 0)
      v23 = 0.0;
    else
      v23 = v22 / v21;
    v24 = v18 / v20;
    if ((static CGFloat.==~ infix(_:_:)(v20, 0.0) & 1) != 0)
      v25 = 0.0;
    else
      v25 = v24;
    if (vabdd_f64(v23, v25) <= 0.1)
    {
      v28 = *(double *)(v3 + 88);
      v27 = *(double *)(v3 + 96);
      if ((static CGFloat.==~ infix(_:_:)(v27, 0.0) & 1) != 0)
        v26 = 0.0;
      else
        v26 = v28 / v27;
    }
    else if ((static CGFloat.==~ infix(_:_:)(v20, 0.0) & 1) != 0)
    {
      v26 = 0.0;
    }
    else
    {
      v26 = v24;
    }
    if ((static CGFloat.==~ infix(_:_:)(*(double *)(v3 + 240), v26) & 1) != 0
      || (v29 = *(void (**)(uint64_t))(v3 + 184)) == 0)
    {

    }
    else
    {
      v30 = *(_QWORD *)(v3 + 192);
      v31 = swift_retain();
      v29(v31);

      sub_145A0((uint64_t)v29, v30);
    }
  }
  else
  {
    objc_msgSend(*(id *)(v2 + 104), "setImage:", 0);
  }
  v32 = *(void (**)(uint64_t))(v3 + 200);
  if (v32)
  {
    v33 = *(_QWORD *)(v3 + 208);
    v34 = swift_retain();
    v32(v34);
    sub_145A0((uint64_t)v32, v33);
  }
  if (qword_1F9430 != -1)
    swift_once(&qword_1F9430, sub_DFBC);
  sub_E03C(v3);
}

uint64_t sub_10146C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  sub_791D4(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  sub_145A0(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  sub_145A0(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));

  return v0;
}

uint64_t sub_1014FC()
{
  uint64_t v0;

  sub_10146C();
  return swift_deallocClassInstance(v0, 256, 7);
}

uint64_t _s9ComponentCMa()
{
  return objc_opt_self(_TtCV12NowPlayingUI7Artwork9Component);
}

void sub_10153C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ArtworkComponentImageView();
  objc_msgSendSuper2(&v7, "didMoveToSuperview");
  v1 = objc_msgSend(v0, "superview");
  v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryImageView];
  if (v1)
  {
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v1, "insertSubview:above:", v3, v0);
      v4 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStrokeView];
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v1, "insertSubview:below:", v5, v3);

      }
      else
      {

      }
    }
    else
    {
      v6 = *(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStrokeView];
      objc_msgSend(v6, "removeFromSuperview");

    }
  }
  else
  {
    if (v2)
      objc_msgSend(v2, "removeFromSuperview");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStrokeView], "removeFromSuperview");
  }
}

void sub_1018A4()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double *v8;
  double v9;
  double v10;
  double Width;
  double Height;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat x;
  CGFloat y;
  CGFloat v29;
  CGFloat v30;
  double MaxX;
  CGFloat v32;
  double MaxY;
  double v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  CGPathRef v51;
  id v52;
  id v53;
  double v54;
  id v55;
  int32x2_t v56;
  int64x2_t v57;
  id v58;
  char v59;
  double v60;
  id v61;
  id v62;
  int8x16_t v63;
  __int128 v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryImageView];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    objc_msgSend(v3, "sizeThatFits:", 0.0, 0.0);
    v6 = v4;
    v7 = v5;
    v8 = (double *)&v2[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStyle];
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStyle] < 3uLL
      || ((_BYTE)v8[3] & 1) != 0)
    {
      if (v4 > v5)
        v10 = v4;
      else
        v10 = v5;
      objc_msgSend(v2, "frame");
      Width = CGRectGetWidth(v65);
      objc_msgSend(v2, "frame");
      Height = CGRectGetHeight(v66);
      if (Width > Height)
        Height = Width;
      v13 = Height / 3.0;
      if (Height / 3.0 >= v10)
      {
        v9 = v6;
      }
      else if ((static CGFloat.==~ infix(_:_:)(v10, v6) & 1) != 0)
      {
        v7 = v7 / v6 * v13;
        v9 = v13;
      }
      else
      {
        v59 = static CGFloat.==~ infix(_:_:)(v10, v7);
        v9 = v6;
        if ((v59 & 1) != 0)
        {
          v9 = v6 / v7 * v13;
          v7 = v13;
        }
      }
    }
    else
    {
      v9 = v8[1];
      v7 = v8[2];
    }
    objc_msgSend(v2, "frame");
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v22 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(v2, "bounds");
    v67.origin.x = CGRect.removingLayoutDirection(_:inBounds:)(v22, v23, v24, v25, v26, v15, v17, v19, v21);
    x = v67.origin.x;
    y = v67.origin.y;
    v29 = v67.size.width;
    v30 = v67.size.height;
    MaxX = CGRectGetMaxX(v67);
    v68.origin.x = 0.0;
    v68.origin.y = 0.0;
    v68.size.width = v9;
    v68.size.height = v7;
    v32 = MaxX - CGRectGetWidth(v68);
    v69.origin.x = x;
    v69.origin.y = y;
    v69.size.width = v29;
    v69.size.height = v30;
    MaxY = CGRectGetMaxY(v69);
    v70.origin.y = 0.0;
    v70.origin.x = v32;
    v70.size.width = v9;
    v70.size.height = v7;
    v34 = MaxY - CGRectGetHeight(v70);
    v61 = v3;
    v35 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection");
    objc_msgSend(v2, "bounds");
    objc_msgSend(v61, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v35, v36, v37, v38, v39, v32, v34, v9, v7));

    v40 = *(id *)v8;
    sub_10217C(*(id *)v8);
    objc_msgSend(v61, "bounds");
    if (v40)
    {
      v45 = v41;
      v46 = v42;
      v47 = v43;
      v48 = v44;
      v49 = CGRectGetWidth(*(CGRect *)&v41) * 0.5;
      v71.origin.x = v45;
      v71.origin.y = v46;
      v71.size.width = v47;
      v71.size.height = v48;
      v50 = CGRectGetHeight(v71) * 0.5;
      v72.origin.x = v45;
      v72.origin.y = v46;
      v72.size.width = v47;
      v72.size.height = v48;
      v51 = CGPathCreateWithRoundedRect(v72, v49, v50, 0);
      sub_C0C60(v40);
      v52 = objc_msgSend(v61, "layer");
      objc_msgSend(v52, "setShadowPath:", v51);

      if ((unint64_t)(*(_QWORD *)v8 - 1) <= 1)
      {
        v53 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
        v54 = v9 / v6;
        if (v9 >= v6)
          v54 = 1.0;
        v60 = v54;
        v55 = v61;
        v62 = v53;
        v56 = vdup_n_s32(static CGFloat.==~ infix(_:_:)(v60, 1.0));
        v57.i64[0] = v56.u32[0];
        v57.i64[1] = v56.u32[1];
        v63 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v57, 0x3FuLL)), (int8x16_t)xmmword_173550, (int8x16_t)vmulq_n_f64((float64x2_t)xmmword_173550, v60));
        v64 = xmmword_173560;
        v58 = v53;
        UIView.shadow.setter((uint64_t)&v62);

      }
    }
    sub_101CB0();

  }
}

void sub_101CB0()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryImageView];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStrokeView];
    if (v2)
    {
      v3 = *(void **)&v0[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStyle];
      v4 = v1;
      v12 = v2;
      sub_10217C(v3);
      v5 = objc_msgSend(v0, "traitCollection");
      v6 = UITraitCollection.safeDisplayScale.getter();

      sub_C0C60(v3);
      v7 = 0.0;
      if ((unint64_t)v3 >= 3)
      {
        if (v6 < 1.0)
          v7 = 2.0;
        else
          v7 = 2.0 / v6;
      }
      objc_msgSend(v4, "frame");
      objc_msgSend(v12, "setFrame:", UIEdgeInsetsInsetRect(v8, v9, v10, v11, -v7, -v7));

    }
  }
}

id sub_101FF8(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  swift_weakInit(&v1[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_artworkComponent], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryArtworkCatalog] = 0;
  v3 = &v1[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStyle];
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  *(_QWORD *)v3 = 0;
  v3[24] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC12NowPlayingUI25ArtworkComponentImageView_accessoryStrokeView] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ArtworkComponentImageView();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_1020B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkComponentImageView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ArtworkComponentImageView()
{
  return objc_opt_self(_TtC12NowPlayingUI25ArtworkComponentImageView);
}

id sub_10217C(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

id sub_10218C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 216), "setAlpha:", 0.0);
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_27(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1021B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  objc_msgSend(v1, "setImage:", 0);
  objc_msgSend(v1, "setBackgroundColor:", 0);
  return objc_msgSend(v1, "setHidden:", 1);
}

id sub_10220C(id a1, uint64_t a2, int a3)
{
  if ((~a3 & 0x3E) != 0)
    return sub_102220(a1, a2, a3);
  return a1;
}

id sub_102220(id a1, uint64_t a2, char a3)
{
  if ((a3 & 0x20) != 0)
    return sub_C35BC(a1, a2, a3 & 0xDF);
  else
    return a1;
}

void sub_102230(id a1, uint64_t a2, int a3)
{
  if ((~a3 & 0x3E) != 0)
    sub_102244(a1, a2, a3);
}

void sub_102244(id a1, uint64_t a2, char a3)
{
  if ((a3 & 0x20) != 0)
    sub_791E8(a1, a2, a3 & 0xDF);
  else

}

void sub_102254(void *a1, char a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  char v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  __n128 v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unsigned __int8 v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  void *v63;
  double (*v64)();
  uint64_t v65;
  _BYTE v66[32];

  v5 = v2;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_F174(0, (unint64_t *)&qword_1FB310, OS_dispatch_queue_ptr);
  *v16 = static OS_dispatch_queue.main.getter(v17);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) == 0)
    goto LABEL_38;
  *(_BYTE *)(v5 + 233) = 1;
  *(_BYTE *)(v5 + 235) = a2 & 1;
  if (a1)
  {
    v19 = a1;
    sub_1010DC(a1, 1);

    return;
  }
  LODWORD(v14) = *(unsigned __int8 *)(v5 + 136);
  if (v14 <= 0xFD)
  {
    v20 = *(_QWORD *)(v5 + 120);
    v21 = *(_QWORD *)(v5 + 128);
    v4 = *(double *)(v5 + 88);
    v3 = *(double *)(v5 + 96);
    v13 = swift_allocObject(&unk_1D1C50, 24, 7);
    v22 = swift_weakInit(v13 + 16, v5);
    v55 = (void *)v20;
    v54 = v21;
    v53 = v22;
    if (v14 >> 6 <= 1)
    {
      swift_retain();
      sub_1028D4((id)v20, v21, v14);
LABEL_7:
      v23 = 0;
LABEL_13:
      v28 = swift_allocObject(&unk_1D1CC8, 32, 7);
      *(_QWORD *)(v28 + 16) = v13;
      *(_QWORD *)(v28 + 24) = v23;
      v29 = (void *)objc_opt_self(NSThread);
      v30 = v23;
      swift_retain();
      v31 = v30;
      swift_retain();
      if (objc_msgSend(v29, "isMainThread"))
      {
        v33 = v14;
        v34 = v53;
        swift_beginAccess(v53, &aBlock, 0, 0);
        Strong = swift_weakLoadStrong(v34);
        if (Strong)
        {
          v36 = Strong;
          sub_1010DC(v23, 0);
          swift_release(v13);
          swift_release(v28);
          v28 = v36;
        }
        else
        {
          swift_release(v13);
        }
        v49 = v55;
        v50 = v54;
        swift_release(v28);
        swift_release_n(v13, 2);

        v46 = v49;
        v47 = v50;
        v48 = v33;
      }
      else
      {
        v37 = (void *)static OS_dispatch_queue.main.getter(v32);
        v64 = sub_1028CC;
        v65 = v28;
        aBlock = _NSConcreteStackBlock;
        v61 = 1107296256;
        v62 = sub_F528;
        v63 = &block_descriptor_16_1;
        v38 = _Block_copy(&aBlock);
        v39 = v65;
        swift_retain();
        swift_release(v39);
        static DispatchQoS.unspecified.getter(v40);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v41 = sub_F52C();
        v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
        v43 = sub_F574();
        LODWORD(v53) = v14;
        v44 = v31;
        v45 = v59;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v42, v43, v59, v41);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v10, v38);
        _Block_release(v38);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v45);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);

        swift_release_n(v13, 3);
        swift_release(v28);
        v46 = v55;
        v47 = v54;
        v48 = v53;
      }
      sub_791D4(v46, v47, v48);
      return;
    }
    if (!(v21 | v20) && (_DWORD)v14 == 128)
      goto LABEL_10;
    if (v20 == 1 && !v21 && (_DWORD)v14 == 128)
    {
      swift_retain();
      goto LABEL_7;
    }
    if (v20 == 2 && !v21 && (_DWORD)v14 == 128
      || v20 == 3 && !v21 && (_DWORD)v14 == 128
      || v20 == 4 && !v21 && (_DWORD)v14 == 128)
    {
LABEL_10:
      v24 = qword_1F96B8;
      swift_retain();
      if (v24 == -1)
        goto LABEL_11;
      goto LABEL_39;
    }
    v51 = qword_1F96B8;
    swift_retain();
    if (v51 != -1)
      swift_once(&qword_1F96B8, sub_15D030);
    swift_beginAccess(&static NowPlayingDataProvider.shared, v66, 0, 0);
    sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&aBlock);
    v25 = aBlock;
    if (aBlock)
    {
LABEL_12:
      v26 = v61;
      swift_unknownObjectRetain(v25);
      sub_4AE24((uint64_t)&aBlock);
      ObjectType = swift_getObjectType(v25);
      v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, double, double))(v26 + 224))(ObjectType, v26, v4, v3);
      swift_unknownObjectRelease(v25);
      goto LABEL_13;
    }
    swift_release(v13);
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once(&qword_1F96B8, sub_15D030);
LABEL_11:
    swift_beginAccess(&static NowPlayingDataProvider.shared, v66, 0, 0);
    sub_7918C((uint64_t)&static NowPlayingDataProvider.shared, (uint64_t)&aBlock);
    v25 = aBlock;
    if (!aBlock)
    {
      swift_release(v13);
      __break(1u);
      return;
    }
    goto LABEL_12;
  }
}

uint64_t sub_10284C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_102870()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_102894(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;

  return sub_1009A4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1028A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1028CC()
{
  uint64_t v0;

  return sub_10107C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_1028D4(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu)
    return sub_C35BC(result, a2, a3);
  return result;
}

uint64_t sub_102900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[4];
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_tipViewModel);
  KeyPath = swift_getKeyPath(&unk_173700);
  v3 = swift_getKeyPath(&unk_173728);
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain(v1);
  static Published.subscript.setter(v12, v1, KeyPath, v3);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTipVisible) = 0;
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_subscriptions);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_subscriptions, v12, 1, 0);
  v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(*v4);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v5);
    v11 = *v4;
    *v4 = (uint64_t)&_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v11);
  }
  if (v5 < 0)
    v10 = *v4;
  else
    v10 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v6 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      }
      else
      {
        v9 = *(_QWORD *)(v5 + 8 * i + 32);
        swift_retain(v9);
      }
      AnyCancellable.cancel()();
      swift_release(v9);
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

double sub_102A6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = v0;
  v55 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026A0);
  v56 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026A8);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026B0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v16 = (char *)objc_msgSend(v15, "userInterfaceIdiom");

  if (v16 != (_BYTE *)&dword_0 + 1)
  {
    v18 = swift_allocObject(&unk_1D1D20, 24, 7);
    swift_weakInit(v18 + 16, v1);
    v19 = swift_allocObject(&unk_1D1D48, 32, 7);
    v51 = v4;
    v20 = v55;
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v20;
    v54 = v12;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026B8);
    v52 = v14;
    v22 = v21;
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v23 = (void *)Future.init(_:)(sub_106168, v19);
    v53 = v11;
    v24 = v23;
    v59[0] = v23;
    v25 = sub_27A8C(&qword_2026C0, &qword_2026B8, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v26 = (void *)Publisher.eraseToAnyPublisher()(v22, v25);
    swift_release(v24);
    v59[0] = v26;
    v27 = swift_allocObject(&unk_1D1D20, 24, 7);
    swift_weakInit(v27 + 16, v1);
    v28 = swift_allocObject(&unk_1D1D70, 32, 7);
    *(_QWORD *)(v28 + 16) = v27;
    *(_QWORD *)(v28 + 24) = v20;
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v29 = Future.init(_:)(sub_106170, v28);
    v62 = v29;
    v30 = Publisher.eraseToAnyPublisher()(v22, v25);
    swift_release(v29);
    v62 = v30;
    v61 = sub_102FC8();
    v60 = sub_1034F8();
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
    v32 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publishers.CombineLatest4.init(_:_:_:_:)(v59, &v62, &v61, &v60, v31, v31, v31, v31, v32, v32, v32, v32);
    v33 = sub_27A8C(&qword_2026C8, &qword_2026A0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
    Publisher.first()(v5, v33);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    v34 = sub_7748();
    v59[0] = (id)static OS_dispatch_queue.main.getter(v35);
    v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v37 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v51, 1, 1, v36);
    v38 = sub_27A8C(&qword_2026D0, &qword_2026A8, (uint64_t)&protocol conformance descriptor for Publishers.First<A>);
    v39 = sub_2FE50();
    v40 = v52;
    v41 = v58;
    Publisher.receive<A>(on:options:)(v59, v37, v58, v34, v38, v39);
    sub_9944(v37, &qword_1FB2C0);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v41);
    v42 = swift_allocObject(&unk_1D1D20, 24, 7);
    swift_weakInit(v42 + 16, v1);
    v43 = swift_allocObject(&unk_1D1D98, 32, 7);
    *(_QWORD *)(v43 + 16) = sub_106178;
    *(_QWORD *)(v43 + 24) = v42;
    v44 = sub_27A8C(&qword_2026D8, &qword_2026B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v45 = v53;
    v46 = Publisher<>.sink(receiveValue:)(sub_1061A4, v43, v53, v44);
    v47 = swift_release(v43);
    (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v40, v45, v47);
    v48 = (char *)v1 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_subscriptions;
    swift_beginAccess(v48, v59, 33, 0);
    v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FDE40);
    v50 = sub_27A8C(&qword_1FB560, (uint64_t *)&unk_1FDE40, (uint64_t)&protocol conformance descriptor for [A]);
    AnyCancellable.store<A>(in:)(v48, v49, v50);
    swift_endAccess(v59);
    *(_QWORD *)&result = swift_release(v46).n128_u64[0];
  }
  return result;
}

uint64_t sub_102FC8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61[3];
  uint64_t v62;
  uint64_t v63;

  v1 = v0;
  v60 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v2);
  v54 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2016B0);
  v48 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_202710);
  v8 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  v50 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_202718);
  v12 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  v53 = v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_202720);
  v58 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v51 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_202728);
  v59 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v55 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v18 = qword_202B30;
  v19 = off_202B38;
  swift_bridgeObjectRetain(off_202B38);
  v20 = NSUserDefaults.integerPublisher(forKey:)(v18, v19);

  swift_bridgeObjectRelease(v19);
  v62 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_nowPlayingItemPublisher);
  v21 = v62;
  v63 = v20;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController__metadataStyleSupportsEpisodeNotesTip, v61, 33, 0);
  swift_retain(v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  Published.projectedValue.getter(v22);
  swift_endAccess(v61);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_202730);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_202738);
  v25 = sub_27A8C(&qword_202740, &qword_202730, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v26 = sub_27A8C(&qword_202748, &qword_202738, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v27 = sub_27A8C(&qword_202750, &qword_2016B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher.combineLatest<A, B>(_:_:)(&v62, v6, v23, v24, v4, v25, v26, v27);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v4);
  swift_release(v62);
  swift_release(v63);
  v28 = sub_27A8C(&qword_202758, &qword_202710, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
  v29 = v49;
  Publisher.first()(v49, v28);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v29);
  v30 = sub_7748();
  v61[0] = (id)static OS_dispatch_queue.main.getter(v31);
  v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v33 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v54, 1, 1, v32);
  v34 = sub_27A8C(&qword_202760, &qword_202718, (uint64_t)&protocol conformance descriptor for Publishers.First<A>);
  v35 = sub_2FE50();
  v36 = v51;
  v37 = v52;
  Publisher.receive<A>(on:options:)(v61, v33, v52, v30, v34, v35);
  sub_9944(v33, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v37);
  v38 = swift_allocObject(&unk_1D1E10, 24, 7);
  *(_QWORD *)(v38 + 16) = v60;
  v39 = swift_allocObject(&unk_1D1E38, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_1063E4;
  *(_QWORD *)(v39 + 24) = v38;
  v40 = sub_27A8C(&qword_202768, &qword_202720, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v42 = v55;
  v41 = v56;
  Publisher.map<A>(_:)(sub_1063EC, v39, v56, &type metadata for Bool, v40);
  v43 = swift_release(v39);
  (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v36, v41, v43);
  v44 = sub_27A8C((unint64_t *)&unk_202770, &qword_202728, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v45 = v57;
  v46 = Publisher.eraseToAnyPublisher()(v57, v44);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v45);
  return v46;
}

uint64_t sub_1034F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  v1 = v0;
  v33 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB2C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026E0);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026E8);
  v31 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2026F0);
  v32 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(id *)((char *)v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTranscriptAvailablePublisher);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_201760);
  v15 = sub_27A8C(&qword_1FBE90, (uint64_t *)&unk_201760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.first()(v14, v15);
  v16 = sub_7748();
  v34 = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  v19 = sub_27A8C(&qword_2026F8, &qword_2026E0, (uint64_t)&protocol conformance descriptor for Publishers.First<A>);
  v20 = sub_2FE50();
  Publisher.receive<A>(on:options:)(&v34, v4, v5, v16, v19, v20);
  sub_9944((uint64_t)v4, &qword_1FB2C0);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  v21 = swift_allocObject(&unk_1D1D20, 24, 7);
  swift_weakInit(v21 + 16, v1);
  v22 = swift_allocObject(&unk_1D1DE8, 32, 7);
  v23 = v33;
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v23;
  v24 = sub_27A8C(&qword_202700, &qword_2026E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  Publisher.map<A>(_:)(sub_1063CC, v22, v8, &type metadata for Bool, v24);
  v25 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v10, v8, v25);
  v26 = sub_27A8C(&qword_202708, &qword_2026F0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v27 = Publisher.eraseToAnyPublisher()(v11, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v11);
  return v27;
}

double sub_103824(char a1, char a2, char a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v5 = a5 + 16;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(a5 + 16, v13, 0, 0);
    Strong = swift_weakLoadStrong(v5);
    if (!Strong)
      return result;
    v8 = Strong;
    v9 = 0;
    goto LABEL_13;
  }
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(a5 + 16, v13, 0, 0);
    v10 = swift_weakLoadStrong(v5);
    if (!v10)
      return result;
    v8 = v10;
    v9 = 1;
    goto LABEL_13;
  }
  if ((a3 & 1) != 0)
  {
    swift_beginAccess(a5 + 16, v13, 0, 0);
    v11 = swift_weakLoadStrong(v5);
    if (!v11)
      return result;
    v8 = v11;
    v9 = 2;
    goto LABEL_13;
  }
  if ((a4 & 1) != 0)
  {
    swift_beginAccess(a5 + 16, v13, 0, 0);
    v12 = swift_weakLoadStrong(v5);
    if (v12)
    {
      v8 = v12;
      v9 = 3;
LABEL_13:
      sub_103910(v9);
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_103910(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[9];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v49 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FB9D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_nowPlayingViewModel);
  v18 = swift_retain(v17);
  dispatch thunk of NowPlayingViewModel.selectedContent.getter(v18);
  swift_release(v17);
  v19 = type metadata accessor for NowPlayingHostedContentID(0);
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v16, 1, v19);
  v20 = sub_9944((uint64_t)v16, (uint64_t *)&unk_1FB9D0);
  if ((_DWORD)v17 == 1)
  {
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTipVisible) & 1) != 0)
    {
      v21 = static Logger.nowPlaying.getter(v20);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc(22, -1);
        v52[0] = swift_slowAlloc(64, -1);
        *(_DWORD *)v24 = 136315394;
        v51 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v24 + 4, v24 + 12);
        *(_WORD *)(v24 + 12) = 2082;
        __asm { BR              X10 }
      }

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }
    else
    {
      v50 = OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTipVisible;
      v29 = static Logger.nowPlaying.getter(v20);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v49 = v4;
        v32 = swift_slowAlloc(22, -1);
        v52[0] = swift_slowAlloc(64, -1);
        *(_DWORD *)v32 = 136315394;
        v51 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v32 + 4, v32 + 12);
        *(_WORD *)(v32 + 12) = 2082;
        __asm { BR              X10 }
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_tipViewModel);
      v34 = swift_allocObject(&unk_1D1D20, 24, 7);
      swift_weakInit(v34 + 16, v2);
      v35 = swift_allocObject(&unk_1D1DC0, 25, 7);
      *(_QWORD *)(v35 + 16) = v34;
      *(_BYTE *)(v35 + 24) = a1;
      v36 = swift_allocObject(&unk_1D1D20, 24, 7);
      swift_weakInit(v36 + 16, v2);
      swift_retain(v33);
      swift_retain(v34);
      swift_retain(v36);
      sub_10C86C(a1);
      v38 = v37;
      v40 = v39;
      sub_10CA68(a1);
      v42 = v41;
      v44 = v43;
      swift_release(v34);
      swift_release(v36);
      v45 = a1;
      KeyPath = swift_getKeyPath(&unk_173700);
      v47 = swift_getKeyPath(&unk_173728);
      v52[0] = v45;
      v52[1] = v38;
      v52[2] = v40;
      v52[3] = v42;
      v52[4] = v44;
      v52[5] = (uint64_t)sub_1061FC;
      v52[6] = v35;
      v52[7] = (uint64_t)sub_106208;
      v52[8] = v36;
      result = static Published.subscript.setter(v52, v33, KeyPath, v47);
      *(_BYTE *)(v2 + v50) = 1;
    }
  }
  else
  {
    v25 = static Logger.nowPlaying.getter(v20);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v52[0] = swift_slowAlloc(64, -1);
      *(_DWORD *)v28 = 136315394;
      v51 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v28 + 4, v28 + 12);
      *(_WORD *)(v28 + 12) = 2082;
      __asm { BR              X10 }
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_104110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[4];
  uint64_t v21;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController__metadataStyleSupportsEpisodeNotesTip;
  LOBYTE(v20[0]) = 0;
  Published.init(initialValue:)(v20, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTipVisible) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_subscriptions) = _swiftEmptyArrayStorage;
  v16 = OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_tipViewModel;
  v17 = type metadata accessor for NowPlayingTipViewModel(0);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  Published.init(initialValue:)(v20, &type metadata for NowPlayingTipViewModel.Style);
  *(_QWORD *)(v5 + v16) = v18;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_queueViewModel) = a1;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_nowPlayingViewModel) = a2;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_nowPlayingItemPublisher) = a3;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTranscriptAvailablePublisher) = a4;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_areTranscriptsSupportedInNowPlaying) = a5;
  return v5;
}

uint64_t sub_104288()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_173790);
  v2 = swift_getKeyPath(&unk_1737B8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_1042F8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  void *v27;
  id v28;
  char *v29;
  NSString v30;
  unsigned int v31;
  id v32;
  void *v33;
  NSString v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v47 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v47 - v14;
  a3 += 16;
  swift_beginAccess(a3, v54, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (!Strong)
  {
LABEL_4:
    v20 = static Logger.nowPlaying.getter(Strong);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v51 = v7;
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v50 = (void (*)(uint64_t *))v6;
      v25 = v24;
      v53 = v24;
      *(_DWORD *)v23 = 136315138;
      v52 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v23 + 4, v23 + 12);
      _os_log_impl(&dword_0, v21, v22, "%s [Queue Tip] Not eligible to be shown, no items is the queue.", v23, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      (*(void (**)(char *, void (*)(uint64_t *)))(v51 + 8))(v10, v50);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    LOWORD(v53) = 0;
    a1(&v53);
    return result;
  }
  v17 = Strong;
  v18 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_queueViewModel);
  swift_retain(v18);
  v19 = sub_A2378();
  swift_release(v18);
  if (v19)
  {
    swift_release(v17);
    goto LABEL_4;
  }
  v50 = a1;
  v51 = v7;
  v49 = a2;
  v27 = (void *)objc_opt_self(NSUserDefaults);
  v28 = objc_msgSend(v27, "_applePodcastsFoundationSharedUserDefaults");
  v29 = off_202B48;
  swift_bridgeObjectRetain(off_202B48);
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v28, "BOOLForKey:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

  v32 = objc_msgSend(v27, "_applePodcastsFoundationSharedUserDefaults");
  v33 = off_202B78;
  swift_bridgeObjectRetain(off_202B78);
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "BOOLForKey:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  if ((v31 & 1) != 0 || (v35 & 1) != 0)
  {
    v42 = static Logger.nowPlaying.getter(v36);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc(24, -1);
      v48 = swift_slowAlloc(32, -1);
      v53 = v48;
      *(_DWORD *)v45 = 136315650;
      v52 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v45 + 4, v45 + 12);
      *(_WORD *)(v45 + 12) = 1024;
      LODWORD(v52) = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4, v45 + 14, v45 + 18);
      *(_WORD *)(v45 + 18) = 1024;
      LODWORD(v52) = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 4, v45 + 20, v45 + 24);
      _os_log_impl(&dword_0, v43, v44, "%s [Queue Tip] Not eligible to be shown, hasOpenedQueueTab: %{BOOL}d, hasSeenQueueTip: %{BOOL}d.", (uint8_t *)v45, 0x18u);
      v46 = v48;
      swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v6);
    LOWORD(v53) = 0;
  }
  else
  {
    v37 = static Logger.nowPlaying.getter(v36);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v53 = v41;
      *(_DWORD *)v40 = 136315138;
      v52 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v40 + 4, v40 + 12);
      _os_log_impl(&dword_0, v38, v39, "%s [Queue Tip] Eligible to be shown.", v40, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v6);
    LOWORD(v53) = 1;
  }
  v50(&v53);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double sub_1048DC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  NSString v29;
  unsigned int v30;
  id v31;
  char *v32;
  NSString v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  double result;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  void (*v54)(uint64_t *);
  uint64_t v55;
  uint64_t v56[8];
  uint64_t v57;
  _BYTE v58[24];

  v6 = type metadata accessor for Logger(0);
  v55 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)v53 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)v53 - v13;
  a3 += 16;
  swift_beginAccess(a3, v58, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (!Strong)
  {
LABEL_9:
    v41 = static Logger.nowPlaying.getter(Strong);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = v6;
      v46 = swift_slowAlloc(32, -1);
      v56[0] = v46;
      *(_DWORD *)v44 = 136315138;
      v57 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v44 + 4, v44 + 12);
      _os_log_impl(&dword_0, v42, v43, "%s [Chapters Tip] Not eligible to be shown, no chapter in the current playing item.", v44, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v6);
    }
    LOWORD(v56[0]) = 0;
    a1(v56);
    return result;
  }
  v16 = Strong;
  v53[1] = a2;
  v54 = a1;
  v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_queueViewModel);
  KeyPath = swift_getKeyPath(&unk_173748);
  v19 = swift_getKeyPath(&unk_173770);
  v20 = swift_retain(v17);
  static Published.subscript.getter(v56, v20, KeyPath, v19);
  swift_release(KeyPath);
  swift_release(v19);
  v21 = v56[0];
  v22 = v56[3];
  v23 = v56[6];
  swift_bridgeObjectRelease(v56[7]);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  v56[0] = v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FBFA0);
  v25 = sub_27A8C(&qword_1FAA40, &qword_1FBFA0, (uint64_t)&protocol conformance descriptor for [A]);
  LOBYTE(v22) = Collection.isNotEmpty.getter(v24, v25);
  swift_release(v17);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
    swift_release(v16);
    a1 = v54;
    goto LABEL_9;
  }
  v53[0] = v6;
  v26 = (void *)objc_opt_self(NSUserDefaults);
  v27 = objc_msgSend(v26, "_applePodcastsFoundationSharedUserDefaults");
  v28 = off_202B48;
  swift_bridgeObjectRetain(off_202B48);
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v27, "BOOLForKey:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

  v31 = objc_msgSend(v26, "_applePodcastsFoundationSharedUserDefaults");
  v32 = off_202B88;
  swift_bridgeObjectRetain(off_202B88);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v31, "BOOLForKey:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  if ((v30 & 1) != 0 || (v34 & 1) != 0)
  {
    v48 = static Logger.nowPlaying.getter(v35);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc(24, -1);
      v52 = swift_slowAlloc(32, -1);
      v56[0] = v52;
      *(_DWORD *)v51 = 136315650;
      v57 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v51 + 4, v51 + 12);
      *(_WORD *)(v51 + 12) = 1024;
      LODWORD(v57) = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, (char *)&v57 + 4, v51 + 14, v51 + 18);
      *(_WORD *)(v51 + 18) = 1024;
      LODWORD(v57) = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, (char *)&v57 + 4, v51 + 20, v51 + 24);
      _os_log_impl(&dword_0, v49, v50, "%s [Chapters Tip] Not eligible to be shown, hasOpenedQueueTab: %{BOOL}d, hasSeenChaptersTip: %{BOOL}d.", (uint8_t *)v51, 0x18u);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v51, -1, -1);
    }

    (*(void (**)(char *, _QWORD))(v55 + 8))(v12, v53[0]);
    LOWORD(v56[0]) = 0;
    v54(v56);
  }
  else
  {
    v36 = static Logger.nowPlaying.getter(v35);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v56[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v57 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v39 + 4, v39 + 12);
      _os_log_impl(&dword_0, v37, v38, "%s [Chapters Tip] Eligible to be shown.", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    (*(void (**)(char *, _QWORD))(v55 + 8))(v14, v53[0]);
    LOWORD(v56[0]) = 1;
    v54(v56);
  }
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_104F68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  NSString v36;
  unsigned int v37;
  id v38;
  char *v39;
  NSString v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v62 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v62 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v62 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v62 - v21;
  if ((a3 & 1) == 0)
  {
    v28 = static Logger.nowPlaying.getter(v20);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v65 = v32;
      *(_DWORD *)v31 = 136315138;
      v64 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v31 + 4, v31 + 12);
      _os_log_impl(&dword_0, v29, v30, "%s [Episodes Notes Tip] Not eligible to be shown, metadata style is not supported.", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return 0;
  }
  if (a1 < 10)
  {
    v23 = static Logger.nowPlaying.getter(v20);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(22, -1);
      v27 = swift_slowAlloc(32, -1);
      v65 = v27;
      *(_DWORD *)v26 = 136315394;
      v64 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v26 + 4, v26 + 12);
      *(_WORD *)(v26 + 12) = 2048;
      v64 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v26 + 14, v26 + 22);
      _os_log_impl(&dword_0, v24, v25, "%s [Episodes Notes Tip] Not eligible to be shown, playerOpenCount: %ld.", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return 0;
  }
  v62 = v6;
  v63 = v7;
  v33 = (void *)objc_opt_self(NSUserDefaults);
  v34 = objc_msgSend(v33, "_applePodcastsFoundationSharedUserDefaults");
  v35 = off_202B58;
  swift_bridgeObjectRetain(off_202B58);
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v34, "BOOLForKey:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v38 = objc_msgSend(v33, "_applePodcastsFoundationSharedUserDefaults");
  v39 = off_202B98;
  swift_bridgeObjectRetain(off_202B98);
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v38, "BOOLForKey:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

  if ((v37 & 1) != 0 || (v41 & 1) != 0)
  {
    v50 = static Logger.nowPlaying.getter(v42);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc(24, -1);
      v54 = swift_slowAlloc(32, -1);
      v65 = v54;
      *(_DWORD *)v53 = 136315650;
      v64 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v53 + 4, v53 + 12);
      *(_WORD *)(v53 + 12) = 1024;
      LODWORD(v64) = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, (char *)&v64 + 4, v53 + 14, v53 + 18);
      *(_WORD *)(v53 + 18) = 1024;
      LODWORD(v64) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, (char *)&v64 + 4, v53 + 20, v53 + 24);
      _os_log_impl(&dword_0, v51, v52, "%s [Episodes Notes Tip] Not eligible to be shown, hasTappedMetadata: %{BOOL}d, hasSeenEpisodeNotesTip: %{BOOL}d.", (uint8_t *)v53, 0x18u);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v63 + 8))(v16, v62);
    return 0;
  }
  if (!a2)
  {
    v55 = static Logger.nowPlaying.getter(v42);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.default.getter();
    v58 = os_log_type_enabled(v56, (os_log_type_t)v57);
    v59 = v62;
    if (v58)
    {
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v65 = v61;
      *(_DWORD *)v60 = 136315138;
      v64 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v60 + 4, v60 + 12);
      _os_log_impl(&dword_0, v56, (os_log_type_t)v57, "%s [Episodes Notes Tip] Not eligible to be shown, no item in the player.", v60, 0xCu);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v59);
    return 0;
  }
  v43 = static Logger.nowPlaying.getter(v42);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v47 = swift_slowAlloc(32, -1);
    v65 = v47;
    *(_DWORD *)v46 = 136315138;
    v64 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v46 + 4, v46 + 12);
    _os_log_impl(&dword_0, v44, v45, "%s [Episodes Notes Tip] Eligible to be shown.", v46, 0xCu);
    v48 = 1;
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v62);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v62);
    return 1;
  }
  return v48;
}

uint64_t sub_105748@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  NSString v26;
  unsigned int v27;
  id v28;
  void *v29;
  NSString v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  char v38;
  uint64_t result;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v57 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v57 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v57 - v17;
  v19 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v62, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
    goto LABEL_11;
  v21 = Strong;
  if (*(_BYTE *)(Strong + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_areTranscriptsSupportedInNowPlaying) != 1
    || (v22 = static Podcasts.areTranscriptsEnabled.getter(Strong), (v22 & 1) == 0))
  {
    swift_release(v21);
LABEL_11:
    v40 = static Logger.nowPlaying.getter(Strong);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v61 = v44;
      *(_DWORD *)v43 = 136315138;
      v60 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v43 + 4, v43 + 12);
      _os_log_impl(&dword_0, v41, v42, "%s [Transcripts Tip] Not eligible to be shown, transcripts not enabled.", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_14;
  }
  if (!v19)
  {
    v45 = static Logger.nowPlaying.getter(v22);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v59 = a3;
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v49 = swift_slowAlloc(32, -1);
      v61 = v49;
      *(_DWORD *)v48 = 136315138;
      v60 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v61);
      a3 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v48 + 4, v48 + 12);
      _os_log_impl(&dword_0, v46, v47, "%s [Transcripts Tip] Not eligible to be shown, transcript tab is currently unavailable", v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
      swift_release(v21);

    }
    else
    {

      swift_release(v21);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_14:
    v38 = 0;
    goto LABEL_15;
  }
  v59 = a3;
  v23 = (void *)objc_opt_self(NSUserDefaults);
  v24 = objc_msgSend(v23, "_applePodcastsFoundationSharedUserDefaults");
  v25 = off_202B68;
  swift_bridgeObjectRetain(off_202B68);
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "BOOLForKey:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v28 = objc_msgSend(v23, "_applePodcastsFoundationSharedUserDefaults");
  v29 = off_202BA8;
  swift_bridgeObjectRetain(off_202BA8);
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v28, "BOOLForKey:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

  if ((v27 & 1) != 0 || (v31 & 1) != 0)
  {
    v50 = static Logger.nowPlaying.getter(v32);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc(24, -1);
      v58 = swift_slowAlloc(32, -1);
      v61 = v58;
      *(_DWORD *)v53 = 136315650;
      v60 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v53 + 4, v53 + 12);
      *(_WORD *)(v53 + 12) = 1024;
      LODWORD(v60) = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 4, v53 + 14, v53 + 18);
      *(_WORD *)(v53 + 18) = 1024;
      LODWORD(v60) = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 4, v53 + 20, v53 + 24);
      _os_log_impl(&dword_0, v51, v52, "%s [Transcripts Tip] Not eligible to be shown, hasTappedTranscriptsTab: %{BOOL}d, hasSeenTranscriptsTip: %{BOOL}d.", (uint8_t *)v53, 0x18u);
      v54 = v58;
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);
      swift_release(v21);

    }
    else
    {

      v55 = swift_release(v21);
    }
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v16, v6, v55);
    v38 = 0;
    a3 = v59;
  }
  else
  {
    v33 = static Logger.nowPlaying.getter(v32);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v61 = v37;
      *(_DWORD *)v36 = 136315138;
      v60 = sub_C6F4(0xD00000000000001ALL, 0x800000000018BDE0, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v36 + 4, v36 + 12);
      _os_log_impl(&dword_0, v34, v35, "%s [Transcripts Tip] Eligible to be shown.", v36, 0xCu);
      v38 = 1;
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);
      swift_release(v21);

      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v18, v6);
    }
    else
    {

      v56 = swift_release(v21);
      result = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v18, v6, v56);
      v38 = 1;
    }
    a3 = v59;
  }
LABEL_15:
  *a3 = v38;
  return result;
}

double sub_105E74(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_106218(a2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_105ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _OWORD v7[4];
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_tipViewModel);
    KeyPath = swift_getKeyPath(&unk_173700);
    v6 = swift_getKeyPath(&unk_173728);
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_retain(v4);
    static Published.subscript.setter(v7, v4, KeyPath, v6);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTipVisible) = 0;
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_105F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController__metadataStyleSupportsEpisodeNotesTip;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_201780);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_queueViewModel));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_nowPlayingViewModel));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_nowPlayingItemPublisher));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_isTranscriptAvailablePublisher));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_subscriptions));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC12NowPlayingUI23NowPlayingTipController_tipViewModel));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_106040()
{
  return type metadata accessor for NowPlayingTipController(0);
}

uint64_t type metadata accessor for NowPlayingTipController(uint64_t a1)
{
  uint64_t result;

  result = qword_2025D8;
  if (!qword_2025D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingTipController);
  return result;
}

void sub_106084(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  sub_986FC();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_1736E8;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = &unk_1736E8;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

uint64_t sub_106120()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_106144()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_106168(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_1042F8(a1, a2, *(_QWORD *)(v2 + 16));
}

double sub_106170(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_1048DC(a1, a2, *(_QWORD *)(v2 + 16));
}

double sub_106178(char a1, char a2, char a3, char a4)
{
  uint64_t v4;

  return sub_103824(a1, a2, a3, a4, v4);
}

uint64_t sub_106180()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1061A4(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1061D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_1061FC()
{
  uint64_t v0;

  return sub_105E74(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_106208()
{
  uint64_t v0;

  return sub_105ED0(v0);
}

void sub_106218(char a1)
{
  __asm { BR              X10 }
}

void sub_106248(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  NSString v17;
  void *v18;
  Class isa;
  void *v20;
  NSString v21;
  id v22;

  v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v16 = off_202B78;
  swift_bridgeObjectRetain(off_202B78);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  LOBYTE(v16) = objc_msgSend(v22, "BOOLForKey:", v17);

  if ((v16 & 1) != 0)
  {
    v18 = v22;
  }
  else
  {
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v20 = off_202B78;
    swift_bridgeObjectRetain(off_202B78);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    objc_msgSend(v22, "setValue:forKey:", isa, v21);

    v18 = v21;
  }

}

uint64_t sub_1063CC@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_105748(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1063D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1063E4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_104F68(a1, a2, a3);
}

uint64_t sub_1063EC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *a2 = result & 1;
  return result;
}

void sub_106440(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  objc_class *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  objc_super v12;
  _QWORD v13[4];

  v5 = (objc_class *)type metadata accessor for CubicSpringTimingParameters();
  v12.receiver = v2;
  v12.super_class = v5;
  v6 = objc_msgSendSuper2(&v12, "copyWithZone:", a1);
  _bridgeAnyObjectToAny(_:)(v13, v6);
  swift_unknownObjectRelease(v6);
  swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, v5, 7);
  v7 = v11;
  v8 = *(void **)&v2[OBJC_IVAR____TtC12NowPlayingUI27CubicSpringTimingParameters_springCubicTimingParameters];
  v9 = *(void **)(v11 + OBJC_IVAR____TtC12NowPlayingUI27CubicSpringTimingParameters_springCubicTimingParameters);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC12NowPlayingUI27CubicSpringTimingParameters_springCubicTimingParameters) = v8;
  v10 = v8;

  a2[3] = v5;
  *a2 = v7;
}

id sub_106768()
{
  return sub_606B0(type metadata accessor for CubicSpringTimingParameters);
}

uint64_t type metadata accessor for CubicSpringTimingParameters()
{
  return objc_opt_self(_TtC12NowPlayingUI27CubicSpringTimingParameters);
}

id sub_1067A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  objc_super v16;

  if (a3)
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for CubicSpringPropertyAnimator();
  v6 = objc_msgSendSuper2(&v16, "_basicAnimationForView:withKeyPath:", a1, v5);

  v7 = objc_msgSend(v3, "timingParameters");
  if (v7)
  {
    v8 = v7;
    v9 = type metadata accessor for CubicSpringTimingParameters();
    v10 = swift_dynamicCastClass(v8, v9);
    if (v10)
    {
      v11 = *(void **)(v10 + OBJC_IVAR____TtC12NowPlayingUI27CubicSpringTimingParameters_springCubicTimingParameters);
      if (v11)
      {
        v12 = objc_msgSend(v11, "_mediaTimingFunction");
        if (v12)
        {
          v13 = v12;
          if (!v6)
          {
            swift_unknownObjectRelease(v8);

            return v6;
          }
          v14 = v6;
          objc_msgSend(v14, "setTimingFunction:", v13);

        }
      }
    }
    swift_unknownObjectRelease(v8);
  }
  return v6;
}

id sub_10699C()
{
  return sub_606B0(type metadata accessor for CubicSpringPropertyAnimator);
}

uint64_t type metadata accessor for CubicSpringPropertyAnimator()
{
  return objc_opt_self(_TtC12NowPlayingUI27CubicSpringPropertyAnimator);
}

uint64_t NotificationObserver.__allocating_init(name:object:dispatchOnMainThread:handler:)(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, 56, 7);
  NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(a1, a2, a3, a4, a5);
  return v11;
}

uint64_t NotificationObserver.init(name:object:dispatchOnMainThread:handler:)(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t Strong;
  id v16;

  v11 = swift_unknownObjectWeakInit(v5 + 24, 0);
  *(_QWORD *)(v5 + 16) = a1;
  swift_unknownObjectWeakAssign(v11, a2);
  *(_BYTE *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  v12 = (void *)objc_opt_self(NSNotificationCenter);
  v13 = a1;
  swift_retain(a5);
  v14 = objc_msgSend(v12, "defaultCenter");
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 24);
  v16 = v13;
  swift_retain(v5);
  objc_msgSend(v14, "addObserver:selector:name:object:", v5, "handleNotification:", v16, Strong);

  swift_release(v5);
  swift_unknownObjectRelease(Strong);

  swift_unknownObjectRelease(a2);
  swift_release(a5);
  return v5;
}

uint64_t NotificationObserver.deinit()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = *(_QWORD *)(v0 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 24);
  objc_msgSend(v1, "removeObserver:name:object:", v0, v2, Strong);

  swift_unknownObjectRelease(Strong);
  sub_1EC0C(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t NotificationObserver.__deallocating_deinit()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = *(_QWORD *)(v0 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 24);
  objc_msgSend(v1, "removeObserver:name:object:", v0, v2, Strong);

  swift_unknownObjectRelease(Strong);
  sub_1EC0C(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

double sub_106C9C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;
  double result;
  __n128 v33;
  void *v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD aBlock[5];
  uint64_t v57;

  v55 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notification(0);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  __chkstk_darwin(v9);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v17 = __chkstk_darwin(v14);
  if (*(_BYTE *)(v1 + 32) != 1)
  {
    (*(void (**)(char *, __n128))(v1 + 40))(v55, v17);
    return result;
  }
  v47 = v8;
  v48 = v6;
  v49 = v5;
  v50 = v4;
  v18 = *(void (**)(char *, char *, uint64_t, __n128))(v16 + 16);
  v19 = (char *)&v46 - v15;
  v20 = v16;
  v18((char *)&v46 - v15, v55, v9, v17);
  v21 = swift_allocObject(&unk_1D1E70, 24, 7);
  v22 = v21 + 16;
  swift_weakInit(v21 + 16, v1);
  v52 = v19;
  ((void (*)(char *, char *, uint64_t))v18)(v13, v19, v9);
  v55 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, char *, uint64_t))v18)(v55, v13, v9);
  v23 = *(unsigned __int8 *)(v20 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = swift_allocObject(&unk_1D1E98, v24 + v10, v23 | 7);
  *(_QWORD *)(v25 + 16) = v21;
  v51 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v13, v9);
  v26 = (void *)objc_opt_self(NSThread);
  swift_retain_n(v21, 2);
  if (!objc_msgSend(v26, "isMainThread"))
  {
    sub_7748();
    v34 = (void *)static OS_dispatch_queue.main.getter(v33);
    aBlock[4] = sub_107234;
    v57 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_F528;
    aBlock[3] = &block_descriptor_28;
    v35 = _Block_copy(aBlock);
    v36 = v57;
    swift_retain();
    swift_release(v36);
    v37 = v47;
    static DispatchQoS.unspecified.getter(v38);
    aBlock[0] = _swiftEmptyArrayStorage;
    v39 = sub_F52C();
    v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1FD9C0);
    v41 = sub_F574();
    v42 = v50;
    v43 = v54;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v41, v54, v39);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v37, v42, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v49);
    goto LABEL_7;
  }
  swift_beginAccess(v22, aBlock, 0, 0);
  Strong = swift_weakLoadStrong(v22);
  if (!Strong)
  {
LABEL_7:
    swift_release(v21);
    v31 = v25;
    goto LABEL_8;
  }
  v28 = Strong;
  v30 = *(void (**)(char *))(Strong + 40);
  v29 = *(_QWORD *)(Strong + 48);
  swift_retain();
  v30(v55);
  swift_release(v21);
  swift_release(v25);
  swift_release(v28);
  v31 = v29;
LABEL_8:
  v44 = swift_release(v31);
  v45 = *(void (**)(char *, uint64_t, __n128))(v51 + 8);
  v45(v55, v9, v44);
  ((void (*)(char *, uint64_t))v45)(v52, v9);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_107064(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v7 = *(void (**)(uint64_t))(result + 40);
    v6 = *(_QWORD *)(result + 48);
    swift_retain(v6);
    v7(a2);
    swift_release(v5);
    return swift_release(v6);
  }
  return result;
}

uint64_t type metadata accessor for NotificationObserver()
{
  return objc_opt_self(_TtC12NowPlayingUI20NotificationObserver);
}

uint64_t sub_10719C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1071C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Notification(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_107234()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0) - 8) + 80);
  return sub_107064(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_10727C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_9944((uint64_t)a1, &qword_1FABA0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  swift_release(v15);
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = v18[8];
  v20 = *(_QWORD *)v17;
  *(_QWORD *)v17 = v19;
  v17[8] = (char)v18;
  swift_retain();
  swift_release(v20);
  return a1;
}

char *sub_10738C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_9944((uint64_t)a1, &qword_1FABA0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_release(v12);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)v15;
  LOBYTE(v15) = v15[8];
  v17 = *(_QWORD *)v14;
  *(_QWORD *)v14 = v16;
  v14[8] = (char)v15;
  swift_release(v17);
  return a1;
}

uint64_t sub_107488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_107494);
}

uint64_t sub_107494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_107514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_107520);
}

uint64_t sub_107520(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t _s8LiveTextVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_202970;
  if (!qword_202970)
    return swift_getSingletonMetadata(a1, &_s8LiveTextVMn);
  return result;
}

void sub_1075DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_930E4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_107650(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A375C, 1);
}

uint64_t sub_107660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v45 = a1;
  v3 = _s8LiveTextVMa(0);
  v42 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v43 = v4;
  v44 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029B0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = static Alignment.center.getter(v14);
  v7[1] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029C8);
  v17 = v2;
  sub_1079DC(v2, (uint64_t)v7 + *(int *)(v16 + 44));
  if (qword_1F9538 != -1)
    swift_once(&qword_1F9538, sub_EEF9C);
  v18 = qword_210278;
  KeyPath = swift_getKeyPath(&unk_173CC0);
  sub_2808C((uint64_t)v7, (uint64_t)v10, &qword_2029B0);
  v20 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v20 = KeyPath;
  v20[1] = v18;
  swift_retain();
  sub_9944((uint64_t)v7, &qword_2029B0);
  v21 = static Animation.easeInOut(duration:)(0.15);
  v22 = v17 + *(int *)(v3 + 20);
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  v25 = swift_retain();
  v26 = sub_56D88(v25, v24);
  swift_release(v23);
  v27 = swift_getKeyPath(&unk_173CF0);
  v46 = v26;
  v28 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, v27, v28);
  swift_release(v27);
  v29 = *(_QWORD *)(v26 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange);
  v30 = *(_QWORD *)(v26 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange + 8);
  v31 = *(_BYTE *)(v26 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeReadRange + 16);
  swift_release(v26);
  sub_2808C((uint64_t)v10, (uint64_t)v13, &qword_2029B8);
  v32 = &v13[*(int *)(v11 + 36)];
  *(_QWORD *)v32 = v21;
  *((_QWORD *)v32 + 1) = v29;
  *((_QWORD *)v32 + 2) = v30;
  v32[24] = v31;
  sub_9944((uint64_t)v10, &qword_2029B8);
  v33 = v44;
  sub_278B8(v17, v44, _s8LiveTextVMa);
  v34 = *(unsigned __int8 *)(v42 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_1D1EE8, v35 + v43, v34 | 7);
  sub_108B70(v33, v36 + v35);
  v37 = swift_allocObject(&unk_1D1F10, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_108BB4;
  *(_QWORD *)(v37 + 24) = v36;
  v38 = v45;
  sub_2808C((uint64_t)v13, v45, &qword_2029C0);
  v39 = (_QWORD *)(v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2029D0) + 36));
  *v39 = sub_108C18;
  v39[1] = v37;
  return sub_9944((uint64_t)v13, &qword_2029C0);
}

uint64_t sub_1079DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  char *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, __n128);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *);
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[3];
  uint64_t v125;

  v117 = a2;
  v118 = a1;
  v3 = type metadata accessor for ColorSchemeContrast(0);
  v114 = *(_QWORD *)(v3 - 8);
  v115 = v3;
  __chkstk_darwin(v3);
  v113 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v111 = (uint64_t)&v95 - v6;
  v120 = type metadata accessor for TranscriptTextContentRenderer(0);
  __chkstk_darwin(v120);
  v107 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BlendMode(0);
  v104 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v109 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v95 - v14;
  v16 = type metadata accessor for AttributedString(0);
  v17 = *(_QWORD *)(v16 - 8);
  v98 = v16;
  __chkstk_darwin(v16);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029D8);
  __chkstk_darwin(v121);
  v108 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v95 - v22;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029E0);
  __chkstk_darwin(v123);
  v116 = (uint64_t)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v110 = (char *)&v95 - v26;
  __chkstk_darwin(v27);
  v112 = (uint64_t)&v95 - v28;
  __chkstk_darwin(v29);
  v119 = (uint64_t)&v95 - v30;
  __chkstk_darwin(v31);
  v122 = (uint64_t)&v95 - v32;
  v102 = _s8LiveTextVMa(0);
  v101 = (uint64_t *)(a1 + *(int *)(v102 + 20));
  v33 = *v101;
  v34 = *((_BYTE *)v101 + 8);
  v35 = swift_retain();
  v36 = sub_56D88(v35, v34);
  swift_release(v33);
  KeyPath = swift_getKeyPath(&unk_173D40);
  v125 = v36;
  v99 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v125, KeyPath, v99);
  swift_release(KeyPath);
  v38 = v36 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent;
  v39 = swift_beginAccess(v36 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent, &v125, 0, 0);
  v97 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v95 = v19;
  v97(v19, v38, v16, v39);
  v40 = swift_release(v36);
  v41 = Text.init(_:)(v19, v40);
  v43 = v42;
  v45 = v44;
  LOBYTE(v17) = v46 & 1;
  v103 = enum case for BlendMode.normal(_:);
  v47 = v104;
  v106 = *(void (**)(char *))(v104 + 104);
  v106(v15);
  v105 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v96 = v11;
  v105(v10, v15, v11);
  v48 = (uint64_t)&v23[*(int *)(v121 + 36)];
  v100 = v10;
  sub_278B8((uint64_t)v10, v48, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v23 = v41;
  *((_QWORD *)v23 + 1) = v43;
  v23[16] = v17;
  *((_QWORD *)v23 + 3) = v45;
  sub_278A8(v41, v43, v17);
  swift_bridgeObjectRetain(v45);
  sub_90FE0((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  v104 = *(_QWORD *)(v47 + 8);
  ((void (*)(char *, uint64_t))v104)(v15, v11);
  sub_25404(v41, v43, v17);
  swift_bridgeObjectRelease(v45);
  v49 = v120;
  v50 = v107;
  v51 = v118;
  sub_562AC((uint64_t)&v107[*(int *)(v120 + 20)]);
  v102 = v51 + *(int *)(v102 + 24);
  v52 = *(_QWORD *)v102;
  LOBYTE(v17) = *(_BYTE *)(v102 + 8);
  v53 = swift_retain();
  v54 = sub_56DC0(v53, v17);
  swift_release(v52);
  *v50 = 0;
  *(_QWORD *)&v50[*(int *)(v49 + 24)] = v54;
  v55 = v119;
  sub_278B8((uint64_t)v50, v119 + *(int *)(v123 + 36), type metadata accessor for TranscriptTextContentRenderer);
  sub_2808C((uint64_t)v23, v55, &qword_2029D8);
  sub_90FE0((uint64_t)v50, type metadata accessor for TranscriptTextContentRenderer);
  sub_9944((uint64_t)v23, &qword_2029D8);
  sub_982C(v55, v122, &qword_2029E0);
  v56 = *v101;
  LOBYTE(v54) = *((_BYTE *)v101 + 8);
  v57 = swift_retain();
  v58 = sub_56D88(v57, v54);
  swift_release(v56);
  v59 = swift_getKeyPath(&unk_173D40);
  v124[0] = v58;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v124, v59, v99);
  swift_release(v59);
  v60 = v58 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent;
  v61 = swift_beginAccess(v58 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__attributedContent, v124, 0, 0);
  v62 = v95;
  v97(v95, v60, v98, v61);
  v63 = swift_release(v58);
  v64 = Text.init(_:)(v62, v63);
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v71 = v111;
  sub_562AC(v111);
  v72 = v113;
  v73 = v114;
  v74 = v115;
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v113, enum case for ColorSchemeContrast.standard(_:), v115);
  v75 = v71;
  LOBYTE(v71) = static ColorSchemeContrast.== infix(_:_:)(v71, v72);
  v76 = *(void (**)(char *, uint64_t))(v73 + 8);
  v76(v72, v74);
  v76((char *)v75, v74);
  if ((v71 & 1) != 0)
    v77 = enum case for BlendMode.plusLighter(_:);
  else
    v77 = v103;
  v78 = v109;
  v79 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v106)(v109, v77, v96);
  v80 = v68 & 1;
  v81 = (uint64_t)v100;
  v105(v100, v78, v79);
  v82 = (uint64_t)v108;
  sub_278B8(v81, (uint64_t)&v108[*(int *)(v121 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v82 = v64;
  *(_QWORD *)(v82 + 8) = v66;
  *(_BYTE *)(v82 + 16) = v80;
  *(_QWORD *)(v82 + 24) = v70;
  sub_278A8(v64, v66, v80);
  swift_bridgeObjectRetain(v70);
  sub_90FE0(v81, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  ((void (*)(char *, uint64_t))v104)(v78, v79);
  sub_25404(v64, v66, v80);
  swift_bridgeObjectRelease(v70);
  v83 = v120;
  sub_562AC((uint64_t)&v50[*(int *)(v120 + 20)]);
  v84 = *(_QWORD *)v102;
  LOBYTE(v81) = *(_BYTE *)(v102 + 8);
  v85 = swift_retain();
  v86 = sub_56DC0(v85, v81);
  swift_release(v84);
  *v50 = 1;
  *(_QWORD *)&v50[*(int *)(v83 + 24)] = v86;
  v87 = (uint64_t)v110;
  sub_278B8((uint64_t)v50, (uint64_t)&v110[*(int *)(v123 + 36)], type metadata accessor for TranscriptTextContentRenderer);
  sub_2808C(v82, v87, &qword_2029D8);
  sub_90FE0((uint64_t)v50, type metadata accessor for TranscriptTextContentRenderer);
  sub_9944(v82, &qword_2029D8);
  v88 = v112;
  sub_982C(v87, v112, &qword_2029E0);
  v89 = v122;
  v90 = v119;
  sub_2808C(v122, v119, &qword_2029E0);
  v91 = v116;
  sub_2808C(v88, v116, &qword_2029E0);
  v92 = v117;
  sub_2808C(v90, v117, &qword_2029E0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2029E8);
  sub_2808C(v91, v92 + *(int *)(v93 + 48), &qword_2029E0);
  sub_9944(v88, &qword_2029E0);
  sub_9944(v89, &qword_2029E0);
  sub_9944(v91, &qword_2029E0);
  return sub_9944(v90, &qword_2029E0);
}

void sub_1082E4(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(__int128 *, _QWORD);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(__int128 *, _QWORD);
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  char *v93;
  _QWORD v94[4];
  char v95;
  __int128 v96;
  __int128 v97;
  double v98;

  v91 = a1;
  v2 = type metadata accessor for Text.Layout.Run(0);
  v88 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v93 = (char *)&v75 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9AC8);
  __chkstk_darwin(v7);
  v87 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v75 - v10;
  v12 = type metadata accessor for Text.Layout.Line(0);
  v86 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v92 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v85 = (char *)&v75 - v15;
  v89 = type metadata accessor for Text.Layout(0);
  v84 = *(char **)(v89 - 8);
  __chkstk_darwin(v89);
  v90 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F9AD0);
  __chkstk_darwin(v82);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v75 - v20;
  v22 = (uint64_t *)(v1 + *(int *)(_s8LiveTextVMa(0) + 20));
  v23 = *v22;
  v83 = v22;
  v24 = *((_BYTE *)v22 + 8);
  v25 = swift_retain();
  v26 = sub_56D88(v25, v24);
  swift_release(v23);
  KeyPath = swift_getKeyPath(&unk_173D18);
  *(_QWORD *)&v96 = v26;
  v28 = sub_8330(&qword_1FDF70, type metadata accessor for TextContent.LiveText, (uint64_t)&unk_1747EC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v96, KeyPath, v28);
  swift_release(KeyPath);
  LOBYTE(v23) = *(_BYTE *)(v26 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText__activeSearchRange + 16);
  v29 = swift_release(v26);
  if ((v23 & 1) == 0 && *((_QWORD *)v91 + 2))
  {
    v79 = v7;
    v80 = v4;
    v81 = v2;
    type metadata accessor for Text.LayoutKey.AnchoredLayout(0, v29);
    v30 = v90;
    Text.LayoutKey.AnchoredLayout.layout.getter();
    v31 = (uint64_t)v84;
    v32 = v89;
    v78 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v84 + 2);
    v78(v18, v30, v89);
    v33 = sub_8330(&qword_1F9AD8, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout, (uint64_t)&protocol conformance descriptor for Text.Layout);
    dispatch thunk of Collection.startIndex.getter(&v96, v32, v33);
    v77 = *(void (**)(char *, uint64_t))(v31 + 8);
    v77(v30, v32);
    v34 = v82;
    *(_QWORD *)&v18[*(int *)(v82 + 36)] = v96;
    v35 = (uint64_t)v18;
    v36 = v33;
    sub_982C(v35, (uint64_t)v21, &qword_1F9AD0);
    v37 = &v21[*(int *)(v34 + 36)];
    v84 = v21;
    v38 = *(_QWORD *)v37;
    dispatch thunk of Collection.endIndex.getter(&v96, v32, v36);
    v39 = (uint64_t)v84;
    if (v38 == (_QWORD)v96)
    {
LABEL_5:
      sub_9944(v39, &qword_1F9AD0);
      v40 = *v83;
      v41 = *((_BYTE *)v83 + 8);
      v42 = swift_retain();
      v43 = sub_56D88(v42, v41);
      swift_release(v40);
      v44 = *(_QWORD *)(v43 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText_activeSearchResultFrame);
      swift_retain();
      swift_release(v43);
      v96 = 0u;
      v97 = 0u;
      LOBYTE(v98) = 1;
      CurrentValueSubject.send(_:)(&v96);
      swift_release(v44);
    }
    else
    {
      v76 = v36;
      v82 = (uint64_t)v37;
      while (1)
      {
        v46 = (void (*)(__int128 *, _QWORD))dispatch thunk of Collection.subscript.read(&v96, v37, v32, v36);
        v47 = v37;
        v49 = v85;
        v48 = v86;
        v50 = (uint64_t)v11;
        v51 = *(void (**)(char *))(v86 + 16);
        v51(v85);
        v46(&v96, 0);
        v52 = v90;
        v78(v90, (char *)v39, v32);
        dispatch thunk of Collection.formIndex(after:)(v47, v32, v36);
        v77(v52, v32);
        v53 = (uint64_t)v87;
        v91 = (void (*)(char *, char *, uint64_t))v51;
        ((void (*)(char *, char *, uint64_t))v51)(v87, v49, v12);
        v54 = sub_8330(&qword_1F9AE0, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout.Line, (uint64_t)&protocol conformance descriptor for Text.Layout.Line);
        dispatch thunk of Collection.startIndex.getter(&v96, v12, v54);
        v55 = *(void (**)(char *, uint64_t))(v48 + 8);
        v55(v49, v12);
        v56 = v79;
        *(_QWORD *)(v53 + *(int *)(v79 + 36)) = v96;
        sub_982C(v53, v50, &qword_1F9AC8);
        v57 = (uint64_t *)(v50 + *(int *)(v56 + 36));
        v58 = *v57;
        dispatch thunk of Collection.endIndex.getter(&v96, v12, v54);
        v59 = v81;
        v60 = v88;
        v11 = (char *)v50;
        v61 = v80;
        if (v58 != (_QWORD)v96)
          break;
LABEL_6:
        sub_9944((uint64_t)v11, &qword_1F9AC8);
        v37 = (char *)v82;
        v45 = *(_QWORD *)v82;
        v39 = (uint64_t)v84;
        v32 = v89;
        v36 = v76;
        dispatch thunk of Collection.endIndex.getter(&v96, v89, v76);
        if (v45 == (_QWORD)v96)
          goto LABEL_5;
      }
      while (1)
      {
        v62 = (void (*)(__int128 *, _QWORD))dispatch thunk of Collection.subscript.read(&v96, v57, v12, v54);
        v63 = v93;
        (*(void (**)(char *))(v60 + 16))(v93);
        v62(&v96, 0);
        v64 = v92;
        v91(v92, v11, v12);
        dispatch thunk of Collection.formIndex(after:)(v57, v12, v54);
        v55(v64, v12);
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v61, v63, v59);
        v65 = sub_9870();
        Text.Layout.Run.subscript.getter(&v96, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, &type metadata for TranscriptTextContentRenderer.PrimaryHighlight, v65);
        v66 = v60;
        if ((v96 & 1) == 0)
          break;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
        v67 = *v57;
        dispatch thunk of Collection.endIndex.getter(&v96, v12, v54);
        if (v67 == (_QWORD)v96)
          goto LABEL_6;
      }
      v68 = *v83;
      v69 = *((_BYTE *)v83 + 8);
      v70 = swift_retain();
      v71 = sub_56D88(v70, v69);
      swift_release(v68);
      v72 = *(_QWORD *)(v71 + OBJC_IVAR____TtCC12NowPlayingUI11TextContent8LiveText_activeSearchResultFrame);
      swift_retain();
      swift_release(v71);
      Text.Layout.Run.typographicBounds.getter(&v96, v73);
      v94[0] = v96;
      *(double *)&v94[1] = *((double *)&v96 + 1) - *((double *)&v97 + 1);
      v94[2] = v97;
      *(double *)&v94[3] = *((double *)&v97 + 1) + v98;
      v95 = 0;
      CurrentValueSubject.send(_:)(v94);
      v74 = swift_release(v72);
      (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v61, v59, v74);
      sub_9944((uint64_t)v11, &qword_1F9AC8);
      sub_9944((uint64_t)v84, &qword_1F9AD0);
    }
  }
}

uint64_t sub_108AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = _s8LiveTextVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FABA0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + *(int *)(v1 + 20)));
  swift_release(*(_QWORD *)((char *)v6 + *(int *)(v1 + 24)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_108B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s8LiveTextVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_108BB4(void (*a1)(char *, char *, uint64_t))
{
  _s8LiveTextVMa(0);
  sub_1082E4(a1);
}

uint64_t sub_108BF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_108C18(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

unint64_t sub_108C50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2029F0;
  if (!qword_2029F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2029D0);
    sub_108CD4();
    sub_27A8C(&qword_202A20, &qword_202A28, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2029F0);
  }
  return result;
}

unint64_t sub_108CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2029F8;
  if (!qword_2029F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2029C0);
    sub_108D58();
    sub_27A8C(&qword_202A10, &qword_202A18, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_2029F8);
  }
  return result;
}

unint64_t sub_108D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_202A00;
  if (!qword_202A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2029B8);
    sub_27A8C(&qword_202A08, &qword_2029B0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_27A8C(&qword_1FAEB0, &qword_1FAEB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_202A00);
  }
  return result;
}

void sub_108DF4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v21;

  *(_QWORD *)&v4[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_phaseXPosition] = 0;
  v9 = OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_patternLayer;
  v10 = objc_allocWithZone((Class)CALayer);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_defaultSpeed] = 4;
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_displayLink] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_speed] = 0x4010000000000000;
  v11[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_animating] = 0;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for PlayerIndeterminateActivityIndicator();
  v12 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v12, "setClipsToBounds:", 1);
  v13 = OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_patternLayer;
  v14 = *(id *)&v12[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_patternLayer];
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v15);

  if (v16)
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithPatternImage:", v16);

    v18 = objc_msgSend(v17, "CGColor");
    objc_msgSend(v14, "setBackgroundColor:", v18);

    v19 = objc_msgSend(v12, "layer");
    v20 = *(id *)&v12[v13];
    objc_msgSend(v19, "addSublayer:", v20);

  }
  else
  {
    __break(1u);
  }
}

id sub_109168()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayerIndeterminateActivityIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlayerIndeterminateActivityIndicator()
{
  return objc_opt_self(_TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator);
}

void sub_1091F0()
{
  _BYTE *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_phaseXPosition] = 0;
  v1 = OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_patternLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_defaultSpeed] = 4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_displayLink] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_speed] = 0x4010000000000000;
  v0[OBJC_IVAR____TtC12NowPlayingUI36PlayerIndeterminateActivityIndicator_animating] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000183FF0, "NowPlayingUI/PlayerIndeterminateActivityIndicator.swift", 55, 2, 55, 0);
  __break(1u);
}

_QWORD *sub_1092B8(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  id v4;
  void *v5;
  Swift::String v6;
  Class isa;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  if (!a1)
    goto LABEL_7;
  v3 = a1;
  if ((objc_msgSend(v3, "isSystemPodcastsPath") & 1) != 0
    || (v4 = objc_msgSend(v3, "bundleID")) == 0)
  {

LABEL_7:
    v14 = type metadata accessor for NowPlayingMetadataPlaceholder();
    swift_deallocPartialClassInstance(v1, v14, 40, 7);
    return 0;
  }

  v5 = (void *)objc_opt_self(MPArtworkCatalog);
  sub_B617C();
  v6._object = (void *)0x800000000018C100;
  v6._countAndFlagsBits = 0xD00000000000001ELL;
  isa = UIImage.init(imageLiteralResourceName:)(v6).super.isa;
  v8 = objc_msgSend(v5, "staticArtworkCatalogWithImage:", isa);

  v2[2] = v8;
  v9 = objc_msgSend(v3, "representedBundleDisplayName");
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

  }
  else
  {

    v11 = 0;
    v13 = 0;
  }
  v2[3] = v11;
  v2[4] = v13;
  return v2;
}

uint64_t sub_109400()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for NowPlayingMetadataPlaceholder()
{
  return objc_opt_self(_TtC12NowPlayingUI29NowPlayingMetadataPlaceholder);
}

char *sub_10944C(char *a1, uint64_t *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for TranscriptSource(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = &v4[v11];
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *(_QWORD *)v13 = *v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = &v4[v12];
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    swift_bridgeObjectRetain(v15);
  }
  swift_retain();
  return v4;
}

uint64_t sub_109554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for TranscriptSource(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

char *sub_1095D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptSource(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRetain(v13);
  swift_retain();
  return a1;
}

char *sub_1096B0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for TranscriptSource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v16 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  v21 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  swift_retain();
  swift_release(v21);
  return a1;
}

char *sub_1097FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for TranscriptSource(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_1098C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for TranscriptSource(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = *(int *)(a3 + 24);
  v19 = *(_QWORD *)&a1[v18 + 8];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  swift_release(v19);
  return a1;
}

uint64_t sub_1099F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1099FC);
}

uint64_t sub_1099FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_109A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_109A88);
}

uint64_t sub_109A88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FooterViewModel(uint64_t a1)
{
  return sub_256F8(a1, (uint64_t *)&unk_202C10, (uint64_t)&nominal type descriptor for FooterViewModel);
}

void sub_109B18(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_109B98(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_173E20;
    v4[2] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_109B98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_202C20)
  {
    v2 = type metadata accessor for TranscriptSource(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_202C20);
  }
}

uint64_t *sub_109BEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_2609C(*(_QWORD *)a2, v8);
    *v4 = v7;
    *((_BYTE *)v4 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)v4 + v9;
    v11 = (char *)(a2 + v9);
    v12 = type metadata accessor for TranscriptSource(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v16 = type metadata accessor for FooterViewModel(0);
    v17 = *(int *)(v16 + 20);
    v18 = &v10[v17];
    v19 = &v11[v17];
    v21 = *(_QWORD *)v19;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = v21;
    *((_QWORD *)v18 + 1) = v20;
    v22 = *(int *)(v16 + 24);
    v23 = &v10[v22];
    v24 = &v11[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    swift_bridgeObjectRetain(v20);
  }
  swift_retain();
  return v4;
}

double sub_109D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  sub_261F4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = type metadata accessor for FooterViewModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + *(int *)(v7 + 20) + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v4 + *(int *)(v7 + 24) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_109DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2609C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for TranscriptSource(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = type metadata accessor for FooterViewModel(0);
  v15 = *(int *)(v14 + 20);
  v16 = &v9[v15];
  v17 = &v10[v15];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  v20 = *(int *)(v14 + 24);
  v21 = &v9[v20];
  v22 = &v10[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRetain(v18);
  swift_retain();
  return a1;
}

uint64_t sub_109EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2609C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_261F4(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for TranscriptSource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = type metadata accessor for FooterViewModel(0);
  v20 = *(int *)(v19 + 20);
  v21 = &v11[v20];
  v22 = &v12[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  v24 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = *(int *)(v19 + 24);
  v26 = &v11[v25];
  v27 = &v12[v25];
  v28 = *((_QWORD *)v27 + 1);
  v29 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  swift_retain();
  swift_release(v29);
  return a1;
}

uint64_t sub_10A06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for TranscriptSource(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v10 = type metadata accessor for FooterViewModel(0);
  *(_OWORD *)&v5[*(int *)(v10 + 20)] = *(_OWORD *)&v6[*(int *)(v10 + 20)];
  *(_OWORD *)&v5[*(int *)(v10 + 24)] = *(_OWORD *)&v6[*(int *)(v10 + 24)];
  return a1;
}

uint64_t sub_10A150(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_261F4(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for TranscriptSource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = type metadata accessor for FooterViewModel(0);
  v20 = *(int *)(v19 + 20);
  v21 = &v11[v20];
  v22 = &v12[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  v25 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease(v25);
  v26 = *(int *)(v19 + 24);
  v27 = *(_QWORD *)&v11[v26 + 8];
  *(_OWORD *)&v11[v26] = *(_OWORD *)&v12[v26];
  swift_release(v27);
  return a1;
}

uint64_t sub_10A2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10A2C0);
}

uint64_t sub_10A2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for FooterViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_10A334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10A340);
}

uint64_t sub_10A340(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for FooterViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FooterView(uint64_t a1)
{
  return sub_256F8(a1, qword_202CB0, (uint64_t)&nominal type descriptor for FooterView);
}

uint64_t sub_10A3C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\t";
  result = type metadata accessor for FooterViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10A438(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1A38DC, 1);
}

uint64_t sub_10A448@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter();
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &dword_0, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_278A8(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain(v20);
}

double sub_10A628@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10AA2C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1FB050, &qword_1FB058).n128_u64[0];
  return result;
}

__n128 sub_10A680@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &dword_0, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FC468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1FC470) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

__n128 sub_10A84C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v26;
  double v27;
  double v28;
  uint64_t v30;
  void *v31;
  __int128 v32;
  __int128 v33;
  __n128 result;
  unsigned int v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _OWORD v40[7];

  v16 = a12;
  v17 = a10;
  v18 = a2 & 1;
  v19 = a1;
  if ((_DWORD)v18)
    v19 = -INFINITY;
  v20 = a4 & 1;
  v21 = a3;
  if ((a4 & 1) != 0)
    v21 = v19;
  v22 = a6 & 1;
  v23 = a8 & 1;
  v24 = a5;
  if ((a6 & 1) != 0)
    v24 = v21;
  if (v19 > v21 || v21 > v24)
    goto LABEL_22;
  v26 = a7;
  if ((a8 & 1) != 0)
    v26 = -INFINITY;
  v27 = a10;
  if ((a11 & 1) != 0)
    v27 = v26;
  v28 = a12;
  if ((a13 & 1) != 0)
    v28 = v27;
  if (v26 > v27 || v27 > v28)
  {
LABEL_22:
    v39 = a7;
    v38 = a5;
    v36 = a1;
    v37 = a3;
    v35 = v18;
    v30 = static os_log_type_t.fault.getter();
    v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v30, &dword_0, v31, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v18 = v35;
    a1 = v36;
    a3 = v37;
    v17 = a10;
    a5 = v38;
    v16 = a12;
    a7 = v39;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v40, *(_QWORD *)&a1, v18, *(_QWORD *)&a3, v20, *(_QWORD *)&a5, v22, *(_QWORD *)&a7, v23, *(_QWORD *)&v17, a11 & 1, *(_QWORD *)&v16, a13 & 1, a14, a15);
  v32 = v40[5];
  *(_OWORD *)(a9 + 64) = v40[4];
  *(_OWORD *)(a9 + 80) = v32;
  *(_OWORD *)(a9 + 96) = v40[6];
  v33 = v40[1];
  *(_OWORD *)a9 = v40[0];
  *(_OWORD *)(a9 + 16) = v33;
  result = (__n128)v40[3];
  *(_OWORD *)(a9 + 32) = v40[2];
  *(__n128 *)(a9 + 48) = result;
  return result;
}

double sub_10A9D4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10AA2C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_200C80, &qword_200C88).n128_u64[0];
  return result;
}

__n128 sub_10AA2C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_2808C(v18, v19, a16);
  v41 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_10ABF8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_10AA2C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_201828, &qword_201830).n128_u64[0];
  return result;
}

_QWORD *sub_10AC50@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[7];
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v41;
    v19 = a10;
    a1 = v42;
    a3 = v43;
    v18 = a12;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v49 = *v15;
  v50 = v34;
  sub_10C114((uint64_t)&v49, (uint64_t)v52);
  v51 = *((_QWORD *)&v50 + 1);
  v47 = *((_QWORD *)v15 + 4);
  v48 = *((_BYTE *)v15 + 40);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v15 + 25);
  v36 = v46[6];
  v37 = v46[4];
  a9[8] = v46[5];
  a9[9] = v36;
  v38 = v46[1];
  a9[3] = v46[0];
  a9[4] = v38;
  v39 = v46[2];
  a9[6] = v46[3];
  a9[7] = v37;
  a9[5] = v39;
  sub_10C150((uint64_t)v52);
  sub_5266C(&v51);
  return sub_10C180(&v47);
}

uint64_t sub_10AE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t *v13;
  uint64_t countAndFlagsBits;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FDE18);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - v10;
  sub_2808C(v1, (uint64_t)v4, &qword_1FDE18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_9944((uint64_t)v4, &qword_1FDE18);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v12 == enum case for TranscriptSource.provider(_:))
  {
    v13 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FooterViewModel(0) + 20));
    countAndFlagsBits = *v13;
    v15 = v13[1];
    if (v15)
    {
      v16 = (void *)objc_opt_self(NSBundle);
      swift_bridgeObjectRetain(v15);
      v17 = objc_msgSend(v16, "mainBundle");
      v18._countAndFlagsBits = 0xD00000000000001ALL;
      v29._countAndFlagsBits = 0xD000000000000022;
      v29._object = (void *)0x800000000018C290;
      v18._object = (void *)0x800000000018C270;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v29);

      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_204670);
      v22 = swift_allocObject(v21, 72, 7);
      *(_OWORD *)(v22 + 16) = xmmword_16B3D0;
      *(_QWORD *)(v22 + 56) = &type metadata for String;
      *(_QWORD *)(v22 + 64) = sub_1F6B8();
      *(_QWORD *)(v22 + 32) = countAndFlagsBits;
      *(_QWORD *)(v22 + 40) = v15;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v20._countAndFlagsBits, v20._object, v22);
      swift_bridgeObjectRelease(v20._object);
      swift_bridgeObjectRelease(v22);
    }
  }
  else
  {
    if (v12 != enum case for TranscriptSource.apple(_:))
    {
      v26 = *(void (**)(char *, uint64_t))(v6 + 8);
      v26(v11, v5);
      v26(v8, v5);
      return 0;
    }
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v30._countAndFlagsBits = 0xD000000000000019;
    v30._object = (void *)0x800000000018C2E0;
    v24._object = (void *)0x800000000018C2C0;
    v24._countAndFlagsBits = 0xD000000000000017;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v30)._countAndFlagsBits;

  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return countAndFlagsBits;
}

uint64_t sub_10B168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a1;
  v33 = type metadata accessor for BlendMode(0);
  v2 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FAE60);
  __chkstk_darwin(v32);
  v6 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_202CE8);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_202CF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_202CF8);
  v13 = __chkstk_darwin(v31);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v16 = (uint64_t)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_202D00) + 44)];
  v34 = v1;
  sub_10B518(v1, v16);
  if (qword_1F9660 != -1)
    swift_once(&qword_1F9660, sub_10BC5C);
  v17 = qword_202BB0;
  KeyPath = swift_getKeyPath(&unk_173EB0);
  sub_2808C((uint64_t)v9, (uint64_t)v12, &qword_202CE8);
  v19 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  swift_retain();
  sub_9944((uint64_t)v9, &qword_202CE8);
  if (qword_1F9450 != -1)
    swift_once(&qword_1F9450, sub_1547C);
  v20 = qword_210038;
  v21 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for BlendMode.plusLighter(_:), v33);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v6 + *(int *)(v32 + 36), v4, v21);
  *v6 = v20;
  v22 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_retain();
  v22(v4, v21);
  sub_2808C((uint64_t)v6, (uint64_t)&v15[*(int *)(v31 + 36)], &qword_1FAE60);
  sub_2808C((uint64_t)v12, (uint64_t)v15, &qword_202CF0);
  sub_9944((uint64_t)v6, &qword_1FAE60);
  sub_9944((uint64_t)v12, &qword_202CF0);
  v23 = *(_QWORD *)v34;
  LOBYTE(v22) = *(_BYTE *)(v34 + 8);
  sub_2609C(*(_QWORD *)v34, (char)v22);
  v24 = sub_56304(v23, (char)v22);
  sub_261F4(v23, (char)v22);
  sub_2609C(v23, (char)v22);
  v25 = sub_56304(v23, (char)v22);
  v26 = sub_261F4(v23, (char)v22);
  LOBYTE(v23) = static Edge.Set.all.getter(v26);
  v27 = v35;
  sub_2808C((uint64_t)v15, v35, &qword_202CF8);
  v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_202D08) + 36);
  *(_BYTE *)v28 = v23;
  *(_QWORD *)(v28 + 8) = 0x402E000000000000;
  *(double *)(v28 + 16) = v24;
  *(_QWORD *)(v28 + 24) = 0x4024000000000000;
  *(double *)(v28 + 32) = v25;
  *(_BYTE *)(v28 + 40) = 0;
  return sub_9944((uint64_t)v15, &qword_202CF8);
}

uint64_t sub_10B518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  int v22;
  char v23;
  char *v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t KeyPath;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char v88;
  _BYTE v89[203];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  _OWORD v100[10];
  char v101;
  _BYTE v102[7];
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  _OWORD v114[14];

  v77 = a1;
  v84 = a2;
  v76 = type metadata accessor for FooterView(0);
  v78 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v79 = v2;
  v80 = (uint64_t)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_202D10);
  v82 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v81 = (char *)&v75 - v6;
  v7 = type metadata accessor for Divider(0, v5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_202D18);
  __chkstk_darwin(v11);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_202D20);
  __chkstk_darwin(v86);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v75 - v18;
  v20.n128_f64[0] = Divider.init()(v17);
  v21 = static HierarchicalShapeStyle.primary.getter(v20);
  v22 = v21;
  v23 = static Edge.Set.all.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  v24 = &v13[*(int *)(v11 + 36)];
  *(_DWORD *)v24 = v22;
  v24[4] = v23;
  v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v26 = static Edge.Set.bottom.getter(v25);
  v27 = EdgeInsets.init(_all:)(20.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_2808C((uint64_t)v13, (uint64_t)v15, &qword_202D18);
  v34 = &v15[*((int *)v86 + 9)];
  *v34 = v26;
  *((double *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_9944((uint64_t)v13, &qword_202D18);
  v86 = v19;
  v87 = v15;
  sub_982C((uint64_t)v15, (uint64_t)v19, &qword_202D20);
  v35 = v77;
  v36 = sub_10AE28();
  if (v37)
  {
    *(_QWORD *)&v114[0] = v36;
    *((_QWORD *)&v114[0] + 1) = v37;
    v38 = sub_11CEC();
    v39 = Text.init<A>(_:)(v114, &type metadata for String, v38);
    v41 = v40;
    v43 = v42;
    v45 = v44 & 1;
    KeyPath = swift_getKeyPath(&unk_173EE0);
    v108 = v39;
    v109 = v41;
    v110 = v45;
    v111 = v43;
    v112 = KeyPath;
    v113 = 0;
    v48 = static Alignment.leading.getter(v47);
    sub_10AC50(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v114, 0.0, 1, 0.0, 1, v48, v49);
    sub_25404(v39, v41, v45);
    swift_release(KeyPath);
    swift_bridgeObjectRelease(v43);
    v96 = v114[6];
    v97 = v114[7];
    v98 = v114[8];
    v99 = v114[9];
    v92 = v114[2];
    v93 = v114[3];
    v94 = v114[4];
    v95 = v114[5];
    v90 = v114[0];
    v91 = v114[1];
    v51 = static Edge.Set.bottom.getter(v50);
    v52 = EdgeInsets.init(_all:)(8.0);
    v88 = 0;
    v100[6] = v96;
    v100[7] = v97;
    v100[8] = v98;
    v100[9] = v99;
    v100[2] = v92;
    v100[3] = v93;
    v100[4] = v94;
    v100[5] = v95;
    v100[0] = v90;
    v100[1] = v91;
    v101 = v51;
    *(_DWORD *)v102 = *(_DWORD *)v89;
    *(_DWORD *)&v102[3] = *(_DWORD *)&v89[3];
    v103 = v52;
    v104 = v53;
    v105 = v54;
    v106 = v55;
    v107 = 0;
    UIScreen.Dimensions.size.getter(v100);
  }
  else
  {
    sub_10BDB0(v100);
  }
  sub_982C((uint64_t)v100, (uint64_t)v114, &qword_202D28);
  v56 = v80;
  sub_10BDD4(v35, v80);
  v57 = *(unsigned __int8 *)(v78 + 80);
  v58 = (v57 + 16) & ~v57;
  v59 = swift_allocObject(&unk_1D1F80, v58 + v79, v57 | 7);
  sub_10BEF8(v56, v59 + v58);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_202D30);
  v61 = sub_27A8C(&qword_202D38, &qword_202D30, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v62 = v81;
  Button.init(action:label:)(sub_10BF3C, v59, sub_10BB04, 0, v60, v61);
  v63 = (uint64_t)v87;
  sub_2808C((uint64_t)v86, (uint64_t)v87, &qword_202D20);
  sub_982C((uint64_t)v114, (uint64_t)v89, &qword_202D28);
  v64 = v62;
  v65 = v82;
  v66 = v83;
  v67 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  v68 = v85;
  v67(v83, v62, v85);
  v69 = v63;
  v70 = v84;
  sub_2808C(v69, v84, &qword_202D20);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_202D40);
  v72 = v70 + *(int *)(v71 + 48);
  sub_982C((uint64_t)v89, (uint64_t)&v90, &qword_202D28);
  sub_982C((uint64_t)&v90, v72, &qword_202D28);
  v67((char *)(v70 + *(int *)(v71 + 64)), v66, v68);
  sub_10BFCC((uint64_t)&v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10BF90);
  v73 = *(void (**)(char *, uint64_t))(v65 + 8);
  v73(v64, v68);
  sub_9944((uint64_t)v86, &qword_202D20);
  v73(v66, v68);
  sub_982C((uint64_t)v89, (uint64_t)v100, &qword_202D28);
  sub_10BFCC((uint64_t)v100, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10C040);
  return sub_9944((uint64_t)v87, &qword_202D20);
}

__n128 sub_10BB04@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __n128 result;
  __int128 v8;
  __int128 v9;
  char v10;
  __n128 v11;
  uint64_t v12;
  char v13;

  v3 = static VerticalAlignment.center.getter(a1);
  sub_10BB6C((uint64_t)&v9);
  v4 = v10;
  v5 = v12;
  v6 = v13;
  result = v11;
  v8 = v9;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 40) = v4;
  *(__n128 *)(a2 + 48) = result;
  *(_QWORD *)(a2 + 64) = v5;
  *(_BYTE *)(a2 + 72) = v6;
  return result;
}

double sub_10BB6C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  double result;

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x800000000018C250);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = Image.init(systemName:)(0x2E6E6F7276656863, 0xED00007468676972);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  sub_278A8(v3, v5, v9);
  swift_bridgeObjectRetain(v7);
  sub_25404(v3, v5, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_10BC5C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1FB060);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for Font.TextStyle.body(_:), v3, v5);
  v8 = enum case for Font.Design.default(_:);
  v9 = type metadata accessor for Font.Design(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
  v11 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  v12 = static Font.Weight.medium.getter(v11);
  v13 = static Font.system(_:design:weight:)(v7, v2, *(_QWORD *)&v12, 0);
  sub_9944((uint64_t)v2, &qword_1FB060);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_202BB0 = v13;
  return result;
}

double sub_10BDB0(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 185) = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_10BDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FooterView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10BE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for FooterView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_261F4(*(_QWORD *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  v6 = v0 + v4 + *(int *)(v1 + 20);
  v7 = type metadata accessor for TranscriptSource(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v3 | 7;
  v10 = v4 + v5;
  v11 = type metadata accessor for FooterViewModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v11 + 20) + 8));
  swift_release(*(_QWORD *)(v6 + *(int *)(v11 + 24) + 8));
  return swift_deallocObject(v0, v10, v9);
}

uint64_t sub_10BEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FooterView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10BF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for FooterView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + *(int *)(v1 + 20);
  v5 = type metadata accessor for FooterViewModel(0);
  return (*(uint64_t (**)(void))(v4 + *(int *)(v5 + 24) + v3))();
}

uint64_t sub_10BF90(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_278A8(result, a2, a3 & 1);
    swift_bridgeObjectRetain(a4);
    return swift_retain();
  }
  return result;
}

uint64_t sub_10BFCC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 200);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    v4);
  return a1;
}

double sub_10C040(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  if (a4)
  {
    sub_25404(a1, a2, a3 & 1);
    swift_release(a5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10C07C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10C0A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10C0CC(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_10C0F0(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_10C114(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_10C150(uint64_t a1)
{
  sub_278A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

_QWORD *sub_10C180(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

unint64_t sub_10C1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_202D48;
  if (!qword_202D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_202D08);
    sub_10C218();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_202D48);
  }
  return result;
}

unint64_t sub_10C218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_202D50;
  if (!qword_202D50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_202CF8);
    sub_10C29C();
    sub_27A8C(&qword_202D68, (uint64_t *)&unk_202D70, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_202D50);
  }
  return result;
}

unint64_t sub_10C29C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_202D58;
  if (!qword_202D58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_202CF0);
    sub_27A8C(&qword_202D60, &qword_202CE8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_27A8C(&qword_1FAEB0, &qword_1FAEB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_202D58);
  }
  return result;
}

uint64_t sub_10C3AC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;

  v1 = v0;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = *(id *)(v0 + OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_startPosition);
  v3 = objc_msgSend(v2, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 0x203A646E45202CLL;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  v9 = *(id *)(v1 + OBJC_IVAR____TtC12NowPlayingUI15StringTextRange_endPosition);
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return 0x203A7472617453;
}

