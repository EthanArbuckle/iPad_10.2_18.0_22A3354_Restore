uint64_t assignWithCopy for Header(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned int (*v19)(char *, uint64_t, int *);
  int *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, int *);
  int v31;
  int v32;
  int *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id v50;
  id *v51;
  int v52;
  id v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  id v58;
  id *v59;
  int v60;
  id v61;
  id v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  void (*v73)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v74)(_QWORD *, _QWORD, uint64_t, uint64_t);
  __int128 *v75;
  __int128 *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  id *v84;
  int v85;
  id v86;
  id v87;
  id *v88;
  int v89;
  id v90;
  id v91;
  id *v92;
  int v93;
  id v94;
  id v95;
  id *v96;
  int v97;
  id v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id v103;
  uint64_t v104;
  char *v105;
  unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unsigned __int8 *v110;
  uint64_t v111;
  char *v112;
  unsigned __int8 *v113;
  void (*v114)(char *, _QWORD, uint64_t, int *);
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 v117;
  __int128 v118;
  void **v119;
  void **v120;
  int v121;
  void *v122;
  void *v123;
  char v124;
  void *v125;
  unsigned __int8 v126;
  void *v127;
  void **v128;
  void **v129;
  int v130;
  void *v131;
  void *v132;
  char v133;
  void *v134;
  unsigned __int8 v135;
  void *v136;
  void **v137;
  void **v138;
  int v139;
  void *v140;
  void *v141;
  char v142;
  void *v143;
  unsigned __int8 v144;
  void *v145;
  void **v146;
  void **v147;
  int v148;
  void *v149;
  void *v150;
  char v151;
  void *v152;
  unsigned __int8 v153;
  void *v154;
  void **v155;
  void **v156;
  int v157;
  void *v158;
  void *v159;
  char v160;
  void *v161;
  unsigned __int8 v162;
  void *v163;
  uint64_t v164;
  char *v165;
  unsigned __int8 *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  unsigned __int8 *v170;
  uint64_t v171;
  char *v172;
  unsigned __int8 *v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(_QWORD *, uint64_t, uint64_t);
  int v180;
  int v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  int *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  id *v202;
  int v203;
  id v204;
  id v205;
  id *v206;
  int v207;
  id v208;
  id v209;
  id *v210;
  int v211;
  id v212;
  id v213;
  id *v214;
  int v215;
  id v216;
  id v217;
  id *v218;
  int v219;
  id v220;
  id v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  _QWORD *v229;
  _QWORD *v230;
  void (*v231)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int *v235;
  uint64_t v236;
  uint64_t (*v237)(uint64_t, uint64_t, int *);
  int v238;
  int v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  __int128 *v244;
  __int128 *v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unsigned __int8 v251;
  __int128 v252;
  id *v253;
  int v254;
  id v255;
  id v256;
  id *v257;
  int v258;
  id v259;
  id v260;
  id *v261;
  int v262;
  id v263;
  id v264;
  id *v265;
  int v266;
  id v267;
  id v268;
  id *v269;
  int v270;
  id v271;
  id v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  _QWORD *v279;
  uint64_t v280;
  _QWORD *v281;
  _QWORD *v282;
  void (*v283)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v284;
  uint64_t v285;
  char v286;
  __int128 v287;
  id *v288;
  id *v289;
  int v290;
  id v291;
  void *v292;
  char v293;
  id v294;
  char v295;
  id v296;
  id *v297;
  id *v298;
  int v299;
  id v300;
  void *v301;
  char v302;
  id v303;
  char v304;
  id v305;
  id *v306;
  id *v307;
  int v308;
  id v309;
  void *v310;
  char v311;
  id v312;
  char v313;
  id v314;
  id *v315;
  id *v316;
  int v317;
  id v318;
  void *v319;
  char v320;
  id v321;
  char v322;
  id v323;
  id *v324;
  id *v325;
  int v326;
  id v327;
  void *v328;
  char v329;
  id v330;
  char v331;
  id v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  _QWORD *v339;
  uint64_t v340;
  _QWORD *v341;
  _QWORD *v342;
  __int128 v344;
  id *v345;
  int v346;
  id v347;
  id v348;
  id *v349;
  int v350;
  id v351;
  id v352;
  id *v353;
  int v354;
  id v355;
  id v356;
  id *v357;
  int v358;
  id v359;
  id v360;
  id *v361;
  int v362;
  id v363;
  id v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  _QWORD *v369;
  _QWORD *v370;
  uint64_t v371;
  _QWORD *v372;
  _QWORD *v373;
  void (*v374)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v375;
  _QWORD *__dst;
  _QWORD *__dsta;
  _QWORD *__dstb;
  char *v379;
  unsigned int (*v380)(_QWORD *, uint64_t, int *);
  char *v381;
  char *v382;
  unsigned int (*v383)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v384;
  int *v385;
  int *v386;
  int *v387;
  int *v388;
  int *v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v6 = a3[9];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ActionMenu(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_145D8((uint64_t)v7, type metadata accessor for ActionMenu);
      goto LABEL_7;
    }
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
    *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v393 = v9;
    v25 = *(int *)(v9 + 28);
    v26 = &v7[v25];
    v382 = v8;
    v27 = &v8[v25];
    v28 = (int *)type metadata accessor for ArtworkModel(0);
    v29 = *((_QWORD *)v28 - 1);
    v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
    v31 = v30(v26, 1, v28);
    v387 = v28;
    v32 = v30(v27, 1, v28);
    if (v31)
    {
      if (!v32)
      {
        v33 = a3;
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
        v34 = v27[32];
        swift_bridgeObjectRetain();
        if (v34 == 255)
        {
          v83 = *((_OWORD *)v27 + 1);
          v26[32] = v27[32];
          *((_OWORD *)v26 + 1) = v83;
        }
        else
        {
          v36 = *((_QWORD *)v27 + 2);
          v35 = *((_QWORD *)v27 + 3);
          sub_3D464(v36, v35, v34);
          *((_QWORD *)v26 + 2) = v36;
          *((_QWORD *)v26 + 3) = v35;
          v26[32] = v34;
        }
        *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
        *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
        v84 = (id *)(v27 + 56);
        v85 = v27[64];
        if (v85 == 255)
        {
          v87 = *v84;
          v26[64] = v27[64];
          *((_QWORD *)v26 + 7) = v87;
        }
        else
        {
          v86 = *v84;
          sub_3D47C(*v84, v27[64]);
          *((_QWORD *)v26 + 7) = v86;
          v26[64] = v85;
        }
        v88 = (id *)(v27 + 72);
        v89 = v27[80];
        if (v89 == 255)
        {
          v91 = *v88;
          v26[80] = v27[80];
          *((_QWORD *)v26 + 9) = v91;
        }
        else
        {
          v90 = *v88;
          sub_3D47C(*v88, v27[80]);
          *((_QWORD *)v26 + 9) = v90;
          v26[80] = v89;
        }
        v92 = (id *)(v27 + 88);
        v93 = v27[96];
        if (v93 == 255)
        {
          v95 = *v92;
          v26[96] = v27[96];
          *((_QWORD *)v26 + 11) = v95;
        }
        else
        {
          v94 = *v92;
          sub_3D47C(*v92, v27[96]);
          *((_QWORD *)v26 + 11) = v94;
          v26[96] = v93;
        }
        v96 = (id *)(v27 + 104);
        v97 = v27[112];
        if (v97 == 255)
        {
          v99 = *v96;
          v26[112] = v27[112];
          *((_QWORD *)v26 + 13) = v99;
        }
        else
        {
          v98 = *v96;
          sub_3D47C(*v96, v27[112]);
          *((_QWORD *)v26 + 13) = v98;
          v26[112] = v97;
        }
        v100 = (id *)(v27 + 120);
        v101 = v27[128];
        if (v101 == 255)
        {
          v103 = *v100;
          v26[128] = v27[128];
          *((_QWORD *)v26 + 15) = v103;
        }
        else
        {
          v102 = *v100;
          sub_3D47C(*v100, v27[128]);
          *((_QWORD *)v26 + 15) = v102;
          v26[128] = v101;
        }
        v26[129] = v27[129];
        v104 = v387[11];
        v105 = &v26[v104];
        v106 = (unsigned __int8 *)&v27[v104];
        v107 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
        v108 = v387[12];
        v109 = &v26[v108];
        v110 = (unsigned __int8 *)&v27[v108];
        *(_QWORD *)v109 = *(_QWORD *)v110;
        *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
        v26[v387[13]] = v27[v387[13]];
        v26[v387[14]] = v27[v387[14]];
        v26[v387[15]] = v27[v387[15]];
        v111 = v387[16];
        v112 = &v26[v111];
        v113 = (unsigned __int8 *)&v27[v111];
        *(_QWORD *)v112 = *(_QWORD *)v113;
        *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
        v114 = *(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v114(v26, 0, 1, v387);
        a3 = v33;
        goto LABEL_95;
      }
    }
    else
    {
      if (!v32)
      {
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v75 = (__int128 *)(v26 + 16);
        v76 = (__int128 *)(v27 + 16);
        v77 = v27[32];
        if (v26[32] == 255)
        {
          if (v77 == 255)
          {
            v118 = *v76;
            v26[32] = v27[32];
            *v75 = v118;
          }
          else
          {
            v115 = *((_QWORD *)v27 + 2);
            v116 = *((_QWORD *)v27 + 3);
            sub_3D464(v115, v116, v27[32]);
            *((_QWORD *)v26 + 2) = v115;
            *((_QWORD *)v26 + 3) = v116;
            v26[32] = v77;
          }
        }
        else if (v77 == 255)
        {
          sub_3E43C((uint64_t)(v26 + 16));
          v117 = v27[32];
          *v75 = *v76;
          v26[32] = v117;
        }
        else
        {
          v78 = *((_QWORD *)v27 + 2);
          v79 = *((_QWORD *)v27 + 3);
          sub_3D464(v78, v79, v27[32]);
          v80 = *((_QWORD *)v26 + 2);
          v81 = *((_QWORD *)v26 + 3);
          *((_QWORD *)v26 + 2) = v78;
          *((_QWORD *)v26 + 3) = v79;
          v82 = v26[32];
          v26[32] = v77;
          sub_3B5BC(v80, v81, v82);
        }
        *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
        *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
        v119 = (void **)(v26 + 56);
        v120 = (void **)(v27 + 56);
        v121 = v27[64];
        if (v26[64] == 255)
        {
          if (v121 == 255)
          {
            v127 = *v120;
            v26[64] = v27[64];
            *v119 = v127;
          }
          else
          {
            v125 = *v120;
            sub_3D47C(v125, v27[64]);
            *((_QWORD *)v26 + 7) = v125;
            v26[64] = v121;
          }
        }
        else if (v121 == 255)
        {
          sub_3E470((uint64_t)(v26 + 56));
          v126 = v27[64];
          *v119 = *v120;
          v26[64] = v126;
        }
        else
        {
          v122 = *v120;
          sub_3D47C(v122, v27[64]);
          v123 = (void *)*((_QWORD *)v26 + 7);
          *((_QWORD *)v26 + 7) = v122;
          v124 = v26[64];
          v26[64] = v121;
          sub_3D624(v123, v124);
        }
        v128 = (void **)(v26 + 72);
        v129 = (void **)(v27 + 72);
        v130 = v27[80];
        if (v26[80] == 255)
        {
          if (v130 == 255)
          {
            v136 = *v129;
            v26[80] = v27[80];
            *v128 = v136;
          }
          else
          {
            v134 = *v129;
            sub_3D47C(v134, v27[80]);
            *((_QWORD *)v26 + 9) = v134;
            v26[80] = v130;
          }
        }
        else if (v130 == 255)
        {
          sub_3E470((uint64_t)(v26 + 72));
          v135 = v27[80];
          *v128 = *v129;
          v26[80] = v135;
        }
        else
        {
          v131 = *v129;
          sub_3D47C(v131, v27[80]);
          v132 = (void *)*((_QWORD *)v26 + 9);
          *((_QWORD *)v26 + 9) = v131;
          v133 = v26[80];
          v26[80] = v130;
          sub_3D624(v132, v133);
        }
        v137 = (void **)(v26 + 88);
        v138 = (void **)(v27 + 88);
        v139 = v27[96];
        if (v26[96] == 255)
        {
          if (v139 == 255)
          {
            v145 = *v138;
            v26[96] = v27[96];
            *v137 = v145;
          }
          else
          {
            v143 = *v138;
            sub_3D47C(v143, v27[96]);
            *((_QWORD *)v26 + 11) = v143;
            v26[96] = v139;
          }
        }
        else if (v139 == 255)
        {
          sub_3E470((uint64_t)(v26 + 88));
          v144 = v27[96];
          *v137 = *v138;
          v26[96] = v144;
        }
        else
        {
          v140 = *v138;
          sub_3D47C(v140, v27[96]);
          v141 = (void *)*((_QWORD *)v26 + 11);
          *((_QWORD *)v26 + 11) = v140;
          v142 = v26[96];
          v26[96] = v139;
          sub_3D624(v141, v142);
        }
        v146 = (void **)(v26 + 104);
        v147 = (void **)(v27 + 104);
        v148 = v27[112];
        if (v26[112] == 255)
        {
          if (v148 == 255)
          {
            v154 = *v147;
            v26[112] = v27[112];
            *v146 = v154;
          }
          else
          {
            v152 = *v147;
            sub_3D47C(v152, v27[112]);
            *((_QWORD *)v26 + 13) = v152;
            v26[112] = v148;
          }
        }
        else if (v148 == 255)
        {
          sub_3E470((uint64_t)(v26 + 104));
          v153 = v27[112];
          *v146 = *v147;
          v26[112] = v153;
        }
        else
        {
          v149 = *v147;
          sub_3D47C(v149, v27[112]);
          v150 = (void *)*((_QWORD *)v26 + 13);
          *((_QWORD *)v26 + 13) = v149;
          v151 = v26[112];
          v26[112] = v148;
          sub_3D624(v150, v151);
        }
        v155 = (void **)(v26 + 120);
        v156 = (void **)(v27 + 120);
        v157 = v27[128];
        if (v26[128] == 255)
        {
          if (v157 == 255)
          {
            v163 = *v156;
            v26[128] = v27[128];
            *v155 = v163;
          }
          else
          {
            v161 = *v156;
            sub_3D47C(v161, v27[128]);
            *((_QWORD *)v26 + 15) = v161;
            v26[128] = v157;
          }
        }
        else if (v157 == 255)
        {
          sub_3E470((uint64_t)(v26 + 120));
          v162 = v27[128];
          *v155 = *v156;
          v26[128] = v162;
        }
        else
        {
          v158 = *v156;
          sub_3D47C(v158, v27[128]);
          v159 = (void *)*((_QWORD *)v26 + 15);
          *((_QWORD *)v26 + 15) = v158;
          v160 = v26[128];
          v26[128] = v157;
          sub_3D624(v159, v160);
        }
        v26[129] = v27[129];
        v164 = v28[11];
        v165 = &v26[v164];
        v166 = (unsigned __int8 *)&v27[v164];
        v167 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v167 - 8) + 24))(v165, v166, v167);
        v168 = v28[12];
        v169 = &v26[v168];
        v170 = (unsigned __int8 *)&v27[v168];
        *(_QWORD *)v169 = *(_QWORD *)v170;
        *((_QWORD *)v169 + 1) = *((_QWORD *)v170 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v26[v28[13]] = v27[v28[13]];
        v26[v28[14]] = v27[v28[14]];
        v26[v28[15]] = v27[v28[15]];
        v171 = v28[16];
        v172 = &v26[v171];
        v173 = (unsigned __int8 *)&v27[v171];
        *(_QWORD *)v172 = *(_QWORD *)v173;
        *((_QWORD *)v172 + 1) = *((_QWORD *)v173 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
      sub_145D8((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_95:
    v9 = v393;
    *(_QWORD *)&v7[*(int *)(v393 + 32)] = *(_QWORD *)&v382[*(int *)(v393 + 32)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_96;
  }
  if (v13)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_96;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  v386 = a3;
  v392 = v9;
  v14 = *(int *)(v9 + 28);
  v379 = v7;
  v381 = v8;
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD **)(v17 - 8);
  v19 = (unsigned int (*)(char *, uint64_t, int *))v18[6];
  v20 = (int *)v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    a3 = v386;
    v9 = v392;
    v23 = v379;
    v22 = v381;
  }
  else
  {
    __dst = v18;
    v37 = v20;
    *v15 = *(_QWORD *)v16;
    v15[1] = *((_QWORD *)v16 + 1);
    v38 = v16[32];
    swift_bridgeObjectRetain();
    if (v38 == 255)
    {
      v42 = *((_OWORD *)v16 + 1);
      *((_BYTE *)v15 + 32) = v16[32];
      *((_OWORD *)v15 + 1) = v42;
    }
    else
    {
      v39 = *((_QWORD *)v16 + 2);
      v40 = *((_QWORD *)v16 + 3);
      sub_3D464(v39, v40, v38);
      v15[2] = v39;
      v15[3] = v40;
      *((_BYTE *)v15 + 32) = v38;
    }
    v23 = v379;
    v15[5] = *((_QWORD *)v16 + 5);
    v15[6] = *((_QWORD *)v16 + 6);
    v43 = (id *)(v16 + 56);
    v44 = v16[64];
    if (v44 == 255)
    {
      v46 = *v43;
      *((_BYTE *)v15 + 64) = v16[64];
      v15[7] = v46;
    }
    else
    {
      v45 = *v43;
      sub_3D47C(*v43, v16[64]);
      v15[7] = v45;
      *((_BYTE *)v15 + 64) = v44;
    }
    v47 = (id *)(v16 + 72);
    v48 = v16[80];
    if (v48 == 255)
    {
      v50 = *v47;
      *((_BYTE *)v15 + 80) = v16[80];
      v15[9] = v50;
    }
    else
    {
      v49 = *v47;
      sub_3D47C(*v47, v16[80]);
      v15[9] = v49;
      *((_BYTE *)v15 + 80) = v48;
    }
    v51 = (id *)(v16 + 88);
    v52 = v16[96];
    if (v52 == 255)
    {
      v54 = *v51;
      *((_BYTE *)v15 + 96) = v16[96];
      v15[11] = v54;
    }
    else
    {
      v53 = *v51;
      sub_3D47C(*v51, v16[96]);
      v15[11] = v53;
      *((_BYTE *)v15 + 96) = v52;
    }
    v55 = (id *)(v16 + 104);
    v56 = v16[112];
    if (v56 == 255)
    {
      v58 = *v55;
      *((_BYTE *)v15 + 112) = v16[112];
      v15[13] = v58;
    }
    else
    {
      v57 = *v55;
      sub_3D47C(*v55, v16[112]);
      v15[13] = v57;
      *((_BYTE *)v15 + 112) = v56;
    }
    v59 = (id *)(v16 + 120);
    v60 = v16[128];
    if (v60 == 255)
    {
      v62 = *v59;
      *((_BYTE *)v15 + 128) = v16[128];
      v15[15] = v62;
    }
    else
    {
      v61 = *v59;
      sub_3D47C(*v59, v16[128]);
      v15[15] = v61;
      *((_BYTE *)v15 + 128) = v60;
    }
    v9 = v392;
    *((_BYTE *)v15 + 129) = v16[129];
    v63 = v37[11];
    v64 = (char *)v15 + v63;
    v65 = &v16[v63];
    v66 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
    v67 = v37[12];
    v68 = (_QWORD *)((char *)v15 + v67);
    v69 = &v16[v67];
    *v68 = *(_QWORD *)v69;
    v68[1] = *((_QWORD *)v69 + 1);
    *((_BYTE *)v15 + v37[13]) = v16[v37[13]];
    *((_BYTE *)v15 + v37[14]) = v16[v37[14]];
    *((_BYTE *)v15 + v37[15]) = v16[v37[15]];
    v70 = v37[16];
    v71 = (_QWORD *)((char *)v15 + v70);
    v72 = &v16[v70];
    *v71 = *(_QWORD *)v72;
    v71[1] = *((_QWORD *)v72 + 1);
    v73 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dst[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73((char *)v15, 0, 1, v37);
    v22 = v381;
    a3 = v386;
  }
  *(_QWORD *)((char *)v23 + *(int *)(v9 + 32)) = *(_QWORD *)&v22[*(int *)(v9 + 32)];
  v74 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56);
  swift_bridgeObjectRetain();
  v74(v23, 0, 1, v9);
LABEL_96:
  v174 = a3[10];
  v175 = (_QWORD *)(a1 + v174);
  v176 = (_QWORD *)(a2 + v174);
  v177 = type metadata accessor for Header.PrimaryAction(0);
  v178 = *(_QWORD *)(v177 - 8);
  v179 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v178 + 48);
  v180 = v179(v175, 1, v177);
  v181 = v179(v176, 1, v177);
  if (v180)
  {
    if (!v181)
    {
      if (swift_getEnumCaseMultiPayload(v176, v177) == 1)
      {
        v388 = a3;
        v394 = v9;
        *v175 = *v176;
        v175[1] = v176[1];
        v175[2] = v176[2];
        v175[3] = v176[3];
        v175[4] = v176[4];
        v175[5] = v176[5];
        v182 = *(int *)(v9 + 28);
        __dsta = (_QWORD *)((char *)v175 + v182);
        v183 = (_QWORD *)((char *)v176 + v182);
        v184 = type metadata accessor for ArtworkModel(0);
        v375 = *(_QWORD *)(v184 - 8);
        v383 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v375 + 48);
        swift_bridgeObjectRetain();
        v185 = v183;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v383(v183, 1, v184))
        {
          v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(__dsta, v183, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
          v187 = v394;
        }
        else
        {
          v385 = (int *)v184;
          *__dsta = *v183;
          __dsta[1] = v183[1];
          v195 = *((unsigned __int8 *)v183 + 32);
          swift_bridgeObjectRetain();
          if (v195 == 255)
          {
            v201 = *((_OWORD *)v183 + 1);
            *((_BYTE *)__dsta + 32) = *((_BYTE *)v183 + 32);
            *((_OWORD *)__dsta + 1) = v201;
          }
          else
          {
            v196 = v183[2];
            v197 = v183[3];
            sub_3D464(v196, v197, v195);
            __dsta[2] = v196;
            __dsta[3] = v197;
            v185 = v183;
            *((_BYTE *)__dsta + 32) = v195;
          }
          __dsta[5] = v185[5];
          __dsta[6] = v185[6];
          v202 = (id *)(v185 + 7);
          v203 = *((unsigned __int8 *)v185 + 64);
          if (v203 == 255)
          {
            v205 = *v202;
            *((_BYTE *)__dsta + 64) = *((_BYTE *)v185 + 64);
            __dsta[7] = v205;
          }
          else
          {
            v204 = *v202;
            sub_3D47C(*v202, *((_BYTE *)v185 + 64));
            __dsta[7] = v204;
            *((_BYTE *)__dsta + 64) = v203;
          }
          v206 = (id *)(v185 + 9);
          v207 = *((unsigned __int8 *)v185 + 80);
          if (v207 == 255)
          {
            v209 = *v206;
            *((_BYTE *)__dsta + 80) = *((_BYTE *)v185 + 80);
            __dsta[9] = v209;
          }
          else
          {
            v208 = *v206;
            sub_3D47C(*v206, *((_BYTE *)v185 + 80));
            __dsta[9] = v208;
            *((_BYTE *)__dsta + 80) = v207;
          }
          v210 = (id *)(v185 + 11);
          v211 = *((unsigned __int8 *)v185 + 96);
          if (v211 == 255)
          {
            v213 = *v210;
            *((_BYTE *)__dsta + 96) = *((_BYTE *)v185 + 96);
            __dsta[11] = v213;
          }
          else
          {
            v212 = *v210;
            sub_3D47C(*v210, *((_BYTE *)v185 + 96));
            __dsta[11] = v212;
            *((_BYTE *)__dsta + 96) = v211;
          }
          v214 = (id *)(v185 + 13);
          v215 = *((unsigned __int8 *)v185 + 112);
          if (v215 == 255)
          {
            v217 = *v214;
            *((_BYTE *)__dsta + 112) = *((_BYTE *)v185 + 112);
            __dsta[13] = v217;
          }
          else
          {
            v216 = *v214;
            sub_3D47C(*v214, *((_BYTE *)v185 + 112));
            __dsta[13] = v216;
            *((_BYTE *)__dsta + 112) = v215;
          }
          v218 = (id *)(v185 + 15);
          v219 = *((unsigned __int8 *)v185 + 128);
          if (v219 == 255)
          {
            v221 = *v218;
            *((_BYTE *)__dsta + 128) = *((_BYTE *)v185 + 128);
            __dsta[15] = v221;
          }
          else
          {
            v220 = *v218;
            sub_3D47C(*v218, *((_BYTE *)v185 + 128));
            __dsta[15] = v220;
            *((_BYTE *)__dsta + 128) = v219;
          }
          a3 = v388;
          *((_BYTE *)__dsta + 129) = *((_BYTE *)v185 + 129);
          v222 = v385[11];
          v223 = (char *)__dsta + v222;
          v390 = (char *)v185 + v222;
          v224 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v223, v390, v224);
          v225 = v385[12];
          v226 = (_QWORD *)((char *)__dsta + v225);
          v227 = (_QWORD *)((char *)v185 + v225);
          *v226 = *v227;
          v226[1] = v227[1];
          *((_BYTE *)__dsta + v385[13]) = *((_BYTE *)v185 + v385[13]);
          *((_BYTE *)__dsta + v385[14]) = *((_BYTE *)v185 + v385[14]);
          *((_BYTE *)__dsta + v385[15]) = *((_BYTE *)v185 + v385[15]);
          v228 = v385[16];
          v229 = (_QWORD *)((char *)__dsta + v228);
          v230 = (_QWORD *)((char *)v185 + v228);
          *v229 = *v230;
          v229[1] = v230[1];
          v231 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v375 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v231(__dsta, 0, 1, v385);
          v187 = v394;
        }
        *(_QWORD *)((char *)v175 + *(int *)(v187 + 32)) = *(_QWORD *)((char *)v176 + *(int *)(v187 + 32));
        swift_bridgeObjectRetain();
        v194 = 1;
      }
      else
      {
        *v175 = *v176;
        swift_retain();
        v194 = 0;
      }
      swift_storeEnumTagMultiPayload(v175, v177, v194);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v175, 0, 1, v177);
      goto LABEL_133;
    }
LABEL_103:
    v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
    memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    goto LABEL_133;
  }
  if (v181)
  {
    sub_145D8((uint64_t)v175, type metadata accessor for Header.PrimaryAction);
    goto LABEL_103;
  }
  if (a1 != a2)
  {
    sub_145D8((uint64_t)v175, type metadata accessor for Header.PrimaryAction);
    if (swift_getEnumCaseMultiPayload(v176, v177) == 1)
    {
      v389 = a3;
      v395 = v9;
      *v175 = *v176;
      v175[1] = v176[1];
      v175[2] = v176[2];
      v175[3] = v176[3];
      v175[4] = v176[4];
      v175[5] = v176[5];
      v189 = *(int *)(v9 + 28);
      v384 = (_QWORD *)((char *)v175 + v189);
      v190 = (_QWORD *)((char *)v176 + v189);
      v191 = (int *)type metadata accessor for ArtworkModel(0);
      __dstb = (_QWORD *)*((_QWORD *)v191 - 1);
      v380 = (unsigned int (*)(_QWORD *, uint64_t, int *))__dstb[6];
      swift_bridgeObjectRetain();
      v192 = v190;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v380(v190, 1, v191))
      {
        v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v384, v190, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
      }
      else
      {
        *v384 = *v190;
        v384[1] = v190[1];
        v198 = *((unsigned __int8 *)v190 + 32);
        swift_bridgeObjectRetain();
        if (v198 == 255)
        {
          v344 = *((_OWORD *)v190 + 1);
          *((_BYTE *)v384 + 32) = *((_BYTE *)v190 + 32);
          *((_OWORD *)v384 + 1) = v344;
        }
        else
        {
          v199 = v190[2];
          v200 = v190[3];
          sub_3D464(v199, v200, v198);
          v384[2] = v199;
          v384[3] = v200;
          v192 = v190;
          *((_BYTE *)v384 + 32) = v198;
        }
        v384[5] = v192[5];
        v384[6] = v192[6];
        v345 = (id *)(v192 + 7);
        v346 = *((unsigned __int8 *)v192 + 64);
        if (v346 == 255)
        {
          v348 = *v345;
          *((_BYTE *)v384 + 64) = *((_BYTE *)v192 + 64);
          v384[7] = v348;
        }
        else
        {
          v347 = *v345;
          sub_3D47C(*v345, *((_BYTE *)v192 + 64));
          v384[7] = v347;
          *((_BYTE *)v384 + 64) = v346;
        }
        v349 = (id *)(v192 + 9);
        v350 = *((unsigned __int8 *)v192 + 80);
        if (v350 == 255)
        {
          v352 = *v349;
          *((_BYTE *)v384 + 80) = *((_BYTE *)v192 + 80);
          v384[9] = v352;
        }
        else
        {
          v351 = *v349;
          sub_3D47C(*v349, *((_BYTE *)v192 + 80));
          v384[9] = v351;
          *((_BYTE *)v384 + 80) = v350;
        }
        v353 = (id *)(v192 + 11);
        v354 = *((unsigned __int8 *)v192 + 96);
        if (v354 == 255)
        {
          v356 = *v353;
          *((_BYTE *)v384 + 96) = *((_BYTE *)v192 + 96);
          v384[11] = v356;
        }
        else
        {
          v355 = *v353;
          sub_3D47C(*v353, *((_BYTE *)v192 + 96));
          v384[11] = v355;
          *((_BYTE *)v384 + 96) = v354;
        }
        v357 = (id *)(v192 + 13);
        v358 = *((unsigned __int8 *)v192 + 112);
        if (v358 == 255)
        {
          v360 = *v357;
          *((_BYTE *)v384 + 112) = *((_BYTE *)v192 + 112);
          v384[13] = v360;
        }
        else
        {
          v359 = *v357;
          sub_3D47C(*v357, *((_BYTE *)v192 + 112));
          v384[13] = v359;
          *((_BYTE *)v384 + 112) = v358;
        }
        v361 = (id *)(v192 + 15);
        v362 = *((unsigned __int8 *)v192 + 128);
        if (v362 == 255)
        {
          v364 = *v361;
          *((_BYTE *)v384 + 128) = *((_BYTE *)v192 + 128);
          v384[15] = v364;
        }
        else
        {
          v363 = *v361;
          sub_3D47C(*v361, *((_BYTE *)v192 + 128));
          v384[15] = v363;
          *((_BYTE *)v384 + 128) = v362;
        }
        a3 = v389;
        *((_BYTE *)v384 + 129) = *((_BYTE *)v192 + 129);
        v365 = v191[11];
        v366 = (char *)v384 + v365;
        v391 = (char *)v192 + v365;
        v367 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v366, v391, v367);
        v368 = v191[12];
        v369 = (_QWORD *)((char *)v384 + v368);
        v370 = (_QWORD *)((char *)v192 + v368);
        *v369 = *v370;
        v369[1] = v370[1];
        *((_BYTE *)v384 + v191[13]) = *((_BYTE *)v192 + v191[13]);
        *((_BYTE *)v384 + v191[14]) = *((_BYTE *)v192 + v191[14]);
        *((_BYTE *)v384 + v191[15]) = *((_BYTE *)v192 + v191[15]);
        v371 = v191[16];
        v372 = (_QWORD *)((char *)v384 + v371);
        v373 = (_QWORD *)((char *)v192 + v371);
        *v372 = *v373;
        v372[1] = v373[1];
        v374 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v374(v384, 0, 1, v191);
      }
      *(_QWORD *)((char *)v175 + *(int *)(v395 + 32)) = *(_QWORD *)((char *)v176 + *(int *)(v395 + 32));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(v175, v177, 1);
    }
    else
    {
      *v175 = *v176;
      swift_retain();
      swift_storeEnumTagMultiPayload(v175, v177, 0);
    }
  }
LABEL_133:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v232 = a3[12];
  v233 = a1 + v232;
  v234 = a2 + v232;
  v235 = (int *)type metadata accessor for ArtworkModel(0);
  v236 = *((_QWORD *)v235 - 1);
  v237 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v236 + 48);
  v238 = v237(v233, 1, v235);
  v239 = v237(v234, 1, v235);
  if (v238)
  {
    if (!v239)
    {
      *(_QWORD *)v233 = *(_QWORD *)v234;
      *(_QWORD *)(v233 + 8) = *(_QWORD *)(v234 + 8);
      v240 = *(unsigned __int8 *)(v234 + 32);
      swift_bridgeObjectRetain();
      if (v240 == 255)
      {
        v252 = *(_OWORD *)(v234 + 16);
        *(_BYTE *)(v233 + 32) = *(_BYTE *)(v234 + 32);
        *(_OWORD *)(v233 + 16) = v252;
      }
      else
      {
        v241 = *(_QWORD *)(v234 + 16);
        v242 = *(_QWORD *)(v234 + 24);
        sub_3D464(v241, v242, v240);
        *(_QWORD *)(v233 + 16) = v241;
        *(_QWORD *)(v233 + 24) = v242;
        *(_BYTE *)(v233 + 32) = v240;
      }
      *(_QWORD *)(v233 + 40) = *(_QWORD *)(v234 + 40);
      *(_QWORD *)(v233 + 48) = *(_QWORD *)(v234 + 48);
      v253 = (id *)(v234 + 56);
      v254 = *(unsigned __int8 *)(v234 + 64);
      if (v254 == 255)
      {
        v256 = *v253;
        *(_BYTE *)(v233 + 64) = *(_BYTE *)(v234 + 64);
        *(_QWORD *)(v233 + 56) = v256;
      }
      else
      {
        v255 = *v253;
        sub_3D47C(*v253, *(_BYTE *)(v234 + 64));
        *(_QWORD *)(v233 + 56) = v255;
        *(_BYTE *)(v233 + 64) = v254;
      }
      v257 = (id *)(v234 + 72);
      v258 = *(unsigned __int8 *)(v234 + 80);
      if (v258 == 255)
      {
        v260 = *v257;
        *(_BYTE *)(v233 + 80) = *(_BYTE *)(v234 + 80);
        *(_QWORD *)(v233 + 72) = v260;
      }
      else
      {
        v259 = *v257;
        sub_3D47C(*v257, *(_BYTE *)(v234 + 80));
        *(_QWORD *)(v233 + 72) = v259;
        *(_BYTE *)(v233 + 80) = v258;
      }
      v261 = (id *)(v234 + 88);
      v262 = *(unsigned __int8 *)(v234 + 96);
      if (v262 == 255)
      {
        v264 = *v261;
        *(_BYTE *)(v233 + 96) = *(_BYTE *)(v234 + 96);
        *(_QWORD *)(v233 + 88) = v264;
      }
      else
      {
        v263 = *v261;
        sub_3D47C(*v261, *(_BYTE *)(v234 + 96));
        *(_QWORD *)(v233 + 88) = v263;
        *(_BYTE *)(v233 + 96) = v262;
      }
      v265 = (id *)(v234 + 104);
      v266 = *(unsigned __int8 *)(v234 + 112);
      if (v266 == 255)
      {
        v268 = *v265;
        *(_BYTE *)(v233 + 112) = *(_BYTE *)(v234 + 112);
        *(_QWORD *)(v233 + 104) = v268;
      }
      else
      {
        v267 = *v265;
        sub_3D47C(*v265, *(_BYTE *)(v234 + 112));
        *(_QWORD *)(v233 + 104) = v267;
        *(_BYTE *)(v233 + 112) = v266;
      }
      v269 = (id *)(v234 + 120);
      v270 = *(unsigned __int8 *)(v234 + 128);
      if (v270 == 255)
      {
        v272 = *v269;
        *(_BYTE *)(v233 + 128) = *(_BYTE *)(v234 + 128);
        *(_QWORD *)(v233 + 120) = v272;
      }
      else
      {
        v271 = *v269;
        sub_3D47C(*v269, *(_BYTE *)(v234 + 128));
        *(_QWORD *)(v233 + 120) = v271;
        *(_BYTE *)(v233 + 128) = v270;
      }
      *(_BYTE *)(v233 + 129) = *(_BYTE *)(v234 + 129);
      v273 = v235[11];
      v274 = v233 + v273;
      v275 = v234 + v273;
      v276 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v276 - 8) + 16))(v274, v275, v276);
      v277 = v235[12];
      v278 = (_QWORD *)(v233 + v277);
      v279 = (_QWORD *)(v234 + v277);
      *v278 = *v279;
      v278[1] = v279[1];
      *(_BYTE *)(v233 + v235[13]) = *(_BYTE *)(v234 + v235[13]);
      *(_BYTE *)(v233 + v235[14]) = *(_BYTE *)(v234 + v235[14]);
      *(_BYTE *)(v233 + v235[15]) = *(_BYTE *)(v234 + v235[15]);
      v280 = v235[16];
      v281 = (_QWORD *)(v233 + v280);
      v282 = (_QWORD *)(v234 + v280);
      *v281 = *v282;
      v281[1] = v282[1];
      v283 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v236 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v283(v233, 0, 1, v235);
      return a1;
    }
LABEL_139:
    v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v233, (const void *)v234, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
    return a1;
  }
  if (v239)
  {
    sub_145D8(v233, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_139;
  }
  *(_QWORD *)v233 = *(_QWORD *)v234;
  *(_QWORD *)(v233 + 8) = *(_QWORD *)(v234 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v244 = (__int128 *)(v233 + 16);
  v245 = (__int128 *)(v234 + 16);
  v246 = *(unsigned __int8 *)(v234 + 32);
  if (*(unsigned __int8 *)(v233 + 32) == 255)
  {
    if (v246 == 255)
    {
      v287 = *v245;
      *(_BYTE *)(v233 + 32) = *(_BYTE *)(v234 + 32);
      *v244 = v287;
    }
    else
    {
      v284 = *(_QWORD *)(v234 + 16);
      v285 = *(_QWORD *)(v234 + 24);
      sub_3D464(v284, v285, *(_BYTE *)(v234 + 32));
      *(_QWORD *)(v233 + 16) = v284;
      *(_QWORD *)(v233 + 24) = v285;
      *(_BYTE *)(v233 + 32) = v246;
    }
  }
  else if (v246 == 255)
  {
    sub_3E43C(v233 + 16);
    v286 = *(_BYTE *)(v234 + 32);
    *v244 = *v245;
    *(_BYTE *)(v233 + 32) = v286;
  }
  else
  {
    v247 = *(_QWORD *)(v234 + 16);
    v248 = *(_QWORD *)(v234 + 24);
    sub_3D464(v247, v248, *(_BYTE *)(v234 + 32));
    v249 = *(_QWORD *)(v233 + 16);
    v250 = *(_QWORD *)(v233 + 24);
    *(_QWORD *)(v233 + 16) = v247;
    *(_QWORD *)(v233 + 24) = v248;
    v251 = *(_BYTE *)(v233 + 32);
    *(_BYTE *)(v233 + 32) = v246;
    sub_3B5BC(v249, v250, v251);
  }
  *(_QWORD *)(v233 + 40) = *(_QWORD *)(v234 + 40);
  *(_QWORD *)(v233 + 48) = *(_QWORD *)(v234 + 48);
  v288 = (id *)(v233 + 56);
  v289 = (id *)(v234 + 56);
  v290 = *(unsigned __int8 *)(v234 + 64);
  if (*(unsigned __int8 *)(v233 + 64) == 255)
  {
    if (v290 == 255)
    {
      v296 = *v289;
      *(_BYTE *)(v233 + 64) = *(_BYTE *)(v234 + 64);
      *v288 = v296;
    }
    else
    {
      v294 = *v289;
      sub_3D47C(*v289, *(_BYTE *)(v234 + 64));
      *(_QWORD *)(v233 + 56) = v294;
      *(_BYTE *)(v233 + 64) = v290;
    }
  }
  else if (v290 == 255)
  {
    sub_3E470(v233 + 56);
    v295 = *(_BYTE *)(v234 + 64);
    *v288 = *v289;
    *(_BYTE *)(v233 + 64) = v295;
  }
  else
  {
    v291 = *v289;
    sub_3D47C(*v289, *(_BYTE *)(v234 + 64));
    v292 = *(void **)(v233 + 56);
    *(_QWORD *)(v233 + 56) = v291;
    v293 = *(_BYTE *)(v233 + 64);
    *(_BYTE *)(v233 + 64) = v290;
    sub_3D624(v292, v293);
  }
  v297 = (id *)(v233 + 72);
  v298 = (id *)(v234 + 72);
  v299 = *(unsigned __int8 *)(v234 + 80);
  if (*(unsigned __int8 *)(v233 + 80) == 255)
  {
    if (v299 == 255)
    {
      v305 = *v298;
      *(_BYTE *)(v233 + 80) = *(_BYTE *)(v234 + 80);
      *v297 = v305;
    }
    else
    {
      v303 = *v298;
      sub_3D47C(*v298, *(_BYTE *)(v234 + 80));
      *(_QWORD *)(v233 + 72) = v303;
      *(_BYTE *)(v233 + 80) = v299;
    }
  }
  else if (v299 == 255)
  {
    sub_3E470(v233 + 72);
    v304 = *(_BYTE *)(v234 + 80);
    *v297 = *v298;
    *(_BYTE *)(v233 + 80) = v304;
  }
  else
  {
    v300 = *v298;
    sub_3D47C(*v298, *(_BYTE *)(v234 + 80));
    v301 = *(void **)(v233 + 72);
    *(_QWORD *)(v233 + 72) = v300;
    v302 = *(_BYTE *)(v233 + 80);
    *(_BYTE *)(v233 + 80) = v299;
    sub_3D624(v301, v302);
  }
  v306 = (id *)(v233 + 88);
  v307 = (id *)(v234 + 88);
  v308 = *(unsigned __int8 *)(v234 + 96);
  if (*(unsigned __int8 *)(v233 + 96) == 255)
  {
    if (v308 == 255)
    {
      v314 = *v307;
      *(_BYTE *)(v233 + 96) = *(_BYTE *)(v234 + 96);
      *v306 = v314;
    }
    else
    {
      v312 = *v307;
      sub_3D47C(*v307, *(_BYTE *)(v234 + 96));
      *(_QWORD *)(v233 + 88) = v312;
      *(_BYTE *)(v233 + 96) = v308;
    }
  }
  else if (v308 == 255)
  {
    sub_3E470(v233 + 88);
    v313 = *(_BYTE *)(v234 + 96);
    *v306 = *v307;
    *(_BYTE *)(v233 + 96) = v313;
  }
  else
  {
    v309 = *v307;
    sub_3D47C(*v307, *(_BYTE *)(v234 + 96));
    v310 = *(void **)(v233 + 88);
    *(_QWORD *)(v233 + 88) = v309;
    v311 = *(_BYTE *)(v233 + 96);
    *(_BYTE *)(v233 + 96) = v308;
    sub_3D624(v310, v311);
  }
  v315 = (id *)(v233 + 104);
  v316 = (id *)(v234 + 104);
  v317 = *(unsigned __int8 *)(v234 + 112);
  if (*(unsigned __int8 *)(v233 + 112) == 255)
  {
    if (v317 == 255)
    {
      v323 = *v316;
      *(_BYTE *)(v233 + 112) = *(_BYTE *)(v234 + 112);
      *v315 = v323;
    }
    else
    {
      v321 = *v316;
      sub_3D47C(*v316, *(_BYTE *)(v234 + 112));
      *(_QWORD *)(v233 + 104) = v321;
      *(_BYTE *)(v233 + 112) = v317;
    }
  }
  else if (v317 == 255)
  {
    sub_3E470(v233 + 104);
    v322 = *(_BYTE *)(v234 + 112);
    *v315 = *v316;
    *(_BYTE *)(v233 + 112) = v322;
  }
  else
  {
    v318 = *v316;
    sub_3D47C(*v316, *(_BYTE *)(v234 + 112));
    v319 = *(void **)(v233 + 104);
    *(_QWORD *)(v233 + 104) = v318;
    v320 = *(_BYTE *)(v233 + 112);
    *(_BYTE *)(v233 + 112) = v317;
    sub_3D624(v319, v320);
  }
  v324 = (id *)(v233 + 120);
  v325 = (id *)(v234 + 120);
  v326 = *(unsigned __int8 *)(v234 + 128);
  if (*(unsigned __int8 *)(v233 + 128) == 255)
  {
    if (v326 == 255)
    {
      v332 = *v325;
      *(_BYTE *)(v233 + 128) = *(_BYTE *)(v234 + 128);
      *v324 = v332;
    }
    else
    {
      v330 = *v325;
      sub_3D47C(*v325, *(_BYTE *)(v234 + 128));
      *(_QWORD *)(v233 + 120) = v330;
      *(_BYTE *)(v233 + 128) = v326;
    }
  }
  else if (v326 == 255)
  {
    sub_3E470(v233 + 120);
    v331 = *(_BYTE *)(v234 + 128);
    *v324 = *v325;
    *(_BYTE *)(v233 + 128) = v331;
  }
  else
  {
    v327 = *v325;
    sub_3D47C(*v325, *(_BYTE *)(v234 + 128));
    v328 = *(void **)(v233 + 120);
    *(_QWORD *)(v233 + 120) = v327;
    v329 = *(_BYTE *)(v233 + 128);
    *(_BYTE *)(v233 + 128) = v326;
    sub_3D624(v328, v329);
  }
  *(_BYTE *)(v233 + 129) = *(_BYTE *)(v234 + 129);
  v333 = v235[11];
  v334 = v233 + v333;
  v335 = v234 + v333;
  v336 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v336 - 8) + 24))(v334, v335, v336);
  v337 = v235[12];
  v338 = (_QWORD *)(v233 + v337);
  v339 = (_QWORD *)(v234 + v337);
  *v338 = *v339;
  v338[1] = v339[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v233 + v235[13]) = *(_BYTE *)(v234 + v235[13]);
  *(_BYTE *)(v233 + v235[14]) = *(_BYTE *)(v234 + v235[14]);
  *(_BYTE *)(v233 + v235[15]) = *(_BYTE *)(v234 + v235[15]);
  v340 = v235[16];
  v341 = (_QWORD *)(v233 + v340);
  v342 = (_QWORD *)(v234 + v340);
  *v341 = *v342;
  v341[1] = v342[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Header(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v7 = a3[9];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = type metadata accessor for ActionMenu(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    v14 = *(int *)(v10 + 28);
    v15 = (_OWORD *)((char *)v8 + v14);
    v16 = (_OWORD *)((char *)v9 + v14);
    v17 = (int *)type metadata accessor for ArtworkModel(0);
    v54 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v54 + 48))(v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = v16[1];
      *v15 = *v16;
      v15[1] = v19;
      *((_BYTE *)v15 + 32) = *((_BYTE *)v16 + 32);
      *(_OWORD *)((char *)v15 + 40) = *(_OWORD *)((char *)v16 + 40);
      *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
      *((_BYTE *)v15 + 64) = *((_BYTE *)v16 + 64);
      *(_OWORD *)((char *)v15 + 113) = *(_OWORD *)((char *)v16 + 113);
      *(_OWORD *)((char *)v15 + 104) = *(_OWORD *)((char *)v16 + 104);
      *(_OWORD *)((char *)v15 + 88) = *(_OWORD *)((char *)v16 + 88);
      *(_OWORD *)((char *)v15 + 72) = *(_OWORD *)((char *)v16 + 72);
      *((_BYTE *)v15 + 129) = *((_BYTE *)v16 + 129);
      v20 = v17[11];
      v50 = (char *)v16 + v20;
      v52 = (char *)v15 + v20;
      v21 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v52, v50, v21);
      *(_OWORD *)((char *)v15 + v17[12]) = *(_OWORD *)((char *)v16 + v17[12]);
      *((_BYTE *)v15 + v17[13]) = *((_BYTE *)v16 + v17[13]);
      *((_BYTE *)v15 + v17[14]) = *((_BYTE *)v16 + v17[14]);
      *((_BYTE *)v15 + v17[15]) = *((_BYTE *)v16 + v17[15]);
      *(_OWORD *)((char *)v15 + v17[16]) = *(_OWORD *)((char *)v16 + v17[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v54 + 56))(v15, 0, 1, v17);
    }
    *(_QWORD *)((char *)v8 + *(int *)(v10 + 32)) = *(_QWORD *)((char *)v9 + *(int *)(v10 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v22 = a3[10];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  v25 = type metadata accessor for Header.PrimaryAction(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v28 = v24[1];
      *v23 = *v24;
      v23[1] = v28;
      v23[2] = v24[2];
      v29 = *(int *)(v10 + 28);
      v30 = (_OWORD *)((char *)v23 + v29);
      v31 = (_OWORD *)((char *)v24 + v29);
      v32 = type metadata accessor for ArtworkModel(0);
      v53 = *(_QWORD *)(v32 - 8);
      v55 = (int *)v32;
      if ((*(unsigned int (**)(_OWORD *, uint64_t))(v53 + 48))(v31, 1))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v34 = v31[1];
        *v30 = *v31;
        v30[1] = v34;
        *((_BYTE *)v30 + 32) = *((_BYTE *)v31 + 32);
        *(_OWORD *)((char *)v30 + 40) = *(_OWORD *)((char *)v31 + 40);
        *((_QWORD *)v30 + 7) = *((_QWORD *)v31 + 7);
        *((_BYTE *)v30 + 64) = *((_BYTE *)v31 + 64);
        *(_OWORD *)((char *)v30 + 113) = *(_OWORD *)((char *)v31 + 113);
        *(_OWORD *)((char *)v30 + 104) = *(_OWORD *)((char *)v31 + 104);
        *(_OWORD *)((char *)v30 + 88) = *(_OWORD *)((char *)v31 + 88);
        *(_OWORD *)((char *)v30 + 72) = *(_OWORD *)((char *)v31 + 72);
        *((_BYTE *)v30 + 129) = *((_BYTE *)v31 + 129);
        v35 = v55[11];
        v49 = (char *)v31 + v35;
        v51 = (char *)v30 + v35;
        v36 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v51, v49, v36);
        *(_OWORD *)((char *)v30 + v55[12]) = *(_OWORD *)((char *)v31 + v55[12]);
        *((_BYTE *)v30 + v55[13]) = *((_BYTE *)v31 + v55[13]);
        *((_BYTE *)v30 + v55[14]) = *((_BYTE *)v31 + v55[14]);
        *((_BYTE *)v30 + v55[15]) = *((_BYTE *)v31 + v55[15]);
        *(_OWORD *)((char *)v30 + v55[16]) = *(_OWORD *)((char *)v31 + v55[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t))(v53 + 56))(v30, 0, 1);
      }
      *(_QWORD *)((char *)v23 + *(int *)(v10 + 32)) = *(_QWORD *)((char *)v24 + *(int *)(v10 + 32));
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(v26 + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v37 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v38 = (_OWORD *)(a1 + v37);
  v39 = (_OWORD *)(a2 + v37);
  v40 = (int *)type metadata accessor for ArtworkModel(0);
  v41 = *((_QWORD *)v40 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = v39[1];
    *v38 = *v39;
    v38[1] = v43;
    *((_BYTE *)v38 + 32) = *((_BYTE *)v39 + 32);
    *(_OWORD *)((char *)v38 + 40) = *(_OWORD *)((char *)v39 + 40);
    *((_QWORD *)v38 + 7) = *((_QWORD *)v39 + 7);
    *((_BYTE *)v38 + 64) = *((_BYTE *)v39 + 64);
    *(_OWORD *)((char *)v38 + 113) = *(_OWORD *)((char *)v39 + 113);
    *(_OWORD *)((char *)v38 + 104) = *(_OWORD *)((char *)v39 + 104);
    *(_OWORD *)((char *)v38 + 88) = *(_OWORD *)((char *)v39 + 88);
    *(_OWORD *)((char *)v38 + 72) = *(_OWORD *)((char *)v39 + 72);
    *((_BYTE *)v38 + 129) = *((_BYTE *)v39 + 129);
    v44 = v40[11];
    v45 = (char *)v38 + v44;
    v46 = (char *)v39 + v44;
    v47 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
    *(_OWORD *)((char *)v38 + v40[12]) = *(_OWORD *)((char *)v39 + v40[12]);
    *((_BYTE *)v38 + v40[13]) = *((_BYTE *)v39 + v40[13]);
    *((_BYTE *)v38 + v40[14]) = *((_BYTE *)v39 + v40[14]);
    *((_BYTE *)v38 + v40[15]) = *((_BYTE *)v39 + v40[15]);
    *(_OWORD *)((char *)v38 + v40[16]) = *(_OWORD *)((char *)v39 + v40[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v41 + 56))(v38, 0, 1, v40);
  }
  return a1;
}

uint64_t assignWithTake for Header(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, uint64_t);
  int v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, int *);
  int v34;
  int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(_OWORD *, uint64_t, uint64_t);
  int v53;
  int v54;
  __int128 v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  size_t v62;
  __int128 v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, int *);
  int v79;
  int v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  _OWORD *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  int v95;
  int v96;
  void *v97;
  _QWORD *v98;
  int v99;
  int v100;
  void *v101;
  _QWORD *v102;
  int v103;
  int v104;
  void *v105;
  _QWORD *v106;
  int v107;
  int v108;
  void *v109;
  _QWORD *v110;
  int v111;
  int v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _OWORD *v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  _QWORD *v138;
  int v139;
  int v140;
  void *v141;
  _QWORD *v142;
  int v143;
  int v144;
  void *v145;
  _QWORD *v146;
  int v147;
  int v148;
  void *v149;
  _QWORD *v150;
  int v151;
  int v152;
  void *v153;
  _QWORD *v154;
  int v155;
  int v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  int *v176;
  int *v177;
  int *v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v9 = a3[9];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for ActionMenu(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_145D8((uint64_t)v10, type metadata accessor for ActionMenu);
      goto LABEL_7;
    }
    v176 = a3;
    v25 = v11[1];
    *v10 = *v11;
    v10[1] = v25;
    swift_bridgeObjectRelease();
    v26 = v11[3];
    v10[2] = v11[2];
    v10[3] = v26;
    swift_bridgeObjectRelease();
    v27 = v11[5];
    v10[4] = v11[4];
    v10[5] = v27;
    swift_bridgeObjectRelease();
    v181 = v12;
    v28 = *(int *)(v12 + 28);
    v29 = (uint64_t)v10 + v28;
    v30 = (char *)v11 + v28;
    v31 = (int *)type metadata accessor for ArtworkModel(0);
    v32 = *((_QWORD *)v31 - 1);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v32 + 48);
    v34 = v33(v29, 1, v31);
    v35 = v33((uint64_t)v30, 1, v31);
    if (v34)
    {
      if (!v35)
      {
        v36 = *((_OWORD *)v30 + 1);
        *(_OWORD *)v29 = *(_OWORD *)v30;
        *(_OWORD *)(v29 + 16) = v36;
        *(_BYTE *)(v29 + 32) = v30[32];
        *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
        *(_QWORD *)(v29 + 56) = *((_QWORD *)v30 + 7);
        *(_BYTE *)(v29 + 64) = v30[64];
        *(_OWORD *)(v29 + 113) = *(_OWORD *)(v30 + 113);
        *(_OWORD *)(v29 + 104) = *(_OWORD *)(v30 + 104);
        *(_OWORD *)(v29 + 88) = *(_OWORD *)(v30 + 88);
        *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
        *(_BYTE *)(v29 + 129) = v30[129];
        v37 = v31[11];
        v38 = v29 + v37;
        v39 = &v30[v37];
        v40 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        *(_OWORD *)(v29 + v31[12]) = *(_OWORD *)&v30[v31[12]];
        *(_BYTE *)(v29 + v31[13]) = v30[v31[13]];
        *(_BYTE *)(v29 + v31[14]) = v30[v31[14]];
        *(_BYTE *)(v29 + v31[15]) = v30[v31[15]];
        *(_OWORD *)(v29 + v31[16]) = *(_OWORD *)&v30[v31[16]];
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_16:
        a3 = v176;
        v12 = v181;
        *(_QWORD *)((char *)v10 + *(int *)(v181 + 32)) = *(_QWORD *)((char *)v11 + *(int *)(v181 + 32));
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
LABEL_15:
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy((void *)v29, v30, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      goto LABEL_16;
    }
    if (v35)
    {
      sub_145D8(v29, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_15;
    }
    v128 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v128;
    swift_bridgeObjectRelease();
    v129 = v30 + 16;
    v130 = *(unsigned __int8 *)(v29 + 32);
    if (v130 != 255)
    {
      v131 = v30[32];
      if (v131 != 255)
      {
        v132 = *(_QWORD *)(v29 + 16);
        v133 = *(_QWORD *)(v29 + 24);
        *(_OWORD *)(v29 + 16) = *v129;
        *(_BYTE *)(v29 + 32) = v131;
        sub_3B5BC(v132, v133, v130);
        goto LABEL_80;
      }
      sub_3E43C(v29 + 16);
    }
    *(_OWORD *)(v29 + 16) = *v129;
    *(_BYTE *)(v29 + 32) = v30[32];
LABEL_80:
    *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
    v138 = v30 + 56;
    v139 = *(unsigned __int8 *)(v29 + 64);
    if (v139 != 255)
    {
      v140 = v30[64];
      if (v140 != 255)
      {
        v141 = *(void **)(v29 + 56);
        *(_QWORD *)(v29 + 56) = *v138;
        *(_BYTE *)(v29 + 64) = v140;
        sub_3D624(v141, v139);
        goto LABEL_85;
      }
      sub_3E470(v29 + 56);
    }
    *(_QWORD *)(v29 + 56) = *v138;
    *(_BYTE *)(v29 + 64) = v30[64];
LABEL_85:
    v142 = v30 + 72;
    v143 = *(unsigned __int8 *)(v29 + 80);
    if (v143 != 255)
    {
      v144 = v30[80];
      if (v144 != 255)
      {
        v145 = *(void **)(v29 + 72);
        *(_QWORD *)(v29 + 72) = *v142;
        *(_BYTE *)(v29 + 80) = v144;
        sub_3D624(v145, v143);
        goto LABEL_90;
      }
      sub_3E470(v29 + 72);
    }
    *(_QWORD *)(v29 + 72) = *v142;
    *(_BYTE *)(v29 + 80) = v30[80];
LABEL_90:
    v146 = v30 + 88;
    v147 = *(unsigned __int8 *)(v29 + 96);
    if (v147 != 255)
    {
      v148 = v30[96];
      if (v148 != 255)
      {
        v149 = *(void **)(v29 + 88);
        *(_QWORD *)(v29 + 88) = *v146;
        *(_BYTE *)(v29 + 96) = v148;
        sub_3D624(v149, v147);
        goto LABEL_95;
      }
      sub_3E470(v29 + 88);
    }
    *(_QWORD *)(v29 + 88) = *v146;
    *(_BYTE *)(v29 + 96) = v30[96];
LABEL_95:
    v150 = v30 + 104;
    v151 = *(unsigned __int8 *)(v29 + 112);
    if (v151 != 255)
    {
      v152 = v30[112];
      if (v152 != 255)
      {
        v153 = *(void **)(v29 + 104);
        *(_QWORD *)(v29 + 104) = *v150;
        *(_BYTE *)(v29 + 112) = v152;
        sub_3D624(v153, v151);
        goto LABEL_100;
      }
      sub_3E470(v29 + 104);
    }
    *(_QWORD *)(v29 + 104) = *v150;
    *(_BYTE *)(v29 + 112) = v30[112];
LABEL_100:
    v154 = v30 + 120;
    v155 = *(unsigned __int8 *)(v29 + 128);
    if (v155 != 255)
    {
      v156 = v30[128];
      if (v156 != 255)
      {
        v157 = *(void **)(v29 + 120);
        *(_QWORD *)(v29 + 120) = *v154;
        *(_BYTE *)(v29 + 128) = v156;
        sub_3D624(v157, v155);
LABEL_105:
        *(_BYTE *)(v29 + 129) = v30[129];
        v158 = v31[11];
        v159 = v29 + v158;
        v160 = &v30[v158];
        v161 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 40))(v159, v160, v161);
        v162 = v31[12];
        v163 = (_QWORD *)(v29 + v162);
        v164 = &v30[v162];
        v166 = *(_QWORD *)v164;
        v165 = *((_QWORD *)v164 + 1);
        *v163 = v166;
        v163[1] = v165;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v29 + v31[13]) = v30[v31[13]];
        *(_BYTE *)(v29 + v31[14]) = v30[v31[14]];
        *(_BYTE *)(v29 + v31[15]) = v30[v31[15]];
        v167 = v31[16];
        v168 = (_QWORD *)(v29 + v167);
        v169 = &v30[v167];
        v171 = *(_QWORD *)v169;
        v170 = *((_QWORD *)v169 + 1);
        *v168 = v171;
        v168[1] = v170;
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      sub_3E470(v29 + 120);
    }
    *(_QWORD *)(v29 + 120) = *v154;
    *(_BYTE *)(v29 + 128) = v30[128];
    goto LABEL_105;
  }
  if (v16)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_17;
  }
  v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  v180 = v12;
  v18 = *(int *)(v12 + 28);
  v19 = (_OWORD *)((char *)v10 + v18);
  v20 = (_OWORD *)((char *)v11 + v18);
  v21 = (int *)type metadata accessor for ArtworkModel(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v41 = v20[1];
    *v19 = *v20;
    v19[1] = v41;
    *((_BYTE *)v19 + 32) = *((_BYTE *)v20 + 32);
    *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
    *((_QWORD *)v19 + 7) = *((_QWORD *)v20 + 7);
    *((_BYTE *)v19 + 64) = *((_BYTE *)v20 + 64);
    *(_OWORD *)((char *)v19 + 113) = *(_OWORD *)((char *)v20 + 113);
    *(_OWORD *)((char *)v19 + 104) = *(_OWORD *)((char *)v20 + 104);
    *(_OWORD *)((char *)v19 + 88) = *(_OWORD *)((char *)v20 + 88);
    *(_OWORD *)((char *)v19 + 72) = *(_OWORD *)((char *)v20 + 72);
    *((_BYTE *)v19 + 129) = *((_BYTE *)v20 + 129);
    v42 = v21[11];
    v177 = a3;
    v43 = (char *)v19 + v42;
    v173 = (char *)v20 + v42;
    v44 = type metadata accessor for ArtworkCrop(0);
    v45 = v43;
    a3 = v177;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v45, v173, v44);
    *(_OWORD *)((char *)v19 + v21[12]) = *(_OWORD *)((char *)v20 + v21[12]);
    *((_BYTE *)v19 + v21[13]) = *((_BYTE *)v20 + v21[13]);
    *((_BYTE *)v19 + v21[14]) = *((_BYTE *)v20 + v21[14]);
    *((_BYTE *)v19 + v21[15]) = *((_BYTE *)v20 + v21[15]);
    *(_OWORD *)((char *)v19 + v21[16]) = *(_OWORD *)((char *)v20 + v21[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  v12 = v180;
  *(_QWORD *)((char *)v10 + *(int *)(v180 + 32)) = *(_QWORD *)((char *)v11 + *(int *)(v180 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v180);
LABEL_17:
  v47 = a3[10];
  v48 = (_OWORD *)(a1 + v47);
  v49 = (_OWORD *)(a2 + v47);
  v50 = type metadata accessor for Header.PrimaryAction(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      if (a1 == a2)
        goto LABEL_34;
      sub_145D8((uint64_t)v48, type metadata accessor for Header.PrimaryAction);
      if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
      {
        v179 = a3;
        v183 = v12;
        v63 = v49[1];
        *v48 = *v49;
        v48[1] = v63;
        v48[2] = v49[2];
        v64 = *(int *)(v12 + 28);
        v65 = (_OWORD *)((char *)v48 + v64);
        v66 = (_OWORD *)((char *)v49 + v64);
        v67 = (int *)type metadata accessor for ArtworkModel(0);
        v68 = *((_QWORD *)v67 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v68 + 48))(v66, 1, v67))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          v134 = v66[1];
          *v65 = *v66;
          v65[1] = v134;
          *((_BYTE *)v65 + 32) = *((_BYTE *)v66 + 32);
          *(_OWORD *)((char *)v65 + 40) = *(_OWORD *)((char *)v66 + 40);
          *((_QWORD *)v65 + 7) = *((_QWORD *)v66 + 7);
          *((_BYTE *)v65 + 64) = *((_BYTE *)v66 + 64);
          *(_OWORD *)((char *)v65 + 113) = *(_OWORD *)((char *)v66 + 113);
          *(_OWORD *)((char *)v65 + 104) = *(_OWORD *)((char *)v66 + 104);
          *(_OWORD *)((char *)v65 + 88) = *(_OWORD *)((char *)v66 + 88);
          *(_OWORD *)((char *)v65 + 72) = *(_OWORD *)((char *)v66 + 72);
          *((_BYTE *)v65 + 129) = *((_BYTE *)v66 + 129);
          v135 = v67[11];
          v136 = (char *)v65 + v135;
          v175 = (char *)v66 + v135;
          v137 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v136, v175, v137);
          *(_OWORD *)((char *)v65 + v67[12]) = *(_OWORD *)((char *)v66 + v67[12]);
          *((_BYTE *)v65 + v67[13]) = *((_BYTE *)v66 + v67[13]);
          *((_BYTE *)v65 + v67[14]) = *((_BYTE *)v66 + v67[14]);
          *((_BYTE *)v65 + v67[15]) = *((_BYTE *)v66 + v67[15]);
          *(_OWORD *)((char *)v65 + v67[16]) = *(_OWORD *)((char *)v66 + v67[16]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v68 + 56))(v65, 0, 1, v67);
        }
        a3 = v179;
        *(_QWORD *)((char *)v48 + *(int *)(v183 + 32)) = *(_QWORD *)((char *)v49 + *(int *)(v183 + 32));
        swift_storeEnumTagMultiPayload(v48, v50, 1);
        goto LABEL_34;
      }
      v62 = *(_QWORD *)(v51 + 64);
LABEL_25:
      memcpy(v48, v49, v62);
      goto LABEL_34;
    }
    sub_145D8((uint64_t)v48, type metadata accessor for Header.PrimaryAction);
LABEL_24:
    v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B3740) - 8) + 64);
    goto LABEL_25;
  }
  if (v54)
    goto LABEL_24;
  if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
  {
    v178 = a3;
    v182 = v12;
    v55 = v49[1];
    *v48 = *v49;
    v48[1] = v55;
    v48[2] = v49[2];
    v56 = *(int *)(v12 + 28);
    v57 = (_OWORD *)((char *)v48 + v56);
    v58 = (_OWORD *)((char *)v49 + v56);
    v59 = (int *)type metadata accessor for ArtworkModel(0);
    v60 = *((_QWORD *)v59 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v60 + 48))(v58, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v70 = v58[1];
      *v57 = *v58;
      v57[1] = v70;
      *((_BYTE *)v57 + 32) = *((_BYTE *)v58 + 32);
      *(_OWORD *)((char *)v57 + 40) = *(_OWORD *)((char *)v58 + 40);
      *((_QWORD *)v57 + 7) = *((_QWORD *)v58 + 7);
      *((_BYTE *)v57 + 64) = *((_BYTE *)v58 + 64);
      *(_OWORD *)((char *)v57 + 113) = *(_OWORD *)((char *)v58 + 113);
      *(_OWORD *)((char *)v57 + 104) = *(_OWORD *)((char *)v58 + 104);
      *(_OWORD *)((char *)v57 + 88) = *(_OWORD *)((char *)v58 + 88);
      *(_OWORD *)((char *)v57 + 72) = *(_OWORD *)((char *)v58 + 72);
      *((_BYTE *)v57 + 129) = *((_BYTE *)v58 + 129);
      v71 = v59[11];
      v172 = (char *)v58 + v71;
      v174 = (char *)v57 + v71;
      v72 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v174, v172, v72);
      *(_OWORD *)((char *)v57 + v59[12]) = *(_OWORD *)((char *)v58 + v59[12]);
      *((_BYTE *)v57 + v59[13]) = *((_BYTE *)v58 + v59[13]);
      *((_BYTE *)v57 + v59[14]) = *((_BYTE *)v58 + v59[14]);
      *((_BYTE *)v57 + v59[15]) = *((_BYTE *)v58 + v59[15]);
      *(_OWORD *)((char *)v57 + v59[16]) = *(_OWORD *)((char *)v58 + v59[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v60 + 56))(v57, 0, 1, v59);
    }
    a3 = v178;
    *(_QWORD *)((char *)v48 + *(int *)(v182 + 32)) = *(_QWORD *)((char *)v49 + *(int *)(v182 + 32));
    swift_storeEnumTagMultiPayload(v48, v50, 1);
  }
  else
  {
    memcpy(v48, v49, *(_QWORD *)(v51 + 64));
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_34:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v73 = a3[12];
  v74 = a1 + v73;
  v75 = a2 + v73;
  v76 = (int *)type metadata accessor for ArtworkModel(0);
  v77 = *((_QWORD *)v76 - 1);
  v78 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v77 + 48);
  v79 = v78(v74, 1, v76);
  v80 = v78(v75, 1, v76);
  if (!v79)
  {
    if (v80)
    {
      sub_145D8(v74, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_39;
    }
    v88 = *(_QWORD *)(v75 + 8);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *(_QWORD *)(v74 + 8) = v88;
    swift_bridgeObjectRelease();
    v89 = (_OWORD *)(v75 + 16);
    v90 = *(unsigned __int8 *)(v74 + 32);
    if (v90 != 255)
    {
      v91 = *(unsigned __int8 *)(v75 + 32);
      if (v91 != 255)
      {
        v92 = *(_QWORD *)(v74 + 16);
        v93 = *(_QWORD *)(v74 + 24);
        *(_OWORD *)(v74 + 16) = *v89;
        *(_BYTE *)(v74 + 32) = v91;
        sub_3B5BC(v92, v93, v90);
        goto LABEL_47;
      }
      sub_3E43C(v74 + 16);
    }
    *(_OWORD *)(v74 + 16) = *v89;
    *(_BYTE *)(v74 + 32) = *(_BYTE *)(v75 + 32);
LABEL_47:
    *(_OWORD *)(v74 + 40) = *(_OWORD *)(v75 + 40);
    v94 = (_QWORD *)(v75 + 56);
    v95 = *(unsigned __int8 *)(v74 + 64);
    if (v95 != 255)
    {
      v96 = *(unsigned __int8 *)(v75 + 64);
      if (v96 != 255)
      {
        v97 = *(void **)(v74 + 56);
        *(_QWORD *)(v74 + 56) = *v94;
        *(_BYTE *)(v74 + 64) = v96;
        sub_3D624(v97, v95);
        goto LABEL_52;
      }
      sub_3E470(v74 + 56);
    }
    *(_QWORD *)(v74 + 56) = *v94;
    *(_BYTE *)(v74 + 64) = *(_BYTE *)(v75 + 64);
LABEL_52:
    v98 = (_QWORD *)(v75 + 72);
    v99 = *(unsigned __int8 *)(v74 + 80);
    if (v99 != 255)
    {
      v100 = *(unsigned __int8 *)(v75 + 80);
      if (v100 != 255)
      {
        v101 = *(void **)(v74 + 72);
        *(_QWORD *)(v74 + 72) = *v98;
        *(_BYTE *)(v74 + 80) = v100;
        sub_3D624(v101, v99);
        goto LABEL_57;
      }
      sub_3E470(v74 + 72);
    }
    *(_QWORD *)(v74 + 72) = *v98;
    *(_BYTE *)(v74 + 80) = *(_BYTE *)(v75 + 80);
LABEL_57:
    v102 = (_QWORD *)(v75 + 88);
    v103 = *(unsigned __int8 *)(v74 + 96);
    if (v103 != 255)
    {
      v104 = *(unsigned __int8 *)(v75 + 96);
      if (v104 != 255)
      {
        v105 = *(void **)(v74 + 88);
        *(_QWORD *)(v74 + 88) = *v102;
        *(_BYTE *)(v74 + 96) = v104;
        sub_3D624(v105, v103);
        goto LABEL_62;
      }
      sub_3E470(v74 + 88);
    }
    *(_QWORD *)(v74 + 88) = *v102;
    *(_BYTE *)(v74 + 96) = *(_BYTE *)(v75 + 96);
LABEL_62:
    v106 = (_QWORD *)(v75 + 104);
    v107 = *(unsigned __int8 *)(v74 + 112);
    if (v107 != 255)
    {
      v108 = *(unsigned __int8 *)(v75 + 112);
      if (v108 != 255)
      {
        v109 = *(void **)(v74 + 104);
        *(_QWORD *)(v74 + 104) = *v106;
        *(_BYTE *)(v74 + 112) = v108;
        sub_3D624(v109, v107);
        goto LABEL_67;
      }
      sub_3E470(v74 + 104);
    }
    *(_QWORD *)(v74 + 104) = *v106;
    *(_BYTE *)(v74 + 112) = *(_BYTE *)(v75 + 112);
LABEL_67:
    v110 = (_QWORD *)(v75 + 120);
    v111 = *(unsigned __int8 *)(v74 + 128);
    if (v111 != 255)
    {
      v112 = *(unsigned __int8 *)(v75 + 128);
      if (v112 != 255)
      {
        v113 = *(void **)(v74 + 120);
        *(_QWORD *)(v74 + 120) = *v110;
        *(_BYTE *)(v74 + 128) = v112;
        sub_3D624(v113, v111);
LABEL_72:
        *(_BYTE *)(v74 + 129) = *(_BYTE *)(v75 + 129);
        v114 = v76[11];
        v115 = v74 + v114;
        v116 = v75 + v114;
        v117 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 40))(v115, v116, v117);
        v118 = v76[12];
        v119 = (_QWORD *)(v74 + v118);
        v120 = (uint64_t *)(v75 + v118);
        v122 = *v120;
        v121 = v120[1];
        *v119 = v122;
        v119[1] = v121;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v74 + v76[13]) = *(_BYTE *)(v75 + v76[13]);
        *(_BYTE *)(v74 + v76[14]) = *(_BYTE *)(v75 + v76[14]);
        *(_BYTE *)(v74 + v76[15]) = *(_BYTE *)(v75 + v76[15]);
        v123 = v76[16];
        v124 = (_QWORD *)(v74 + v123);
        v125 = (uint64_t *)(v75 + v123);
        v127 = *v125;
        v126 = v125[1];
        *v124 = v127;
        v124[1] = v126;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_3E470(v74 + 120);
    }
    *(_QWORD *)(v74 + 120) = *v110;
    *(_BYTE *)(v74 + 128) = *(_BYTE *)(v75 + 128);
    goto LABEL_72;
  }
  if (v80)
  {
LABEL_39:
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v74, (const void *)v75, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    return a1;
  }
  v81 = *(_OWORD *)(v75 + 16);
  *(_OWORD *)v74 = *(_OWORD *)v75;
  *(_OWORD *)(v74 + 16) = v81;
  *(_BYTE *)(v74 + 32) = *(_BYTE *)(v75 + 32);
  *(_OWORD *)(v74 + 40) = *(_OWORD *)(v75 + 40);
  *(_QWORD *)(v74 + 56) = *(_QWORD *)(v75 + 56);
  *(_BYTE *)(v74 + 64) = *(_BYTE *)(v75 + 64);
  *(_OWORD *)(v74 + 113) = *(_OWORD *)(v75 + 113);
  *(_OWORD *)(v74 + 104) = *(_OWORD *)(v75 + 104);
  *(_OWORD *)(v74 + 88) = *(_OWORD *)(v75 + 88);
  *(_OWORD *)(v74 + 72) = *(_OWORD *)(v75 + 72);
  *(_BYTE *)(v74 + 129) = *(_BYTE *)(v75 + 129);
  v82 = v76[11];
  v83 = v74 + v82;
  v84 = v75 + v82;
  v85 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
  *(_OWORD *)(v74 + v76[12]) = *(_OWORD *)(v75 + v76[12]);
  *(_BYTE *)(v74 + v76[13]) = *(_BYTE *)(v75 + v76[13]);
  *(_BYTE *)(v74 + v76[14]) = *(_BYTE *)(v75 + v76[14]);
  *(_BYTE *)(v74 + v76[15]) = *(_BYTE *)(v75 + v76[15]);
  *(_OWORD *)(v74 + v76[16]) = *(_OWORD *)(v75 + v76[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v77 + 56))(v74, 0, 1, v76);
  return a1;
}

uint64_t getEnumTagSinglePayload for Header(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18C7C0);
}

uint64_t sub_18C7C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[9];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[11]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for Header(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18C8A0);
}

uint64_t sub_18C8A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[9];
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = result;
      v11 = a4[10];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[11]) = (a2 - 1);
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[12];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_18C970(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  v8[0] = &unk_2FA5B0;
  v8[1] = &unk_2FA5B0;
  v8[2] = &unk_2FA5B0;
  v8[3] = &unk_2FA5C8;
  v8[4] = &unk_2FA5C8;
  sub_3EE70(319, &qword_3BEC00, type metadata accessor for ActionMenu);
  if (v3 <= 0x3F)
  {
    v8[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_3EE70(319, (unint64_t *)&unk_3BEC08, type metadata accessor for Header.PrimaryAction);
    if (v5 <= 0x3F)
    {
      v8[6] = *(_QWORD *)(v4 - 8) + 64;
      v8[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Header.PrimaryAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  void (*v54)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v56;
  uint64_t v57;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v56 = a3;
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = a2[5];
      a1[4] = a2[4];
      a1[5] = v9;
      v57 = type metadata accessor for ActionMenu(0);
      v10 = *(int *)(v57 + 28);
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = type metadata accessor for ArtworkModel(0);
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        v17 = v56;
      }
      else
      {
        v22 = v12[1];
        *v11 = *v12;
        v11[1] = v22;
        v23 = *((unsigned __int8 *)v12 + 32);
        swift_bridgeObjectRetain();
        if (v23 == 255)
        {
          *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
          *((_BYTE *)v11 + 32) = *((_BYTE *)v12 + 32);
        }
        else
        {
          v24 = v12[2];
          v25 = v12[3];
          sub_3D464(v24, v25, v23);
          v11[2] = v24;
          v11[3] = v25;
          *((_BYTE *)v11 + 32) = v23;
        }
        v26 = (int *)v13;
        v17 = v56;
        *(_OWORD *)(v11 + 5) = *(_OWORD *)(v12 + 5);
        v27 = (id *)(v12 + 7);
        v28 = *((unsigned __int8 *)v12 + 64);
        if (v28 == 255)
        {
          v11[7] = *v27;
          *((_BYTE *)v11 + 64) = *((_BYTE *)v12 + 64);
        }
        else
        {
          v29 = *v27;
          sub_3D47C(*v27, *((_BYTE *)v12 + 64));
          v11[7] = v29;
          *((_BYTE *)v11 + 64) = v28;
        }
        v30 = (id *)(v12 + 9);
        v31 = *((unsigned __int8 *)v12 + 80);
        if (v31 == 255)
        {
          v11[9] = *v30;
          *((_BYTE *)v11 + 80) = *((_BYTE *)v12 + 80);
        }
        else
        {
          v32 = *v30;
          sub_3D47C(*v30, *((_BYTE *)v12 + 80));
          v11[9] = v32;
          *((_BYTE *)v11 + 80) = v31;
        }
        v33 = (id *)(v12 + 11);
        v34 = *((unsigned __int8 *)v12 + 96);
        if (v34 == 255)
        {
          v11[11] = *v33;
          *((_BYTE *)v11 + 96) = *((_BYTE *)v12 + 96);
        }
        else
        {
          v35 = *v33;
          sub_3D47C(*v33, *((_BYTE *)v12 + 96));
          v11[11] = v35;
          *((_BYTE *)v11 + 96) = v34;
        }
        v36 = (id *)(v12 + 13);
        v37 = *((unsigned __int8 *)v12 + 112);
        if (v37 == 255)
        {
          v11[13] = *v36;
          *((_BYTE *)v11 + 112) = *((_BYTE *)v12 + 112);
        }
        else
        {
          v38 = *v36;
          sub_3D47C(*v36, *((_BYTE *)v12 + 112));
          v11[13] = v38;
          *((_BYTE *)v11 + 112) = v37;
        }
        v39 = (id *)(v12 + 15);
        v40 = *((unsigned __int8 *)v12 + 128);
        if (v40 == 255)
        {
          v11[15] = *v39;
          *((_BYTE *)v11 + 128) = *((_BYTE *)v12 + 128);
        }
        else
        {
          v41 = *v39;
          sub_3D47C(*v39, *((_BYTE *)v12 + 128));
          v11[15] = v41;
          *((_BYTE *)v11 + 128) = v40;
        }
        *((_BYTE *)v11 + 129) = *((_BYTE *)v12 + 129);
        v42 = v26[11];
        v43 = (char *)v11 + v42;
        v44 = (char *)v12 + v42;
        v45 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        v46 = v26[12];
        v47 = (_QWORD *)((char *)v11 + v46);
        v48 = (_QWORD *)((char *)v12 + v46);
        v49 = v48[1];
        *v47 = *v48;
        v47[1] = v49;
        *((_BYTE *)v11 + v26[13]) = *((_BYTE *)v12 + v26[13]);
        *((_BYTE *)v11 + v26[14]) = *((_BYTE *)v12 + v26[14]);
        *((_BYTE *)v11 + v26[15]) = *((_BYTE *)v12 + v26[15]);
        v50 = v26[16];
        v51 = (_QWORD *)((char *)v11 + v50);
        v52 = (_QWORD *)((char *)v12 + v50);
        v53 = v52[1];
        *v51 = *v52;
        v51[1] = v53;
        v54 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(v11, 0, 1, v26);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v57 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v57 + 32));
      swift_bridgeObjectRetain();
      v19 = a1;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v19 = a1;
      v20 = a3;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
  }
  return a1;
}

uint64_t destroy for Header.PrimaryAction(_QWORD *a1, uint64_t a2)
{
  char *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  char *v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_release(*a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = (char *)a1 + *(int *)(type metadata accessor for ActionMenu(0) + 28);
  v4 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = v3[32];
    if (v5 != 255)
      sub_3B5BC(*((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), v5);
    v6 = v3[64];
    if (v6 != 255)
      sub_3D624(*((id *)v3 + 7), v6);
    v7 = v3[80];
    if (v7 != 255)
      sub_3D624(*((id *)v3 + 9), v7);
    v8 = v3[96];
    if (v8 != 255)
      sub_3D624(*((id *)v3 + 11), v8);
    v9 = v3[112];
    if (v9 != 255)
      sub_3D624(*((id *)v3 + 13), v9);
    v10 = v3[128];
    if (v10 != 255)
      sub_3D624(*((id *)v3 + 15), v10);
    v11 = &v3[*(int *)(v4 + 44)];
    v12 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Header.PrimaryAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v50;
  uint64_t v51;

  v3 = a3;
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v50 = v3;
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v51 = type metadata accessor for ActionMenu(0);
    v9 = *(int *)(v51 + 28);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      v3 = v50;
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v19 = v11[2];
        v20 = v11[3];
        sub_3D464(v19, v20, v18);
        v10[2] = v19;
        v10[3] = v20;
        *((_BYTE *)v10 + 32) = v18;
      }
      v3 = v50;
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v21 = (id *)(v11 + 7);
      v22 = *((unsigned __int8 *)v11 + 64);
      if (v22 == 255)
      {
        v10[7] = *v21;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)v11 + 64));
        v10[7] = v23;
        *((_BYTE *)v10 + 64) = v22;
      }
      v24 = (id *)(v11 + 9);
      v25 = *((unsigned __int8 *)v11 + 80);
      if (v25 == 255)
      {
        v10[9] = *v24;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)v11 + 80));
        v10[9] = v26;
        *((_BYTE *)v10 + 80) = v25;
      }
      v27 = (id *)(v11 + 11);
      v28 = *((unsigned __int8 *)v11 + 96);
      if (v28 == 255)
      {
        v10[11] = *v27;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)v11 + 96));
        v10[11] = v29;
        *((_BYTE *)v10 + 96) = v28;
      }
      v30 = (id *)(v11 + 13);
      v31 = *((unsigned __int8 *)v11 + 112);
      if (v31 == 255)
      {
        v10[13] = *v30;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)v11 + 112));
        v10[13] = v32;
        *((_BYTE *)v10 + 112) = v31;
      }
      v33 = (id *)(v11 + 15);
      v34 = *((unsigned __int8 *)v11 + 128);
      if (v34 == 255)
      {
        v10[15] = *v33;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)v11 + 128));
        v10[15] = v35;
        *((_BYTE *)v10 + 128) = v34;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v36 = v12[11];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v12[12];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (_QWORD *)((char *)v11 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v10, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v51 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v51 + 32));
    swift_bridgeObjectRetain();
    v16 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v3, v16);
  return a1;
}

_QWORD *assignWithCopy for Header.PrimaryAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, int *);
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  id *v18;
  int v19;
  id v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v50;
  uint64_t v51;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for Header.PrimaryAction);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v50 = a3;
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      v51 = type metadata accessor for ActionMenu(0);
      v6 = *(int *)(v51 + 28);
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (_QWORD *)((char *)a2 + v6);
      v9 = (int *)type metadata accessor for ArtworkModel(0);
      v10 = *((_QWORD *)v9 - 1);
      v11 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v10 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        a3 = v50;
      }
      else
      {
        *v7 = *v8;
        v7[1] = v8[1];
        v14 = *((unsigned __int8 *)v8 + 32);
        swift_bridgeObjectRetain();
        if (v14 == 255)
        {
          v17 = *((_OWORD *)v8 + 1);
          *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
          *((_OWORD *)v7 + 1) = v17;
        }
        else
        {
          v15 = v8[2];
          v16 = v8[3];
          sub_3D464(v15, v16, v14);
          v7[2] = v15;
          v7[3] = v16;
          *((_BYTE *)v7 + 32) = v14;
        }
        a3 = v50;
        v7[5] = v8[5];
        v7[6] = v8[6];
        v18 = (id *)(v8 + 7);
        v19 = *((unsigned __int8 *)v8 + 64);
        if (v19 == 255)
        {
          v21 = *v18;
          *((_BYTE *)v7 + 64) = *((_BYTE *)v8 + 64);
          v7[7] = v21;
        }
        else
        {
          v20 = *v18;
          sub_3D47C(*v18, *((_BYTE *)v8 + 64));
          v7[7] = v20;
          *((_BYTE *)v7 + 64) = v19;
        }
        v22 = (id *)(v8 + 9);
        v23 = *((unsigned __int8 *)v8 + 80);
        if (v23 == 255)
        {
          v25 = *v22;
          *((_BYTE *)v7 + 80) = *((_BYTE *)v8 + 80);
          v7[9] = v25;
        }
        else
        {
          v24 = *v22;
          sub_3D47C(*v22, *((_BYTE *)v8 + 80));
          v7[9] = v24;
          *((_BYTE *)v7 + 80) = v23;
        }
        v26 = (id *)(v8 + 11);
        v27 = *((unsigned __int8 *)v8 + 96);
        if (v27 == 255)
        {
          v29 = *v26;
          *((_BYTE *)v7 + 96) = *((_BYTE *)v8 + 96);
          v7[11] = v29;
        }
        else
        {
          v28 = *v26;
          sub_3D47C(*v26, *((_BYTE *)v8 + 96));
          v7[11] = v28;
          *((_BYTE *)v7 + 96) = v27;
        }
        v30 = (id *)(v8 + 13);
        v31 = *((unsigned __int8 *)v8 + 112);
        if (v31 == 255)
        {
          v33 = *v30;
          *((_BYTE *)v7 + 112) = *((_BYTE *)v8 + 112);
          v7[13] = v33;
        }
        else
        {
          v32 = *v30;
          sub_3D47C(*v30, *((_BYTE *)v8 + 112));
          v7[13] = v32;
          *((_BYTE *)v7 + 112) = v31;
        }
        v34 = (id *)(v8 + 15);
        v35 = *((unsigned __int8 *)v8 + 128);
        if (v35 == 255)
        {
          v37 = *v34;
          *((_BYTE *)v7 + 128) = *((_BYTE *)v8 + 128);
          v7[15] = v37;
        }
        else
        {
          v36 = *v34;
          sub_3D47C(*v34, *((_BYTE *)v8 + 128));
          v7[15] = v36;
          *((_BYTE *)v7 + 128) = v35;
        }
        *((_BYTE *)v7 + 129) = *((_BYTE *)v8 + 129);
        v38 = v9[11];
        v39 = (char *)v7 + v38;
        v40 = (char *)v8 + v38;
        v41 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        v42 = v9[12];
        v43 = (_QWORD *)((char *)v7 + v42);
        v44 = (_QWORD *)((char *)v8 + v42);
        *v43 = *v44;
        v43[1] = v44[1];
        *((_BYTE *)v7 + v9[13]) = *((_BYTE *)v8 + v9[13]);
        *((_BYTE *)v7 + v9[14]) = *((_BYTE *)v8 + v9[14]);
        *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
        v45 = v9[16];
        v46 = (_QWORD *)((char *)v7 + v45);
        v47 = (_QWORD *)((char *)v8 + v45);
        *v46 = *v47;
        v46[1] = v47[1];
        v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v10 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48(v7, 0, 1, v9);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v51 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v51 + 32));
      swift_bridgeObjectRetain();
      v13 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v13);
  }
  return a1;
}

_OWORD *initializeWithTake for Header.PrimaryAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = type metadata accessor for ActionMenu(0);
    v8 = *(int *)(v7 + 28);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ArtworkModel(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = v10[1];
      *v9 = *v10;
      v9[1] = v14;
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
      *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
      *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
      *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
      *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
      *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
      *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
      v15 = v11[11];
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
      *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
      *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
      *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
      *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for Header.PrimaryAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for Header.PrimaryAction);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      v7 = type metadata accessor for ActionMenu(0);
      v8 = *(int *)(v7 + 28);
      v9 = (_OWORD *)((char *)a1 + v8);
      v10 = (_OWORD *)((char *)a2 + v8);
      v11 = (int *)type metadata accessor for ArtworkModel(0);
      v12 = *((_QWORD *)v11 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v14 = v10[1];
        *v9 = *v10;
        v9[1] = v14;
        *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
        *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
        *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
        *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
        *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
        *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
        *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
        v15 = v11[11];
        v16 = (char *)v9 + v15;
        v17 = (char *)v10 + v15;
        v18 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
        *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
        *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
        *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
        *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_18DA88(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for ActionMenu(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t HeaderModel.InterfaceStyle.uikitStyle.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1;
  if (*v0 != 1)
    v1 = *v0;
  if (*v0)
    return v1;
  else
    return 0;
}

uint64_t HeaderModel.PrimaryArtwork.__allocating_init(artworkType:artwork:)(char a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a1 & 1;
  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_BYTE *)(v5 + 16) = v4;
  sub_58F4C(a2, v5 + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork);
  return v5;
}

uint64_t HeaderModel.PrimaryArtwork.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v3 = v2;
  v6 = type metadata accessor for JSONContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONObject(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  JSONObject.subscript.getter(0x546B726F77747261, 0xEB00000000657079);
  v16 = sub_18DEA0();
  JSONObject.stringEnumOrNil<A>()(&v32, &type metadata for HeaderModel.PrimaryArtwork.ArtworkType, v16);
  v17 = *(_QWORD *)(v13 + 8);
  ((void (*)(char *, uint64_t))v17)(v15, v12);
  if (v32 == 2)
  {
    v18 = type metadata accessor for JSONError(0);
    v19 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v18, v19, 0, 0);
    *v20 = 0x546B726F77747261;
    v20[1] = 0xEB00000000657079;
    v20[2] = v3;
    v21 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, enum case for JSONError.missingProperty(_:), v18);
    swift_willThrow(v21);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    ((void (*)(uint64_t, uint64_t))v17)(v30, v12);
  }
  else
  {
    v31 = v32 & 1;
    v22 = type metadata accessor for ArtworkModel(0);
    v27 = v12;
    v28 = (void (*)(uint64_t, uint64_t))v17;
    v23 = v30;
    JSONObject.subscript.getter(0x6B726F77747261, 0xE700000000000000);
    v24 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v29, a2, v6);
    sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
    ExpressibleByJSON.init(tryDeserializing:using:)(v15, v24, v22);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    v28(v23, v27);
    v17 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    *(_BYTE *)(v17 + 16) = v31;
    sub_58F4C((uint64_t)v11, v17 + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork);
  }
  return v17;
}

uint64_t HeaderModel.PrimaryArtwork.init(artworkType:artwork:)(char a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = a1 & 1;
  sub_58F4C(a2, v2 + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork);
  return v2;
}

unint64_t sub_18DEA0()
{
  unint64_t result;

  result = qword_3BED00;
  if (!qword_3BED00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HeaderModel.PrimaryArtwork.ArtworkType);
    atomic_store(result, (unint64_t *)&qword_3BED00);
  }
  return result;
}

uint64_t HeaderModel.PrimaryArtwork.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_14554(v1 + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork, a1);
}

ShelfKit::HeaderModel::PrimaryArtwork::ArtworkType_optional __swiftcall HeaderModel.PrimaryArtwork.ArtworkType.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  ShelfKit::HeaderModel::PrimaryArtwork::ArtworkType_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374838, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = ShelfKit_HeaderModel_PrimaryArtwork_ArtworkType_logo;
  else
    v4.value = ShelfKit_HeaderModel_PrimaryArtwork_ArtworkType_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t HeaderModel.PrimaryArtwork.ArtworkType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 1869049708;
  else
    return 0x7265766F63;
}

uint64_t sub_18DF74(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 1869049708;
  else
    v3 = 0x7265766F63;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if (*a2)
    v5 = 1869049708;
  else
    v5 = 0x7265766F63;
  if (*a2)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_18E010()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 1869049708;
  else
    v2 = 0x7265766F63;
  if (v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_18E084(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 1869049708;
  else
    v2 = 0x7265766F63;
  if (*v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_18E0D4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 1869049708;
  else
    v2 = 0x7265766F63;
  if (v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_18E144@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374838, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_18E1A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1869049708;
  if (!*v1)
    v2 = 0x7265766F63;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t HeaderModel.PrimaryArtwork.deinit()
{
  uint64_t v0;

  sub_59040(v0 + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork);
  return v0;
}

uint64_t HeaderModel.PrimaryArtwork.__deallocating_deinit()
{
  uint64_t v0;

  sub_59040(v0 + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_18E228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = HeaderModel.PrimaryArtwork.__allocating_init(deserializing:using:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

ShelfKit::HeaderModel::InterfaceStyle_optional __swiftcall HeaderModel.InterfaceStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  ShelfKit::HeaderModel::InterfaceStyle_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374888, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 3;
  if (v5 < 3)
    v7 = v5;
  *v4 = v7;
  return result;
}

uint64_t HeaderModel.InterfaceStyle.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746867696CLL;
  if (*v0 != 1)
    v1 = 1802658148;
  if (*v0)
    return v1;
  else
    return 1869903201;
}

uint64_t sub_18E2F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E2F4C(*a1, *a2);
}

Swift::Int sub_18E2FC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE500000000000000;
  v3 = 0x746867696CLL;
  if (v1 != 1)
  {
    v3 = 1802658148;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1869903201;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_18E388(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE500000000000000;
  v3 = 0x746867696CLL;
  if (*v1 != 1)
  {
    v3 = 1802658148;
    v2 = 0xE400000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1869903201;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_18E3F0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE500000000000000;
  v3 = 0x746867696CLL;
  if (v1 != 1)
  {
    v3 = 1802658148;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1869903201;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

ShelfKit::HeaderModel::InterfaceStyle_optional sub_18E478(Swift::String *a1)
{
  return HeaderModel.InterfaceStyle.init(rawValue:)(*a1);
}

void sub_18E484(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x746867696CLL;
  if (v2 != 1)
  {
    v5 = 1802658148;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1869903201;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t HeaderModel.MetadataComponent.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v78 = a2;
  v77 = a3;
  v4 = type metadata accessor for JSONContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  v80 = v5;
  __chkstk_darwin(v4);
  v75 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONObject(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v68 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v68 - v18;
  __chkstk_darwin(v20);
  v76 = (char *)&v68 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v68 - v23;
  v25 = a1;
  v26 = JSONObject.subscript.getter(0x676E69727473, 0xE600000000000000);
  v27 = JSONObject.string.getter(v26);
  v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  v29 = v24;
  v31 = v30;
  v28(v29, v7);
  if (!v31)
  {
    v71 = v16;
    v72 = v19;
    v69 = v10;
    v70 = v13;
    v73 = (uint64_t (*)(uint64_t, uint64_t))v28;
    v74 = v7;
    v36 = type metadata accessor for FlowAction(0);
    v37 = v76;
    JSONObject.subscript.getter(0x6E6F69746361, 0xE600000000000000);
    v39 = v79;
    v38 = v80;
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
    v41 = v75;
    v42 = v78;
    v40(v75, v78, v79);
    sub_F1C0(&qword_3BED08, (void (*)(uint64_t))type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    ExpressibleByJSON.init(tryDeserializing:using:)(v37, v41, v36);
    v35 = v81;
    if (v81)
    {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v39);
      result = v73(v25, v74);
      v31 = 0;
      v33 = 1;
LABEL_7:
      v34 = v77;
      goto LABEL_8;
    }
    v43 = type metadata accessor for Ratings(0);
    v44 = v76;
    JSONObject.subscript.getter(0x73676E69746172, 0xE700000000000000);
    v40(v41, v42, v39);
    sub_F1C0(&qword_3BED10, (void (*)(uint64_t))type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for Ratings);
    ExpressibleByJSON.init(tryDeserializing:using:)(v44, v41, v43);
    v35 = v81;
    if (v81)
    {
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v42, v39);
      result = v73(v25, v74);
      v31 = 0;
      v33 = 2;
      goto LABEL_7;
    }
    v45 = v25;
    v46 = v39;
    v47 = v72;
    v48 = JSONObject.subscript.getter(0x617A696C61636F6CLL, 0xEF79654B6E6F6974);
    v35 = JSONObject.string.getter(v48);
    v50 = v49;
    v51 = v47;
    v52 = v73;
    v53 = v74;
    v73((uint64_t)v51, v74);
    if (v50)
    {
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v42, v39);
      result = v52(v45, v53);
      v33 = 3;
    }
    else
    {
      v54 = v42;
      v55 = v71;
      v56 = JSONObject.subscript.getter(0x79726F6765746163, 0xE800000000000000);
      v35 = JSONObject.string.getter(v56);
      v50 = v57;
      v52((uint64_t)v55, v53);
      v58 = v46;
      if (!v50)
      {
        v59 = v70;
        v60 = JSONObject.subscript.getter(0x746963696C707865, 0xE800000000000000);
        v61 = (void (*)(char *, uint64_t))v52;
        v62 = JSONObject.BOOL.getter(v60);
        v61(v59, v53);
        if ((v62 & 1) != 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v54, v58);
          result = ((uint64_t (*)(uint64_t, uint64_t))v61)(v45, v53);
          v35 = 0;
          v31 = 0;
          v33 = 7;
          goto LABEL_7;
        }
        v63 = v69;
        v64 = JSONObject.subscript.getter(0x7246657461647075, 0xEF79636E65757165);
        v35 = JSONObject.string.getter(v64);
        v50 = v65;
        v61(v63, v53);
        v66 = v80;
        if (v50)
        {
          v67 = HIBYTE(v50) & 0xF;
          if ((v50 & 0x2000000000000000) == 0)
            v67 = v35 & 0xFFFFFFFFFFFFLL;
          if (v67)
          {
            (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v54, v58);
            result = ((uint64_t (*)(uint64_t, uint64_t))v61)(v45, v53);
            v33 = 5;
            goto LABEL_13;
          }
          swift_bridgeObjectRelease();
        }
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v54, v58);
        result = ((uint64_t (*)(uint64_t, uint64_t))v61)(v45, v53);
        v35 = 0;
        v33 = 0;
        v31 = 0xE000000000000000;
        goto LABEL_7;
      }
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v54, v46);
      result = v52(v45, v53);
      v33 = 4;
    }
LABEL_13:
    v34 = v77;
    v31 = v50;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
  result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v25, v7);
  v33 = 0;
  v34 = v77;
  v35 = v27;
LABEL_8:
  *(_QWORD *)v34 = v35;
  *(_QWORD *)(v34 + 8) = v31;
  *(_BYTE *)(v34 + 16) = v33;
  return result;
}

unint64_t sub_18EA44()
{
  unint64_t result;

  result = qword_3BED18;
  if (!qword_3BED18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HeaderModel.PrimaryArtwork.ArtworkType);
    atomic_store(result, (unint64_t *)&qword_3BED18);
  }
  return result;
}

unint64_t sub_18EA8C()
{
  unint64_t result;

  result = qword_3BED20;
  if (!qword_3BED20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HeaderModel.InterfaceStyle);
    atomic_store(result, (unint64_t *)&qword_3BED20);
  }
  return result;
}

uint64_t sub_18EAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return HeaderModel.MetadataComponent.init(deserializing:using:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for HeaderModel()
{
  return &type metadata for HeaderModel;
}

uint64_t sub_18EAF4()
{
  return type metadata accessor for HeaderModel.PrimaryArtwork(0);
}

uint64_t type metadata accessor for HeaderModel.PrimaryArtwork(uint64_t a1)
{
  uint64_t result;

  result = qword_3BED50;
  if (!qword_3BED50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeaderModel.PrimaryArtwork);
  return result;
}

void sub_18EB38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_2FA830;
  sub_5971C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t method lookup function for HeaderModel.PrimaryArtwork(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HeaderModel.PrimaryArtwork);
}

uint64_t dispatch thunk of HeaderModel.PrimaryArtwork.__allocating_init(deserializing:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HeaderModel.PrimaryArtwork.__allocating_init(artworkType:artwork:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 104))(a1 & 1);
}

uint64_t storeEnumTagSinglePayload for HeaderModel.PrimaryArtwork.ArtworkType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18EC2C + 4 * byte_2FA605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18EC60 + 4 * byte_2FA600[v4]))();
}

uint64_t sub_18EC60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18EC70);
  return result;
}

uint64_t sub_18EC7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18EC84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18EC88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18EC90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeaderModel.PrimaryArtwork.ArtworkType()
{
  return &type metadata for HeaderModel.PrimaryArtwork.ArtworkType;
}

uint64_t storeEnumTagSinglePayload for HeaderModel.InterfaceStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18ECF8 + 4 * byte_2FA60F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18ED2C + 4 * byte_2FA60A[v4]))();
}

uint64_t sub_18ED2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18ED34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18ED3CLL);
  return result;
}

uint64_t sub_18ED48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18ED50);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18ED54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18ED5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeaderModel.InterfaceStyle()
{
  return &type metadata for HeaderModel.InterfaceStyle;
}

uint64_t sub_18ED7C(uint64_t result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
      result = swift_bridgeObjectRetain(a2);
      break;
    case 1:
    case 2:
      result = swift_retain(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for HeaderModel.MetadataComponent(uint64_t a1)
{
  return sub_18EDC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_18EDC4(uint64_t result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
      result = swift_bridgeObjectRelease(a2);
      break;
    case 1:
    case 2:
      result = swift_release(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s8ShelfKit11HeaderModelO17MetadataComponentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18ED7C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for HeaderModel.MetadataComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18ED7C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_18EDC4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for HeaderModel.MetadataComponent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_18EDC4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeaderModel.MetadataComponent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeaderModel.MetadataComponent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 249;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_18EF68(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 6u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 7);
}

uint64_t sub_18EF80(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(_QWORD *)result = a2 - 7;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 7;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeaderModel.MetadataComponent()
{
  return &type metadata for HeaderModel.MetadataComponent;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.suggestedEntities()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch(sub_18EFC0, 0, 0);
}

uint64_t sub_18EFC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v0 + 80) = EpisodeEntity.EpisodeEntityQuery.objectGraph.getter();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v0 + 88) = v2;
  *v2 = v0;
  v2[1] = sub_18F044;
  return BaseObjectGraph.inject<A>(_:)(v0 + 16, v1, v1);
}

uint64_t sub_18F044()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_18F354;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 80));
    v4 = sub_18F0B0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_18F0B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v0[8] = 10;
  v3 = EpisodeEntity.EpisodeEntityQuery.objectGraph.getter();
  v0[13] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[14] = v4;
  v5 = sub_18F408();
  *v4 = v0;
  v4[1] = sub_18F170;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 7, v0 + 8, v3, &type metadata for FetchUpNextEpisodesIntent, v5, v1, v2);
}

uint64_t sub_18F170()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_18F388;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 104));
    v4 = sub_18F1DC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_18F1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 128) = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc(async function pointer to LibraryEntityQuery.fetchEntities(for:)[1]);
    *(_QWORD *)(v0 + 136) = v4;
    v5 = type metadata accessor for EpisodeEntity.EpisodeEntityQuery(0);
    v6 = sub_18F44C();
    *v4 = v0;
    v4[1] = sub_18F29C;
    return LibraryEntityQuery.fetchEntities(for:)(v2, v5, v6);
  }
}

uint64_t sub_18F29C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 136);
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_18F3C8;
  }
  else
  {
    *(_QWORD *)(v4 + 152) = a1;
    v6 = sub_18F310;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_18F310()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 152));
}

uint64_t sub_18F354()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F388()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 104));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F3C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_18F408()
{
  unint64_t result;

  result = qword_3BEDF0;
  if (!qword_3BEDF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FetchUpNextEpisodesIntent);
    atomic_store(result, (unint64_t *)&qword_3BEDF0);
  }
  return result;
}

unint64_t sub_18F44C()
{
  unint64_t result;

  result = qword_3BEDF8;
  if (!qword_3BEDF8)
  {
    type metadata accessor for EpisodeEntity.EpisodeEntityQuery(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeEntity.EpisodeEntityQuery);
    atomic_store(result, (unint64_t *)&qword_3BEDF8);
  }
  return result;
}

uint64_t EpisodeEntity.init(offer:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int *v21;
  uint64_t *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v68 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v3);
  v67 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v5);
  v66 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C40);
  __chkstk_darwin(v7);
  v65 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v60 = (uint64_t)&v52 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3D88);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  v64 = *a1;
  v72 = v64;
  v17 = sub_144B4();
  v18 = BinaryInteger.description.getter(&type metadata for UInt64, v17);
  v61 = v19;
  v62 = v18;
  v20 = (int *)type metadata accessor for EpisodeOffer(0);
  v21 = v20;
  v22 = (uint64_t *)((char *)a1 + v20[10]);
  v23 = (uint64_t *)((char *)a1 + v20[11]);
  v24 = v23[1];
  if (v24)
  {
    v25 = *v23;
    v58 = v24;
    v59 = v25;
  }
  else
  {
    v58 = 0xE000000000000000;
    v59 = 0;
  }
  v26 = v22[1];
  v57 = *v22;
  v27 = (char *)a1 + v20[6];
  v28 = type metadata accessor for ShowOffer(0);
  v29 = v28;
  v30 = &v27[*(int *)(v28 + 36)];
  v31 = *((_QWORD *)v30 + 1);
  v71 = v26;
  if (v31)
  {
    v32 = *(_QWORD *)v30;
    v55 = v31;
    v56 = v32;
  }
  else
  {
    v55 = 0xE000000000000000;
    v56 = 0;
  }
  v33 = &v27[*(int *)(v28 + 32)];
  v34 = *(_QWORD *)v33;
  v35 = *((_QWORD *)v33 + 1);
  v53 = *((_QWORD *)v27 + 1);
  v54 = v34;
  v69 = *((_QWORD *)v27 + 2);
  v70 = v35;
  v36 = type metadata accessor for Date(0);
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v63 = v16;
  v37(v16, 1, 1, v36);
  v38 = *(uint64_t *)((char *)a1 + v21[12]);
  if (v38)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = v13;
    LazyDate.value.getter(v13);
    swift_release(v38);
  }
  else
  {
    v37((char *)v13, 1, 1, v36);
    v39 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v40 = (char *)a1 + v21[19];
  if (v40[8])
    v41 = 0;
  else
    v41 = *(_QWORD *)v40;
  v42 = (uint64_t)a1 + v21[22];
  v43 = v60;
  sub_267BC(v42, v60, &qword_3B2C40);
  v44 = type metadata accessor for TranscriptRequestInformation(0);
  v45 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44) != 1;
  sub_18F8D8(v43);
  v46 = v66;
  sub_267BC((uint64_t)&v27[*(int *)(v29 + 28)], v66, &qword_3BEB70);
  v47 = (uint64_t)a1 + v21[7];
  v48 = v67;
  sub_267BC(v47, v67, &qword_3B4370);
  v49 = v65;
  sub_267BC(v42, v65, &qword_3B2C40);
  HIBYTE(v51) = v45;
  BYTE2(v51) = 0;
  LOWORD(v51) = 0;
  EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:author:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)(v62, v61, 0, 0, 0, v64, v57, v71, v59, v58, v56, v55, v54, v70, v53, v69, v63, v39, v41,
    v51,
    v46,
    0,
    0xF000000000000000,
    v48,
    v49);
  return sub_1E42C((uint64_t)a1);
}

uint64_t sub_18F8D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, __int16 a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, char, uint64_t, _WORD, uint64_t, uint64_t))(a12 + 64))(a1, a2, a3, a4, a5, a6, a7, a8 & 1, 0, 1, a9, a10 & 0xFF01, a11, a12);
}

uint64_t EpisodeControllerProtocol.contextMenuConfiguration(asPartOf:for:selectedModels:presentationSource:interactionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, void *, uint64_t, uint64_t))(a7 + 256))(a1, a2, a3, a4, a5, 0, &_swiftEmptyArrayStorage, a6, a7);
}

unint64_t sub_18F9A4()
{
  unint64_t result;

  result = qword_3BEE00;
  if (!qword_3BEE00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PreviewingPresentationHint);
    atomic_store(result, (unint64_t *)&qword_3BEE00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PreviewingPresentationHint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18FA34 + 4 * byte_2FA8B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18FA68 + 4 * byte_2FA8B0[v4]))();
}

uint64_t sub_18FA68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FA78);
  return result;
}

uint64_t sub_18FA84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FA8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18FA90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewingPresentationHint()
{
  return &type metadata for PreviewingPresentationHint;
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:reason:timestamp:waitForEngine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  LOBYTE(a10) = a10 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a14 + 64))(a1, a2, a3, a4, a5, a6, a7, a8 & 1, a9, a10, a11);
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:sender:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a7 + 80))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:sender:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:timestamp:sender:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a6 + 96))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 112))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.resetDark(offer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateFeed(podcast:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentStorePage(asPartOf:for:from:presentationHint:suppressMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 136))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:from:presentationHint:suppressMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 144))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:from:presentationHint:suppressMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 152))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentEpisodePage(asPartOf:for:and:from:presentationHint:suppressMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 160))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentShowPage(asPartOf:for:from:presentationHint:suppressMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 168))();
}

{
  return (*(uint64_t (**)(void))(a7 + 184))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentShowPage(asPartOf:for:from:presentationHint:suppressMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 176))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.episodeDetailViewController(graph:uuid:stationUuid:referenceTime:playerTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a11 + 192))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:podcastOffer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 200))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:podcastUuid:groupedEpisodeListType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v10;
  __int128 v11;
  _OWORD v13[4];
  char v14;

  v8 = *(_BYTE *)(a6 + 64);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))(a8 + 208);
  v10 = *(_OWORD *)(a6 + 16);
  v13[0] = *(_OWORD *)a6;
  v13[1] = v10;
  v11 = *(_OWORD *)(a6 + 48);
  v13[2] = *(_OWORD *)(a6 + 32);
  v13[3] = v11;
  v14 = v8;
  return v9(a1, a2, a3, a4, a5, v13);
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setEpisodeUserFilterForPodcast(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 216))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.presentContextActions(asPartOf:viewController:view:episodeUuid:stationUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 224))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.changeOrder(stations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.createNewStationContextMenu()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.canCreateContextMenu(asPartOf:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 248))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.contextMenuConfiguration(asPartOf:for:selectedModels:presentationSource:interactionContext:alwaysUseCellForContextMenuPreview:extraContextMenuElements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 256))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.contextMenuItems(asPartOf:for:presentationSource:interactionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 264))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.activityItemsConfiguration(asPartOf:for:selectedModels:presentationSource:interactionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 272))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.swipeActionsConfiguration(asPartOf:for:presentationSource:interactionContext:leading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 280))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.shareSheet(asPartOf:for:selectedModels:presentationSource:interactionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 288))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.contextMenuWillPerformPreviewAction(configuration:animator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 296))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.transcriptSelectionMenuItems(asPartOf:episodeUuid:selectedText:referenceStartTime:alignmentCoordinator:presentationSource:interactionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 312))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.transcriptSelectionMenuItems(asPartOf:episodeOffer:selectedText:referenceStartTime:alignmentCoordinator:presentationSource:interactionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 320))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.textForTranscriptSelectionCopying(episodeOffer:selectedText:referenceTime:playerTime:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(a8 + 328))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of EpisodeControllerProtocol.textForTranscriptSelectionCopying(episodeUUID:episodeTitle:podcastTitle:episodePubdate:selectedText:referenceTime:playerTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a14 + 336))(a1, a2, a3);
}

uint64_t dispatch thunk of EpisodeControllerProtocol.registerForPreviewing(asPartOf:viewController:view:presentationHint:previewModel:dataBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 352))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.registerForPreviewing(asPartOf:viewController:view:podcastUuid:presentationHint:previewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 360))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.registerForPreviewing(asPartOf:viewController:view:podcastOffer:presentationHint:previewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 368))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.registerForPreviewing(asPartOf:viewController:view:model:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 376))();
}

uint64_t dispatch thunk of EpisodeControllerProtocol.unregisterForPreviewing(viewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 392))();
}

uint64_t OAuthHUDViewHandler.spinnerIsActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v13[2];
  _BYTE v14[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_676C8();
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    v9 = v1 + 24;
    swift_beginAccess(v9, v14, 0, 0);
    sub_267BC(v9, (uint64_t)v13, &qword_3BEE08);
    if (v13[0])
      v10 = 0;
    else
      v10 = v13[1] == 1;
    v11 = !v10;
    sub_1459C((uint64_t)v13, &qword_3BEE08);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double OAuthHUDViewHandler.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = swift_allocObject(v1, 40, 7);
  result = 0.0;
  *(_OWORD *)(v3 + 24) = xmmword_2FA990;
  *(_QWORD *)(v3 + 16) = a1;
  return result;
}

uint64_t OAuthHUDViewHandler.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(v1 + 24) = xmmword_2FA990;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

Swift::Void __swiftcall OAuthHUDViewHandler.start()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  char v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v35 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActionMetrics(0);
  v34 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_676C8();
  *v14 = static OS_dispatch_queue.main.getter(v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v32 = v5;
  v33 = v2;
  if (qword_3B00E8 != -1)
LABEL_5:
    swift_once(&qword_3B00E8, sub_F9A18);
  v17 = xmmword_3B9510;
  v18 = byte_3B9520;
  v19 = qword_3B9528;
  v20 = byte_3B9530;
  v21 = type metadata accessor for LoadingAction(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = v22 + OBJC_IVAR____TtC8ShelfKit13LoadingAction_config;
  *(_OWORD *)v23 = v17;
  *(_BYTE *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v19;
  *(_BYTE *)(v23 + 32) = v20;
  v24 = (uint64_t (**)(uint64_t))(v22 + OBJC_IVAR____TtC8ShelfKit13LoadingAction_updateHandler);
  *v24 = sub_190194;
  v24[1] = (uint64_t (*)(uint64_t))v1;
  v25 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 1, 1, v25);
  swift_bridgeObjectRetain();
  v26 = swift_retain_n(v1, 2);
  v27 = static ActionMetrics.notInstrumented.getter(v26);
  UUID.init()(v27);
  v28 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v33);
  *(_QWORD *)(v22 + 16) = v28;
  *(_QWORD *)(v22 + 24) = v30;
  *(_QWORD *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 40) = 0;
  *(_BYTE *)(v22 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v22 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v7, v32);
  sub_23AB8((uint64_t)v10, v22 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  swift_release(v1);
  v31 = swift_retain();
  sub_190AA4(v31, v1, (void (*)(uint64_t))type metadata accessor for LoadingAction, &qword_3BEEB8);
  swift_release_n(v22, 2);
}

uint64_t sub_19013C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[24];
  _BYTE v5[16];

  sub_190FA4(a1, (uint64_t)v5);
  a2 += 24;
  swift_beginAccess(a2, v4, 33, 0);
  sub_190A5C((uint64_t)v5, a2);
  return swift_endAccess(v4);
}

uint64_t sub_190194(uint64_t a1)
{
  uint64_t v1;

  return sub_19013C(a1, v1);
}

Swift::Void __swiftcall OAuthHUDViewHandler.dismiss(success:)(Swift::Bool success)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(__int128 *, uint64_t, uint64_t);
  uint64_t Strong;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  _BYTE v45[24];
  _BYTE v46[8];
  uint64_t v47;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - v9;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_676C8();
  *v14 = static OS_dispatch_queue.main.getter(v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v2 += 24;
  swift_beginAccess(v2, v45, 0, 0);
  sub_267BC(v2, (uint64_t)&v40, &qword_3BEE08);
  if ((_QWORD)v40 || *((_QWORD *)&v40 + 1) != 1)
  {
    v22 = sub_1909EC((uint64_t)&v40, (uint64_t)v46);
    v23 = static Logger.purchases.getter(v22);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v26 = 67109120;
      LODWORD(v40) = success;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, (char *)&v40 + 4);
      _os_log_impl(&dword_0, v24, v25, "Dismissing spinner with OAuth success: %{BOOL}d", v26, 8u);
      swift_slowDealloc(v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (!success)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v46);
      if (Strong)
      {
        v32 = Strong;
        v37 = v47;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(ObjectType, v37);
        goto LABEL_15;
      }
LABEL_16:
      sub_190A28((uint64_t)v46);
      v44 = xmmword_2FA990;
      swift_beginAccess(v2, &v40, 33, 0);
      sub_190A5C((uint64_t)&v44, v2);
      swift_endAccess(&v40);
      return;
    }
    if (qword_3B00F0 == -1)
    {
LABEL_11:
      v27 = xmmword_3B9538;
      v28 = byte_3B9548;
      v29 = qword_3B9550;
      v30 = byte_3B9558;
      v31 = swift_unknownObjectWeakLoadStrong(v46);
      if (v31)
      {
        v32 = v31;
        v33 = v47;
        v34 = swift_getObjectType();
        v40 = v27;
        v41 = v28;
        v42 = v29;
        v43 = v30;
        v35 = *(void (**)(__int128 *, uint64_t, uint64_t))(v33 + 16);
        swift_bridgeObjectRetain();
        v35(&v40, v34, v33);
        swift_bridgeObjectRelease();
LABEL_15:
        swift_unknownObjectRelease(v32);
        goto LABEL_16;
      }
      goto LABEL_16;
    }
LABEL_18:
    swift_once(&qword_3B00F0, sub_F9B34);
    goto LABEL_11;
  }
  v17 = sub_1459C((uint64_t)&v40, &qword_3BEE08);
  v18 = static Logger.purchases.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "Dismiss called on HUDViewHandler but there is no view token.", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Void __swiftcall OAuthHUDViewHandler.displayAlert(title:description:)(Swift::String title, Swift::String_optional description)
{
  uint64_t *v2;
  uint64_t *v3;
  void *object;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t countAndFlagsBits;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  object = description.value._object;
  countAndFlagsBits = title._countAndFlagsBits;
  v38 = description.value._countAndFlagsBits;
  v5 = title._object;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (void **)((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_676C8();
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = _dispatchPreconditionTest(_:)(v15);
  v18 = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) != 0)
  {
    v35 = v8;
    static Logger.purchases.getter(v18);
    v19 = swift_bridgeObjectRetain_n(v5, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(12, -1);
      v33 = object;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc(32, -1);
      v34 = v3;
      v25 = v24;
      v40 = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v26 = countAndFlagsBits;
      v39 = sub_69298(countAndFlagsBits, (unint64_t)v5, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_bridgeObjectRelease_n(v5, 3);
      _os_log_impl(&dword_0, v20, v21, "Displaying OAuth alert with title: %s", v23, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      v27 = v25;
      v3 = v34;
      swift_slowDealloc(v27, -1, -1);
      v28 = v23;
      object = v33;
      swift_slowDealloc(v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v36);
    }
    else
    {

      swift_bridgeObjectRelease_n(v5, 2);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v36);
      v26 = countAndFlagsBits;
    }
    v29 = type metadata accessor for ArtworkModel(0);
    v30 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
    LOBYTE(v40) = 0;
    v31 = type metadata accessor for AlertAction(0);
    swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = AlertAction.init(title:message:isCancelable:buttonActions:style:artwork:presentationStyle:)(v26, (uint64_t)v5, v38, (uint64_t)object, 1, 0, &v40, v30, 0x20u);
    sub_190AA4(v32, v3, (void (*)(uint64_t))type metadata accessor for AlertAction, &qword_3B69D8);
    swift_release(v32);
  }
  else
  {
    __break(1u);
  }
}

uint64_t OAuthHUDViewHandler.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1459C(v0 + 24, &qword_3BEE08);
  return v0;
}

uint64_t OAuthHUDViewHandler.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1459C(v0 + 24, &qword_3BEE08);
  return swift_deallocClassInstance(v0, 40, 7);
}

void sub_19091C()
{
  OAuthHUDViewHandler.start()();
}

void sub_19093C(Swift::Bool a1)
{
  OAuthHUDViewHandler.dismiss(success:)(a1);
}

void sub_19095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OAuthHUDViewHandler.displayAlert(title:description:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3);
}

uint64_t sub_19097C()
{
  return OAuthHUDViewHandler.spinnerIsActive.getter() & 1;
}

uint64_t sub_1909A0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1909C4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1909EC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for LoadingAction.ViewToken(a2, a1);
  return a2;
}

uint64_t sub_190A28(uint64_t a1)
{
  destroy for LoadingAction.ViewToken();
  return a1;
}

uint64_t sub_190A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_190AA4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[32];
  uint64_t v61;
  _QWORD v62[4];
  _QWORD v63[6];

  v57 = *a2;
  v8 = type metadata accessor for OSLogger(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetricsBehavior(0);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v55 - v20;
  v63[3] = ((uint64_t (*)(_QWORD, __n128))a3)(0, v19);
  v63[4] = sub_109F30(a4, a3);
  v63[0] = a1;
  v22 = (void *)objc_opt_self(UIApplication);
  swift_retain();
  v23 = objc_msgSend(v22, "sharedApplication");
  v24 = objc_msgSend(v23, "delegate");

  if (!v24)
    goto LABEL_8;
  if ((objc_msgSend(v24, "respondsToSelector:", "window") & 1) == 0)
  {
    v25 = swift_unknownObjectRelease(v24);
    goto LABEL_8;
  }
  v26 = objc_msgSend(v24, "window");
  v25 = swift_unknownObjectRelease(v24);
  if (!v26)
  {
LABEL_8:
    v40 = static Logger.purchases.getter(v25);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_0, v41, v42, "Unable to present OAuth HUD because we could not get the current window.", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

    v44 = *(void (**)(char *, uint64_t))(v15 + 8);
    v45 = v21;
    goto LABEL_11;
  }
  v27 = objc_msgSend(v26, "rootViewController");
  if (!v27)
  {
    v47 = static Logger.purchases.getter(0);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_0, v48, v49, "Unable to present OAuth HUD because we could not get the root view controller.", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }

    v44 = *(void (**)(char *, uint64_t))(v15 + 8);
    v45 = v17;
LABEL_11:
    v44(v45, v14);
    return __swift_destroy_boxed_opaque_existential_1(v63);
  }
  v28 = v27;
  v29 = UIResponder.nearestActionRunner.getter();
  v31 = v30;

  if (v29)
  {
    type metadata accessor for ActionRunnerOptions(0);
    v33 = swift_retain();
    v34 = BaseObjectGraph.__allocating_init(_:)(v33);
    v62[3] = v57;
    v62[0] = a2;
    sub_267BC((uint64_t)v62, (uint64_t)v60, (uint64_t *)&unk_3BC540);
    v61 = 0;
    swift_retain();
    v35 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v60);
    sub_1459C((uint64_t)v60, &qword_3B18E8);
    swift_release(v34);
    sub_1459C((uint64_t)v62, (uint64_t *)&unk_3BC540);
    ObjectType = swift_getObjectType();
    v38 = v58;
    v37 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v13, enum case for ActionMetricsBehavior.fromAction(_:), v59);
    v39 = ActionRunner.perform(_:withMetrics:asPartOf:)(v63, (uint64_t)v13, v35, ObjectType, v31);

    swift_unknownObjectRelease(v29);
    swift_release(v35);

    swift_release(v39);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v37);
  }
  else
  {
    static OSLogger.actions.getter(v32);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
    v52 = type metadata accessor for LogMessage(0);
    v53 = swift_allocObject(v51, ((*(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v52 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v52 - 8) + 80) | 7);
    *(_OWORD *)(v53 + 16) = xmmword_2EA0D0;
    LogMessage.init(stringLiteral:)(0xD000000000000035, 0x8000000000312470);
    v54 = v56;
    Logger.error(_:)(v53, v56, &protocol witness table for OSLogger);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v54);
  }
  return __swift_destroy_boxed_opaque_existential_1(v63);
}

uint64_t type metadata accessor for OAuthHUDViewHandler()
{
  return objc_opt_self(_TtC8ShelfKit19OAuthHUDViewHandler);
}

uint64_t method lookup function for OAuthHUDViewHandler(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for OAuthHUDViewHandler);
}

uint64_t sub_190FA4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LoadingAction.ViewToken(a2, a1);
  return a2;
}

uint64_t sub_190FE0()
{
  return sub_19102C((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter) & 1;
}

uint64_t PaginatedPublisherPresenter.isPreparingNextPage.getter(uint64_t a1, uint64_t a2)
{
  return sub_191188(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter);
}

uint64_t sub_19100C()
{
  return sub_19102C((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage()) & 1;
}

uint64_t sub_19102C(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(*(_QWORD *)(v1 + 120) + OBJC_IVAR____TtC8ShelfKit16ShowListProvider_paginatedPublisher);
  swift_beginAccess(v3, &v8, 0, 0);
  v9 = *v3;
  if (v9)
  {
    swift_retain();
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
    v5 = sub_191A0C((unint64_t *)&qword_3B25F8, &qword_3B2600);
    v6 = a1(v4, v5);
    swift_release(v9);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1910DC(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess(v3 + 80, &v8, 0, 0);
  v9 = *(_QWORD *)(v3 + 80);
  if (v9)
  {
    swift_retain();
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
    v5 = sub_191A0C((unint64_t *)&qword_3B25F8, &qword_3B2600);
    v6 = a1(v4, v5);
    swift_release(v9);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

Swift::Bool __swiftcall PaginatedPublisherPresenter.shouldPrepareNextPage()()
{
  uint64_t v0;
  uint64_t v1;

  return sub_191188(v0, v1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage());
}

uint64_t sub_191188(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a2, a1, &protocol requirements base descriptor for PaginatedPublisherPresenter, &associated type descriptor for PaginatedPublisherPresenter.PaginatedContentPublisher);
  v7 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - v9;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    v12 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for PaginatedPublisherPresenter, &associated conformance descriptor for PaginatedPublisherPresenter.PaginatedPublisherPresenter.PaginatedContentPublisher: PaginatedPublisher);
    v12 = a3(AssociatedTypeWitness, AssociatedConformanceWitness);
    v8 = v11;
    v7 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

uint64_t sub_1912AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC8ShelfKit16ShowListProvider_paginatedPublisher);
  swift_beginAccess(v1, &v5, 0, 0);
  result = *v1;
  v6 = result;
  if (result)
  {
    swift_retain();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
    v4 = sub_191A0C((unint64_t *)&qword_3B25F8, &qword_3B2600);
    dispatch thunk of PaginatedPublisher.loadNextPage()(v3, v4);
    return swift_release(v6);
  }
  return result;
}

Swift::Void __swiftcall PaginatedPublisherPresenter.prepareNextPage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  v2 = v1;
  v3 = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v1, v0);
  v5 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v3, AssociatedTypeWitness, &protocol requirements base descriptor for PaginatedPublisherPresenter, &associated conformance descriptor for PaginatedPublisherPresenter.PaginatedPublisherPresenter.PaginatedContentPublisher: PaginatedPublisher);
    dispatch thunk of PaginatedPublisher.loadNextPage()(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191458()
{
  return sub_1910DC((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter) & 1;
}

uint64_t sub_191478()
{
  return sub_1910DC((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage()) & 1;
}

uint64_t sub_191498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess(v1 + 80, &v5, 0, 0);
  result = *(_QWORD *)(v1 + 80);
  v6 = result;
  if (result)
  {
    swift_retain();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
    v4 = sub_191A0C((unint64_t *)&qword_3B25F8, &qword_3B2600);
    dispatch thunk of PaginatedPublisher.loadNextPage()(v3, v4);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_191524(uint64_t a1, uint64_t a2)
{
  return sub_19153C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter);
}

uint64_t sub_191530(uint64_t a1, uint64_t a2)
{
  return sub_19153C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage());
}

uint64_t sub_19153C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess(v3 + 128, &v9, 0, 0);
  v10 = *(_QWORD *)(v3 + 128);
  if (v10)
  {
    swift_retain();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
    v6 = sub_191A0C((unint64_t *)&qword_3B25F8, &qword_3B2600);
    v7 = a3(v5, v6);
    swift_release(v10);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1915D8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess(v0 + 128, &v4, 0, 0);
  result = *(_QWORD *)(v0 + 128);
  v5 = result;
  if (result)
  {
    swift_retain();
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
    v3 = sub_191A0C((unint64_t *)&qword_3B25F8, &qword_3B2600);
    dispatch thunk of PaginatedPublisher.loadNextPage()(v2, v3);
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_191660(uint64_t a1, uint64_t a2)
{
  return sub_191678(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter);
}

uint64_t sub_19166C(uint64_t a1, uint64_t a2)
{
  return sub_191678(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage());
}

uint64_t sub_191678(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit16LibraryPresenter_updatedShowsPublisher);
  swift_retain();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E98);
  v6 = sub_191A0C(&qword_3B4EA0, &qword_3B4E98);
  LOBYTE(a3) = a3(v5, v6);
  swift_release(v8);
  return a3 & 1;
}

uint64_t sub_1916FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit16LibraryPresenter_updatedShowsPublisher);
  swift_retain();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E98);
  v2 = sub_191A0C(&qword_3B4EA0, &qword_3B4E98);
  dispatch thunk of PaginatedPublisher.loadNextPage()(v1, v2);
  return swift_release(v4);
}

uint64_t sub_191774(uint64_t a1, uint64_t a2)
{
  return sub_19178C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter);
}

uint64_t sub_191780(uint64_t a1, uint64_t a2)
{
  return sub_19178C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage());
}

uint64_t sub_19178C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess(v3 + 192, &v9, 0, 0);
  v10 = *(_QWORD *)(v3 + 192);
  if (v10)
  {
    swift_retain();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEEC0);
    v6 = sub_191A0C(&qword_3BEEC8, &qword_3BEEC0);
    v7 = a3(v5, v6);
    swift_release(v10);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_191828()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess(v0 + 192, &v4, 0, 0);
  result = *(_QWORD *)(v0 + 192);
  v5 = result;
  if (result)
  {
    swift_retain();
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEEC0);
    v3 = sub_191A0C(&qword_3BEEC8, &qword_3BEEC0);
    dispatch thunk of PaginatedPublisher.loadNextPage()(v2, v3);
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_1918B0(uint64_t a1, uint64_t a2)
{
  return sub_1918C8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter);
}

uint64_t sub_1918BC(uint64_t a1, uint64_t a2)
{
  return sub_1918C8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PaginatedPublisher.shouldPrepareNextPage());
}

uint64_t sub_1918C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess(v5, &v10, 0, 0);
  v11 = *v5;
  if (v11)
  {
    swift_retain();
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEEC0);
    v7 = sub_191A0C(&qword_3BEEC8, &qword_3BEEC0);
    v8 = a3(v6, v7);
    swift_release(v11);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_191974()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher, &v5, 0, 0);
  result = *v1;
  v6 = result;
  if (result)
  {
    swift_retain();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEEC0);
    v4 = sub_191A0C(&qword_3BEEC8, &qword_3BEEC0);
    dispatch thunk of PaginatedPublisher.loadNextPage()(v3, v4);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_191A0C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ModernShelfListBuilder.areAnyImportantShelvesStillLoading.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    v3 = 0;
    v4 = v2 - 1;
    do
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
      LOBYTE(v2) = Loadable.notLoaded.getter(v5);
      if ((v2 & 1) != 0)
        break;
    }
    while (v4 != v3++);
    swift_bridgeObjectRelease(v1);
  }
  return v2 & 1;
}

ShelfKit::ModernShelfListBuilder __swiftcall ModernShelfListBuilder.init()()
{
  uint64_t v0;
  ShelfKit::ModernShelfListBuilder result;

  *(_BYTE *)v0 = 0;
  *(_QWORD *)(v0 + 8) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 16) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t ModernShelfListBuilder.addShelf(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_42980(a1, (uint64_t)v6);
  v7 = type metadata accessor for ModernShelf(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 2, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
  Loadable.map<A>(_:)(&v15, sub_192A50, 0, v4, v8);
  v9 = v15;
  v10 = *(_QWORD **)(v2 + 16);
  sub_644D8(v15);
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_10E28(0, v10[2] + 1, 1, v10);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_10E28((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v10[v12 + 4] = v9;
  sub_64510(v9);
  *(_QWORD *)(v2 + 16) = v10;
  return sub_192C90((uint64_t)v6);
}

unint64_t ModernShelfListBuilder.addImportantShelf(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t result;
  unint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
  Loadable.map<A>(_:)(&v12, sub_192A50, 0, v2, v3);
  v4 = v12;
  v5 = *(_QWORD **)(v1 + 8);
  sub_644D8(v12);
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
    v5 = sub_10E28(0, v5[2] + 1, 1, v5);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_10E28((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v5[v7 + 4] = v4;
  *(_QWORD *)(v1 + 8) = v5;
  v8 = *(_QWORD **)(v1 + 16);
  sub_644D8(v4);
  if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
    v8 = sub_10E28(0, v8[2] + 1, 1, v8);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_10E28((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v10 + 1;
  v8[v10 + 4] = v4;
  result = sub_64510(v4);
  *(_QWORD *)(v1 + 16) = v8;
  return result;
}

unint64_t ModernShelfListBuilder.addShelf(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  unint64_t v9;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
  Loadable.map<A>(_:)(&v9, sub_192A50, 0, v2, v3);
  v4 = v9;
  v5 = *(_QWORD **)(v1 + 16);
  sub_644D8(v9);
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
    v5 = sub_10E28(0, v5[2] + 1, 1, v5);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_10E28((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v5[v7 + 4] = v4;
  result = sub_64510(v4);
  *(_QWORD *)(v1 + 16) = v5;
  return result;
}

uint64_t ModernShelfListBuilder.addImportantShelves(_:)(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD **)(v1 + 8);
  sub_644D8(a1);
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = sub_10E28(0, v3[2] + 1, 1, v3);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_10E28((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v3[v5 + 4] = a1;
  *(_QWORD *)(v1 + 8) = v3;
  v6 = *(_QWORD **)(v1 + 16);
  sub_644D8(a1);
  result = swift_isUniquelyReferenced_nonNull_native(v6);
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_10E28(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_10E28((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v6[2] = v9 + 1;
  v6[v9 + 4] = a1;
  *(_QWORD *)(v1 + 16) = v6;
  return result;
}

uint64_t ModernShelfListBuilder.hasImportantContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for ModernShelf(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 8);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (unint64_t *)(v5 + 32);
    v22 = *(_QWORD *)(v0 + 8);
    swift_bridgeObjectRetain_n(v5, 2);
    v8 = 1;
    v9 = v7;
    v20 = v7;
    v21 = v2;
    while (1)
    {
      v23 = *v9;
      v10 = v23;
      sub_644D8(v23);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
      Loadable.item.getter(v11);
      v12 = v24;
      if (v24)
      {
        v13 = *(_QWORD *)(v24 + 16);
        if (v13)
        {
          v14 = v24 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
          swift_bridgeObjectRetain(v24);
          v15 = *(_QWORD *)(v2 + 72);
          while (1)
          {
            sub_42980(v14, (uint64_t)v4);
            v16 = *(_QWORD *)(*(_QWORD *)&v4[*(int *)(v1 + 28)] + 16);
            sub_434E4((uint64_t)v4);
            if (v16)
              goto LABEL_14;
            v14 += v15;
            if (!--v13)
            {
              swift_bridgeObjectRelease(v12);
              v7 = v20;
              v2 = v21;
              break;
            }
          }
        }
        swift_bridgeObjectRelease(v12);
      }
      sub_64510(v10);
      if (v8 == v6)
        break;
      v9 = &v7[v8];
      if (__OFADD__(v8++, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRelease_n(v12, 2);
        sub_64510(v10);
        swift_bridgeObjectRelease_n(v22, 2);
        return 1;
      }
    }
    swift_bridgeObjectRelease_n(v22, 2);
  }
  return 0;
}

uint64_t ModernShelfListBuilder.buildList()()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *boxed_opaque_existential_2Tm;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  unint64_t v49;
  __int128 v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v1);
  v57 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v3);
  v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for ModernShelf(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - v9;
  v61 = *v0;
  v11 = *((_QWORD *)v0 + 2);
  v66 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
    return (uint64_t)v66;
  v56 = v8;
  v13 = v11 + 32;
  result = swift_bridgeObjectRetain(v11);
  v15 = 0;
  v16 = 0;
  v51 = 0x80000000003124B0;
  v50 = xmmword_2EA0D0;
  v58 = v12;
  v59 = v11;
  v60 = v11 + 32;
  v52 = v6;
  do
  {
    v17 = *(_QWORD *)(v13 + 8 * v15);
    v18 = v15 + 1;
    if (v17)
    {
      if (v17 != 1)
      {
        sub_644D8(*(_QWORD *)(v13 + 8 * v15));
        v19 = swift_bridgeObjectRetain(v17);
        sub_1E3E60(v19);
        v20 = *(_QWORD *)(v17 + 16);
        if (v20)
        {
          v21 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          swift_bridgeObjectRetain(v17);
          v22 = *(_QWORD *)(v6 + 72);
          do
          {
            sub_42980(v21, (uint64_t)v10);
            v23 = *(_QWORD *)(*(_QWORD *)&v10[v5[7]] + 16);
            sub_434E4((uint64_t)v10);
            if (v23)
            {
              sub_64510(v17);
              result = sub_64510(v17);
              v12 = v58;
              v11 = v59;
              v13 = v60;
              goto LABEL_4;
            }
            v21 += v22;
            --v20;
          }
          while (v20);
          sub_64510(v17);
          v12 = v58;
          v11 = v59;
        }
        result = sub_64510(v17);
        v13 = v60;
      }
      if ((v16 & 1) == 0)
      {
LABEL_4:
        if (v18 == v12)
          goto LABEL_31;
        v16 = 0;
        goto LABEL_6;
      }
LABEL_18:
      if (v61 || v18 == v12)
        goto LABEL_31;
      v16 = 1;
      goto LABEL_6;
    }
    if ((v16 & 1) != 0)
      goto LABEL_18;
    *(_QWORD *)&v62 = 0;
    *((_QWORD *)&v62 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease(*((_QWORD *)&v62 + 1));
    *(_QWORD *)&v62 = 0xD000000000000013;
    *((_QWORD *)&v62 + 1) = v51;
    v65 = v15;
    v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v54 = *((_QWORD *)&v62 + 1);
    v55 = v62;
    v26 = (char *)v56 + v5[5];
    v27 = type metadata accessor for Header(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = v50;
    v30 = type metadata accessor for EmptyModel(0);
    *(_QWORD *)(v29 + 56) = v30;
    *(_QWORD *)(v29 + 64) = sub_192CD0();
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((_QWORD *)(v29 + 32));
    v32 = (char *)boxed_opaque_existential_2Tm + *(int *)(v30 + 20);
    v33 = type metadata accessor for ImpressionMetrics(0);
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v34(v32, 1, 1, v33);
    *boxed_opaque_existential_2Tm = 0x49676E6964616F6CLL;
    boxed_opaque_existential_2Tm[1] = 0xEB000000006D6574;
    v35 = type metadata accessor for URL(0);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
    v37 = (uint64_t)v53;
    v36(v53, 1, 1, v35);
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    v34(v57, 1, 1, v33);
    v38 = v56;
    v39 = v5[8];
    *((_BYTE *)v56 + v39) = 3;
    v40 = (uint64_t)v38 + v5[9];
    v36((char *)v40, 1, 1, v35);
    v41 = v54;
    *v38 = v55;
    v38[1] = v41;
    v42 = (char *)v38 + v5[6];
    *(_WORD *)v42 = 34;
    *((_WORD *)v42 + 3) = 256;
    *(_DWORD *)(v42 + 2) = 0;
    *((_QWORD *)v42 + 1) = 1;
    *(_QWORD *)((char *)v38 + v5[7]) = v29;
    v43 = v41;
    swift_bridgeObjectRetain(v41);
    sub_15B8C(v37, v40);
    *((_BYTE *)v38 + v5[10]) = 1;
    *((_BYTE *)v38 + v5[11]) = 0;
    v44 = (uint64_t)v38 + v5[12];
    if (*((_QWORD *)&v63 + 1))
    {
      sub_F4D8(&v62, v44);
    }
    else
    {
      v45 = (unint64_t)v63;
      *(_OWORD *)v44 = v62;
      *(_OWORD *)(v44 + 16) = v45;
      *(_QWORD *)(v44 + 32) = v64;
    }
    sub_23AB8((uint64_t)v57, (uint64_t)v38 + v5[13]);
    swift_bridgeObjectRelease(v43);
    *((_BYTE *)v38 + v39) = 3;
    v46 = (unint64_t)v66;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
    v6 = v52;
    v11 = v59;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v46 = sub_10CD4(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
    v12 = v58;
    v49 = *(_QWORD *)(v46 + 16);
    v48 = *(_QWORD *)(v46 + 24);
    if (v49 >= v48 >> 1)
      v46 = sub_10CD4(v48 > 1, v49 + 1, 1, v46);
    *(_QWORD *)(v46 + 16) = v49 + 1;
    result = sub_15C18((uint64_t)v38, v46+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v49);
    v66 = (_QWORD *)v46;
    if ((v61 & 1) != 0 || v18 == v12)
    {
LABEL_31:
      swift_bridgeObjectRelease(v11);
      return (uint64_t)v66;
    }
    v16 = 1;
    v13 = v60;
LABEL_6:
    v15 = v18;
  }
  while (v18 < *(_QWORD *)(v11 + 16));
  __break(1u);
  return result;
}

uint64_t ModernShelfListBuilder.addShelves(_:)(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  sub_644D8(a1);
  result = swift_isUniquelyReferenced_nonNull_native(v3);
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_10E28(0, v3[2] + 1, 1, v3);
    v3 = (_QWORD *)result;
  }
  v6 = v3[2];
  v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    result = (uint64_t)sub_10E28((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    v3 = (_QWORD *)result;
  }
  v3[2] = v6 + 1;
  v3[v6 + 4] = a1;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t ModernShelfListBuilder.hasContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for ModernShelf(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (unint64_t *)(v5 + 32);
    v22 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain_n(v5, 2);
    v8 = 1;
    v9 = v7;
    v20 = v7;
    v21 = v2;
    while (1)
    {
      v23 = *v9;
      v10 = v23;
      sub_644D8(v23);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
      Loadable.item.getter(v11);
      v12 = v24;
      if (v24)
      {
        v13 = *(_QWORD *)(v24 + 16);
        if (v13)
        {
          v14 = v24 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
          swift_bridgeObjectRetain();
          v15 = *(_QWORD *)(v2 + 72);
          while (1)
          {
            sub_42980(v14, (uint64_t)v4);
            v16 = *(_QWORD *)(*(_QWORD *)&v4[*(int *)(v1 + 28)] + 16);
            sub_434E4((uint64_t)v4);
            if (v16)
              goto LABEL_14;
            v14 += v15;
            if (!--v13)
            {
              swift_bridgeObjectRelease();
              v7 = v20;
              v2 = v21;
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      sub_64510(v10);
      if (v8 == v6)
        break;
      v9 = &v7[v8];
      if (__OFADD__(v8++, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRelease_n(v12, 2);
        sub_64510(v10);
        swift_bridgeObjectRelease_n(v22, 2);
        return 1;
      }
    }
    swift_bridgeObjectRelease_n(v22, 2);
  }
  return 0;
}

uint64_t ModernShelfListBuilder.areAnyShelvesStillLoading.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    v3 = v1 - 1;
    do
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
      LOBYTE(v1) = Loadable.notLoaded.getter(v4);
      if ((v1 & 1) != 0)
        break;
    }
    while (v3 != v2++);
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t ModernShelfListBuilder.addImportantShelf(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_42980(a1, (uint64_t)v4);
  v5 = type metadata accessor for ModernShelf(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 2, v5);
  ModernShelfListBuilder.addImportantShelf(_:)();
  return sub_192C90((uint64_t)v4);
}

Swift::Void __swiftcall ModernShelfListBuilder.addImportantShelves(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD **)(v1 + 8);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = sub_10E28(0, v3[2] + 1, 1, v3);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_10E28((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v3[v5 + 4] = a1._rawValue;
  *(_QWORD *)(v1 + 8) = v3;
  v6 = *(_QWORD **)(v1 + 16);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
    v6 = sub_10E28(0, v6[2] + 1, 1, v6);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_10E28((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v6[v8 + 4] = a1._rawValue;
  *(_QWORD *)(v1 + 16) = v6;
}

uint64_t sub_192B6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A48);
  v5 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v4, v8 + v6, v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_2EA0D0;
  result = sub_42980(a1, v9 + v8);
  *a2 = v9;
  return result;
}

Swift::Void __swiftcall ModernShelfListBuilder.addShelves(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD **)(v1 + 16);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = sub_10E28(0, v3[2] + 1, 1, v3);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_10E28((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v3[v5 + 4] = a1._rawValue;
  *(_QWORD *)(v1 + 16) = v3;
}

uint64_t sub_192C90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_192CD0()
{
  unint64_t result;

  result = qword_3BB958;
  if (!qword_3BB958)
  {
    type metadata accessor for EmptyModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyModel);
    atomic_store(result, (unint64_t *)&qword_3BB958);
  }
  return result;
}

uint64_t destroy for ModernShelfListBuilder(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t _s8ShelfKit22ModernShelfListBuilderVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for ModernShelfListBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t assignWithTake for ModernShelfListBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for ModernShelfListBuilder()
{
  return &type metadata for ModernShelfListBuilder;
}

uint64_t static SearchContent.emptyResults.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  static GroupedSearchResultsPage.empty.getter(a1);
  v2 = type metadata accessor for SearchContent(0);
  return swift_storeEnumTagMultiPayload(a1, v2, 4);
}

uint64_t type metadata accessor for SearchContent(uint64_t a1)
{
  uint64_t result;

  result = qword_3BEF40;
  if (!qword_3BEF40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchContent);
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = *a2;
        swift_errorRetain(*a2);
        v10 = a2[1];
        v9 = a2[2];
        *a1 = v8;
        a1[1] = v10;
        a1[2] = v9;
        swift_retain();
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v13 = type metadata accessor for PageID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for ModernPage(0);
        v15 = *(int *)(v14 + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        *(_QWORD *)((char *)a1 + *(int *)(v14 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 24));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v19 = type metadata accessor for PageID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = type metadata accessor for ModernPage(0);
        v21 = *(int *)(v20 + 20);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        *(_QWORD *)((char *)a1 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v20 + 24));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v26 = type metadata accessor for PageID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        v27 = type metadata accessor for GroupedSearchResultsPage(0);
        *(_QWORD *)((char *)a1 + *(int *)(v27 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v27 + 20));
        v28 = *(int *)(v27 + 24);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = type metadata accessor for PageMetrics(0);
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SearchContent(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      swift_errorRelease(*a1);
      result = swift_release(a1[2]);
      break;
    case 1:
    case 2:
      v4 = type metadata accessor for PageID(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = (char *)a1 + *(int *)(type metadata accessor for ModernPage(0) + 20);
      v6 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      goto LABEL_4;
    case 3:
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      v7 = type metadata accessor for PageID(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      v8 = type metadata accessor for GroupedSearchResultsPage(0);
      swift_bridgeObjectRelease();
      v9 = (char *)a1 + *(int *)(v8 + 24);
      v10 = type metadata accessor for PageMetrics(0);
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for SearchContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = *a2;
      swift_errorRetain(*a2);
      v8 = a2[1];
      v7 = a2[2];
      *a1 = v6;
      a1[1] = v8;
      a1[2] = v7;
      swift_retain();
      v9 = a1;
      v10 = a3;
      v11 = 0;
      goto LABEL_8;
    case 1u:
      v12 = type metadata accessor for PageID(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = type metadata accessor for ModernPage(0);
      v14 = *(int *)(v13 + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 24));
      swift_bridgeObjectRetain();
      v9 = a1;
      v10 = a3;
      v11 = 1;
      goto LABEL_8;
    case 2u:
      v18 = type metadata accessor for PageID(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      v19 = type metadata accessor for ModernPage(0);
      v20 = *(int *)(v19 + 20);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 24));
      swift_bridgeObjectRetain();
      v9 = a1;
      v10 = a3;
      v11 = 2;
      goto LABEL_8;
    case 3u:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      swift_bridgeObjectRetain();
      v9 = a1;
      v10 = a3;
      v11 = 3;
      goto LABEL_8;
    case 4u:
      v25 = type metadata accessor for PageID(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
      v26 = type metadata accessor for GroupedSearchResultsPage(0);
      *(_QWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v26 + 20));
      v27 = *(int *)(v26 + 24);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = type metadata accessor for PageMetrics(0);
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      v31(v28, v29, v30);
      v9 = a1;
      v10 = a3;
      v11 = 4;
LABEL_8:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for SearchContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1936E4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = *a2;
        swift_errorRetain(*a2);
        *a1 = v6;
        v7 = a2[2];
        a1[1] = a2[1];
        a1[2] = v7;
        swift_retain();
        v8 = a1;
        v9 = a3;
        v10 = 0;
        goto LABEL_9;
      case 1u:
        v11 = type metadata accessor for PageID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v12 = type metadata accessor for ModernPage(0);
        v13 = *(int *)(v12 + 20);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        *(_QWORD *)((char *)a1 + *(int *)(v12 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 24));
        swift_bridgeObjectRetain();
        v8 = a1;
        v9 = a3;
        v10 = 1;
        goto LABEL_9;
      case 2u:
        v17 = type metadata accessor for PageID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = type metadata accessor for ModernPage(0);
        v19 = *(int *)(v18 + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        *(_QWORD *)((char *)a1 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v18 + 24));
        swift_bridgeObjectRetain();
        v8 = a1;
        v9 = a3;
        v10 = 2;
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v8 = a1;
        v9 = a3;
        v10 = 3;
        goto LABEL_9;
      case 4u:
        v23 = type metadata accessor for PageID(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        v24 = type metadata accessor for GroupedSearchResultsPage(0);
        *(_QWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 20));
        v25 = *(int *)(v24 + 24);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = type metadata accessor for PageMetrics(0);
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        v8 = a1;
        v9 = a3;
        v10 = 4;
LABEL_9:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1936E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for SearchContent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 4:
      v13 = type metadata accessor for PageID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = type metadata accessor for GroupedSearchResultsPage(0);
      *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
      v15 = *(int *)(v14 + 24);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload(a1, a3, 4);
      break;
    case 2:
      v19 = type metadata accessor for PageID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = type metadata accessor for ModernPage(0);
      v21 = *(int *)(v20 + 20);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      *(_QWORD *)&a1[*(int *)(v20 + 24)] = *(_QWORD *)&a2[*(int *)(v20 + 24)];
      swift_storeEnumTagMultiPayload(a1, a3, 2);
      break;
    case 1:
      v7 = type metadata accessor for PageID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for ModernPage(0);
      v9 = *(int *)(v8 + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for PageMetrics(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      *(_QWORD *)&a1[*(int *)(v8 + 24)] = *(_QWORD *)&a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SearchContent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1936E4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 4:
        v13 = type metadata accessor for PageID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = type metadata accessor for GroupedSearchResultsPage(0);
        *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
        v15 = *(int *)(v14 + 24);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 2:
        v19 = type metadata accessor for PageID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = type metadata accessor for ModernPage(0);
        v21 = *(int *)(v20 + 20);
        v22 = &a1[v21];
        v23 = &a2[v21];
        v24 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        *(_QWORD *)&a1[*(int *)(v20 + 24)] = *(_QWORD *)&a2[*(int *)(v20 + 24)];
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 1:
        v7 = type metadata accessor for PageID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = type metadata accessor for ModernPage(0);
        v9 = *(int *)(v8 + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = type metadata accessor for PageMetrics(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        *(_QWORD *)&a1[*(int *)(v8 + 24)] = *(_QWORD *)&a2[*(int *)(v8 + 24)];
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_193AD8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v5 = &unk_2FAAF8;
  result = type metadata accessor for ModernPage(319);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(result - 8) + 64;
    v7 = v6;
    v8 = &unk_2FAB10;
    result = type metadata accessor for GroupedSearchResultsPage(319);
    if (v4 <= 0x3F)
    {
      v9 = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 5, &v5);
      return 0;
    }
  }
  return result;
}

uint64_t Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;

  v32 = a7;
  v33 = a8;
  v31 = a6;
  v35 = a12;
  v34 = a11;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    UUID.init()(v20);
    a1 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    a2 = v23;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v24 = v31;
  a9[4] = a5;
  a9[5] = v24;
  v25 = v33;
  a9[6] = v32;
  a9[7] = v25;
  sub_267BC(a10, (uint64_t)(a9 + 8), &qword_3B0C50);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E88);
  v27 = swift_allocObject(v26, 24, 7);
  *(_DWORD *)(v27 + 20) = 0;
  *(_BYTE *)(v27 + 16) = v34 & 1;
  sub_1459C(a10, &qword_3B0C50);
  a9[13] = v27;
  v28 = type metadata accessor for Information(0);
  return sub_23AB8(v35, (uint64_t)a9 + *(int *)(v28 + 40));
}

uint64_t type metadata accessor for Information(uint64_t a1)
{
  uint64_t result;

  result = qword_3BEFE0;
  if (!qword_3BEFE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Information);
  return result;
}

uint64_t Information.clickAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + 64, a1, &qword_3B0C50);
}

uint64_t Information.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Information(0);
  return sub_267BC(v1 + *(int *)(v3 + 40), a1, (uint64_t *)&unk_3B8790);
}

uint64_t sub_193D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_267BC(v2 + *(int *)(a1 + 40), a2, (uint64_t *)&unk_3B8790);
}

uint64_t Information.expanded.getter()
{
  uint64_t v0;
  uint64_t var1;

  OSAllocatedUnfairLock.current.getter(&var1, *(_QWORD *)(v0 + 104), &type metadata for Bool);
  return var1;
}

void sub_193DC0(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v2 = *(os_unfair_lock_s **)(a2 + 104);
  v3 = v2 + 4;
  v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_195030(v3);
  os_unfair_lock_unlock(v4);
}

void Information.expanded.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 104);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  *(_BYTE *)(v3 + 16) = a1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
}

void (*Information.expanded.modify(uint64_t a1))(_BYTE *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  OSAllocatedUnfairLock.current.getter((_QWORD *)(a1 + 9), *(_QWORD *)(v1 + 104), &type metadata for Bool);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_193E98;
}

void sub_193E98(_BYTE *a1)
{
  char v1;
  uint64_t v2;

  v1 = a1[8];
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  *(_BYTE *)(v2 + 16) = v1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
}

uint64_t Information.clickSender.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *boxed_opaque_existential_2Tm;

  a1[3] = type metadata accessor for Information(0);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a1);
  return sub_193F10(v1, (uint64_t)boxed_opaque_existential_2Tm);
}

uint64_t sub_193F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Information(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_193F54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *boxed_opaque_existential_2Tm;

  a2[3] = a1;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return sub_193F10(v2, (uint64_t)boxed_opaque_existential_2Tm);
}

uint64_t Information.init(deserializing:using:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;

  v83 = a2;
  v76 = a3;
  v4 = type metadata accessor for JSONContext(0);
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  __chkstk_darwin(v4);
  v73 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  v7 = __chkstk_darwin(v6);
  v75 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v77 = (uint64_t)&v65 - v9;
  v10 = type metadata accessor for JSONObject(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v74 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v65 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v65 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v65 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v65 - v23;
  v25 = JSONObject.subscript.getter(25705, 0xE200000000000000);
  v26 = JSONObject.string.getter(v25);
  v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v28 = v24;
  v30 = v29;
  v27(v28, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v22, a1, v10);
  if (v30)
  {
    v72 = v26;
  }
  else
  {
    v31 = JSONObject.subscript.getter(0x696E55666C656873, 0xED00006449657571);
    v72 = JSONObject.string.getter(v31);
    v30 = v32;
    v27(v19, v10);
  }
  v27(v22, v10);
  v33 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v34 = JSONObject.string.getter(v33);
  v36 = v35;
  v27(v16, v10);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    v48 = type metadata accessor for JSONError(0);
    v49 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v48, v49, 0, 0);
    v51 = v50;
    v52 = type metadata accessor for Information(0);
    *v51 = 0x656C746974;
    v51[1] = 0xE500000000000000;
    v51[2] = v52;
    v47 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v51, enum case for JSONError.missingProperty(_:), v48);
    v40 = v83;
    goto LABEL_8;
  }
  v70 = v34;
  v71 = v36;
  v37 = JSONObject.subscript.getter(0x7470697263736564, 0xEB000000006E6F69);
  v69 = JSONObject.string.getter(v37);
  v39 = v38;
  v27(v19, v10);
  JSONObject.subscript.getter(0x6E6F69746361, 0xE600000000000000);
  v40 = v83;
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v19, v83);
  v27(v19, v10);
  v68 = v39;
  if (!(v39 | Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = type metadata accessor for JSONError(0);
    v43 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v42, v43, 0, 0);
    v45 = v44;
    v46 = type metadata accessor for Information(0);
    *v45 = 0x7470697263736564;
    v45[1] = 0xEB000000006E6F69;
    v45[2] = v46;
    v47 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v45, enum case for JSONError.missingProperty(_:), v42);
LABEL_8:
    swift_willThrow(v47);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v40, v79);
    return ((uint64_t (*)(char *, uint64_t))v27)(a1, v10);
  }
  v67 = v30;
  v54 = JSONObject.subscript.getter(0x656C746974627573, 0xE800000000000000);
  v55 = JSONObject.string.getter(v54);
  v65 = v56;
  v66 = v55;
  v27(v19, v10);
  v57 = type metadata accessor for ImpressionMetrics(0);
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
  v58 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v73, v40, v79);
  ExpressibleByJSON.init(tryDeserializing:using:)(v19, v58, v57);
  v59 = v71;
  if (Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0)
  {
    *((_QWORD *)&v81 + 1) = type metadata accessor for Action(0);
    v82 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v80 = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  }
  else
  {
    v82 = 0;
    v80 = 0u;
    v81 = 0u;
  }
  swift_retain(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
  v60 = v74;
  v61 = JSONObject.subscript.getter(0x6465646E61707865, 0xE800000000000000);
  v62 = JSONObject.BOOL.getter(v61);
  v27(v60, v10);
  LOBYTE(v60) = v62 & 1;
  v63 = v77;
  v64 = v75;
  sub_267BC(v77, v75, (uint64_t *)&unk_3B8790);
  Information.init(id:title:subtitle:description:clickAction:expanded:impressionMetrics:)(v72, v67, v70, v59, v66, v65, v69, v68, v76, (uint64_t)&v80, v60, v64);
  swift_release(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v83, v79);
  v27(a1, v10);
  return sub_1459C(v63, (uint64_t *)&unk_3B8790);
}

uint64_t sub_1945A0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return Information.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_1945B4(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3BEF78, (void (*)(uint64_t))type metadata accessor for Information, (uint64_t)&protocol conformance descriptor for Information);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1945F0(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3BEF80, (void (*)(uint64_t))type metadata accessor for Information, (uint64_t)&protocol conformance descriptor for Information);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19462C()
{
  return sub_F1C0(&qword_3BEF80, (void (*)(uint64_t))type metadata accessor for Information, (uint64_t)&protocol conformance descriptor for Information);
}

_QWORD *sub_194658@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = OSAllocatedUnfairLock.current.getter(&v4, *(_QWORD *)(a1 + 104), &type metadata for Bool);
  *a2 = v4;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Information(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2 + 8;
    v12 = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      v13 = a2[12];
      *(_QWORD *)(a1 + 88) = v12;
      *(_QWORD *)(a1 + 96) = v13;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 64, (uint64_t)(a2 + 8), v12);
    }
    else
    {
      v15 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *v11;
      *(_OWORD *)(a1 + 80) = v15;
      *(_QWORD *)(a1 + 96) = a2[12];
    }
    *(_QWORD *)(a1 + 104) = a2[13];
    v16 = *(int *)(a3 + 40);
    v17 = (void *)(a1 + v16);
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for ImpressionMetrics(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    swift_retain();
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t destroy for Information(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[11])
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_release(a1[13]);
  v4 = (char *)a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for Information(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v7;
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v8;
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v9;
  v10 = a2 + 8;
  v11 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = a2[12];
    *(_QWORD *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v11 - 8))(a1 + 64, v10, v11);
  }
  else
  {
    v13 = *((_OWORD *)v10 + 1);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 80) = v13;
    *(_QWORD *)(a1 + 96) = v10[4];
  }
  *(_QWORD *)(a1 + 104) = a2[13];
  v14 = *(int *)(a3 + 40);
  v15 = (void *)(a1 + v14);
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for ImpressionMetrics(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_retain();
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for Information(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + 64), (_QWORD *)(a2 + 64));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 64));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 64, a2 + 64);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
LABEL_8:
  v9 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release(v9);
  v10 = *(int *)(a3 + 40);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_13:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for Information(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  v8 = *(int *)(a3 + 40);
  v9 = (const void *)(a2 + v8);
  v10 = (void *)(a1 + v8);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v10, v9, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for Information(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 64));
  v10 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v11);
  v12 = *(int *)(a3 + 40);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_8;
  }
  if (v19)
  {
LABEL_8:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Information(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_194E94);
}

uint64_t sub_194E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Information(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_194F20);
}

uint64_t sub_194F20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_194F98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_2FAC30;
  v4[1] = &unk_2FAC30;
  v4[2] = &unk_2FAC48;
  v4[3] = &unk_2FAC48;
  v4[4] = &unk_2FAC60;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_34090(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

_BYTE *sub_195030(_BYTE *result)
{
  uint64_t v1;

  *result = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t LibraryShowPresenter.interactionContextPage.getter@<X0>(uint64_t a1@<X8>)
{
  return LibraryShowProvider.interactionContextPage.getter(a1);
}

uint64_t LibraryShowPresenter.pageContent.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8ShelfKit19LibraryShowProvider_pageContent));
}

_QWORD *LibraryShowPresenter.__allocating_init(asPartOf:with:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v5;

  swift_allocObject(v2, 80, 7);
  v5 = sub_1953F4(a1, a2);
  swift_release(a1);
  return v5;
}

_QWORD *LibraryShowPresenter.init(asPartOf:with:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;

  v3 = sub_1953F4(a1, a2);
  swift_release(a1);
  return v3;
}

Swift::Void __swiftcall LibraryShowPresenter.viewDidLoad()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30[24];
  char v31[24];

  v1 = v0;
  v2 = v0[5];
  swift_beginAccess(v1 + 2, v31, 0, 0);
  v3 = v1[2];
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC8ShelfKit19LibraryShowProvider_showDetailFetchFailedCallback);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit19LibraryShowProvider_showDetailFetchFailedCallback, v30, 1, 0);
  v5 = *v4;
  v6 = v4[1];
  *v4 = (uint64_t)sub_72810;
  v4[1] = v3;
  swift_retain();
  sub_327A0(v5, v6);
  LibraryShowProvider.loadPageContent()();
  KeyPath = swift_getKeyPath(&unk_2FAC80);
  v8 = swift_getKeyPath(&unk_2FACA8);
  static Published.subscript.getter(&v26, v2, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = v26;
  if (v26)
  {
    v10 = *(_QWORD *)(v26 + 56);
    if (v10)
    {
      v26 = *(_QWORD *)(v26 + 48);
      v27 = v10;
      v28 = 1;
      v29 = 2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 5;
    }
    CurrentValueSubject.value.setter(&v26);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8800);
    v14 = type metadata accessor for HeaderButtonItem(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = *(unsigned __int8 *)(v15 + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject(v13, v18 + 2 * v16, v17 | 7);
    *(_OWORD *)(v19 + 16) = xmmword_2EA080;
    v20 = (_QWORD *)(v19 + v18);
    v21 = v1[3];
    v22 = v1[4];
    *v20 = v21;
    v20[1] = v22;
    v23 = type metadata accessor for FollowButtonPresenter.Data(0);
    swift_storeEnumTagMultiPayload(v19 + v18, v23, 0);
    swift_storeEnumTagMultiPayload(v19 + v18, v14, 3);
    v24 = (uint64_t *)(v19 + v18 + v16);
    swift_bridgeObjectRetain();
    v25 = PodcastDetail.lockup.getter();
    v24[3] = type metadata accessor for LibraryShowLockup(0);
    v24[4] = sub_726D8(&qword_3BF030, 255, (void (*)(uint64_t))type metadata accessor for LibraryShowLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
    *v24 = v25;
    swift_storeEnumTagMultiPayload(v24, v14, 5);
    v26 = v19;
    CurrentValueSubject.send(_:)();
    swift_bridgeObjectRelease();
    v12 = v9;
  }
  else
  {
    v11 = v1[2];
    LOBYTE(v26) = 1;
    swift_retain();
    CurrentValueSubject.send(_:)();
    v12 = v11;
  }
  swift_release(v12);
}

_QWORD *LibraryShowPresenter.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  return v0;
}

uint64_t LibraryShowPresenter.__deallocating_deinit()
{
  uint64_t v0;

  LibraryShowPresenter.deinit();
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1953CC@<X0>(uint64_t a1@<X8>)
{
  return LibraryShowProvider.interactionContextPage.getter(a1);
}

_QWORD *sub_1953F4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  char v14;

  v4 = *a2;
  v5 = a2[1];
  LOBYTE(v12[0]) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B20D0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v2[2] = CurrentValueSubject.init(_:)(v12);
  v12[0] = _swiftEmptyArrayStorage;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8780);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v2[6] = CurrentValueSubject.init(_:)(v12);
  v12[0] = 0;
  v12[1] = 0;
  v13 = 0;
  v14 = 5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8770);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v2[7] = CurrentValueSubject.init(_:)(v12);
  LOBYTE(v12[0]) = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2770);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v2[8] = CurrentValueSubject.init(_:)(v12);
  v2[9] = a1;
  v2[3] = v4;
  v2[4] = v5;
  v10 = type metadata accessor for LibraryShowProvider(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  swift_retain();
  swift_bridgeObjectRetain();
  v2[5] = sub_DC570(a1, v4, v5);
  return v2;
}

uint64_t sub_195544(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_726D8(&qword_3BF0F8, a2, (void (*)(uint64_t))type metadata accessor for LibraryShowPresenter, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for LibraryShowPresenter()
{
  return objc_opt_self(_TtC8ShelfKit20LibraryShowPresenter);
}

uint64_t sub_1955A0(uint64_t a1, uint64_t a2)
{
  return sub_726D8(&qword_3BF100, a2, (void (*)(uint64_t))type metadata accessor for LibraryShowPresenter, (uint64_t)&protocol conformance descriptor for LibraryShowPresenter);
}

uint64_t method lookup function for LibraryShowPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LibraryShowPresenter);
}

uint64_t dispatch thunk of LibraryShowPresenter.__allocating_init(asPartOf:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for LibraryShowPresenter.Configuration()
{
  return &type metadata for LibraryShowPresenter.Configuration;
}

uint64_t MarkAsPlayedEpisodeAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MarkAsPlayedEpisodeAction(0) + 20);
  v4 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MarkAsPlayedEpisodeAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3BF238;
  if (!qword_3BF238)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MarkAsPlayedEpisodeAction);
  return result;
}

uint64_t MarkAsPlayedEpisodeAction.init(adamID:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v4;
  uint64_t v5;

  *a3 = a1;
  v4 = (char *)a3 + *(int *)(type metadata accessor for MarkAsPlayedEpisodeAction(0) + 20);
  v5 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
}

unint64_t sub_1956C8()
{
  unint64_t result;

  result = qword_3BF1D8;
  if (!qword_3BF1D8)
  {
    type metadata accessor for MarkAsPlayedEpisodeAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MarkAsPlayedEpisodeAction);
    atomic_store(result, (unint64_t *)&qword_3BF1D8);
  }
  return result;
}

uint64_t sub_195710(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MarkAsPlayedEpisodeAction.intent>>, 1);
}

uint64_t getEnumTagSinglePayload for MarkAsPlayedEpisodeAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19572C);
}

uint64_t sub_19572C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for MarkAsPlayedEpisodeAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_195778);
}

uint64_t sub_195778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

unint64_t sub_1957C4()
{
  unint64_t result;

  result = qword_3BF270;
  if (!qword_3BF270)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RefreshControls);
    atomic_store(result, (unint64_t *)&qword_3BF270);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RefreshControls(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_195854 + 4 * byte_2FAEF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_195888 + 4 * asc_2FAEF0[v4]))();
}

uint64_t sub_195888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_195890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x195898);
  return result;
}

uint64_t sub_1958A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1958ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1958B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1958B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RefreshControls()
{
  return &type metadata for RefreshControls;
}

uint64_t SearchScope.searchExtensionScope.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t result;

  v4 = 0x7972617262696CLL;
  v5 = SearchScope.title.getter(a1 & 1);
  v7 = v6;
  if ((a1 & 1) != 0)
  {
    v9 = 0xE500000000000000;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65726F7473, 0xE500000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);
    v4 = 0x65726F7473;
  }
  else
  {
    v8 = 1;
    v9 = 0xE700000000000000;
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v8 & 1;
  return result;
}

ShelfKit::SearchScope __swiftcall SearchScope.init(from:)(ShelfKit::SearchExtensionScope_optional *from)
{
  void *object;
  void *v2;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  Swift::String v5;
  Swift::Int v6;

  object = from->value.id._object;
  if (object)
  {
    countAndFlagsBits = from->value.title._countAndFlagsBits;
    v2 = from->value.title._object;
    v4 = from->value.id._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = v4;
    v5._object = object;
    v6 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_373700, v5);
    swift_bridgeObjectRelease();
    sub_80030(v4, (uint64_t)object, countAndFlagsBits, (uint64_t)v2);
    if (!v6)
      return 0;
    if (v6 == 1)
      return 1;
  }
  if (qword_3B0190 != -1)
    swift_once(&qword_3B0190, sub_196060);
  return byte_3BF278;
}

uint64_t SearchScope.targetID.getter(char a1)
{
  if ((a1 & 1) != 0)
    return static MetricsTargetID.applePodcasts.getter();
  else
    return static MetricsTargetID.yourLibrary.getter();
}

uint64_t SearchScope.title.getter(char a1)
{
  objc_class *v2;
  unint64_t v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t countAndFlagsBits;
  unint64_t v11;

  v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((a1 & 1) != 0)
  {
    v11 = 0xEC00000073747361;
    v4 = 0x800000000030C990;
    v3 = 0xD000000000000013;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0x63646F50206C6C41;
  }
  else
  {
    v3 = 0xD000000000000015;
    v11 = 0xEC00000079726172;
    v4 = 0x800000000030C9B0;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0x62694C2072756F59;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t SearchScope.index.getter(char a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;

  if (qword_3B0198 != -1)
    swift_once(&qword_3B0198, sub_1960D4);
  v2 = off_3BF280[0];
  v3 = *(_QWORD *)((char *)off_3BF280[0] + (unint64_t)&dword_10);
  if (!v3)
    return 0;
  if ((a1 & 1) != 0)
    v4 = 0x65726F7473;
  else
    v4 = 0x7972617262696CLL;
  if ((a1 & 1) != 0)
    v5 = 0xE500000000000000;
  else
    v5 = 0xE700000000000000;
  swift_bridgeObjectRetain(off_3BF280[0]);
  v6 = 0;
  while (1)
  {
    if (*((_BYTE *)v2 + v6 + 32))
      v7 = 0x65726F7473;
    else
      v7 = 0x7972617262696CLL;
    if (*((_BYTE *)v2 + v6 + 32))
      v8 = 0xE500000000000000;
    else
      v8 = 0xE700000000000000;
    if (v7 == v4 && v8 == v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v5, 2);
      return v6;
    }
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v4, v5, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      break;
    if (v3 == ++v6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

ShelfKit::SearchScope __swiftcall SearchScope.init(index:)(Swift::Int index)
{
  ShelfKit::SearchScope *v2;

  if (qword_3B0198 == -1)
  {
    if (index < 0)
      goto LABEL_6;
  }
  else
  {
    swift_once(&qword_3B0198, sub_1960D4);
    if (index < 0)
      goto LABEL_6;
  }
  if (*(_QWORD *)((char *)off_3BF280[0] + (unint64_t)&dword_10) > index)
  {
    v2 = (ShelfKit::SearchScope *)off_3BF280[0] + index + 32;
    return *v2;
  }
LABEL_6:
  if (qword_3B0190 != -1)
    swift_once(&qword_3B0190, sub_196060);
  v2 = (ShelfKit::SearchScope *)&byte_3BF278;
  return *v2;
}

ShelfKit::SearchScope_optional __swiftcall SearchScope.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  ShelfKit::SearchScope_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_373700, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = ShelfKit_SearchScope_store;
  else
    v4.value = ShelfKit_SearchScope_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t SearchScope.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65726F7473;
  else
    return 0x7972617262696CLL;
}

uint64_t sub_195DD8(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x65726F7473;
  else
    v3 = 0x7972617262696CLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE500000000000000;
  if (*a2)
    v5 = 0x65726F7473;
  else
    v5 = 0x7972617262696CLL;
  if (*a2)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

uint64_t sub_195E7C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_373700, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_195ED8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7972617262696CLL;
  if (*v1)
    v2 = 0x65726F7473;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

Swift::Int sub_195F14()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x65726F7473;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_195F90(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x65726F7473;
  else
    v2 = 0x7972617262696CLL;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_195FE8()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x65726F7473;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

id sub_196060()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(PFClientUtil), "supportsLocalLibrary");
  byte_3BF278 = result ^ 1;
  return result;
}

uint64_t static SearchScope.default.getter()
{
  if (qword_3B0190 != -1)
    swift_once(&qword_3B0190, sub_196060);
  return byte_3BF278;
}

id sub_1960D4()
{
  id result;
  int *v1;

  result = objc_msgSend((id)objc_opt_self(PFClientUtil), "supportsLocalLibrary");
  v1 = (int *)&off_3736D8;
  if ((_DWORD)result)
    v1 = (int *)&off_3736B0;
  off_3BF280[0] = v1;
  return result;
}

uint64_t static SearchScope.allCases.getter()
{
  if (qword_3B0198 != -1)
    swift_once(&qword_3B0198, sub_1960D4);
  return swift_bridgeObjectRetain();
}

unint64_t sub_196160()
{
  unint64_t result;

  result = qword_3BF288;
  if (!qword_3BF288)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchScope);
    atomic_store(result, (unint64_t *)&qword_3BF288);
  }
  return result;
}

unint64_t sub_1961A8()
{
  unint64_t result;

  result = qword_3BF290;
  if (!qword_3BF290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3BF298);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A]);
    atomic_store(result, (unint64_t *)&qword_3BF290);
  }
  return result;
}

uint64_t sub_1961F4@<X0>(int **a1@<X8>)
{
  if (qword_3B0198 != -1)
    swift_once(&qword_3B0198, sub_1960D4);
  *a1 = off_3BF280[0];
  return swift_bridgeObjectRetain();
}

uint64_t storeEnumTagSinglePayload for SearchScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_196290 + 4 * byte_2FAFAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1962C4 + 4 * asc_2FAFA8[v4]))();
}

uint64_t sub_1962C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1962CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1962D4);
  return result;
}

uint64_t sub_1962E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1962E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1962EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1962F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchScope()
{
  return &type metadata for SearchScope;
}

uint64_t BookmarksController.bookmarkEpisodes(with:showHUDConfirmation:)(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *((_BYTE *)a1 + 8);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = swift_allocObject(&unk_385900, 57, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v8;
  *(_BYTE *)(v11 + 40) = v9;
  *(_QWORD *)(v11 + 48) = v2;
  *(_BYTE *)(v11 + 56) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v12 = sub_92090((uint64_t)v7, (uint64_t)&unk_3B5988, v11);
  return swift_release(v12);
}

uint64_t BookmarksController.removeEpisodesFromBookmarks(with:showHUDConfirmation:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[8];
  uint64_t v37;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)a1;
  v15 = *(_BYTE *)(a1 + 8);
  static Logger.podcastsStatesCoordination.getter(v11);
  v16 = swift_bridgeObjectRetain_n(v14, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v34 = v3;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v32 = v10;
    v22 = v21;
    v37 = v21;
    v31 = v9;
    *(_DWORD *)v20 = 136315138;
    v30 = v20 + 4;
    v35 = v14;
    v36[0] = v15;
    swift_bridgeObjectRetain(v14);
    v23 = String.init<A>(describing:)(&v35, &type metadata for BookmarksControllerEpisodeData);
    v33 = v8;
    v35 = sub_69298(v23, v24, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    swift_bridgeObjectRelease_n(v14, 2);
    v8 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v17, v18, "BookmarksController.removeEpisodesFromBookmarks() - for episodes %s", v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v25 = v20;
    v3 = v34;
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);
  }
  else
  {

    swift_bridgeObjectRelease_n(v14, 2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
  v27 = swift_allocObject(&unk_385928, 57, 7);
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  *(_QWORD *)(v27 + 32) = v14;
  *(_BYTE *)(v27 + 40) = v15;
  *(_QWORD *)(v27 + 48) = v3;
  *(_BYTE *)(v27 + 56) = a2 & 1;
  swift_bridgeObjectRetain(v14);
  swift_retain(v3);
  v28 = sub_92090((uint64_t)v8, (uint64_t)&unk_3BF2B0, v27);
  return swift_release(v28);
}

uint64_t BookmarksControllerEpisodeData.contentIdentifiers(in:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v3;
  *(_BYTE *)(v2 + 120) = *((_BYTE *)v1 + 8);
  return swift_task_switch(sub_1966E8, 0, 0);
}

uint64_t sub_1966E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  if (*(_BYTE *)(v0 + 120))
  {
    if (*(_BYTE *)(v0 + 120) == 1)
    {
      v1 = *(_QWORD *)(v0 + 80);
      v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
      v3 = async function pointer to BaseObjectGraph.inject<A>(_:)[1];
      swift_bridgeObjectRetain(v1);
      v4 = (_QWORD *)swift_task_alloc(v3);
      *(_QWORD *)(v0 + 88) = v4;
      *v4 = v0;
      v4[1] = sub_196910;
      return BaseObjectGraph.inject<A>(_:)(v0 + 16, v2, v2);
    }
    v15 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      sub_1808DC(0, v16, 0);
      v17 = (uint64_t *)(v15 + 32);
      do
      {
        v18 = *v17++;
        v19 = AdamID.init(rawValue:)(v18 & ~(v18 >> 63));
        v21 = _swiftEmptyArrayStorage[2];
        v20 = _swiftEmptyArrayStorage[3];
        if (v21 >= v20 >> 1)
          sub_1808DC(v20 > 1, v21 + 1, 1);
        _swiftEmptyArrayStorage[2] = v21 + 1;
        v22 = &_swiftEmptyArrayStorage[3 * v21];
        v22[4] = v19;
        v22[5] = 0;
        *((_BYTE *)v22 + 48) = 0;
        --v16;
      }
      while (v16);
    }
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      sub_1808DC(0, v7, 0);
      v8 = _swiftEmptyArrayStorage[2];
      v9 = 24 * v8 + 48;
      v10 = (_QWORD *)(v6 + 40);
      do
      {
        v12 = *(v10 - 1);
        v11 = *v10;
        v13 = _swiftEmptyArrayStorage[3];
        swift_bridgeObjectRetain(*v10);
        if (v8 >= v13 >> 1)
          sub_1808DC(v13 > 1, v8 + 1, 1);
        _swiftEmptyArrayStorage[2] = v8 + 1;
        v14 = (char *)_swiftEmptyArrayStorage + v9;
        *((_QWORD *)v14 - 2) = v12;
        *((_QWORD *)v14 - 1) = v11;
        *v14 = 1;
        v9 += 24;
        v10 += 2;
        ++v8;
        --v7;
      }
      while (v7);
    }
  }
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_196910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    v3 = sub_196ACC;
  }
  else
  {
    v3 = sub_19697C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_19697C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;

  v1 = v0[10];
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v0[8] = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[13] = v4;
  v5 = sub_CAF08();
  *v4 = v0;
  v4[1] = sub_196A24;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 7, v0 + 8, v0[9], &type metadata for FindOrCreateEpisodeOfferContentIDsIntent, v5, v2, v3);
}

uint64_t sub_196A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_196AD8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_196A90;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_196A90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_196ACC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_196AD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *BookmarksController.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)swift_allocObject(v1, 104, 7);
  v3[2] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(v3 + 3, v4, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  BaseObjectGraph.inject<A>(_:)(v3 + 8, v5, v5);
  swift_release(a1);
  return v3;
}

uint64_t BookmarksController.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7[2];

  v2 = v1;
  *(_QWORD *)(v2 + 16) = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(v7, v4, v4);
  sub_F4D8(v7, v2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  BaseObjectGraph.inject<A>(_:)(v7, v5, v5);
  swift_release(a1);
  sub_F4D8(v7, v2 + 64);
  return v2;
}

_QWORD *BookmarksController.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 8);
  return v0;
}

uint64_t BookmarksController.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 8);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t sub_196CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v7 + 26) = a7;
  *(_BYTE *)(v7 + 25) = a5;
  *(_QWORD *)(v7 + 32) = a4;
  *(_QWORD *)(v7 + 40) = a6;
  v8 = type metadata accessor for BookmarkEpisodeIntent(0);
  *(_QWORD *)(v7 + 48) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_196D08, 0, 0);
}

uint64_t sub_196D08()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_BYTE *)(v0 + 25);
  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v0 + 24) = v1;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 72) = v3;
  v4 = swift_task_alloc(dword_3BF2BC);
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_196D88;
  v5 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = v5;
  *(_BYTE *)(v4 + 120) = *(_BYTE *)(v0 + 24);
  return swift_task_switch(sub_1966E8, 0, 0);
}

uint64_t sub_196D88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_197BAC;
  }
  else
  {
    *(_QWORD *)(v4 + 96) = a1;
    v6 = sub_196DFC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_196DFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = (_QWORD *)v0[5];
  BookmarkEpisodeIntent.init(episodeIdentifiers:)(v0[12]);
  v2 = v1[6];
  v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v2);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[13] = v4;
  v5 = sub_F1C0((unint64_t *)&qword_3B18D8, (void (*)(uint64_t))&type metadata accessor for BookmarkEpisodeIntent, (uint64_t)&protocol conformance descriptor for BookmarkEpisodeIntent);
  *v4 = v0;
  v4[1] = sub_196EA4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v5, v0[8], v0[9], v0[6], v5, v2, v3);
}

uint64_t sub_196EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_197BA8;
  else
    v3 = sub_196F08;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_196F08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (*(_BYTE *)(v0 + 26) == 1)
  {
    v1 = *(_QWORD **)(v0 + 40);
    v2 = v1[11];
    *(_QWORD *)(v0 + 120) = v2;
    v3 = v1[12];
    *(_QWORD *)(v0 + 128) = v3;
    *(_QWORD *)(v0 + 136) = __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v3 + 672);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 152) = static MainActor.shared.getter();
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_196FD8, v5, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v8, *(_QWORD *)(v0 + 48));
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_196FD8()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(uint64_t, uint64_t))v0[18];
  v2 = v0[16];
  v3 = v0[15];
  swift_release(v0[19]);
  v1(v3, v2);
  return swift_task_switch(sub_197BA0, 0, 0);
}

uint64_t sub_197034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = (_QWORD *)swift_task_alloc(dword_3BF2A4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return sub_196CA0(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_1970C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v7 + 26) = a7;
  *(_BYTE *)(v7 + 25) = a5;
  *(_QWORD *)(v7 + 32) = a4;
  *(_QWORD *)(v7 + 40) = a6;
  v8 = type metadata accessor for UnbookmarkEpisodeIntent(0);
  *(_QWORD *)(v7 + 48) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_197130, 0, 0);
}

uint64_t sub_197130()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_BYTE *)(v0 + 25);
  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v0 + 24) = v1;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 72) = v3;
  v4 = swift_task_alloc(dword_3BF2BC);
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_1971B0;
  v5 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = v5;
  *(_BYTE *)(v4 + 120) = *(_BYTE *)(v0 + 24);
  return swift_task_switch(sub_1966E8, 0, 0);
}

uint64_t sub_1971B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1974A0;
  }
  else
  {
    *(_QWORD *)(v4 + 96) = a1;
    v6 = sub_197224;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_197224()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = (_QWORD *)v0[5];
  UnbookmarkEpisodeIntent.init(episodeIdentifiers:)(v0[12]);
  v2 = v1[6];
  v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v2);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[13] = v4;
  v5 = sub_F1C0(qword_3B7068, (void (*)(uint64_t))&type metadata accessor for UnbookmarkEpisodeIntent, (uint64_t)&protocol conformance descriptor for UnbookmarkEpisodeIntent);
  *v4 = v0;
  v4[1] = sub_1972CC;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v5, v0[8], v0[9], v0[6], v5, v2, v3);
}

uint64_t sub_1972CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1974D4;
  else
    v3 = sub_197330;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_197330()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (*(_BYTE *)(v0 + 26) == 1)
  {
    v1 = *(_QWORD **)(v0 + 40);
    v2 = v1[11];
    *(_QWORD *)(v0 + 120) = v2;
    v3 = v1[12];
    *(_QWORD *)(v0 + 128) = v3;
    *(_QWORD *)(v0 + 136) = __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v3 + 680);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 152) = static MainActor.shared.getter();
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_197400, v5, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v8, *(_QWORD *)(v0 + 48));
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_197400()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(uint64_t, uint64_t))v0[18];
  v2 = v0[16];
  v3 = v0[15];
  swift_release(v0[19]);
  v1(v3, v2);
  return swift_task_switch(sub_197458, 0, 0);
}

uint64_t sub_197458()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v1, *(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1974A0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1974D4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t objectdestroyTm_5()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_197550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 40);
  v10 = (_QWORD *)swift_task_alloc(dword_3BF2AC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_43684;
  return sub_1970C8(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t BookmarksController.notBookmarkedEpisodesCount(in:)(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a1[8])
    return *(_QWORD *)(*(_QWORD *)a1 + 16);
  swift_retain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_197888(v3, v1);
  swift_bridgeObjectRelease();
  swift_release(v1);
  v2 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t BookmarksController.containsNotBookmarkedEpisodes(in:)(_BYTE *a1)
{
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v12;
  BOOL v14;

  if (a1[8])
  {
    v2 = 1;
  }
  else
  {
    v3 = v1;
    v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    if (v4)
    {
      v5 = v4 - 1;
      v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      do
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        v9 = v3[11];
        v10 = v3[12];
        __swift_project_boxed_opaque_existential_1(v3 + 8, v9);
        v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 416);
        swift_bridgeObjectRetain();
        v12 = v11(v7, v8, v9, v10);
        swift_bridgeObjectRelease();
        v14 = v5-- != 0;
        if ((v12 & 1) == 0)
          break;
        v6 += 2;
      }
      while (v14);
      v2 = v12 ^ 1;
      swift_bridgeObjectRelease();
    }
    else
    {
      v2 = 0;
    }
  }
  return v2 & 1;
}

Swift::Bool __swiftcall BookmarksController.isBookmarkedEpisode(forEpisodeUUID:)(Swift::String forEpisodeUUID)
{
  _QWORD *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;

  object = forEpisodeUUID._object;
  countAndFlagsBits = forEpisodeUUID._countAndFlagsBits;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v4);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 416))(countAndFlagsBits, object, v4, v5) & 1;
}

uint64_t BookmarksController.containsBookmarkedEpisodes(in:)(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (a1[8])
  {
    LOBYTE(v2) = 0;
  }
  else
  {
    v3 = v1;
    v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    if (v2)
    {
      v4 = swift_bridgeObjectRetain();
      v5 = v2 - 1;
      v6 = (uint64_t *)(v4 + 40);
      do
      {
        v7 = v5;
        v2 = *(v6 - 1);
        v8 = *v6;
        v9 = v3[11];
        v10 = v3[12];
        __swift_project_boxed_opaque_existential_1(v3 + 8, v9);
        v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 416);
        swift_bridgeObjectRetain();
        LOBYTE(v2) = v11(v2, v8, v9, v10);
        swift_bridgeObjectRelease();
        if ((v2 & 1) != 0)
          break;
        v5 = v7 - 1;
        v6 += 2;
      }
      while (v7);
      swift_bridgeObjectRelease();
    }
  }
  return v2 & 1;
}

uint64_t sub_197888(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v5 = result + 40;
    v19 = -(uint64_t)v2;
    v20 = a2 + 8;
    v17 = result + 40;
    v18 = *(_QWORD *)(result + 16);
    do
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v7 = -(uint64_t)v6;
      for (i = (uint64_t *)(v5 + 16 * v4++); ; i += 2)
      {
        if (v7 + v4 == 1)
        {
          __break(1u);
          return result;
        }
        v10 = *(i - 1);
        v9 = *i;
        v11 = a2[11];
        v12 = a2[12];
        __swift_project_boxed_opaque_existential_1(v20, v11);
        v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 416);
        swift_bridgeObjectRetain();
        if ((v13(v10, v9, v11, v12) & 1) == 0)
          break;
        result = swift_bridgeObjectRelease();
        ++v4;
        if (v19 + v4 == 1)
          return (uint64_t)_swiftEmptyArrayStorage;
      }
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_1807B0(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v5 = v17;
      v15 = _swiftEmptyArrayStorage[2];
      v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
        result = sub_1807B0(v14 > 1, v15 + 1, 1);
      _swiftEmptyArrayStorage[2] = v15 + 1;
      v16 = &_swiftEmptyArrayStorage[2 * v15];
      v16[4] = v10;
      v16[5] = v9;
      v2 = v18;
    }
    while (v19 + v4);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t initializeBufferWithCopyOfBuffer for BookmarksControllerEpisodeData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for BookmarksControllerEpisodeData(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for BookmarksControllerEpisodeData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t *assignWithTake for BookmarksControllerEpisodeData(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookmarksControllerEpisodeData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookmarksControllerEpisodeData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_197B5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

ValueMetadata *type metadata accessor for BookmarksControllerEpisodeData()
{
  return &type metadata for BookmarksControllerEpisodeData;
}

uint64_t type metadata accessor for BookmarksController()
{
  return objc_opt_self(_TtC8ShelfKit19BookmarksController);
}

uint64_t method lookup function for BookmarksController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookmarksController);
}

uint64_t RoomUber.init(artwork:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  UUID.init()(a1);
  v4 = a2 + *(int *)(type metadata accessor for RoomUber(0) + 20);
  return sub_14614(a1, v4);
}

uint64_t type metadata accessor for RoomUber(uint64_t a1)
{
  uint64_t result;

  result = qword_3BF3D0;
  if (!qword_3BF3D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RoomUber);
  return result;
}

uint64_t RoomUber.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RoomUber.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RoomUber(0) + 20);
  return sub_BE440(v3, a1);
}

uint64_t static RoomUber.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for RoomUber(0) + 20);
  return static ArtworkModel.== infix(_:_:)(a1 + v4, a2 + v4);
}

uint64_t sub_197CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static UUID.== infix(_:_:)() & 1) != 0)
    return static ArtworkModel.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

uint64_t RoomUber.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for UUID(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v4, v0, v1, v2);
  v6 = sub_F1C0(&qword_3B1D40, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return AnyHashable.init<A>(_:)(v4, v1, v6);
}

uint64_t sub_197DE0()
{
  return sub_F1C0(&qword_3BF370, (void (*)(uint64_t))type metadata accessor for RoomUber, (uint64_t)&protocol conformance descriptor for RoomUber);
}

uint64_t sub_197E0C(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3BF370, (void (*)(uint64_t))type metadata accessor for RoomUber, (uint64_t)&protocol conformance descriptor for RoomUber);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RoomUber(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(uint64_t *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *((unsigned __int8 *)a2 + v8 + 32);
    swift_bridgeObjectRetain();
    if (v12 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      v9[32] = v10[32];
    }
    else
    {
      v13 = *((_QWORD *)v10 + 2);
      v14 = *((_QWORD *)v10 + 3);
      sub_3D464(v13, v14, v12);
      *((_QWORD *)v9 + 2) = v13;
      *((_QWORD *)v9 + 3) = v14;
      v9[32] = v12;
    }
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
    v16 = (id *)(v10 + 56);
    v17 = v10[64];
    if (v17 == 255)
    {
      *((_QWORD *)v9 + 7) = *v16;
      v9[64] = v10[64];
    }
    else
    {
      v18 = *v16;
      sub_3D47C(*v16, v10[64]);
      *((_QWORD *)v9 + 7) = v18;
      v9[64] = v17;
    }
    v19 = (id *)(v10 + 72);
    v20 = v10[80];
    if (v20 == 255)
    {
      *((_QWORD *)v9 + 9) = *v19;
      v9[80] = v10[80];
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, v10[80]);
      *((_QWORD *)v9 + 9) = v21;
      v9[80] = v20;
    }
    v22 = (id *)(v10 + 88);
    v23 = v10[96];
    if (v23 == 255)
    {
      *((_QWORD *)v9 + 11) = *v22;
      v9[96] = v10[96];
    }
    else
    {
      v24 = *v22;
      sub_3D47C(*v22, v10[96]);
      *((_QWORD *)v9 + 11) = v24;
      v9[96] = v23;
    }
    v25 = (id *)(v10 + 104);
    v26 = v10[112];
    if (v26 == 255)
    {
      *((_QWORD *)v9 + 13) = *v25;
      v9[112] = v10[112];
    }
    else
    {
      v27 = *v25;
      sub_3D47C(*v25, v10[112]);
      *((_QWORD *)v9 + 13) = v27;
      v9[112] = v26;
    }
    v28 = (id *)(v10 + 120);
    v29 = v10[128];
    if (v29 == 255)
    {
      *((_QWORD *)v9 + 15) = *v28;
      v9[128] = v10[128];
    }
    else
    {
      v30 = *v28;
      sub_3D47C(*v28, v10[128]);
      *((_QWORD *)v9 + 15) = v30;
      v9[128] = v29;
    }
    v9[129] = v10[129];
    v31 = (int *)type metadata accessor for ArtworkModel(0);
    v32 = v31[11];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v35 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = v31[12];
    v37 = &v9[v36];
    v38 = &v10[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v9[v31[13]] = v10[v31[13]];
    v9[v31[14]] = v10[v31[14]];
    v9[v31[15]] = v10[v31[15]];
    v40 = v31[16];
    v41 = &v9[v40];
    v42 = &v10[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RoomUber(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(v5 + 32);
  if (v6 != 255)
    sub_3B5BC(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v6);
  v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255)
    sub_3D624(*(id *)(v5 + 56), v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255)
    sub_3D624(*(id *)(v5 + 72), v8);
  v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255)
    sub_3D624(*(id *)(v5 + 88), v9);
  v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255)
    sub_3D624(*(id *)(v5 + 104), v10);
  v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255)
    sub_3D624(*(id *)(v5 + 120), v11);
  v12 = v5 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
  v13 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoomUber(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  v11 = *(unsigned __int8 *)(a2 + v7 + 32);
  swift_bridgeObjectRetain();
  if (v11 == 255)
  {
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  }
  else
  {
    v12 = *(_QWORD *)(v9 + 16);
    v13 = *(_QWORD *)(v9 + 24);
    sub_3D464(v12, v13, v11);
    *(_QWORD *)(v8 + 16) = v12;
    *(_QWORD *)(v8 + 24) = v13;
    *(_BYTE *)(v8 + 32) = v11;
  }
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  v14 = (id *)(v9 + 56);
  v15 = *(unsigned __int8 *)(v9 + 64);
  if (v15 == 255)
  {
    *(_QWORD *)(v8 + 56) = *v14;
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  }
  else
  {
    v16 = *v14;
    sub_3D47C(*v14, *(_BYTE *)(v9 + 64));
    *(_QWORD *)(v8 + 56) = v16;
    *(_BYTE *)(v8 + 64) = v15;
  }
  v17 = (id *)(v9 + 72);
  v18 = *(unsigned __int8 *)(v9 + 80);
  if (v18 == 255)
  {
    *(_QWORD *)(v8 + 72) = *v17;
    *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
  }
  else
  {
    v19 = *v17;
    sub_3D47C(*v17, *(_BYTE *)(v9 + 80));
    *(_QWORD *)(v8 + 72) = v19;
    *(_BYTE *)(v8 + 80) = v18;
  }
  v20 = (id *)(v9 + 88);
  v21 = *(unsigned __int8 *)(v9 + 96);
  if (v21 == 255)
  {
    *(_QWORD *)(v8 + 88) = *v20;
    *(_BYTE *)(v8 + 96) = *(_BYTE *)(v9 + 96);
  }
  else
  {
    v22 = *v20;
    sub_3D47C(*v20, *(_BYTE *)(v9 + 96));
    *(_QWORD *)(v8 + 88) = v22;
    *(_BYTE *)(v8 + 96) = v21;
  }
  v23 = (id *)(v9 + 104);
  v24 = *(unsigned __int8 *)(v9 + 112);
  if (v24 == 255)
  {
    *(_QWORD *)(v8 + 104) = *v23;
    *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
  }
  else
  {
    v25 = *v23;
    sub_3D47C(*v23, *(_BYTE *)(v9 + 112));
    *(_QWORD *)(v8 + 104) = v25;
    *(_BYTE *)(v8 + 112) = v24;
  }
  v26 = (id *)(v9 + 120);
  v27 = *(unsigned __int8 *)(v9 + 128);
  if (v27 == 255)
  {
    *(_QWORD *)(v8 + 120) = *v26;
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
  }
  else
  {
    v28 = *v26;
    sub_3D47C(*v26, *(_BYTE *)(v9 + 128));
    *(_QWORD *)(v8 + 120) = v28;
    *(_BYTE *)(v8 + 128) = v27;
  }
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  v29 = (int *)type metadata accessor for ArtworkModel(0);
  v30 = v29[11];
  v31 = v8 + v30;
  v32 = v9 + v30;
  v33 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  v34 = v29[12];
  v35 = (_QWORD *)(v8 + v34);
  v36 = (_QWORD *)(v9 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_BYTE *)(v8 + v29[13]) = *(_BYTE *)(v9 + v29[13]);
  *(_BYTE *)(v8 + v29[14]) = *(_BYTE *)(v9 + v29[14]);
  *(_BYTE *)(v8 + v29[15]) = *(_BYTE *)(v9 + v29[15]);
  v38 = v29[16];
  v39 = (_QWORD *)(v8 + v38);
  v40 = (_QWORD *)(v9 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoomUber(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  id *v22;
  id *v23;
  int v24;
  id v25;
  void *v26;
  char v27;
  id v28;
  char v29;
  id v30;
  id *v31;
  id *v32;
  int v33;
  id v34;
  void *v35;
  char v36;
  id v37;
  char v38;
  id v39;
  id *v40;
  id *v41;
  int v42;
  id v43;
  void *v44;
  char v45;
  id v46;
  char v47;
  id v48;
  id *v49;
  id *v50;
  int v51;
  id v52;
  void *v53;
  char v54;
  id v55;
  char v56;
  id v57;
  id *v58;
  id *v59;
  int v60;
  id v61;
  void *v62;
  char v63;
  id v64;
  char v65;
  id v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (__int128 *)(v8 + 16);
  v11 = (__int128 *)(v9 + 16);
  v12 = *(unsigned __int8 *)(v9 + 32);
  if (*(unsigned __int8 *)(v8 + 32) == 255)
  {
    if (v12 == 255)
    {
      v21 = *v11;
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *v10 = v21;
    }
    else
    {
      v18 = *(_QWORD *)(v9 + 16);
      v19 = *(_QWORD *)(v9 + 24);
      sub_3D464(v18, v19, *(_BYTE *)(v9 + 32));
      *(_QWORD *)(v8 + 16) = v18;
      *(_QWORD *)(v8 + 24) = v19;
      *(_BYTE *)(v8 + 32) = v12;
    }
  }
  else if (v12 == 255)
  {
    sub_3E43C(v8 + 16);
    v20 = *(_BYTE *)(v9 + 32);
    *v10 = *v11;
    *(_BYTE *)(v8 + 32) = v20;
  }
  else
  {
    v13 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v9 + 24);
    sub_3D464(v13, v14, *(_BYTE *)(v9 + 32));
    v15 = *(_QWORD *)(v8 + 16);
    v16 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = v13;
    *(_QWORD *)(v8 + 24) = v14;
    v17 = *(_BYTE *)(v8 + 32);
    *(_BYTE *)(v8 + 32) = v12;
    sub_3B5BC(v15, v16, v17);
  }
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  v22 = (id *)(v8 + 56);
  v23 = (id *)(v9 + 56);
  v24 = *(unsigned __int8 *)(v9 + 64);
  if (*(unsigned __int8 *)(v8 + 64) == 255)
  {
    if (v24 == 255)
    {
      v30 = *v23;
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *v22 = v30;
    }
    else
    {
      v28 = *v23;
      sub_3D47C(*v23, *(_BYTE *)(v9 + 64));
      *(_QWORD *)(v8 + 56) = v28;
      *(_BYTE *)(v8 + 64) = v24;
    }
  }
  else if (v24 == 255)
  {
    sub_3E470(v8 + 56);
    v29 = *(_BYTE *)(v9 + 64);
    *v22 = *v23;
    *(_BYTE *)(v8 + 64) = v29;
  }
  else
  {
    v25 = *v23;
    sub_3D47C(*v23, *(_BYTE *)(v9 + 64));
    v26 = *(void **)(v8 + 56);
    *(_QWORD *)(v8 + 56) = v25;
    v27 = *(_BYTE *)(v8 + 64);
    *(_BYTE *)(v8 + 64) = v24;
    sub_3D624(v26, v27);
  }
  v31 = (id *)(v8 + 72);
  v32 = (id *)(v9 + 72);
  v33 = *(unsigned __int8 *)(v9 + 80);
  if (*(unsigned __int8 *)(v8 + 80) == 255)
  {
    if (v33 == 255)
    {
      v39 = *v32;
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *v31 = v39;
    }
    else
    {
      v37 = *v32;
      sub_3D47C(*v32, *(_BYTE *)(v9 + 80));
      *(_QWORD *)(v8 + 72) = v37;
      *(_BYTE *)(v8 + 80) = v33;
    }
  }
  else if (v33 == 255)
  {
    sub_3E470(v8 + 72);
    v38 = *(_BYTE *)(v9 + 80);
    *v31 = *v32;
    *(_BYTE *)(v8 + 80) = v38;
  }
  else
  {
    v34 = *v32;
    sub_3D47C(*v32, *(_BYTE *)(v9 + 80));
    v35 = *(void **)(v8 + 72);
    *(_QWORD *)(v8 + 72) = v34;
    v36 = *(_BYTE *)(v8 + 80);
    *(_BYTE *)(v8 + 80) = v33;
    sub_3D624(v35, v36);
  }
  v40 = (id *)(v8 + 88);
  v41 = (id *)(v9 + 88);
  v42 = *(unsigned __int8 *)(v9 + 96);
  if (*(unsigned __int8 *)(v8 + 96) == 255)
  {
    if (v42 == 255)
    {
      v48 = *v41;
      *(_BYTE *)(v8 + 96) = *(_BYTE *)(v9 + 96);
      *v40 = v48;
    }
    else
    {
      v46 = *v41;
      sub_3D47C(*v41, *(_BYTE *)(v9 + 96));
      *(_QWORD *)(v8 + 88) = v46;
      *(_BYTE *)(v8 + 96) = v42;
    }
  }
  else if (v42 == 255)
  {
    sub_3E470(v8 + 88);
    v47 = *(_BYTE *)(v9 + 96);
    *v40 = *v41;
    *(_BYTE *)(v8 + 96) = v47;
  }
  else
  {
    v43 = *v41;
    sub_3D47C(*v41, *(_BYTE *)(v9 + 96));
    v44 = *(void **)(v8 + 88);
    *(_QWORD *)(v8 + 88) = v43;
    v45 = *(_BYTE *)(v8 + 96);
    *(_BYTE *)(v8 + 96) = v42;
    sub_3D624(v44, v45);
  }
  v49 = (id *)(v8 + 104);
  v50 = (id *)(v9 + 104);
  v51 = *(unsigned __int8 *)(v9 + 112);
  if (*(unsigned __int8 *)(v8 + 112) == 255)
  {
    if (v51 == 255)
    {
      v57 = *v50;
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *v49 = v57;
    }
    else
    {
      v55 = *v50;
      sub_3D47C(*v50, *(_BYTE *)(v9 + 112));
      *(_QWORD *)(v8 + 104) = v55;
      *(_BYTE *)(v8 + 112) = v51;
    }
  }
  else if (v51 == 255)
  {
    sub_3E470(v8 + 104);
    v56 = *(_BYTE *)(v9 + 112);
    *v49 = *v50;
    *(_BYTE *)(v8 + 112) = v56;
  }
  else
  {
    v52 = *v50;
    sub_3D47C(*v50, *(_BYTE *)(v9 + 112));
    v53 = *(void **)(v8 + 104);
    *(_QWORD *)(v8 + 104) = v52;
    v54 = *(_BYTE *)(v8 + 112);
    *(_BYTE *)(v8 + 112) = v51;
    sub_3D624(v53, v54);
  }
  v58 = (id *)(v8 + 120);
  v59 = (id *)(v9 + 120);
  v60 = *(unsigned __int8 *)(v9 + 128);
  if (*(unsigned __int8 *)(v8 + 128) == 255)
  {
    if (v60 == 255)
    {
      v66 = *v59;
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *v58 = v66;
    }
    else
    {
      v64 = *v59;
      sub_3D47C(*v59, *(_BYTE *)(v9 + 128));
      *(_QWORD *)(v8 + 120) = v64;
      *(_BYTE *)(v8 + 128) = v60;
    }
  }
  else if (v60 == 255)
  {
    sub_3E470(v8 + 120);
    v65 = *(_BYTE *)(v9 + 128);
    *v58 = *v59;
    *(_BYTE *)(v8 + 128) = v65;
  }
  else
  {
    v61 = *v59;
    sub_3D47C(*v59, *(_BYTE *)(v9 + 128));
    v62 = *(void **)(v8 + 120);
    *(_QWORD *)(v8 + 120) = v61;
    v63 = *(_BYTE *)(v8 + 128);
    *(_BYTE *)(v8 + 128) = v60;
    sub_3D624(v62, v63);
  }
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  v67 = (int *)type metadata accessor for ArtworkModel(0);
  v68 = v67[11];
  v69 = v8 + v68;
  v70 = v9 + v68;
  v71 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v69, v70, v71);
  v72 = v67[12];
  v73 = (_QWORD *)(v8 + v72);
  v74 = (_QWORD *)(v9 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + v67[13]) = *(_BYTE *)(v9 + v67[13]);
  *(_BYTE *)(v8 + v67[14]) = *(_BYTE *)(v9 + v67[14]);
  *(_BYTE *)(v8 + v67[15]) = *(_BYTE *)(v9 + v67[15]);
  v75 = v67[16];
  v76 = (_QWORD *)(v8 + v75);
  v77 = (_QWORD *)(v9 + v75);
  *v76 = *v77;
  v76[1] = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RoomUber(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(a2 + v7 + 32);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(a2 + v7 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(a2 + v7 + 64);
  *(_OWORD *)(v8 + 113) = *(_OWORD *)(a2 + v7 + 113);
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(a2 + v7 + 104);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(a2 + v7 + 129);
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = v11[11];
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)(v8 + v11[12]) = *(_OWORD *)(v9 + v11[12]);
  *(_BYTE *)(v8 + v11[13]) = *(_BYTE *)(v9 + v11[13]);
  *(_BYTE *)(v8 + v11[14]) = *(_BYTE *)(v9 + v11[14]);
  *(_BYTE *)(v8 + v11[15]) = *(_BYTE *)(v9 + v11[15]);
  *(_OWORD *)(v8 + v11[16]) = *(_OWORD *)(v9 + v11[16]);
  return a1;
}

uint64_t assignWithTake for RoomUber(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;
  int v18;
  void *v19;
  _QWORD *v20;
  int v21;
  int v22;
  void *v23;
  _QWORD *v24;
  int v25;
  int v26;
  void *v27;
  _QWORD *v28;
  int v29;
  int v30;
  void *v31;
  _QWORD *v32;
  int v33;
  int v34;
  void *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = (_OWORD *)(v9 + 16);
  v12 = *(unsigned __int8 *)(v8 + 32);
  if (v12 != 255)
  {
    v13 = *(unsigned __int8 *)(v9 + 32);
    if (v13 != 255)
    {
      v14 = *(_QWORD *)(v8 + 16);
      v15 = *(_QWORD *)(v8 + 24);
      *(_OWORD *)(v8 + 16) = *v11;
      *(_BYTE *)(v8 + 32) = v13;
      sub_3B5BC(v14, v15, v12);
      goto LABEL_6;
    }
    sub_3E43C(v8 + 16);
  }
  *(_OWORD *)(v8 + 16) = *v11;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
LABEL_6:
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  v16 = (_QWORD *)(v9 + 56);
  v17 = *(unsigned __int8 *)(v8 + 64);
  if (v17 != 255)
  {
    v18 = *(unsigned __int8 *)(v9 + 64);
    if (v18 != 255)
    {
      v19 = *(void **)(v8 + 56);
      *(_QWORD *)(v8 + 56) = *v16;
      *(_BYTE *)(v8 + 64) = v18;
      sub_3D624(v19, v17);
      goto LABEL_11;
    }
    sub_3E470(v8 + 56);
  }
  *(_QWORD *)(v8 + 56) = *v16;
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
LABEL_11:
  v20 = (_QWORD *)(v9 + 72);
  v21 = *(unsigned __int8 *)(v8 + 80);
  if (v21 != 255)
  {
    v22 = *(unsigned __int8 *)(v9 + 80);
    if (v22 != 255)
    {
      v23 = *(void **)(v8 + 72);
      *(_QWORD *)(v8 + 72) = *v20;
      *(_BYTE *)(v8 + 80) = v22;
      sub_3D624(v23, v21);
      goto LABEL_16;
    }
    sub_3E470(v8 + 72);
  }
  *(_QWORD *)(v8 + 72) = *v20;
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
LABEL_16:
  v24 = (_QWORD *)(v9 + 88);
  v25 = *(unsigned __int8 *)(v8 + 96);
  if (v25 != 255)
  {
    v26 = *(unsigned __int8 *)(v9 + 96);
    if (v26 != 255)
    {
      v27 = *(void **)(v8 + 88);
      *(_QWORD *)(v8 + 88) = *v24;
      *(_BYTE *)(v8 + 96) = v26;
      sub_3D624(v27, v25);
      goto LABEL_21;
    }
    sub_3E470(v8 + 88);
  }
  *(_QWORD *)(v8 + 88) = *v24;
  *(_BYTE *)(v8 + 96) = *(_BYTE *)(v9 + 96);
LABEL_21:
  v28 = (_QWORD *)(v9 + 104);
  v29 = *(unsigned __int8 *)(v8 + 112);
  if (v29 != 255)
  {
    v30 = *(unsigned __int8 *)(v9 + 112);
    if (v30 != 255)
    {
      v31 = *(void **)(v8 + 104);
      *(_QWORD *)(v8 + 104) = *v28;
      *(_BYTE *)(v8 + 112) = v30;
      sub_3D624(v31, v29);
      goto LABEL_26;
    }
    sub_3E470(v8 + 104);
  }
  *(_QWORD *)(v8 + 104) = *v28;
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
LABEL_26:
  v32 = (_QWORD *)(v9 + 120);
  v33 = *(unsigned __int8 *)(v8 + 128);
  if (v33 == 255)
  {
LABEL_30:
    *(_QWORD *)(v8 + 120) = *v32;
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    goto LABEL_31;
  }
  v34 = *(unsigned __int8 *)(v9 + 128);
  if (v34 == 255)
  {
    sub_3E470(v8 + 120);
    goto LABEL_30;
  }
  v35 = *(void **)(v8 + 120);
  *(_QWORD *)(v8 + 120) = *v32;
  *(_BYTE *)(v8 + 128) = v34;
  sub_3D624(v35, v33);
LABEL_31:
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  v36 = (int *)type metadata accessor for ArtworkModel(0);
  v37 = v36[11];
  v38 = v8 + v37;
  v39 = v9 + v37;
  v40 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = v36[12];
  v42 = (_QWORD *)(v8 + v41);
  v43 = (uint64_t *)(v9 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + v36[13]) = *(_BYTE *)(v9 + v36[13]);
  *(_BYTE *)(v8 + v36[14]) = *(_BYTE *)(v9 + v36[14]);
  *(_BYTE *)(v8 + v36[15]) = *(_BYTE *)(v9 + v36[15]);
  v46 = v36[16];
  v47 = (_QWORD *)(v8 + v46);
  v48 = (uint64_t *)(v9 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomUber(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_198DC8);
}

uint64_t sub_198DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for ArtworkModel(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RoomUber(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_198E48);
}

uint64_t sub_198E48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for ArtworkModel(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_198EC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for ArtworkModel(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t static CategoryPageFromYourShowsShelfIntent.kind.getter()
{
  return 0xD000000000000024;
}

void sub_198F64(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000024;
  a1[1] = 0x80000000002FB200;
}

Swift::Int sub_198F84()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x79726F6765746163, 0xEE0064496D616441);
  return Hasher._finalize()();
}

uint64_t sub_198FE0(uint64_t a1)
{
  return String.hash(into:)(a1, 0x79726F6765746163, 0xEE0064496D616441);
}

Swift::Int sub_199004()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x79726F6765746163, 0xEE0064496D616441);
  return Hasher._finalize()();
}

uint64_t sub_19905C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_3748F0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1990AC(char *a1@<X8>)
{
  strcpy(a1, "categoryAdamId");
  a1[15] = -18;
}

uint64_t sub_1990D4()
{
  return 0x79726F6765746163;
}

uint64_t sub_1990F8@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374928, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_19914C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_199298();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_199174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_199298();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CategoryPageFromYourShowsShelfIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF408);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_199298();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CategoryPageFromYourShowsShelfIntent.CodingKeys, &type metadata for CategoryPageFromYourShowsShelfIntent.CodingKeys, v10, v8, v9);
  v13 = v7;
  sub_13E9C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_199298()
{
  unint64_t result;

  result = qword_3BF410;
  if (!qword_3BF410)
  {
    result = swift_getWitnessTable(&unk_2FB420);
    atomic_store(result, (unint64_t *)&qword_3BF410);
  }
  return result;
}

uint64_t CategoryPageFromYourShowsShelfIntent.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF418);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_199298();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CategoryPageFromYourShowsShelfIntent.CodingKeys, &type metadata for CategoryPageFromYourShowsShelfIntent.CodingKeys, v11, v9, v10);
  if (!v2)
  {
    sub_14088();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v14, &type metadata for AdamID);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1993F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CategoryPageFromYourShowsShelfIntent.init(from:)(a1, a2);
}

uint64_t sub_19940C(_QWORD *a1)
{
  return CategoryPageFromYourShowsShelfIntent.encode(to:)(a1);
}

uint64_t sub_199420@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_446A4(a1, a2, a3);
}

ValueMetadata *type metadata accessor for CategoryPageFromYourShowsShelfIntent()
{
  return &type metadata for CategoryPageFromYourShowsShelfIntent;
}

uint64_t storeEnumTagSinglePayload for CategoryPageFromYourShowsShelfIntent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_199484 + 4 * asc_2FB210[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1994A4 + 4 * byte_2FB215[v4]))();
}

_BYTE *sub_199484(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1994A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1994AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1994B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1994BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1994C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CategoryPageFromYourShowsShelfIntent.CodingKeys()
{
  return &type metadata for CategoryPageFromYourShowsShelfIntent.CodingKeys;
}

unint64_t sub_1994E4()
{
  unint64_t result;

  result = qword_3BF420;
  if (!qword_3BF420)
  {
    result = swift_getWitnessTable(&unk_2FB3F8);
    atomic_store(result, (unint64_t *)&qword_3BF420);
  }
  return result;
}

unint64_t sub_19952C()
{
  unint64_t result;

  result = qword_3BF428;
  if (!qword_3BF428)
  {
    result = swift_getWitnessTable(&unk_2FB330);
    atomic_store(result, (unint64_t *)&qword_3BF428);
  }
  return result;
}

unint64_t sub_199574()
{
  unint64_t result;

  result = qword_3BF430;
  if (!qword_3BF430)
  {
    result = swift_getWitnessTable(&unk_2FB358);
    atomic_store(result, (unint64_t *)&qword_3BF430);
  }
  return result;
}

uint64_t LegacyLockup.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  LegacyLockup.init(deserializing:using:)(a1, a2);
  return v5;
}

uint64_t sub_19960C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess(v6, v9, 0, 0);
  sub_267BC(v6, (uint64_t)v5, &qword_3BA270);
  Lazy.wrappedValue.getter(a1, v3);
  return sub_1459C((uint64_t)v5, &qword_3BA270);
}

uint64_t sub_1996CC()
{
  return sub_161A1C(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction);
}

uint64_t sub_1996D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction;
  swift_beginAccess(v6, v9, 0, 0);
  sub_267BC(v6, (uint64_t)v5, &qword_3B9EF0);
  Lazy.wrappedValue.getter(a1, v3);
  return sub_1459C((uint64_t)v5, &qword_3B9EF0);
}

uint64_t sub_199798()
{
  return sub_161A1C(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction);
}

uint64_t sub_1997A4()
{
  return sub_161A1C(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction);
}

uint64_t sub_1997B0()
{
  return sub_161A1C(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction);
}

uint64_t sub_1997BC()
{
  return sub_161A1C(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction);
}

uint64_t sub_1997C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  unint64_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE v38[24];

  v1 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  v8 = 0;
  if ((AdamID.isEmpty.getter(v7) & 1) == 0)
  {
    v9 = v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction;
    swift_beginAccess(v9, v38, 0, 0);
    sub_267BC(v9, (uint64_t)v6, &qword_3B3C88);
    Lazy.wrappedValue.getter(&v36, v4);
    sub_1459C((uint64_t)v6, &qword_3B3C88);
    v10 = v36;
    if (v36)
    {
      v11 = type metadata accessor for PodcastContextAction(0);
      if (swift_dynamicCastClass(v10, v11)
        || (v12 = type metadata accessor for LibraryPodcastContextAction(0), swift_dynamicCastClass(v10, v12)))
      {
        v36 = v7;
        v13 = sub_144B4();
        v14 = BinaryInteger.description.getter(&type metadata for UInt64, v13);
        v16 = v15;
        v36 = _swiftEmptyArrayStorage;
        v17 = sub_F1C0((unint64_t *)&qword_3B1D18, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B1D20);
        v19 = sub_32914((unint64_t *)&qword_3B1D28, &qword_3B1D20, (uint64_t)&protocol conformance descriptor for [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v18, v19, v1, v17);
        v20 = type metadata accessor for ShowEntity(0);
        v21 = (void (*)(uint64_t))&type metadata accessor for ShowEntity;
        v36 = (_QWORD *)v14;
        v37 = v16;
        objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
        v22 = &qword_3B9668;
        v23 = &protocol conformance descriptor for ShowEntity;
LABEL_6:
        v24 = sub_F1C0(v22, v21, (uint64_t)v23);
        v8 = AppEntityViewAnnotation.init<A>(entityType:identifier:state:)(v20, &v36, v3, v20, v24);
        swift_release(v10);
        return v8;
      }
      v25 = type metadata accessor for EpisodeContextAction(0);
      if (swift_dynamicCastClass(v10, v25)
        || (v26 = type metadata accessor for LibraryEpisodeContextAction(0), swift_dynamicCastClass(v10, v26)))
      {
        v36 = v7;
        v27 = sub_144B4();
        v28 = BinaryInteger.description.getter(&type metadata for UInt64, v27);
        v30 = v29;
        v36 = _swiftEmptyArrayStorage;
        v31 = sub_F1C0((unint64_t *)&qword_3B1D18, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B1D20);
        v33 = sub_32914((unint64_t *)&qword_3B1D28, &qword_3B1D20, (uint64_t)&protocol conformance descriptor for [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v32, v33, v1, v31);
        v20 = type metadata accessor for EpisodeEntity(0);
        v21 = (void (*)(uint64_t))&type metadata accessor for EpisodeEntity;
        v36 = (_QWORD *)v28;
        v37 = v30;
        objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
        v22 = (unint64_t *)&unk_3BF470;
        v23 = &protocol conformance descriptor for EpisodeEntity;
        goto LABEL_6;
      }
      swift_release(v10);
    }
    return 0;
  }
  return v8;
}

char *LegacyLockup.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  void (*v101)(char *, uint64_t);
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  void (**v133)(uint64_t, uint64_t);
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  void (*v139)(char *, uint64_t, uint64_t);
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  void (*v152)(char *, char *, uint64_t);
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t);
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  void (**v212)(uint64_t, uint64_t);
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  void (*v222)(char *, uint64_t);
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char v226[8];
  _OWORD v227[2];
  uint64_t v228;
  char *v229;

  v3 = v2;
  v225 = a2;
  v229 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  v5 = __chkstk_darwin(v4);
  v219 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v222 = (void (*)(char *, uint64_t))((char *)&v189 - v7);
  v223 = type metadata accessor for JSONContext(0);
  v211 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v216 = v8;
  v221 = (char *)&v189 - ((unint64_t)(v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v212 = (void (**)(uint64_t, uint64_t))((char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v207 = type metadata accessor for JSONObject(0);
  v220 = *(_QWORD *)(v207 - 8);
  v11 = __chkstk_darwin(v207);
  v203 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v209 = (char *)&v189 - v14;
  v15 = __chkstk_darwin(v13);
  v214 = (char *)&v189 - v16;
  v17 = __chkstk_darwin(v15);
  v213 = (char *)&v189 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v189 - v20;
  v22 = __chkstk_darwin(v19);
  v194 = (char *)&v189 - v23;
  v215 = v24;
  __chkstk_darwin(v22);
  v224 = (char *)&v189 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  __chkstk_darwin(v26);
  v208 = (char *)&v189 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v28);
  v30 = (char *)&v189 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v206);
  v32 = (char *)&v189 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)&v189 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v38 = (char *)&v189 - v37;
  *((_QWORD *)v2 + 8) = 0;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  v39 = (uint64_t)&v2[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics];
  v40 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 1, 1, v40);
  sub_267BC((uint64_t)v38, (uint64_t)v36, (uint64_t *)&unk_3B8790);
  v204 = v36;
  v202 = v40;
  Lazy.init(wrappedValue:)(v36, v40);
  v205 = v38;
  sub_1459C((uint64_t)v38, (uint64_t *)&unk_3B8790);
  sub_15BD4((uint64_t)v32, v39, &qword_3BA270);
  v41 = (uint64_t)&v2[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction];
  *(_QWORD *)&v227[0] = 0;
  v42 = type metadata accessor for Action(0);
  Lazy.init(wrappedValue:)(v227, v42);
  v195 = v41;
  sub_15BD4((uint64_t)v30, v41, &qword_3B3C88);
  v43 = (uint64_t)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction];
  v228 = 0;
  memset(v227, 0, sizeof(v227));
  sub_267BC((uint64_t)v227, (uint64_t)v226, &qword_3B0C50);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2E40);
  v45 = (uint64_t)v208;
  v196 = v44;
  Lazy.init(wrappedValue:)(v226, v44);
  sub_1459C((uint64_t)v227, &qword_3B0C50);
  v197 = v43;
  v46 = v43;
  v47 = v224;
  sub_15BD4(v45, v46, &qword_3B9EF0);
  v48 = (uint64_t)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction];
  *(_QWORD *)&v227[0] = 0;
  Lazy.init(wrappedValue:)(v227, v42);
  v198 = v48;
  sub_15BD4((uint64_t)v30, v48, &qword_3B3C88);
  v49 = (uint64_t)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction];
  *(_QWORD *)&v227[0] = 0;
  Lazy.init(wrappedValue:)(v227, v42);
  v199 = v49;
  sub_15BD4((uint64_t)v30, v49, &qword_3B3C88);
  v50 = (uint64_t)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction];
  *(_QWORD *)&v227[0] = 0;
  Lazy.init(wrappedValue:)(v227, v42);
  sub_15BD4((uint64_t)v30, v50, &qword_3B3C88);
  v51 = (uint64_t)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction];
  *(_QWORD *)&v227[0] = 0;
  Lazy.init(wrappedValue:)(v227, v42);
  v218 = v30;
  sub_15BD4((uint64_t)v30, v51, &qword_3B3C88);
  v52 = JSONObject.subscript.getter(0x64496D616461, 0xE600000000000000);
  v53 = JSONObject.string.getter(v52);
  v217 = v42;
  v201 = v51;
  v200 = v50;
  if (v54)
  {
    v55 = v54;
    v56 = v207;
    v57 = v210;
    v58 = static AdamID.parse(_:)(v53, v54);
    if (v57)
    {
      v59 = swift_bridgeObjectRelease(v55);
      v60 = static AdamID.empty.getter(v59);
      swift_errorRelease(v57);
      v210 = 0;
    }
    else
    {
      v60 = v58;
      v210 = 0;
      swift_bridgeObjectRelease(v55);
    }
    v61 = *(void (**)(char *, uint64_t))(v220 + 8);
    v61(v224, v56);
  }
  else
  {
    v61 = *(void (**)(char *, uint64_t))(v220 + 8);
    v56 = v207;
    v62 = ((uint64_t (*)(char *, uint64_t))v61)(v47, v207);
    v60 = static AdamID.empty.getter(v62);
  }
  v63 = (uint64_t)v222;
  v64 = v194;
  v193 = OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId] = v60;
  v65 = JSONObject.subscript.getter(0x63696C7078457369, 0xEA00000000007469);
  v66 = JSONObject.BOOL.getter(v65);
  v61(v64, v56);
  v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit] = v66 & 1;
  v67 = type metadata accessor for ArtworkModel(0);
  JSONObject.subscript.getter(1852793705, 0xE400000000000000);
  v68 = v221;
  v224 = *(char **)(v211 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v224)(v221, v225, v223);
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  v69 = (uint64_t)v212;
  ExpressibleByJSON.init(tryDeserializing:using:)(v21, v68, v67);
  sub_15BD4(v69, (uint64_t)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon], &qword_3BEB70);
  v70 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v71 = JSONObject.string.getter(v70);
  v73 = v72;
  v61(v21, v56);
  v74 = (uint64_t *)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title];
  *v74 = v71;
  v74[1] = v73;
  v192 = v74;
  v75 = v213;
  v76 = JSONObject.subscript.getter(0x656C746974627573, 0xE900000000000073);
  JSONObject.array.getter(v76);
  v61(v75, v56);
  v77 = type metadata accessor for JSONArray(0);
  v78 = *(char **)(v77 - 8);
  v213 = (char *)*((_QWORD *)v78 + 6);
  v79 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v213)(v63, 1, v77);
  v212 = (void (**)(uint64_t, uint64_t))v78;
  if (v79 == 1)
  {
    sub_1459C(v63, &qword_3B4F30);
    v80 = 0;
  }
  else
  {
    v80 = JSONArray.bridgedPrimitiveValues<A>()(&type metadata for String);
    (*((void (**)(uint64_t, uint64_t))v78 + 1))(v63, v77);
  }
  v191 = OBJC_IVAR____TtC8ShelfKit12LegacyLockup_subtitles;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_subtitles] = v80;
  v81 = JSONObject.subscript.getter(0x776F7262657965, 0xE700000000000000);
  v82 = JSONObject.string.getter(v81);
  v84 = v83;
  v61(v21, v56);
  v85 = (uint64_t *)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_eyebrow];
  *v85 = v82;
  v85[1] = v84;
  v86 = JSONObject.subscript.getter(0xD000000000000017, 0x8000000000312530);
  v87 = JSONObject.string.getter(v86);
  v89 = v88;
  v61(v21, v56);
  v90 = v3;
  v91 = (uint64_t *)&v3[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_titleAccessibilityLabel];
  *v91 = v87;
  v91[1] = v89;
  v92 = v214;
  v93 = JSONObject.subscript.getter(0x6D614E65726E6567, 0xEA00000000007365);
  v94 = (uint64_t)v219;
  JSONObject.array.getter(v93);
  v222 = v61;
  v61(v92, v56);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v213)(v94, 1, v77) == 1)
  {
    sub_1459C(v94, &qword_3B4F30);
    v95 = 0;
  }
  else
  {
    v95 = JSONArray.bridgedPrimitiveValues<A>()(&type metadata for String);
    v212[1](v94, v77);
  }
  *(_QWORD *)&v90[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_genreNames] = v95;
  v96 = JSONObject.subscript.getter(0x6C616E6964726FLL, 0xE700000000000000);
  v97 = JSONObject.string.getter(v96);
  v99 = v98;
  v100 = v222;
  v222(v21, v56);
  v101 = v100;
  v102 = (uint64_t *)&v90[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal];
  *v102 = v97;
  v102[1] = v99;
  v190 = v102;
  JSONObject.subscript.getter(0x44657361656C6572, 0xEB00000000657461);
  v103 = v221;
  v104 = v225;
  ((void (*)(char *, uint64_t, uint64_t))v224)(v221, v225, v223);
  sub_8E490();
  ExpressibleByJSON.init(tryDeserializing:using:)(v21, v103, &type metadata for LazyDate);
  *(_QWORD *)&v90[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_lazyReleaseDate] = *(_QWORD *)&v227[0];
  v105 = JSONObject.subscript.getter(0xD000000000000010, 0x8000000000312550);
  v106 = JSONObject.string.getter(v105);
  v108 = v107;
  v101(v21, v56);
  v109 = (uint64_t *)&v90[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_releaseFrequency];
  *v109 = v106;
  v109[1] = v108;
  v110 = JSONObject.subscript.getter(0x676E69746172, 0xE600000000000000);
  v111 = JSONObject.float.getter(v110);
  v101(v21, v56);
  v112 = &v90[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating];
  *(_DWORD *)v112 = v111;
  v112[4] = BYTE4(v111) & 1;
  v113 = JSONObject.subscript.getter(0x6F43676E69746172, 0xEB00000000746E75);
  v114 = JSONObject.uint.getter(v113);
  LOBYTE(v108) = v115;
  v101(v21, v56);
  v194 = v90;
  v116 = &v90[OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ratingCount];
  *(_QWORD *)v116 = v114;
  v116[8] = v108 & 1;
  JSONObject.subscript.getter(0x63416E6F74747562, 0xEC0000006E6F6974);
  v117 = v220;
  v212 = *(void (***)(uint64_t, uint64_t))(v220 + 16);
  v118 = v209;
  ((void (*)(char *, char *, uint64_t))v212)(v209, v21, v56);
  v119 = v104;
  v120 = v223;
  ((void (*)(char *, uint64_t, uint64_t))v224)(v103, v119, v223);
  v121 = *(unsigned __int8 *)(v117 + 80);
  v122 = (v121 + 16) & ~v121;
  v123 = v211;
  v124 = *(unsigned __int8 *)(v211 + 80);
  v219 = (char *)v122;
  v125 = (unint64_t)&v215[v124 + v122] & ~v124;
  v215 = &v216[v125];
  v126 = v125;
  v213 = (char *)v125;
  v214 = (char *)(v121 | v124 | 7);
  v127 = swift_allocObject(&unk_385C28, &v216[v125], v214);
  v216 = *(char **)(v117 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v216)(v127 + v122, v118, v56);
  v220 = *(_QWORD *)(v123 + 32);
  v128 = v221;
  v129 = v120;
  ((void (*)(unint64_t, char *, uint64_t))v220)(v127 + v126, v221, v120);
  v130 = (uint64_t)v218;
  Lazy.init(_:)(sub_164A30, v127, v217);
  v131 = v222;
  v222(v21, v56);
  v132 = v195;
  swift_beginAccess(v195, v227, 33, 0);
  sub_3C454(v130, v132, &qword_3B3C88);
  swift_endAccess(v227);
  JSONObject.subscript.getter(0x7463416B63696C63, 0xEB000000006E6F69);
  v133 = v212;
  ((void (*)(char *, char *, uint64_t))v212)(v118, v21, v56);
  ((void (*)(char *, uint64_t, uint64_t))v224)(v128, v225, v129);
  v134 = v215;
  v135 = swift_allocObject(&unk_385C50, v215, v214);
  ((void (*)(char *, char *, uint64_t))v216)(&v219[v135], v118, v56);
  ((void (*)(char *, char *, uint64_t))v220)(&v213[v135], v128, v129);
  v136 = (uint64_t)v208;
  Lazy.init(_:)(sub_16D1F4, v135, v196);
  v131(v21, v56);
  v137 = v197;
  swift_beginAccess(v197, v227, 33, 0);
  sub_3C454(v136, v137, &qword_3B9EF0);
  swift_endAccess(v227);
  JSONObject.subscript.getter(0x41747865746E6F63, 0xED00006E6F697463);
  v138 = v118;
  ((void (*)(char *, char *, uint64_t))v133)(v118, v21, v56);
  v139 = (void (*)(char *, uint64_t, uint64_t))v224;
  v140 = v223;
  ((void (*)(char *, uint64_t, uint64_t))v224)(v128, v225, v223);
  v141 = v134;
  v142 = v214;
  v143 = swift_allocObject(&unk_385C78, v141, v214);
  ((void (*)(char *, char *, uint64_t))v216)(&v219[v143], v138, v56);
  v144 = v128;
  v145 = v140;
  ((void (*)(char *, char *, uint64_t))v220)(&v213[v143], v144, v140);
  v146 = (uint64_t)v218;
  Lazy.init(_:)(sub_164A30, v143, v217);
  v222(v21, v56);
  v147 = v198;
  swift_beginAccess(v198, v227, 33, 0);
  sub_3C454(v146, v147, &qword_3B3C88);
  swift_endAccess(v227);
  JSONObject.subscript.getter(0x6974634179616C70, 0xEA00000000006E6FLL);
  v148 = v209;
  ((void (*)(char *, char *, uint64_t))v212)(v209, v21, v56);
  v149 = v221;
  v139(v221, v225, v140);
  v150 = swift_allocObject(&unk_385CA0, v215, v142);
  v151 = v148;
  v152 = (void (*)(char *, char *, uint64_t))v216;
  ((void (*)(char *, char *, uint64_t))v216)(&v219[v150], v148, v56);
  v153 = v213;
  ((void (*)(char *, char *, uint64_t))v220)(&v213[v150], v149, v145);
  v154 = (uint64_t)v218;
  Lazy.init(_:)(sub_164A30, v150, v217);
  v222(v21, v56);
  v155 = v199;
  swift_beginAccess(v199, v227, 33, 0);
  sub_3C454(v154, v155, &qword_3B3C88);
  swift_endAccess(v227);
  JSONObject.subscript.getter(0x4177656976657270, 0xED00006E6F697463);
  ((void (*)(char *, char *, uint64_t))v212)(v151, v21, v56);
  v156 = v145;
  ((void (*)(char *, uint64_t, uint64_t))v224)(v149, v225, v145);
  v157 = swift_allocObject(&unk_385CC8, v215, v214);
  v152(&v219[v157], v151, v56);
  ((void (*)(char *, char *, uint64_t))v220)(&v153[v157], v149, v156);
  v158 = v217;
  v159 = (uint64_t)v218;
  Lazy.init(_:)(sub_164A30, v157, v217);
  v160 = v222;
  v222(v21, v56);
  v161 = v200;
  swift_beginAccess(v200, v227, 33, 0);
  sub_3C454(v159, v161, &qword_3B3C88);
  swift_endAccess(v227);
  JSONObject.subscript.getter(0x656C746974627573, 0xEE006E6F69746341);
  ((void (*)(char *, char *, uint64_t))v212)(v151, v21, v56);
  v162 = v149;
  v163 = v149;
  v164 = v21;
  v165 = v223;
  ((void (*)(char *, uint64_t, uint64_t))v224)(v163, v225, v223);
  v166 = swift_allocObject(&unk_385CF0, v215, v214);
  ((void (*)(char *, char *, uint64_t))v216)(&v219[v166], v151, v56);
  ((void (*)(char *, char *, uint64_t))v220)(&v213[v166], v162, v165);
  Lazy.init(_:)(sub_164A30, v166, v158);
  v167 = v164;
  v160(v164, v56);
  v168 = v201;
  swift_beginAccess(v201, v227, 33, 0);
  sub_3C454(v159, v168, &qword_3B3C88);
  swift_endAccess(v227);
  v169 = v203;
  v170 = JSONObject.subscript.getter(25705, 0xE200000000000000);
  v171 = JSONObject.string.getter(v170);
  v173 = v172;
  v160(v169, v56);
  v174 = v194;
  if (!v173)
  {
    v175 = *(_QWORD **)&v194[v193];
    v176 = *v192;
    v177 = v192[1];
    v178 = *(_QWORD *)&v194[v191];
    v179 = *v190;
    v180 = v190[1];
    swift_bridgeObjectRetain(v180);
    swift_bridgeObjectRetain(v177);
    swift_bridgeObjectRetain(v178);
    v171 = sub_19C230(v175, v176, v177, v178, v179, v180);
    v173 = v181;
    swift_bridgeObjectRelease(v177);
    swift_bridgeObjectRelease(v178);
    swift_bridgeObjectRelease(v180);
  }
  *((_QWORD *)v174 + 2) = v171;
  *((_QWORD *)v174 + 3) = v173;
  v182 = v229;
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
  v183 = v221;
  v184 = v225;
  v185 = v223;
  ((void (*)(char *, uint64_t, uint64_t))v224)(v221, v225, v223);
  v186 = (uint64_t)v205;
  ExpressibleByJSON.init(tryDeserializing:using:)(v167, v183, v202);
  v187 = (uint64_t)v204;
  sub_267BC(v186, (uint64_t)v204, (uint64_t *)&unk_3B8790);
  swift_beginAccess(&v174[OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics], v227, 33, 0);
  Lazy.wrappedValue.setter(v187, v206);
  swift_endAccess(v227);
  sub_1459C(v186, (uint64_t *)&unk_3B8790);
  (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v184, v185);
  v222((char *)v182, v207);
  return v174;
}

uint64_t LegacyLockup.init(id:adamId:isExplicit:icon:title:subtitles:eyebrow:titleAccessibilityLabel:genreNames:ordinal:releaseDate:releaseFrequency:rating:ratingCount:buttonAction:clickAction:contextAction:playAction:previewAction:subtitleAction:impressionMetrics:)(uint64_t a1, uint64_t a2, _QWORD *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;

  v28 = sub_19C468(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19 | ((HIDWORD(a19) & 1) << 32),
          a20,
          a21 & 1,
          a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28);
  swift_release(a27);
  swift_release(a26);
  swift_release(a25);
  swift_release(a24);
  swift_release(a22);
  swift_release(a16);
  return v28;
}

uint64_t LegacyLockup.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1459C(v0 + 32, &qword_3B0C50);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, &qword_3BA270);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, &qword_3BEB70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_lazyReleaseDate));
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction, &qword_3B3C88);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction, &qword_3B9EF0);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction, &qword_3B3C88);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, &qword_3B3C88);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction, &qword_3B3C88);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction, &qword_3B3C88);
  return v0;
}

uint64_t LegacyLockup.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit);
}

uint64_t TranscriptSnippet.segue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + 32, a1, &qword_3B0C50);
}

uint64_t sub_19B224@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE v10[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess(v7, v10, 0, 0);
  sub_267BC(v7, (uint64_t)v6, &qword_3BA270);
  Lazy.wrappedValue.getter(a2, v4);
  return sub_1459C((uint64_t)v6, &qword_3BA270);
}

uint64_t sub_19B2EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v14[-v8 - 8];
  sub_267BC(a1, (uint64_t)&v14[-v8 - 8], (uint64_t *)&unk_3B8790);
  v10 = *a2;
  sub_267BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_3B8790);
  swift_beginAccess(v10 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, v14, 33, 0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  Lazy.wrappedValue.setter(v6, v11);
  swift_endAccess(v14);
  return sub_1459C((uint64_t)v9, (uint64_t *)&unk_3B8790);
}

uint64_t LegacyLockup.adamId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
}

uint64_t LegacyLockup.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, a1, &qword_3BEB70);
}

uint64_t LegacyLockup.title.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
}

uint64_t LegacyLockup.subtitles.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_subtitles));
}

uint64_t LegacyLockup.eyebrow.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup_eyebrow);
}

uint64_t LegacyLockup.titleAccessibilityLabel.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup_titleAccessibilityLabel);
}

uint64_t LegacyLockup.genreNames.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_genreNames));
}

uint64_t LegacyLockup.ordinal.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal);
}

uint64_t LegacyLockup.lazyReleaseDate.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_lazyReleaseDate));
}

uint64_t LegacyLockup.releaseFrequency.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit12LegacyLockup_releaseFrequency);
}

unint64_t LegacyLockup.rating.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating) | ((unint64_t)*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating + 4) << 32);
}

uint64_t LegacyLockup.ratingCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ratingCount);
}

uint64_t sub_19B4D8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE v10[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  __chkstk_darwin(v4);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction;
  swift_beginAccess(v7, v10, 0, 0);
  sub_267BC(v7, (uint64_t)v6, &qword_3B9EF0);
  Lazy.wrappedValue.getter(a2, v4);
  return sub_1459C((uint64_t)v6, &qword_3B9EF0);
}

uint64_t sub_19B5A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];
  _BYTE v7[40];
  _BYTE v8[40];

  sub_267BC(a1, (uint64_t)v8, &qword_3B0C50);
  v3 = *a2;
  sub_267BC((uint64_t)v8, (uint64_t)v7, &qword_3B0C50);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction, v6, 33, 0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  Lazy.wrappedValue.setter(v7, v4);
  swift_endAccess(v6);
  return sub_1459C((uint64_t)v8, &qword_3B0C50);
}

uint64_t LegacyLockup.__allocating_init(id:adamId:isExplicit:icon:title:subtitles:eyebrow:titleAccessibilityLabel:genreNames:ordinal:releaseDate:releaseFrequency:rating:ratingCount:buttonAction:clickAction:contextAction:playAction:previewAction:subtitleAction:impressionMetrics:)(uint64_t a1, uint64_t a2, _QWORD *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;

  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = sub_19C468(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19 | ((HIDWORD(a19) & 1) << 32),
          a20,
          a21 & 1,
          a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28);
  swift_release(a27);
  swift_release(a26);
  swift_release(a25);
  swift_release(a24);
  swift_release(a22);
  swift_release(a16);
  return v29;
}

uint64_t LegacyLockup.__deallocating_deinit()
{
  uint64_t v0;

  LegacyLockup.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_19B7C8()
{
  return ComponentModel<>.id.getter();
}

uint64_t sub_19B7E8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + 32, a1, &qword_3B0C50);
}

uint64_t sub_19B810@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 432))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_19B83C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess(v6, v9, 0, 0);
  sub_267BC(v6, (uint64_t)v5, &qword_3BA270);
  Lazy.wrappedValue.getter(a1, v3);
  return sub_1459C((uint64_t)v5, &qword_3BA270);
}

uint64_t LegacyLockup.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_subtitles))
    return 0;
  swift_bridgeObjectRetain();
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
  v2 = sub_32914((unint64_t *)&qword_3B3030, (uint64_t *)&unk_3BC430, (uint64_t)&protocol conformance descriptor for [A]);
  v3 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v1, v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19B9AC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, a1, &qword_3BEB70);
}

uint64_t LegacyLockup.clickSender.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  a1[3] = type metadata accessor for LegacyLockup(0);
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_19BA0C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE v9[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction;
  swift_beginAccess(v6, v9, 0, 0);
  sub_267BC(v6, (uint64_t)v5, &qword_3B9EF0);
  Lazy.wrappedValue.getter(a1, v3);
  return sub_1459C((uint64_t)v5, &qword_3B9EF0);
}

uint64_t sub_19BAD0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  a1[3] = type metadata accessor for LegacyLockup(0);
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_19BB04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction;
  swift_beginAccess(v4, v7, 0, 0);
  sub_267BC(v4, (uint64_t)v3, &qword_3B3C88);
  Lazy.wrappedValue.getter(&v6, v1);
  sub_1459C((uint64_t)v3, &qword_3B3C88);
  return v6;
}

uint64_t LegacyLockup.metricsName(sender:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title + 8);
  if (v1)
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  else
    v2 = 0;
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t LegacyLockup.metricsId(sender:)()
{
  unint64_t v0;

  v0 = sub_144B4();
  return BinaryInteger.description.getter(&type metadata for UInt64, v0);
}

uint64_t sub_19BC54()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  v2 = v1[1];
  if (v2)
    v3 = *v1;
  else
    v3 = 0;
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_19BCA4()
{
  unint64_t v0;

  v0 = sub_144B4();
  return BinaryInteger.description.getter(&type metadata for UInt64, v0);
}

uint64_t LegacyLockup.generateItemLevelImpressionFields(interactionView:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void *v80;
  _OWORD v81[2];
  __int128 v82;
  void *v83;
  char v84[32];

  v3 = v2;
  v6 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ImpressionMetrics.ID(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v12);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = v3 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, v84, 0, 0);
  sub_267BC(v18, (uint64_t)v14, &qword_3BA270);
  Lazy.wrappedValue.getter(v17, v12);
  sub_1459C((uint64_t)v14, &qword_3BA270);
  v19 = type metadata accessor for ImpressionMetrics(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) != 1)
  {
    v21 = static os_log_type_t.error.getter();
    sub_1F470();
    v22 = (void *)static OS_os_log.metrics.getter();
    os_log(_:dso:log:_:_:)(v21, &dword_0, v22, "tried to generate impressions but impressions are already there", 63, 2, _swiftEmptyArrayStorage);

  }
  v23 = sub_1459C((uint64_t)v17, (uint64_t *)&unk_3B8790);
  v78 = v8;
  v79 = a2;
  v76 = v19;
  v77 = v11;
  v75 = v20;
  switch(a1)
  {
    case 2:
    case 3:
    case 4:
    case 7:
      v25 = v3;
      v26 = static MetricsTargetType.lockup.getter(v23, v24);
      break;
    case 6:
      v25 = v3;
      v26 = static MetricsTargetType.button.getter(v23, v24);
      break;
    default:
      v25 = v3;
      v26 = static MetricsTargetType.powerSwooshItem.getter(v23, v24);
      break;
  }
  v28 = v26;
  v29 = v27;
  v74 = v26;
  v30 = static MetricsField<>.impressionType.getter(v26);
  v32 = v31;
  v83 = &type metadata for String;
  *(_QWORD *)&v82 = v28;
  *((_QWORD *)&v82 + 1) = v29;
  sub_1F460(&v82, v81);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v80 = &_swiftEmptyDictionarySingleton;
  sub_1E640(v81, v30, v32, isUniquelyReferenced_nonNull_native);
  v34 = v80;
  swift_bridgeObjectRelease();
  v35 = swift_bridgeObjectRelease();
  v36 = static MetricsField<>.name.getter(v35);
  v38 = v37;
  v73 = v25;
  v39 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title + 8);
  if (v39)
    v40 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  else
    v40 = 0;
  v83 = &type metadata for String;
  if (v39)
    v41 = v39;
  else
    v41 = 0xE000000000000000;
  *(_QWORD *)&v82 = v40;
  *((_QWORD *)&v82 + 1) = v41;
  sub_1F460(&v82, v81);
  swift_bridgeObjectRetain();
  v42 = swift_isUniquelyReferenced_nonNull_native(v34);
  v80 = v34;
  sub_1E640(v81, v36, v38, v42);
  v43 = v80;
  swift_bridgeObjectRelease();
  v44 = swift_bridgeObjectRelease();
  v45 = static MetricsField<>.idType.getter(v44);
  v47 = v46;
  v48 = static MetricsIDType.itsID.getter();
  v83 = &type metadata for String;
  *(_QWORD *)&v82 = v48;
  *((_QWORD *)&v82 + 1) = v49;
  sub_1F460(&v82, v81);
  v50 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v80 = &_swiftEmptyDictionarySingleton;
  sub_1E640(v81, v45, v47, v50);
  v51 = v80;
  swift_bridgeObjectRelease();
  v52 = swift_bridgeObjectRelease();
  v53 = static MetricsField<>.name.getter(v52);
  v55 = v54;
  v83 = &type metadata for String;
  *(_QWORD *)&v82 = v40;
  *((_QWORD *)&v82 + 1) = v41;
  sub_1F460(&v82, v81);
  swift_bridgeObjectRetain();
  v56 = swift_isUniquelyReferenced_nonNull_native(v51);
  v80 = v51;
  sub_1E640(v81, v53, v55, v56);
  v57 = v80;
  swift_bridgeObjectRelease();
  v58 = swift_bridgeObjectRelease();
  v59 = static MetricsField<>.locationType.getter(v58);
  v61 = v60;
  v83 = &type metadata for String;
  *(_QWORD *)&v82 = v74;
  *((_QWORD *)&v82 + 1) = v29;
  sub_1F460(&v82, v81);
  v62 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v80 = &_swiftEmptyDictionarySingleton;
  sub_1E640(v81, v59, v61, v62);
  v63 = v80;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v82 = *(_QWORD *)(v73 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  v64 = sub_144B4();
  v65 = BinaryInteger.description.getter(&type metadata for UInt64, v64);
  v66 = v77;
  v68 = ImpressionMetrics.ID.init(element:)(v65, v67);
  v69 = v78;
  ScalarDictionary.init()(v68);
  v70 = v79;
  v71 = ImpressionMetrics.init(id:fields:custom:commonFields:clickLocationFields:)(v66, v43, v69, v57, v63);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v75 + 56))(v70, 0, 1, v76, v71);
}

uint64_t sub_19C1D0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return LegacyLockup.generateItemLevelImpressionFields(interactionView:)(a1, a2);
}

uint64_t sub_19C1F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 440))();
}

uint64_t sub_19C230(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  _QWORD *v30;

  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = AdamID.isEmpty.getter(a1);
  if ((v16 & 1) != 0)
  {
    UUID.init()(v16);
    v17 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8730);
    v19 = (_QWORD *)swift_allocObject(v18, 48, 7);
    *((_OWORD *)v19 + 1) = xmmword_2EA0D0;
    v30 = a1;
    v20 = sub_144B4();
    v19[4] = BinaryInteger.description.getter(&type metadata for UInt64, v20);
    v19[5] = v21;
    v30 = v19;
    if (a3)
    {
      swift_bridgeObjectRetain(a3);
      v19 = sub_10644((int *)((char *)&dword_0 + 1), 2, 1, v19);
      v19[2] = 2;
      v19[6] = a2;
      v19[7] = a3;
      v30 = v19;
    }
    if (a4)
    {
      v22 = swift_bridgeObjectRetain(a4);
      sub_1E3B9C(v22);
      v19 = v30;
    }
    if (a6)
    {
      swift_bridgeObjectRetain(a6);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        v19 = sub_10644(0, v19[2] + 1, 1, v19);
      v24 = v19[2];
      v23 = v19[3];
      if (v24 >= v23 >> 1)
        v19 = sub_10644((_QWORD *)(v23 > 1), v24 + 1, 1, v19);
      v19[2] = v24 + 1;
      v25 = &v19[2 * v24];
      v25[4] = a5;
      v25[5] = a6;
      v30 = v19;
    }
    v29 = v19;
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
    v27 = sub_32914((unint64_t *)&qword_3B3030, (uint64_t *)&unk_3BC430, (uint64_t)&protocol conformance descriptor for [A]);
    v17 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v26, v27);
    swift_bridgeObjectRelease(v19);
  }
  return v17;
}

uint64_t sub_19C468(uint64_t a1, uint64_t a2, _QWORD *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107[8];
  uint64_t v108;
  _OWORD v109[2];
  uint64_t v110;

  v29 = v28;
  v81 = a8;
  v80 = a7;
  v79 = a6;
  v105 = a5;
  v84 = a4;
  v78 = a3;
  v76 = a2;
  v75 = a1;
  v104 = a28;
  v102 = a27;
  v100 = a26;
  v97 = a25;
  v96 = a24;
  v103 = a23;
  v94 = a22;
  v92 = a21;
  v91 = a20;
  v90 = a19;
  v89 = a18;
  v88 = a17;
  v93 = a16;
  v77 = a15;
  v106 = a14;
  v87 = a13;
  v86 = a12;
  v85 = a11;
  v83 = a10;
  v82 = a9;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  __chkstk_darwin(v95);
  v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v99);
  v33 = (char *)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v101);
  v35 = (char *)&v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v36);
  v38 = (char *)&v75 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v75 - v40;
  *(_QWORD *)(v29 + 64) = 0;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_OWORD *)(v29 + 48) = 0u;
  v42 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  v43 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 1, 1, v43);
  sub_267BC((uint64_t)v41, (uint64_t)v38, (uint64_t *)&unk_3B8790);
  v98 = v38;
  Lazy.init(wrappedValue:)(v38, v43);
  sub_1459C((uint64_t)v41, (uint64_t *)&unk_3B8790);
  sub_15BD4((uint64_t)v35, v42, &qword_3BA270);
  v44 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction;
  *(_QWORD *)&v109[0] = 0;
  v45 = type metadata accessor for Action(0);
  Lazy.init(wrappedValue:)(v109, v45);
  sub_15BD4((uint64_t)v33, v44, &qword_3B3C88);
  v46 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction;
  v110 = 0;
  memset(v109, 0, sizeof(v109));
  sub_267BC((uint64_t)v109, (uint64_t)&v108, &qword_3B0C50);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2E40);
  Lazy.init(wrappedValue:)(&v108, v47);
  sub_1459C((uint64_t)v109, &qword_3B0C50);
  sub_15BD4((uint64_t)v31, v46, &qword_3B9EF0);
  v48 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction;
  *(_QWORD *)&v109[0] = 0;
  Lazy.init(wrappedValue:)(v109, v45);
  sub_15BD4((uint64_t)v33, v48, &qword_3B3C88);
  v49 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction;
  *(_QWORD *)&v109[0] = 0;
  Lazy.init(wrappedValue:)(v109, v45);
  sub_15BD4((uint64_t)v33, v49, &qword_3B3C88);
  v50 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction;
  *(_QWORD *)&v109[0] = 0;
  Lazy.init(wrappedValue:)(v109, v45);
  sub_15BD4((uint64_t)v33, v50, &qword_3B3C88);
  v51 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction;
  *(_QWORD *)&v109[0] = 0;
  Lazy.init(wrappedValue:)(v109, v45);
  sub_15BD4((uint64_t)v33, v51, &qword_3B3C88);
  v52 = v76;
  if (v76)
  {
    v53 = v81;
    v54 = v80;
    v55 = v79;
    v56 = v77;
    v57 = v78;
    v58 = v75;
  }
  else
  {
    v57 = v78;
    v55 = v79;
    v54 = v80;
    v53 = v81;
    v56 = v77;
    v58 = sub_19C230(v78, v79, v80, v81, v106, v77);
  }
  *(_QWORD *)(v29 + 16) = v58;
  *(_QWORD *)(v29 + 24) = v52;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId) = v57;
  *(_BYTE *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit) = v84 & 1;
  v59 = v105;
  sub_267BC(v105, v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, &qword_3BEB70);
  v60 = (uint64_t *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  *v60 = v55;
  v60[1] = v54;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_subtitles) = v53;
  v61 = (_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_eyebrow);
  v62 = v83;
  *v61 = v82;
  v61[1] = v62;
  v63 = (_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_titleAccessibilityLabel);
  v64 = v86;
  *v63 = v85;
  v63[1] = v64;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_genreNames) = v87;
  v65 = (_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal);
  *v65 = v106;
  v65[1] = v56;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_lazyReleaseDate) = v93;
  v66 = (_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_releaseFrequency);
  v67 = v89;
  *v66 = v88;
  v66[1] = v67;
  v68 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating;
  BYTE4(v67) = BYTE4(v90);
  *(_DWORD *)v68 = v90;
  *(_BYTE *)(v68 + 4) = BYTE4(v67) & 1;
  v69 = v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ratingCount;
  *(_QWORD *)v69 = v91;
  *(_BYTE *)(v69 + 8) = v92 & 1;
  v108 = v94;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction, v109, 33, 0);
  swift_retain();
  swift_retain();
  v70 = v99;
  Lazy.wrappedValue.setter(&v108, v99);
  swift_endAccess(v109);
  v71 = v103;
  sub_267BC(v103, (uint64_t)v109, &qword_3B0C50);
  sub_267BC((uint64_t)v109, (uint64_t)&v108, &qword_3B0C50);
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction, v107, 33, 0);
  Lazy.wrappedValue.setter(&v108, v95);
  swift_endAccess(v107);
  sub_1459C((uint64_t)v109, &qword_3B0C50);
  v108 = v96;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction, v109, 33, 0);
  swift_retain();
  Lazy.wrappedValue.setter(&v108, v70);
  swift_endAccess(v109);
  v108 = v97;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, v109, 33, 0);
  swift_retain();
  Lazy.wrappedValue.setter(&v108, v70);
  swift_endAccess(v109);
  v108 = v100;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction, v109, 33, 0);
  swift_retain();
  Lazy.wrappedValue.setter(&v108, v70);
  swift_endAccess(v109);
  v108 = v102;
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction, v109, 33, 0);
  swift_retain();
  Lazy.wrappedValue.setter(&v108, v70);
  swift_endAccess(v109);
  v72 = v104;
  sub_267BC(v104, (uint64_t)v41, (uint64_t *)&unk_3B8790);
  v73 = (uint64_t)v98;
  sub_267BC((uint64_t)v41, (uint64_t)v98, (uint64_t *)&unk_3B8790);
  swift_beginAccess(v29 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, v109, 33, 0);
  Lazy.wrappedValue.setter(v73, v101);
  swift_endAccess(v109);
  sub_1459C((uint64_t)v41, (uint64_t *)&unk_3B8790);
  sub_1459C(v72, (uint64_t *)&unk_3B8790);
  sub_1459C(v71, &qword_3B0C50);
  sub_1459C(v59, &qword_3BEB70);
  return v29;
}

uint64_t type metadata accessor for LegacyLockup(uint64_t a1)
{
  uint64_t result;

  result = qword_3BF4A8;
  if (!qword_3BF4A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LegacyLockup);
  return result;
}

uint64_t sub_19CD40()
{
  return sub_F1C0(&qword_3BF478, (void (*)(uint64_t))type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
}

uint64_t sub_19CD6C(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0((unint64_t *)&qword_3B1DA0, (void (*)(uint64_t))type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19CDA8(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3BF478, (void (*)(uint64_t))type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19CDEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_163638(a1, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction, a2);
}

uint64_t sub_19CE08(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_163708(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction);
}

uint64_t sub_19CE2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_163638(a1, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction, a2);
}

uint64_t sub_19CE48(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_163708(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction);
}

uint64_t sub_19CE64@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_163638(a1, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, a2);
}

uint64_t sub_19CE80(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_163708(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction);
}

uint64_t sub_19CE9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_163638(a1, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction, a2);
}

uint64_t sub_19CEB8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_163708(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__previewAction);
}

uint64_t sub_19CED4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_163638(a1, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction, a2);
}

uint64_t sub_19CEF0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_163708(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit12LegacyLockup__subtitleAction);
}

uint64_t sub_19CF0C()
{
  return type metadata accessor for LegacyLockup(0);
}

void sub_19CF14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[22];

  v11[0] = &unk_2FB5F8;
  v11[1] = &unk_2FB610;
  sub_1704F8(319, (unint64_t *)&unk_3BDA90, (uint64_t *)&unk_3B8790);
  if (v3 <= 0x3F)
  {
    v11[2] = *(_QWORD *)(v2 - 8) + 64;
    v11[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v11[4] = &unk_2FB628;
    sub_5971C(319);
    if (v5 <= 0x3F)
    {
      v11[5] = *(_QWORD *)(v4 - 8) + 64;
      v11[6] = &unk_2FB640;
      v11[9] = &unk_2FB640;
      v11[10] = &unk_2FB658;
      v11[11] = &unk_2FB640;
      v11[12] = &unk_2FB658;
      v11[7] = &unk_2FB658;
      v11[8] = &unk_2FB640;
      v11[13] = &unk_2FB640;
      v11[14] = &unk_2FB670;
      v11[15] = &unk_2FB688;
      sub_1704F8(319, (unint64_t *)&qword_3BD2B0, &qword_3BD2B8);
      if (v7 <= 0x3F)
      {
        v8 = *(_QWORD *)(v6 - 8) + 64;
        v11[16] = v8;
        sub_1704F8(319, &qword_3BDA88, &qword_3B0C50);
        if (v10 <= 0x3F)
        {
          v11[17] = *(_QWORD *)(v9 - 8) + 64;
          v11[18] = v8;
          v11[19] = v8;
          v11[20] = v8;
          v11[21] = v8;
          swift_updateClassMetadata2(a1, 256, 22, v11, a1 + 80);
        }
      }
    }
  }
}

uint64_t method lookup function for LegacyLockup(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LegacyLockup);
}

uint64_t dispatch thunk of LegacyLockup.impressionMetrics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of LegacyLockup.clickAction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of LegacyLockup.contextAction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of LegacyLockup.playAction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of LegacyLockup.previewAction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of Episode.summaryWithoutLineBreak.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of LegacyLockup.__allocating_init(id:adamId:isExplicit:icon:title:subtitles:eyebrow:titleAccessibilityLabel:genreNames:ordinal:releaseDate:releaseFrequency:rating:ratingCount:buttonAction:clickAction:contextAction:playAction:previewAction:subtitleAction:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 424))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t dispatch thunk of LegacyLockup.__allocating_init(deserializing:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of LegacyLockup.appEntityAnnotation()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

char *static Dependencies.allDependencies()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;

  v0 = type metadata accessor for Dependency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v68 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v67 = (char *)&v65 - v4;
  __chkstk_darwin(v5);
  v66 = (char *)&v65 - v6;
  __chkstk_darwin(v7);
  v65 = (char *)&v65 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v65 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v65 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v65 - v22;
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v65 - v26;
  v74 = static Dependencies.allDependencies()(v25);
  swift_retain();
  v28 = _s8ShelfKit12DependenciesO07artworkC09JetEngine15BaseObjectGraphCyFZ_0();
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BAFC0);
  v73 = v28;
  swift_retain();
  v75 = v27;
  Dependency.init<A>(satisfying:with:)(v29, sub_19D78C, 0, v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BE9F0);
  v76 = v23;
  Dependency.init<A>(satisfying:with:)(v30, sub_19D828, 0, v30);
  v31 = type metadata accessor for ASKBagContract(0);
  v77 = v20;
  Dependency.init<A>(satisfying:with:)(v31, sub_19D8E8, 0, v31);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BAFB0);
  v78 = v17;
  Dependency.init<A>(satisfying:with:)(v32, sub_19DA1C, 0, v32);
  v33 = type metadata accessor for StorePageStateController();
  v72 = v14;
  Dependency.init<A>(satisfying:with:)(v33, sub_19DA74, 0, v33);
  v34 = type metadata accessor for MetricsPipeline(0);
  v71 = v11;
  Dependency.init<A>(satisfying:with:)(v34, sub_19DB08, 0, v34);
  v35 = objc_msgSend((id)objc_opt_self(PFClientUtil), "supportsLocalLibrary");
  v69 = v1;
  if (v35)
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F28);
    v37 = v65;
    Dependency.init<A>(satisfying:with:)(v36, sub_19E470, 0, v36);
    v38 = type metadata accessor for RecentlySearchedStorage();
    v39 = v66;
    Dependency.init<A>(satisfying:with:)(v38, sub_19E514, 0, v38);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB110);
    v41 = v67;
    Dependency.init<A>(satisfying:with:)(v40, sub_19E5CC, 0, v40);
    v42 = type metadata accessor for CacheDeleteObserver();
    v43 = v68;
    Dependency.init<A>(satisfying:with:)(v42, sub_19E624, 0, v42);
    type metadata accessor for BaseObjectGraph(0);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF698);
    v45 = *(unsigned __int8 *)(v1 + 80);
    v46 = (v45 + 32) & ~v45;
    v47 = swift_allocObject(v44, v46 + *(_QWORD *)(v1 + 72), v45 | 7);
    *(_OWORD *)(v47 + 16) = xmmword_2EA0D0;
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v47 + v46, v37, v0);
    v48 = BaseObjectGraph.__allocating_init(name:_:)(0, 0xE000000000000000, v47);
    v49 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v39);
    v50 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v41);
    v70 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v43);
    swift_release(v48);
    swift_release(v49);
    swift_release(v50);
    v51 = *(void (**)(char *, uint64_t))(v1 + 8);
    v51(v43, v0);
    v51(v41, v0);
    v51(v39, v0);
    v51(v37, v0);
  }
  else
  {
    type metadata accessor for BaseObjectGraph(0);
    v70 = BaseObjectGraph.__allocating_init(name:_:)(0, 0xE000000000000000, _swiftEmptyArrayStorage);
  }
  v52 = v74;
  swift_retain();
  v53 = v73;
  v54 = dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)(v73);
  swift_release(v52);
  swift_release(v53);
  swift_retain();
  v55 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v75);
  swift_release(v54);
  swift_retain();
  v56 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v76);
  swift_release(v55);
  swift_retain();
  v57 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v77);
  swift_release(v56);
  swift_retain();
  v58 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v78);
  swift_release(v57);
  swift_retain();
  v59 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v72);
  swift_release(v58);
  swift_retain();
  v60 = v71;
  v61 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v71);
  swift_release(v59);
  swift_retain();
  v62 = v70;
  v68 = (char *)dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)(v70);
  swift_release(v54);
  swift_release(v55);
  swift_release(v56);
  swift_release(v57);
  swift_release(v58);
  swift_release(v59);
  swift_release(v62);
  swift_release_n(v61, 2);
  swift_release_n(v74, 2);
  swift_release(v73);
  v63 = *(void (**)(char *, uint64_t))(v69 + 8);
  v63(v60, v0);
  v63(v72, v0);
  v63(v78, v0);
  v63(v77, v0);
  v63(v76, v0);
  v63(v75, v0);
  return v68;
}

uint64_t sub_19D78C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  type metadata accessor for BaseObjectGraph(0);
  v2 = static BaseObjectGraph.current.getter();
  v3 = sub_327F8(0, (unint64_t *)&unk_3BF6A0, ACAccountStore_ptr);
  BaseObjectGraph.inject<A>(_:)(&v7, v3, v3);
  swift_release(v2);
  v4 = v7;
  v5 = type metadata accessor for JSStoreDataCache();
  result = swift_allocObject(v5, 24, 7);
  *(_QWORD *)(result + 16) = v4;
  a1[3] = v5;
  a1[4] = (uint64_t)&protocol witness table for JSStoreDataCache;
  *a1 = result;
  return result;
}

uint64_t sub_19D828@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  type metadata accessor for BaseObjectGraph(0);
  v2 = static BaseObjectGraph.current.getter();
  v3 = type metadata accessor for JSStoreDataProvider();
  v4 = (_QWORD *)swift_allocObject(v3, 104, 7);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BAFC0);
  BaseObjectGraph.inject<A>(_:)(v4 + 2, v5, v5);
  v6 = type metadata accessor for ExplicitContentPresenter(0);
  BaseObjectGraph.inject<A>(_:)(&v9, v6, v6);
  v4[7] = v9;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  BaseObjectGraph.inject<A>(_:)(v4 + 8, v7, v7);
  result = swift_release(v2);
  a1[3] = v3;
  a1[4] = &off_387AC8;
  *a1 = v4;
  return result;
}

uint64_t sub_19D8E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  objc_class *v11;
  char *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  objc_super v16;

  v2 = type metadata accessor for Bag(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  type metadata accessor for BaseObjectGraph(0);
  v9 = static BaseObjectGraph.current.getter();
  BaseObjectGraph.inject<A>(_:)(v8, v2, v2);
  swift_release(v9);
  v10 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v10(v5, v8, v2);
  v11 = (objc_class *)type metadata accessor for ASKBagContract(0);
  v12 = (char *)objc_allocWithZone(v11);
  v10(&v12[OBJC_IVAR____TtC8ShelfKit14ASKBagContract_bag], v5, v2);
  v16.receiver = v12;
  v16.super_class = v11;
  v13 = objc_msgSendSuper2(&v16, "init");
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
  *a1 = v13;
  return result;
}

char *sub_19DA1C@<X0>(char **a1@<X8>)
{
  uint64_t v2;
  id v3;
  char *result;

  type metadata accessor for BaseObjectGraph(0);
  v2 = static BaseObjectGraph.current.getter();
  v3 = objc_allocWithZone((Class)type metadata accessor for HighlightsProvider());
  result = HighlightsProvider.init(asPartOf:)(v2);
  *a1 = result;
  a1[1] = (char *)&protocol witness table for HighlightsProvider;
  return result;
}

uint64_t sub_19DA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for BaseObjectGraph(0);
  v2 = static BaseObjectGraph.current.getter();
  v3 = type metadata accessor for ThinClientEpisodeStateRepository(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v3, v3);
  v4 = type metadata accessor for ThinClientPodcastStateRepository(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(v4, v4);
  swift_release(v2);
  v5 = type metadata accessor for StorePageStateController();
  result = swift_allocObject(v5, 32, 7);
  *(_QWORD *)(result + 16) = v8;
  *(_QWORD *)(result + 24) = v7;
  *a1 = result;
  return result;
}

uint64_t sub_19DB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD *, uint64_t);
  id v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  ValueMetadata *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  void (*v85)(char *, _QWORD *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, _QWORD *, uint64_t);
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  _QWORD v125[5];
  id v126;
  ValueMetadata *matched;
  void *v128;

  v121 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BAFD0);
  v2 = __chkstk_darwin(v1);
  v120 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PodcastsMetricsEventRecorder(0, v2);
  v118 = *(_QWORD *)(v4 - 8);
  v119 = v4;
  v5 = __chkstk_darwin(v4);
  v117 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for JSMetricsEventLinter(0, v5);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for MetricsFieldExclusionRequest(0);
  v107 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v104 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v9 = *(_QWORD *)(v102 - 8);
  v10 = __chkstk_darwin(v102);
  v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for MetricsFieldsAggregator(0, v10);
  v13 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v98 - v17;
  __chkstk_darwin(v19);
  v101 = (char *)&v98 - v20;
  __chkstk_darwin(v21);
  v105 = (char *)&v98 - v22;
  __chkstk_darwin(v23);
  v100 = (char *)&v98 - v24;
  __chkstk_darwin(v25);
  v123 = (char *)&v98 - v26;
  __chkstk_darwin(v27);
  v124 = (char *)&v98 - v28;
  v29 = type metadata accessor for Bag(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (uint64_t *)((char *)&v98 - v34);
  v108 = type metadata accessor for BaseObjectGraph(0);
  v36 = ((uint64_t (*)(void))static BaseObjectGraph.current.getter)();
  BaseObjectGraph.inject<A>(_:)(v35, v29, v29);
  swift_release(v36);
  v112 = v30;
  v37 = *(void (**)(char *, _QWORD *, uint64_t))(v30 + 16);
  v111 = v35;
  v113 = v29;
  v110 = v37;
  v37(v32, v35, v29);
  v38 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  matched = (ValueMetadata *)sub_327F8(0, (unint64_t *)&unk_3BF6A0, ACAccountStore_ptr);
  v128 = &protocol witness table for ACAccountStore;
  v126 = v38;
  v39 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v109 = (uint64_t)v32;
  MetricsFieldsAggregator.init(bag:accountProvider:bundle:)(v32, &v126, v39);
  matched = (ValueMetadata *)type metadata accessor for ClickLocationFieldsProvider(0);
  v128 = (void *)sub_F1C0((unint64_t *)&unk_3BAFE0, (void (*)(uint64_t))&type metadata accessor for ClickLocationFieldsProvider, (uint64_t)&protocol conformance descriptor for ClickLocationFieldsProvider);
  __swift_allocate_boxed_opaque_existential_2Tm(&v126);
  v40 = ClickLocationFieldsProvider.init()();
  static MetricsFieldInclusionRequest.clickLocation.getter(v40);
  MetricsFieldsAggregator.addingOptInProvider(_:forRequest:)(&v126, v12);
  v41 = *(void (**)(char *, uint64_t))(v9 + 8);
  v42 = v102;
  v41(v12, v102);
  v106 = v13;
  v43 = *(void (**)(char *, uint64_t))(v13 + 8);
  v44 = v100;
  v45 = v122;
  v43(v15, v122);
  __swift_destroy_boxed_opaque_existential_1(&v126);
  matched = &type metadata for CrossfireReferralFieldsProvider;
  v128 = (void *)sub_121A48();
  static MetricsFieldInclusionRequest.crossfireReferral.getter(v128);
  v46 = v101;
  MetricsFieldsAggregator.addingOptInProvider(_:forRequest:)(&v126, v12);
  v41(v12, v42);
  v47 = v18;
  v48 = v45;
  v43(v47, v45);
  __swift_destroy_boxed_opaque_existential_1(&v126);
  matched = (ValueMetadata *)type metadata accessor for SearchFiltersFieldsProvider(0);
  v128 = (void *)sub_F1C0((unint64_t *)&unk_3BAFF0, (void (*)(uint64_t))&type metadata accessor for SearchFiltersFieldsProvider, (uint64_t)&protocol conformance descriptor for SearchFiltersFieldsProvider);
  __swift_allocate_boxed_opaque_existential_2Tm(&v126);
  v49 = SearchFiltersFieldsProvider.init()();
  static MetricsFieldInclusionRequest.searchFilters.getter(v49);
  v50 = v105;
  MetricsFieldsAggregator.addingOptInProvider(_:forRequest:)(&v126, v12);
  v41(v12, v42);
  v43(v46, v45);
  __swift_destroy_boxed_opaque_existential_1(&v126);
  type metadata accessor for AnalyticsIdentifierManager(0);
  v51 = static AnalyticsIdentifierManager.clientInfo.getter();
  v52 = static AnalyticsIdentifierManager.resetInterval.getter();
  type metadata accessor for Unstable.Accounts(0);
  v53 = static Unstable.Accounts.shared.getter();
  v54 = static AMSMetricsIdentifierFieldsProvider.metricsKeys.getter();
  matched = (ValueMetadata *)type metadata accessor for AMSMetricsIdentifierFieldsProvider(0);
  v128 = &protocol witness table for AMSMetricsIdentifierFieldsProvider;
  __swift_allocate_boxed_opaque_existential_2Tm(&v126);
  v55 = v51;
  v56 = v43;
  v57 = v48;
  v58 = AMSMetricsIdentifierFieldsProvider.init(accounts:clientInfo:resetInterval:keys:)(v53, v55, v54, v52);
  v59 = v104;
  static MetricsFieldExclusionRequest.amsMetricsID.getter(v58);
  v60 = v50;
  MetricsFieldsAggregator.addingOptOutProvider(_:forRequest:)(&v126, v59);
  v61 = *(void (**)(char *))(v107 + 8);
  v62 = v59;
  v63 = v59;
  v64 = v103;
  v61(v63);
  v56(v60, v48);
  __swift_destroy_boxed_opaque_existential_1(&v126);
  matched = (ValueMetadata *)type metadata accessor for PageContextFieldsProvider(0);
  v128 = (void *)sub_F1C0((unint64_t *)&unk_3BF6C0, (void (*)(uint64_t))&type metadata accessor for PageContextFieldsProvider, (uint64_t)&protocol conformance descriptor for PageContextFieldsProvider);
  __swift_allocate_boxed_opaque_existential_2Tm(&v126);
  PageContextFieldsProvider.init()();
  if (qword_3B0070 != -1)
    swift_once(&qword_3B0070, sub_6BACC);
  v65 = __swift_project_value_buffer(v64, (uint64_t)qword_3B3C48);
  v66 = v123;
  MetricsFieldsAggregator.addingOptOutProvider(_:forRequest:)(&v126, v65);
  v56(v44, v57);
  v67 = __swift_destroy_boxed_opaque_existential_1(&v126);
  v68 = static BaseObjectGraph.current.getter(v67);
  v69 = v56;
  v99 = v56;
  v70 = v68;
  matched = (ValueMetadata *)type metadata accessor for XPAccountsMatchFieldsProvider(0);
  v128 = (void *)sub_F1C0((unint64_t *)&unk_3BB000, (void (*)(uint64_t))&type metadata accessor for XPAccountsMatchFieldsProvider, (uint64_t)&protocol conformance descriptor for XPAccountsMatchFieldsProvider);
  __swift_allocate_boxed_opaque_existential_2Tm(&v126);
  v71 = XPAccountsMatchFieldsProvider.init(asPartOf:)(v70);
  v72 = v62;
  static MetricsFieldExclusionRequest.xpAccountsMatch.getter(v71);
  v73 = v124;
  MetricsFieldsAggregator.addingOptOutProvider(_:forRequest:)(&v126, v72);
  ((void (*)(char *, uint64_t))v61)(v72, v64);
  v74 = v66;
  v75 = v66;
  v76 = v57;
  v69(v74, v57);
  v77 = __swift_destroy_boxed_opaque_existential_1(&v126);
  v78 = static BaseObjectGraph.current.getter(v77);
  v79 = sub_F1C0((unint64_t *)&unk_3BF6D0, (void (*)(uint64_t))&type metadata accessor for JSMetricsEventLinter, (uint64_t)&protocol conformance descriptor for JSMetricsEventLinter);
  v80 = v114;
  v81 = (ValueMetadata *)v116;
  BaseObjectGraph.inject<A>(_:)(v116, v116, v79);
  swift_release(v78);
  v82 = v109;
  v83 = v111;
  v84 = v113;
  v85 = v110;
  v86 = ((uint64_t (*)(uint64_t, _QWORD *, uint64_t))v110)(v109, v111, v113);
  v87 = static MetricsTopic.main.getter(v86);
  v88 = v117;
  PodcastsMetricsEventRecorder.init(bag:defaultTopic:)(v82, v87, v89);
  v109 = type metadata accessor for StandardMetricsFieldsBuilder(0);
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v75, v73, v76);
  matched = v81;
  v128 = (void *)sub_F1C0(&qword_3BB010, (void (*)(uint64_t))&type metadata accessor for JSMetricsEventLinter, (uint64_t)&protocol conformance descriptor for JSMetricsEventLinter);
  v90 = __swift_allocate_boxed_opaque_existential_2Tm(&v126);
  v91 = v115;
  (*(void (**)(_QWORD *, char *, ValueMetadata *))(v115 + 16))(v90, v80, v81);
  v92 = v119;
  v125[3] = v119;
  v125[4] = sub_F1C0((unint64_t *)&unk_3BF6E0, (void (*)(uint64_t))&type metadata accessor for PodcastsMetricsEventRecorder, (uint64_t)&protocol conformance descriptor for PodcastsMetricsEventRecorder);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v125);
  v94 = v118;
  (*(void (**)(_QWORD *, char *, uint64_t))(v118 + 16))(boxed_opaque_existential_2Tm, v88, v92);
  v95 = v120;
  v85(v120, v83, v84);
  v96 = v112;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v95, 0, 1, v84);
  MetricsPipeline.init(builderType:aggregator:linter:recorder:bag:)(v109, &protocol witness table for StandardMetricsFieldsBuilder, v123, &v126, v125, v95);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v88, v92);
  (*(void (**)(char *, ValueMetadata *))(v91 + 8))(v80, v81);
  v99(v124, v122);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v96 + 8))(v83, v84);
}

uint64_t sub_19E470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = type metadata accessor for BaseObjectGraph(0);
  v3 = static BaseObjectGraph.current.getter(v2);
  v4 = type metadata accessor for LibraryObserverProvider();
  v5 = swift_allocObject(v4, 24, 7);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B68D0);
  inject<A, B>(_:from:)(&v8, v6, v3, v6, v2);
  result = swift_release(v3);
  *(_QWORD *)(v5 + 16) = v8;
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for LibraryObserverProvider;
  *a1 = v5;
  return result;
}

void sub_19E514(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v3 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v4 = objc_msgSend(v3, "privateQueueContext");

  v5 = type metadata accessor for RecentlySearchedStorage();
  v6 = (_QWORD *)swift_allocObject(v5, 96, 7);
  v7 = sub_31110((uint64_t)v2, v4, v6);

  *a1 = v7;
}

uint64_t sub_19E5CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for CategoryObserverProvider(0);
  type metadata accessor for BaseObjectGraph(0);
  v3 = static BaseObjectGraph.current.getter();
  result = CategoryObserverProvider.init(asPartOf:)(v3);
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for CategoryObserverProvider;
  *a1 = result;
  return result;
}

_QWORD *sub_19E624@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;

  v2 = type metadata accessor for BaseObjectGraph(0);
  v3 = static BaseObjectGraph.current.getter(v2);
  v4 = type metadata accessor for CacheDeleteObserver();
  swift_allocObject(v4, 104, 7);
  result = CacheDeleteObserver.init(asPartOf:)(v3);
  *a1 = result;
  return result;
}

uint64_t sub_19E67C@<X0>(_QWORD *a1@<X8>)
{
  a1[3] = type metadata accessor for ThumbnailImageResizer(0);
  a1[4] = &protocol witness table for ThumbnailImageResizer;
  __swift_allocate_boxed_opaque_existential_2Tm(a1);
  return ThumbnailImageResizer.init()();
}

uint64_t sub_19E6BC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void *v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF730);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA928);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BaseObjectGraph(0);
  v11 = static BaseObjectGraph.current.getter(v10);
  v13 = type metadata accessor for AssetDownloaders(0, v12);
  v14 = BaseObjectGraph.inject<A>(_:)(&v22, v13, v13);
  v15 = v22;
  AssetDownloaders.storeArtworkSource.getter(v14);
  v16 = sub_19F0C8();
  AssetSource.eraseToAnyAssetSource()(v2, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = type metadata accessor for AssetCaches(0);
  BaseObjectGraph.inject<A>(_:)(a1, v17, v17);
  sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v18 = static OS_dispatch_queue.uiAssetPreparationQueue.getter();
  swift_release(v11);

  v19 = type metadata accessor for StoreImageProvider(0);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(&a1[*(int *)(v19 + 20)], v9, v6);
  *(_QWORD *)&a1[*(int *)(v19 + 24)] = v18;
  return result;
}

id sub_19E850@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = sub_327F8(0, &qword_3BF718, MTImageStore_ptr);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "defaultStore");
  a1[3] = v2;
  a1[4] = &protocol witness table for MTImageStore;
  *a1 = result;
  return result;
}

uint64_t sub_19E8B0()
{
  return sub_19E9EC((uint64_t (*)(uint64_t))&LibraryImageProvider.init(asPartOf:));
}

uint64_t sub_19E8BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[24];
  _BYTE v11[40];
  _QWORD v12[5];

  v2 = type metadata accessor for BaseObjectGraph(0);
  v3 = static BaseObjectGraph.current.getter(v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF708);
  BaseObjectGraph.inject<A>(_:)(v12, v4, v4);
  swift_release(v3);
  sub_150C8((uint64_t)v12, (uint64_t)v11);
  v5 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v6);

  v7 = type metadata accessor for ArtworkLoader();
  swift_allocObject(v7, 129, 7);
  v8 = sub_1A8210((uint64_t)v5, 0);

  swift_beginAccess(v8 + 24, v10, 33, 0);
  sub_19F080((uint64_t)v11, v8 + 24);
  swift_endAccess(v10);
  result = __swift_destroy_boxed_opaque_existential_1(v12);
  *a1 = v8;
  return result;
}

uint64_t sub_19E9E0()
{
  return sub_19E9EC((uint64_t (*)(uint64_t))CompositeImageProvider.init(asPartOf:));
}

uint64_t sub_19E9EC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;

  type metadata accessor for BaseObjectGraph(0);
  v1 = static BaseObjectGraph.current.getter();
  return a1(v1);
}

uint64_t sub_19EA2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = type metadata accessor for StoreLibraryMultiplexingImageProvider(0);
  v3 = type metadata accessor for BaseObjectGraph(0);
  v4 = static BaseObjectGraph.current.getter(v3);
  v5 = sub_878F4();
  result = swift_release(v4);
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for StoreLibraryMultiplexingImageProvider;
  *a1 = v5;
  return result;
}

uint64_t sub_19EA94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for BaseObjectGraph(0);
  v3 = static BaseObjectGraph.current.getter(v2);
  v4 = type metadata accessor for StoreImageProvider(0);
  a1[3] = v4;
  a1[4] = sub_F1C0((unint64_t *)&unk_3BF720, (void (*)(uint64_t))type metadata accessor for StoreImageProvider, (uint64_t)&protocol conformance descriptor for StoreImageProvider);
  __swift_allocate_boxed_opaque_existential_2Tm(a1);
  v5 = sub_F1C0(&qword_3B4FE8, (void (*)(uint64_t))type metadata accessor for StoreImageProvider, (uint64_t)&protocol conformance descriptor for StoreImageProvider);
  BaseObjectGraph.inject<A>(_:)(v4, v4, v5);
  return swift_release(v3);
}

uint64_t _s8ShelfKit12DependenciesO07artworkC09JetEngine15BaseObjectGraphCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(uint64_t, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;

  v0 = type metadata accessor for Dependency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v66 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - v8;
  __chkstk_darwin(v10);
  v77 = (char *)&v66 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v66 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v66 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v66 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF6F0);
  v76 = v23;
  Dependency.init<A>(satisfying:with:)(v24, sub_19E67C, 0, v24);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5008);
  Dependency.init<A>(satisfying:with:)(v25, sub_10006C, 0, v25);
  v26 = type metadata accessor for StoreImageProvider(0);
  Dependency.init<A>(satisfying:with:)(v26, sub_19E6BC, 0, v26);
  if (objc_msgSend((id)objc_opt_self(PFClientUtil), "supportsLocalLibrary"))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF708);
    Dependency.init<A>(satisfying:with:)(v27, sub_19E850, 0, v27);
    v28 = type metadata accessor for LibraryImageProvider(0);
    Dependency.init<A>(satisfying:with:)(v28, sub_19E8B0, 0, v28);
    v29 = type metadata accessor for ArtworkLoader();
    Dependency.init<A>(satisfying:with:)(v29, sub_19E8BC, 0, v29);
    v30 = type metadata accessor for CompositeImageProvider(0);
    Dependency.init<A>(satisfying:with:)(v30, sub_19E9E0, 0, v30);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF700);
    v69 = v3;
    Dependency.init<A>(satisfying:with:)(v31, sub_19EA2C, 0, v31);
    v70 = type metadata accessor for BaseObjectGraph(0);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF698);
    v33 = *(unsigned __int8 *)(v1 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = v34 + *(_QWORD *)(v1 + 72);
    v71 = v34;
    v74 = v33 | 7;
    v75 = v35;
    v36 = swift_allocObject(v32, v35, v33 | 7);
    *(_OWORD *)(v36 + 16) = xmmword_2EA0D0;
    v73 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
    v73(v36 + v34, v14, v0);
    v37 = BaseObjectGraph.__allocating_init(name:_:)(0, 0xE000000000000000, v36);
    v68 = v9;
    v38 = v37;
    v39 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v77);
    v67 = v1;
    v72 = v14;
    v40 = v17;
    v41 = v39;
    v42 = v20;
    v43 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v9);
    v44 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v6);
    v45 = v69;
    v46 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v69);
    swift_release(v38);
    v47 = v41;
    v17 = v40;
    v14 = v72;
    swift_release(v47);
    v48 = v43;
    v20 = v42;
    swift_release(v48);
    swift_release(v44);
    v49 = *(void (**)(char *, uint64_t))(v67 + 8);
    v49(v45, v0);
    v50 = v6;
    v51 = v71;
    v49(v50, v0);
    v49(v68, v0);
    v49(v77, v0);
  }
  else
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF700);
    Dependency.init<A>(satisfying:with:)(v52, sub_19EA94, 0, v52);
    type metadata accessor for BaseObjectGraph(0);
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF698);
    v54 = *(unsigned __int8 *)(v1 + 80);
    v51 = (v54 + 32) & ~v54;
    v55 = v51 + *(_QWORD *)(v1 + 72);
    v74 = v54 | 7;
    v75 = v55;
    v56 = swift_allocObject(v53, v55, v54 | 7);
    *(_OWORD *)(v56 + 16) = xmmword_2EA0D0;
    v73 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
    v73(v56 + v51, v14, v0);
    v46 = BaseObjectGraph.__allocating_init(name:_:)(0, 0xE000000000000000, v56);
    v49 = *(void (**)(char *, uint64_t))(v1 + 8);
  }
  v49(v14, v0);
  type metadata accessor for BaseObjectGraph(0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF698);
  v58 = swift_allocObject(v57, v75, v74);
  *(_OWORD *)(v58 + 16) = xmmword_2EA0D0;
  v59 = v58 + v51;
  v60 = v76;
  v73(v59, v76, v0);
  v61 = BaseObjectGraph.__allocating_init(name:_:)(0, 0xE000000000000000, v58);
  v62 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v20);
  v63 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v17);
  v64 = dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)(v46);
  swift_release(v61);
  swift_release(v62);
  swift_release(v63);
  swift_release(v46);
  v49(v17, v0);
  v49(v20, v0);
  v49(v60, v0);
  return v64;
}

ValueMetadata *type metadata accessor for Dependencies()
{
  return &type metadata for Dependencies;
}

uint64_t sub_19F080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F0C8()
{
  unint64_t result;

  result = qword_3BF740;
  if (!qword_3BF740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3BF730);
    result = swift_getWitnessTable(&protocol conformance descriptor for ForegroundSessionSource<A>);
    atomic_store(result, (unint64_t *)&qword_3BF740);
  }
  return result;
}

__n128 CategoryPageFromYourShowsShelfIntentImplementation.init(asPartOf:performing:)@<Q0>(unint64_t a1@<X0>, unint64_t *a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 result;
  __n128 v10;
  __n128 v11;

  v5 = *a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(&v11, v6, v6);
  v10 = v11;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B68D0);
  BaseObjectGraph.inject<A>(_:)(&v11, v7, v7);
  swift_release(a1);
  v8 = v11.n128_u64[0];
  a3->n128_u64[0] = a1;
  a3->n128_u64[1] = v5;
  result = v10;
  a3[1] = v10;
  a3[2].n128_u64[0] = v8;
  return result;
}

uint64_t CategoryPageFromYourShowsShelfIntentImplementation.perform()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  *(_QWORD *)(v1 + 64) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  *(_QWORD *)(v1 + 88) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 104) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v0 + 32);
  return swift_task_switch(sub_19F240, 0, 0);
}

uint64_t sub_19F240()
{
  uint64_t v0;
  uint64_t ObjectType;
  _QWORD *v2;

  ObjectType = swift_getObjectType();
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  v2 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContextProvider.managedObjectContext(for:)[1]);
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_19F2BC;
  return NSManagedObjectContextProvider.managedObjectContext(for:)(*(_QWORD *)(v0 + 104), ObjectType);
}

uint64_t sub_19F2BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_task_switch(sub_19F334, 0, 0);
}

uint64_t sub_19F334()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_allocObject(&unk_385F50, 64, 7);
  *(_QWORD *)(v0 + 128) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
  v7 = v1;
  sub_19FC0C((_QWORD *)(v0 + 16));
  v8 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1]);
  *(_QWORD *)(v0 + 136) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2970);
  *v8 = v0;
  v8[1] = sub_19F430;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 56, *(_QWORD *)(v0 + 80), sub_19FBF0, v5, v9);
}

uint64_t sub_19F430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_19F4AC, 0, 0);
}

uint64_t sub_19F4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);

  v3 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_19F508@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  void (*v51)(_QWORD **, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  _QWORD *v82;
  __int128 v83;
  __int128 v84;
  _BYTE v85[25];
  _QWORD *v86;

  v76 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF790);
  v71 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v70 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for EpisodeListSettings(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v66 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2900);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = a1;
  v14 = (void *)NSManagedObjectContext.unsafeCategory(forAdamID:)(*(_QWORD *)(a1 + 8), v11);
  v74 = a2;
  v72 = v6;
  v73 = v14;
  if (!v14)
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_39;
    goto LABEL_4;
  }
  v15 = objc_msgSend(v14, "podcasts");
  v16 = sub_8852C();
  v17 = sub_1A0AE4();
  v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v15, v16, v17);

  while (1)
  {
    v78 = v18 & 0xC000000000000001;
    if ((v18 & 0xC000000000000001) != 0)
    {
      if (v18 < 0)
        v19 = v18;
      else
        v19 = v18 & 0xFFFFFFFFFFFFFF8;
      if (__CocoaSet.count.getter(v19) <= 0)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        v82 = _swiftEmptyArrayStorage;
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
        Just.init(_:)(&v82, v26);
        v27 = sub_32914(&qword_3B2920, &qword_3B2900, (uint64_t)&protocol conformance descriptor for Just<A>);
        v28 = Publisher.eraseToAnyPublisher()(v9, v27);

        result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_37:
        *v74 = v28;
        return result;
      }
      v20 = __CocoaSet.count.getter(v19);
      if (!v20)
      {
        swift_bridgeObjectRelease();
        v21 = _swiftEmptyArrayStorage;
LABEL_36:
        v82 = v21;
        v83 = 0u;
        v84 = 0u;
        memset(v85, 0, sizeof(v85));
        v53 = *(_QWORD *)(v69 + 24);
        ObjectType = swift_getObjectType();
        swift_bridgeObjectRetain_n(v21, 2);
        v55 = (uint64_t)v66;
        EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(&v82, 17, 3, 0, 0, 0);
        v56 = LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:)(v55, 15, ObjectType, v53);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v55, v68);
        v79 = v56;
        v57 = swift_allocObject(&unk_386000, 89, 7);
        *(_QWORD *)(v57 + 16) = v21;
        sub_1A0A14((uint64_t)&v82, v57 + 24);
        swift_bridgeObjectRetain();
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3730);
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
        v60 = sub_32914(&qword_3B3738, &qword_3B3730, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
        v61 = v70;
        Publisher.compactMap<A>(_:)(sub_1A0A50, v57, v58, v59, v60);
        swift_release(v57);
        v62 = sub_32914((unint64_t *)&unk_3BF7C0, (uint64_t *)&unk_3BF790, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
        v63 = v72;
        v28 = Publisher.eraseToAnyPublisher()(v72, v62);
        swift_bridgeObjectRelease();
        swift_release(v56);

        result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v61, v63);
        goto LABEL_37;
      }
    }
    else
    {
      v20 = *(_QWORD *)(v18 + 16);
      if (!v20)
        goto LABEL_18;
    }
    v86 = _swiftEmptyArrayStorage;
    sub_1808F8(0, v20 & ~(v20 >> 63), 0);
    if (v78)
    {
      v22 = v18 < 0 ? v18 : v18 & 0xFFFFFFFFFFFFFF8;
      v23 = __CocoaSet.startIndex.getter(v22);
      v25 = 1;
    }
    else
    {
      v23 = sub_1A0A5C(v18);
      v25 = v30 & 1;
    }
    v13 = v75;
    v9 = v76;
    v79 = v23;
    v80 = v24;
    v81 = v25;
    if ((v20 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_39:
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_B57D0((uint64_t)_swiftEmptyArrayStorage);
      v18 = v64;
    }
    else
    {
LABEL_4:
      v18 = (uint64_t)&_swiftEmptySetSingleton;
    }
  }
  v31 = v18 & 0xFFFFFFFFFFFFFF8;
  if (v18 < 0)
    v31 = v18;
  v77 = v31;
  while (1)
  {
    while (1)
    {
      sub_1A0778(v79, v80, v81, v18);
      v42 = v41;
      v43 = objc_msgSend(v41, "objectID");
      v44 = objc_msgSend(v43, "URIRepresentation");

      static URL._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v45 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
      {
        sub_1808F8(0, v45[2] + 1, 1);
        v45 = v86;
      }
      v47 = v45[2];
      v46 = v45[3];
      if (v47 >= v46 >> 1)
      {
        sub_1808F8(v46 > 1, v47 + 1, 1);
        v45 = v86;
      }
      v45[2] = v47 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v45+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v47, v13, v9);
      v86 = v45;
      if (v78)
        break;
      v32 = v79;
      v33 = v80;
      v34 = v81;
      v35 = sub_1A0694(v79, v80, v81, v18);
      v37 = v36;
      v39 = v38;
      sub_1A09C0(v32, v33, v34);
      v79 = v35;
      v80 = v37;
      v40 = v39 & 1;
      v13 = v75;
      v9 = v76;
      v81 = v40;
      if (!--v20)
        goto LABEL_35;
    }
    if ((v81 & 1) == 0)
      break;
    v48 = __CocoaSet.Index.handleBitPattern.getter(v79, v80);
    if (v48)
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
    else
      isUniquelyReferenced_nonNull_native = 1;
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7A0);
    v51 = (void (*)(_QWORD **, _QWORD))Set.Index._asCocoa.modify(&v82, v50);
    __CocoaSet.formIndex(after:isUnique:)(v52, isUniquelyReferenced_nonNull_native, v77);
    v51(&v82, 0);
    if (!--v20)
    {
LABEL_35:
      sub_1A09C0(v79, v80, v81);
      swift_bridgeObjectRelease();
      v21 = v86;
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19FBB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_19FBF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_19F508(v1 + 24, a1);
}

_QWORD *sub_19FC0C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[2];
  v3 = a1[4];
  swift_retain(*a1);
  swift_unknownObjectRetain(v2);
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t sub_19FC58@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[4];
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;

  v57 = a2;
  v53 = a1;
  v61 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v3);
  v62 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v5);
  v59 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ModernShelf(0);
  v50 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  __chkstk_darwin(v7);
  v9 = (char *)v48 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v10);
  v56 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
  __chkstk_darwin(v12);
  v55 = (uint64_t)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  __chkstk_darwin(v14);
  v54 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v16);
  v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v60 = (uint64_t)v48 - v20;
  v52 = type metadata accessor for Header.PrimaryAction(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v22 = (_QWORD *)((char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v23);
  v25 = (char *)v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v26);
  v28 = (char *)v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7F0);
  FRPOutput.content.getter(v29);
  v30 = v64;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A08);
  v32 = sub_32914(&qword_3BF800, &qword_3B0A08, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v31, v32) & 1) != 0)
  {
    v48[2] = v30;
    v48[3] = v18;
    v48[1] = v9;
    *(_QWORD *)v28 = v53;
    *(_OWORD *)(v28 + 8) = 0u;
    *(_OWORD *)(v28 + 24) = 0u;
    *(_OWORD *)(v28 + 40) = 0u;
    *(_OWORD *)(v28 + 49) = 0u;
    v49 = 8;
    swift_storeEnumTagMultiPayload(v28, v26, 8);
    LOBYTE(v64) = 0;
    LOBYTE(v63) = 0;
    v33 = swift_bridgeObjectRetain();
    static ActionMetrics.notInstrumented.getter(v33);
    v34 = type metadata accessor for FlowAction(0);
    swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
    v35 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v28, 0, 0, 0, 0, (char *)&v64, 0, 48, (char *)&v63, (uint64_t)v25);
    *v22 = v35;
    v36 = v52;
    swift_storeEnumTagMultiPayload(v22, v52, 0);
    v48[0] = v35;
    swift_retain();
    v37 = v57;
    EpisodeListType.title.getter();
    v39 = v38;
    v41 = v40;
    v42 = type metadata accessor for ActionMenu(0);
    v43 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v54, 1, 1, v42);
    v53 = v22;
    v44 = v55;
    sub_1A0B2C((uint64_t)v22, v55);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v44, 0, 1, v36);
    v45 = type metadata accessor for ArtworkModel(0);
    v46 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v56, 1, 1, v45);
    Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)(v39, v41, 0, 0, 0, 0, 0, 0, v60, v43, v44, (uint64_t)_swiftEmptyArrayStorage, v46);
    sub_1A0A14(v37, (uint64_t)&v64);
    __asm { BR              X11 }
  }
  result = swift_bridgeObjectRelease();
  *v61 = 0;
  return result;
}

uint64_t sub_1A0444(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_3BF774);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_81DB0;
  return CategoryPageFromYourShowsShelfIntentImplementation.perform()();
}

uint64_t destroy for CategoryPageFromYourShowsShelfIntentImplementation(_QWORD *a1)
{
  swift_release(*a1);
  swift_unknownObjectRelease(a1[2]);
  return swift_unknownObjectRelease(a1[4]);
}

uint64_t initializeWithCopy for CategoryPageFromYourShowsShelfIntentImplementation(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v7 = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 16) = v7;
  v5 = a2[4];
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain(v3);
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for CategoryPageFromYourShowsShelfIntentImplementation(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[3] = v7;
  v9 = a2[4];
  v10 = a1[4];
  a1[4] = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v10);
  return a1;
}

_QWORD *assignWithTake for CategoryPageFromYourShowsShelfIntentImplementation(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease(a1[2]);
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  v5 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryPageFromYourShowsShelfIntentImplementation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CategoryPageFromYourShowsShelfIntentImplementation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryPageFromYourShowsShelfIntentImplementation()
{
  return &type metadata for CategoryPageFromYourShowsShelfIntentImplementation;
}

int64_t sub_1A0694(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1A0778(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v11 = __CocoaSet.Index.element.getter(v7, a2);
        v21 = v11;
        v12 = sub_8852C();
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v4 = v22;
        swift_unknownObjectRelease(v11);
        v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v14 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v13 & ~v14;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v16 = static NSObject.== infix(_:_:)(v15, v4);

          if ((v16 & 1) == 0)
          {
            v17 = ~v14;
            do
            {
              v7 = (v7 + 1) & v17;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v19 = static NSObject.== infix(_:_:)(v18, v4);

            }
            while ((v19 & 1) == 0);
          }

LABEL_20:
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.element(at:)(a1, a2, v8);
  v21 = v9;
  v10 = sub_8852C();
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  swift_unknownObjectRelease(v9);
}

uint64_t sub_1A09C0(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_1A09CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_87198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  return swift_deallocObject(v0, 89, 7);
}

uint64_t sub_1A0A14(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for EpisodeListType - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1A0A50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_19FC58(*(uint64_t **)(v1 + 16), v1 + 24, a1);
}

uint64_t sub_1A0A5C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_1A0AE4()
{
  unint64_t result;

  result = qword_3BF7D8;
  if (!qword_3BF7D8)
  {
    sub_8852C();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject);
    atomic_store(result, (unint64_t *)&qword_3BF7D8);
  }
  return result;
}

uint64_t sub_1A0B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Header.PrimaryAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A0BB8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A0BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Header.PrimaryAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SheetAction.__allocating_init(title:sheetTitle:message:actions:cancellable:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;

  v9 = v8;
  v39 = a8;
  v37 = a5;
  v38 = a6;
  v36 = a4;
  v40 = a1;
  v41 = a2;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v20);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  *(_QWORD *)(v23 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = a7;
  v24 = (_QWORD *)(v23 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  v25 = v36;
  *v24 = a3;
  v24[1] = v25;
  v26 = (_QWORD *)(v23 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  v27 = v38;
  *v26 = v37;
  v26[1] = v27;
  *(_BYTE *)(v23 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = v39;
  v28 = type metadata accessor for ImpressionMetrics(0);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 1, 1, v28);
  v30 = static ActionMetrics.notInstrumented.getter(v29);
  UUID.init()(v30);
  v31 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)(v23 + 16) = v31;
  *(_QWORD *)(v23 + 24) = v33;
  v34 = v41;
  *(_QWORD *)(v23 + 32) = v40;
  *(_QWORD *)(v23 + 40) = v34;
  *(_BYTE *)(v23 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v23 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v19, v16);
  sub_23AB8((uint64_t)v22, v23 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v23;
}

uint64_t SheetActionStyle.init(rawValue:)@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374960, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

uint64_t SheetActionStyle.rawValue.getter()
{
  return 0x53746C7561666564;
}

Swift::Int sub_1A0EAC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x53746C7561666564, 0xEC000000656C7974);
  return Hasher._finalize()();
}

uint64_t sub_1A0F04(uint64_t a1)
{
  return String.hash(into:)(a1, 0x53746C7561666564, 0xEC000000656C7974);
}

Swift::Int sub_1A0F24()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x53746C7561666564, 0xEC000000656C7974);
  return Hasher._finalize()();
}

uint64_t sub_1A0F78@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374998, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1A0FC8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "defaultStyle");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t SheetAction.init(title:sheetTitle:message:actions:cancellable:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v9 = v8;
  v38 = a8;
  v36 = a5;
  v37 = a6;
  v35 = a4;
  v39 = a1;
  v40 = a2;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ActionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = a7;
  v23 = (_QWORD *)(v9 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  v24 = v35;
  *v23 = a3;
  v23[1] = v24;
  v25 = (_QWORD *)(v9 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  v26 = v37;
  *v25 = v36;
  v25[1] = v26;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = v38;
  v27 = type metadata accessor for ImpressionMetrics(0);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 1, 1, v27);
  v29 = static ActionMetrics.notInstrumented.getter(v28);
  UUID.init()(v29);
  v30 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v32 = v31;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)(v9 + 16) = v30;
  *(_QWORD *)(v9 + 24) = v32;
  v33 = v40;
  *(_QWORD *)(v9 + 32) = v39;
  *(_QWORD *)(v9 + 40) = v33;
  *(_BYTE *)(v9 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v9 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v19, v16);
  sub_23AB8((uint64_t)v22, v9 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v9;
}

uint64_t SheetAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return SheetAction.init(deserializing:using:)(a1, a2);
}

uint64_t SheetAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v68 = a2;
  v70 = a1;
  v3 = type metadata accessor for JSONContext(0);
  v66 = *(_QWORD *)(v3 - 8);
  v67 = v3;
  __chkstk_darwin(v3);
  v64 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JSONObject(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v63 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - v12;
  __chkstk_darwin(v14);
  v59 = (char *)&v58 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - v17;
  v19 = type metadata accessor for JSONArray(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v2;
  swift_retain();
  v23 = JSONObject.subscript.getter(0x736E6F69746361, 0xE700000000000000);
  JSONObject.array.getter(v23);
  v61 = v8;
  v62 = v9;
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v18, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) == 1)
  {
    sub_1459C((uint64_t)v7, &qword_3B4F30);
    v60 = _swiftEmptyArrayStorage;
    v25 = v24;
    v26 = 1;
    v27 = v70;
    v28 = v68;
    v29 = v61;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v7, v19);
    v30 = type metadata accessor for Action(0);
    __chkstk_darwin(v30);
    v31 = v68;
    v32 = v69;
    *(&v58 - 2) = v33;
    *(&v58 - 1) = v31;
    v60 = (_QWORD *)JSONArray.compactMap<A>(_:)(sub_9105C);
    v69 = v32;
    v34 = v59;
    v35 = v70;
    v36 = JSONObject.subscript.getter(0x6C65636E61437369, 0xEC000000656C6261);
    v37 = JSONObject.BOOL.getter(v36);
    v38 = v34;
    v29 = v61;
    v24(v38, v61);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v25 = v24;
    v26 = (v37 == 2) | v37;
    v27 = v35;
    v28 = v68;
  }
  v39 = JSONObject.subscript.getter(0x7469547465656873, 0xEA0000000000656CLL);
  v40 = JSONObject.string.getter(v39);
  v42 = v41;
  v25(v13, v29);
  v43 = v65;
  v44 = (uint64_t *)(v65 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  *v44 = v40;
  v44[1] = v42;
  v45 = JSONObject.subscript.getter(0x6567617373656DLL, 0xE700000000000000);
  v46 = JSONObject.string.getter(v45);
  v48 = v47;
  v25(v13, v29);
  v49 = (uint64_t *)(v43 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  *v49 = v46;
  v49[1] = v48;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = v60;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = v26 & 1;
  JSONObject.subscript.getter(0x656C797473, 0xE500000000000000);
  v50 = sub_1A18C0();
  JSONObject.stringEnum<A>(or:)(v51, FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init(), 0, &type metadata for SheetActionStyle, v50);
  v25(v13, v29);
  swift_release(v43);
  v52 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v63, v27, v29);
  v53 = v66;
  v54 = v67;
  v55 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v64, v28, v67);
  v56 = Action.init(deserializing:using:)(v52, v55);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v28, v54);
  v25(v27, v29);
  return v56;
}

uint64_t SheetAction.actions.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions));
}

uint64_t SheetAction.isCancelable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable);
}

uint64_t SheetAction.sheetTitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
}

uint64_t SheetAction.message.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
}

void SheetAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.SheetAction", 20, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_1A1718()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message + 8));
}

uint64_t SheetAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SheetAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_1A18C0()
{
  unint64_t result;

  result = qword_3BF808;
  if (!qword_3BF808)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SheetActionStyle);
    atomic_store(result, (unint64_t *)&qword_3BF808);
  }
  return result;
}

unint64_t sub_1A1908()
{
  unint64_t result;

  result = qword_3BF810;
  if (!qword_3BF810)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SheetActionStyle);
    atomic_store(result, (unint64_t *)&qword_3BF810);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SheetActionStyle(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A198C + 4 * asc_2FB770[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A19AC + 4 * byte_2FB775[v4]))();
}

_BYTE *sub_1A198C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A19AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A19B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A19BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A19C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A19CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SheetActionStyle()
{
  return &type metadata for SheetActionStyle;
}

uint64_t sub_1A19E8()
{
  return type metadata accessor for SheetAction(0);
}

uint64_t type metadata accessor for SheetAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3BF840;
  if (!qword_3BF840)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SheetAction);
  return result;
}

uint64_t sub_1A1A2C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = &unk_2FB870;
  v2[2] = &unk_2FB888;
  v2[3] = &unk_2FB888;
  v2[4] = (char *)&value witness table for () + 64;
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 160);
}

uint64_t method lookup function for SheetAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SheetAction);
}

uint64_t dispatch thunk of SheetAction.__allocating_init(title:sheetTitle:message:actions:cancellable:style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t SearchOrigin.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6C616E7265747865;
  if (a1 == 1)
    return 0x73746E6968;
  return 0x616D6D6F4379656BLL;
}

uint64_t sub_1A1B0C(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE500000000000000;
  v4 = 0x73746E6968;
  if (v2 != 1)
  {
    v4 = 0x616D6D6F4379656BLL;
    v3 = 0xEA0000000000646ELL;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 0x6C616E7265747865;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  v7 = 0xE500000000000000;
  v8 = 0x73746E6968;
  if (*a2 != 1)
  {
    v8 = 0x616D6D6F4379656BLL;
    v7 = 0xEA0000000000646ELL;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x6C616E7265747865;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE800000000000000;
  if (v5 == v9 && v6 == v10)
  {
    v11 = 1;
    v10 = v6;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v9, v10, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  return v11 & 1;
}

Swift::Int sub_1A1C10()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE500000000000000;
  v3 = 0x73746E6968;
  if (v1 != 1)
  {
    v3 = 0x616D6D6F4379656BLL;
    v2 = 0xEA0000000000646ELL;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6C616E7265747865;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1A1CB0(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE500000000000000;
  v3 = 0x73746E6968;
  if (*v1 != 1)
  {
    v3 = 0x616D6D6F4379656BLL;
    v2 = 0xEA0000000000646ELL;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6C616E7265747865;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1A1D2C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE500000000000000;
  v3 = 0x73746E6968;
  if (v1 != 1)
  {
    v3 = 0x616D6D6F4379656BLL;
    v2 = 0xEA0000000000646ELL;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6C616E7265747865;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1A1DC8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8ShelfKit12SearchOriginO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1A1DF4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x73746E6968;
  if (v2 != 1)
  {
    v5 = 0x616D6D6F4379656BLL;
    v4 = 0xEA0000000000646ELL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C616E7265747865;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A1E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1A2080();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1A1EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1A2080();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1A1EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_45ADC(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

unint64_t _s8ShelfKit12SearchOriginO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_3749D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_1A1F70()
{
  unint64_t result;

  result = qword_3BF938;
  if (!qword_3BF938)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchOrigin);
    atomic_store(result, (unint64_t *)&qword_3BF938);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A2000 + 4 * byte_2FB8A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A2034 + 4 * byte_2FB8A0[v4]))();
}

uint64_t sub_1A2034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A203C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A2044);
  return result;
}

uint64_t sub_1A2050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A2058);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A205C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A2064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchOrigin()
{
  return &type metadata for SearchOrigin;
}

unint64_t sub_1A2080()
{
  unint64_t result;

  result = qword_3BF940;
  if (!qword_3BF940)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchOrigin);
    atomic_store(result, (unint64_t *)&qword_3BF940);
  }
  return result;
}

Swift::Void __swiftcall ArtworkLoader.prefetchArtwork(using:)(Swift::OpaquePointer using)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(double *@<X0>, uint64_t@<X8>);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;
  _BYTE v26[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 64, v26, 0, 0);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 72);
  if (v9)
  {
    v11 = swift_allocObject(&unk_3862E0, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v10;
    v12 = sub_1A6A58;
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  sub_76C34(v9, v10);
  sub_76C34(v9, v10);
  sub_327A0((uint64_t)v12, v11);
  v13 = swift_allocObject(&unk_386290, 49, 7);
  *(Swift::OpaquePointer *)(v13 + 16) = using;
  *(_QWORD *)(v13 + 24) = v9;
  *(_QWORD *)(v13 + 32) = v10;
  *(_QWORD *)(v13 + 40) = v1;
  *(_BYTE *)(v13 + 48) = v9 != 0;
  aBlock[4] = sub_1A6A0C;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_18;
  v14 = _Block_copy(aBlock);
  sub_76C34(v9, v10);
  swift_bridgeObjectRetain(using._rawValue);
  v15 = swift_retain();
  static DispatchQoS.unspecified.getter(v15);
  v23 = _swiftEmptyArrayStorage;
  v16 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v18 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v14);
  _Block_release(v14);
  sub_327A0(v9, v10);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
  swift_release(v25);
}

uint64_t ArtworkLoader.fetchArtwork(using:forReason:closestMatch:checkCacheSynchronously:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t (*a6)(uint64_t a1, uint64_t a2, uint64_t a3), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_signpost_type_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint8_t *v59;
  os_signpost_id_t v60;
  uint8_t *v61;
  void (*v62)(char *, char *, uint64_t);
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(double *@<X0>, uint64_t@<X8>);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  char *v89;
  void *v90;
  void *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char v105;
  void *v106;
  id v107;
  id v108;
  char v109;
  char *v110;
  int v111;
  char *v112;
  BOOL v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t (**v125)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  void *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t (*v154)(uint64_t, uint64_t, uint64_t);
  void *v155;
  uint64_t v156;
  uint64_t (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v169;
  uint64_t v170;
  NSObject *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  os_signpost_type_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  void (*v181)(char *, uint64_t);
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint8_t *v186;
  os_signpost_id_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  int v194;
  uint64_t v195;
  int v196;
  void (*v197)(char *, char *, uint64_t);
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, char *, uint64_t);
  _QWORD *v210;
  uint64_t (*v211)(uint64_t, uint64_t, uint64_t);
  _QWORD *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  void **aBlock;
  uint64_t v224;
  uint64_t (*v225)(uint64_t);
  void *v226;
  void *v227;
  _QWORD *v228;
  __int128 v229;
  uint64_t v230;
  char v231[8];
  char v232[8];

  v212 = (_QWORD *)a7;
  v211 = a6;
  v194 = a5;
  v196 = a4;
  v215 = a3;
  v206 = a1;
  v191 = type metadata accessor for OSSignpostError(0);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v189 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for DispatchWorkItemFlags(0);
  v203 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v202 = (char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for DispatchQoS(0);
  v201 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v200 = (char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF948);
  __chkstk_darwin(v11);
  v13 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = type metadata accessor for UUID(0);
  v208 = *(_QWORD *)(v219 - 8);
  v14 = __chkstk_darwin(v219);
  v199 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = v15;
  __chkstk_darwin(v14);
  v17 = (char *)&v189 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v18);
  v20 = (char *)&v189 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = (_QWORD *)type metadata accessor for OSSignposter(0);
  v21 = *(v210 - 1);
  v22 = __chkstk_darwin(v210);
  v193 = (char *)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v189 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v189 - v27;
  v216 = type metadata accessor for OSSignpostID(0);
  v220 = *(_QWORD *)(v216 - 8);
  v29 = __chkstk_darwin(v216);
  v192 = (char *)&v189 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v218 = (char *)&v189 - v32;
  v195 = v33;
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v189 - v35;
  v37 = static OSSignposter.artwork.getter(v34);
  v207 = a2;
  dispatch thunk of ArtworkLoaderConfig.url.getter(v37);
  v38 = type metadata accessor for URL(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v20, 1, v38);
  v217 = v36;
  if ((_DWORD)v40 == 1)
  {
    v41 = sub_1459C((uint64_t)v20, &qword_3B4370);
    v42 = OSSignposter.logHandle.getter(v41);
    OSSignpostID.init(log:)(v42);
  }
  else
  {
    v43 = URL.absoluteString.getter(v40);
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v38);
    aBlock = (void **)v43;
    v224 = v45;
    v46 = sub_65CC4();
    v47 = StringProtocol.hash.getter(&type metadata for String, v46);
    v36 = v217;
    swift_bridgeObjectRelease();
    OSSignpostID.init(_:)(v47);
  }
  v48 = v210;
  v209 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 8);
  v49 = ((uint64_t (*)(char *, _QWORD *))v209)(v28, v210);
  v50 = static OSSignposter.artwork.getter(v49);
  v51 = OSSignposter.logHandle.getter(v50);
  v52 = static os_signpost_type_t.begin.getter(v51);
  v53 = (uint64_t)v17;
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v54 = v220;
    v214 = v13;
    v55 = v17;
    v56 = *(void (**)(char *, char *, uint64_t))(v220 + 16);
    v57 = v218;
    v58 = v216;
    v56(v218, v36, v216);
    v59 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v59 = 0;
    v60 = OSSignpostID.rawValue.getter(v59);
    _os_signpost_emit_with_name_impl(&dword_0, v51, v52, v60, "ArtworkLoader.fetchArtwork", "", v59, 2u);
    v61 = v59;
    v36 = v217;
    swift_slowDealloc(v61, -1, -1);

    v62 = v56;
    v53 = (uint64_t)v55;
    v13 = v214;
    v63 = *(void (**)(char *, uint64_t))(v54 + 8);
    v64 = v57;
    v63(v57, v58);
  }
  else
  {

    v62 = *(void (**)(char *, char *, uint64_t))(v220 + 16);
    v58 = v216;
    v64 = v218;
  }
  v62(v64, v36, v58);
  v65 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
  v66 = OSSignpostIntervalState.init(id:isOpen:)(v64, 1);
  ((void (*)(char *, _QWORD *))v209)(v26, v48);
  v67 = v221;
  swift_beginAccess(v221 + 64, v232, 0, 0);
  v69 = *(_QWORD *)(v67 + 64);
  v68 = *(_QWORD *)(v67 + 72);
  v214 = (char *)v66;
  v197 = v62;
  if (v69)
  {
    v70 = swift_allocObject(&unk_3863F8, 32, 7);
    *(_QWORD *)(v70 + 16) = v69;
    *(_QWORD *)(v70 + 24) = v68;
    v71 = sub_1A6A58;
  }
  else
  {
    v71 = 0;
    v70 = 0;
  }
  sub_76C34(v69, v68);
  sub_327A0((uint64_t)v71, v70);
  v72 = v221;
  v73 = *(_QWORD *)(v221 + 64);
  v74 = *(_QWORD *)(v221 + 72);
  sub_76C34(v73, v74);
  v75 = dispatch thunk of ArtworkLoaderConfig.withAlternativeSize(block:)(v73, v74);
  v76 = sub_327A0(v73, v74);
  UUID.init()(v76);
  sub_1A4244(v53, v215);
  swift_beginAccess(v72 + 24, v231, 0, 0);
  sub_267BC(v72 + 24, (uint64_t)&v229, &qword_3BF710);
  v213 = (char *)v53;
  if (v230)
  {
    v77 = sub_F4D8(&v229, (uint64_t)&aBlock);
    v78 = ArtworkLoaderConfig.template.getter(v77);
    v80 = v79;
    swift_bridgeObjectRelease();
    v81 = v75;
    if ((v80 & 0x2000000000000000) != 0)
      v82 = HIBYTE(v80) & 0xF;
    else
      v82 = v78 & 0xFFFFFFFFFFFFLL;
    sub_150C8((uint64_t)&aBlock, (uint64_t)&v229);
    if (v82)
    {
      v83 = __swift_project_boxed_opaque_existential_1(&v229, v230);
      v84 = ArtworkLoaderConfig.template.getter(v83);
      v85 = dispatch thunk of ImageStore.hasItem(forKey:)(v84);
      v36 = v217;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(&v229);
      v75 = v81;
      v86 = (uint64_t)v212;
      v87 = v211;
      if ((v85 & 1) != 0)
      {
        v88 = v81;
        v89 = v36;
        v90 = v226;
        v91 = v227;
        v92 = __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v226);
        v93 = ArtworkLoaderConfig.template.getter(v92);
        v95 = v94;
        v96 = ArtworkLoaderConfig.size.getter(v93);
        v98 = v97;
        v99 = type metadata accessor for ImageBlur(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v13, 1, 1, v99);
        v100 = dispatch thunk of ImageStore.image(forKey:size:imageBlur:)(v93, v95, v13, v90, v91, v96, v98);
        swift_bridgeObjectRelease();
        sub_1459C((uint64_t)v13, &qword_3BF948);
        v101 = (uint64_t)v213;
        sub_1A493C((uint64_t)v213, v100);
        swift_release(v88);
        swift_release(v214);
        (*(void (**)(char *, uint64_t))(v220 + 8))(v89, v58);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 32))(v206, v101, v219);
        __swift_destroy_boxed_opaque_existential_1(&aBlock);
        return v100;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(&v229);
      v75 = v81;
      v86 = (uint64_t)v212;
      v87 = v211;
    }
    __swift_destroy_boxed_opaque_existential_1(&aBlock);
    v53 = (uint64_t)v213;
    if (v87)
      goto LABEL_21;
  }
  else
  {
    sub_1459C((uint64_t)&v229, &qword_3BF710);
    v86 = (uint64_t)v212;
    v87 = v211;
    if (v211)
    {
LABEL_21:
      v102 = swift_allocObject(&unk_3863A8, 24, 7);
      swift_weakInit(v102 + 16);
      v103 = (_QWORD *)swift_allocObject(&unk_3863D0, 40, 7);
      v103[2] = v87;
      v103[3] = v86;
      v212 = v103;
      v103[4] = v102;
      v211 = sub_1A791C;
      goto LABEL_22;
    }
  }
  v211 = 0;
  v212 = (_QWORD *)v86;
LABEL_22:
  v104 = v221;
  swift_beginAccess(v221 + 80, &v229, 0, 0);
  v105 = *(_BYTE *)(v104 + 80);
  v207 = v75;
  if ((v105 & 1) == 0 && (v194 & 1) == 0)
  {
    sub_76C34((uint64_t)v87, v86);
LABEL_36:
    LODWORD(v209) = v69 != 0;
    v141 = v221;
    v210 = *(_QWORD **)(v221 + 88);
    v142 = v208;
    v143 = v199;
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v199, v53, v219);
    v197(v218, v36, v58);
    v144 = *(unsigned __int8 *)(v142 + 80);
    v145 = (v144 + 64) & ~v144;
    v146 = v145 + v198;
    v147 = v220;
    v148 = *(unsigned __int8 *)(v220 + 80);
    v149 = (v148 + v145 + v198 + 1) & ~v148;
    v150 = (v195 + v149 + 7) & 0xFFFFFFFFFFFFFFF8;
    v151 = swift_allocObject(&unk_386308, v150 + 8, v144 | v148 | 7);
    v152 = v75;
    v153 = v151;
    *(_QWORD *)(v151 + 16) = v141;
    *(_QWORD *)(v151 + 24) = v152;
    *(_BYTE *)(v151 + 32) = (_BYTE)v209;
    v154 = v211;
    *(_QWORD *)(v151 + 40) = v214;
    *(_QWORD *)(v151 + 48) = v154;
    *(_QWORD *)(v151 + 56) = v212;
    v209 = *(void (**)(uint64_t, char *, uint64_t))(v142 + 32);
    v209(v151 + v145, v143, v219);
    *(_BYTE *)(v153 + v146) = v196 & 1;
    (*(void (**)(uint64_t, char *, uint64_t))(v147 + 32))(v153 + v149, v218, v58);
    *(_QWORD *)(v153 + v150) = v215;
    v227 = sub_1A772C;
    v228 = (_QWORD *)v153;
    aBlock = _NSConcreteStackBlock;
    v224 = 1107296256;
    v225 = sub_2C9F4;
    v226 = &block_descriptor_9_1;
    v155 = _Block_copy(&aBlock);
    swift_retain();
    v156 = v207;
    swift_retain();
    v157 = v211;
    v158 = (uint64_t)v212;
    sub_76C34((uint64_t)v211, (uint64_t)v212);
    v159 = v214;
    v160 = swift_retain();
    v161 = v200;
    static DispatchQoS.unspecified.getter(v160);
    v222 = _swiftEmptyArrayStorage;
    v162 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
    v164 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
    v165 = v202;
    v166 = v163;
    v167 = v205;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v222, v166, v164, v205, v162);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v161, v165, v155);
    _Block_release(v155);
    sub_327A0((uint64_t)v157, v158);
    swift_release(v156);
    swift_release(v159);
    (*(void (**)(char *, uint64_t))(v203 + 8))(v165, v167);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v161, v204);
    (*(void (**)(char *, uint64_t))(v220 + 8))(v217, v216);
    swift_release(v228);
    v209(v206, v213, v219);
    return 0;
  }
  v106 = (void *)objc_opt_self(NSThread);
  sub_76C34((uint64_t)v87, v86);
  if (!objc_msgSend(v106, "isMainThread"))
    goto LABEL_36;
  sub_327F8(0, &qword_3BF950, NSOperationQueue_ptr);
  v107 = objc_msgSend(*(id *)(v221 + 16), "notificationQueue");
  v108 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v36 = v217;
  v109 = static NSObject.== infix(_:_:)(v107, v108);

  if ((v109 & 1) == 0)
    goto LABEL_36;
  v110 = (char *)sub_1A4CC0();
  v112 = v110;
  v196 = v111;
  if (v69)
    v113 = v111 == 2;
  else
    v113 = 0;
  v114 = v113;
  if (!(_BYTE)v111 || (v114 & 1) != 0)
  {
    v169 = v193;
    v170 = static OSSignposter.artwork.getter(v110);
    v171 = OSSignposter.logHandle.getter(v170);
    v172 = v192;
    v173 = v214;
    v174 = OSSignpostIntervalState.signpostID.getter();
    v175 = static os_signpost_type_t.end.getter(v174);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v176 = swift_retain();
      v177 = v189;
      checkForErrorAndConsumeState(state:)(v176);
      swift_release(v173);
      v178 = v190;
      v179 = v191;
      if ((*(unsigned int (**)(char *, uint64_t))(v190 + 88))(v177, v191) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v180 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v178 + 8))(v177, v179);
        v180 = "sync cached";
      }
      v184 = v192;
      v185 = v218;
      v183 = v216;
      v197(v218, v192, v216);
      v186 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v186 = 0;
      v187 = OSSignpostID.rawValue.getter(v186);
      _os_signpost_emit_with_name_impl(&dword_0, v171, v175, v187, "ArtworkLoader.fetchArtwork", v180, v186, 2u);
      swift_slowDealloc(v186, -1, -1);

      v181 = *(void (**)(char *, uint64_t))(v220 + 8);
      v181(v184, v183);
      ((void (*)(char *, _QWORD *))v209)(v193, v210);
      v181(v185, v183);
    }
    else
    {

      v181 = *(void (**)(char *, uint64_t))(v220 + 8);
      v182 = v172;
      v183 = v216;
      v181(v182, v216);
      ((void (*)(char *, _QWORD *))v209)(v169, v210);
    }
    v188 = v112;
    sub_1A493C(v53, (uint64_t)v112);

    sub_327A0((uint64_t)v211, (uint64_t)v212);
    swift_release(v207);
    swift_release(v173);
    v181(v217, v183);
    v137 = v208;
    v139 = v219;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v206, v53, v219);
  }
  else
  {
    v218 = v110;
    v115 = v221;
    v209 = *(void (**)(uint64_t, char *, uint64_t))(v221 + 88);
    v116 = v208;
    v210 = *(_QWORD **)(v208 + 16);
    v117 = v199;
    v118 = v219;
    ((void (*)(char *, uint64_t, uint64_t))v210)(v199, v53, v219);
    v119 = *(unsigned __int8 *)(v116 + 80);
    v120 = (v119 + 40) & ~v119;
    v121 = (v198 + v120 + 7) & 0xFFFFFFFFFFFFFFF8;
    v122 = (v121 + 23) & 0xFFFFFFFFFFFFFFF8;
    v123 = v75;
    v124 = (char *)swift_allocObject(&unk_386358, v122 + 8, v119 | 7);
    *((_QWORD *)v124 + 2) = v115;
    *((_QWORD *)v124 + 3) = v123;
    *((_QWORD *)v124 + 4) = v215;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v124[v120], v117, v118);
    v125 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v124[v121];
    v126 = v211;
    v127 = (uint64_t)v212;
    *v125 = v211;
    v125[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v127;
    *(_QWORD *)&v124[v122] = v214;
    v227 = sub_1A7874;
    v228 = v124;
    aBlock = _NSConcreteStackBlock;
    v224 = 1107296256;
    v225 = sub_2C9F4;
    v226 = &block_descriptor_15_3;
    v128 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_76C34((uint64_t)v126, v127);
    v129 = swift_retain();
    v130 = v200;
    static DispatchQoS.unspecified.getter(v129);
    v222 = _swiftEmptyArrayStorage;
    v131 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
    v133 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
    v134 = v202;
    v135 = v132;
    v136 = v205;
    v137 = v208;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v222, v135, v133, v205, v131);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v130, v134, v128);
    _Block_release(v128);
    v138 = v127;
    v139 = v219;
    sub_327A0((uint64_t)v126, v138);
    swift_release(v207);
    swift_release(v214);
    v140 = v134;
    v112 = v218;
    (*(void (**)(char *, uint64_t))(v203 + 8))(v140, v136);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v130, v204);
    (*(void (**)(char *, uint64_t))(v220 + 8))(v217, v216);
    swift_release(v228);
    ((void (*)(uint64_t, uint64_t, uint64_t))v210)(v206, v53, v139);
  }
  if (v196 >= 3u)
    v100 = 0;
  else
    v100 = (uint64_t)v112;
  (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v53, v139);
  return v100;
}

uint64_t ArtworkLoader.forgetFetch(forRequestIdentifier:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v21[1] = *(_QWORD *)(v1 + 88);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_386420, v13 + v11, v12 | 7);
  *(_QWORD *)(v14 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1A799C;
  v27 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_31_0;
  v15 = _Block_copy(aBlock);
  v16 = swift_retain();
  static DispatchQoS.unspecified.getter(v16);
  v25 = _swiftEmptyArrayStorage;
  v17 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v19 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  return swift_release(v27);
}

uint64_t ArtworkLoader.__allocating_init(imageStore:)(uint64_t a1)
{
  uint64_t v1;
  id v3;
  NSString v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setName:", v4);

  swift_allocObject(v1, 129, 7);
  v5 = sub_1A8210((uint64_t)v3, 0);

  swift_beginAccess(v5 + 24, v7, 33, 0);
  sub_19F080(a1, v5 + 24);
  swift_endAccess(v7);
  return v5;
}

void sub_1A3908()
{
  qword_3F3AF8 = 0x4014000000000000;
}

void *sub_1A3918(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  void *v7;
  double v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_23:
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v6)
    goto LABEL_27;
LABEL_3:
  v7 = 0;
  v8 = 1.79769313e308;
  v9 = 4;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
    else
      v10 = *(id *)(a1 + 8 * v9);
    v11 = v10;
    v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    objc_msgSend(v10, "size");
    if (v13 == a2 && v14 == a3)
    {
      swift_bridgeObjectRelease();

      return v11;
    }
    if (vabdd_f64(v13 / v14, a2 / a3) >= 0.2 || (v16 = vabdd_f64(v13, a2), v16 >= v8))
    {

    }
    else
    {

      v8 = v16;
      v7 = v11;
    }
    ++v9;
  }
  while (v12 != v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    v17 = qword_3B01A0;
    v18 = v7;
    if (v17 != -1)
      swift_once(&qword_3B01A0, sub_1A3908);

  }
  return v7;
}

unint64_t ArtworkLoader.FetchError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;

  v1 = *v0;
  swift_retain();
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for ArtworkLoaderConfig(0);
  v3 = sub_F1C0(&qword_3BF958, (void (*)(uint64_t))&type metadata accessor for ArtworkLoaderConfig, (uint64_t)&protocol conformance descriptor for ArtworkLoaderConfig);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  String.append(_:)(v4);
  swift_release(v1);
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t ArtworkLoader.imageStore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 24;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_267BC(v3, a1, &qword_3BF710);
}

uint64_t ArtworkLoader.imageStore.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 24;
  swift_beginAccess(v3, v5, 33, 0);
  sub_19F080(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*ArtworkLoader.imageStore.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1A3C84@<X0>(uint64_t *a1@<X0>, void (**a2)(double *@<X0>, uint64_t@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(double *@<X0>, uint64_t@<X8>);
  _BYTE v9[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 64, v9, 0, 0);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v3 + 72);
  if (v4)
  {
    v6 = swift_allocObject(&unk_386548, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1A6A58;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(double *@<X0>, uint64_t@<X8>))v6;
  return sub_76C34(v4, v5);
}

uint64_t sub_1A3D0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double (*v6)(double, double);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_386520, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1A8758;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess(*a2 + 64, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 72) = v5;
  sub_76C34(v3, v4);
  return sub_327A0(v8, v9);
}

uint64_t StorePageProvider.stateUpdatedCallback.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 64, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 64);
  sub_76C34(v1, *(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t StorePageProvider.stateUpdatedCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 64, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return sub_327A0(v5, v6);
}

uint64_t (*StorePageProvider.stateUpdatedCallback.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 64, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ArtworkLoader.checkCacheSynchronouslyDefault.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 80, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ArtworkLoader.checkCacheSynchronouslyDefault.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 80, v4, 1, 0);
  *(_BYTE *)(v1 + 80) = a1;
  return result;
}

uint64_t ArtworkLoader.__allocating_init(parent:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 129, 7);
  ArtworkLoader.init(parent:)(a1);
  return v3;
}

uint64_t ArtworkLoader.init(parent:)(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[40];
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  *(_OWORD *)(v1 + 65) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 96) = sub_288B40((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 104) = sub_288CE8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 112) = 0;
  v3 = sub_288D0C((uint64_t)_swiftEmptyArrayStorage);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF960);
  v5 = swift_allocObject(v4, 28, 7);
  *(_DWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v1 + 120) = v5;
  v6 = (void *)a1[11];
  *(_QWORD *)(v1 + 88) = v6;
  v7 = a1[2];
  v8 = objc_allocWithZone((Class)ASKResourceLoader);
  v9 = v6;
  *(_QWORD *)(v1 + 16) = objc_msgSend(v8, "initWithParentResourceLoader:", v7);
  *(_BYTE *)(v1 + 128) = 1;
  swift_beginAccess(a1 + 8, v19, 0, 0);
  v10 = a1[8];
  v11 = a1[9];
  swift_beginAccess(v1 + 64, v18, 1, 0);
  v12 = *(_QWORD *)(v1 + 64);
  v13 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v1 + 72) = v11;
  sub_76C34(v10, v11);
  sub_327A0(v12, v13);
  swift_beginAccess(a1 + 3, v17, 0, 0);
  sub_267BC((uint64_t)(a1 + 3), (uint64_t)v16, &qword_3BF710);
  swift_release(a1);
  swift_beginAccess(v1 + 24, v15, 33, 0);
  sub_19F080((uint64_t)v16, v1 + 24);
  swift_endAccess(v15);
  return v1;
}

uint64_t ArtworkLoader.withPageRenderController(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = swift_allocObject(*v1, 129, 7);
  v4 = (_QWORD *)swift_retain();
  ArtworkLoader.init(parent:)(v4);
  v5 = *(_QWORD *)(v3 + 112);
  *(_QWORD *)(v3 + 112) = a1;
  swift_retain();
  swift_release(v5);
  return v3;
}

unint64_t sub_1A4130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t result;
  char v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*a1 + 16) && (result = sub_299B0(a2), (v13 & 1) != 0))
  {
    v14 = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v17 = *a1;
    *a1 = 0x8000000000000000;
    sub_1DAF4(a3 & 1, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    *a1 = v17;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v14 = 0;
  }
  *a4 = v14;
  return result;
}

uint64_t sub_1A4244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = type metadata accessor for PageRenderEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = (BOOL *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + 112);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + 120);
    v12 = (_QWORD *)(v11 + 16);
    v13 = (os_unfair_lock_s *)(v11 + 24);
    swift_retain();
    os_unfair_lock_lock(v13);
    sub_1A4130(v12, a1, a2 == 2, &v17);
    os_unfair_lock_unlock(v13);
    if (v17 == 1)
    {
      return swift_release(v10);
    }
    else
    {
      *v9 = a2 == 2;
      v14 = enum case for PageRenderActivity.resourceFetchStarted(_:);
      v15 = type metadata accessor for PageRenderActivity(0);
      (*(void (**)(BOOL *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v9, v14, v15);
      (*(void (**)(BOOL *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for PageRenderEvent.activity(_:), v5);
      PageRenderController.handle(event:)(v9);
      swift_release(v10);
      return (*(uint64_t (**)(BOOL *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

uint64_t sub_1A43C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v3 = type metadata accessor for PageRenderEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 112);
  if (v8)
  {
    v9 = *(_QWORD *)(v1 + 120);
    v10 = (uint64_t *)(v9 + 16);
    v11 = (os_unfair_lock_s *)(v9 + 24);
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_1A4854(v10, a1, &v15);
    os_unfair_lock_unlock(v11);
    if (v15 == 2)
    {
      return swift_release(v8);
    }
    else
    {
      *v7 = v15 & 1;
      v12 = enum case for PageRenderActivity.resourceFetchCompleted(_:);
      v13 = type metadata accessor for PageRenderActivity(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v7, v12, v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for PageRenderEvent.activity(_:), v3);
      PageRenderController.handle(event:)(v7);
      swift_release(v8);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  return result;
}

uint64_t sub_1A451C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = type metadata accessor for PageRenderEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + 112);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + 120);
    v12 = (uint64_t *)(v11 + 16);
    v13 = (os_unfair_lock_s *)(v11 + 24);
    swift_retain();
    os_unfair_lock_lock(v13);
    sub_1A4854(v12, a1, &v18);
    os_unfair_lock_unlock(v13);
    v14 = v18;
    if (v18 == 2)
    {
      return swift_release(v10);
    }
    else
    {
      *(_QWORD *)v9 = a2;
      v9[8] = v14 & 1;
      v15 = enum case for PageRenderActivity.resourceFetchFailed(_:);
      v16 = type metadata accessor for PageRenderActivity(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v9, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for PageRenderEvent.activity(_:), v5);
      swift_errorRetain(a2);
      PageRenderController.handle(event:)(v9);
      swift_release(v10);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

uint64_t sub_1A4694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = type metadata accessor for PageRenderEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 112);
  if (v8)
  {
    v9 = *(_QWORD *)(v1 + 120);
    v10 = (uint64_t *)(v9 + 16);
    v11 = (os_unfair_lock_s *)(v9 + 24);
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_1A4854(v10, a1, &v20);
    os_unfair_lock_unlock(v11);
    if (v20 == 2)
    {
      return swift_release(v8);
    }
    else
    {
      v12 = v20 & 1;
      v13 = type metadata accessor for PageRenderResourceError(0);
      v14 = sub_F1C0(&qword_3BFAC8, (void (*)(uint64_t))&type metadata accessor for PageRenderResourceError, (uint64_t)&protocol conformance descriptor for PageRenderResourceError);
      v15 = swift_allocError(v13, v14, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v16, enum case for PageRenderResourceError.fetchCancelled(_:), v13);
      *(_QWORD *)v7 = v15;
      v7[8] = v12;
      v17 = enum case for PageRenderActivity.resourceFetchFailed(_:);
      v18 = type metadata accessor for PageRenderActivity(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v7, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for PageRenderEvent.activity(_:), v3);
      PageRenderController.handle(event:)(v7);
      swift_release(v8);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  return result;
}

uint64_t sub_1A4854@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  unint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  swift_bridgeObjectRetain(*a1);
  v6 = sub_299B0(a2);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v11 = *a1;
    v15 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2321DC();
      v11 = v15;
    }
    v12 = *(_QWORD *)(v11 + 48);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v6, v13);
    v14 = *(_BYTE *)(*(_QWORD *)(v11 + 56) + v6);
    sub_230CE0(v6, v11);
    *a1 = v11;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 2;
  }
  *a3 = v14;
  return result;
}

uint64_t sub_1A493C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  os_unfair_lock_s *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28[16];
  char v29;

  v5 = type metadata accessor for PageRenderEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (!a2)
  {
    v14 = type metadata accessor for PageRenderResourceError(0);
    v15 = sub_F1C0(&qword_3BFAC8, (void (*)(uint64_t))&type metadata accessor for PageRenderResourceError, (uint64_t)&protocol conformance descriptor for PageRenderResourceError);
    v16 = swift_allocError(v14, v15, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v17, enum case for PageRenderResourceError.notFound(_:), v14);
    v18 = *(_QWORD *)(v2 + 112);
    if (v18)
    {
      v19 = *(_QWORD *)(v2 + 120);
      v20 = (uint64_t *)(v19 + 16);
      v21 = (os_unfair_lock_s *)(v19 + 24);
      swift_retain();
      os_unfair_lock_lock(v21);
      sub_1A4854(v20, a1, &v29);
      os_unfair_lock_unlock(v21);
      v22 = v29;
      if (v29 != 2)
      {
        *(_QWORD *)v9 = v16;
        v9[8] = v22 & 1;
        v25 = enum case for PageRenderActivity.resourceFetchFailed(_:);
        v26 = type metadata accessor for PageRenderActivity(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v9, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for PageRenderEvent.activity(_:), v5);
        swift_errorRetain(v16);
        PageRenderController.handle(event:)(v9);
        swift_release(v18);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        return swift_errorRelease(v16);
      }
      swift_release(v18);
    }
    return swift_errorRelease(v16);
  }
  v10 = *(_QWORD *)(v2 + 112);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + 120);
    v12 = (uint64_t *)(v11 + 16);
    v13 = (os_unfair_lock_s *)(v11 + 24);
    swift_retain();
    os_unfair_lock_lock(v13);
    sub_1A4854(v12, a1, v28);
    os_unfair_lock_unlock(v13);
    if (v28[0] == 2)
    {
      return swift_release(v10);
    }
    else
    {
      *v9 = v28[0] & 1;
      v23 = enum case for PageRenderActivity.resourceFetchCompleted(_:);
      v24 = type metadata accessor for PageRenderActivity(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v9, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for PageRenderEvent.activity(_:), v5);
      PageRenderController.handle(event:)(v9);
      swift_release(v10);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

uint64_t sub_1A4C18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[24];

  v8 = a6 + 16;
  a4();
  if (a3)
  {
    swift_beginAccess(v8, v11, 0, 0);
    result = swift_weakLoadStrong(v8);
    if (!result)
      return result;
    v10 = result;
    swift_errorRetain(a3);
    sub_1A451C(a2, a3);
    swift_errorRelease(a3);
  }
  else
  {
    swift_beginAccess(v8, v11, 0, 0);
    result = swift_weakLoadStrong(v8);
    if (!result)
      return result;
    v10 = result;
    sub_1A43C0(a2);
  }
  return swift_release(v10);
}

void *sub_1A4CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  void *v28;
  _QWORD v31[4];
  uint64_t v32;
  _QWORD v33[4];
  _QWORD v34[2];

  v1 = type metadata accessor for CropCode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + 16);
  v33[0] = ArtworkLoaderConfig.template.getter(v3);
  v33[1] = v7;
  v31[0] = 8217467;
  v31[1] = 0xE300000000000000;
  v8 = ArtworkLoaderConfig.crop.getter();
  v9 = CropCode.rawValue.getter(v8);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v34[0] = v9;
  v34[1] = v11;
  v12 = sub_65CC4();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v31, v34, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v12, v12, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v6, "cachedResourcesForCacheKey:", v13);

  if (!v14)
    return 0;
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, (char *)&type metadata for Any + 8);

  v16 = _swiftEmptyArrayStorage;
  v34[0] = _swiftEmptyArrayStorage;
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    v18 = v15 + 32;
    swift_bridgeObjectRetain(v15);
    do
    {
      sub_1FB98(v18, (uint64_t)v33);
      sub_1FB98((uint64_t)v33, (uint64_t)v31);
      v20 = sub_327F8(0, (unint64_t *)&qword_3BA4D0, UIImage_ptr);
      if ((swift_dynamicCast(&v32, v31, (char *)&type metadata for Any + 8, v20, 6) & 1) == 0)
        v32 = 0;
      v21 = __swift_destroy_boxed_opaque_existential_1(v33);
      v22 = v32;
      if (v32)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
        v24 = *(_QWORD *)((char *)&dword_10 + (v34[0] & 0xFFFFFFFFFFFFFF8));
        v23 = *(_QWORD *)((char *)&dword_18 + (v34[0] & 0xFFFFFFFFFFFFFF8));
        if (v24 >= v23 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
        v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
        specialized Array._endMutation()(v19);
      }
      v18 += 32;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)v34[0];
  }
  v25 = swift_bridgeObjectRelease();
  v26 = ArtworkLoaderConfig.size.getter(v25);
  v28 = sub_1A3918((uint64_t)v16, v26, v27);
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1A4F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;

  v13 = swift_allocObject(&unk_386688, 48, 7);
  *(_QWORD *)(v13 + 16) = sub_1A8888;
  *(_QWORD *)(v13 + 24) = a7;
  *(_QWORD *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a6;
  swift_retain();
  sub_76C34(a5, a6);
  sub_1A5018(a2, a3, a4, sub_1A88A4, (void (*)(_QWORD, _QWORD, _QWORD))v13);
  return swift_release(v13);
}

void sub_1A5018(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void (*v40)(_QWORD, _QWORD, _QWORD);
  uint64_t (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_signpost_type_t v51;
  char v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  uint64_t v57;
  uint8_t *v58;
  os_signpost_id_t v59;
  os_signpost_type_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  NSString v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  void (*v95)(uint64_t, uint64_t);
  void *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t (*v102)(char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(_QWORD, _QWORD, _QWORD);
  uint64_t v113;
  id v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void **aBlock;
  uint64_t v123;
  uint64_t (*v124)(uint64_t);
  void *v125;
  uint64_t (*v126)();
  uint64_t v127;

  v119 = a3;
  v111 = a2;
  v112 = a5;
  v114 = a4;
  v116 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v116 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v116);
  v115 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for OSSignposter(0);
  v110 = *(char **)(v113 - 8);
  v8 = __chkstk_darwin(v113);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v106 = (char *)&v102 - v11;
  v12 = type metadata accessor for OSSignpostID(0);
  v117 = *(_QWORD *)(v12 - 8);
  v118 = v12;
  v13 = __chkstk_darwin(v12);
  v107 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v102 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v17);
  v19 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v109 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v102 - v25;
  v27 = a1;
  dispatch thunk of ArtworkLoaderConfig.url.getter(v24);
  v28 = v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1459C((uint64_t)v19, &qword_3B4370);
    v29 = objc_msgSend(*(id *)(v120 + 16), "notificationQueue");
    v31 = (uint64_t)v115;
    v30 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v115, v119, v116);
    v32 = *(unsigned __int8 *)(v6 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = (v7 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = swift_allocObject(&unk_3866B0, v34 + 8, v32 | 7);
    v36 = (uint64_t)v114;
    v37 = (uint64_t)v112;
    *(_QWORD *)(v35 + 16) = v114;
    *(_QWORD *)(v35 + 24) = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v35 + v33, v31, v30);
    *(_QWORD *)(v35 + v34) = v27;
    v126 = sub_1A8938;
    v127 = v35;
    aBlock = _NSConcreteStackBlock;
    v123 = 1107296256;
    v124 = sub_2C9F4;
    v125 = &block_descriptor_74;
    v38 = _Block_copy(&aBlock);
    v39 = v127;
    sub_76C34(v36, v37);
    swift_retain();
    swift_release(v39);
    objc_msgSend(v29, "addOperationWithBlock:", v38);
    _Block_release(v38);

  }
  else
  {
    v40 = v112;
    v108 = v6;
    v105 = v27;
    v41 = *(uint64_t (**)(char *, char *, uint64_t))(v21 + 32);
    v104 = v28;
    v42 = v41(v26, v19, v28);
    v43 = v106;
    v44 = static OSSignposter.artwork.getter(v42);
    aBlock = (void **)URL.absoluteString.getter(v44);
    v123 = v45;
    v46 = sub_65CC4();
    v47 = StringProtocol.hash.getter(&type metadata for String, v46);
    swift_bridgeObjectRelease();
    OSSignpostID.init(_:)(v47);
    v102 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v110 + 1);
    v48 = v102(v43, v113);
    v49 = static OSSignposter.artwork.getter(v48);
    v106 = v10;
    v50 = OSSignposter.logHandle.getter(v49);
    v51 = static os_signpost_type_t.begin.getter(v50);
    v52 = OS_os_log.signpostsEnabled.getter();
    v110 = v16;
    v103 = v21;
    if ((v52 & 1) != 0)
    {
      v53 = v117;
      v54 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
      v55 = v107;
      v56 = v26;
      v57 = v118;
      v54(v107, v110, v118);
      v58 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v58 = 0;
      v59 = OSSignpostID.rawValue.getter(v58);
      v60 = v51;
      v61 = v55;
      _os_signpost_emit_with_name_impl(&dword_0, v50, v60, v59, "ArtworkLoader.requestArtwork", "", v58, 2u);
      swift_slowDealloc(v58, -1, -1);

      v62 = v57;
      v26 = v56;
      v63 = *(void (**)(char *, uint64_t))(v53 + 8);
      v16 = v110;
      v63(v61, v62);
      v64 = v119;
      v65 = v108;
      v66 = (uint64_t)v40;
    }
    else
    {

      v62 = v118;
      v54 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
      v64 = v119;
      v65 = v108;
      v66 = (uint64_t)v40;
      v61 = v107;
    }
    v54(v61, v16, v62);
    v67 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
    v68 = OSSignpostIntervalState.init(id:isOpen:)(v61, 1);
    v102(v106, v113);
    v69 = (_QWORD *)swift_allocObject(&unk_386700, 48, 7);
    v69[2] = sub_1A897C;
    v69[3] = v68;
    v70 = (uint64_t)v114;
    v69[4] = v114;
    v69[5] = v66;
    v113 = v68;
    swift_retain();
    v71 = sub_76C34(v70, v66);
    dispatch thunk of ArtworkLoaderConfig.resolvedTemplate.getter(v71);
    v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v73 = (uint64_t)v115;
    v74 = v116;
    v112 = *(void (**)(_QWORD, _QWORD, _QWORD))(v65 + 16);
    v112(v115, v64, v116);
    v75 = swift_allocObject(&unk_386728, 32, 7);
    *(_QWORD *)(v75 + 16) = sub_1A88A4;
    *(_QWORD *)(v75 + 24) = v69;
    v76 = v120;
    swift_beginAccess(v120 + 96, &aBlock, 33, 0);
    v77 = v72;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v76 + 96));
    v121 = *(_QWORD *)(v76 + 96);
    *(_QWORD *)(v76 + 96) = 0x8000000000000000;
    v114 = v77;
    sub_1DDA4((uint64_t)v77, (uint64_t)sub_1A8C48, v75, v73, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v76 + 96) = v121;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v73, v74);
    swift_endAccess(&aBlock);
    v79 = v76 + 104;
    swift_beginAccess(v76 + 104, &aBlock, 32, 0);
    v80 = *(_QWORD *)(v76 + 104);
    if (*(_QWORD *)(v80 + 16) && (v81 = sub_29CA0((uint64_t)v26), (v82 & 1) != 0))
    {
      v83 = *(void ***)(*(_QWORD *)(v80 + 56) + 8 * v81);
      swift_endAccess(&aBlock);
      swift_bridgeObjectRetain(v83);
    }
    else
    {
      swift_endAccess(&aBlock);
      v83 = (void **)_swiftEmptyArrayStorage;
    }
    v84 = v103;
    v85 = (uint64_t)v109;
    v86 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v109, v26, v104);
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A40);
    v88 = *(_QWORD *)(v108 + 72);
    v89 = *(unsigned __int8 *)(v108 + 80);
    v115 = v26;
    v90 = (v89 + 32) & ~v89;
    v91 = swift_allocObject(v87, v90 + v88, v89 | 7);
    *(_OWORD *)(v91 + 16) = xmmword_2EA0D0;
    v112(v91 + v90, v119, v74);
    aBlock = v83;
    sub_1E41F4(v91);
    v92 = (uint64_t)aBlock;
    swift_beginAccess(v79, &aBlock, 33, 0);
    v93 = v120;
    v94 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v120 + 104));
    v121 = *(_QWORD *)(v93 + 104);
    *(_QWORD *)(v93 + 104) = 0x8000000000000000;
    sub_1DC48(v92, v85, v94);
    *(_QWORD *)(v93 + 104) = v121;
    swift_bridgeObjectRelease();
    v95 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v95(v85, v86);
    swift_endAccess(&aBlock);
    v96 = *(void **)(v93 + 16);
    v97 = v111;
    v98 = v114;
    if ((objc_msgSend(v96, "setReason:forRequestWithKey:", v111, v114) & 1) != 0)
    {
      swift_release(v113);

      swift_release(v69);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v110, v118);
      v99 = (uint64_t)v115;
    }
    else
    {
      v100 = (uint64_t)v115;
      v101 = sub_1A79CC(v105, (uint64_t)v115, (uint64_t)v98, v93);
      objc_msgSend(v96, "loadResourceWithRequest:reason:", v101, v97);
      swift_release(v113);

      swift_release(v69);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v110, v118);
      v99 = v100;
    }
    v95(v99, v86);
  }
}

void sub_1A58B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void **aBlock;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  void *v69;
  uint64_t (*v70)();
  _QWORD *v71;

  v63 = a7;
  v64 = a5;
  v65 = a6;
  v62 = a4;
  v14 = type metadata accessor for OSSignpostID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v61 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v61 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v61);
  v59 = a2;
  v60 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A4CC0();
  v21 = v19;
  if (v20 - 1 < 2)
  {
    v58 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v20 != 2 || (a3 & 1) == 0)
    {
      if ((a8 & 1) != 0)
      {
        v22 = *(void **)(a1 + 16);
        v56 = v19;
        v57 = objc_msgSend(v22, "notificationQueue");
        v23 = v15;
        v24 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v58, a9, v14);
        v25 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v60, v63, v61);
        v26 = *(unsigned __int8 *)(v15 + 80);
        v27 = (v26 + 16) & ~v26;
        v55 = (v16 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
        v54 = (v55 + 23) & 0xFFFFFFFFFFFFFFF8;
        v28 = *(unsigned __int8 *)(v17 + 80);
        v29 = (v28 + v54 + 8) & ~v28;
        v30 = swift_allocObject(&unk_386778, v29 + v18, v26 | v28 | 7);
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v30 + v27, v24, v14);
        v31 = v56;
        v32 = (uint64_t *)(v30 + v55);
        v34 = v64;
        v33 = v65;
        *v32 = v64;
        v32[1] = v33;
        *(_QWORD *)(v30 + v54) = v31;
        (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v30 + v29, v25, v61);
        v70 = sub_1A8B00;
        v71 = (_QWORD *)v30;
        aBlock = _NSConcreteStackBlock;
        v67 = 1107296256;
        v68 = sub_2C9F4;
        v69 = &block_descriptor_92;
        v35 = _Block_copy(&aBlock);
        v36 = v71;
        v21 = v31;
        sub_76C34(v34, v33);
        swift_release(v36);
        v37 = v57;
        objc_msgSend(v57, "addOperationWithBlock:", v35);

        _Block_release(v35);
      }
      goto LABEL_8;
    }
LABEL_7:
    v38 = *(void **)(a1 + 16);
    v39 = v19;
    v40 = objc_msgSend(v38, "notificationQueue");
    v42 = v60;
    v41 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v60, v63, v61);
    v43 = *(unsigned __int8 *)(v17 + 80);
    v44 = (v43 + 48) & ~v43;
    v45 = (char *)swift_allocObject(&unk_3867C8, v44 + v18, v43 | 7);
    v47 = v64;
    v46 = v65;
    *((_QWORD *)v45 + 2) = v62;
    *((_QWORD *)v45 + 3) = v47;
    *((_QWORD *)v45 + 4) = v46;
    *((_QWORD *)v45 + 5) = v39;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v45[v44], v42, v41);
    v70 = sub_1A8C14;
    v71 = v45;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_2C9F4;
    v69 = &block_descriptor_98;
    v48 = _Block_copy(&aBlock);
    v49 = v71;
    swift_retain();
    sub_76C34(v47, v46);
    v50 = v39;
    swift_release(v49);
    objc_msgSend(v40, "addOperationWithBlock:", v48);
    _Block_release(v48);

    return;
  }
  if (!v20)
    goto LABEL_7;
LABEL_8:
  v51 = swift_allocObject(&unk_386750, 48, 7);
  *(_QWORD *)(v51 + 16) = sub_1A8888;
  v53 = v64;
  v52 = v65;
  *(_QWORD *)(v51 + 24) = v62;
  *(_QWORD *)(v51 + 32) = v53;
  *(_QWORD *)(v51 + 40) = v52;
  swift_retain();
  sub_76C34(v53, v52);
  sub_1A5018(v59, a10, v63, sub_1A88A4, (void (*)(_QWORD, _QWORD, _QWORD))v51);

  swift_release(v51);
}

uint64_t sub_1A5CCC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  const char *v27;
  uint64_t result;
  uint64_t (*v29)(uint64_t, uint64_t, _QWORD);
  uint8_t *v30;
  os_signpost_id_t v31;
  void (*v32)(_BYTE *, uint64_t);
  _BYTE v33[4];
  int v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, _QWORD);

  v38 = a4;
  v39 = a5;
  v40 = a3;
  v43 = a2;
  v37 = type metadata accessor for OSSignpostError(0);
  v41 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = type metadata accessor for OSSignpostID(0);
  v8 = *(_QWORD *)(v42 - 8);
  v9 = __chkstk_darwin(v42);
  v36 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v12 = &v33[-v11];
  v13 = type metadata accessor for OSSignposter(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = &v33[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = static OSSignposter.artwork.getter(v15);
  v19 = OSSignposter.logHandle.getter(v18);
  v20 = OSSignpostIntervalState.signpostID.getter();
  v21 = static os_signpost_type_t.end.getter(v20);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v34 = v21;
    v35 = v13;
    v22 = swift_retain(a1);
    checkForErrorAndConsumeState(state:)(v22);
    swift_release(a1);
    v23 = v37;
    v24 = (*(uint64_t (**)(_BYTE *, uint64_t))(v41 + 88))(v7, v37);
    v25 = v36;
    v26 = v42;
    if (v24 == enum case for OSSignpostError.doubleEnd(_:))
    {
      v27 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v7, v23);
      v27 = "async cached";
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v25, v12, v26);
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    v31 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v19, (os_signpost_type_t)v34, v31, "ArtworkLoader.fetchArtwork", v27, v30, 2u);
    swift_slowDealloc(v30, -1, -1);

    v32 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v32(v12, v26);
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v35);
    result = ((uint64_t (*)(_BYTE *, uint64_t))v32)(v25, v26);
    v29 = v43;
    if (v43)
      return v29(v38, v39, 0);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v12, v42);
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
    v29 = v43;
    if (v43)
      return v29(v38, v39, 0);
  }
  return result;
}

uint64_t sub_1A5F7C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, _QWORD);

  v21 = a4;
  v22 = a5;
  v23 = a3;
  v24 = a2;
  v6 = type metadata accessor for OSSignpostID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OSSignposter(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static OSSignposter.artwork.getter(v12);
  v16 = OSSignposter.logHandle.getter(v15);
  v17 = static os_signpost_type_t.event.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    v19 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v16, v17, v19, "ArtworkLoader.fetchArtwork.closeMatchFound", "", v18, 2u);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {

    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (v24)
    return v24(v21, v22, 0);
  return result;
}

uint64_t sub_1A6120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  const char *v25;
  uint8_t *v27;
  os_signpost_id_t v28;
  void (*v29)(_BYTE *, uint64_t);
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = type metadata accessor for OSSignpostError(0);
  v3 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  v35 = v3;
  __chkstk_darwin(v2);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v36 - 8);
  v7 = __chkstk_darwin(v36);
  v33 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v10 = &v30[-v9];
  v11 = type metadata accessor for OSSignposter(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = static OSSignposter.artwork.getter(v13);
  v17 = OSSignposter.logHandle.getter(v16);
  v18 = OSSignpostIntervalState.signpostID.getter();
  v19 = static os_signpost_type_t.end.getter(v18);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v31 = v19;
    v32 = v11;
    v20 = swift_retain(a1);
    checkForErrorAndConsumeState(state:)(v20);
    swift_release(a1);
    v21 = v34;
    v22 = (*(uint64_t (**)(_BYTE *, uint64_t))(v35 + 88))(v5, v34);
    v23 = v33;
    v24 = v36;
    if (v22 == enum case for OSSignpostError.doubleEnd(_:))
    {
      v25 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v5, v21);
      v25 = "loaded";
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v23, v10, v24);
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    v28 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v17, (os_signpost_type_t)v31, v28, "ArtworkLoader.fetchArtwork", v25, v27, 2u);
    swift_slowDealloc(v27, -1, -1);

    v29 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v29(v10, v24);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v32);
    return ((uint64_t (*)(_BYTE *, uint64_t))v29)(v23, v24);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, v36);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1A63A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(_QWORD, uint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (result)
  {
    v6 = (void (*)(_QWORD, uint64_t, uint64_t))result;
    v7 = sub_1A8520();
    v8 = swift_allocError(&type metadata for ArtworkLoader.FetchError, v7, 0, 0);
    *v9 = a4;
    swift_retain();
    v6(0, a3, v8);
    return swift_errorRelease(v8);
  }
  return result;
}

uint64_t sub_1A6420(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  const char *v25;
  uint8_t *v27;
  os_signpost_id_t v28;
  void (*v29)(_BYTE *, uint64_t);
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = type metadata accessor for OSSignpostError(0);
  v3 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  v35 = v3;
  __chkstk_darwin(v2);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v36 - 8);
  v7 = __chkstk_darwin(v36);
  v33 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v10 = &v30[-v9];
  v11 = type metadata accessor for OSSignposter(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = static OSSignposter.artwork.getter(v13);
  v17 = OSSignposter.logHandle.getter(v16);
  v18 = OSSignpostIntervalState.signpostID.getter();
  v19 = static os_signpost_type_t.end.getter(v18);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v31 = v19;
    v32 = v11;
    v20 = swift_retain(a1);
    checkForErrorAndConsumeState(state:)(v20);
    swift_release(a1);
    v21 = v34;
    v22 = (*(uint64_t (**)(_BYTE *, uint64_t))(v35 + 88))(v5, v34);
    v23 = v33;
    v24 = v36;
    if (v22 == enum case for OSSignpostError.doubleEnd(_:))
    {
      v25 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v5, v21);
      v25 = "completed";
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v23, v10, v24);
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    v28 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v17, (os_signpost_type_t)v31, v28, "ArtworkLoader.requestArtwork", v25, v27, 2u);
    swift_slowDealloc(v27, -1, -1);

    v29 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v29(v10, v24);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v32);
    return ((uint64_t (*)(_BYTE *, uint64_t))v29)(v23, v24);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, v36);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1A66A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  NSString v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a5;
  v31 = a4;
  v32 = a3;
  v33 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v35 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v34 = (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v11 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  while (v11)
  {
    v29 = v8;
    v30 = a1 & 0xC000000000000001;
    v12 = 4;
    v27 = v9;
    while (1)
    {
      v13 = v12 - 4;
      if (!v30)
        break;
      v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, a1);
      v14 = v12 - 3;
      if (__OFADD__(v13, 1))
        goto LABEL_19;
LABEL_11:
      v15 = dispatch thunk of ArtworkLoaderConfig.withAlternativeSize(block:)(v33, v32);
      v16 = (uint64_t)v29;
      dispatch thunk of ArtworkLoaderConfig.url.getter();
      v17 = v35;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v16, 1, v9) == 1)
      {
        swift_release(v8);
        swift_release(v15);
        sub_1459C(v16, &qword_3B4370);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v34, v16, v9);
        v19 = sub_1A4CC0();
        if (!v18 || ((v18 == 2) & v28) != 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v9);
          swift_release(v8);
          swift_release(v15);

        }
        else
        {
          dispatch thunk of ArtworkLoaderConfig.resolvedTemplate.getter();
          v20 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v21 = *(void **)(v31 + 16);
          if ((objc_msgSend(v21, "setReason:forRequestWithKey:", 0, v20) & 1) != 0)
          {

            swift_release(v8);
            swift_release(v15);

            (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v27);
            return swift_bridgeObjectRelease();
          }
          v22 = a1;
          v23 = sub_1A79CC(v15, v34, (uint64_t)v20, v31);
          objc_msgSend(v21, "loadResourceWithRequest:reason:", v23, 0);

          a1 = v22;
          swift_release(v8);
          swift_release(v15);

          v9 = v27;
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v27);
        }
      }
      ++v12;
      if (v14 == v11)
        return swift_bridgeObjectRelease();
    }
    v8 = *(char **)(a1 + 8 * v12);
    swift_retain(v8);
    v14 = v12 - 3;
    if (!__OFADD__(v13, 1))
      goto LABEL_11;
LABEL_19:
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A69D0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1A6A0C()
{
  uint64_t v0;

  return sub_1A66A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1A6A34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1A6A5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  _QWORD *v45;

  v38 = a2;
  v39 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v42 = *(_QWORD *)(v12 - 8);
  v43 = v12;
  __chkstk_darwin(v12);
  v41 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (uint64_t *)((char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = v3;
  v19 = *(void **)(v3 + 88);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v15 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v14, v16);
  v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
  if ((v19 & 1) != 0)
  {
    v22 = objc_msgSend(a1, "urlRequest");
    static URLRequest._unconditionallyBridgeFromObjectiveC(_:)(v22);

    URLRequest.url.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v24 = v42;
    v23 = v43;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v7, 1, v43) == 1)
    {
      return sub_1459C((uint64_t)v7, &qword_3B4370);
    }
    else
    {
      v25 = (uint64_t)v41;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v41, v7, v23);
      v26 = v40;
      swift_beginAccess(v40 + 104, aBlock, 33, 0);
      v27 = sub_1D650(v25);
      swift_endAccess(aBlock);
      if (v27)
      {
        swift_retain();
        v28 = a1;
        v29 = sub_1A7CEC(v27, v26, v28);
        swift_bridgeObjectRelease();
        swift_release(v26);

        v30 = objc_msgSend(*(id *)(v26 + 16), "notificationQueue");
        v31 = (_QWORD *)swift_allocObject(&unk_3865C0, 40, 7);
        v33 = v38;
        v32 = v39;
        v31[2] = v29;
        v31[3] = v33;
        v31[4] = v32;
        aBlock[4] = sub_1A881C;
        v45 = v31;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_2C9F4;
        aBlock[3] = &block_descriptor_53;
        v34 = _Block_copy(aBlock);
        v35 = v45;
        v36 = v33;
        swift_errorRetain(v32);
        swift_release(v35);
        objc_msgSend(v30, "addOperationWithBlock:", v34);
        _Block_release(v34);

      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A6DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  unint64_t v20;
  BOOL v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;

  v42 = a3;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0960);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v37 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFAC0);
  __chkstk_darwin(v12);
  v45 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v46 = (char *)&v36 - v15;
  __chkstk_darwin(v16);
  v44 = (uint64_t)&v36 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  v40 = a1;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v41 = v18;
  v38 = v8;
  v39 = a2;
  v43 = v10;
  v21 = v18 == 0;
  if (v18)
    goto LABEL_3;
LABEL_2:
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v23 = v45;
  v22(v45, 1, 1, v9);
  v47 = v18;
  while (1)
  {
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v25 = 1;
    if (v24(v23, 1, v9) != 1)
    {
      v26 = *(int *)(v9 + 48);
      v27 = v6;
      v28 = *(void (**)(void))(v6 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v28)(v37, v23, v5);
      v29 = swift_allocObject(&unk_386610, 32, 7);
      *(_OWORD *)(v29 + 16) = *(_OWORD *)(v23 + v26);
      v30 = &v46[*(int *)(v9 + 48)];
      v28();
      v6 = v27;
      v25 = 0;
      *(_QWORD *)v30 = sub_1A8828;
      *((_QWORD *)v30 + 1) = v29;
      v8 = v38;
      a2 = v39;
    }
    v31 = (uint64_t)v46;
    v22((uint64_t)v46, v25, 1, v9);
    v32 = v44;
    sub_15BD4(v31, v44, &qword_3BFAC0);
    if (v24(v32, 1, v9) == 1)
      return swift_bridgeObjectRelease();
    v33 = v32 + *(int *)(v9 + 48);
    v34 = *(void (**)(uint64_t, char *, uint64_t))v33;
    v35 = *(_QWORD *)(v33 + 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v32, v5);
    v34(a2, v8, v42);
    swift_release(v35);
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v43;
    v18 = v41;
    v20 = v47;
    v21 = v47 >= v41;
    if (v47 == v41)
      goto LABEL_2;
LABEL_3:
    v23 = v45;
    if (v21)
      break;
    sub_267BC(v40+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v45, &qword_3B0960);
    v47 = v20 + 1;
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v23, 0, 1, v9);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ArtworkLoader.imageRequest(_:didLoad:)(ASKImageRequest *_, UIImage_optional didLoad)
{
  sub_1A6A5C(_, didLoad.value.super.isa, 0);
}

uint64_t ArtworkLoader.imageRequest(_:didFailWithError:)(void *a1, uint64_t a2)
{
  return sub_1A6A5C(a1, 0, a2);
}

uint64_t sub_1A71A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  char v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[24];

  v4 = (uint64_t *)(a1 + 96);
  swift_beginAccess(a1 + 96, v17, 33, 0);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 96));
  v5 = sub_299B0(a2);
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    return swift_endAccess(v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  v9 = *v4;
  v16 = *v4;
  *v4 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_232640();
    v9 = v16;
  }
  v10 = *(_QWORD *)(v9 + 48);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v5, v11);
  v12 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 24 * v5);
  v13 = *v12;
  v14 = v12[2];
  sub_231220(v5, v16);
  *(_QWORD *)(a1 + 96) = v16;
  swift_bridgeObjectRelease();
  swift_endAccess(v17);
  swift_release(v14);
  sub_1A4694(a2);
  objc_msgSend(*(id *)(a1 + 16), "setReason:forRequestWithKey:", 1, v13);
  return swift_unknownObjectRelease(v13);
}

uint64_t ArtworkLoader.isOccluded.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 128, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t ArtworkLoader.isOccluded.setter(char a1)
{
  uint64_t v1;
  _BYTE v4[24];

  swift_beginAccess(v1 + 128, v4, 1, 0);
  *(_BYTE *)(v1 + 128) = a1;
  return sub_1A7354();
}

uint64_t sub_1A7354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;
  _BYTE v21[24];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0 + 128, v21, 0, 0);
  v9 = *(_BYTE *)(v0 + 128);
  v17[1] = *(_QWORD *)(v0 + 88);
  v10 = swift_allocObject(&unk_386570, 32, 7);
  *(_BYTE *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v0;
  aBlock[4] = sub_1A87BC;
  v20 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_47;
  v11 = _Block_copy(aBlock);
  v12 = swift_retain();
  static DispatchQoS.unspecified.getter(v12);
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v15 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release(v20);
}

uint64_t (*ArtworkLoader.isOccluded.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 128, a1, 33, 0);
  return sub_1A7594;
}

uint64_t sub_1A7594(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return sub_1A7354();
  return result;
}

uint64_t ArtworkLoader.deinit()
{
  uint64_t v0;

  sub_1459C(v0 + 24, &qword_3BF710);
  sub_327A0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  return v0;
}

uint64_t ArtworkLoader.__deallocating_deinit()
{
  uint64_t v0;

  ArtworkLoader.deinit();
  return swift_deallocClassInstance(v0, 129, 7);
}

uint64_t sub_1A7640()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 5));
  if (*((_QWORD *)v0 + 6))
    swift_release(*((_QWORD *)v0 + 7));
  v9 = (v3 + 64) & ~v3;
  v10 = (v4 + v7 + v9 + 1) & ~v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v9], v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(&v0[v10], v5);
  return swift_deallocObject(v0, ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | v7 | 7);
}

void sub_1A772C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_1A58B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + v2, *(_BYTE *)(v0 + v3), v0 + v5, *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A77C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + 8;
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v7, v3 | 7);
}

uint64_t sub_1A7874()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A4F6C(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, *(uint64_t *)((char *)v0 + v3), *(uint64_t *)((char *)v0 + v3 + 8), *(uint64_t *)((char *)v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A78CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1A78F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1A791C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A4C18(a1, a2, a3, *(void (**)(void))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1A7928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1A799C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1A71A4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

id sub_1A79CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  Class isa;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSString v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  _QWORD v39[4];

  v37 = a3;
  v6 = type metadata accessor for CropCode(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URLRequest(0);
  v35 = *(_QWORD *)(v14 - 8);
  v36 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v13, 0, 60.0);
  v17 = objc_msgSend((id)objc_opt_self(AMSDefaults), "alwaysSendCacheBuster");
  if ((_DWORD)v17)
    v17 = (id)URLRequest.cachePolicy.setter(1);
  v18 = ArtworkLoaderConfig.size.getter(v17);
  v20 = objc_msgSend(objc_allocWithZone((Class)ASKImageDataConsumer), "initWithSize:scale:", v18, v19, ArtworkLoaderConfig.scale.getter());
  objc_msgSend(v20, "setRetainAspectRatio:", ArtworkLoaderConfig.retainAspectRatio.getter() & 1);
  v21 = objc_allocWithZone((Class)ASKImageRequest);
  v22 = v20;
  swift_retain(a4);
  isa = URLRequest._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v21, "initWithURLRequest:dataConsumer:delegate:", isa, v22, a4);

  swift_release(a4);
  v25 = v24;
  v39[2] = ArtworkLoaderConfig.template.getter(v25);
  v39[3] = v26;
  v39[0] = 8217467;
  v39[1] = 0xE300000000000000;
  v27 = ArtworkLoaderConfig.crop.getter();
  v28 = CropCode.rawValue.getter(v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v38[0] = v28;
  v38[1] = v30;
  v31 = sub_65CC4();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v39, v38, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v31, v31, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, "setCacheKey:", v32);

  objc_msgSend(v25, "setRequestKey:", v37);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
  return v25;
}

_QWORD *sub_1A7CEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v50[2];
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  _BYTE v64[24];
  char *v65;

  v52 = a3;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0960);
  v53 = *(_QWORD *)(v61 - 8);
  v6 = *(_QWORD *)(v53 + 64);
  __chkstk_darwin(v61);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v51 = (char *)v50 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFAC0);
  __chkstk_darwin(v8);
  v55 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v59 = (uint64_t)v50 - v7;
  __chkstk_darwin(v11);
  v54 = (uint64_t)v50 - v7;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B00);
  __chkstk_darwin(v16);
  v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v65 = v15;
    v50[0] = a1;
    v50[1] = v3;
    v20 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v57 = *(_QWORD *)(v13 + 72);
    v58 = (uint64_t *)(a2 + 96);
    v60 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    v62 = v18;
    v63 = _swiftEmptyArrayStorage;
    v21 = v53;
    v22 = (uint64_t)v55;
    v56 = v13;
    while (1)
    {
      v60(v18, v20, v12);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v23(v18, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
        break;
      v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v25 = (uint64_t)v65;
      v24(v65, v18, v12);
      v26 = v58;
      swift_beginAccess(v58, v64, 32, 0);
      v27 = *v26;
      if (*(_QWORD *)(v27 + 16) && (v28 = sub_299B0(v25), (v29 & 1) != 0))
      {
        v30 = *(_QWORD *)(v27 + 56) + 24 * v28;
        v31 = *(void **)v30;
        v32 = *(_QWORD *)(v30 + 8);
        v33 = *(_QWORD *)(v30 + 16);
        v34 = swift_allocObject(&unk_386638, 32, 7);
        *(_QWORD *)(v34 + 16) = v32;
        *(_QWORD *)(v34 + 24) = v33;
        swift_endAccess(v64);
        swift_unknownObjectRetain(v31);
        swift_retain();
        v35 = objc_msgSend(v52, "requestKey");
        LODWORD(v32) = objc_msgSend(v31, "isEqual:", v35);
        swift_unknownObjectRelease(v35);
        if ((_DWORD)v32)
        {
          swift_unknownObjectRelease(v31);
          v36 = v61;
          v37 = v51;
          v38 = &v51[*(int *)(v61 + 48)];
          v60(v51, (uint64_t)v65, v12);
          *(_QWORD *)v38 = sub_1A8828;
          *((_QWORD *)v38 + 1) = v34;
          v22 = (uint64_t)v55;
          v24(v55, v37, v12);
          v39 = (_QWORD *)(v22 + *(int *)(v36 + 48));
          v40 = swift_allocObject(&unk_386660, 32, 7);
          v41 = 0;
          *(_QWORD *)(v40 + 16) = sub_1A8828;
          *(_QWORD *)(v40 + 24) = v34;
          *v39 = sub_1A8860;
          v39[1] = v40;
          v21 = v53;
        }
        else
        {
          swift_release(v34);
          swift_unknownObjectRelease(v31);
          v41 = 1;
          v21 = v53;
          v22 = (uint64_t)v55;
        }
      }
      else
      {
        swift_endAccess(v64);
        v41 = 1;
      }
      v13 = v56;
      v42 = v61;
      v18 = v62;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, v41, 1, v61);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v65, v12);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v22, 1, v42) == 1)
      {
        sub_1459C(v22, &qword_3BFAC0);
      }
      else
      {
        v43 = v22;
        v44 = v54;
        sub_15BD4(v43, v54, &qword_3B0960);
        sub_15BD4(v44, v59, &qword_3B0960);
        if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
          v63 = (_QWORD *)sub_114C4(0, v63[2] + 1, 1, (unint64_t)v63);
        v46 = v63[2];
        v45 = v63[3];
        if (v46 >= v45 >> 1)
          v63 = (_QWORD *)sub_114C4(v45 > 1, v46 + 1, 1, (unint64_t)v63);
        v47 = v63;
        v63[2] = v46 + 1;
        sub_15BD4(v59, (uint64_t)v47+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v46, &qword_3B0960);
        v22 = (uint64_t)v55;
        v18 = v62;
      }
      v20 += v57;
      if (!--v19)
      {
        v23(v18, 1, 1, v12);
        break;
      }
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    swift_bridgeObjectRetain();
    v63 = _swiftEmptyArrayStorage;
    v48(v18, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_1A8210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v3 = v2;
  v28 = a1;
  v29 = a2;
  v27 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v3 + 65) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_QWORD *)(v3 + 96) = sub_288B40((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + 104) = sub_288CE8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + 112) = 0;
  v13 = sub_288D0C((uint64_t)_swiftEmptyArrayStorage);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF960);
  v15 = swift_allocObject(v14, 28, 7);
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v3 + 120) = v15;
  v16 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v16);
  v30 = _swiftEmptyArrayStorage;
  v17 = sub_F1C0(&qword_3B20B8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B20C0);
  v19 = sub_67E30((unint64_t *)&qword_3B20C8, &qword_3B20C0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v18, v19, v7, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v27);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000022, 0x8000000000312860, v12, v9, v6, 0);
  *(_QWORD *)(v3 + 88) = v20;
  v21 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v21, "setMaxConcurrentOperationCount:", 1);
  objc_msgSend(v21, "setUnderlyingQueue:", v20);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setName:", v22);

  v23 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v24 = objc_allocWithZone((Class)ASKResourceLoader);
  v25 = objc_msgSend(v24, "initWithRequestQueue:accessQueue:notificationQueue:cacheLimit:", v28, v21, v23, v29);

  *(_QWORD *)(v3 + 16) = v25;
  *(_BYTE *)(v3 + 128) = 0;
  return v3;
}

unint64_t sub_1A8520()
{
  unint64_t result;

  result = qword_3BF968;
  if (!qword_3BF968)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkLoader.FetchError);
    atomic_store(result, (unint64_t *)&qword_3BF968);
  }
  return result;
}

uint64_t sub_1A856C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 128, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 128);
  return result;
}

uint64_t sub_1A85B0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 128, v5, 1, 0);
  *(_BYTE *)(v3 + 128) = v2;
  return sub_1A7354();
}

uint64_t type metadata accessor for ArtworkLoader()
{
  return objc_opt_self(_TtC8ShelfKit13ArtworkLoader);
}

uint64_t method lookup function for ArtworkLoader(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ArtworkLoader);
}

uint64_t dispatch thunk of ArtworkLoader.__allocating_init(parent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t *__swift_initWithCopy_strong(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t __swift_destroy_strong(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *__swift_assignWithCopy_strong(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t *__swift_assignWithTake_strong(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkLoader.FetchError(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkLoader.FetchError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkLoader.FetchError()
{
  return &type metadata for ArtworkLoader.FetchError;
}

double sub_1A8758(double a1, double a2)
{
  uint64_t v2;
  void (*v3)(double *__return_ptr, _QWORD *);
  double v5;
  _QWORD v6[2];

  v3 = *(void (**)(double *__return_ptr, _QWORD *))(v2 + 16);
  *(double *)v6 = a1;
  *(double *)&v6[1] = a2;
  v3(&v5, v6);
  return v5;
}

void sub_1A8790(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(double *)a2 = (*(double (**)(double, double))(v2 + 16))(*a1, a1[1]);
  *(_QWORD *)(a2 + 8) = v4;
}

id sub_1A87BC()
{
  uint64_t v0;
  char **v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = &selRef_enterBackground;
  else
    v1 = &selRef_enterForeground;
  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + 16), *v1);
}

uint64_t sub_1A87E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_errorRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1A881C()
{
  uint64_t *v0;

  return sub_1A6DA0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A882C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t *, uint64_t, uint64_t *);
  uint64_t v6;
  uint64_t v7;

  v4 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t *))(v3 + 16);
  v6 = a3;
  v7 = a1;
  return v4(&v7, a2, &v6);
}

uint64_t sub_1A8860(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v3 + 16))(*a1, a2, *a3);
}

uint64_t sub_1A8888()
{
  uint64_t v0;

  return sub_1A6120(v0);
}

uint64_t sub_1A88A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  v5 = (v3 + 32) & ~v3;
  v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v3 | 7);
}

uint64_t sub_1A8938()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1A63A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A897C()
{
  uint64_t v0;

  return sub_1A6420(v0);
}

uint64_t objectdestroy_67Tm()
{
  _QWORD *v0;

  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1A89C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  result = (*(uint64_t (**)(void))(v3 + 16))();
  if (v7)
    return v7(a1, a2, a3);
  return result;
}

uint64_t sub_1A8A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for OSSignpostID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  v10 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + v10 + 8) & ~v8;

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v11, v6);
  return swift_deallocObject(v0, v11 + v9, v3 | v8 | 7);
}

uint64_t sub_1A8B00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for OSSignpostID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1A5F7C(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), v0 + ((v4 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v4));
}

uint64_t sub_1A8B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  v5 = (v3 + 48) & ~v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  return swift_deallocObject(v0, v5 + v4, v3 | 7);
}

uint64_t sub_1A8C14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1A5CCC(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1));
}

void UIControl.setAction(_:for:asPartOf:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  sub_1A8E0C((uint64_t)v8, a2, a3, v3, v6, v7);
}

void UIControl.addAction(_:for:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v7 = sub_1A8F08();
  sub_150C8(a1, (uint64_t)v17);
  v8 = v18;
  v9 = v19;
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v17[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
  swift_retain();
  v15 = (void *)sub_235BC((uint64_t)v13, a3, v7, v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v17);
  objc_msgSend(v3, "addAction:forControlEvents:", v15, a2);

}

Swift::Void __swiftcall UIControl.removeActions(for:)(UIControlEvents a1)
{
  void *v1;

  objc_msgSend(v1, "removeTarget:action:forControlEvents:", 0, 0, a1);
}

void sub_1A8E0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;

  v12 = *(_QWORD *)(a5 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(a1).n128_u64[0];
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v16, "removeTarget:action:forControlEvents:", 0, 0, a2, v13);
  v17 = sub_1A8F08();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a5);
  swift_retain();
  v18 = (void *)sub_235BC((uint64_t)v15, a3, v17, a5, a6);
  objc_msgSend(a4, "addAction:forControlEvents:", v18, a2);

}

unint64_t sub_1A8F08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3B89D8;
  if (!qword_3B89D8)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3B89D8);
  }
  return result;
}

uint64_t ModernShelvesPresenter.interactionContextOrigin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for InteractionContext.Origin.local(_:);
  v3 = type metadata accessor for InteractionContext.Origin(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1A8F8C@<X0>(uint64_t a1@<X8>)
{
  return ModernShelvesPresenter.interactionContextOrigin.getter(a1);
}

uint64_t static GroupedSearchResultsPage.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v39 = a1;
  v1 = type metadata accessor for ScalarDictionary(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v34 - v6;
  v8 = type metadata accessor for PageMetrics(0);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  __chkstk_darwin(v8);
  v34 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageID(0);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v15);
  _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v18 = String.lowercased()();
  v19 = swift_bridgeObjectRelease();
  v41._countAndFlagsBits = static MetricsPageType.searchResults.getter(v19);
  v41._object = v20;
  swift_bridgeObjectRetain(v18._object);
  v21._countAndFlagsBits = 95;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v22 = PageID.init(with:)(v41._countAndFlagsBits, v41._object);
  v23 = static MetricsPageType.searchResults.getter(v22);
  v41 = v18;
  v42 = v23;
  v43 = v24;
  v44 = 0;
  v45 = 0;
  v46 = 0;
  ScalarDictionary.init()(v23);
  v25 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
  v27 = type metadata accessor for PageMetrics.Instruction(0);
  v28 = swift_allocObject(v26, ((*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) | 7);
  *(_OWORD *)(v28 + 16) = xmmword_2EA080;
  v40 = 0;
  PageMetrics.Instruction.init(eventType:)(&v40);
  v40 = 1;
  PageMetrics.Instruction.init(eventType:)(&v40);
  v29 = MetricsPageFields.metricsFields.getter();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v30 = v34;
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v28, v29, v5, v25);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v39, v12, v36);
  v32 = type metadata accessor for GroupedSearchResultsPage(0);
  *(_QWORD *)(v31 + *(int *)(v32 + 20)) = _swiftEmptyArrayStorage;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v31 + *(int *)(v32 + 24), v30, v38);
}

uint64_t static GroupedSearchResultsPage.Result.ID.channels.getter()
{
  return 0x6C656E6E616863;
}

uint64_t static GroupedSearchResultsPage.Result.ID.episodes.getter()
{
  return 0x65646F73697065;
}

uint64_t static GroupedSearchResultsPage.Result.ID.shows.getter()
{
  return 2003789939;
}

uint64_t static GroupedSearchResultsPage.Result.ID.topResults.getter()
{
  return 7368564;
}

uint64_t GroupedSearchResultsPage.Result.init(id:name:page:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t GroupedSearchResultsPage.results.getter()
{
  type metadata accessor for GroupedSearchResultsPage(0);
  return swift_bridgeObjectRetain();
}

uint64_t GroupedSearchResultsPage.pageMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupedSearchResultsPage(0) + 24);
  v4 = type metadata accessor for PageMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupedSearchResultsPage.init(id:results:pageMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = type metadata accessor for PageID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for GroupedSearchResultsPage(0);
  *(_QWORD *)(a4 + *(int *)(v9 + 20)) = a2;
  v10 = a4 + *(int *)(v9 + 24);
  v11 = type metadata accessor for PageMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a3, v11);
}

uint64_t GroupedSearchResultsPage.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v97 = a2;
  v82 = a3;
  v4 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v4 - 8);
  v78 = v4;
  __chkstk_darwin(v4);
  v76 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFAD0);
  __chkstk_darwin(v6);
  v80 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v86 = (char *)&v74 - v9;
  v84 = type metadata accessor for PageID(0);
  v87 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v81 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for PageMetrics(0);
  v85 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v79 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v83 = (char *)&v74 - v13;
  __chkstk_darwin(v14);
  v90 = (char *)&v74 - v15;
  v16 = type metadata accessor for JSONContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v74 - v21;
  v93 = type metadata accessor for JSONObject(0);
  v91 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v74 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFAD8);
  v94 = a1;
  JSONObject.subscript.getter(0x73746C75736572, 0xE700000000000000);
  v92 = v17;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v30 = v16;
  v29(v22, v97, v16);
  sub_1AA184();
  ExpressibleByJSON.init(tryDeserializing:using:)(v27, v22, v28);
  v31 = v95;
  if (!v95)
  {
    v36 = v94;
    v37 = type metadata accessor for JSONError(0);
    v38 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v37, v38, 0, 0);
    v40 = v39;
    v41 = type metadata accessor for GroupedSearchResultsPage(0);
    *v40 = 0x73746C75736572;
    v40[1] = 0xE700000000000000;
    v40[2] = v41;
    v42 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v40, enum case for JSONError.missingProperty(_:), v37);
    swift_willThrow(v42);
    v32 = v97;
    goto LABEL_5;
  }
  JSONObject.subscript.getter(0x7274654D65676170, 0xEB00000000736369);
  v32 = v97;
  v29(v19, v97, v16);
  v33 = v89;
  v34 = v90;
  PageMetrics.init(deserializing:using:)(v24, v19);
  v35 = v34;
  v16 = v30;
  if (v33)
  {
    v36 = v94;
    swift_bridgeObjectRelease();
LABEL_5:
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v32, v16);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v36, v93);
  }
  v74 = 0;
  v89 = v31;
  v44 = v35;
  v45 = v32;
  v46 = v94;
  JSONObject.subscript.getter(25705, 0xE200000000000000);
  v29(v22, v32, v16);
  v75 = v16;
  v47 = v86;
  v48 = v22;
  v49 = v84;
  ExpressibleByJSON.init(tryDeserializing:using:)(v27, v48, v84);
  v50 = v85;
  v51 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v52 = v83;
  v51(v83, v44, v88);
  v53 = v87;
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v54((uint64_t)v47, 1, v49) == 1)
  {
    v55 = v45;
    v56 = v79;
    v51(v79, v52, v88);
    v57 = (uint64_t)v80;
    PageID.init(from:)(v56);
    v58 = v54(v57, 1, v49);
    if ((_DWORD)v58 == 1)
    {
      v59 = v76;
      UUID.init()(v58);
      _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v59, v78);
      v60 = String.lowercased()();
      v61 = swift_bridgeObjectRelease();
      v95 = static MetricsPageType.searchResults.getter(v61);
      v96 = v62;
      swift_bridgeObjectRetain();
      v63._countAndFlagsBits = 95;
      v63._object = (void *)0xE100000000000000;
      String.append(_:)(v63);
      String.append(_:)(v60);
      swift_bridgeObjectRelease();
      v64 = v81;
      PageID.init(with:)(v95, v96);
      v65 = v84;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v55, v75);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v46, v93);
      v50 = v85;
      v66 = v52;
      v67 = v88;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v66, v88);
      sub_1AA22C(v57);
      v68 = v82;
      v69 = (uint64_t)v86;
      v53 = v87;
      v70 = v90;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v45, v75);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v46, v93);
      v50 = v85;
      v72 = v52;
      v67 = v88;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v72, v88);
      v53 = v87;
      v64 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v81, v57, v49);
      v68 = v82;
      v69 = (uint64_t)v86;
      v70 = v90;
      v65 = v49;
    }
    sub_1AA22C(v69);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v45, v75);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v46, v93);
    v71 = v52;
    v67 = v88;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v71, v88);
    v64 = v81;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v81, v47, v49);
    v68 = v82;
    v70 = v90;
    v65 = v49;
  }
  v73 = type metadata accessor for GroupedSearchResultsPage(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v68 + *(int *)(v73 + 24), v70, v67);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v53 + 32))(v68, v64, v65);
  *(_QWORD *)(v68 + *(int *)(v73 + 20)) = v89;
  return result;
}

uint64_t sub_1A9B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return GroupedSearchResultsPage.init(deserializing:using:)(a1, a2, a3);
}

uint64_t GroupedSearchResultsPage.Result.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t *v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a2;
  v48 = a3;
  v51 = type metadata accessor for JSONContext(0);
  v4 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONObject(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v46 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v46 - v15;
  v53 = a1;
  v17 = JSONObject.subscript.getter(25705, 0xE200000000000000);
  v18 = JSONObject.string.getter(v17);
  if (!v19)
  {
    v35 = type metadata accessor for JSONError(0);
    v36 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v35, v36, 0, 0);
    *v37 = &type metadata for GroupedSearchResultsPage.Result.ID;
    v37[1] = _swiftEmptyArrayStorage;
    v38 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, enum case for JSONError.malformedDocument(_:), v35);
    swift_willThrow(v38);
    v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v16, v7);
    v34 = v51;
    v32 = v52;
LABEL_7:
    v33 = v53;
    goto LABEL_8;
  }
  v20 = v19;
  v47 = v18;
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v16, v7);
  v22 = JSONObject.subscript.getter(1701667182, 0xE400000000000000);
  v23 = JSONObject.string.getter(v22);
  v25 = v24;
  v49 = v7;
  v21(v13, v7);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    v39 = type metadata accessor for JSONError(0);
    v40 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v39, v40, 0, 0);
    *v41 = 1701667182;
    v41[1] = 0xE400000000000000;
    v41[2] = &type metadata for GroupedSearchResultsPage.Result;
    v42 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, enum case for JSONError.missingProperty(_:), v39);
    swift_willThrow(v42);
    v34 = v51;
    v32 = v52;
    v7 = v49;
    goto LABEL_7;
  }
  v46[0] = v23;
  v46[1] = type metadata accessor for Page(0);
  JSONObject.subscript.getter(1701273968, 0xE400000000000000);
  v26 = v4;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v29 = v51;
  v28 = v52;
  v27(v6, v52, v51);
  v30 = v50;
  v31 = Page.__allocating_init(deserializing:using:)((uint64_t)v10, (uint64_t)v6);
  if (!v30)
  {
    v44 = v31;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v29);
    result = ((uint64_t (*)(uint64_t, uint64_t))v21)(v53, v49);
    v45 = v48;
    *v48 = v47;
    v45[1] = v20;
    v45[2] = v46[0];
    v45[3] = v25;
    v45[4] = v44;
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = v28;
  v33 = v53;
  v34 = v29;
  v4 = v26;
  v7 = v49;
LABEL_8:
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v34);
  return ((uint64_t (*)(uint64_t, uint64_t))v21)(v33, v7);
}

uint64_t GroupedSearchResultsPage.Result.ID.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = JSONObject.string.getter(a1);
  if (v5)
  {
    v6 = v4;
  }
  else
  {
    v6 = type metadata accessor for JSONError(0);
    v9 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v6, v9, 0, 0);
    *v10 = &type metadata for GroupedSearchResultsPage.Result.ID;
    v10[1] = _swiftEmptyArrayStorage;
    v11 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v10, enum case for JSONError.malformedDocument(_:), v6);
    swift_willThrow(v11);
  }
  v7 = type metadata accessor for JSONContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
  v8 = type metadata accessor for JSONObject(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v6;
}

uint64_t sub_1A9FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return GroupedSearchResultsPage.Result.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_1AA004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = JSONObject.string.getter(a1);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
    v13 = type metadata accessor for JSONObject(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
    *a3 = v10;
    a3[1] = v11;
  }
  else
  {
    v15 = type metadata accessor for JSONError(0);
    v16 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v15, v16, 0, 0);
    *v17 = v4;
    v17[1] = _swiftEmptyArrayStorage;
    v18 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, enum case for JSONError.malformedDocument(_:), v15);
    swift_willThrow(v18);
    v19 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
    v20 = type metadata accessor for JSONObject(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
  }
  return result;
}

uint64_t type metadata accessor for GroupedSearchResultsPage(uint64_t a1)
{
  uint64_t result;

  result = qword_3BFB58;
  if (!qword_3BFB58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GroupedSearchResultsPage);
  return result;
}

unint64_t sub_1AA184()
{
  unint64_t result;

  result = qword_3BFAE0;
  if (!qword_3BFAE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3BFAD8);
    sub_1AA1E8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A]);
    atomic_store(result, (unint64_t *)&qword_3BFAE0);
  }
  return result;
}

unint64_t sub_1AA1E8()
{
  unint64_t result;

  result = qword_3BFAE8;
  if (!qword_3BFAE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GroupedSearchResultsPage.Result);
    atomic_store(result, (unint64_t *)&qword_3BFAE8);
  }
  return result;
}

uint64_t sub_1AA22C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFAD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AA270()
{
  unint64_t result;

  result = qword_3BFAF0;
  if (!qword_3BFAF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GroupedSearchResultsPage.Result.ID);
    atomic_store(result, (unint64_t *)&qword_3BFAF0);
  }
  return result;
}

unint64_t sub_1AA2B8()
{
  unint64_t result;

  result = qword_3BFAF8;
  if (!qword_3BFAF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GroupedSearchResultsPage.Result.ID);
    atomic_store(result, (unint64_t *)&qword_3BFAF8);
  }
  return result;
}

uint64_t sub_1AA2FC()
{
  return sub_F1C0((unint64_t *)&qword_3BBB68, (void (*)(uint64_t))&type metadata accessor for PageID, (uint64_t)&protocol conformance descriptor for PageID);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupedSearchResultsPage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for PageID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = type metadata accessor for PageMetrics(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v10);
    v14(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for GroupedSearchResultsPage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for PageID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for PageMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for GroupedSearchResultsPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for PageID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = type metadata accessor for PageMetrics(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v9);
  v13(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for GroupedSearchResultsPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for PageID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for PageMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for GroupedSearchResultsPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for PageID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for PageMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GroupedSearchResultsPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for PageID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for PageMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupedSearchResultsPage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1AA6A4);
}

uint64_t sub_1AA6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for PageID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for PageMetrics(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupedSearchResultsPage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1AA758);
}

uint64_t sub_1AA758(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for PageID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for PageMetrics(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1AA7FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for PageID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = type metadata accessor for PageMetrics(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t destroy for GroupedSearchResultsPage.Result(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_release(a1[4]);
}

_QWORD *initializeWithCopy for GroupedSearchResultsPage.Result(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for GroupedSearchResultsPage.Result(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for GroupedSearchResultsPage.Result(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for GroupedSearchResultsPage.Result()
{
  return &type metadata for GroupedSearchResultsPage.Result;
}

ValueMetadata *type metadata accessor for GroupedSearchResultsPage.Result.ID()
{
  return &type metadata for GroupedSearchResultsPage.Result.ID;
}

uint64_t Shelf.mapToModernShelf()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  __int128 v82;
  int *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  int v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121[2];
  __int128 v122;
  __int128 v123;
  uint64_t v124;

  v116 = a1;
  v117 = type metadata accessor for ModernShelf(0);
  v115 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v109 = (uint64_t *)((char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v3);
  v114 = (uint64_t)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for UUID(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v6);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  __chkstk_darwin(v9);
  v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v94 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (uint64_t *)((char *)&v94 - v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v94 - v28;
  v30 = v1;
  v31 = ShelfContentType.modernItemKind.getter(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_contentType));
  if (v31 == 65)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v116, 1, 1, v117);
  v105 = v29;
  v101 = v21;
  v102 = v11;
  v103 = v8;
  v104 = v31;
  v107 = v27;
  v106 = v15;
  v108 = v17;
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_items);
  v34 = *(_QWORD *)(v33 + 16);
  v35 = _swiftEmptyArrayStorage;
  v113 = v23;
  if (v34)
  {
    v36 = v33 + 32;
    v100 = v33;
    swift_bridgeObjectRetain(v33);
    do
    {
      sub_150C8(v36, (uint64_t)&v122);
      sub_150C8((uint64_t)&v122, (uint64_t)v121);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0948);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A50);
      if ((swift_dynamicCast(&v118, v121, v37, v38, 6) & 1) == 0)
      {
        v120 = 0;
        v118 = 0u;
        v119 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1(&v122);
      if (*((_QWORD *)&v119 + 1))
      {
        sub_F4D8(&v118, (uint64_t)v121);
        sub_F4D8(v121, (uint64_t)&v118);
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
          v35 = sub_10CC0(0, v35[2] + 1, 1, v35);
        v40 = v35[2];
        v39 = v35[3];
        if (v40 >= v39 >> 1)
          v35 = sub_10CC0((_QWORD *)(v39 > 1), v40 + 1, 1, v35);
        v35[2] = v40 + 1;
        sub_F4D8(&v118, (uint64_t)&v35[5 * v40 + 4]);
      }
      else
      {
        sub_1459C((uint64_t)&v118, &qword_3BFB98);
      }
      v36 += 40;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease(v100);
    v23 = v113;
  }
  *(_QWORD *)&v122 = v35;
  KeyPath = swift_getKeyPath(&unk_2FBDA0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E68);
  v43 = sub_1ABAC0();
  v44 = Sequence.uniqued<A>(by:)(KeyPath, v42, v43, &protocol witness table for String);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v122);
  if (!*(_QWORD *)(v44 + 16))
  {
    v45 = (uint64_t)v105;
    sub_267BC(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_url, (uint64_t)v105, &qword_3B4370);
    v46 = type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46) == 1)
    {
      swift_bridgeObjectRelease(v44);
      sub_1459C(v45, &qword_3B4370);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v116, 1, 1, v117);
    }
    sub_1459C(v45, &qword_3B4370);
  }
  v47 = type metadata accessor for Header.PrimaryAction(0);
  v48 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
  v48(v23, 1, 1, v47);
  v49 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_seeAllAction);
  if (v49)
  {
    swift_retain(*(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_seeAllAction));
    sub_1459C((uint64_t)v23, &qword_3B3740);
    *v23 = v49;
    swift_storeEnumTagMultiPayload(v23, v47, 0);
    v48(v23, 0, 1, v47);
  }
  v50 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_title);
  v51 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_title + 8);
  v52 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle);
  v53 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle + 8);
  v54 = *(unsigned __int8 *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_displaySubtitleAsEyebrow);
  v55 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName);
  v56 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName + 8);
  v57 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor);
  v58 = *(unsigned __int8 *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor + 8);
  v59 = (uint64_t)v102;
  v60 = (uint64_t)v101;
  v100 = v44;
  v95 = v57;
  v99 = v50;
  v98 = v52;
  v97 = v54;
  v96 = v55;
  if (v58 == 255)
  {
LABEL_27:
    v61 = 0;
    goto LABEL_28;
  }
  if (v58)
  {
    if (v58 == 2 && v57 <= 4)
    {
      v61 = (6u >> v57) & 1;
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v61 = 1;
LABEL_28:
  v62 = _swiftEmptyArrayStorage;
  sub_267BC(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_titleContextMenu, (uint64_t)v102, (uint64_t *)&unk_3BF7E0);
  sub_267BC((uint64_t)v113, v60, &qword_3B3740);
  v63 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_headerButtonItems);
  if (v63)
    v62 = *(_QWORD **)(v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_headerButtonItems);
  v105 = (char *)v30;
  v64 = v30 + OBJC_IVAR____TtC8ShelfKit5Shelf_headerArtwork;
  v65 = (uint64_t)v103;
  sub_267BC(v64, (uint64_t)v103, &qword_3BEB70);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v53);
  v66 = (uint64_t)v108;
  v67 = Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)(v99, v51, v98, v53, v96, v56, v97, v61, (uint64_t)v108, v59, v60, (uint64_t)v62, v65);
  if (v58 == 255)
  {
    v68 = 0;
    LODWORD(v103) = 1;
    v69 = (uint64_t)v106;
    v70 = v112;
    v71 = v111;
    v72 = v110;
  }
  else
  {
    v70 = v112;
    v71 = v111;
    v72 = v110;
    if (v58)
    {
      v73 = v58 == 2;
      v69 = (uint64_t)v106;
      if (!v73)
        goto LABEL_39;
      switch(v95)
      {
        case 1uLL:
          LODWORD(v103) = 0;
          v68 = 0x100000001;
          break;
        case 2uLL:
          LODWORD(v103) = 0;
          v68 = 0x100000002;
          break;
        case 4uLL:
          LODWORD(v103) = 0;
          v68 = 0x100000003;
          break;
        default:
LABEL_39:
          v68 = 0;
          LODWORD(v103) = 1;
          break;
      }
    }
    else
    {
      LODWORD(v103) = 0;
      v68 = v95;
      v69 = (uint64_t)v106;
    }
  }
  LODWORD(v111) = v105[OBJC_IVAR____TtC8ShelfKit5Shelf_isHorizontal];
  v112 = *(_QWORD *)&v105[OBJC_IVAR____TtC8ShelfKit5Shelf_rowsPerColumn];
  v74 = *(_QWORD *)&v105[OBJC_IVAR____TtC8ShelfKit5Shelf_id + 8];
  if (v74)
  {
    v75 = *(_QWORD *)&v105[OBJC_IVAR____TtC8ShelfKit5Shelf_id];
    v76 = *(_QWORD *)&v105[OBJC_IVAR____TtC8ShelfKit5Shelf_id + 8];
  }
  else
  {
    UUID.init()(v67);
    v75 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    v76 = v77;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v70);
  }
  sub_267BC(v66, v69, &qword_3B0C38);
  v78 = (uint64_t)v105;
  sub_267BC((uint64_t)&v105[OBJC_IVAR____TtC8ShelfKit5Shelf_url], (uint64_t)v107, &qword_3B4370);
  v79 = *(_BYTE *)(v78 + OBJC_IVAR____TtC8ShelfKit5Shelf_mergeWhenFetched);
  v80 = *(_BYTE *)(v78 + OBJC_IVAR____TtC8ShelfKit5Shelf_hideFromCarPlay);
  v81 = v78 + OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent;
  if (*(_QWORD *)(v78 + OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent + 24))
  {
    sub_150C8(v81, (uint64_t)&v122);
  }
  else
  {
    v82 = *(_OWORD *)(v81 + 16);
    v122 = *(_OWORD *)v81;
    v123 = v82;
    v124 = *(_QWORD *)(v81 + 32);
  }
  sub_267BC(v78 + OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics, v114, (uint64_t *)&unk_3B8790);
  v83 = (int *)v117;
  v84 = *(int *)(v117 + 32);
  v85 = v109;
  *((_BYTE *)v109 + v84) = 3;
  v86 = (uint64_t)v85 + v83[9];
  v87 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v86, 1, 1, v87);
  *v85 = v75;
  v85[1] = v76;
  sub_15BD4((uint64_t)v106, (uint64_t)v85 + v83[5], &qword_3B0C38);
  v88 = (char *)v85 + v83[6];
  *v88 = v104;
  v88[1] = v111;
  v88[6] = BYTE4(v68);
  *(_DWORD *)(v88 + 2) = v68;
  v88[7] = (char)v103;
  *((_QWORD *)v88 + 1) = v112;
  *(uint64_t *)((char *)v85 + v83[7]) = v100;
  swift_bridgeObjectRetain(v74);
  sub_15B8C((uint64_t)v107, v86);
  *((_BYTE *)v85 + v83[10]) = v79;
  *((_BYTE *)v85 + v83[11]) = v80;
  v89 = (uint64_t)v85 + v83[12];
  if (*((_QWORD *)&v123 + 1))
  {
    sub_F4D8(&v122, v89);
  }
  else
  {
    v90 = (unint64_t)v123;
    *(_OWORD *)v89 = v122;
    *(_OWORD *)(v89 + 16) = v90;
    *(_QWORD *)(v89 + 32) = v124;
  }
  v92 = v115;
  v91 = v116;
  v93 = (uint64_t)v113;
  sub_15BD4(v114, (uint64_t)v85 + v83[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)v85 + v84) = 3;
  sub_15C18((uint64_t)v85, v91);
  sub_1459C((uint64_t)v108, &qword_3B0C38);
  sub_1459C(v93, &qword_3B3740);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v92 + 56))(v91, 0, 1, v83);
}

_QWORD *Array<A>.mapToModernShelves()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModernShelf(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v21 = (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  if (!((unint64_t)a1 >> 62))
  {
    v11 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = (_QWORD *)swift_bridgeObjectRetain(a1);
    if (v11)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v19);
  v11 = (uint64_t)result;
  if (!result)
    goto LABEL_21;
LABEL_3:
  if (v11 >= 1)
  {
    v13 = 0;
    v14 = _swiftEmptyArrayStorage;
    v20 = v5;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      Shelf.mapToModernShelf()((uint64_t)v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1459C((uint64_t)v4, &qword_3B8660);
      }
      else
      {
        sub_15C18((uint64_t)v4, (uint64_t)v10);
        sub_15C18((uint64_t)v10, v21);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = (_QWORD *)sub_10CD4(0, v14[2] + 1, 1, (unint64_t)v14);
        v18 = v14[2];
        v17 = v14[3];
        if (v18 >= v17 >> 1)
          v14 = (_QWORD *)sub_10CD4(v17 > 1, v18 + 1, 1, (unint64_t)v14);
        v14[2] = v18 + 1;
        sub_15C18(v21, (uint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18);
        v5 = v20;
      }
      ++v13;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t ShelfContentType.modernItemKind.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = 16;
  switch(a1)
  {
    case 0:
      result = 13;
      break;
    case 1:
    case 9:
      result = 8;
      break;
    case 2:
    case 8:
      result = 3;
      break;
    case 3:
      result = 1;
      break;
    case 4:
      result = 6;
      break;
    case 5:
      result = 5;
      break;
    case 6:
      result = 0;
      break;
    case 7:
      result = 11;
      break;
    case 10:
    case 11:
    case 14:
    case 18:
    case 19:
    case 32:
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B6150);
      v5 = swift_allocObject(v4, 64, 7);
      *(_OWORD *)(v5 + 16) = xmmword_2EA0D0;
      _StringGuts.grow(_:)(31);
      swift_bridgeObjectRelease(0xE000000000000000);
      strcpy((char *)v11, "Can't convert ");
      HIBYTE(v11[1]) = -18;
      v6._countAndFlagsBits = ShelfContentType.string.getter(a1);
      object = v6._object;
      String.append(_:)(v6);
      swift_bridgeObjectRelease(object);
      v8._countAndFlagsBits = 0x65646F6D206F7420;
      v8._object = (void *)0xEF6D657469206E72;
      String.append(_:)(v8);
      v9 = v11[0];
      v10 = v11[1];
      *(_QWORD *)(v5 + 56) = &type metadata for String;
      *(_QWORD *)(v5 + 32) = v9;
      *(_QWORD *)(v5 + 40) = v10;
      print(_:separator:terminator:)(v5, 32, 0xE100000000000000, 10, 0xE100000000000000);
      swift_bridgeObjectRelease(v5);
      result = 65;
      break;
    case 12:
    case 15:
      result = 24;
      break;
    case 13:
      result = 30;
      break;
    case 16:
    case 17:
      return result;
    case 20:
      result = 19;
      break;
    case 21:
      result = 27;
      break;
    case 22:
      result = 28;
      break;
    case 23:
      result = 29;
      break;
    case 24:
      result = 40;
      break;
    case 25:
      result = 41;
      break;
    case 26:
      result = 33;
      break;
    case 27:
      result = 35;
      break;
    case 28:
      result = 38;
      break;
    case 29:
      result = 36;
      break;
    case 30:
      result = 39;
      break;
    case 31:
      result = 12;
      break;
    case 33:
      result = 17;
      break;
    case 34:
      result = 9;
      break;
    case 35:
      result = 22;
      break;
    case 36:
      result = 20;
      break;
    case 37:
      result = 26;
      break;
    case 38:
      result = 42;
      break;
    case 39:
      result = 44;
      break;
    case 40:
      result = 47;
      break;
    case 41:
      result = 49;
      break;
    case 42:
      result = 52;
      break;
    case 43:
      result = 54;
      break;
    case 44:
      result = 55;
      break;
    case 45:
      result = 7;
      break;
    case 46:
      result = 25;
      break;
    case 47:
      result = 57;
      break;
    case 48:
      result = 58;
      break;
    case 49:
      result = 61;
      break;
    case 50:
      result = 60;
      break;
    case 51:
      result = 59;
      break;
    case 52:
      result = 21;
      break;
    case 53:
      result = 62;
      break;
    case 54:
      result = 64;
      break;
    case 55:
      result = 34;
      break;
    default:
      v11[0] = a1;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ShelfContentType, v11, &type metadata for ShelfContentType, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1ABA78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1ABAC0()
{
  unint64_t result;

  result = qword_3BFBA0;
  if (!qword_3BFBA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3B4E68);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A]);
    atomic_store(result, (unint64_t *)&qword_3BFBA0);
  }
  return result;
}

uint64_t UpsellInformation.shelfUniqueId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_shelfUniqueId);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_shelfUniqueId + 8));
  return v1;
}

uint64_t UpsellInformation.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_title);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_title + 8));
  return v1;
}

uint64_t UpsellInformation.subtitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit17UpsellInformation_subtitle);
}

uint64_t UpsellInformation.ctaTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_ctaTitle);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_ctaTitle + 8));
  return v1;
}

uint64_t UpsellInformation.backgroundArtworkIsFromEditorial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundArtworkIsFromEditorial);
}

uint64_t UpsellInformation.backgroundArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_14554(v1 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundArtwork, a1);
}

uint64_t UpsellInformation.logoArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_14554(v1 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_logoArtwork, a1);
}

uint64_t UpsellInformation.showGridArtworks.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_showGridArtworks));
}

uint64_t UpsellInformation.showGridArtworksHasReferralShow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_showGridArtworksHasReferralShow);
}

void *UpsellInformation.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundColor);
  sub_C5CB0(v1, *(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundColor + 8));
  return v1;
}

uint64_t UpsellInformation.productId.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit17UpsellInformation_productId);
}

uint64_t UpsellInformation.appBundleId.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit17UpsellInformation_appBundleId);
}

uint64_t UpsellInformation.appAdamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_appAdamID);
}

uint64_t UpsellInformation.customProductPageID.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit17UpsellInformation_customProductPageID);
}

uint64_t UpsellInformation.externalAppOfferDeeplink.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit17UpsellInformation_externalAppOfferDeeplink);
}

uint64_t UpsellInformation.caption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_caption);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_caption + 8));
  return v1;
}

uint64_t UpsellInformation.seeAllAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_seeAllAction));
}

uint64_t UpsellInformation.subscriptionPlans.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_subscriptionPlans));
}

uint64_t UpsellInformation.pageMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_pageMetrics;
  v4 = type metadata accessor for PageMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

BOOL UpsellInformation.hasTwoSubscriptionPlans.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_subscriptionPlans);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_subscriptionPlans);
    else
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  }
  return v2 == 2;
}

uint64_t UpsellInformation.isForConfirmationSheet.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_isForConfirmationSheet);
}

uint64_t UpsellInformation.externalUrlAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_externalUrlAction));
}

uint64_t UpsellInformation.isForFirstPartyApp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_isForFirstPartyApp);
}

id UpsellInformation.__allocating_init(title:subtitle:ctaTitle:backgroundArtworkIsFromEditorial:backgroundArtwork:logoArtwork:showGridArtworks:showGridArtworksHasReferralShow:backgroundColor:productId:appBundleId:appAdamID:customProductPageID:externalAppOfferDeeplink:caption:seeAllAction:subscriptionPlans:pageMetrics:isForConfirmationSheet:externalUrlAction:isForFirstPartyApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12, char a13, __int128 a14, __int128 a15, uint64_t a16, char a17, __int128 a18, __int128 a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27)
{
  objc_class *v27;
  id v28;
  id v29;

  v28 = objc_allocWithZone(v27);
  v29 = sub_1AD534(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, *((uint64_t *)&a14 + 1), a15, *((uint64_t *)&a15 + 1), a16, a17 & 1,
          a18,
          *((uint64_t *)&a18 + 1),
          a19,
          *((uint64_t *)&a19 + 1),
          a20,
          a21,
          a22,
          a23,
          a24,
          a25,
          a26,
          a27);
  swift_release(a26);
  swift_release(a22);
  sub_C5CC4(a12, a13);
  return v29;
}

id UpsellInformation.init(title:subtitle:ctaTitle:backgroundArtworkIsFromEditorial:backgroundArtwork:logoArtwork:showGridArtworks:showGridArtworksHasReferralShow:backgroundColor:productId:appBundleId:appAdamID:customProductPageID:externalAppOfferDeeplink:caption:seeAllAction:subscriptionPlans:pageMetrics:isForConfirmationSheet:externalUrlAction:isForFirstPartyApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 a29,uint64_t a30,unsigned __int8 a31)
{
  id v31;

  v31 = sub_1AD534(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19 & 1,
          a20,
          a21,
          a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31);
  swift_release(a30);
  swift_release(a26);
  sub_C5CC4(a12, a13);
  return v31;
}

char *UpsellInformation.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  Class v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  Class v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  Class v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  void (*v174)(uint64_t, uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  char *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  Class v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;

  v209 = a2;
  v184 = type metadata accessor for PageMetrics(0);
  v183 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v180 = (char *)&v160 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v191 = (char *)&v160 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v6);
  v190 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v196 = (uint64_t *)((char *)&v160 - v9);
  v10 = type metadata accessor for JSONArray(0);
  v200 = *(_QWORD *)(v10 - 8);
  v201 = v10;
  __chkstk_darwin(v10);
  v181 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v185 = (uint64_t)&v160 - v13;
  v14 = type metadata accessor for JSONContext(0);
  v206 = *(_QWORD *)(v14 - 8);
  v207 = v14;
  __chkstk_darwin(v14);
  v188 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v197 = (uint64_t)&v160 - v17;
  __chkstk_darwin(v18);
  v193 = (uint64_t *)((char *)&v160 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v20);
  v179 = (uint64_t)&v160 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v182 = (uint64_t)&v160 - v23;
  __chkstk_darwin(v24);
  v203 = (uint64_t)&v160 - v25;
  __chkstk_darwin(v26);
  v204 = (uint64_t)&v160 - v27;
  v28 = type metadata accessor for JSONObject(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v178 = (char *)&v160 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v177 = (char *)&v160 - v32;
  __chkstk_darwin(v33);
  v187 = (char *)&v160 - v34;
  __chkstk_darwin(v35);
  v189 = (char *)&v160 - v36;
  __chkstk_darwin(v37);
  v199 = (uint64_t)&v160 - v38;
  __chkstk_darwin(v39);
  v192 = (uint64_t)&v160 - v40;
  __chkstk_darwin(v41);
  v195 = (char *)&v160 - v42;
  __chkstk_darwin(v43);
  v194 = (char *)&v160 - v44;
  __chkstk_darwin(v45);
  v47 = (char *)&v160 - v46;
  __chkstk_darwin(v48);
  v50 = (char *)&v160 - v49;
  __chkstk_darwin(v51);
  v53 = (char *)&v160 - v52;
  __chkstk_darwin(v54);
  v56 = (char *)&v160 - v55;
  __chkstk_darwin(v57);
  v59 = (char *)&v160 - v58;
  v208 = a1;
  v60 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v176 = JSONObject.string.getter(v60);
  v62 = v61;
  v63 = *(void (**)(char *, uint64_t))(v29 + 8);
  v63(v59, v28);
  if (v62)
  {
    v186 = (uint64_t)v62;
    v64 = JSONObject.subscript.getter(0x656C746974627573, 0xE800000000000000);
    v170 = JSONObject.string.getter(v64);
    v66 = v65;
    v63(v56, v28);
    v67 = JSONObject.subscript.getter(0x656C746954617463, 0xE800000000000000);
    v169 = JSONObject.string.getter(v67);
    v62 = v68;
    v63(v53, v28);
    v69 = v63;
    if (v62)
    {
      v171 = (uint64_t)v62;
      v173 = v66;
      v70 = JSONObject.subscript.getter(0xD000000000000020, 0x8000000000312910);
      v168 = JSONObject.BOOL.getter(v70);
      v63(v50, v28);
      v71 = type metadata accessor for ArtworkModel(0);
      JSONObject.subscript.getter(0xD000000000000011, 0x8000000000312940);
      v175 = v28;
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 16);
      v73 = v193;
      v172 = v47;
      v74 = v209;
      v205 = v69;
      v75 = v207;
      v72((uint64_t)v193, v209, v207);
      sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
      ExpressibleByJSON.init(tryDeserializing:using:)(v56, v73, v71);
      JSONObject.subscript.getter(0x777472416F676F6CLL, 0xEB000000006B726FLL);
      v174 = v72;
      v72((uint64_t)v73, v74, v75);
      v76 = v175;
      ExpressibleByJSON.init(tryDeserializing:using:)(v56, v73, v71);
      v77 = v172;
      v78 = JSONObject.subscript.getter(0xD000000000000010, 0x8000000000312960);
      v79 = v196;
      JSONObject.array.getter(v78);
      v205(v77, v76);
      v81 = v200;
      v80 = v201;
      v193 = *(_QWORD **)(v200 + 48);
      if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v193)(v79, 1, v201) == 1)
      {
        sub_1459C((uint64_t)v79, &qword_3B4F30);
        v196 = _swiftEmptyArrayStorage;
        v82 = v198;
        v83 = v209;
      }
      else
      {
        v94 = v185;
        v95 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v81 + 32))(v185, v79, v80);
        __chkstk_darwin(v95);
        v96 = v198;
        v196 = (_QWORD *)JSONArray.compactMap<A>(_:)(sub_142C7C);
        v82 = v96;
        v83 = v209;
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v94, v80);
      }
      v97 = v194;
      v98 = v208;
      v99 = JSONObject.subscript.getter(0xD00000000000001FLL, 0x8000000000312980);
      v100 = JSONObject.BOOL.getter(v99);
      v205(v97, v76);
      v101 = (uint64_t)v195;
      JSONObject.subscript.getter(0x756F72676B636162, 0xEF726F6C6F43646ELL);
      v102 = v197;
      v174(v197, v83, v207);
      v103 = (char *)sub_449EC(v101, v102);
      LODWORD(v172) = v100;
      if (v82)
      {
        swift_errorRelease(v82);
        v194 = 0;
        LODWORD(v195) = 255;
      }
      else
      {
        v194 = v103;
        LODWORD(v195) = v104;
      }
      v105 = v192;
      v106 = JSONObject.subscript.getter(0x49746375646F7270, 0xE900000000000064);
      v192 = JSONObject.string.getter(v106);
      v108 = v107;
      v109 = v205;
      v205(v56, v76);
      v110 = JSONObject.subscript.getter(0x6C646E7542707061, 0xEB00000000644965);
      v185 = JSONObject.string.getter(v110);
      v197 = v111;
      v109(v56, v76);
      v112 = JSONObject.subscript.getter(0x496D616441707061, 0xE900000000000064);
      v113 = JSONObject.string.getter(v112);
      v198 = v108;
      v166 = v114;
      if (v114)
      {
        v160 = static AdamID.parse(_:)(v113, v114);
        swift_bridgeObjectRelease();
      }
      else
      {
        v160 = 0;
      }
      v115 = v205;
      v205((char *)v105, v76);
      v116 = JSONObject.subscript.getter(0xD000000000000013, 0x8000000000311A20);
      v167 = JSONObject.string.getter(v116);
      v118 = v117;
      v115(v56, v76);
      v119 = JSONObject.subscript.getter(0xD000000000000018, 0x8000000000311A00);
      v165 = JSONObject.string.getter(v119);
      v121 = v120;
      v115(v56, v76);
      v122 = v199;
      v123 = JSONObject.subscript.getter(0x6E6F6974706163, 0xE700000000000000);
      v164 = JSONObject.string.getter(v123);
      v125 = v124;
      v115((char *)v122, v76);
      if (v125)
      {
        v161 = v125;
        v163 = v121;
        v199 = v118;
        JSONObject.subscript.getter(0x63416C6C41656573, 0xEC0000006E6F6974);
        v126 = v209;
        Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v56, v209);
        v115(v56, v76);
        v127 = v189;
        v128 = JSONObject.subscript.getter(0xD000000000000011, 0x80000000003129A0);
        v129 = (uint64_t)v190;
        JSONObject.array.getter(v128);
        v115(v127, v76);
        v130 = v201;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v193)(v129, 1, v201) == 1)
        {
          sub_1459C(v129, &qword_3B4F30);
          v193 = _swiftEmptyArrayStorage;
        }
        else
        {
          v136 = v200;
          v137 = v181;
          v138 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v200 + 32))(v181, v129, v130);
          __chkstk_darwin(v138);
          type metadata accessor for UpsellSubscriptionPlan();
          v98 = v208;
          v193 = (_QWORD *)JSONArray.compactMap<A>(_:)(sub_16B2F8);
          v126 = v209;
          (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v130);
        }
        v139 = v191;
        v140 = v188;
        v141 = v187;
        JSONObject.subscript.getter(0x7274654D65676170, 0xEB00000000736369);
        v174((uint64_t)v140, v126, v207);
        PageMetrics.init(deserializing:using:)(v141, v140);
        LODWORD(v201) = v166 == 0;
        LODWORD(v208) = v172 & 1;
        JSONObject.subscript.getter(0xD000000000000011, 0x80000000003129C0);
        v142 = v98;
        v200 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v56, v126);
        v143 = v139;
        v144 = v175;
        v145 = v205;
        v205(v56, v175);
        sub_14554(v204, v182);
        v146 = v179;
        sub_14554(v203, v179);
        v147 = v180;
        (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v180, v143, v184);
        v148 = v177;
        v149 = JSONObject.subscript.getter(0xD000000000000016, 0x80000000003129E0);
        LOBYTE(v143) = JSONObject.BOOL.getter(v149);
        v145(v148, v144);
        LOBYTE(v148) = v143 & 1;
        v150 = v178;
        v151 = JSONObject.subscript.getter(0xD000000000000012, 0x80000000003119E0);
        LOBYTE(v143) = JSONObject.BOOL.getter(v151);
        v145(v150, v144);
        v152 = objc_allocWithZone(v202);
        v159 = v148;
        v158 = (uint64_t)v147;
        v157 = v146;
        v153 = v200;
        v154 = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
        LOBYTE(v146) = (_BYTE)v195;
        v155 = v194;
        v62 = (char *)sub_1AD534(v176, v186, v170, v173, v169, v171, v168 & 1, v182, v157, (uint64_t)v196, v208, v194, v195, v192, v198, v185, v197, v160, v201,
                        v167,
                        v199,
                        v165,
                        v163,
                        v164,
                        v161,
                        Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0,
                        (uint64_t)v193,
                        v158,
                        v159,
                        v200,
                        v143 & 1);
        swift_release(v153);
        swift_release(v154);
        sub_C5CC4(v155, v146);
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v207);
        v145(v142, v144);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v191, v184);
        sub_1459C(v203, &qword_3BEB70);
        sub_1459C(v204, &qword_3BEB70);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62 = v98;
        v131 = type metadata accessor for JSONError(0);
        v132 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
        swift_allocError(v131, v132, 0, 0);
        *v133 = 0x6E6F6974706163;
        v134 = v202;
        v133[1] = 0xE700000000000000;
        v133[2] = v134;
        v135 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v131 - 8) + 104))(v133, enum case for JSONError.missingProperty(_:), v131);
        swift_willThrow(v135);
        sub_C5CC4(v194, (char)v195);
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v207);
        v115(v62, v76);
        sub_1459C(v203, &qword_3BEB70);
        sub_1459C(v204, &qword_3BEB70);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v89 = type metadata accessor for JSONError(0);
      v90 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      swift_allocError(v89, v90, 0, 0);
      *v91 = 0x656C746954617463;
      v92 = v202;
      v91[1] = 0xE800000000000000;
      v91[2] = v92;
      v93 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v89 - 8) + 104))(v91, enum case for JSONError.missingProperty(_:), v89);
      swift_willThrow(v93);
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v207);
      v63(v208, v28);
    }
  }
  else
  {
    v84 = type metadata accessor for JSONError(0);
    v85 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v84, v85, 0, 0);
    *v86 = 0x656C746974;
    v87 = v202;
    v86[1] = 0xE500000000000000;
    v86[2] = v87;
    v88 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v86, enum case for JSONError.missingProperty(_:), v84);
    swift_willThrow(v88);
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v207);
    v63(v208, v28);
  }
  return v62;
}

void UpsellInformation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.UpsellInformation", 26, "init()", 6, 0);
  __break(1u);
}

char *sub_1AD470@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v3;
  char *result;

  result = UpsellInformation.__allocating_init(deserializing:using:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1AD498@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_pageMetrics;
  v4 = type metadata accessor for PageMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1AD4E0(uint64_t a1, uint64_t a2)
{
  return sub_163A88(a1, a2, &OBJC_IVAR____TtC8ShelfKit17UpsellInformation_appBundleId);
}

uint64_t sub_1AD4EC()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_appAdamID);
}

uint64_t sub_1AD508(uint64_t a1, uint64_t a2)
{
  return sub_163A88(a1, a2, &OBJC_IVAR____TtC8ShelfKit17UpsellInformation_customProductPageID);
}

uint64_t sub_1AD514(uint64_t a1, uint64_t a2)
{
  return sub_163A88(a1, a2, &OBJC_IVAR____TtC8ShelfKit17UpsellInformation_externalAppOfferDeeplink);
}

uint64_t sub_1AD520()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit17UpsellInformation_isForFirstPartyApp);
}

id sub_1AD534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 a29,uint64_t a30,unsigned __int8 a31)
{
  void *v31;
  void *v32;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  void *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  objc_class *ObjectType;
  int v96;
  uint64_t v97;
  int v98;
  objc_super v99;

  v32 = v31;
  v79 = a8;
  v77 = a7;
  v75 = a6;
  v73 = a5;
  v71 = a4;
  v98 = a31;
  v97 = a30;
  v96 = a29;
  v93 = a27;
  v94 = a28;
  v91 = a25;
  v92 = a26;
  v89 = a23;
  v90 = a24;
  v87 = a21;
  v88 = a22;
  v86 = a20;
  v85 = a19;
  v83 = a17;
  v84 = a18;
  v81 = a15;
  v82 = a16;
  v80 = a14;
  v78 = a13;
  v76 = a12;
  v74 = a11;
  v72 = a10;
  ObjectType = (objc_class *)swift_getObjectType();
  v36 = type metadata accessor for UUID(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v71 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v32;
  UUID.init()(v40);
  v41 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  v44 = (uint64_t *)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_shelfUniqueId];
  *v44 = v41;
  v44[1] = v43;
  v45 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_title];
  *v45 = a1;
  v45[1] = a2;
  v46 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_subtitle];
  v47 = v71;
  *v46 = a3;
  v46[1] = v47;
  v48 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_ctaTitle];
  v49 = v75;
  *v48 = v73;
  v48[1] = v49;
  v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundArtworkIsFromEditorial] = v77;
  v50 = v79;
  sub_14554(v79, (uint64_t)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundArtwork]);
  sub_14554(a9, (uint64_t)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_logoArtwork]);
  *(_QWORD *)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_showGridArtworks] = v72;
  v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_showGridArtworksHasReferralShow] = v74;
  v51 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_backgroundColor];
  v52 = v76;
  *(_QWORD *)v51 = v76;
  LOBYTE(a1) = v78;
  v51[8] = v78;
  v53 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_productId];
  v54 = v81;
  *v53 = v80;
  v53[1] = v54;
  v55 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_appBundleId];
  v56 = v83;
  *v55 = v82;
  v55[1] = v56;
  v57 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_appAdamID];
  *(_QWORD *)v57 = v84;
  v57[8] = v85 & 1;
  v58 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_customProductPageID];
  v59 = v87;
  *v58 = v86;
  v58[1] = v59;
  v60 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_externalAppOfferDeeplink];
  v61 = v89;
  *v60 = v88;
  v60[1] = v61;
  v62 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_caption];
  v63 = v91;
  v64 = v92;
  *v62 = v90;
  v62[1] = v63;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_seeAllAction] = v64;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_subscriptionPlans] = v93;
  v65 = &v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_pageMetrics];
  v66 = type metadata accessor for PageMetrics(0);
  v67 = *(_QWORD *)(v66 - 8);
  v68 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v65, v94, v66);
  v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_isForConfirmationSheet] = v96;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_externalUrlAction] = v97;
  v40[OBJC_IVAR____TtC8ShelfKit17UpsellInformation_isForFirstPartyApp] = v98;
  sub_C5CB0(v52, a1);
  swift_retain();
  swift_retain();

  v99.receiver = v40;
  v99.super_class = ObjectType;
  v69 = objc_msgSendSuper2(&v99, "init");
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v66);
  sub_1459C(a9, &qword_3BEB70);
  sub_1459C(v50, &qword_3BEB70);
  return v69;
}

uint64_t sub_1AD93C()
{
  return type metadata accessor for UpsellInformation(0);
}

uint64_t type metadata accessor for UpsellInformation(uint64_t a1)
{
  uint64_t result;

  result = qword_3BFBF8;
  if (!qword_3BFBF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpsellInformation);
  return result;
}

void sub_1AD980(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;

  v6[0] = &unk_2FBE78;
  v6[1] = &unk_2FBE78;
  v6[2] = &unk_2FBE90;
  v6[3] = &unk_2FBE78;
  v6[4] = &unk_2FBEA8;
  sub_5971C(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    v9 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v10 = &unk_2FBEA8;
    v11 = &unk_2FBEC0;
    v12 = &unk_2FBE90;
    v13 = &unk_2FBE90;
    v14 = &unk_2FBED8;
    v15 = &unk_2FBE90;
    v16 = &unk_2FBE90;
    v17 = &unk_2FBE78;
    v18 = &unk_2FBEF0;
    v19 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4 = type metadata accessor for PageMetrics(319);
    if (v5 <= 0x3F)
    {
      v20 = *(_QWORD *)(v4 - 8) + 64;
      v21 = &unk_2FBEA8;
      v22 = &unk_2FBEF0;
      v23 = &unk_2FBEA8;
      swift_updateClassMetadata2(a1, 256, 22, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for UpsellInformation(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for UpsellInformation);
}

uint64_t dispatch thunk of UpsellInformation.__allocating_init(title:subtitle:ctaTitle:backgroundArtworkIsFromEditorial:backgroundArtwork:logoArtwork:showGridArtworks:showGridArtworksHasReferralShow:backgroundColor:productId:appBundleId:appAdamID:customProductPageID:externalAppOfferDeeplink:caption:seeAllAction:subscriptionPlans:pageMetrics:isForConfirmationSheet:externalUrlAction:isForFirstPartyApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 256))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t dispatch thunk of UpsellInformation.__allocating_init(deserializing:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t sub_1ADB38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  __swift_allocate_value_buffer(v3, qword_3BFC08);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_3BFC08);
  URL.init(string:)(0xD00000000000002ALL, 0x8000000000312D20);
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t FollowButtonPresenter.State.downloadDarkOn.getter(unsigned __int8 a1)
{
  return ((a1 & 0xFE) != 2) & a1;
}

uint64_t FollowButtonPresenter.State.autoDownloadsLimit.getter(char a1, uint64_t a2)
{
  if ((a1 & 0xFE) == 2)
    return 0x100000000;
  else
    return a2;
}

BOOL FollowButtonPresenter.State.isFollowed.getter(char a1)
{
  return (a1 & 0xFE) != 2;
}

BOOL sub_1ADC54(_QWORD *a1, _QWORD *a2)
{
  return _s8ShelfKit21FollowButtonPresenterC5StateO2eeoiySbAE_AEtFZ_0(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1ADC70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = swift_unknownObjectRetain(*a1);
  sub_1B2C3C(v3, v2);
  return swift_unknownObjectRelease(v1);
}

uint64_t sub_1ADCAC(uint64_t a1, uint64_t a2)
{
  sub_1B2C3C(a1, a2);
  return swift_unknownObjectRelease(a1);
}

void (*sub_1ADCD0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1ADD3C;
}

void sub_1ADD3C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t ObjectType;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v6 = v3[5] + 16;
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = Strong;
      v9 = (_QWORD *)v3[5];
      v10 = v9[3];
      ObjectType = swift_getObjectType(Strong);
      swift_beginAccess(v9 + 4, v3, 0, 0);
      (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v10 + 8))(v9[4], v9[5], v9[6], ObjectType, v10);
      swift_unknownObjectRelease(v8);
    }
  }
  free(v3);
}

uint64_t sub_1ADE10()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(_QWORD *)(v0 + 32);
}

void sub_1ADE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24[24];

  v4 = v3;
  swift_beginAccess(v4 + 4, v24, 1, 0);
  v8 = *((unsigned __int8 *)v4 + 32);
  v9 = v4[5];
  v10 = v4[6];
  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  if (a1 == 2)
  {
    if (v8 == 2)
      return;
  }
  else if (a1 == 3)
  {
    if (v8 == 3)
      return;
  }
  else if ((v8 & 0xFE) != 2 && ((((a1 & 1) == 0) ^ v8) & 1) != 0 && v9 == a2)
  {
    v11 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(a3);
    if (v11 == DeviceCapacityMonitor.CapacityLevel.rawValue.getter(v10))
      return;
  }
  swift_beginAccess(v4 + 2, &v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 2);
  if (Strong)
  {
    v13 = Strong;
    v14 = v4[3];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 8))(v4[4], v4[5], v4[6], ObjectType, v14);
    swift_unknownObjectRelease(v13);
  }
  v16 = v4[4];
  v17 = v4[5];
  v18 = v4[6];
  v19 = (uint64_t *)(*(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_signposter)
                  + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state);
  v20 = *v19;
  v21 = v19[1];
  v22 = v19[2];
  *v19 = v16;
  v19[1] = v17;
  v19[2] = v18;
  sub_1B15DC(v20, v21, v22, v16, v17, v18);
}

uint64_t FollowButtonPresenter.__allocating_init(data:displaySuccessHUD:asPartOf:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  FollowButtonPresenter.init(data:displaySuccessHUD:asPartOf:)(a1, a2, a3);
  return v7;
}

_QWORD *FollowButtonPresenter.init(data:displaySuccessHUD:asPartOf:)(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char v66[24];
  _QWORD v67[5];
  char v68[16];
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = v3;
  v62 = type metadata accessor for OSSignposter(0);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShowOffer(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v12);
  v59 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v59 - v15);
  v4[3] = 0;
  swift_unknownObjectWeakInit(v4 + 2, 0);
  v4[4] = 2;
  v63 = v4 + 4;
  v4[5] = 0;
  v4[6] = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel) = 0;
  v17 = (char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityObserverToken;
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *((_BYTE *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_displaySuccessHUD) = a2;
  sub_14510(a1, (uint64_t)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_data, type metadata accessor for FollowButtonPresenter.Data);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  v19 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(&v72, v18, a3, v18, v19);
  v20 = *((_QWORD *)&v72 + 1);
  v21 = (_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider);
  *v21 = v72;
  v21[1] = v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2778);
  inject<A, B>(_:from:)(&v72, v22, a3, v22, v19);
  sub_F4D8(&v72, (uint64_t)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryRemovalController);
  v23 = type metadata accessor for MetricsController(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = swift_retain();
  v64 = a3;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController) = MetricsController.init(asPartOf:)(v24);
  v65 = a1;
  sub_14510(a1, (uint64_t)v16, type metadata accessor for FollowButtonPresenter.Data);
  if (swift_getEnumCaseMultiPayload(v16, v12) == 1)
  {
    sub_3C56C((uint64_t)v16, (uint64_t)v11, type metadata accessor for ShowOffer);
    ObjectType = swift_getObjectType();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(ObjectType, v20);
    v27 = *v11;
    v72 = 0uLL;
    v74 = 0;
    v75 = 0;
    v73 = 2;
    v28 = dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(v27, &v72);
    swift_release(v26);
    sub_145D8((uint64_t)v11, type metadata accessor for ShowOffer);
  }
  else
  {
    v30 = *v16;
    v29 = v16[1];
    v31 = swift_getObjectType();
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(v31, v20);
    v72 = 0uLL;
    v74 = 0;
    v75 = 0;
    v73 = 2;
    v28 = dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(v30, v29, &v72);
    swift_release(v32);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_stateMachine) = v28;
  v33 = v65;
  v34 = v59;
  sub_14510(v65, v59, type metadata accessor for FollowButtonPresenter.Data);
  v35 = type metadata accessor for FollowButtonPresenter.Signposter(0);
  v36 = swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v37 = v60;
  v38 = static OSSignposter.following.getter(v36);
  v39 = OSSignposter.logHandle.getter(v38);
  OSSignpostID.init(log:)(v39);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v62);
  v40 = (_QWORD *)(v36
                 + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state);
  v40[1] = 0;
  v40[2] = 0;
  *v40 = 4;
  sub_3C56C(v34, v36 + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_data, type metadata accessor for FollowButtonPresenter.Data);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_signposter) = v36;
  v41 = OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_stateMachine;
  v42 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_stateMachine);
  swift_retain();
  dispatch thunk of PodcastStateMachine.currentState.getter(v67);
  sub_1B2D0C((uint64_t)v67, (uint64_t)v68);
  if (v69 == 2)
    goto LABEL_9;
  if (v69 == 1)
  {
    swift_release(v42);
    v45 = 0;
    v46 = 0;
    v44 = 3;
    goto LABEL_11;
  }
  if (v69 && (v43 = v68[0], v44 = v70, v45 = v71, sub_1B2D48((uint64_t)v67), (v43 & 1) != 0))
  {
    v46 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel);
    swift_release(v42);
  }
  else
  {
LABEL_9:
    swift_release(v42);
    v45 = 0;
    v46 = 0;
    v44 = 2;
  }
LABEL_11:
  swift_beginAccess(v63, v66, 1, 0);
  v4[4] = v44;
  v4[5] = v45;
  v4[6] = v46;
  v47 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_signposter);
  v48 = (uint64_t *)(v47
                  + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state);
  v49 = *(_QWORD *)(v47
                  + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state);
  v50 = *(_QWORD *)(v47
                  + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state
                  + 8);
  v51 = *(_QWORD *)(v47
                  + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state
                  + 16);
  *v48 = v44;
  v48[1] = v45;
  v48[2] = v46;
  swift_retain();
  sub_1B15DC(v49, v50, v51, v44, v45, v46);
  swift_release(v47);
  v52 = *(_QWORD *)((char *)v4 + v41);
  v53 = swift_allocObject(&unk_386B28, 24, 7);
  swift_weakInit(v53 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  dispatch thunk of PodcastStateMachine.addStateTransitionObserver(_:action:)(v4, sub_1B2DB0, v53);
  swift_release(v52);
  swift_release(v4);
  swift_release_n(v53, 2);
  type metadata accessor for DeviceCapacityMonitor(0);
  v54 = (void *)static DeviceCapacityMonitor.shared.getter();
  v55 = swift_allocObject(&unk_386B28, 24, 7);
  swift_weakInit(v55 + 16);
  swift_retain();
  v56 = DeviceCapacityMonitor.addCapacityChangeObserver(options:callback:)(3, sub_1B2DB8, v55);
  swift_release(v64);

  swift_release(v55);
  sub_145D8(v33, type metadata accessor for FollowButtonPresenter.Data);
  swift_release(v55);
  v57 = (char *)v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityObserverToken;
  *(_QWORD *)v57 = v56;
  v57[8] = 0;
  return v4;
}

uint64_t sub_1AE60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _BYTE v12[24];
  _QWORD v13[5];
  _BYTE v14[16];
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    swift_beginAccess(v2, &v11, 0, 0);
    Strong = swift_weakLoadStrong(v2);
    if (Strong)
    {
      v6 = Strong;
      dispatch thunk of PodcastStateMachine.currentState.getter(v13);
      sub_1B2D0C((uint64_t)v13, (uint64_t)v14);
      if (v15 >= 3)
      {
        v10 = v14[0];
        v9 = v16;
        v7 = v17;
        sub_1B2D48((uint64_t)v13);
        if ((v10 & 1) != 0)
        {
          v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel);
        }
        else
        {
          v7 = 0;
          v8 = 0;
          v9 = 2;
        }
      }
      else
      {
        v7 = 0;
        v8 = 0;
        v9 = qword_2FC080[v15];
      }
      sub_1ADE44(v9, v7, v8);
      swift_release(v6);
    }
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_1AE718(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _QWORD v13[5];
  _BYTE v14[16];
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel;
    *(_QWORD *)(result + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel) = a1;
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_stateMachine);
    swift_retain();
    dispatch thunk of PodcastStateMachine.currentState.getter(v13);
    sub_1B2D0C((uint64_t)v13, (uint64_t)v14);
    if (v15 == 2)
      goto LABEL_7;
    if (v15 == 1)
    {
      swift_release(v7);
      v10 = 0;
      v11 = 0;
      v9 = 3;
      goto LABEL_9;
    }
    if (v15 && (v8 = v14[0], v9 = v16, v10 = v17, sub_1B2D48((uint64_t)v13), (v8 & 1) != 0))
    {
      v11 = *(_QWORD *)(v5 + v6);
      swift_release(v7);
    }
    else
    {
LABEL_7:
      swift_release(v7);
      v10 = 0;
      v11 = 0;
      v9 = 2;
    }
LABEL_9:
    sub_1ADE44(v9, v10, v11);
    return swift_release(v5);
  }
  return result;
}

uint64_t FollowButtonPresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int64 v2;
  void *v3;

  v1 = v0;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityObserverToken + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityObserverToken);
    type metadata accessor for DeviceCapacityMonitor(0);
    v3 = (void *)static DeviceCapacityMonitor.shared.getter();
    DeviceCapacityMonitor.removeCapacityChangeObserver(with:)(v2);

  }
  sub_6FC38(v1 + 16);
  sub_145D8(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_data, type metadata accessor for FollowButtonPresenter.Data);
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_signposter));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v1
                                                      + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryRemovalController));
  swift_unknownObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider));
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_stateMachine));
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController));
  return v1;
}

uint64_t FollowButtonPresenter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int64 v2;
  void *v3;

  v1 = v0;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityObserverToken + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityObserverToken);
    type metadata accessor for DeviceCapacityMonitor(0);
    v3 = (void *)static DeviceCapacityMonitor.shared.getter();
    DeviceCapacityMonitor.removeCapacityChangeObserver(with:)(v2);

  }
  sub_6FC38(v1 + 16);
  sub_145D8(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_data, type metadata accessor for FollowButtonPresenter.Data);
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_signposter));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v1
                                                      + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryRemovalController));
  swift_unknownObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider));
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_stateMachine));
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController));
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

void sub_1AE9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  void (*v43)(_QWORD *__return_ptr);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (**v53)(uint64_t, unint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *);
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  _QWORD v88[3];
  uint64_t v89;
  void (**v90)(uint64_t, unint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *);
  uint64_t v91;
  _QWORD v92[5];
  char v93[8];
  uint64_t v94;
  unint64_t v95;
  _BYTE v96[136];

  v4 = v3;
  v79 = a2;
  v82 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8);
  v78 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v80 = v7;
  v81 = (uint64_t)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v8);
  v10 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFC80);
  __chkstk_darwin(v11);
  v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v70 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v70 - v18;
  v20 = type metadata accessor for ShowOffer(0);
  __chkstk_darwin(v20);
  v22 = (_QWORD *)((char *)v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v23);
  v25 = (_QWORD *)((char *)v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_15BD4(a3, (uint64_t)v96, &qword_3B1808);
  swift_beginAccess(v4 + 32, &v91, 0, 0);
  v26 = *(unsigned __int8 *)(v4 + 32);
  if (v26 == 2)
  {
    sub_14510(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_data, (uint64_t)v25, type metadata accessor for FollowButtonPresenter.Data);
    if (swift_getEnumCaseMultiPayload(v25, v23) == 1)
    {
      sub_3C56C((uint64_t)v25, (uint64_t)v22, type metadata accessor for ShowOffer);
      dispatch thunk of PodcastStateMachine.currentState.getter(v92);
      sub_1B2D0C((uint64_t)v92, (uint64_t)v93);
      v27 = v95;
      if (v95 >= 3)
      {
        v33 = v94;
        sub_15BD4((uint64_t)v96, (uint64_t)v83, &qword_3B1808);
        sub_1AFB94(v33, v27, v82, (uint64_t)v83);
        sub_1B2D48((uint64_t)v92);
      }
      else
      {
        sub_1B2D48((uint64_t)v92);
        sub_15BD4((uint64_t)v96, (uint64_t)v83, &qword_3B1808);
        sub_1B0050(v22, v82, (uint64_t)v83);
      }
      sub_145D8((uint64_t)v22, type metadata accessor for ShowOffer);
    }
    else
    {
      v31 = *v25;
      v32 = v25[1];
      sub_15BD4((uint64_t)v96, (uint64_t)v83, &qword_3B1808);
      sub_1AFB94(v31, v32, v82, (uint64_t)v83);
      swift_bridgeObjectRelease();
    }
  }
  else if (v26 != 3)
  {
    dispatch thunk of PodcastStateMachine.currentState.getter(v92);
    sub_1B2D0C((uint64_t)v92, (uint64_t)v93);
    if (v95 >= 3)
    {
      v77 = v95;
      v76 = v94;
      sub_267BC(v82, (uint64_t)v19, &qword_3BFC80);
      v28 = type metadata accessor for InteractionContext(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      if (v30(v19, 1, v28) == 1)
      {
        sub_1459C((uint64_t)v19, &qword_3BFC80);
        v75 = 0;
      }
      else
      {
        InteractionContext.page.getter();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v28);
        sub_1D8194((char *)v83);
        sub_145D8((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
        v75 = LOBYTE(v83[0]);
      }
      sub_267BC(v82, (uint64_t)v16, &qword_3BFC80);
      if (v30(v16, 1, v28) == 1)
      {
        sub_1459C((uint64_t)v16, &qword_3BFC80);
        v73 = 0;
        v74 = 0;
      }
      else
      {
        InteractionContext.page.getter();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v28);
        v73 = sub_1D8368();
        v74 = v34;
        sub_145D8((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
      }
      sub_267BC(v82, (uint64_t)v13, &qword_3BFC80);
      if (v30(v13, 1, v28) == 1)
      {
        v35 = sub_1459C((uint64_t)v13, &qword_3BFC80);
LABEL_21:
        v38 = static MetricsTargetType.button.getter(v35, v36);
      }
      else
      {
        v37 = InteractionContext.view.getter();
        v35 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v28);
        switch(v37)
        {
          case 2:
          case 3:
          case 4:
            v38 = static MetricsTargetType.lockup.getter(v35, v36);
            break;
          case 6:
          case 7:
            goto LABEL_21;
          default:
            v38 = static MetricsTargetType.powerSwooshItem.getter(v35, v36);
            break;
        }
      }
      v72 = v38;
      v82 = v39;
      v41 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider);
      v40 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
      ObjectType = swift_getObjectType();
      v70[0] = v40;
      v70[1] = v41;
      v43 = *(void (**)(_QWORD *__return_ptr))(v40 + 16);
      v44 = ObjectType;
      v71 = ObjectType;
      v43(v83);
      v45 = v84;
      v46 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      v47 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController);
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 320);
      v49 = swift_retain();
      v48(v49, v45, v46);
      swift_release(v47);
      __swift_destroy_boxed_opaque_existential_1(v83);
      v50 = v44;
      v51 = v70[0];
      ((void (*)(_QWORD *__return_ptr, uint64_t, _QWORD))v43)(v88, v50, v70[0]);
      v52 = v89;
      v53 = v90;
      __swift_project_boxed_opaque_existential_1(v88, v89);
      v87 = 5;
      v86 = v75;
      sub_15BD4((uint64_t)v96, (uint64_t)v83, &qword_3B1808);
      v55 = v76;
      v54 = v77;
      v53[39](v76, v77, &v87, &v86, v73, v74, v72, v82, v83, v52, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v88);
      ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v43)(v83, v71, v51);
      v56 = v84;
      v57 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      v58 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v57 + 48))(v55, v54, v56, v57);
      v59 = v81;
      sub_267BC(v79, v81, &qword_3B62B8);
      v60 = *(unsigned __int8 *)(v78 + 80);
      v61 = (v60 + 16) & ~v60;
      v62 = (v80 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
      v63 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
      v64 = swift_allocObject(&unk_386B50, v63 + 16, v60 | 7);
      sub_15BD4(v59, v64 + v61, &qword_3B62B8);
      *(_QWORD *)(v64 + v62) = v4;
      v65 = (uint64_t *)(v64 + v63);
      v66 = v77;
      *v65 = v55;
      v65[1] = v66;
      v67 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
      v68 = swift_retain();
      v69 = static OS_dispatch_queue.main.getter(v68);
      v89 = v67;
      v90 = (void (**)(uint64_t, unint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *))&protocol witness table for OS_dispatch_queue;
      v88[0] = v69;
      Promise.then(perform:orCatchError:on:)(sub_1B2E88, v64, sub_1AF3AC, 0, v88);
      swift_release(v58);
      swift_release(v64);
      __swift_destroy_boxed_opaque_existential_1(v88);
      __swift_destroy_boxed_opaque_existential_1(v83);
    }
    else
    {
      sub_1B2D48((uint64_t)v92);
    }
  }
}

uint64_t sub_1AF14C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a3;
  v35 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PresentationSource(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    v33 = a5;
    v20 = static Logger.following.getter(v17);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      v32 = a4;
      v24 = v23;
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "Unsubscribe unsuccessful", v23, 2u);
      v25 = v24;
      a4 = v32;
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    a5 = v33;
  }
  sub_267BC(v35, (uint64_t)v10, &qword_3B62B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1459C((uint64_t)v10, &qword_3B62B8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v27 = a4;
  v28 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryRemovalController + 24);
  v29 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryRemovalController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v34 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryRemovalController), v28);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(v27, a5, v28, v29);
  if (v30)
  {
    v31 = (void *)v30;
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v30, 1, 15, 1, 0, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

UIMenu sub_1AF3B0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  NSString v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  Swift::String v45;
  NSString v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  UIMenuElementSize v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  Swift::String v77;
  uint64_t v79;
  uint64_t v80;
  Swift::OpaquePointer v81;
  id v82;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char v94[24];
  uint64_t v95;
  UIImage_optional v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;

  v91 = a1;
  v5 = type metadata accessor for Device(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v90 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFC80);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = (uint64_t)_swiftEmptyArrayStorage;
  v89 = (_QWORD *)(v3 + 32);
  swift_beginAccess(v3 + 32, v94, 0, 0);
  if ((*(_QWORD *)(v3 + 32) & 0xFELL) != 2)
  {
    v87 = v6;
    v88 = v5;
    v85 = sub_327F8(0, (unint64_t *)&qword_3B89D8, UIAction_ptr);
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v97._object = (void *)0xE000000000000000;
    v16._countAndFlagsBits = 0x574F4C4C4F464E55;
    v16._object = (void *)0xED0000574F48535FLL;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v97._countAndFlagsBits = 0;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v97);
    object = v18._object;
    countAndFlagsBits = v18._countAndFlagsBits;

    v19 = String._bridgeToObjectiveC()();
    v82 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v19);

    v20 = swift_allocObject(&unk_386B28, 24, 7);
    v86 = v3;
    swift_weakInit(v20 + 16);
    sub_267BC(v91, (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_3BFC80);
    v91 = a2;
    sub_267BC(a2, (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_3B62B8);
    v21 = *(unsigned __int8 *)(v12 + 80);
    v22 = (v21 + 24) & ~v21;
    v23 = *(unsigned __int8 *)(v9 + 80);
    v24 = (v13 + v23 + v22) & ~v23;
    v25 = swift_allocObject(&unk_386B78, v24 + v10, v21 | v23 | 7);
    *(_QWORD *)(v25 + 16) = v20;
    sub_15BD4((uint64_t)v14, v25 + v22, &qword_3BFC80);
    sub_15BD4((uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, &qword_3B62B8);
    v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v82, 0, 0, 0, 0, 0, 0, sub_1B2FF0, v25);
    v92 = 0;
    v93 = 0xE000000000000000;
    v27 = v26;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    v92 = 0xD000000000000015;
    v93 = 0x8000000000312B40;
    v28 = objc_msgSend(v27, "title");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    v32._countAndFlagsBits = v29;
    v32._object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, "setAccessibilityIdentifier:", v33);

    v34 = v27;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
    v36 = *(_QWORD *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFFF8));
    v35 = *(_QWORD *)((char *)&dword_18 + (v95 & 0xFFFFFFFFFFFFFF8));
    if (v36 >= v35 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
    v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
    specialized Array._endMutation()(v37);

    v6 = v87;
    v5 = v88;
    v3 = v86;
    a2 = v91;
  }
  v38 = (void *)sub_1B10AC(a2);
  v39 = v3;
  if (v38)
  {
    v92 = 0;
    v93 = 0xE000000000000000;
    v40 = v38;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    v92 = 0xD000000000000015;
    v93 = 0x8000000000312B40;
    v41 = objc_msgSend(v40, "title");
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

    v45._countAndFlagsBits = v42;
    v45._object = v44;
    String.append(_:)(v45);
    swift_bridgeObjectRelease();
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, "setAccessibilityIdentifier:", v46);

    v47 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
    v49 = *(_QWORD *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFFF8));
    v48 = *(_QWORD *)((char *)&dword_18 + (v95 & 0xFFFFFFFFFFFFFF8));
    if (v49 >= v48 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
    v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
    specialized Array._endMutation()(v50);

  }
  v51 = v95;
  if ((unint64_t)v95 >> 62)
  {
    if (v95 < 0)
      v79 = v95;
    else
      v79 = v95 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v80 = _CocoaArrayWrapper.endIndex.getter(v79);
    swift_bridgeObjectRelease();
    if (v80 >= 1)
      goto LABEL_11;
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (*(uint64_t *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFF8)) < 1)
    goto LABEL_29;
LABEL_11:
  v52 = OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel;
  v53 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(*(_QWORD *)(v39
                                                                      + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel));
  if (v53 == DeviceCapacityMonitor.CapacityLevel.rawValue.getter(0))
  {
    v54 = 0;
    v55 = (void *)0xE000000000000000;
    if ((*v89 & 0xFELL) != 2 && (*v89 & 1) != 0)
    {
      v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v98._countAndFlagsBits = 0xD00000000000001FLL;
      v98._object = (void *)0x8000000000312B20;
      v57._object = (void *)0x8000000000312B00;
      v57._countAndFlagsBits = 0xD000000000000015;
      v58._countAndFlagsBits = 0;
      v58._object = (void *)0xE000000000000000;
      v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v98);
      v54 = v59._countAndFlagsBits;
      v55 = v59._object;

    }
  }
  else
  {
    v60 = *(_QWORD *)(v39 + v52);
    v61 = 0xD000000000000022;
    v62 = 0x8000000000312AA0;
    if (v60 != 2)
    {
      v61 = 0;
      v62 = 0xE000000000000000;
    }
    if (v60 == 1)
      v63 = 0xD000000000000021;
    else
      v63 = v61;
    if (v60 == 1)
      v64 = (void *)0x8000000000312AD0;
    else
      v64 = (void *)v62;
    v65 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v99._object = (void *)0xE000000000000000;
    v66._countAndFlagsBits = v63;
    v66._object = v64;
    v67._countAndFlagsBits = 0;
    v67._object = (void *)0xE000000000000000;
    v99._countAndFlagsBits = 0;
    v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(v66, (Swift::String_optional)0, (NSBundle)v65, v67, v99);
    swift_bridgeObjectRelease();

    v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
    v70 = swift_allocObject(v69, 72, 7);
    *(_OWORD *)(v70 + 16) = xmmword_2EA0D0;
    v71 = v90;
    v72 = static Device.current.getter(v70);
    v73 = Device.localizedModel.getter(v72);
    v75 = v74;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v71, v5);
    *(_QWORD *)(v70 + 56) = &type metadata for String;
    *(_QWORD *)(v70 + 64) = sub_22F20();
    *(_QWORD *)(v70 + 32) = v73;
    *(_QWORD *)(v70 + 40) = v75;
    v54 = String.init(format:_:)(v68._countAndFlagsBits, v68._object, v70);
    v55 = v76;
    swift_bridgeObjectRelease();
    v51 = v95;
  }
  sub_327F8(0, (unint64_t *)&qword_3B9410, UIMenu_ptr);
  v77._countAndFlagsBits = v54;
  v77._object = v55;
  v96.value.super.isa = 0;
  v96.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v77, (Swift::String_optional)0, v96, 0, 0xFFFFFFFFFFFFFFFFLL, v51, v81);
}

uint64_t sub_1AFB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (**v40)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  _QWORD v63[3];
  uint64_t v64;
  void (**v65)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *);
  _BYTE v66[136];

  v56 = a2;
  v55 = a1;
  v6 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFC80);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - v16;
  sub_15BD4(a4, (uint64_t)v66, &qword_3B1808);
  sub_267BC(a3, (uint64_t)v17, &qword_3BFC80);
  v18 = type metadata accessor for InteractionContext(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18) == 1)
  {
    sub_1459C((uint64_t)v17, &qword_3BFC80);
    v21 = 0;
  }
  else
  {
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    sub_1D8194((char *)v58);
    sub_145D8((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    v21 = LOBYTE(v58[0]);
  }
  sub_267BC(a3, (uint64_t)v14, &qword_3BFC80);
  if (v20(v14, 1, v18) == 1)
  {
    sub_1459C((uint64_t)v14, &qword_3BFC80);
    v52 = 0;
    v22 = 0;
  }
  else
  {
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
    v52 = sub_1D8368();
    v22 = v23;
    sub_145D8((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  }
  sub_267BC(a3, (uint64_t)v11, &qword_3BFC80);
  v24 = v20(v11, 1, v18);
  v54 = v21;
  v53 = v22;
  if (v24 == 1)
  {
    v25 = sub_1459C((uint64_t)v11, &qword_3BFC80);
LABEL_11:
    v28 = static MetricsTargetType.button.getter(v25, v26);
  }
  else
  {
    v27 = InteractionContext.view.getter();
    v25 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v18);
    switch(v27)
    {
      case 2:
      case 3:
      case 4:
        v28 = static MetricsTargetType.lockup.getter(v25, v26);
        break;
      case 6:
      case 7:
        goto LABEL_11;
      default:
        v28 = static MetricsTargetType.powerSwooshItem.getter(v25, v26);
        break;
    }
  }
  v49 = v28;
  v50 = v29;
  v30 = v57;
  v31 = *(_QWORD *)(v57 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
  ObjectType = swift_getObjectType();
  v33 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v31 + 16);
  v33(v58, ObjectType, v31);
  v51 = v33;
  v35 = v59;
  v34 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v36 = *(_QWORD *)(v30 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 320);
  v38 = swift_retain();
  v37(v38, v35, v34);
  swift_release(v36);
  __swift_destroy_boxed_opaque_existential_1(v58);
  v33(v63, ObjectType, v31);
  v39 = v64;
  v40 = v65;
  __swift_project_boxed_opaque_existential_1(v63, v64);
  v62 = 19;
  v61 = v54;
  sub_15BD4((uint64_t)v66, (uint64_t)v58, &qword_3B1808);
  v42 = v55;
  v41 = v56;
  v40[39](v55, v56, &v62, &v61, v52, v53, v49, v50, v58, v39, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v63);
  v51(v58, ObjectType, v31);
  v43 = v59;
  v44 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v42, v41, *(unsigned __int8 *)(v57 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_displaySuccessHUD), v43, v44);
  v46 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v47 = static OS_dispatch_queue.main.getter(v46);
  v64 = v46;
  v65 = (void (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *))&protocol witness table for OS_dispatch_queue;
  v63[0] = v47;
  Promise.then(perform:orCatchError:on:)(sub_1B004C, 0, sub_1AF3AC, 0, v63);
  swift_release(v45);
  __swift_destroy_boxed_opaque_existential_1(v63);
  return __swift_destroy_boxed_opaque_existential_1(v58);
}

uint64_t sub_1B0050(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (**v39)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *);
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  _QWORD v77[3];
  uint64_t v78;
  void (**v79)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *);
  _BYTE v80[136];

  v70 = a1;
  v5 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFC80);
  __chkstk_darwin(v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v63 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v63 - v15;
  sub_15BD4(a3, (uint64_t)v80, &qword_3B1808);
  sub_267BC(a2, (uint64_t)v16, &qword_3BFC80);
  v17 = type metadata accessor for InteractionContext(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17) == 1)
  {
    sub_1459C((uint64_t)v16, &qword_3BFC80);
    v20 = 0;
  }
  else
  {
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    sub_1D8194((char *)v72);
    sub_145D8((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    v20 = LOBYTE(v72[0]);
  }
  sub_267BC(a2, (uint64_t)v13, &qword_3BFC80);
  if (v19(v13, 1, v17) == 1)
  {
    sub_1459C((uint64_t)v13, &qword_3BFC80);
    v67 = 0;
    v21 = 0;
  }
  else
  {
    InteractionContext.page.getter();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    v67 = sub_1D8368();
    v21 = v22;
    sub_145D8((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  }
  sub_267BC(a2, (uint64_t)v10, &qword_3BFC80);
  v23 = v19(v10, 1, v17);
  LODWORD(v69) = v20;
  v68 = v21;
  if (v23 == 1)
  {
    v24 = sub_1459C((uint64_t)v10, &qword_3BFC80);
LABEL_11:
    v27 = static MetricsTargetType.button.getter(v24, v25);
  }
  else
  {
    v26 = InteractionContext.view.getter();
    v24 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, v17);
    switch(v26)
    {
      case 2:
      case 3:
      case 4:
        v27 = static MetricsTargetType.lockup.getter(v24, v25);
        break;
      case 6:
      case 7:
        goto LABEL_11;
      default:
        v27 = static MetricsTargetType.powerSwooshItem.getter(v24, v25);
        break;
    }
  }
  v64 = v27;
  v65 = v28;
  v29 = v71;
  v30 = *(_QWORD *)(v71 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
  ObjectType = swift_getObjectType();
  v32 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v30 + 16);
  v32(v72, ObjectType, v30);
  v66 = v32;
  v33 = v73;
  v34 = v74;
  __swift_project_boxed_opaque_existential_1(v72, v73);
  v35 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 320);
  v37 = swift_retain();
  v36(v37, v33, v34);
  swift_release(v35);
  __swift_destroy_boxed_opaque_existential_1(v72);
  v32(v77, ObjectType, v30);
  v38 = v78;
  v39 = v79;
  __swift_project_boxed_opaque_existential_1(v77, v78);
  v40 = v70;
  v72[0] = *v70;
  v41 = sub_144B4();
  v42 = BinaryInteger.description.getter(&type metadata for UInt64, v41);
  v44 = v43;
  v76 = 19;
  v75 = v69;
  sub_15BD4((uint64_t)v80, (uint64_t)v72, &qword_3B1808);
  v39[37](v42, v44, &v76, &v75, v67, v68, v64, v65, v72, v38, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v77);
  v66(v72, ObjectType, v30);
  v46 = v73;
  v45 = v74;
  __swift_project_boxed_opaque_existential_1(v72, v73);
  v47 = *v40;
  v48 = (int *)type metadata accessor for ShowOffer(0);
  v49 = (uint64_t *)((char *)v40 + v48[12]);
  v50 = *v49;
  v51 = v49[1];
  v52 = *((unsigned __int8 *)v40 + v48[10]);
  if (v52 == 2)
  {
    v53 = 0;
  }
  else
  {
    v67 = v51;
    v68 = v50;
    v69 = v47;
    v54 = ContentRating.rawValue.getter(v52 & 1);
    v56 = v55;
    v53 = 1;
    v58 = ContentRating.rawValue.getter(1);
    if (v54 != v58 || v56 != v57)
      v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v58, v57, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = v68;
    v47 = v69;
    v51 = v67;
  }
  v59 = (*(uint64_t (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v45 + 40))((char *)v70 + v48[13], v47, 0, v50, v51, v53 & 1, *(unsigned __int8 *)(v71 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_displaySuccessHUD), v46, v45);
  v60 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v61 = static OS_dispatch_queue.main.getter(v60);
  v78 = v60;
  v79 = (void (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, void *))&protocol witness table for OS_dispatch_queue;
  v77[0] = v61;
  Promise.then(perform:orCatchError:on:)(sub_1B004C, 0, sub_1AF3AC, 0, v77);
  swift_release(v59);
  __swift_destroy_boxed_opaque_existential_1(v77);
  return __swift_destroy_boxed_opaque_existential_1(v72);
}

uint64_t sub_1B05F4(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    v7 = static Logger.following.getter(result);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "Subscribe unsuccessful", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_1B06E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[8];
  uint64_t v21;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.following.getter(v6);
  swift_errorRetain(a1);
  v7 = swift_errorRetain(a1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v17 = v2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc(32, -1);
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_getErrorValue(a1, v20, v19);
    v13 = Error.localizedDescription.getter(v19[1], v19[2]);
    v18 = sub_69298(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v8, v9, "%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1B08D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[128];
  _OWORD v10[8];
  _BYTE v11[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    sub_1FB80(v10);
    sub_15BD4((uint64_t)v10, (uint64_t)v9, &qword_3B1808);
    sub_1AE9E0(a3, a4, (uint64_t)v9);
    return swift_release(v8);
  }
  return result;
}

uint64_t sub_1B0960(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v18 = a2;
  v4 = type metadata accessor for ShowOffer(0);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v19, ObjectType, v10);
  v12 = v20;
  v13 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_metricsController);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 320);
  v16 = swift_retain();
  v15(v16, v12, v13);
  swift_release(v14);
  __swift_destroy_boxed_opaque_existential_1(v19);
  sub_14510(v2 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_data, (uint64_t)v9, type metadata accessor for FollowButtonPresenter.Data);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
  {
    sub_3C56C((uint64_t)v9, (uint64_t)v6, type metadata accessor for ShowOffer);
    sub_1B0B14(v6, a1 & 1, v18);
    return sub_145D8((uint64_t)v6, type metadata accessor for ShowOffer);
  }
  else
  {
    sub_1B0CF8((uint64_t)*v9, v9[1], a1 & 1, v18);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B0B14(uint64_t *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  Swift::String v23;
  char v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  if ((a2 & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
    ObjectType = swift_getObjectType();
    v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 16);
    v12(v26, ObjectType, v10);
    v18 = v27;
    v19 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v20 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 88))(a1, v18, v19);
    swift_release(v20);
    __swift_destroy_boxed_opaque_existential_1(v26);
    v16 = 26;
    goto LABEL_6;
  }
  v6 = sub_1B0EC4();
  v7 = OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel;
  v8 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(*(_QWORD *)(v3
                                                                     + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel));
  result = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(0);
  if (v8 != result)
    return sub_1B4EE0(a3, *(_QWORD *)(v3 + v7));
  if ((v6 & 1) == 0)
  {
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
    v11 = swift_getObjectType();
    v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 16);
    v12(v26, v11, v10);
    v13 = v27;
    v14 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v15 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 72))(a1, v13, v14);
    swift_release(v15);
    __swift_destroy_boxed_opaque_existential_1(v26);
    v16 = 27;
LABEL_6:
    v21 = swift_getObjectType();
    v12(v26, v21, v10);
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v25 = *a1;
    v22 = sub_144B4();
    v23._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v22);
    LOBYTE(v25) = v16;
    v24 = 0;
    LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(v23, (ShelfKit::MetricsLabel)&v25, (ShelfKit::MetricsPageType)&v24);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  return result;
}

uint64_t sub_1B0CF8(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  char v25;
  char v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  if ((a3 & 1) == 0)
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
    ObjectType = swift_getObjectType();
    v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 16);
    v14(v27, ObjectType, v12);
    v20 = v28;
    v21 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v22 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v21 + 80))(a1, a2, v20, v21);
    swift_release(v22);
    __swift_destroy_boxed_opaque_existential_1(v27);
    v18 = 26;
    goto LABEL_6;
  }
  v8 = sub_1B0EC4();
  v9 = OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel;
  v10 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(*(_QWORD *)(v4
                                                                      + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel));
  result = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(0);
  if (v10 != result)
    return sub_1B4EE0(a4, *(_QWORD *)(v4 + v9));
  if ((v8 & 1) == 0)
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
    v13 = swift_getObjectType();
    v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 16);
    v14(v27, v13, v12);
    v15 = v28;
    v16 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v17 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 64))(a1, a2, v15, v16);
    swift_release(v17);
    __swift_destroy_boxed_opaque_existential_1(v27);
    v18 = 27;
LABEL_6:
    v23 = swift_getObjectType();
    v14(v27, v23, v12);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v26 = v18;
    v25 = 0;
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    LibraryActionControllerProtocol.makeAndSendMetricsEvent(podcastUuid:actionType:pageType:)(v24, (ShelfKit::MetricsLabel)&v26, (ShelfKit::MetricsPageType)&v25);
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  return result;
}

uint64_t sub_1B0EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v1 = type metadata accessor for ShowOffer(0);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(v0 + 32, v24, 0, 0);
  v7 = ((*(_QWORD *)(v0 + 32) & 0xFELL) != 2) & *(_QWORD *)(v0 + 32);
  if ((_DWORD)v7 == 1)
  {
    sub_14510(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_data, (uint64_t)v6, type metadata accessor for FollowButtonPresenter.Data);
    if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
    {
      sub_3C56C((uint64_t)v6, (uint64_t)v3, type metadata accessor for ShowOffer);
      v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v21, ObjectType, v8);
      v10 = v22;
      v11 = v23;
      __swift_project_boxed_opaque_existential_1(v21, v22);
      v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 120))(v3, v10, v11);
      swift_release(v12);
      sub_145D8((uint64_t)v3, type metadata accessor for ShowOffer);
    }
    else
    {
      v13 = *v6;
      v14 = v6[1];
      v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_libraryDataProvider + 8);
      v16 = swift_getObjectType();
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 16))(v21, v16, v15);
      v17 = v22;
      v18 = v23;
      __swift_project_boxed_opaque_existential_1(v21, v22);
      v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 112))(v13, v14, v17, v18);
      swift_release(v19);
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1(v21);
  }
  return v7;
}

uint64_t sub_1B10AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t result;
  BOOL v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  char v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t countAndFlagsBits;
  _BYTE v28[24];
  Swift::String v29;
  Swift::String v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (_QWORD *)(v1 + 32);
  v7 = swift_beginAccess(v1 + 32, v28, 0, 0);
  result = 0;
  if ((*(_QWORD *)(v1 + 32) & 0xFELL) != 2)
  {
    if ((MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(*(_QWORD *)(v1 + 40), v7) & 1) != 0
      && ((*v6 & 0xFELL) != 2 ? (v9 = (*v6 & 1) == 0) : (v9 = 1),
          v9
       && (v10 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(*(_QWORD *)(v1
                                                                               + OBJC_IVAR____TtC8ShelfKit21FollowButtonPresenter_deviceCapacityLevel)),
           v10 == DeviceCapacityMonitor.CapacityLevel.rawValue.getter(0))))
    {
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12._countAndFlagsBits = 0xD000000000000017;
      v29._countAndFlagsBits = 0xD00000000000001CLL;
      v29._object = (void *)0x8000000000312DB0;
      v12._object = (void *)0x8000000000312D90;
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v29);
      countAndFlagsBits = v14._countAndFlagsBits;
      object = v14._object;

      v16 = String._bridgeToObjectiveC()();
      v17 = 1;
    }
    else
    {
      v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v30._countAndFlagsBits = 0xD00000000000001BLL;
      v30._object = (void *)0x8000000000312D70;
      v19._object = (void *)0x8000000000312D50;
      v19._countAndFlagsBits = 0xD000000000000016;
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v30);
      countAndFlagsBits = v21._countAndFlagsBits;
      object = v21._object;

      v16 = String._bridgeToObjectiveC()();
      v17 = 0;
    }
    v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v16);

    sub_327F8(0, (unint64_t *)&qword_3B89D8, UIAction_ptr);
    v23 = swift_allocObject(&unk_386B28, 24, 7);
    swift_weakInit(v23 + 16);
    sub_267BC(a1, (uint64_t)&v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], &qword_3B62B8);
    v24 = *(unsigned __int8 *)(v4 + 80);
    v25 = (v24 + 25) & ~v24;
    v26 = swift_allocObject(&unk_386C78, v25 + v5, v24 | 7);
    *(_QWORD *)(v26 + 16) = v23;
    *(_BYTE *)(v26 + 24) = v17;
    sub_15BD4((uint64_t)&v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v26 + v25, &qword_3B62B8);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v22, 0, 0, 0, 0, 0, 0, sub_1B55B8, v26);
  }
  return result;
}

uint64_t sub_1B13E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    sub_1B0960((a3 & 1) == 0, a4);
    return swift_release(v8);
  }
  return result;
}

void sub_1B1454()
{
  id v0;
  void *v1;
  uint64_t v2;
  NSURL *v3;
  void *v4;
  void *v5;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v1 = v0;
    if (qword_3B01A8 != -1)
      swift_once(&qword_3B01A8, sub_1ADB38);
    v2 = type metadata accessor for URL(0);
    __swift_project_value_buffer(v2, (uint64_t)qword_3BFC08);
    URL._bridgeToObjectiveC()(v3);
    v5 = v4;
    sub_287F38((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v1, "openSensitiveURL:withOptions:", v5, isa);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B1550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B15DC(*(_QWORD *)(v0+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state), *(_QWORD *)(v0+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state+ 8), *(_QWORD *)(v0+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_state+ 16), 4, 0, 0);
  v1 = v0 + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID;
  v2 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_145D8(v0 + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_data, type metadata accessor for FollowButtonPresenter.Data);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_1B15DC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, __n128);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t, __n128);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  os_signpost_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  const char *v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t, __n128);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  const char *v113;
  uint64_t v114;
  char *v115;
  uint8_t *v116;
  os_signpost_id_t v117;
  void (*v118)(char *, uint64_t);
  char *v119;
  uint64_t v120;
  uint8_t *v121;
  os_signpost_id_t v122;
  void (*v123)(char *, uint64_t);
  char *v124;
  uint8_t *v125;
  os_signpost_id_t v126;
  void (*v127)(char *, uint64_t);
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  void (*v135)(char *, uint64_t, uint64_t);
  char *v136;
  uint64_t *v137;
  uint64_t v138;
  NSObject *v139;
  int v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  os_signpost_id_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t, uint64_t);
  char *v156;
  uint64_t v157;
  NSObject *v158;
  int v159;
  char *v160;
  uint8_t *v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  uint64_t v165;
  os_signpost_id_t v166;
  uint64_t v167;
  uint8_t *v168;
  uint64_t *v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  os_signpost_id_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  os_signpost_id_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  char *v191;
  uint8_t *v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  os_signpost_id_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  char *v200;
  uint8_t *v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  os_signpost_id_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t *v215;
  uint64_t *v216;
  uint64_t *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;

  v211 = a6;
  v213 = a5;
  v210 = a3;
  v212 = a2;
  v7 = type metadata accessor for ShowOffer(0);
  __chkstk_darwin(v7);
  v217 = (uint64_t *)((char *)&v209 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v216 = (uint64_t *)((char *)&v209 - v10);
  __chkstk_darwin(v11);
  v215 = (uint64_t *)((char *)&v209 - v12);
  __chkstk_darwin(v13);
  v232 = (uint64_t)&v209 - v14;
  v233 = type metadata accessor for FollowButtonPresenter.Data(0);
  __chkstk_darwin(v233);
  v234 = (uint64_t *)((char *)&v209 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for OSSignpostError(0);
  v17 = *(_QWORD *)(v16 - 8);
  v230 = v16;
  v231 = v17;
  __chkstk_darwin(v16);
  v214 = (char *)&v209 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v209 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v209 - v23;
  v25 = type metadata accessor for OSSignposter(0);
  v237 = *(_QWORD *)(v25 - 8);
  v238 = v25;
  __chkstk_darwin(v25);
  v229 = (char *)&v209 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v228 = (char *)&v209 - v28;
  __chkstk_darwin(v29);
  v227 = (char *)&v209 - v30;
  __chkstk_darwin(v31);
  v226 = (char *)&v209 - v32;
  __chkstk_darwin(v33);
  v225 = (char *)&v209 - v34;
  __chkstk_darwin(v35);
  v224 = (char *)&v209 - v36;
  __chkstk_darwin(v37);
  v39 = (char *)&v209 - v38;
  __chkstk_darwin(v40);
  v42 = (char *)&v209 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v209 - v44;
  v46 = type metadata accessor for OSSignpostID(0);
  v47 = *(_QWORD *)(v46 - 8);
  v239 = v46;
  v240 = v47;
  __chkstk_darwin(v46);
  v223 = (char *)&v209 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v222 = (char *)&v209 - v50;
  __chkstk_darwin(v51);
  v221 = (char *)&v209 - v52;
  __chkstk_darwin(v53);
  v220 = (char *)&v209 - v54;
  __chkstk_darwin(v55);
  v219 = (char *)&v209 - v56;
  __chkstk_darwin(v57);
  v218 = (char *)&v209 - v58;
  __chkstk_darwin(v59);
  v61 = (char *)&v209 - v60;
  __chkstk_darwin(v62);
  v64 = (char *)&v209 - v63;
  __chkstk_darwin(v65);
  v67 = (char *)&v209 - v66;
  v69 = __chkstk_darwin(v68);
  v241 = (char *)&v209 - v70;
  v235 = a4;
  a4 = a4;
  if (a1 == 4)
  {
LABEL_35:
    if (a4 == 4)
      return;
    v128 = v236;
    v129 = v234;
    sub_14510(v236 + OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_data, (uint64_t)v234, type metadata accessor for FollowButtonPresenter.Data);
    if (swift_getEnumCaseMultiPayload(v129, v233) == 1)
    {
      v130 = v232;
      v131 = sub_3C56C((uint64_t)v129, v232, type metadata accessor for ShowOffer);
      v132 = v239;
      if (v235 == 2)
      {
        v134 = v228;
        static OSSignposter.following.getter(v131);
        v133 = v240;
        v135 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 16);
        v136 = v222;
        v135(v222, v128+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v132);
        v137 = v216;
        v170 = sub_14510(v130, (uint64_t)v216, type metadata accessor for ShowOffer);
        v139 = OSSignposter.logHandle.getter(v170);
        v171 = static os_signpost_type_t.begin.getter(v139);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          LODWORD(v236) = v171;
          v141 = v241;
          v135(v241, (uint64_t)v136, v132);
          v142 = swift_slowAlloc(22, -1);
          v172 = swift_slowAlloc(32, -1);
          *(_DWORD *)v142 = 141558275;
          v242 = 1752392040;
          v243 = v172;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
          *(_WORD *)(v142 + 12) = 2085;
          v242 = *v137;
          v173 = sub_144B4();
          v174 = BinaryInteger.description.getter(&type metadata for UInt64, v173);
          v242 = sub_69298(v174, v175, &v243);
          v136 = v222;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
          swift_bridgeObjectRelease();
          v176 = sub_145D8((uint64_t)v137, type metadata accessor for ShowOffer);
          v177 = OSSignpostID.rawValue.getter(v176);
          _os_signpost_emit_with_name_impl(&dword_0, v139, (os_signpost_type_t)v236, v177, "Follow Button +", "AdamID: %{sensitive,mask.hash}s", (uint8_t *)v142, 0x16u);
          swift_arrayDestroy(v172, 1, (char *)&type metadata for Any + 8);
          v149 = v172;
          v134 = v228;
          goto LABEL_49;
        }
      }
      else
      {
        v133 = v240;
        if (v235 == 3)
        {
          v134 = v227;
          static OSSignposter.following.getter(v131);
          v135 = *(void (**)(char *, uint64_t, uint64_t))(v133 + 16);
          v136 = v221;
          v135(v221, v128+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v132);
          v137 = v215;
          v138 = sub_14510(v130, (uint64_t)v215, type metadata accessor for ShowOffer);
          v139 = OSSignposter.logHandle.getter(v138);
          v140 = static os_signpost_type_t.begin.getter(v139);
          if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
          {
            LODWORD(v236) = v140;
            v141 = v241;
            v135(v241, (uint64_t)v136, v132);
            v142 = swift_slowAlloc(22, -1);
            v143 = swift_slowAlloc(32, -1);
            *(_DWORD *)v142 = 141558275;
            v242 = 1752392040;
            v243 = v143;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
            *(_WORD *)(v142 + 12) = 2085;
            v242 = *v137;
            v144 = sub_144B4();
            v145 = BinaryInteger.description.getter(&type metadata for UInt64, v144);
            v242 = sub_69298(v145, v146, &v243);
            v136 = v221;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
            swift_bridgeObjectRelease();
            v147 = sub_145D8((uint64_t)v137, type metadata accessor for ShowOffer);
            v148 = OSSignpostID.rawValue.getter(v147);
            _os_signpost_emit_with_name_impl(&dword_0, v139, (os_signpost_type_t)v236, v148, "Follow Button Spinner", "AdamID: %{sensitive,mask.hash}s", (uint8_t *)v142, 0x16u);
            swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
            v149 = v143;
            v134 = v227;
LABEL_49:
            swift_slowDealloc(v149, -1, -1);
            v186 = v142;
            v130 = v232;
            swift_slowDealloc(v186, -1, -1);

            (*(void (**)(char *, uint64_t))(v133 + 8))(v141, v132);
LABEL_51:
            v135(v141, (uint64_t)v136, v132);
            v187 = type metadata accessor for OSSignpostIntervalState(0);
            swift_allocObject(v187, *(unsigned int *)(v187 + 48), *(unsigned __int16 *)(v187 + 52));
            v188 = OSSignpostIntervalState.init(id:isOpen:)(v141, 1);
            swift_release(v188);
            (*(void (**)(char *, uint64_t))(v133 + 8))(v136, v132);
            (*(void (**)(char *, uint64_t))(v237 + 8))(v134, v238);
            sub_145D8(v130, type metadata accessor for ShowOffer);
            return;
          }
        }
        else
        {
          v134 = v229;
          static OSSignposter.following.getter(v131);
          v135 = *(void (**)(char *, uint64_t, uint64_t))(v133 + 16);
          v136 = v223;
          v135(v223, v128+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v132);
          v137 = v217;
          v178 = sub_14510(v130, (uint64_t)v217, type metadata accessor for ShowOffer);
          v139 = OSSignposter.logHandle.getter(v178);
          v179 = static os_signpost_type_t.begin.getter(v139);
          if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
          {
            LODWORD(v236) = v179;
            v141 = v241;
            v135(v241, (uint64_t)v136, v132);
            v142 = swift_slowAlloc(22, -1);
            v180 = swift_slowAlloc(32, -1);
            *(_DWORD *)v142 = 141558275;
            v242 = 1752392040;
            v243 = v180;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
            *(_WORD *)(v142 + 12) = 2085;
            v242 = *v137;
            v181 = sub_144B4();
            v182 = BinaryInteger.description.getter(&type metadata for UInt64, v181);
            v242 = sub_69298(v182, v183, &v243);
            v136 = v223;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
            swift_bridgeObjectRelease();
            v184 = sub_145D8((uint64_t)v137, type metadata accessor for ShowOffer);
            v185 = OSSignpostID.rawValue.getter(v184);
            _os_signpost_emit_with_name_impl(&dword_0, v139, (os_signpost_type_t)v236, v185, "Follow Button ✅", "AdamID: %{sensitive,mask.hash}s", (uint8_t *)v142, 0x16u);
            swift_arrayDestroy(v180, 1, (char *)&type metadata for Any + 8);
            v149 = v180;
            v134 = v229;
            goto LABEL_49;
          }
        }
      }

      sub_145D8((uint64_t)v137, type metadata accessor for ShowOffer);
      v141 = v241;
      goto LABEL_51;
    }
    v151 = *v129;
    v150 = v129[1];
    v152 = v239;
    if (v235 == 2)
    {
      v153 = v225;
      ((void (*)(void))static OSSignposter.following.getter)();
      v154 = v240;
      v155 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 16);
      v156 = v219;
      v155(v219, v128+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v152);
      v189 = swift_bridgeObjectRetain();
      v158 = OSSignposter.logHandle.getter(v189);
      v190 = static os_signpost_type_t.begin.getter(v158);
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v191 = v241;
        v155(v241, (uint64_t)v156, v152);
        LODWORD(v236) = v190;
        v192 = (uint8_t *)swift_slowAlloc(12, -1);
        v193 = swift_slowAlloc(32, -1);
        v243 = v193;
        *(_DWORD *)v192 = 136446210;
        swift_bridgeObjectRetain();
        v242 = sub_69298(v151, v150, &v243);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
        v194 = v150;
        v164 = v191;
        v153 = v225;
        v195 = swift_bridgeObjectRelease_n(v194, 3);
        v196 = OSSignpostID.rawValue.getter(v195);
        _os_signpost_emit_with_name_impl(&dword_0, v158, (os_signpost_type_t)v236, v196, "Follow Button +", "UUID: %{public}s", v192, 0xCu);
        swift_arrayDestroy(v193, 1, (char *)&type metadata for Any + 8);
        v197 = v193;
        v154 = v240;
        swift_slowDealloc(v197, -1, -1);
        v168 = v192;
        v169 = &v245;
        goto LABEL_56;
      }
    }
    else if (v235 == 3)
    {
      v153 = v224;
      ((void (*)(void))static OSSignposter.following.getter)();
      v154 = v240;
      v155 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 16);
      v156 = v218;
      v155(v218, v128+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v152);
      v157 = swift_bridgeObjectRetain();
      v158 = OSSignposter.logHandle.getter(v157);
      v159 = static os_signpost_type_t.begin.getter(v158);
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v160 = v241;
        v155(v241, (uint64_t)v156, v152);
        LODWORD(v236) = v159;
        v161 = (uint8_t *)swift_slowAlloc(12, -1);
        v162 = swift_slowAlloc(32, -1);
        v243 = v162;
        *(_DWORD *)v161 = 136446210;
        swift_bridgeObjectRetain();
        v242 = sub_69298(v151, v150, &v243);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
        v163 = v150;
        v164 = v160;
        v153 = v224;
        v165 = swift_bridgeObjectRelease_n(v163, 3);
        v166 = OSSignpostID.rawValue.getter(v165);
        _os_signpost_emit_with_name_impl(&dword_0, v158, (os_signpost_type_t)v236, v166, "Follow Button Spinner", "UUID: %{public}s", v161, 0xCu);
        swift_arrayDestroy(v162, 1, (char *)&type metadata for Any + 8);
        v167 = v162;
        v154 = v240;
        swift_slowDealloc(v167, -1, -1);
        v168 = v161;
        v169 = &v244;
LABEL_56:
        v156 = (char *)*(v169 - 32);
        swift_slowDealloc(v168, -1, -1);

        (*(void (**)(char *, uint64_t))(v154 + 8))(v164, v152);
LABEL_58:
        v155(v164, (uint64_t)v156, v152);
        v207 = type metadata accessor for OSSignpostIntervalState(0);
        swift_allocObject(v207, *(unsigned int *)(v207 + 48), *(unsigned __int16 *)(v207 + 52));
        v208 = OSSignpostIntervalState.init(id:isOpen:)(v164, 1);
        swift_release(v208);
        (*(void (**)(char *, uint64_t))(v154 + 8))(v156, v152);
        (*(void (**)(char *, uint64_t))(v237 + 8))(v153, v238);
        return;
      }
    }
    else
    {
      v153 = v226;
      ((void (*)(void))static OSSignposter.following.getter)();
      v154 = v240;
      v155 = *(void (**)(char *, uint64_t, uint64_t))(v240 + 16);
      v156 = v220;
      v155(v220, v128+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v152);
      v198 = swift_bridgeObjectRetain();
      v158 = OSSignposter.logHandle.getter(v198);
      v199 = static os_signpost_type_t.begin.getter(v158);
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v200 = v241;
        v155(v241, (uint64_t)v156, v152);
        LODWORD(v236) = v199;
        v201 = (uint8_t *)swift_slowAlloc(12, -1);
        v202 = swift_slowAlloc(32, -1);
        v243 = v202;
        *(_DWORD *)v201 = 136446210;
        swift_bridgeObjectRetain();
        v242 = sub_69298(v151, v150, &v243);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, &v243);
        v203 = v150;
        v164 = v200;
        v153 = v226;
        v204 = swift_bridgeObjectRelease_n(v203, 3);
        v205 = OSSignpostID.rawValue.getter(v204);
        _os_signpost_emit_with_name_impl(&dword_0, v158, (os_signpost_type_t)v236, v205, "Follow Button ✅", "UUID: %{public}s", v201, 0xCu);
        swift_arrayDestroy(v202, 1, (char *)&type metadata for Any + 8);
        v206 = v202;
        v154 = v240;
        swift_slowDealloc(v206, -1, -1);
        v168 = v201;
        v169 = &v246;
        goto LABEL_56;
      }
    }
    swift_bridgeObjectRelease_n(v150, 2);

    v164 = v241;
    goto LABEL_58;
  }
  if (a4 == 4)
    goto LABEL_3;
  if (a1 == 2)
  {
    if (a4 == 2)
      return;
    goto LABEL_13;
  }
  if (a1 == 3)
  {
    if (a4 == 3)
      return;
LABEL_9:
    v213 = a4;
    v73 = v240;
    v72 = v241;
    v74 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v240 + 16);
    v75 = v239;
    v74(v241, v236+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v239, v69);
    v76 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
    v77 = OSSignpostIntervalState.init(id:isOpen:)(v72, 1);
    v78 = ((uint64_t (*)(void))static OSSignposter.following.getter)();
    v79 = OSSignposter.logHandle.getter(v78);
    v80 = OSSignpostIntervalState.signpostID.getter();
    v81 = static os_signpost_type_t.end.getter(v80);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      LODWORD(v214) = v81;
      v82 = swift_retain();
      checkForErrorAndConsumeState(state:)(v82);
      swift_release(v77);
      v83 = v230;
      v84 = v231;
      if ((*(unsigned int (**)(char *, uint64_t))(v231 + 88))(v24, v230) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v85 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v84 + 8))(v24, v83);
        v85 = "";
      }
      v115 = v241;
      ((void (*)(char *, char *, uint64_t))v74)(v241, v67, v75);
      v116 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v116 = 0;
      v117 = OSSignpostID.rawValue.getter(v116);
      _os_signpost_emit_with_name_impl(&dword_0, v79, (os_signpost_type_t)v214, v117, "Follow Button Spinner", v85, v116, 2u);
      swift_slowDealloc(v116, -1, -1);

      v118 = *(void (**)(char *, uint64_t))(v73 + 8);
      v118(v67, v75);
      (*(void (**)(char *, uint64_t))(v237 + 8))(v45, v238);
      swift_release(v77);
      v118(v115, v75);
      goto LABEL_34;
    }

    (*(void (**)(char *, uint64_t))(v73 + 8))(v67, v75);
    (*(void (**)(char *, uint64_t))(v237 + 8))(v45, v238);
LABEL_22:
    swift_release(v77);
LABEL_34:
    a4 = v213;
    goto LABEL_35;
  }
  if ((v235 & 0xFE) == 2)
  {
LABEL_17:
    v100 = v240;
    v99 = v241;
    v101 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v240 + 16);
    v102 = v239;
    v101(v241, v236+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v239, v69);
    v103 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v103, *(unsigned int *)(v103 + 48), *(unsigned __int16 *)(v103 + 52));
    v104 = OSSignpostIntervalState.init(id:isOpen:)(v99, 1);
    v105 = ((uint64_t (*)(void))static OSSignposter.following.getter)();
    v106 = OSSignposter.logHandle.getter(v105);
    v107 = OSSignpostIntervalState.signpostID.getter();
    LODWORD(v212) = static os_signpost_type_t.end.getter(v107);
    v108 = OS_os_log.signpostsEnabled.getter();
    v109 = v231;
    if ((v108 & 1) == 0)
    {

      (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v102);
      (*(void (**)(char *, uint64_t))(v237 + 8))(v39, v238);
      swift_release(v104);
      goto LABEL_35;
    }
    v213 = a4;
    v110 = swift_retain();
    v111 = v214;
    checkForErrorAndConsumeState(state:)(v110);
    swift_release(v104);
    v112 = v230;
    if ((*(unsigned int (**)(char *, uint64_t))(v109 + 88))(v111, v230) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v113 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v111, v112);
      v113 = "";
    }
    v124 = v241;
    ((void (*)(char *, char *, uint64_t))v101)(v241, v61, v102);
    v125 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v125 = 0;
    v126 = OSSignpostID.rawValue.getter(v125);
    _os_signpost_emit_with_name_impl(&dword_0, v106, (os_signpost_type_t)v212, v126, "Follow Button ✅", v113, v125, 2u);
    swift_slowDealloc(v125, -1, -1);

    v127 = *(void (**)(char *, uint64_t))(v100 + 8);
    v127(v61, v102);
    (*(void (**)(char *, uint64_t))(v237 + 8))(v39, v238);
    swift_release(v104);
    v127(v124, v102);
    goto LABEL_34;
  }
  if (((a1 & 1) == 0) == (v235 & 1)
    || v212 != v213
    || (v213 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(v210),
        v114 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(v211),
        v213 != v114))
  {
LABEL_3:
    if (a1 != 2)
    {
      if (a1 != 3)
        goto LABEL_17;
      goto LABEL_9;
    }
LABEL_13:
    v213 = a4;
    v87 = v240;
    v86 = v241;
    v88 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v240 + 16);
    v89 = v239;
    v88(v241, v236+ OBJC_IVAR____TtCC8ShelfKit21FollowButtonPresenterP33_C4252E2551203B4F11834AE826498F8D10Signposter_signpostID, v239, v69);
    v90 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
    v77 = OSSignpostIntervalState.init(id:isOpen:)(v86, 1);
    v91 = ((uint64_t (*)(void))static OSSignposter.following.getter)();
    v92 = OSSignposter.logHandle.getter(v91);
    v93 = OSSignpostIntervalState.signpostID.getter();
    v94 = static os_signpost_type_t.end.getter(v93);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v95 = swift_retain();
      checkForErrorAndConsumeState(state:)(v95);
      swift_release(v77);
      v96 = v230;
      v97 = v231;
      if ((*(unsigned int (**)(char *, uint64_t))(v231 + 88))(v21, v230) == enum case for OSSignpostError.doubleEnd(_:))
      {
        v98 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v97 + 8))(v21, v96);
        v98 = "";
      }
      v119 = v241;
      v120 = v239;
      ((void (*)(char *, char *, uint64_t))v88)(v241, v64, v239);
      v121 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v121 = 0;
      v122 = OSSignpostID.rawValue.getter(v121);
      _os_signpost_emit_with_name_impl(&dword_0, v92, v94, v122, "Follow Button +", v98, v121, 2u);
      swift_slowDealloc(v121, -1, -1);

      v123 = *(void (**)(char *, uint64_t))(v240 + 8);
      v123(v64, v120);
      (*(void (**)(char *, uint64_t))(v237 + 8))(v42, v238);
      swift_release(v77);
      v123(v119, v120);
      goto LABEL_34;
    }

    (*(void (**)(char *, uint64_t))(v87 + 8))(v64, v89);
    (*(void (**)(char *, uint64_t))(v237 + 8))(v42, v238);
    goto LABEL_22;
  }
}

BOOL _s8ShelfKit21FollowButtonPresenterC5StateO2eeoiySbAE_AEtFZ_0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  _BOOL8 result;
  uint64_t v9;

  if (a1 == 2)
    return a4 == 2;
  if (a1 == 3)
    return a4 == 3;
  if ((a4 & 0xFE) == 2)
    return 0;
  result = 0;
  if (((a1 & 1) == 0) != (a4 & 1) && a2 == a5)
  {
    v9 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(a3);
    return v9 == DeviceCapacityMonitor.CapacityLevel.rawValue.getter(a6);
  }
  return result;
}

uint64_t sub_1B2C3C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  _BYTE v11[24];

  swift_beginAccess(v2 + 2, v11, 1, 0);
  v2[3] = a2;
  v5 = swift_unknownObjectWeakAssign(v2 + 2, a1);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    v8 = v2[3];
    ObjectType = swift_getObjectType(result);
    swift_beginAccess(v2 + 4, &v10, 0, 0);
    (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 8))(v2[4], v2[5], v2[6], ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t type metadata accessor for FollowButtonPresenter.Data(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3BFEF0, (uint64_t)&nominal type descriptor for FollowButtonPresenter.Data);
}

uint64_t type metadata accessor for FollowButtonPresenter.Signposter(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3BFF50, (uint64_t)&nominal type descriptor for FollowButtonPresenter.Signposter);
}

uint64_t sub_1B2D0C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for PodcastState - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B2D48(uint64_t a1)
{
  sub_1B2D78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_1B2D78(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >= 3)
    return swift_bridgeObjectRelease(a3);
  return result;
}

uint64_t sub_1B2D8C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1B2DB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE60C(a1, v1);
}

uint64_t sub_1B2DB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE718(a1, v1);
}

uint64_t sub_1B2DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for PresentationSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v7));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v8 + 16, v2 | 7);
}

uint64_t sub_1B2E88(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1AF14C(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1B2EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BFC80) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v9 = v0 + v3;
  v10 = type metadata accessor for InteractionContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = type metadata accessor for PresentationSource(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v7, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v7, v12);
  return swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_1B2FF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BFC80) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8) - 8) + 80);
  return sub_1B08D0(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1B3064@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7[24];

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess(v4, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

__n128 sub_1B30C0@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  unint64_t v4;
  __n128 result;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(&(*a1)[2], v6, 0, 0);
  v4 = v3[3].n128_u64[0];
  result = v3[2];
  *a2 = result;
  a2[1].n128_u64[0] = v4;
  return result;
}

void sub_1B310C(uint64_t *a1)
{
  sub_1ADE44(*a1, a1[1], a1[2]);
}

uint64_t sub_1B313C()
{
  return type metadata accessor for FollowButtonPresenter(0);
}

uint64_t type metadata accessor for FollowButtonPresenter(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3BFCB0, (uint64_t)&nominal type descriptor for FollowButtonPresenter);
}

uint64_t sub_1B3158(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_2FBFB8;
  v4[1] = &unk_2FBFD0;
  result = type metadata accessor for FollowButtonPresenter.Data(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = &unk_2FBFE8;
    v4[5] = &unk_2FC000;
    v4[6] = &unk_2FC018;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[9] = &unk_2FC030;
    v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FollowButtonPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FollowButtonPresenter);
}

uint64_t dispatch thunk of FollowButtonPresenter.__allocating_init(data:displaySuccessHUD:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of FollowButtonPresenter.performPrimaryAction(with:from:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of FollowButtonPresenter.unfollowMenu(with:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t initializeBufferWithCopyOfBuffer for FollowButtonPresenter.Data(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(_QWORD *, uint64_t, int *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  void *__dst;
  int *v93;
  uint64_t v94;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v94 = a3;
      v8 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      v9 = (int *)type metadata accessor for ShowOffer(0);
      v10 = v9[7];
      v11 = (_QWORD *)(a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = (int *)type metadata accessor for ArtworkModel(0);
      v14 = *((_QWORD *)v13 - 1);
      v15 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v21 = v12[1];
        *v11 = *v12;
        v11[1] = v21;
        v22 = *((unsigned __int8 *)v12 + 32);
        swift_bridgeObjectRetain();
        if (v22 == 255)
        {
          *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
          *((_BYTE *)v11 + 32) = *((_BYTE *)v12 + 32);
        }
        else
        {
          v23 = v12[2];
          v24 = v12[3];
          sub_3D464(v23, v24, v22);
          v11[2] = v23;
          v11[3] = v24;
          *((_BYTE *)v11 + 32) = v22;
        }
        *(_OWORD *)(v11 + 5) = *(_OWORD *)(v12 + 5);
        v25 = (id *)(v12 + 7);
        v26 = *((unsigned __int8 *)v12 + 64);
        if (v26 == 255)
        {
          v11[7] = *v25;
          *((_BYTE *)v11 + 64) = *((_BYTE *)v12 + 64);
        }
        else
        {
          v27 = *v25;
          sub_3D47C(*v25, *((_BYTE *)v12 + 64));
          v11[7] = v27;
          *((_BYTE *)v11 + 64) = v26;
        }
        v28 = (id *)(v12 + 9);
        v29 = *((unsigned __int8 *)v12 + 80);
        if (v29 == 255)
        {
          v11[9] = *v28;
          *((_BYTE *)v11 + 80) = *((_BYTE *)v12 + 80);
        }
        else
        {
          v30 = *v28;
          sub_3D47C(*v28, *((_BYTE *)v12 + 80));
          v11[9] = v30;
          *((_BYTE *)v11 + 80) = v29;
        }
        v31 = (id *)(v12 + 11);
        v32 = *((unsigned __int8 *)v12 + 96);
        if (v32 == 255)
        {
          v11[11] = *v31;
          *((_BYTE *)v11 + 96) = *((_BYTE *)v12 + 96);
        }
        else
        {
          v33 = *v31;
          sub_3D47C(*v31, *((_BYTE *)v12 + 96));
          v11[11] = v33;
          *((_BYTE *)v11 + 96) = v32;
        }
        v34 = (id *)(v12 + 13);
        v35 = *((unsigned __int8 *)v12 + 112);
        if (v35 == 255)
        {
          v11[13] = *v34;
          *((_BYTE *)v11 + 112) = *((_BYTE *)v12 + 112);
        }
        else
        {
          v36 = *v34;
          sub_3D47C(*v34, *((_BYTE *)v12 + 112));
          v11[13] = v36;
          *((_BYTE *)v11 + 112) = v35;
        }
        v37 = (id *)(v12 + 15);
        v38 = *((unsigned __int8 *)v12 + 128);
        if (v38 == 255)
        {
          v11[15] = *v37;
          *((_BYTE *)v11 + 128) = *((_BYTE *)v12 + 128);
        }
        else
        {
          v39 = *v37;
          sub_3D47C(*v37, *((_BYTE *)v12 + 128));
          v11[15] = v39;
          *((_BYTE *)v11 + 128) = v38;
        }
        *((_BYTE *)v11 + 129) = *((_BYTE *)v12 + 129);
        v40 = v13[11];
        v41 = (char *)v11 + v40;
        v42 = (char *)v12 + v40;
        v43 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        v44 = v13[12];
        v45 = (_QWORD *)((char *)v11 + v44);
        v46 = (_QWORD *)((char *)v12 + v44);
        v47 = v46[1];
        *v45 = *v46;
        v45[1] = v47;
        *((_BYTE *)v11 + v13[13]) = *((_BYTE *)v12 + v13[13]);
        *((_BYTE *)v11 + v13[14]) = *((_BYTE *)v12 + v13[14]);
        *((_BYTE *)v11 + v13[15]) = *((_BYTE *)v12 + v13[15]);
        v48 = v13[16];
        v49 = (_QWORD *)((char *)v11 + v48);
        v50 = (_QWORD *)((char *)v12 + v48);
        v51 = v50[1];
        *v49 = *v50;
        v49[1] = v51;
        v52 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(v11, 0, 1, v13);
      }
      v53 = v9[8];
      v54 = (_QWORD *)(a1 + v53);
      v55 = (uint64_t *)((char *)a2 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = v9[9];
      v58 = (_QWORD *)(a1 + v57);
      v59 = (uint64_t *)((char *)a2 + v57);
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      *(_BYTE *)(a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
      v61 = v9[11];
      v62 = (_QWORD *)(a1 + v61);
      v63 = (uint64_t *)((char *)a2 + v61);
      v64 = v63[1];
      *v62 = *v63;
      v62[1] = v64;
      v65 = v9[12];
      v66 = (_QWORD *)(a1 + v65);
      v67 = (uint64_t *)((char *)a2 + v65);
      v68 = v67[1];
      *v66 = *v67;
      v66[1] = v68;
      v69 = v9[13];
      __dst = (void *)(a1 + v69);
      v93 = v9;
      v70 = (char *)a2 + v69;
      v71 = type metadata accessor for URL(0);
      v72 = *(_QWORD *)(v71 - 8);
      v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v73(v70, 1, v71))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 16))(__dst, v70, v71);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v71);
      }
      v75 = v93[14];
      v76 = (_QWORD *)(a1 + v75);
      v77 = (uint64_t *)((char *)a2 + v75);
      v78 = v77[1];
      *v76 = *v77;
      v76[1] = v78;
      v79 = v93[15];
      v80 = (_QWORD *)(a1 + v79);
      v81 = (uint64_t *)((char *)a2 + v79);
      v82 = v81[1];
      *v80 = *v81;
      v80[1] = v82;
      v83 = v93[16];
      v84 = (void *)(a1 + v83);
      v85 = (char *)a2 + v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v73(v85, 1, v71))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 16))(v84, v85, v71);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v84, 0, 1, v71);
      }
      v87 = v93[17];
      v88 = (void *)(a1 + v87);
      v89 = (char *)a2 + v87;
      if (v73((char *)a2 + v87, 1, v71))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 16))(v88, v89, v71);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v88, 0, 1, v71);
      }
      *(_BYTE *)(a1 + v93[18]) = *((_BYTE *)a2 + v93[18]);
      v18 = a1;
      v19 = v94;
      v20 = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
      v18 = a1;
      v19 = a3;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for FollowButtonPresenter.Data(uint64_t a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = (int *)type metadata accessor for ShowOffer(0);
  v4 = a1 + v3[7];
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = a1 + v3[13];
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v17(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = a1 + v3[16];
  if (!v17(v18, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
  v19 = a1 + v3[17];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v19, 1, v15);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
  return result;
}

uint64_t initializeWithCopy for FollowButtonPresenter.Data(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(const void *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  void *__dst;
  int *v89;
  uint64_t v90;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v90 = v3;
    v7 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v8 = (int *)type metadata accessor for ShowOffer(0);
    v9 = v8[7];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v19 = v11[2];
        v20 = v11[3];
        sub_3D464(v19, v20, v18);
        v10[2] = v19;
        v10[3] = v20;
        *((_BYTE *)v10 + 32) = v18;
      }
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v21 = (id *)(v11 + 7);
      v22 = *((unsigned __int8 *)v11 + 64);
      if (v22 == 255)
      {
        v10[7] = *v21;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)v11 + 64));
        v10[7] = v23;
        *((_BYTE *)v10 + 64) = v22;
      }
      v24 = (id *)(v11 + 9);
      v25 = *((unsigned __int8 *)v11 + 80);
      if (v25 == 255)
      {
        v10[9] = *v24;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)v11 + 80));
        v10[9] = v26;
        *((_BYTE *)v10 + 80) = v25;
      }
      v27 = (id *)(v11 + 11);
      v28 = *((unsigned __int8 *)v11 + 96);
      if (v28 == 255)
      {
        v10[11] = *v27;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)v11 + 96));
        v10[11] = v29;
        *((_BYTE *)v10 + 96) = v28;
      }
      v30 = (id *)(v11 + 13);
      v31 = *((unsigned __int8 *)v11 + 112);
      if (v31 == 255)
      {
        v10[13] = *v30;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)v11 + 112));
        v10[13] = v32;
        *((_BYTE *)v10 + 112) = v31;
      }
      v33 = (id *)(v11 + 15);
      v34 = *((unsigned __int8 *)v11 + 128);
      if (v34 == 255)
      {
        v10[15] = *v33;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)v11 + 128));
        v10[15] = v35;
        *((_BYTE *)v10 + 128) = v34;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v36 = v12[11];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v12[12];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (_QWORD *)((char *)v11 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v10, 0, 1, v12);
    }
    v49 = v8[8];
    v50 = (_QWORD *)(a1 + v49);
    v51 = (_QWORD *)(a2 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = v8[9];
    v54 = (_QWORD *)(a1 + v53);
    v55 = (_QWORD *)(a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
    v57 = v8[11];
    v58 = (_QWORD *)(a1 + v57);
    v59 = (_QWORD *)(a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = v8[12];
    v62 = (_QWORD *)(a1 + v61);
    v63 = (_QWORD *)(a2 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = v8[13];
    __dst = (void *)(a1 + v65);
    v89 = v8;
    v66 = (const void *)(a2 + v65);
    v67 = type metadata accessor for URL(0);
    v68 = *(_QWORD *)(v67 - 8);
    v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69(v66, 1, v67))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(__dst, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(__dst, v66, v67);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v67);
    }
    v71 = v89[14];
    v72 = (_QWORD *)(a1 + v71);
    v73 = (_QWORD *)(a2 + v71);
    v74 = v73[1];
    *v72 = *v73;
    v72[1] = v74;
    v75 = v89[15];
    v76 = (_QWORD *)(a1 + v75);
    v77 = (_QWORD *)(a2 + v75);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    v79 = v89[16];
    v80 = (void *)(a1 + v79);
    v81 = (const void *)(a2 + v79);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69(v81, 1, v67))
    {
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(v80, v81, v67);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v80, 0, 1, v67);
    }
    v3 = v90;
    v83 = v89[17];
    v84 = (void *)(a1 + v83);
    v85 = (const void *)(a2 + v83);
    if (v69((const void *)(a2 + v83), 1, v67))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(v84, v85, v67);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v84, 0, 1, v67);
    }
    *(_BYTE *)(a1 + v89[18]) = *(_BYTE *)(a2 + v89[18]);
    v16 = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v3, v16);
  return a1;
}

uint64_t assignWithCopy for FollowButtonPresenter.Data(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  id *v20;
  int v21;
  id v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  void (*v50)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(const void *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  uint64_t v82;
  void *__dst;
  int *v85;
  uint64_t v86;

  if (a1 != a2)
  {
    sub_145D8(a1, type metadata accessor for FollowButtonPresenter.Data);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v86 = a3;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v7 = (int *)type metadata accessor for ShowOffer(0);
      v8 = v7[7];
      v9 = (_QWORD *)(a1 + v8);
      v10 = (_QWORD *)(a2 + v8);
      v11 = (int *)type metadata accessor for ArtworkModel(0);
      v12 = *((_QWORD *)v11 - 1);
      v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v9 = *v10;
        v9[1] = v10[1];
        v16 = *((unsigned __int8 *)v10 + 32);
        swift_bridgeObjectRetain();
        if (v16 == 255)
        {
          v19 = *((_OWORD *)v10 + 1);
          *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
          *((_OWORD *)v9 + 1) = v19;
        }
        else
        {
          v17 = v10[2];
          v18 = v10[3];
          sub_3D464(v17, v18, v16);
          v9[2] = v17;
          v9[3] = v18;
          *((_BYTE *)v9 + 32) = v16;
        }
        v9[5] = v10[5];
        v9[6] = v10[6];
        v20 = (id *)(v10 + 7);
        v21 = *((unsigned __int8 *)v10 + 64);
        if (v21 == 255)
        {
          v23 = *v20;
          *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
          v9[7] = v23;
        }
        else
        {
          v22 = *v20;
          sub_3D47C(*v20, *((_BYTE *)v10 + 64));
          v9[7] = v22;
          *((_BYTE *)v9 + 64) = v21;
        }
        v24 = (id *)(v10 + 9);
        v25 = *((unsigned __int8 *)v10 + 80);
        if (v25 == 255)
        {
          v27 = *v24;
          *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
          v9[9] = v27;
        }
        else
        {
          v26 = *v24;
          sub_3D47C(*v24, *((_BYTE *)v10 + 80));
          v9[9] = v26;
          *((_BYTE *)v9 + 80) = v25;
        }
        v28 = (id *)(v10 + 11);
        v29 = *((unsigned __int8 *)v10 + 96);
        if (v29 == 255)
        {
          v31 = *v28;
          *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
          v9[11] = v31;
        }
        else
        {
          v30 = *v28;
          sub_3D47C(*v28, *((_BYTE *)v10 + 96));
          v9[11] = v30;
          *((_BYTE *)v9 + 96) = v29;
        }
        v32 = (id *)(v10 + 13);
        v33 = *((unsigned __int8 *)v10 + 112);
        if (v33 == 255)
        {
          v35 = *v32;
          *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
          v9[13] = v35;
        }
        else
        {
          v34 = *v32;
          sub_3D47C(*v32, *((_BYTE *)v10 + 112));
          v9[13] = v34;
          *((_BYTE *)v9 + 112) = v33;
        }
        v36 = (id *)(v10 + 15);
        v37 = *((unsigned __int8 *)v10 + 128);
        if (v37 == 255)
        {
          v39 = *v36;
          *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
          v9[15] = v39;
        }
        else
        {
          v38 = *v36;
          sub_3D47C(*v36, *((_BYTE *)v10 + 128));
          v9[15] = v38;
          *((_BYTE *)v9 + 128) = v37;
        }
        *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
        v40 = v11[11];
        v41 = (char *)v9 + v40;
        v42 = (char *)v10 + v40;
        v43 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        v44 = v11[12];
        v45 = (_QWORD *)((char *)v9 + v44);
        v46 = (_QWORD *)((char *)v10 + v44);
        *v45 = *v46;
        v45[1] = v46[1];
        *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
        *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
        *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
        v47 = v11[16];
        v48 = (_QWORD *)((char *)v9 + v47);
        v49 = (_QWORD *)((char *)v10 + v47);
        *v48 = *v49;
        v48[1] = v49[1];
        v50 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50(v9, 0, 1, v11);
      }
      v51 = v7[8];
      v52 = (_QWORD *)(a1 + v51);
      v53 = (_QWORD *)(a2 + v51);
      *v52 = *v53;
      v52[1] = v53[1];
      v54 = v7[9];
      v55 = (_QWORD *)(a1 + v54);
      v56 = (_QWORD *)(a2 + v54);
      *v55 = *v56;
      v55[1] = v56[1];
      *(_BYTE *)(a1 + v7[10]) = *(_BYTE *)(a2 + v7[10]);
      v57 = v7[11];
      v58 = (_QWORD *)(a1 + v57);
      v59 = (_QWORD *)(a2 + v57);
      *v58 = *v59;
      v58[1] = v59[1];
      v60 = v7[12];
      v61 = (_QWORD *)(a1 + v60);
      v62 = (_QWORD *)(a2 + v60);
      *v61 = *v62;
      v61[1] = v62[1];
      v63 = v7[13];
      __dst = (void *)(a1 + v63);
      v85 = v7;
      v64 = (const void *)(a2 + v63);
      v65 = type metadata accessor for URL(0);
      v66 = *(_QWORD *)(v65 - 8);
      v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v67(v64, 1, v65))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v66 + 16))(__dst, v64, v65);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v65);
      }
      v69 = v85[14];
      v70 = (_QWORD *)(a1 + v69);
      v71 = (_QWORD *)(a2 + v69);
      *v70 = *v71;
      v70[1] = v71[1];
      v72 = v85[15];
      v73 = (_QWORD *)(a1 + v72);
      v74 = (_QWORD *)(a2 + v72);
      *v73 = *v74;
      v73[1] = v74[1];
      v75 = v85[16];
      v76 = (void *)(a1 + v75);
      v77 = (const void *)(a2 + v75);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v67(v77, 1, v65))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v66 + 16))(v76, v77, v65);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v76, 0, 1, v65);
      }
      a3 = v86;
      v79 = v85[17];
      v80 = (void *)(a1 + v79);
      v81 = (const void *)(a2 + v79);
      if (v67((const void *)(a2 + v79), 1, v65))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v66 + 16))(v80, v81, v65);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v80, 0, 1, v65);
      }
      *(_BYTE *)(a1 + v85[18]) = *(_BYTE *)(a2 + v85[18]);
      v15 = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v15);
  }
  return a1;
}

char *initializeWithTake for FollowButtonPresenter.Data(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v6 = (int *)type metadata accessor for ShowOffer(0);
    v7 = v6[7];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = (int *)type metadata accessor for ArtworkModel(0);
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v13;
      v8[32] = v9[32];
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
      v8[64] = v9[64];
      *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
      v8[129] = v9[129];
      v14 = v10[11];
      v15 = &v8[v14];
      v16 = &v9[v14];
      v17 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      *(_OWORD *)&v8[v10[12]] = *(_OWORD *)&v9[v10[12]];
      v8[v10[13]] = v9[v10[13]];
      v8[v10[14]] = v9[v10[14]];
      v8[v10[15]] = v9[v10[15]];
      *(_OWORD *)&v8[v10[16]] = *(_OWORD *)&v9[v10[16]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
    *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
    a1[v6[10]] = a2[v6[10]];
    *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
    *(_OWORD *)&a1[v6[12]] = *(_OWORD *)&a2[v6[12]];
    v18 = v6[13];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    *(_OWORD *)&a1[v6[14]] = *(_OWORD *)&a2[v6[14]];
    *(_OWORD *)&a1[v6[15]] = *(_OWORD *)&a2[v6[15]];
    v25 = v6[16];
    v26 = &a1[v25];
    v27 = &a2[v25];
    if (v23(&a2[v25], 1, v21))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v27, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
    }
    v29 = v6[17];
    v30 = &a1[v29];
    v31 = &a2[v29];
    if (v23(&a2[v29], 1, v21))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v30, v31, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
    }
    a1[v6[18]] = a2[v6[18]];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FollowButtonPresenter.Data(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for FollowButtonPresenter.Data);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      v6 = (int *)type metadata accessor for ShowOffer(0);
      v7 = v6[7];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = (int *)type metadata accessor for ArtworkModel(0);
      v11 = *((_QWORD *)v10 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = *((_OWORD *)v9 + 1);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v13;
        v8[32] = v9[32];
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
        v8[64] = v9[64];
        *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
        *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
        *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
        *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
        v8[129] = v9[129];
        v14 = v10[11];
        v15 = &v8[v14];
        v16 = &v9[v14];
        v17 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        *(_OWORD *)&v8[v10[12]] = *(_OWORD *)&v9[v10[12]];
        v8[v10[13]] = v9[v10[13]];
        v8[v10[14]] = v9[v10[14]];
        v8[v10[15]] = v9[v10[15]];
        *(_OWORD *)&v8[v10[16]] = *(_OWORD *)&v9[v10[16]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
      *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
      a1[v6[10]] = a2[v6[10]];
      *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
      *(_OWORD *)&a1[v6[12]] = *(_OWORD *)&a2[v6[12]];
      v18 = v6[13];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      if (v23(v20, 1, v21))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      *(_OWORD *)&a1[v6[14]] = *(_OWORD *)&a2[v6[14]];
      *(_OWORD *)&a1[v6[15]] = *(_OWORD *)&a2[v6[15]];
      v25 = v6[16];
      v26 = &a1[v25];
      v27 = &a2[v25];
      if (v23(&a2[v25], 1, v21))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v27, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
      }
      v29 = v6[17];
      v30 = &a1[v29];
      v31 = &a2[v29];
      if (v23(&a2[v29], 1, v21))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v30, v31, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
      }
      a1[v6[18]] = a2[v6[18]];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B4D10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_2FC018;
  result = type metadata accessor for ShowOffer(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FollowButtonPresenter.State(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[24])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  if (v3 < 2)
    return 0;
  v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  result = v4 - 1;
  if (v4 <= 1)
    return 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowButtonPresenter.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

_QWORD *sub_1B4E10(_QWORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowButtonPresenter.State()
{
  return &type metadata for FollowButtonPresenter.State;
}

uint64_t sub_1B4E48()
{
  return type metadata accessor for FollowButtonPresenter.Signposter(0);
}

uint64_t sub_1B4E50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for OSSignpostID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FollowButtonPresenter.Data(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_2FC060;
      result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1B4EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  unint64_t v36;
  NSString v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  NSString v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  NSString v55;
  id v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD aBlock[5];
  uint64_t v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;

  v64 = a2;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Device(0, v5);
  *(_QWORD *)&v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PresentationSource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC(a1, (uint64_t)v12, &qword_3B62B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v17 = v4;
    v18 = sub_1459C((uint64_t)v12, &qword_3B62B8);
    v19 = static Logger.settings.getter(v18);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "Missing presentation source, skipping storage settings dialog.", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v7, v3);
  }
  else
  {
    v60 = v13;
    v61 = v14;
    v24 = *(uint64_t (**)(char *, char *, uint64_t))(v14 + 32);
    v59 = v16;
    v25 = v24(v16, v12, v13);
    v26 = static Device.current.getter(v25);
    v27 = Device.localizedModel.getter(v26);
    v58 = v27;
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v63);
    v30 = (void *)objc_opt_self(NSBundle);
    v31 = objc_msgSend(v30, "mainBundle");
    v32._countAndFlagsBits = 0xD00000000000002DLL;
    v67._object = (void *)0xE000000000000000;
    v32._object = (void *)0x8000000000312C70;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v67._countAndFlagsBits = 0;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v67);

    v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
    v35 = swift_allocObject(v63, 72, 7);
    v62 = xmmword_2EA0D0;
    *(_OWORD *)(v35 + 16) = xmmword_2EA0D0;
    *(_QWORD *)(v35 + 56) = &type metadata for String;
    v36 = sub_22F20();
    *(_QWORD *)(v35 + 64) = v36;
    *(_QWORD *)(v35 + 32) = v27;
    *(_QWORD *)(v35 + 40) = v29;
    swift_bridgeObjectRetain();
    String.init(format:_:)(v34._countAndFlagsBits, v34._object, v35);
    swift_bridgeObjectRelease();
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1B1454;
    v66 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_148954;
    aBlock[3] = &block_descriptor_19;
    v38 = _Block_copy(aBlock);
    swift_release(v66);
    v39 = (void *)objc_opt_self(UIAlertAction);
    v40 = objc_msgSend(v39, "actionWithTitle:style:handler:", v37, 0, v38);
    _Block_release(v38);

    v41 = objc_msgSend(v30, "mainBundle");
    v68._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0x435F4E4F49544341;
    v42._object = (void *)0xED00004C45434E41;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v68._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v68);

    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v45 = objc_msgSend(v39, "actionWithTitle:style:handler:", v44, 1, 0);

    v46 = 0x8000000000312CF0;
    if (v64 == 1)
      v47 = 0xD00000000000002ALL;
    else
      v47 = 0;
    if (v64 != 1)
      v46 = 0xE000000000000000;
    if (v64 == 2)
      v48 = 0xD00000000000002BLL;
    else
      v48 = v47;
    if (v64 == 2)
      v49 = (void *)0x8000000000312CC0;
    else
      v49 = (void *)v46;
    v50 = objc_msgSend(v30, "mainBundle");
    v69._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = v48;
    v51._object = v49;
    v52._countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    v69._countAndFlagsBits = 0;
    v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v69);
    swift_bridgeObjectRelease();

    v54 = swift_allocObject(v63, 72, 7);
    *(_OWORD *)(v54 + 16) = v62;
    *(_QWORD *)(v54 + 56) = &type metadata for String;
    *(_QWORD *)(v54 + 64) = v36;
    *(_QWORD *)(v54 + 32) = v58;
    *(_QWORD *)(v54 + 40) = v29;
    String.init(format:_:)(v53._countAndFlagsBits, v53._object, v54);
    swift_bridgeObjectRelease();
    v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v56 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v55, 0, 0);

    objc_msgSend(v56, "addAction:", v40);
    objc_msgSend(v56, "addAction:", v45);
    v57 = v59;
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v56, 1, 15, 1, 0, 0);

    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v57, v60);
  }
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_19(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1B5518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 25) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for PresentationSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1B55B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B62B8) - 8) + 80);
  return sub_1B13E0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + ((v3 + 25) & ~v3));
}

uint64_t MetricsData.init(fields:includingFields:excludingFields:shouldFlush:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)(0xD000000000000014, 0x800000000030DA90, a4, a1, a2, a3);
}

unint64_t static MetricsData.defaultEventTopic.getter()
{
  return 0xD000000000000014;
}

unint64_t static FetchSearchChannelLockupsIntent.kind.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1B5668(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1B5898();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B5690(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1B5898();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1B56B8(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x80000000002FC090;
}

uint64_t FetchSearchChannelLockupsIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0008);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1B5898();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for FetchSearchChannelLockupsIntent.CodingKeys, &type metadata for FetchSearchChannelLockupsIntent.CodingKeys, v10, v8, v9);
  v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A90);
  sub_16138(&qword_3B0A98, &qword_3B0A90, (void (*)(void))sub_13E9C, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1B5800(_QWORD *a1)
{
  return FetchSearchChannelLockupsIntent.encode(to:)(a1);
}

uint64_t sub_1B5814(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_126550();
  return IntentModel<>.kind.getter(a1, v2);
}

uint64_t sub_1B583C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1B5B28();
  return CustomJSValueConvertible<>.jsRepresentation(in:)(a1, a2, a3, v6);
}

unint64_t sub_1B5898()
{
  unint64_t result;

  result = qword_3C0010;
  if (!qword_3C0010)
  {
    result = swift_getWitnessTable(&unk_2FC2F0);
    atomic_store(result, (unint64_t *)&qword_3C0010);
  }
  return result;
}

unint64_t sub_1B58E0()
{
  unint64_t result;

  result = qword_3C0018;
  if (!qword_3C0018)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FetchSearchChannelLockupsIntent);
    atomic_store(result, (unint64_t *)&qword_3C0018);
  }
  return result;
}

uint64_t sub_1B5928()
{
  return sub_16138(&qword_3C0020, &qword_3B0A18, (void (*)(void))sub_1B595C, (uint64_t)&protocol conformance descriptor for <A> [A]);
}

unint64_t sub_1B595C()
{
  unint64_t result;

  result = qword_3B2E30;
  if (!qword_3B2E30)
  {
    type metadata accessor for LegacyChannelLockup(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LegacyLockup);
    atomic_store(result, (unint64_t *)&qword_3B2E30);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchChannelLockupsIntent()
{
  return &type metadata for FetchSearchChannelLockupsIntent;
}

uint64_t storeEnumTagSinglePayload for FetchSearchChannelLockupsIntent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B59F4 + 4 * byte_2FC0A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B5A14 + 4 * byte_2FC0A5[v4]))();
}

_BYTE *sub_1B59F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B5A14(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B5A1C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B5A24(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B5A2C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B5A34(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchChannelLockupsIntent.CodingKeys()
{
  return &type metadata for FetchSearchChannelLockupsIntent.CodingKeys;
}

unint64_t sub_1B5A54()
{
  unint64_t result;

  result = qword_3C0028;
  if (!qword_3C0028)
  {
    result = swift_getWitnessTable(&unk_2FC2C8);
    atomic_store(result, (unint64_t *)&qword_3C0028);
  }
  return result;
}

unint64_t sub_1B5A9C()
{
  unint64_t result;

  result = qword_3C0030;
  if (!qword_3C0030)
  {
    result = swift_getWitnessTable(&unk_2FC238);
    atomic_store(result, (unint64_t *)&qword_3C0030);
  }
  return result;
}

unint64_t sub_1B5AE4()
{
  unint64_t result;

  result = qword_3C0038;
  if (!qword_3C0038)
  {
    result = swift_getWitnessTable(&unk_2FC260);
    atomic_store(result, (unint64_t *)&qword_3C0038);
  }
  return result;
}

unint64_t sub_1B5B28()
{
  unint64_t result;

  result = qword_3C0040;
  if (!qword_3C0040)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FetchSearchChannelLockupsIntent);
    atomic_store(result, (unint64_t *)&qword_3C0040);
  }
  return result;
}

uint64_t PopToRootAction.animationBehavior.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior, v3, 0, 0);
  return *v1;
}

uint64_t PopToRootAction.animationBehavior.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*PopToRootAction.animationBehavior.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t PopToRootAction.__allocating_init(title:animationBehavior:presentationStyle:)(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  PopToRootAction.init(title:animationBehavior:presentationStyle:)(a1, a2, a3, a4);
  return v9;
}

uint64_t PopToRootAction.init(title:animationBehavior:presentationStyle:)(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v5 = v4;
  v29 = a4;
  v27 = a1;
  v28 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior) = a3;
  v18 = type metadata accessor for ImpressionMetrics(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v20 = static ActionMetrics.notInstrumented.getter(v19);
  UUID.init()(v20);
  v21 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v5 + 16) = v21;
  *(_QWORD *)(v5 + 24) = v23;
  v24 = v28;
  *(_QWORD *)(v5 + 32) = v27;
  *(_QWORD *)(v5 + 40) = v24;
  *(_BYTE *)(v5 + 48) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v14, v11);
  sub_23AB8((uint64_t)v17, v5 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v5;
}

uint64_t PopToRootAction.__allocating_init(animationBehavior:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_BYTE *)(v15 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior) = a1;
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v18 = static ActionMetrics.notInstrumented.getter(v17);
  UUID.init()(v18);
  v19 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(v15 + 16) = v19;
  *(_QWORD *)(v15 + 24) = v21;
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 40) = 0;
  *(_BYTE *)(v15 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v11, v8);
  sub_23AB8((uint64_t)v14, v15 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v15;
}

uint64_t PopToRootAction.init(animationBehavior:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionMetrics(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8ShelfKit15PopToRootAction_animationBehavior) = a1;
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v17 = static ActionMetrics.notInstrumented.getter(v16);
  UUID.init()(v17);
  v18 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(v2 + 16) = v18;
  *(_QWORD *)(v2 + 24) = v20;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v2 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v11, v8);
  sub_23AB8((uint64_t)v14, v2 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v2;
}

void PopToRootAction.init(deserializing:using:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000020, 0x800000000030E480, "ShelfKit/PopToRootAction.swift", 30, 2, 29, 0);
  __break(1u);
}

void PopToRootAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.PopToRootAction", 24, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_1B6208()
{
  return type metadata accessor for PopToRootAction(0);
}

uint64_t type metadata accessor for PopToRootAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C0070;
  if (!qword_3C0070)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PopToRootAction);
  return result;
}

uint64_t sub_1B624C(uint64_t a1)
{
  void *v2;

  v2 = &unk_2FC370;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 160);
}

uint64_t method lookup function for PopToRootAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PopToRootAction);
}

uint64_t dispatch thunk of PopToRootAction.__allocating_init(title:animationBehavior:presentationStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of PopToRootAction.__allocating_init(animationBehavior:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

id ChannelHeader.__allocating_init(title:subtitle:description:tagline:backgroundArtwork:backgroundColor:interfaceStyle:primaryArtwork:offerType:offerDescription:banner:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11, char *a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  objc_class *v18;
  id v19;
  id v20;

  v19 = objc_allocWithZone(v18);
  v20 = sub_1B7B70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  swift_release(a13);
  swift_release(a17);
  sub_C5CC4(a10, a11);
  return v20;
}

uint64_t ChannelOfferType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B63AC + 4 * byte_2FC390[a1]))(1701147238, 0xE400000000000000);
}

uint64_t sub_1B63AC()
{
  return 1684627824;
}

uint64_t sub_1B63B8()
{
  return 0x646972627968;
}

uint64_t sub_1B63CC()
{
  return 0x6269726373627573;
}

void sub_1B63E8(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B642C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B6480 + 4 * byte_2FC398[a1]))(1684627824);
}

uint64_t sub_1B6480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1684627824 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1684627824, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_1B651C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1B6560()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 1684627824, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

void sub_1B65C4()
{
  __asm { BR              X10 }
}

uint64_t sub_1B65F8(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 1684627824, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_1B6648()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1B6688()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 1684627824, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

unint64_t sub_1B66EC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8ShelfKit16ChannelOfferTypeO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B6718()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B6740 + 4 * byte_2FC3A8[*v0]))();
}

void sub_1B6740(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1684627824;
  a1[1] = v1;
}

void sub_1B6750(_QWORD *a1@<X8>)
{
  *a1 = 0x646972627968;
  a1[1] = 0xE600000000000000;
}

void sub_1B6768(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xEA00000000006465;
}

uint64_t ChannelHeader.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_title);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_title + 8));
  return v1;
}

uint64_t ChannelHeader.subtitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit13ChannelHeader_subtitle);
}

uint64_t ChannelHeader.channelDescription.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit13ChannelHeader_channelDescription);
}

uint64_t ChannelHeader.channelTagline.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit13ChannelHeader_channelTagline);
}

uint64_t ChannelHeader.shelfUniqueId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_shelfUniqueId);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_shelfUniqueId + 8));
  return v1;
}

uint64_t ChannelHeader.offerType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_offerType);
}

uint64_t ChannelHeader.offerDescription.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit13ChannelHeader_offerDescription);
}

uint64_t ChannelHeader.banner.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_banner));
}

uint64_t ChannelHeader.primaryArtwork.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_primaryArtwork));
}

uint64_t ChannelHeader.backgroundArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundArtwork, a1, &qword_3BEB70);
}

void *ChannelHeader.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundColor);
  sub_C5CB0(v1, *(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundColor + 8));
  return v1;
}

void ChannelHeader.interfaceStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_interfaceStyle);
}

uint64_t ChannelHeader.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

id ChannelHeader.init(title:subtitle:description:tagline:backgroundArtwork:backgroundColor:interfaceStyle:primaryArtwork:offerType:offerDescription:banner:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11, char *a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  id v18;

  v18 = sub_1B7B70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  swift_release(a13);
  swift_release(a17);
  sub_C5CC4(a10, a11);
  return v18;
}

_QWORD *ChannelHeader.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  Class v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t countAndFlagsBits;
  uint64_t v108;
  void *object;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  Class v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  void (*v119)(char *, uint64_t, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[5];
  uint64_t v124;
  Swift::String v125;

  v124 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  v4 = __chkstk_darwin(v3);
  v103 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v104 = (char *)&v95 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v8 = __chkstk_darwin(v7);
  v102 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v122 = (uint64_t)&v95 - v10;
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v117 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v118 = (char *)&v95 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v95 - v17;
  v19 = type metadata accessor for JSONObject(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v116 = (uint64_t)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v95 - v24;
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v95 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v95 - v29;
  v120 = a1;
  v31 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v101 = JSONObject.string.getter(v31);
  v33 = v32;
  v34 = *(void (**)(char *, uint64_t))(v20 + 8);
  v34(v30, v19);
  if (!v33)
  {
    v42 = (_QWORD *)type metadata accessor for JSONError(0);
    v43 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v42, v43, 0, 0);
    *v44 = 0x656C746974;
    v45 = v114;
    v44[1] = 0xE500000000000000;
    v44[2] = v45;
    v46 = (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD *))(*(v42 - 1) + 104))(v44, enum case for JSONError.missingProperty(_:), v42);
    swift_willThrow(v46);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v124, v11);
    v34(v120, v19);
    return v42;
  }
  v111 = v33;
  v113 = v34;
  v35 = v19;
  v36 = v120;
  JSONObject.subscript.getter(0x756F72676B636162, 0xEF726F6C6F43646ELL);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v38 = v124;
  v121 = v11;
  v37(v18, v124, v11);
  v39 = v115;
  v40 = sub_449EC((uint64_t)v28, (uint64_t)v18);
  v112 = v12;
  v119 = v37;
  if (v39)
  {
    swift_errorRelease(v39);
    v110 = 0;
    v108 = 0;
    LODWORD(v115) = 255;
  }
  else
  {
    v108 = 0;
    v110 = v40;
    LODWORD(v115) = v41;
  }
  v47 = v35;
  v48 = type metadata accessor for ArtworkModel(0);
  v49 = v36;
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000312940);
  v50 = v118;
  v119(v118, v38, v121);
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  ExpressibleByJSON.init(tryDeserializing:using:)(v25, v50, v48);
  JSONObject.subscript.getter(0x6361667265746E69, 0xEE00656C79745365);
  v51 = sub_1B7E24();
  JSONObject.stringEnum<A>(or:)(v123, sub_BE128, 0, &type metadata for HeaderModel.InterfaceStyle, v51);
  v52 = v113;
  v113(v25, v47);
  v100 = LOBYTE(v123[0]);
  v53 = JSONObject.subscript.getter(0x656C746974627573, 0xE800000000000000);
  v54 = JSONObject.string.getter(v53);
  v56 = v55;
  v52(v25, v47);
  v57 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v125._object = (void *)0xE000000000000000;
  v58._countAndFlagsBits = 0x5F4C454E4E414843;
  v58._object = (void *)0xED0000454C544954;
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  v125._countAndFlagsBits = 0;
  v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, (NSBundle)v57, v59, v125);
  countAndFlagsBits = v60._countAndFlagsBits;

  if (!v56)
    goto LABEL_10;
  v123[0] = v54;
  v123[1] = v56;
  v61 = sub_B5B74();
  swift_bridgeObjectRetain(v56);
  if ((Collection.isNotEmpty.getter(&type metadata for String, v61) & 1) == 0)
  {
    swift_bridgeObjectRelease_n(v56, 2);
LABEL_10:
    object = v60._object;
    goto LABEL_11;
  }
  type metadata accessor for EyebrowBuilder(0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8730);
  v63 = swift_allocObject(v62, 64, 7);
  *(_OWORD *)(v63 + 16) = xmmword_2EA080;
  *(_QWORD *)(v63 + 32) = countAndFlagsBits;
  *(_QWORD *)(v63 + 40) = v60._object;
  *(_QWORD *)(v63 + 48) = v54;
  *(_QWORD *)(v63 + 56) = v56;
  v123[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
  v123[4] = sub_F2DAC();
  v123[0] = v63;
  countAndFlagsBits = static EyebrowBuilder.concatenate(captionElements:uppercased:)(v123, 0);
  object = v64;
  __swift_destroy_boxed_opaque_existential_1(v123);
  swift_bridgeObjectRelease();
LABEL_11:
  v65 = JSONObject.subscript.getter(0x7470697263736564, 0xEB000000006E6F69);
  v99 = JSONObject.string.getter(v65);
  v106 = v66;
  v52(v25, v47);
  v67 = JSONObject.subscript.getter(0x656E696C676174, 0xE700000000000000);
  v98 = JSONObject.string.getter(v67);
  v105 = v68;
  v52(v25, v47);
  v69 = type metadata accessor for HeaderModel.PrimaryArtwork(0);
  v70 = v116;
  JSONObject.subscript.getter(0x417972616D697270, 0xEE006B726F777472);
  v71 = (uint64_t)v117;
  v72 = v47;
  v73 = v121;
  v74 = v119;
  v119(v117, v124, v121);
  v75 = v71;
  v42 = (_QWORD *)v69;
  v76 = v108;
  v77 = HeaderModel.PrimaryArtwork.__allocating_init(deserializing:using:)(v70, v75);
  if (v76)
  {
    sub_C5CC4(v110, v115);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v124, v73);
    v52(v49, v72);
  }
  else
  {
    v117 = (char *)v77;
    v78 = JSONObject.subscript.getter(0xD000000000000010, 0x8000000000312EA0);
    v116 = JSONObject.string.getter(v78);
    v108 = v79;
    v97 = v72;
    v52(v25, v72);
    JSONObject.subscript.getter(0x707954726566666FLL, 0xE900000000000065);
    v80 = sub_1B7E68();
    JSONObject.stringEnum<A>(or:)(v123, static ShelfCell.artworkPosition.getter, 0, &type metadata for ChannelOfferType, v80);
    v52(v25, v72);
    v96 = LOBYTE(v123[0]);
    v81 = type metadata accessor for UpsellBanner(0);
    v82 = v73;
    JSONObject.subscript.getter(0x72656E6E6162, 0xE600000000000000);
    v83 = v118;
    v84 = v124;
    v74(v118, v124, v82);
    sub_F1C0(&qword_3C01A8, (void (*)(uint64_t))type metadata accessor for UpsellBanner, (uint64_t)&protocol conformance descriptor for UpsellBanner);
    ExpressibleByJSON.init(tryDeserializing:using:)(v25, v83, v81);
    v95 = v123[0];
    v85 = type metadata accessor for ImpressionMetrics(0);
    JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
    v74(v83, v84, v82);
    v86 = (uint64_t)v104;
    ExpressibleByJSON.init(tryDeserializing:using:)(v25, v83, v85);
    v87 = v102;
    sub_267BC(v122, v102, &qword_3BEB70);
    LOBYTE(v123[0]) = v100;
    v88 = v103;
    sub_267BC(v86, v103, (uint64_t *)&unk_3B8790);
    v89 = objc_allocWithZone(v114);
    v94 = v88;
    v90 = v95;
    v91 = (uint64_t)v117;
    LOBYTE(v88) = v115;
    v92 = v110;
    v42 = sub_1B7B70(v101, v111, countAndFlagsBits, (uint64_t)object, v99, v106, v98, v105, v87, v110, v115, (char *)v123, (uint64_t)v117, v96, v116, v108, v95, v94);
    swift_release(v91);
    swift_release(v90);
    sub_C5CC4(v92, v88);
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v124, v121);
    v113(v49, v97);
    sub_1459C(v86, (uint64_t *)&unk_3B8790);
  }
  sub_1459C(v122, &qword_3BEB70);
  return v42;
}

uint64_t ChannelHeader.preferredBackgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundArtwork, (uint64_t)v3, &qword_3BEB70);
  v4 = type metadata accessor for ArtworkModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) == 1)
  {
    sub_1459C((uint64_t)v3, &qword_3BEB70);
  }
  else
  {
    v5 = (void *)*((_QWORD *)v3 + 7);
    v6 = v3[64];
    sub_C5CB0(v5, v3[64]);
    sub_3E4A4((uint64_t)v3);
    if ((_DWORD)v6 != 255)
    {
      v7 = Color.color.getter(v5, v6);
      sub_C5CC4(v5, v6);
      return v7;
    }
  }
  v8 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundColor + 8);
  if ((_DWORD)v8 == 255)
    return 0;
  else
    return Color.color.getter(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundColor), v8);
}

BOOL ChannelHeader.hasBackgroundArtwork.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundArtwork, (uint64_t)v3, &qword_3BEB70);
  v4 = type metadata accessor for ArtworkModel(0);
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1;
  sub_1459C((uint64_t)v3, &qword_3BEB70);
  return v5;
}

_QWORD *ChannelHeader.impressionableActions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[48];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C01B0);
  inited = swift_initStackObject(v1, v17);
  v3 = inited;
  *(_OWORD *)(inited + 16) = xmmword_2EA080;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_banner);
  if (v4)
  {
    *(_QWORD *)(inited + 32) = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_action);
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_subtitleAction);
    swift_retain();
    inited = swift_retain();
  }
  else
  {
    v5 = 0;
    *(_QWORD *)(inited + 32) = 0;
  }
  *(_QWORD *)(v3 + 40) = v5;
  specialized Array._endMutation()(inited);
  v6 = *(_QWORD *)(v3 + 32);
  if (v6)
  {
    v7 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v9 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v8 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v9 >= v8 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
    v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
    specialized Array._endMutation()(v10);
  }
  v11 = *(_QWORD *)(v3 + 40);
  if (v11)
  {
    v12 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v13 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
    specialized Array._endMutation()(v15);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t ChannelHeader.buttonCaptionLabelText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_banner);
  if (!v1)
    goto LABEL_6;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_subtitleAction))
  {
    v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_subtitle);
LABEL_7:
    v12 = *v2;
    swift_bridgeObjectRetain();
    return v12;
  }
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_appName + 8);
  if (!v3)
  {
LABEL_6:
    v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_offerDescription);
    goto LABEL_7;
  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_appName);
  v5 = (void *)objc_opt_self(NSBundle);
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(v5, "mainBundle");
  v14._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000312EC0;
  v7._countAndFlagsBits = 0xD000000000000026;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14);

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  *(_QWORD *)(v11 + 64) = sub_22F20();
  *(_QWORD *)(v11 + 32) = v4;
  *(_QWORD *)(v11 + 40) = v3;
  v12 = String.init(format:_:)(v9._countAndFlagsBits, v9._object, v11);
  swift_release(v1);
  swift_bridgeObjectRelease();
  return v12;
}

void ChannelHeader.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.ChannelHeader", 22, "init()", 6, 0);
  __break(1u);
}

_QWORD *sub_1B7A40@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;

  result = ChannelHeader.__allocating_init(deserializing:using:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1B7A68()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_primaryArtwork));
}

uint64_t sub_1B7A7C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundArtwork, a1, &qword_3BEB70);
}

uint64_t sub_1B7AAC()
{
  return ChannelHeader.preferredBackgroundColor.getter();
}

void sub_1B7ACC(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_interfaceStyle);
}

uint64_t sub_1B7AE4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_shelfUniqueId);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

_QWORD *sub_1B7B20()
{
  return ChannelHeader.impressionableActions.getter();
}

uint64_t sub_1B7B40@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit13ChannelHeader_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

id sub_1B7B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, unsigned __int8 a11, char *a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v19;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  void *v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  objc_class *ObjectType;
  objc_super v65;

  v19 = v18;
  v55 = a7;
  v56 = a8;
  v52 = a5;
  v53 = a6;
  v50 = a3;
  v51 = a4;
  v62 = a17;
  v63 = a18;
  v60 = a15;
  v61 = a16;
  v58 = a11;
  v59 = a14;
  v57 = a10;
  v54 = a9;
  ObjectType = (objc_class *)swift_getObjectType();
  v22 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a12;
  v27 = v19;
  UUID.init()(v27);
  v28 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v31 = (uint64_t *)&v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_shelfUniqueId];
  *v31 = v28;
  v31[1] = v30;
  v32 = &v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_title];
  *v32 = a1;
  v32[1] = a2;
  v33 = &v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_subtitle];
  v34 = v51;
  *v33 = v50;
  v33[1] = v34;
  v35 = &v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_channelDescription];
  v36 = v53;
  v37 = v54;
  *v35 = v52;
  v35[1] = v36;
  v38 = &v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_channelTagline];
  v39 = v56;
  *v38 = v55;
  v38[1] = v39;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_primaryArtwork] = a13;
  sub_267BC(v37, (uint64_t)&v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundArtwork], &qword_3BEB70);
  v40 = &v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_backgroundColor];
  v41 = v57;
  *(_QWORD *)v40 = v57;
  LOBYTE(v28) = v58;
  v42 = v59;
  v40[8] = v58;
  v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_interfaceStyle] = v26;
  v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_offerType] = v42;
  v43 = &v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_offerDescription];
  v44 = v61;
  v45 = v62;
  *v43 = v60;
  v43[1] = v44;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_banner] = v45;
  v46 = v63;
  sub_267BC(v63, (uint64_t)&v27[OBJC_IVAR____TtC8ShelfKit13ChannelHeader_impressionMetrics], (uint64_t *)&unk_3B8790);
  swift_retain(a13);
  sub_C5CB0(v41, v28);
  swift_retain(v45);

  v65.receiver = v27;
  v65.super_class = ObjectType;
  v47 = objc_msgSendSuper2(&v65, "init");
  sub_1459C(v46, (uint64_t *)&unk_3B8790);
  sub_1459C(v37, &qword_3BEB70);
  return v47;
}

unint64_t _s8ShelfKit16ChannelOfferTypeO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374A38, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1B7E24()
{
  unint64_t result;

  result = qword_3C0198;
  if (!qword_3C0198)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HeaderModel.InterfaceStyle);
    atomic_store(result, (unint64_t *)&qword_3C0198);
  }
  return result;
}

unint64_t sub_1B7E68()
{
  unint64_t result;

  result = qword_3C01A0;
  if (!qword_3C01A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChannelOfferType);
    atomic_store(result, (unint64_t *)&qword_3C01A0);
  }
  return result;
}

unint64_t sub_1B7EB0()
{
  unint64_t result;

  result = qword_3C01B8;
  if (!qword_3C01B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChannelOfferType);
    atomic_store(result, (unint64_t *)&qword_3C01B8);
  }
  return result;
}

uint64_t sub_1B7EF4(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C01C0, (void (*)(uint64_t))type metadata accessor for ChannelHeader, (uint64_t)&protocol conformance descriptor for ChannelHeader);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ChannelHeader(uint64_t a1)
{
  uint64_t result;

  result = qword_3C01F0;
  if (!qword_3C01F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChannelHeader);
  return result;
}

uint64_t storeEnumTagSinglePayload for ChannelOfferType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B7FB8 + 4 * byte_2FC3B1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B7FEC + 4 * byte_2FC3AC[v4]))();
}

uint64_t sub_1B7FEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7FF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B7FFCLL);
  return result;
}

uint64_t sub_1B8008(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8010);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8014(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B801C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelOfferType()
{
  return &type metadata for ChannelOfferType;
}

uint64_t sub_1B8038()
{
  return type metadata accessor for ChannelHeader(0);
}

void sub_1B8040(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];

  v6[0] = &unk_2FC520;
  v6[1] = &unk_2FC538;
  v6[2] = &unk_2FC538;
  v6[3] = &unk_2FC538;
  v6[4] = &unk_2FC520;
  v6[5] = &unk_2FC550;
  v6[6] = &unk_2FC538;
  v6[7] = &unk_2FC568;
  v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v3 <= 0x3F)
  {
    v6[9] = *(_QWORD *)(v2 - 8) + 64;
    v6[10] = &unk_2FC580;
    v6[11] = &unk_2FC598;
    sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v5 <= 0x3F)
    {
      v6[12] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 13, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for ChannelHeader(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ChannelHeader);
}

uint64_t dispatch thunk of ChannelHeader.__allocating_init(title:subtitle:description:tagline:backgroundArtwork:backgroundColor:interfaceStyle:primaryArtwork:offerType:offerDescription:banner:impressionMetrics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

unint64_t static FetchShowLatestCatalogEpisodesIntent.kind.getter()
{
  return 0xD000000000000024;
}

uint64_t FetchShowLatestCatalogEpisodesIntent.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FetchShowLatestCatalogEpisodesIntent.init(adamID:limit:extendedTypes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void sub_1B81C0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000024;
  a1[1] = 0x80000000002FC590;
}

uint64_t initializeBufferWithCopyOfBuffer for FetchShowLatestCatalogEpisodesIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for FetchShowLatestCatalogEpisodesIntent(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *assignWithCopy for FetchShowLatestCatalogEpisodesIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for FetchShowLatestCatalogEpisodesIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchShowLatestCatalogEpisodesIntent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchShowLatestCatalogEpisodesIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchShowLatestCatalogEpisodesIntent()
{
  return &type metadata for FetchShowLatestCatalogEpisodesIntent;
}

unint64_t static HighlightResourceIntent.kind.getter()
{
  return 0xD000000000000017;
}

uint64_t HighlightResourceIntent.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t HighlightResourceIntent.pageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for HighlightResourceIntent(0) + 20);
  return sub_282CC(v3, a1);
}

uint64_t type metadata accessor for HighlightResourceIntent(uint64_t a1)
{
  uint64_t result;

  result = qword_3C0288;
  if (!qword_3C0288)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HighlightResourceIntent);
  return result;
}

uint64_t HighlightResourceIntent.resourceRequests.getter()
{
  type metadata accessor for HighlightResourceIntent(0);
  return swift_bridgeObjectRetain();
}

uint64_t HighlightResourceIntent.init(adamID:resourceRequests:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = 0;
  v5 = type metadata accessor for HighlightResourceIntent(0);
  v6 = a3 + *(int *)(v5 + 20);
  v7 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(a3 + *(int *)(v5 + 24)) = a2;
  return result;
}

uint64_t HighlightResourceIntent.init(pageURL:resourceRequests:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  v6 = type metadata accessor for HighlightResourceIntent(0);
  v7 = a3 + *(int *)(v6 + 20);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a1, v8);
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  *(_QWORD *)(a3 + *(int *)(v6 + 24)) = a2;
  return result;
}

void sub_1B8500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  int64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  unint64_t v66;

  v4 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v61 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C02E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v55 - v13);
  if (a1 == a2)
  {
    v64 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v64 = 0;
    return;
  }
  v63 = 0;
  v59 = a1;
  v60 = a2;
  v17 = *(_QWORD *)(a1 + 64);
  v16 = a1 + 64;
  v15 = v17;
  v18 = 1 << *(_BYTE *)(v16 - 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v57 = v16;
  v58 = (unint64_t)(v18 + 63) >> 6;
  v56 = v58 - 1;
  v21 = (uint64_t *)&unk_3C02F0;
  v65 = v4;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v23 = (v20 - 1) & v20;
      v24 = v62;
      v25 = v22 | (v63 << 6);
LABEL_8:
      v26 = *(_QWORD *)(v59 + 56);
      v27 = (_QWORD *)(*(_QWORD *)(v59 + 48) + 16 * v25);
      v28 = v27[1];
      *(_QWORD *)v11 = *v27;
      *((_QWORD *)v11 + 1) = v28;
      v29 = v26 + *(_QWORD *)(v24 + 72) * v25;
      v30 = __swift_instantiateConcreteTypeFromMangledName(v21);
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(&v11[*(int *)(v30 + 48)], v29, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 0, 1, v30);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v31 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    v24 = v62;
    if (v31 < v58)
    {
      v32 = *(_QWORD *)(v57 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v63 + 2;
      ++v63;
      if (v31 + 1 < v58)
      {
        v32 = *(_QWORD *)(v57 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v63 = v31 + 1;
        if (v31 + 2 < v58)
        {
          v32 = *(_QWORD *)(v57 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v63 = v31 + 2;
          if (v31 + 3 < v58)
          {
            v32 = *(_QWORD *)(v57 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            v33 = v31 + 4;
            v63 = v31 + 3;
            if (v31 + 4 < v58)
              break;
          }
        }
      }
    }
LABEL_29:
    v34 = __swift_instantiateConcreteTypeFromMangledName(v21);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v11, 1, 1, v34);
    v23 = 0;
LABEL_30:
    sub_1B9CB8((uint64_t)v11, (uint64_t)v14);
    v35 = __swift_instantiateConcreteTypeFromMangledName(v21);
    v36 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v14, 1, v35);
    v64 = v36 == 1;
    if (v36 == 1)
      return;
    v66 = v23;
    v37 = v21;
    v38 = v11;
    v39 = (char *)v14 + *(int *)(v35 + 48);
    v40 = *v14;
    v41 = v14[1];
    v42 = v14;
    v43 = v65;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v8, v39, v65);
    v44 = v40;
    v45 = v60;
    v46 = v8;
    v47 = sub_29724(v44, v41);
    v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v46, v43);
      goto LABEL_36;
    }
    v50 = *(_QWORD *)(v45 + 56) + *(_QWORD *)(v24 + 72) * v47;
    v51 = v61;
    (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v61, v50, v43);
    v52 = sub_F1C0((unint64_t *)&qword_3B0B08, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v53 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v46, v43, v52);
    v54 = *(void (**)(char *, uint64_t))(v24 + 8);
    v54(v51, v43);
    v54(v46, v43);
    v8 = v46;
    v11 = v38;
    v14 = v42;
    v21 = v37;
    v20 = v66;
    if ((v53 & 1) == 0)
      return;
  }
  v32 = *(_QWORD *)(v57 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v23 = (v32 - 1) & v32;
    v25 = __clz(__rbit64(v32)) + (v31 << 6);
    v63 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v58)
    {
      v63 = v56;
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(v57 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
}

void sub_1B8968(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000000002FC630;
}

uint64_t sub_1B8988(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E0D18(*a1, *a2);
}

Swift::Int sub_1B8994()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x6C725565676170;
  if (v1 != 1)
  {
    v3 = 0xD000000000000010;
    v2 = 0x80000000003098C0;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64496D616461;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1B8A34(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x6C725565676170;
  if (*v1 != 1)
  {
    v3 = 0xD000000000000010;
    v2 = 0x80000000003098C0;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64496D616461;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1B8AB0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x6C725565676170;
  if (v1 != 1)
  {
    v3 = 0xD000000000000010;
    v2 = 0x80000000003098C0;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64496D616461;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1B8B4C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1B9C70(*a1);
  *a2 = result;
  return result;
}

void sub_1B8B78(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x6C725565676170;
  if (v2 != 1)
  {
    v5 = 0xD000000000000010;
    v4 = 0x80000000003098C0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64496D616461;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B8BD8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6C725565676170;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x64496D616461;
}

unint64_t sub_1B8C34@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1B9C70(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B8C58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1B9228();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B8C80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1B9228();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HighlightResourceIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0200);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_1B9228();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for HighlightResourceIntent.CodingKeys, &type metadata for HighlightResourceIntent.CodingKeys, v11, v9, v10);
  v12 = *((_BYTE *)v3 + 8);
  v21 = *v3;
  v22 = v12;
  v20 = 0;
  v13 = sub_13E9C();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v21, &v20, v5, &type metadata for AdamID, v13);
  if (!v2)
  {
    v14 = type metadata accessor for HighlightResourceIntent(0);
    v15 = (uint64_t)v3 + *(int *)(v14 + 20);
    LOBYTE(v21) = 1;
    v16 = type metadata accessor for URL(0);
    v17 = sub_F1C0(&qword_3B52C8, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v15, &v21, v5, v16, v17);
    v21 = *(uint64_t *)((char *)v3 + *(int *)(v14 + 24));
    v20 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3C0210);
    sub_1B926C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1B8E70(_QWORD *a1)
{
  return HighlightResourceIntent.encode(to:)(a1);
}

uint64_t sub_1B8E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_F1C0(&qword_3C02E0, (void (*)(uint64_t))type metadata accessor for HighlightResourceIntent, (uint64_t)&protocol conformance descriptor for HighlightResourceIntent);
  return CustomJSValueConvertible<>.jsRepresentation(in:)(a1, a2, a3, v6);
}

uint64_t _s8ShelfKit23HighlightResourceIntentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char v27;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B6F88);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - v18;
  v20 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_13;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v20 = 1;
    if ((v20 & 1) != 0)
      goto LABEL_13;
  }
  v21 = type metadata accessor for HighlightResourceIntent(0);
  v22 = a1;
  v23 = v21;
  v24 = *(int *)(v21 + 20);
  v33 = v22;
  sub_282CC(v22 + v24, (uint64_t)v19);
  v34 = v23;
  v35 = a2;
  sub_282CC(a2 + *(int *)(v23 + 20), (uint64_t)v16);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_282CC((uint64_t)v19, (uint64_t)v10);
  sub_282CC((uint64_t)v16, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v10, 1, v4) == 1)
  {
    sub_1459C((uint64_t)v16, &qword_3B4370);
    sub_1459C((uint64_t)v19, &qword_3B4370);
    if (v26(v25, 1, v4) == 1)
    {
      sub_1459C((uint64_t)v10, &qword_3B4370);
LABEL_16:
      sub_1B8500(*(_QWORD *)(v33 + *(int *)(v34 + 24)), *(_QWORD *)(v35 + *(int *)(v34 + 24)));
      return v27 & 1;
    }
    goto LABEL_12;
  }
  sub_282CC((uint64_t)v10, (uint64_t)v13);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1459C((uint64_t)v16, &qword_3B4370);
    sub_1459C((uint64_t)v19, &qword_3B4370);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_12:
    sub_1459C((uint64_t)v10, &qword_3B6F88);
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v25, v4);
  v29 = sub_F1C0((unint64_t *)&qword_3B0B08, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v30 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v29);
  v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v7, v4);
  sub_1459C((uint64_t)v16, &qword_3B4370);
  sub_1459C((uint64_t)v19, &qword_3B4370);
  v31(v13, v4);
  sub_1459C((uint64_t)v10, &qword_3B4370);
  if ((v30 & 1) != 0)
    goto LABEL_16;
LABEL_13:
  v27 = 0;
  return v27 & 1;
}

unint64_t sub_1B9228()
{
  unint64_t result;

  result = qword_3C0208;
  if (!qword_3C0208)
  {
    result = swift_getWitnessTable(&unk_2FC8AC);
    atomic_store(result, (unint64_t *)&qword_3C0208);
  }
  return result;
}

unint64_t sub_1B926C()
{
  unint64_t result;

  result = qword_3C0218;
  if (!qword_3C0218)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C0210);
    sub_F1C0(&qword_3B52C8, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B]);
    atomic_store(result, (unint64_t *)&qword_3C0218);
  }
  return result;
}

uint64_t sub_1B92F0()
{
  return sub_F1C0(&qword_3C0220, (void (*)(uint64_t))type metadata accessor for HighlightResourceIntent, (uint64_t)&protocol conformance descriptor for HighlightResourceIntent);
}

uint64_t sub_1B931C()
{
  return sub_F1C0(&qword_3BB4A0, (void (*)(uint64_t))type metadata accessor for HighlightResourceIntent, (uint64_t)&protocol conformance descriptor for HighlightResourceIntent);
}

uint64_t sub_1B9348()
{
  return sub_F1C0(&qword_3C0228, (void (*)(uint64_t))type metadata accessor for HighlightResource, (uint64_t)&protocol conformance descriptor for HighlightResource);
}

_QWORD *initializeBufferWithCopyOfBuffer for HighlightResourceIntent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HighlightResourceIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t initializeWithCopy for HighlightResourceIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HighlightResourceIntent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HighlightResourceIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for HighlightResourceIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightResourceIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B993C);
}

uint64_t sub_1B993C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for HighlightResourceIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B99CC);
}

uint64_t sub_1B99CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1B9A4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_2FC798;
  sub_28C74(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for HighlightResourceIntent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B9B18 + 4 * byte_2FC645[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B9B4C + 4 * byte_2FC640[v4]))();
}

uint64_t sub_1B9B4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B9B54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B9B5CLL);
  return result;
}

uint64_t sub_1B9B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B9B70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B9B74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B9B7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HighlightResourceIntent.CodingKeys()
{
  return &type metadata for HighlightResourceIntent.CodingKeys;
}

unint64_t sub_1B9B9C()
{
  unint64_t result;

  result = qword_3C02C8;
  if (!qword_3C02C8)
  {
    result = swift_getWitnessTable(&unk_2FC884);
    atomic_store(result, (unint64_t *)&qword_3C02C8);
  }
  return result;
}

unint64_t sub_1B9BE4()
{
  unint64_t result;

  result = qword_3C02D0;
  if (!qword_3C02D0)
  {
    result = swift_getWitnessTable(&unk_2FC7BC);
    atomic_store(result, (unint64_t *)&qword_3C02D0);
  }
  return result;
}

unint64_t sub_1B9C2C()
{
  unint64_t result;

  result = qword_3C02D8;
  if (!qword_3C02D8)
  {
    result = swift_getWitnessTable(&unk_2FC7E4);
    atomic_store(result, (unint64_t *)&qword_3C02D8);
  }
  return result;
}

unint64_t sub_1B9C70(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374AB8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1B9CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C02E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Promise<A>.observerPublisher(receiveOn:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t WitnessTable;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;

  v49 = a2;
  v51 = a1;
  v4 = *v2;
  v5 = type metadata accessor for ObserverQueue(0);
  v50 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(v5);
  v47 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v4 + class metadata base offset for Promise);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a2, v7);
  v9 = type metadata accessor for AnyPublisher(255, AssociatedTypeWitness, &type metadata for Never, &protocol witness table for Never);
  v48 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3B2B08);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>);
  v52 = v9;
  v53 = v10;
  v54 = WitnessTable;
  v55 = &protocol self-conformance witness table for Error;
  v11 = type metadata accessor for Publishers.SetFailureType(255, &v52);
  v12 = v7;
  v39 = v7;
  v13 = type metadata accessor for Future(255, v7, v10, &protocol self-conformance witness table for Error);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.SetFailureType<A, B>);
  v40 = swift_getWitnessTable(&protocol conformance descriptor for Future<A, B>);
  v52 = v11;
  v53 = v13;
  v54 = v14;
  v55 = (void *)v40;
  v15 = type metadata accessor for Publishers.FlatMap(0, &v52);
  v44 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  v18 = type metadata accessor for AnyPublisher(255, AssociatedTypeWitness, v10, &protocol self-conformance witness table for Error);
  v43 = v18;
  v19 = type metadata accessor for Just(255, AssociatedTypeWitness);
  v20 = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>);
  v42 = v20;
  v41 = swift_getWitnessTable(&protocol conformance descriptor for Just<A>);
  v52 = v18;
  v53 = v19;
  v54 = v20;
  v55 = (void *)v41;
  v21 = type metadata accessor for Publishers.Catch(0, &v52);
  v45 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v38 - v22;
  v52 = Promise.publisher.getter(v24);
  v25 = v47;
  sub_1BA7D0(v51, v47);
  v26 = *(unsigned __int8 *)(v50 + 80);
  v27 = (v26 + 32) & ~v26;
  v28 = swift_allocObject(&unk_387320, v27 + v6, v26 | 7);
  *(_QWORD *)(v28 + 16) = v12;
  v29 = v49;
  *(_QWORD *)(v28 + 24) = v49;
  v30 = sub_1BA8C4(v25, v28 + v27);
  v31 = static Subscribers.Demand.unlimited.getter(v30);
  Publisher.flatMap<A>(maxPublishers:_:)(v31, sub_1BA908, v28, v13, v48, v40, WitnessTable);
  swift_release(v28);
  swift_release(v52);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v33 = Publisher.bufferedMulticast()(v15, v32);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v15);
  v52 = v33;
  v34 = swift_allocObject(&unk_387348, 32, 7);
  *(_QWORD *)(v34 + 16) = v39;
  *(_QWORD *)(v34 + 24) = v29;
  Publisher.catch<A>(_:)(sub_1BAA48, v34, v43, v19, v42, v41);
  swift_release(v34);
  swift_release(v52);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Catch<A, B>);
  v36 = Publisher.eraseToAnyPublisher()(v21, v35);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v21);
  return v36;
}

uint64_t type metadata accessor for ObserverQueue(uint64_t a1)
{
  uint64_t result;

  result = qword_3C03A0;
  if (!qword_3C03A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ObserverQueue);
  return result;
}

uint64_t Observer.eraseToAnyObserver()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a2, a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for Observer, &associated conformance descriptor for Observer.Observer.Value: ObserverValue);
  v8 = type metadata accessor for AnyObserver(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  v13 = a1;
  v14 = a2;
  v9 = __swift_allocate_boxed_opaque_existential_2Tm(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v9, v2, a1);
  v10 = swift_allocObject(v8, 56, 7);
  sub_F4D8(&v12, v10 + 16);
  return v10;
}

uint64_t sub_1BA1B0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 56, 7);
  sub_F4D8(a1, v3 + 16);
  return v3;
}

void sub_1BA1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD v9[6];

  v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9[3] = *(_QWORD *)(v1 - 8);
  v9[4] = v1;
  __chkstk_darwin(v1);
  v2 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for DispatchQoS(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for ObserverQueue(0);
  __chkstk_darwin(v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7D0(v0, (uint64_t)v7);
  v8 = (char *)sub_1BA344 + 4 * byte_2FC900[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

uint64_t sub_1BA344()
{
  sub_676C8();
  return static OS_dispatch_queue.main.getter();
}

uint64_t Observer.publisher(receiveOn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  unint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v48[4];

  v45 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v5);
  v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3, a2);
  v8 = type metadata accessor for AnyPublisher(255, AssociatedTypeWitness, &type metadata for Never, &protocol witness table for Never);
  v9 = sub_676C8();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>);
  v11 = sub_F1C0((unint64_t *)&qword_3B2B60, (void (*)(uint64_t))sub_676C8, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v48[0] = v8;
  v48[1] = v9;
  v41 = v9;
  v46 = WitnessTable;
  v48[2] = WitnessTable;
  v48[3] = v11;
  v38 = v11;
  v42 = type metadata accessor for Publishers.ReceiveOn(0, v48);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v39 = (char *)&v38 - v12;
  v13 = type metadata accessor for ObserverQueue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ObserverProducer(0, a2, a3, v20);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v38 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v19, v44, a2, v23);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v19, a2);
  v26 = swift_getWitnessTable(&unk_2FCAB0);
  v27 = Publisher.bufferedMulticast()(v21, v26);
  v28 = v25;
  v29 = v45;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
  sub_1BA7D0(v29, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload(v15, v13) == 3)
  {
    v48[0] = v27;
    v30 = Publisher.eraseToAnyPublisher()(v8, v46);
    swift_release(v27);
  }
  else
  {
    sub_750E4((uint64_t)v15);
    v48[0] = v27;
    sub_1BA1F0();
    v47 = v31;
    v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v33 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v43, 1, 1, v32);
    v34 = v39;
    Publisher.receive<A>(on:options:)(&v47, v33, v8, v41, v46, v38);
    sub_CD6CC(v33);

    v35 = v42;
    v36 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v30 = Publisher.eraseToAnyPublisher()(v35, v36);
    swift_release(v27);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v35);
  }
  return v30;
}

uint64_t sub_1BA7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObserverQueue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int EnumCaseMultiPayload;
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for ObserverQueue(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (id *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    v8 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
    v9 = type metadata accessor for DispatchQoS(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1BA8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObserverQueue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ObserverQueue(0) - 8) + 80);
  result = Observer.publisher(receiveOn:)(v1 + ((v5 + 32) & ~v5), v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_1BA96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v10 - v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for Observer, &associated conformance descriptor for Observer.Observer.Value: ObserverValue);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return Just.init(_:)(v7, AssociatedTypeWitness);
}

uint64_t sub_1BAA38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1BAA48(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA96C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for AnyObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyObserver);
}

uint64_t type metadata accessor for ObserverProducer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObserverProducer);
}

uint64_t sub_1BAA68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_150C8(v3, a1);
}

uint64_t sub_1BAAB0(__int128 *a1)
{
  uint64_t v1;

  sub_F4D8(a1, v1 + 16);
  return v1;
}

uint64_t sub_1BAACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = v0 + 16;
  swift_beginAccess(v1, v8, 0, 0);
  sub_150C8(v1, (uint64_t)v5);
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  return __swift_destroy_boxed_opaque_existential_1(v5);
}

uint64_t sub_1BAB4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  __int128 v9;

  v9 = *(_OWORD *)(a2 + a1 - 16);
  result = sub_1BAC94();
  if (result)
  {
    v6 = result;
    v7 = v5;
    result = swift_allocObject(&unk_387520, 48, 7);
    *(_OWORD *)(result + 16) = v9;
    *(_QWORD *)(result + 32) = v6;
    *(_QWORD *)(result + 40) = v7;
    v8 = sub_1BBB70;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1BABCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = a4 + a3;
    v7 = swift_allocObject(&unk_3874F8, 48, 7);
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_1BBB70;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_76C34(v4, v5);
  sub_1BAFD0((uint64_t)v8, v7);
  return sub_327A0((uint64_t)v8, v7);
}

uint64_t sub_1BAC60(uint64_t a1, uint64_t a2)
{
  sub_1BAFD0(a1, a2);
  return sub_327A0(a1, a2);
}

uint64_t sub_1BAC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  swift_beginAccess(v0 + 16, v8, 0, 0);
  sub_150C8(v0 + 16, (uint64_t)v5);
  v1 = v6;
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v5);
  return v3;
}

uint64_t (*sub_1BAD1C(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1BAC94();
  a1[1] = v3;
  return sub_1BAD50;
}

uint64_t sub_1BAD50(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_76C34(v4, v3);
    sub_1BAFD0(v2, v3);
    sub_327A0(v2, v3);
  }
  else
  {
    sub_1BAFD0(v4, v3);
  }
  return sub_327A0(v2, v3);
}

uint64_t LibraryRemovalController.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return v0;
}

uint64_t LibraryRemovalController.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t sub_1BADF4()
{
  return sub_1BAACC();
}

uint64_t sub_1BAE14()
{
  return sub_1BAC94();
}

uint64_t sub_1BAE34(uint64_t a1, uint64_t a2)
{
  return sub_1BAC60(a1, a2);
}

void (*sub_1BAE54(uint64_t **a1))(_QWORD *a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1BAD1C(v2);
  return sub_DB98;
}

uint64_t sub_1BAE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1BAEB8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(a6 + 16);
  v11 = *(_QWORD *)(a6 + 24);
  swift_retain();
  sub_1BBA60(a1, a2, a3, v10, v11);
  return swift_release(a5);
}

void sub_1BAF18()
{
  FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init()();
}

uint64_t sub_1BAF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2FCA68);
  return PFProducer.receive<A>(subscriber:)(a1, a4, a2, WitnessTable, a3);
}

uint64_t sub_1BAF84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = static Array.observerErrorValue.getter(*(_QWORD *)(a1 + 16));
  *a2 = result;
  return result;
}

uint64_t static Optional.observerErrorValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t sub_1BAFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Optional.observerErrorValue.getter(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_1BAFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v9[24];

  swift_beginAccess(v2 + 16, v9, 33, 0);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  __swift_mutable_project_boxed_opaque_existential_1(v2 + 16, v5);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40);
  sub_76C34(a1, a2);
  v7(a1, a2, v5, v6);
  return swift_endAccess(v9);
}

uint64_t sub_1BB068()
{
  return 16;
}

__n128 sub_1BB074(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

char *initializeBufferWithCopyOfBuffer for ObserverQueue(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *a2;
      *(_QWORD *)a1 = *a2;
      v16 = v15;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v9;
      swift_bridgeObjectRetain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
      v11 = &a1[v10];
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for DispatchQoS(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void destroy for ObserverQueue(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  char *v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
    v5 = type metadata accessor for DispatchQoS(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
}

void **initializeWithCopy for ObserverQueue(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = v12;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for DispatchQoS(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void **assignWithCopy for ObserverQueue(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;

  if (a1 != a2)
  {
    sub_750E4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for DispatchQoS(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

_OWORD *initializeWithTake for ObserverQueue(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for DispatchQoS(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_OWORD *assignWithTake for ObserverQueue(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_750E4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B4D68) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for DispatchQoS(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1BB518(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for DispatchQoS(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, &unk_2FC998, *(_QWORD *)(result - 8) + 64);
    v5[0] = v4;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t sub_1BB59C(uint64_t a1)
{
  const char *v2;

  v2 = "(";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 96);
}

uint64_t method lookup function for AnyObserver(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AnyObserver);
}

uint64_t dispatch thunk of NetworkObserver.delegateScheduler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1BB5F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1BB660(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_1BB6D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1BB6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1BB710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1BB740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1BB770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1BB7A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB850 + 4 * byte_2FC904[(v7 - 1)]))();
}

void sub_1BB8A0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_4;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &dword_0 + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BBA50()
{
  return swift_getWitnessTable(&unk_2FCAB0);
}

uint64_t sub_1BBA60(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(void (*)(_QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a5, a4);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(void (*)(_QWORD), uint64_t, uint64_t, uint64_t))(a5 + 40);
  swift_retain(a3);
  v13((void (*)(_QWORD))a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  a2(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
}

uint64_t sub_1BBB4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1BBB70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

unint64_t sub_1BBB90()
{
  unint64_t result;

  result = qword_3B20C8;
  if (!qword_3B20C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3B20C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A]);
    atomic_store(result, (unint64_t *)&qword_3B20C8);
  }
  return result;
}

uint64_t TranscriptSnippet.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptSnippet(0);
  return sub_267BC(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_3B8790);
}

uint64_t type metadata accessor for TranscriptSnippet(uint64_t a1)
{
  uint64_t result;

  result = qword_3C0550;
  if (!qword_3C0550)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TranscriptSnippet);
  return result;
}

uint64_t TranscriptSnippet.init(id:text:clickAction:impressionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = a4;
  v10 = a3;
  *a7 = a1;
  a7[1] = a2;
  v12 = sub_1BC600(a3, a4);
  if (v12[2])
  {
    v10 = sub_1BC998(v12);
    v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  a7[2] = v10;
  a7[3] = v9;
  sub_15BD4(a5, (uint64_t)(a7 + 4), &qword_3B0C50);
  v15 = type metadata accessor for TranscriptSnippet(0);
  return sub_15BD4(a6, (uint64_t)a7 + *(int *)(v15 + 28), (uint64_t *)&unk_3B8790);
}

uint64_t TranscriptSnippet.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  v66 = a2;
  v62 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v4);
  v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for JSONObject(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - v17;
  v19 = JSONObject.subscript.getter(25705, 0xE200000000000000);
  v20 = JSONObject.string.getter(v19);
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v18, v6);
  if (!v22)
  {
    v36 = type metadata accessor for JSONError(0);
    v37 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v36, v37, 0, 0);
    v39 = v38;
    v40 = type metadata accessor for TranscriptSnippet(0);
    *v39 = 25705;
    v41 = 0xE200000000000000;
LABEL_7:
    v39[1] = v41;
    v39[2] = v40;
    v44 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v39, enum case for JSONError.missingProperty(_:), v36);
    swift_willThrow(v44);
LABEL_12:
    v46 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v66, v46);
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(a1, v6);
  }
  v58 = v20;
  v24 = JSONObject.subscript.getter(1954047348, 0xE400000000000000);
  v59 = JSONObject.string.getter(v24);
  v26 = v25;
  v23(v15, v6);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    v36 = type metadata accessor for JSONError(0);
    v42 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v36, v42, 0, 0);
    v39 = v43;
    v40 = type metadata accessor for TranscriptSnippet(0);
    *v39 = 1954047348;
    v41 = 0xE400000000000000;
    goto LABEL_7;
  }
  JSONObject.subscript.getter(0x7463416B63696C63, 0xEB000000006E6F69);
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v12, v66);
  v23(v12, v6);
  v60 = a1;
  v28 = JSONObject.subscript.getter(0xD000000000000017, 0x8000000000312FB0);
  v29 = JSONObject.BOOL.getter(v28);
  v23(v9, v6);
  if (v29 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = type metadata accessor for JSONError(0);
    v31 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v30, v31, 0, 0);
    v33 = v32;
    v34 = type metadata accessor for TranscriptSnippet(0);
    *v33 = 0xD000000000000017;
    v33[1] = 0x8000000000312FB0;
    v33[2] = v34;
    v35 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v33, enum case for JSONError.missingProperty(_:), v30);
LABEL_11:
    swift_willThrow(v35);
    swift_release(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
    a1 = v60;
    goto LABEL_12;
  }
  if ((objc_msgSend((id)objc_opt_self(PFRestrictionsUtil), "isExplicitContentAllowed") & 1) == 0
    && (v29 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = sub_1BD2F8();
    v35 = swift_allocError(&type metadata for TranscriptSnippet.DeserializeError, v45, 0, 0);
    goto LABEL_11;
  }
  if (Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0)
  {
    *((_QWORD *)&v64 + 1) = type metadata accessor for Action(0);
    v65 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v63 = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  }
  else
  {
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
  }
  v49 = (uint64_t)v61;
  v48 = v62;
  v50 = v58;
  v51 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v49, 1, 1, v51);
  *v48 = v50;
  v48[1] = v22;
  swift_retain();
  v52 = v59;
  v53 = sub_1BC600(v59, v26);
  if (v53[2])
  {
    v52 = sub_1BC998(v53);
    v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v55;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v48[2] = v52;
  v48[3] = v26;
  sub_15BD4((uint64_t)&v63, (uint64_t)(v48 + 4), &qword_3B0C50);
  v56 = type metadata accessor for TranscriptSnippet(0);
  sub_15BD4(v49, (uint64_t)v48 + *(int *)(v56 + 28), (uint64_t *)&unk_3B8790);
  swift_release(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
  v57 = type metadata accessor for JSONContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v66, v57);
  return ((uint64_t (*)(uint64_t, uint64_t))v23)(v60, v6);
}

uint64_t sub_1BC288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return TranscriptSnippet.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_1BC29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_267BC(v2 + *(int *)(a1 + 28), a2, (uint64_t *)&unk_3B8790);
}

uint64_t TranscriptSnippet.clickSender.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *boxed_opaque_existential_2Tm;

  a1[3] = type metadata accessor for TranscriptSnippet(0);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a1);
  return sub_1BD33C(v1, (uint64_t)boxed_opaque_existential_2Tm);
}

uint64_t sub_1BC2FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *boxed_opaque_existential_2Tm;

  a2[3] = a1;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return sub_1BD33C(v2, (uint64_t)boxed_opaque_existential_2Tm);
}

void sub_1BC320()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    v3 = v1 & 0xFFFFFFFFFFFFLL;
    if ((v1 & 0xFFFFFFFFFFFFLL) != 0)
      goto LABEL_5;
    __break(1u);
  }
  v3 = HIBYTE(v2) & 0xF;
  if (!v3)
  {
    __break(1u);
    return;
  }
LABEL_5:
  v4 = 7;
  if (((v2 >> 60) & ((v1 & 0x800000000000000) == 0)) != 0)
    v4 = 11;
  v5 = String.index(before:)(v4 | (v3 << 16));
  String.remove(at:)(v5);
}

uint64_t sub_1BC374()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E65746E6F63;
  else
    return 0x5F72656B61657073;
}

uint64_t sub_1BC3B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BE0E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC3D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1BDEF8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BC400(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1BDEF8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1BC428@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BC454(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BC454(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C05B0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_1BDEF8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TranscriptSentence.CodingKeys, &type metadata for TranscriptSentence.CodingKeys, v9, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v13 = 0;
    v8 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v13, v3);
    v12 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v12, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_1BC600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  v9 = type metadata accessor for String.Encoding(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v13);
  v14 = String.data(using:allowLossyConversion:)(v12, 0, a1, a2);
  v16 = v15;
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v16 >> 60 == 15)
  {
    v18 = static Logger.transcripts.getter(v17);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Unable to convert raw snippet to json data", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    v22 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v23 = JSONDecoder.init()();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0590);
    v25 = sub_1BDDB8();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v28, v24, v14, v16, v24, v25);
    swift_release(v23);
    sub_161328(v14, v16);
    return (_QWORD *)v28;
  }
}

uint64_t sub_1BC998(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  void **v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  Swift::String v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  Swift::String v83;
  _QWORD *v84;
  void **v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  Swift::String v93;
  uint64_t result;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Swift::String v101;
  uint64_t v102;
  unint64_t v103;

  v2 = type metadata accessor for CharacterSet(0);
  v97 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = 0;
  v103 = 0xE000000000000000;
  v5 = sub_1BDD6C();
  swift_bridgeObjectRetain();
  v101._countAndFlagsBits = (uint64_t)a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0590);
  v7 = _swiftEmptyArrayStorage;
  if ((Collection.isNotEmpty.getter(v6, v5) & 1) == 0)
  {
LABEL_75:
    v79 = v97;
    swift_bridgeObjectRelease();
    v80 = v7;
    v81 = v7[2];
    if (!v81)
    {
LABEL_86:
      swift_bridgeObjectRelease();
      return v102;
    }
    v96 = v80;
    v82 = v102 & 0xFFFFFFFFFFFFLL;
    if ((v103 & 0x2000000000000000) != 0)
      v82 = HIBYTE(v103) & 0xF;
    if (v82)
    {
      v83._countAndFlagsBits = 2570;
      v83._object = (void *)0xE200000000000000;
      String.append(_:)(v83);
      v84 = v96;
      v81 = v96[2];
      if (!v81)
      {
LABEL_85:
        swift_bridgeObjectRelease();
        sub_1BC320();
        goto LABEL_86;
      }
    }
    else
    {
      v84 = v96;
    }
    swift_bridgeObjectRetain_n(v84, 2);
    v85 = (void **)(v84 + 7);
    do
    {
      v86 = (uint64_t)*(v85 - 1);
      v87 = *v85;
      v85 += 4;
      v101._countAndFlagsBits = v86;
      v101._object = v87;
      swift_bridgeObjectRetain();
      v88 = swift_bridgeObjectRetain_n(v87, 2);
      static CharacterSet.whitespaces.getter(v88);
      v89 = sub_65CC4();
      v90 = StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v89);
      v92 = v91;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v4, v2);
      swift_bridgeObjectRelease();
      v101._countAndFlagsBits = v90;
      v101._object = v92;
      swift_bridgeObjectRetain();
      v93._countAndFlagsBits = 32;
      v93._object = (void *)0xE100000000000000;
      String.append(_:)(v93);
      swift_bridgeObjectRelease();
      String.append(_:)(v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v81;
    }
    while (v81);
    swift_bridgeObjectRelease_n(v96, 2);
    goto LABEL_85;
  }
  v100 = v2;
  while (1)
  {
    while (1)
    {
      v8 = a1[2];
      if (!v8)
      {
        __break(1u);
        goto LABEL_88;
      }
      v9 = a1[5];
      v10 = a1[6];
      v11 = a1[7];
      v98 = a1[4];
      v99 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(a1);
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v8 - 1) > a1[3] >> 1)
        a1 = sub_10764(isUniquelyReferenced_nonNull_native, v8, 1, a1);
      swift_arrayDestroy(a1 + 4, 1, &type metadata for TranscriptSentence);
      v13 = a1[2];
      if (!v13)
        goto LABEL_96;
      memmove(a1 + 4, a1 + 8, 32 * v13 - 32);
      a1[2] = v13 - 1;
      if (v9)
        break;
      swift_bridgeObjectRelease();
      v101._countAndFlagsBits = (uint64_t)a1;
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0590);
      v16 = Collection.isNotEmpty.getter(v15, v5);
      v2 = v100;
      if ((v16 & 1) == 0)
        goto LABEL_75;
    }
    v17 = v7[2];
    v95 = v5;
    if (v17)
      break;
LABEL_54:
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      v7 = sub_10764(0, v7[2] + 1, 1, v7);
    v60 = v7[2];
    v59 = v7[3];
    v61 = v60 + 1;
    if (v60 >= v59 >> 1)
      v7 = sub_10764((_QWORD *)(v59 > 1), v60 + 1, 1, v7);
    v7[2] = v61;
    v62 = &v7[4 * v60];
    v62[4] = v98;
    v62[5] = v9;
    v62[6] = v99;
    v62[7] = v11;
    if (v60 >= 2)
    {
      v63 = v102 & 0xFFFFFFFFFFFFLL;
      if ((v103 & 0x2000000000000000) != 0)
        v63 = HIBYTE(v103) & 0xF;
      v2 = v100;
      if (!v63
        || (v64._countAndFlagsBits = 2570,
            v64._object = (void *)0xE200000000000000,
            String.append(_:)(v64),
            (v61 = v7[2]) != 0))
      {
        swift_bridgeObjectRetain_n(v7, 2);
        v96 = v7;
        v65 = (void **)(v7 + 7);
        v66 = v97;
        do
        {
          v67 = (uint64_t)*(v65 - 1);
          v68 = *v65;
          v65 += 4;
          v101._countAndFlagsBits = v67;
          v101._object = v68;
          swift_bridgeObjectRetain();
          v69 = swift_bridgeObjectRetain_n(v68, 2);
          static CharacterSet.whitespaces.getter(v69);
          v70 = sub_65CC4();
          v71 = StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v70);
          v73 = v72;
          (*(void (**)(char *, uint64_t))(v66 + 8))(v4, v2);
          swift_bridgeObjectRelease();
          v101._countAndFlagsBits = v71;
          v101._object = v73;
          swift_bridgeObjectRetain();
          v74._countAndFlagsBits = 32;
          v74._object = (void *)0xE100000000000000;
          String.append(_:)(v74);
          swift_bridgeObjectRelease();
          String.append(_:)(v101);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease_n(v96, 2);
        v5 = v95;
      }
      swift_bridgeObjectRelease();
      if ((v103 & 0x2000000000000000) != 0)
      {
        v75 = HIBYTE(v103) & 0xF;
        if (!v75)
          goto LABEL_91;
      }
      else
      {
        v75 = v102 & 0xFFFFFFFFFFFFLL;
        if ((v102 & 0xFFFFFFFFFFFFLL) == 0)
          goto LABEL_90;
      }
      v76 = 7;
      if (((v103 >> 60) & ((v102 & 0x800000000000000) == 0)) != 0)
        v76 = 11;
      v77 = String.index(before:)(v76 | (v75 << 16));
      String.remove(at:)(v77);
      swift_bridgeObjectRelease();
      v7 = _swiftEmptyArrayStorage;
    }
    else
    {
      v2 = v100;
    }
    v101._countAndFlagsBits = (uint64_t)a1;
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0590);
    if ((Collection.isNotEmpty.getter(v78, v5) & 1) == 0)
      goto LABEL_75;
  }
  v18 = &v7[4 * v17];
  v19 = v18[1];
  if (!v19
    || (*v18 != v98 || v19 != v9) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, v98, v9, 0) & 1) == 0)
  {
    v20 = v102 & 0xFFFFFFFFFFFFLL;
    if ((v103 & 0x2000000000000000) != 0)
      v20 = HIBYTE(v103) & 0xF;
    if (v20)
    {
      v21._countAndFlagsBits = 2570;
      v21._object = (void *)0xE200000000000000;
      String.append(_:)(v21);
    }
    v22 = v7[2];
    if (v22)
    {
      swift_bridgeObjectRetain_n(v7, 2);
      v96 = v7;
      v23 = (void **)(v7 + 7);
      do
      {
        v24 = (uint64_t)*(v23 - 1);
        v25 = *v23;
        v23 += 4;
        v101._countAndFlagsBits = v24;
        v101._object = v25;
        swift_bridgeObjectRetain();
        v26 = swift_bridgeObjectRetain_n(v25, 2);
        static CharacterSet.whitespaces.getter(v26);
        v27 = sub_65CC4();
        v28 = StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v27);
        v30 = v29;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v4, v100);
        swift_bridgeObjectRelease();
        v101._countAndFlagsBits = v28;
        v101._object = v30;
        swift_bridgeObjectRetain();
        v31._countAndFlagsBits = 32;
        v31._object = (void *)0xE100000000000000;
        String.append(_:)(v31);
        swift_bridgeObjectRelease();
        String.append(_:)(v101);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease_n(v96, 2);
      v5 = v95;
    }
    swift_bridgeObjectRelease();
    if ((v103 & 0x2000000000000000) != 0)
    {
      v32 = HIBYTE(v103) & 0xF;
      if (!v32)
        goto LABEL_93;
    }
    else
    {
      v32 = v102 & 0xFFFFFFFFFFFFLL;
      if ((v102 & 0xFFFFFFFFFFFFLL) == 0)
        goto LABEL_92;
    }
    v33 = 7;
    if (((v103 >> 60) & ((v102 & 0x800000000000000) == 0)) != 0)
      v33 = 11;
    v34 = String.index(before:)(v33 | (v32 << 16));
    String.remove(at:)(v34);
    swift_bridgeObjectRelease();
    v7 = _swiftEmptyArrayStorage;
  }
  v35 = v7[2];
  v96 = v7;
  if (!v35)
  {
    v36 = 0;
LABEL_37:
    v43 = String.count.getter(v99, v11, v14);
    if (__OFADD__(v36, v43))
      goto LABEL_89;
    if (v36 + v43 > 250)
    {
      v44 = v102 & 0xFFFFFFFFFFFFLL;
      if ((v103 & 0x2000000000000000) != 0)
        v44 = HIBYTE(v103) & 0xF;
      if (v44)
      {
        v45._countAndFlagsBits = 2570;
        v45._object = (void *)0xE200000000000000;
        String.append(_:)(v45);
      }
      v46 = v7[2];
      if (v46)
      {
        swift_bridgeObjectRetain_n(v7, 2);
        v47 = (void **)(v7 + 7);
        do
        {
          v48 = (uint64_t)*(v47 - 1);
          v49 = *v47;
          v47 += 4;
          v101._countAndFlagsBits = v48;
          v101._object = v49;
          swift_bridgeObjectRetain();
          v50 = swift_bridgeObjectRetain_n(v49, 2);
          static CharacterSet.whitespaces.getter(v50);
          v51 = sub_65CC4();
          v52 = StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v51);
          v54 = v53;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v4, v100);
          swift_bridgeObjectRelease();
          v101._countAndFlagsBits = v52;
          v101._object = v54;
          swift_bridgeObjectRetain();
          v55._countAndFlagsBits = 32;
          v55._object = (void *)0xE100000000000000;
          String.append(_:)(v55);
          swift_bridgeObjectRelease();
          String.append(_:)(v101);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v46;
        }
        while (v46);
        swift_bridgeObjectRelease_n(v96, 2);
        v5 = v95;
      }
      swift_bridgeObjectRelease();
      if ((v103 & 0x2000000000000000) != 0)
      {
        v56 = HIBYTE(v103) & 0xF;
        if (!v56)
          goto LABEL_94;
      }
      else
      {
        v56 = v102 & 0xFFFFFFFFFFFFLL;
        if ((v102 & 0xFFFFFFFFFFFFLL) == 0)
          goto LABEL_95;
      }
      v57 = 7;
      if (((v103 >> 60) & ((v102 & 0x800000000000000) == 0)) != 0)
        v57 = 11;
      v58 = String.index(before:)(v57 | (v56 << 16));
      String.remove(at:)(v58);
      swift_bridgeObjectRelease();
      v7 = _swiftEmptyArrayStorage;
    }
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  v36 = 0;
  v37 = v7 + 7;
  while (1)
  {
    v38 = *(v37 - 1);
    v39 = *v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = String.count.getter(v38, v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = __OFADD__(v36, v41);
    v36 += v41;
    if (v42)
      break;
    v37 += 4;
    if (!--v35)
    {
      v7 = v96;
      swift_bridgeObjectRelease();
      v5 = v95;
      goto LABEL_37;
    }
  }
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

unint64_t sub_1BD2F8()
{
  unint64_t result;

  result = qword_3C04D8;
  if (!qword_3C04D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TranscriptSnippet.DeserializeError);
    atomic_store(result, (unint64_t *)&qword_3C04D8);
  }
  return result;
}

uint64_t sub_1BD33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptSnippet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BD384()
{
  unint64_t result;

  result = qword_3C04E0;
  if (!qword_3C04E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TranscriptSnippet.DeserializeError);
    atomic_store(result, (unint64_t *)&qword_3C04E0);
  }
  return result;
}

uint64_t sub_1BD3C8(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C04E8, (void (*)(uint64_t))type metadata accessor for TranscriptSnippet, (uint64_t)&protocol conformance descriptor for TranscriptSnippet);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BD404()
{
  return sub_F1C0(&qword_3C04E8, (void (*)(uint64_t))type metadata accessor for TranscriptSnippet, (uint64_t)&protocol conformance descriptor for TranscriptSnippet);
}

uint64_t sub_1BD430(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C04F0, (void (*)(uint64_t))type metadata accessor for TranscriptSnippet, (uint64_t)&protocol conformance descriptor for TranscriptSnippet);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptSnippet(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2 + 4;
    v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      v11 = a2[8];
      *(_QWORD *)(a1 + 56) = v10;
      *(_QWORD *)(a1 + 64) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 32, (uint64_t)(a2 + 4), v10);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *v9;
      *(_OWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 64) = a2[8];
    }
    v14 = *(int *)(a3 + 28);
    v15 = (void *)(a1 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ImpressionMetrics(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for TranscriptSnippet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for TranscriptSnippet(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v7;
  v8 = a2 + 4;
  v9 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v10;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v9 - 8))(a1 + 32, v8, v9);
  }
  else
  {
    v11 = *((_OWORD *)v8 + 1);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 64) = v8[4];
  }
  v12 = *(int *)(a3 + 28);
  v13 = (void *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for TranscriptSnippet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 32));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 32);
  v8 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
LABEL_8:
  v9 = *(int *)(a3 + 28);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for TranscriptSnippet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for TranscriptSnippet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 32));
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(int *)(a3 + 28);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for ImpressionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_8;
  }
  if (v16)
  {
LABEL_8:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSnippet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BDB4C);
}

uint64_t sub_1BDB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptSnippet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BDBD8);
}

uint64_t sub_1BDBD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1BDC50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2FCCB8;
  v4[1] = &unk_2FCCB8;
  v4[2] = &unk_2FCCD0;
  sub_34090(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptSnippet.DeserializeError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BDD10 + 4 * byte_2FCAF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BDD30 + 4 * byte_2FCAF5[v4]))();
}

_BYTE *sub_1BDD10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BDD30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDD38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDD40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BDD48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BDD50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSnippet.DeserializeError()
{
  return &type metadata for TranscriptSnippet.DeserializeError;
}

unint64_t sub_1BDD6C()
{
  unint64_t result;

  result = qword_3C0598;
  if (!qword_3C0598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C0590);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A]);
    atomic_store(result, (unint64_t *)&qword_3C0598);
  }
  return result;
}

unint64_t sub_1BDDB8()
{
  unint64_t result;

  result = qword_3C05A0;
  if (!qword_3C05A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C0590);
    sub_1BDE1C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A]);
    atomic_store(result, (unint64_t *)&qword_3C05A0);
  }
  return result;
}

unint64_t sub_1BDE1C()
{
  unint64_t result;

  result = qword_3C05A8;
  if (!qword_3C05A8)
  {
    result = swift_getWitnessTable(&unk_2FCD24);
    atomic_store(result, (unint64_t *)&qword_3C05A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptSentence(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptSentence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSentence()
{
  return &type metadata for TranscriptSentence;
}

unint64_t sub_1BDEF8()
{
  unint64_t result;

  result = qword_3C05B8;
  if (!qword_3C05B8)
  {
    result = swift_getWitnessTable(&unk_2FCE10);
    atomic_store(result, (unint64_t *)&qword_3C05B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TranscriptSentence.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BDF88 + 4 * byte_2FCAFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BDFBC + 4 * byte_2FCAFA[v4]))();
}

uint64_t sub_1BDFBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDFC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BDFCCLL);
  return result;
}

uint64_t sub_1BDFD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BDFE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BDFE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BDFEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSentence.CodingKeys()
{
  return &type metadata for TranscriptSentence.CodingKeys;
}

unint64_t sub_1BE00C()
{
  unint64_t result;

  result = qword_3C05C0;
  if (!qword_3C05C0)
  {
    result = swift_getWitnessTable(&unk_2FCDE8);
    atomic_store(result, (unint64_t *)&qword_3C05C0);
  }
  return result;
}

unint64_t sub_1BE054()
{
  unint64_t result;

  result = qword_3C05C8;
  if (!qword_3C05C8)
  {
    result = swift_getWitnessTable(&unk_2FCD58);
    atomic_store(result, (unint64_t *)&qword_3C05C8);
  }
  return result;
}

unint64_t sub_1BE09C()
{
  unint64_t result;

  result = qword_3C05D0;
  if (!qword_3C05D0)
  {
    result = swift_getWitnessTable(&unk_2FCD80);
    atomic_store(result, (unint64_t *)&qword_3C05D0);
  }
  return result;
}

uint64_t sub_1BE0E0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x5F72656B61657073 && a2 == 0xEA00000000006469)
  {
    v5 = 0xEA00000000006469;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5F72656B61657073, 0xEA00000000006469, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746E65746E6F63, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

ShelfKit::HttpActionMethod_optional __swiftcall HttpActionMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  ShelfKit::HttpActionMethod_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374B20, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 8;
  if (v5 < 8)
    v7 = v5;
  *v4 = v7;
  return result;
}

uint64_t HttpActionMethod.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BE25C + 4 * byte_2FCE60[*v0]))(5522759, 0xE300000000000000);
}

uint64_t sub_1BE25C()
{
  return 1414745936;
}

uint64_t sub_1BE26C()
{
  return 1145128264;
}

uint64_t sub_1BE27C()
{
  return 5526864;
}

uint64_t sub_1BE288()
{
  return 0x4554454C4544;
}

uint64_t sub_1BE29C()
{
  return 0x5443454E4E4F43;
}

uint64_t sub_1BE2B4()
{
  return 0x534E4F4954504FLL;
}

uint64_t sub_1BE2CC()
{
  return 0x4543415254;
}

void sub_1BE2E0(char *a1)
{
  sub_1E1C64(*a1);
}

void sub_1BE2EC()
{
  char *v0;

  sub_2D9588(0, *v0);
}

void sub_1BE2F8(uint64_t a1)
{
  char *v1;

  sub_2D8A10(a1, *v1);
}

void sub_1BE300(uint64_t a1)
{
  char *v1;

  sub_2D9588(a1, *v1);
}

ShelfKit::HttpActionMethod_optional sub_1BE308(Swift::String *a1)
{
  return HttpActionMethod.init(rawValue:)(*a1);
}

uint64_t sub_1BE314()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BE33C + 4 * byte_2FCE68[*v0]))();
}

void sub_1BE33C(_QWORD *a1@<X8>)
{
  *a1 = 1414745936;
  a1[1] = 0xE400000000000000;
}

void sub_1BE350(_QWORD *a1@<X8>)
{
  *a1 = 1145128264;
  a1[1] = 0xE400000000000000;
}

void sub_1BE364(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 5526864;
  a1[1] = v1;
}

void sub_1BE374(_QWORD *a1@<X8>)
{
  *a1 = 0x4554454C4544;
  a1[1] = 0xE600000000000000;
}

void sub_1BE38C(_QWORD *a1@<X8>)
{
  *a1 = 0x5443454E4E4F43;
  a1[1] = 0xE700000000000000;
}

void sub_1BE3A8(_QWORD *a1@<X8>)
{
  *a1 = 0x534E4F4954504FLL;
  a1[1] = 0xE700000000000000;
}

void sub_1BE3C4(_QWORD *a1@<X8>)
{
  *a1 = 0x4543415254;
  a1[1] = 0xE500000000000000;
}

uint64_t HttpAction.__allocating_init(url:presentationStyle:actionMetrics:)(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  HttpAction.init(url:presentationStyle:actionMetrics:)(a1, a2, a3);
  return v7;
}

uint64_t HttpAction.init(url:presentationStyle:actionMetrics:)(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  v4 = v3;
  v32 = a2;
  v7 = type metadata accessor for UUID(0);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v10);
  v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetrics(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v15;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method) = 0;
  v16 = OBJC_IVAR____TtC8ShelfKit10HttpAction_headers;
  swift_retain();
  *(_QWORD *)(v4 + v16) = sub_288078((uint64_t)_swiftEmptyArrayStorage);
  v17 = (_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body);
  *v17 = 0;
  v17[1] = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction) = 0;
  v18 = v4 + OBJC_IVAR____TtC8ShelfKit10HttpAction_url;
  v19 = type metadata accessor for URL(0);
  v28 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v18, a1, v19);
  swift_release(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  v20 = type metadata accessor for ImpressionMetrics(0);
  v21 = (uint64_t)v29;
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v29, 1, 1, v20);
  UUID.init()(v22);
  v23 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  *(_QWORD *)(v4 + 16) = v23;
  *(_QWORD *)(v4 + 24) = v25;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_BYTE *)(v4 + 48) = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v4 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v27, v12);
  sub_23AB8(v21, v4 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a1, v19);
  return v4;
}

void (*HttpAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2))(uint64_t, uint64_t)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return HttpAction.init(deserializing:using:)(a1, a2);
}

void (*HttpAction.init(deserializing:using:)(char *a1, uint64_t a2))(uint64_t, uint64_t)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t *v32;
  _BYTE *v33;
  uint64_t *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void (*v54)(char *, uint64_t);
  _BYTE *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t *v76;
  char *v77;
  uint64_t v78;
  _BYTE *v79;
  char *v80;
  uint64_t v81;
  _BYTE *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  char v90;
  _BYTE *v91;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v104;
  _BYTE *v105;
  uint64_t *v106;
  _BYTE *v107;
  uint64_t v108;
  _BYTE *v109;
  char *v110;
  char *v111;
  _BYTE *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  unint64_t *v122;
  uint64_t v123;
  char *v124;
  uint64_t *v125;
  char *v126;
  uint64_t *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132[24];
  char v133[8];
  char v134[8];
  char v135[8];
  char v136[8];
  char v137[8];
  char v138[8];
  char v139[8];
  uint64_t v140;
  uint64_t v141;

  v3 = v2;
  v123 = a2;
  v113 = *v3;
  v130 = type metadata accessor for JSONContext(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v120 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C05D8);
  __chkstk_darwin(v6);
  v114 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v8);
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for JSONObject(0);
  v131 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v119 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v118 = (char *)&v104 - v13;
  __chkstk_darwin(v14);
  v117 = (char *)&v104 - v15;
  __chkstk_darwin(v16);
  v116 = (char *)&v104 - v17;
  __chkstk_darwin(v18);
  v115 = (char *)&v104 - v19;
  __chkstk_darwin(v20);
  v111 = (char *)&v104 - v21;
  __chkstk_darwin(v22);
  v110 = (char *)&v104 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v104 - v25;
  v27 = type metadata accessor for URL(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v126 = (char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = (char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method;
  *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method) = 0;
  v30 = (unint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers);
  swift_retain();
  v31 = sub_288078((uint64_t)_swiftEmptyArrayStorage);
  v122 = v30;
  *v30 = v31;
  v32 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body);
  *v32 = 0;
  v32[1] = 0;
  v125 = v32;
  v112 = (char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest;
  *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest) = 0;
  v33 = (char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication;
  *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication) = 0;
  v34 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount) = 0;
  v35 = (char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache;
  *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache) = 0;
  v127 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction) = 0;
  v128 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction) = 0;
  v124 = a1;
  v36 = JSONObject.subscript.getter(7107189, 0xE300000000000000);
  JSONObject.url.getter(v36);
  v37 = (uint64_t)v10;
  v38 = *(void (**)(char *, uint64_t))(v131 + 8);
  v38(v26, v141);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v37, 1, v27) == 1)
  {
    sub_1459C(v37, &qword_3B4370);
    v39 = type metadata accessor for JSONError(0);
    v40 = sub_1E468();
    swift_allocError(v39, v40, 0, 0);
    v41 = (void (*)(uint64_t, uint64_t))v38;
    v43 = v42;
    v44 = *v3;
    swift_release(v3);
    *v43 = 7107189;
    v43[1] = 0xE300000000000000;
    v43[2] = v44;
    v45 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v43, enum case for JSONError.missingProperty(_:), v39);
    swift_willThrow(v45);
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v123, v130);
    v41((uint64_t)v124, v141);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release(*v127);
    swift_release(*v128);
    swift_deallocPartialClassInstance(v3, v113, *(unsigned int *)(*v3 + 48), *(unsigned __int16 *)(*v3 + 52));
    return v41;
  }
  v105 = v33;
  v106 = v34;
  v107 = v35;
  v46 = v126;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v126, v37, v27);
  v104 = v3;
  v108 = v28;
  v47 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v113 = v27;
  v47((char *)v3 + OBJC_IVAR____TtC8ShelfKit10HttpAction_url, v46, v27);
  v48 = v110;
  v49 = v124;
  JSONObject.subscript.getter(0x646F6874656DLL, 0xE600000000000000);
  v50 = sub_1BF220();
  JSONObject.stringEnumOrNil<A>()(&v140, &type metadata for HttpActionMethod, v50);
  v51 = (uint64_t)v48;
  v52 = v141;
  v38(v48, v141);
  v53 = v140;
  v54 = v38;
  if (v140 != 8)
  {
    v55 = v109;
    swift_beginAccess(v109, v132, 1, 0);
    *v55 = v53;
  }
  v56 = v111;
  v57 = JSONObject.subscript.getter(0x73726564616568, 0xE700000000000000);
  v58 = v114;
  JSONObject.dictionary.getter(v57);
  v59 = v52;
  v60 = v52;
  v61 = (uint64_t)v58;
  v62 = v54;
  v54(v56, v60);
  v63 = type metadata accessor for JSONDictionary(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v61, 1, v63) == 1)
  {
    sub_1459C(v61, &qword_3C05D8);
    v65 = v123;
    v66 = v104;
    v67 = v122;
LABEL_8:
    v68 = sub_288078((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v68 = JSONDictionary.bridgedPrimitiveValues<A, B>()(&type metadata for String, &type metadata for String, &protocol witness table for String);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v61, v63);
  v65 = v123;
  v66 = v104;
  v67 = v122;
  if (!v68)
    goto LABEL_8;
LABEL_9:
  swift_beginAccess(v67, &v140, 1, 0);
  *v67 = v68;
  swift_bridgeObjectRelease();
  v69 = JSONObject.subscript.getter(2036625250, 0xE400000000000000);
  v70 = JSONObject.string.getter(v69);
  v72 = v71;
  v73 = v59;
  v74 = v59;
  v75 = v62;
  v62((char *)v51, v74);
  v76 = v125;
  swift_beginAccess(v125, v139, 1, 0);
  *v76 = v70;
  v76[1] = v72;
  swift_bridgeObjectRelease();
  v77 = v115;
  v78 = JSONObject.subscript.getter(0x5265726F74537369, 0xEE00747365757165);
  LOBYTE(v70) = JSONObject.BOOL.getter(v78);
  v75(v77, v73);
  v79 = v112;
  swift_beginAccess(v112, v138, 1, 0);
  *v79 = v70 & 1;
  v80 = v116;
  v81 = JSONObject.subscript.getter(0xD000000000000013, 0x8000000000312FD0);
  LOBYTE(v70) = JSONObject.BOOL.getter(v81);
  v75(v80, v73);
  v82 = v105;
  swift_beginAccess(v105, v137, 1, 0);
  *v82 = v70 & 1;
  v83 = v117;
  v84 = JSONObject.subscript.getter(0x756F437972746572, 0xEA0000000000746ELL);
  v85 = JSONObject.int.getter(v84);
  LOBYTE(v72) = v86;
  v75(v83, v73);
  if ((v72 & 1) != 0)
    v85 = 0;
  v87 = v106;
  swift_beginAccess(v106, v136, 1, 0);
  *v87 = v85;
  v88 = v118;
  v89 = JSONObject.subscript.getter(0x43656C6261736964, 0xEC00000065686361);
  v90 = JSONObject.BOOL.getter(v89);
  v75(v88, v73);
  v91 = v107;
  swift_beginAccess(v107, v135, 1, 0);
  *v91 = v90 & 1;
  JSONObject.subscript.getter(0x4173736563637573, 0xED00006E6F697463);
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v51, v65);
  v75((char *)v51, v73);
  v93 = v127;
  swift_beginAccess(v127, v134, 1, 0);
  v94 = *v93;
  *v93 = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  swift_release(v94);
  JSONObject.subscript.getter(0x416572756C696166, 0xED00006E6F697463);
  v95 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v51, v65);
  v75((char *)v51, v73);
  v96 = v128;
  swift_beginAccess(v128, v133, 1, 0);
  v97 = *v96;
  *v96 = v95;
  swift_release(v66);
  swift_release(v97);
  v98 = v119;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v119, v49, v73);
  v99 = v129;
  v41 = (void (*)(uint64_t, uint64_t))v120;
  v100 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v120, v65, v130);
  v101 = v121;
  v102 = Action.init(deserializing:using:)(v98, (uint64_t)v41);
  if (!v101)
    v41 = (void (*)(uint64_t, uint64_t))v102;
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v65, v100);
  v75(v49, v73);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v126, v113);
  return v41;
}

unint64_t sub_1BF220()
{
  unint64_t result;

  result = qword_3C05E0;
  if (!qword_3C05E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpActionMethod);
    atomic_store(result, (unint64_t *)&qword_3C05E0);
  }
  return result;
}

uint64_t HttpAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_url;
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HttpAction.method.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return result;
}

uint64_t HttpAction.method.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method, v5, 1, 0);
  *v3 = v2;
  return result;
}

uint64_t (*HttpAction.method.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.headers.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t HttpAction.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*HttpAction.headers.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.body.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t HttpAction.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*HttpAction.body.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.isStoreRequest.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest, v3, 0, 0);
  return *v1;
}

uint64_t HttpAction.isStoreRequest.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*HttpAction.isStoreRequest.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.needsAuthentication.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication, v3, 0, 0);
  return *v1;
}

uint64_t HttpAction.needsAuthentication.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*HttpAction.needsAuthentication.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.retryCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t HttpAction.retryCount.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*HttpAction.retryCount.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.disableCache.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache, v3, 0, 0);
  return *v1;
}

uint64_t HttpAction.disableCache.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*HttpAction.disableCache.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.successAction.getter()
{
  return sub_17B34C(&OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction);
}

uint64_t HttpAction.successAction.setter(uint64_t a1)
{
  return sub_17B39C(a1, &OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction);
}

uint64_t (*HttpAction.successAction.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t HttpAction.failureAction.getter()
{
  return sub_17B34C(&OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction);
}

uint64_t HttpAction.failureAction.setter(uint64_t a1)
{
  return sub_17B39C(a1, &OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction);
}

uint64_t (*HttpAction.failureAction.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction, a1, 33, 0);
  return j__swift_endAccess;
}

void HttpAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.HttpAction", 19, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_1BF97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction));
}

uint64_t HttpAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  v3 = v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_url;
  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction));
  return v0;
}

uint64_t HttpAction.__deallocating_deinit()
{
  uint64_t v0;

  HttpAction.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_1BFB04()
{
  unint64_t result;

  result = qword_3C05E8;
  if (!qword_3C05E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpActionMethod);
    atomic_store(result, (unint64_t *)&qword_3C05E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HttpActionMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BFB94 + 4 * byte_2FCE75[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BFBC8 + 4 * byte_2FCE70[v4]))();
}

uint64_t sub_1BFBC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BFBD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BFBD8);
  return result;
}

uint64_t sub_1BFBE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BFBECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BFBF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BFBF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HttpActionMethod()
{
  return &type metadata for HttpActionMethod;
}

uint64_t sub_1BFC14()
{
  return type metadata accessor for HttpAction(0);
}

uint64_t type metadata accessor for HttpAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C0618;
  if (!qword_3C0618)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HttpAction);
  return result;
}

uint64_t sub_1BFC58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2FCF80;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_2FCF98;
    v4[4] = &unk_2FCFB0;
    v4[5] = &unk_2FCFB0;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = &unk_2FCFB0;
    v4[8] = &unk_2FCFC8;
    v4[9] = &unk_2FCFC8;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 160);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for HttpAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HttpAction);
}

uint64_t dispatch thunk of HttpAction.__allocating_init(url:presentationStyle:actionMetrics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t Brick.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, a1, &qword_3BEB70);
}

uint64_t Brick.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_accessibilityLabel);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_accessibilityLabel + 8));
  return v1;
}

uint64_t Brick.clickAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, a1, &qword_3B0C50);
}

uint64_t Brick.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

uint64_t Brick.__allocating_init(artwork:accessibilityLabel:clickAction:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v6 = v5;
  v24 = a1;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  sub_267BC(a1, v16 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, &qword_3BEB70);
  v17 = (_QWORD *)(v16 + OBJC_IVAR____TtC8ShelfKit5Brick_accessibilityLabel);
  *v17 = a2;
  v17[1] = a3;
  sub_267BC(a4, v16 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, &qword_3B0C50);
  v18 = sub_267BC(a5, v16 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, (uint64_t *)&unk_3B8790);
  UUID.init()(v18);
  v19 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1459C(a5, (uint64_t *)&unk_3B8790);
  sub_1459C(a4, &qword_3B0C50);
  sub_1459C(v24, &qword_3BEB70);
  *(_QWORD *)(v16 + 16) = v19;
  *(_QWORD *)(v16 + 24) = v21;
  return v16;
}

uint64_t Brick.init(artwork:accessibilityLabel:clickAction:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v6 = v5;
  v23 = a1;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC(a1, v6 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, &qword_3BEB70);
  v16 = (_QWORD *)(v6 + OBJC_IVAR____TtC8ShelfKit5Brick_accessibilityLabel);
  *v16 = a2;
  v16[1] = a3;
  sub_267BC(a4, v6 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, &qword_3B0C50);
  v17 = sub_267BC(a5, v6 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, (uint64_t *)&unk_3B8790);
  UUID.init()(v17);
  v18 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1459C(a5, (uint64_t *)&unk_3B8790);
  sub_1459C(a4, &qword_3B0C50);
  sub_1459C(v23, &qword_3BEB70);
  *(_QWORD *)(v6 + 16) = v18;
  *(_QWORD *)(v6 + 24) = v20;
  return v6;
}

uint64_t Brick.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  return sub_1C040C(a1, a2);
}

uint64_t Brick.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, &qword_3BEB70);
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, &qword_3B0C50);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, (uint64_t *)&unk_3B8790);
  return v0;
}

uint64_t Brick.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, &qword_3BEB70);
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, &qword_3B0C50);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, (uint64_t *)&unk_3B8790);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1C01AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C040C(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C01D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, a1, &qword_3BEB70);
}

uint64_t sub_1C0204@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, a1, &qword_3B0C50);
}

uint64_t sub_1C0234@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

NSObject_optional __swiftcall Brick.appEntityAnnotation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Bool v9;
  uint64_t v10;
  unint64_t v11;
  objc_class *v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;
  NSObject_optional result;

  v1 = type metadata accessor for LazyJSFlowDestination(0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for FlowAction.DestinationType(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_267BC(v0 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, (uint64_t)v14, &qword_3B0C50);
  if (!v15)
  {
    sub_1459C((uint64_t)v14, &qword_3B0C50);
    goto LABEL_7;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2E40);
  v8 = type metadata accessor for FlowAction(0);
  if ((swift_dynamicCast(&v13, v14, v7, v8, 6) & 1) == 0)
  {
LABEL_7:
    v11 = 0;
    goto LABEL_8;
  }
  v10 = v13;
  sub_1C0888(v13 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v4) != 1)
  {
    sub_145D8((uint64_t)v6, type metadata accessor for FlowAction.DestinationType);
    swift_release(v10);
    goto LABEL_7;
  }
  sub_1C08CC((uint64_t)v6, (uint64_t)v3);
  v11 = (unint64_t)LazyJSFlowDestination.appEntityAnnotation()();
  sub_145D8((uint64_t)v3, type metadata accessor for LazyJSFlowDestination);
  swift_release(v10);
LABEL_8:
  v12 = (objc_class *)v11;
  result.value.isa = v12;
  result.is_nil = v9;
  return result;
}

unint64_t sub_1C03EC()
{
  return (unint64_t)Brick.appEntityAnnotation()();
}

uint64_t sub_1C040C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char *v50;
  void (*v51)(uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v45 = a2;
  v3 = type metadata accessor for UUID(0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v5);
  v52 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for JSONObject(0);
  v51 = *(void (**)(uint64_t, uint64_t))(v57 - 8);
  v11 = __chkstk_darwin(v57);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ArtworkModel(0);
  JSONObject.subscript.getter(0x6B726F77747261, 0xE700000000000000);
  v53 = v8;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v21 = v45;
  v61 = v7;
  v48 = v20;
  v20(v10, v45, v7);
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  v49 = v10;
  v50 = v18;
  ExpressibleByJSON.init(tryDeserializing:using:)(v15, v10, v19);
  v22 = JSONObject.subscript.getter(0xD000000000000012, 0x80000000003130A0);
  v23 = JSONObject.string.getter(v22);
  v46 = v24;
  v47 = v23;
  v25 = (void (*)(char *, uint64_t))*((_QWORD *)v51 + 1);
  v26 = v57;
  v25(v13, v57);
  JSONObject.subscript.getter(0x7463416B63696C63, 0xEB000000006E6F69);
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v15, v21);
  v51 = (void (*)(uint64_t, uint64_t))v25;
  v25(v15, v26);
  if (Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0)
  {
    *((_QWORD *)&v59 + 1) = type metadata accessor for Action(0);
    v60 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v58 = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  }
  else
  {
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
  }
  v28 = type metadata accessor for ImpressionMetrics(0);
  v44 = a1;
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
  v29 = v49;
  v30 = v21;
  v48(v49, v21, v61);
  v31 = (uint64_t)v52;
  ExpressibleByJSON.init(tryDeserializing:using:)(v15, v29, v28);
  v32 = type metadata accessor for Brick(0);
  v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v34 = (uint64_t)v50;
  sub_267BC((uint64_t)v50, v33 + OBJC_IVAR____TtC8ShelfKit5Brick_artwork, &qword_3BEB70);
  v35 = (uint64_t *)(v33 + OBJC_IVAR____TtC8ShelfKit5Brick_accessibilityLabel);
  v36 = v46;
  *v35 = v47;
  v35[1] = v36;
  sub_267BC((uint64_t)&v58, v33 + OBJC_IVAR____TtC8ShelfKit5Brick_clickAction, &qword_3B0C50);
  v37 = sub_267BC(v31, v33 + OBJC_IVAR____TtC8ShelfKit5Brick_impressionMetrics, (uint64_t *)&unk_3B8790);
  v38 = v54;
  UUID.init()(v37);
  v39 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v41 = v40;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
  sub_1459C(v31, (uint64_t *)&unk_3B8790);
  sub_1459C((uint64_t)&v58, &qword_3B0C50);
  sub_1459C(v34, &qword_3BEB70);
  *(_QWORD *)(v33 + 16) = v39;
  *(_QWORD *)(v33 + 24) = v41;
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v30, v61);
  v51(v44, v57);
  return v33;
}

uint64_t sub_1C0888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowAction.DestinationType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C08CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LazyJSFlowDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Brick(uint64_t a1)
{
  uint64_t result;

  result = qword_3C0770;
  if (!qword_3C0770)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Brick);
  return result;
}

uint64_t sub_1C094C(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C0738, (void (*)(uint64_t))type metadata accessor for Brick, (uint64_t)&protocol conformance descriptor for Brick);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0988(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C0740, (void (*)(uint64_t))type metadata accessor for Brick, (uint64_t)&protocol conformance descriptor for Brick);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C09C4()
{
  return type metadata accessor for Brick(0);
}

void sub_1C09CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_2FD0D0;
  sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_2FD0E8;
    v6[3] = &unk_2FD100;
    sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for Brick(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Brick);
}

uint64_t sub_1C0AA0()
{
  _QWORD *v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  swift_release(v0[7]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 8);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for JSStoreDataProvider()
{
  return objc_opt_self(_TtC8ShelfKit19JSStoreDataProvider);
}

uint64_t sub_1C0AF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ActionIntent;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  __int128 v55;
  unint64_t v56;
  void *v57;

  v53 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v54 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionIntent = type metadata accessor for FetchActionIntent(0);
  v49 = *(_QWORD *)(ActionIntent - 8);
  v51 = *(_QWORD *)(v49 + 64);
  __chkstk_darwin(ActionIntent);
  v48 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AnyIntentTypes(0, v6);
  v45 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v44 - v19;
  JSONContext.init()(v21);
  JSONContext.withActionKinds()((uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v52 = v22;
  v23 = sub_126124();
  v24 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v23);
  static JSONContext.Property<A>.intentTypes.getter(v24);
  JSONContext.addingValue<A>(_:forProperty:)(v11, v8, v9);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v47);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
  v22(v17, v12);
  v25 = v50 + 64;
  v26 = v20;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  sub_150C8(v25, (uint64_t)&v55);
  v27 = v48;
  sub_14510(v53, v48, type metadata accessor for FetchActionIntent);
  v28 = *(unsigned __int8 *)(v13 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v49 + 80);
  v32 = (v31 + v30 + 40) & ~v31;
  v33 = swift_allocObject(&unk_3882A8, v32 + v51, v28 | v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33 + v29, v17, v12);
  sub_F4D8(&v55, v33 + v30);
  sub_3C56C(v27, v33 + v32, type metadata accessor for FetchActionIntent);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0B20);
  v34 = Promise.__allocating_init()();
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v54, 1, 1, v35);
  v37 = (_QWORD *)swift_allocObject(&unk_3882D0, 56, 7);
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = &unk_3C0C38;
  v37[5] = v33;
  v37[6] = v34;
  swift_retain();
  v38 = sub_1C91F0(v36, (uint64_t)&unk_3C0C40, (uint64_t)v37);
  swift_release(v38);
  v39 = sub_676C8();
  v40 = static OS_dispatch_queue.main.getter(v39);
  v56 = v39;
  v57 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v55 = v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3248);
  v42 = Promise.map<A>(on:_:)(&v55, sub_1C6F34, 0, v41);
  swift_release(v34);
  v52(v26, v12);
  __swift_destroy_boxed_opaque_existential_1(&v55);
  return v42;
}

uint64_t sub_1C0EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ShelfIntent;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  __int128 v56;
  unint64_t v57;
  void *v58;

  v54 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfIntent = type metadata accessor for FetchShelfIntent(0);
  v50 = *(_QWORD *)(ShelfIntent - 8);
  v52 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(ShelfIntent);
  v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AnyIntentTypes(0, v6);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  JSONContext.init()(v21);
  JSONContext.withActionKinds()((uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v53 = v22;
  v23 = sub_126124();
  v24 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v23);
  static JSONContext.Property<A>.intentTypes.getter(v24);
  JSONContext.addingValue<A>(_:forProperty:)(v11, v8, v9);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
  v22(v17, v12);
  v25 = v51 + 64;
  v26 = v20;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  sub_150C8(v25, (uint64_t)&v56);
  v27 = v49;
  sub_14510(v54, v49, type metadata accessor for FetchShelfIntent);
  v28 = *(unsigned __int8 *)(v13 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v50 + 80);
  v32 = (v31 + v30 + 40) & ~v31;
  v33 = swift_allocObject(&unk_387BA0, v32 + v52, v28 | v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33 + v29, v17, v12);
  sub_F4D8(&v56, v33 + v30);
  sub_3C56C(v27, v33 + v32, type metadata accessor for FetchShelfIntent);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C08E0);
  v35 = Promise.__allocating_init()(v34);
  v36 = type metadata accessor for TaskPriority(0);
  v37 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v55, 1, 1, v36);
  v38 = (_QWORD *)swift_allocObject(&unk_387BC8, 56, 7);
  v38[2] = 0;
  v38[3] = 0;
  v38[4] = &unk_3C08D8;
  v38[5] = v33;
  v38[6] = v35;
  swift_retain();
  v39 = sub_1C91F0(v37, (uint64_t)&unk_3C08F0, (uint64_t)v38);
  swift_release(v39);
  v40 = sub_676C8();
  v41 = static OS_dispatch_queue.main.getter(v40);
  v57 = v40;
  v58 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v56 = v41;
  v42 = type metadata accessor for Shelf(0);
  v43 = Promise.map<A>(on:_:)(&v56, sub_1CC74C, 0, v42);
  swift_release(v35);
  v53(v26, v12);
  __swift_destroy_boxed_opaque_existential_1(&v56);
  return v43;
}

uint64_t sub_1C12E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t ScoringWeights;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  unint64_t v46;
  void *v47;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v0);
  v44 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AnyIntentTypes(0, v3);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - v16;
  JSONContext.init()(v18);
  JSONContext.withActionKinds()((uint64_t)v14);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v20 = sub_126124();
  v21 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v20);
  static JSONContext.Property<A>.intentTypes.getter(v21);
  JSONContext.addingValue<A>(_:forProperty:)(v8, v5, v6);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v6);
  v19(v14, v9);
  v22 = v19;
  v23 = v43 + 64;
  v24 = v17;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v9);
  sub_150C8(v23, (uint64_t)&v45);
  v25 = *(unsigned __int8 *)(v10 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v11 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject(&unk_387DF8, v27 + 40, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v28 + v26, v14, v9);
  sub_F4D8(&v45, v28 + v27);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C09F8);
  v30 = Promise.__allocating_init()(v29);
  v31 = type metadata accessor for TaskPriority(0);
  v32 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v44, 1, 1, v31);
  v33 = (_QWORD *)swift_allocObject(&unk_387E20, 56, 7);
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = &unk_3C09F0;
  v33[5] = v28;
  v33[6] = v30;
  swift_retain();
  v34 = sub_1C91F0(v32, (uint64_t)&unk_3C0A08, (uint64_t)v33);
  swift_release(v34);
  v35 = sub_676C8();
  v36 = static OS_dispatch_queue.main.getter(v35);
  v46 = v35;
  v47 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v45 = v36;
  ScoringWeights = type metadata accessor for UpNextScoringWeights();
  v38 = Promise.map<A>(on:_:)(&v45, sub_1CC738, 0, ScoringWeights);
  swift_release(v30);
  v22(v24, v9);
  __swift_destroy_boxed_opaque_existential_1(&v45);
  return v38;
}

uint64_t sub_1C164C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_388258, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A60);
  v30 = swift_bridgeObjectRetain();
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_388280, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0C18;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0C20, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0AD8);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CC760, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C19C8(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[2];
  __int128 v63[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v56 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v52 = *(_QWORD *)(v53 - 8);
  v4 = __chkstk_darwin(v53);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for AnyIntentTypes(0, v4);
  v51 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - v16;
  JSONContext.init()(v18);
  JSONContext.withActionKinds()((uint64_t)v14);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v20 = v19;
  v55 = v19;
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  v23 = v50;
  JSONContext.addingValue<A>(_:forProperty:)(v8, v6, v50);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v53);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v23);
  v24 = v49;
  v20(v14, v49);
  v25 = v54 + 64;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v24);
  sub_150C8(v25, (uint64_t)v63);
  v26 = a1[5];
  v61 = a1[4];
  v62[0] = v26;
  *(_OWORD *)((char *)v62 + 9) = *(__int128 *)((char *)a1 + 89);
  v27 = a1[1];
  v57 = *a1;
  v58 = v27;
  v28 = a1[3];
  v59 = a1[2];
  v60 = v28;
  v29 = *(unsigned __int8 *)(v10 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = (v11 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject(&unk_387EC0, v32 + 105, v29 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v30, v14, v24);
  sub_F4D8(v63, v33 + v31);
  v34 = (_OWORD *)(v33 + v32);
  v35 = v62[0];
  v34[4] = v61;
  v34[5] = v35;
  *(_OWORD *)((char *)v34 + 89) = *(_OWORD *)((char *)v62 + 9);
  v36 = v58;
  *v34 = v57;
  v34[1] = v36;
  v37 = v60;
  v34[2] = v59;
  v34[3] = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A48);
  v38 = sub_64408(a1);
  v39 = Promise.__allocating_init()(v38);
  v40 = type metadata accessor for TaskPriority(0);
  v41 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v56, 1, 1, v40);
  v42 = (_QWORD *)swift_allocObject(&unk_387EE8, 56, 7);
  v42[2] = 0;
  v42[3] = 0;
  v42[4] = &unk_3C0A40;
  v42[5] = v33;
  v42[6] = v39;
  swift_retain();
  v43 = sub_1C91F0(v41, (uint64_t)&unk_3C0A58, (uint64_t)v42);
  swift_release(v43);
  v44 = sub_676C8();
  v45 = static OS_dispatch_queue.main.getter(v44);
  *((_QWORD *)&v58 + 1) = v44;
  *(_QWORD *)&v59 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v57 = v45;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BD000);
  v47 = Promise.map<A>(on:_:)(&v57, sub_1C6F64, 0, v46);
  swift_release(v39);
  v55(v17, v24);
  __swift_destroy_boxed_opaque_existential_1(&v57);
  return v47;
}

uint64_t sub_1C1DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  unint64_t v52;
  void *v53;

  v48 = a1;
  v49 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v50 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v44 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v46);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v47 + 64;
  v25 = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v51);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_387C68, v29 + 16, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v16, v11);
  sub_F4D8(&v51, v30 + v28);
  v31 = (_QWORD *)(v30 + v29);
  v32 = v49;
  *v31 = v48;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0948);
  v33 = swift_bridgeObjectRetain();
  v34 = Promise.__allocating_init()(v33);
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v50, 1, 1, v35);
  v37 = (_QWORD *)swift_allocObject(&unk_387C90, 56, 7);
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = &unk_3C0940;
  v37[5] = v30;
  v37[6] = v34;
  swift_retain();
  v38 = sub_1C91F0(v36, (uint64_t)&unk_3C0958, (uint64_t)v37);
  swift_release(v38);
  v39 = sub_676C8();
  v40 = static OS_dispatch_queue.main.getter(v39);
  v52 = v39;
  v53 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v51 = v40;
  v41 = type metadata accessor for SearchHintsPage(0);
  v42 = Promise.map<A>(on:_:)(&v51, sub_1C6F94, 0, v41);
  swift_release(v34);
  v21(v25, v11);
  __swift_destroy_boxed_opaque_existential_1(&v51);
  return v42;
}

uint64_t sub_1C2150(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v56 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v52 = *(_QWORD *)(v53 - 8);
  v4 = __chkstk_darwin(v53);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for AnyIntentTypes(0, v4);
  v51 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - v16;
  JSONContext.init()(v18);
  JSONContext.withActionKinds()((uint64_t)v14);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v20 = v19;
  v55 = v19;
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  v23 = v50;
  JSONContext.addingValue<A>(_:forProperty:)(v8, v6, v50);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v53);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v23);
  v24 = v49;
  v20(v14, v49);
  v25 = v54 + 64;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v24);
  sub_150C8(v25, (uint64_t)v64);
  v26 = a1[5];
  v61 = a1[4];
  v62 = v26;
  v63 = *((_QWORD *)a1 + 12);
  v27 = a1[1];
  v57 = *a1;
  v58 = v27;
  v28 = a1[3];
  v59 = a1[2];
  v60 = v28;
  v29 = *(unsigned __int8 *)(v10 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = (v11 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject(&unk_387C18, v32 + 104, v29 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v30, v14, v24);
  sub_F4D8(v64, v33 + v31);
  v34 = v33 + v32;
  v35 = v62;
  *(_OWORD *)(v34 + 64) = v61;
  *(_OWORD *)(v34 + 80) = v35;
  *(_QWORD *)(v34 + 96) = v63;
  v36 = v58;
  *(_OWORD *)v34 = v57;
  *(_OWORD *)(v34 + 16) = v36;
  v37 = v60;
  *(_OWORD *)(v34 + 32) = v59;
  *(_OWORD *)(v34 + 48) = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0918);
  v38 = sub_64408(a1);
  v39 = Promise.__allocating_init()(v38);
  v40 = type metadata accessor for TaskPriority(0);
  v41 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v56, 1, 1, v40);
  v42 = (_QWORD *)swift_allocObject(&unk_387C40, 56, 7);
  v42[2] = 0;
  v42[3] = 0;
  v42[4] = &unk_3C0910;
  v42[5] = v33;
  v42[6] = v39;
  swift_retain();
  v43 = sub_1C91F0(v41, (uint64_t)&unk_3C0928, (uint64_t)v42);
  swift_release(v43);
  v44 = sub_676C8();
  v45 = static OS_dispatch_queue.main.getter(v44);
  *((_QWORD *)&v58 + 1) = v44;
  *(_QWORD *)&v59 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v57 = v45;
  v46 = type metadata accessor for Page(0);
  v47 = Promise.map<A>(on:_:)(&v57, sub_1CC738, 0, v46);
  swift_release(v39);
  v55(v17, v24);
  __swift_destroy_boxed_opaque_existential_1(&v57);
  return v47;
}

uint64_t sub_1C2554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t MoreOfPageIntent;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  __int128 v56;
  unint64_t v57;
  void *v58;

  v54 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MoreOfPageIntent = type metadata accessor for FetchMoreOfPageIntent(0);
  v50 = *(_QWORD *)(MoreOfPageIntent - 8);
  v52 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(MoreOfPageIntent);
  v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AnyIntentTypes(0, v6);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  JSONContext.init()(v21);
  JSONContext.withActionKinds()((uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v53 = v22;
  v23 = sub_126124();
  v24 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v23);
  static JSONContext.Property<A>.intentTypes.getter(v24);
  JSONContext.addingValue<A>(_:forProperty:)(v11, v8, v9);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
  v22(v17, v12);
  v25 = v51 + 64;
  v26 = v20;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  sub_150C8(v25, (uint64_t)&v56);
  v27 = v49;
  sub_14510(v54, v49, type metadata accessor for FetchMoreOfPageIntent);
  v28 = *(unsigned __int8 *)(v13 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v50 + 80);
  v32 = (v31 + v30 + 40) & ~v31;
  v33 = swift_allocObject(&unk_387DA8, v32 + v52, v28 | v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33 + v29, v17, v12);
  sub_F4D8(&v56, v33 + v30);
  sub_3C56C(v27, v33 + v32, type metadata accessor for FetchMoreOfPageIntent);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0918);
  v35 = Promise.__allocating_init()(v34);
  v36 = type metadata accessor for TaskPriority(0);
  v37 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v55, 1, 1, v36);
  v38 = (_QWORD *)swift_allocObject(&unk_387DD0, 56, 7);
  v38[2] = 0;
  v38[3] = 0;
  v38[4] = &unk_3C09D8;
  v38[5] = v33;
  v38[6] = v35;
  swift_retain();
  v39 = sub_1C91F0(v37, (uint64_t)&unk_3C09E0, (uint64_t)v38);
  swift_release(v39);
  v40 = sub_676C8();
  v41 = static OS_dispatch_queue.main.getter(v40);
  v57 = v40;
  v58 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v56 = v41;
  v42 = type metadata accessor for Page(0);
  v43 = Promise.map<A>(on:_:)(&v56, sub_1CC738, 0, v42);
  swift_release(v35);
  v53(v26, v12);
  __swift_destroy_boxed_opaque_existential_1(&v56);
  return v43;
}

uint64_t sub_1C294C(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  char *v51;
  __int128 v52;
  unint64_t v53;
  void *v54;

  v48 = a2;
  v49 = a1;
  v50 = a2 >> 8;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v44 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v46);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v47 + 64;
  v25 = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v52);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_388208, v29 + 10, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v16, v11);
  sub_F4D8(&v52, v30 + v28);
  v31 = v30 + v29;
  *(_QWORD *)v31 = v49;
  *(_BYTE *)(v31 + 8) = v48;
  *(_BYTE *)(v31 + 9) = v50;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0918);
  v33 = Promise.__allocating_init()(v32);
  v34 = type metadata accessor for TaskPriority(0);
  v35 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v51, 1, 1, v34);
  v36 = (_QWORD *)swift_allocObject(&unk_388230, 56, 7);
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = &unk_3C0BF8;
  v36[5] = v30;
  v36[6] = v33;
  swift_retain();
  v37 = sub_1C91F0(v35, (uint64_t)&unk_3C0C00, (uint64_t)v36);
  swift_release(v37);
  v38 = sub_676C8();
  v39 = static OS_dispatch_queue.main.getter(v38);
  v53 = v38;
  v54 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v52 = v39;
  v40 = type metadata accessor for Page(0);
  v41 = Promise.map<A>(on:_:)(&v52, sub_1CA26C, 0, v40);
  swift_release(v33);
  v21(v25, v11);
  __swift_destroy_boxed_opaque_existential_1(&v52);
  return v41;
}

uint64_t sub_1C2CE0(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unsigned int v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  __int128 v51;
  unint64_t v52;
  void *v53;

  v47 = a2;
  v49 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v50 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v42 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v48 = v21;
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  v46 = v19;
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v45 + 64;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v51);
  LOBYTE(v24) = v47 & 1;
  LODWORD(v19) = (v47 >> 8) & 1;
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v13 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_387D08, v28 + 10, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v29 + v26, v16, v11);
  sub_F4D8(&v51, v29 + v27);
  v30 = v29 + v28;
  *(_QWORD *)v30 = v49;
  *(_BYTE *)(v30 + 8) = v24;
  *(_BYTE *)(v30 + 9) = (_BYTE)v19;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0998);
  v32 = Promise.__allocating_init()(v31);
  v33 = type metadata accessor for TaskPriority(0);
  v34 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v50, 1, 1, v33);
  v35 = (_QWORD *)swift_allocObject(&unk_387D30, 56, 7);
  v35[2] = 0;
  v35[3] = 0;
  v35[4] = &unk_3C0990;
  v35[5] = v29;
  v35[6] = v32;
  swift_retain();
  v36 = sub_1C91F0(v34, (uint64_t)&unk_3C09A8, (uint64_t)v35);
  swift_release(v36);
  v37 = sub_676C8();
  v38 = static OS_dispatch_queue.main.getter(v37);
  v52 = v37;
  v53 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v51 = v38;
  v39 = type metadata accessor for HeaderFooterShelves();
  v40 = Promise.map<A>(on:_:)(&v51, sub_1CC738, 0, v39);
  swift_release(v32);
  v48(v46, v11);
  __swift_destroy_boxed_opaque_existential_1(&v51);
  return v40;
}

uint64_t sub_1C3078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_388168, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0BA0);
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_388190, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0B98;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0BB0, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = type metadata accessor for UpsellInformation(0);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CC74C, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C33E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_388028, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C08E0);
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_388050, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0AF8;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0B00, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = type metadata accessor for Shelf(0);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CA408, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C3758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t PageIntent;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  __int128 v56;
  unint64_t v57;
  void *v58;

  v54 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  PageIntent = type metadata accessor for FetchPageIntent(0);
  v50 = *(_QWORD *)(PageIntent - 8);
  v52 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(PageIntent);
  v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AnyIntentTypes(0, v6);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  JSONContext.init()(v21);
  JSONContext.withActionKinds()((uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v53 = v22;
  v23 = sub_126124();
  v24 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v23);
  static JSONContext.Property<A>.intentTypes.getter(v24);
  JSONContext.addingValue<A>(_:forProperty:)(v11, v8, v9);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
  v22(v17, v12);
  v25 = v51 + 64;
  v26 = v20;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  sub_150C8(v25, (uint64_t)&v56);
  v27 = v49;
  sub_14510(v54, v49, type metadata accessor for FetchPageIntent);
  v28 = *(unsigned __int8 *)(v13 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v50 + 80);
  v32 = (v31 + v30 + 40) & ~v31;
  v33 = swift_allocObject(&unk_387D58, v32 + v52, v28 | v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33 + v29, v17, v12);
  sub_F4D8(&v56, v33 + v30);
  sub_3C56C(v27, v33 + v32, type metadata accessor for FetchPageIntent);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0918);
  v35 = Promise.__allocating_init()(v34);
  v36 = type metadata accessor for TaskPriority(0);
  v37 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v55, 1, 1, v36);
  v38 = (_QWORD *)swift_allocObject(&unk_387D80, 56, 7);
  v38[2] = 0;
  v38[3] = 0;
  v38[4] = &unk_3C09C0;
  v38[5] = v33;
  v38[6] = v35;
  swift_retain();
  v39 = sub_1C91F0(v37, (uint64_t)&unk_3C09C8, (uint64_t)v38);
  swift_release(v39);
  v40 = sub_676C8();
  v41 = static OS_dispatch_queue.main.getter(v40);
  v57 = v40;
  v58 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v56 = v41;
  v42 = type metadata accessor for Page(0);
  v43 = Promise.map<A>(on:_:)(&v56, sub_1CC738, 0, v42);
  swift_release(v35);
  v53(v26, v12);
  __swift_destroy_boxed_opaque_existential_1(&v56);
  return v43;
}

uint64_t sub_1C3B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __int128 v53;
  unint64_t v54;
  void *v55;

  v50 = a1;
  v51 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v52 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v45 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v49 = v21;
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v48 + 64;
  v25 = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v53);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_387E48, v29 + 16, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v16, v11);
  sub_F4D8(&v53, v30 + v28);
  v31 = (_QWORD *)(v30 + v29);
  v32 = v51;
  *v31 = v50;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C08E0);
  swift_bridgeObjectRetain();
  v33 = swift_bridgeObjectRetain();
  v34 = Promise.__allocating_init()(v33);
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v52, 1, 1, v35);
  v37 = (_QWORD *)swift_allocObject(&unk_387E70, 56, 7);
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = &unk_3C0A20;
  v37[5] = v30;
  v37[6] = v34;
  swift_retain();
  v38 = sub_1C91F0(v36, (uint64_t)&unk_3C0A28, (uint64_t)v37);
  swift_release(v38);
  v39 = sub_676C8();
  v40 = static OS_dispatch_queue.main.getter(v39);
  v54 = v39;
  v55 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v53 = v40;
  v41 = type metadata accessor for Shelf(0);
  v42 = Promise.map<A>(on:_:)(&v53, sub_1CC74C, 0, v41);
  swift_release(v34);
  v49(v25, v11);
  __swift_destroy_boxed_opaque_existential_1(&v53);
  return v42;
}

uint64_t sub_1C3EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __int128 v53;
  unint64_t v54;
  void *v55;

  v50 = a1;
  v51 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v52 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v45 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v49 = v21;
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v48 + 64;
  v25 = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v53);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_387F88, v29 + 16, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v16, v11);
  sub_F4D8(&v53, v30 + v28);
  v31 = (_QWORD *)(v30 + v29);
  v32 = v51;
  *v31 = v50;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0918);
  swift_bridgeObjectRetain();
  v33 = swift_bridgeObjectRetain();
  v34 = Promise.__allocating_init()(v33);
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v52, 1, 1, v35);
  v37 = (_QWORD *)swift_allocObject(&unk_387FB0, 56, 7);
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = &unk_3C0AA8;
  v37[5] = v30;
  v37[6] = v34;
  swift_retain();
  v38 = sub_1C91F0(v36, (uint64_t)&unk_3C0AB0, (uint64_t)v37);
  swift_release(v38);
  v39 = sub_676C8();
  v40 = static OS_dispatch_queue.main.getter(v39);
  v54 = v39;
  v55 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v53 = v40;
  v41 = type metadata accessor for Page(0);
  v42 = Promise.map<A>(on:_:)(&v53, sub_1CC738, 0, v41);
  swift_release(v34);
  v49(v25, v11);
  __swift_destroy_boxed_opaque_existential_1(&v53);
  return v42;
}

uint64_t sub_1C4270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  __int128 v56;
  unint64_t v57;
  void *v58;

  v54 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for HighlightResourceIntent(0);
  v50 = *(_QWORD *)(v3 - 8);
  v52 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(v3);
  v49 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AnyIntentTypes(0, v6);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  JSONContext.init()(v21);
  JSONContext.withActionKinds()((uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v53 = v22;
  v23 = sub_126124();
  v24 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v23);
  static JSONContext.Property<A>.intentTypes.getter(v24);
  JSONContext.addingValue<A>(_:forProperty:)(v11, v8, v9);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
  v22(v17, v12);
  v25 = v51 + 64;
  v26 = v20;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  sub_150C8(v25, (uint64_t)&v56);
  v27 = v49;
  sub_14510(v54, v49, type metadata accessor for HighlightResourceIntent);
  v28 = *(unsigned __int8 *)(v13 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v50 + 80);
  v32 = (v31 + v30 + 40) & ~v31;
  v33 = swift_allocObject(&unk_387F38, v32 + v52, v28 | v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33 + v29, v17, v12);
  sub_F4D8(&v56, v33 + v30);
  sub_3C56C(v27, v33 + v32, type metadata accessor for HighlightResourceIntent);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A88);
  v35 = Promise.__allocating_init()(v34);
  v36 = type metadata accessor for TaskPriority(0);
  v37 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v55, 1, 1, v36);
  v38 = (_QWORD *)swift_allocObject(&unk_387F60, 56, 7);
  v38[2] = 0;
  v38[3] = 0;
  v38[4] = &unk_3C0A80;
  v38[5] = v33;
  v38[6] = v35;
  swift_retain();
  v39 = sub_1C91F0(v37, (uint64_t)&unk_3C0A98, (uint64_t)v38);
  swift_release(v39);
  v40 = sub_676C8();
  v41 = static OS_dispatch_queue.main.getter(v40);
  v57 = v40;
  v58 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v56 = v41;
  v42 = type metadata accessor for HighlightResource(0);
  v43 = Promise.map<A>(on:_:)(&v56, sub_1C6FC4, 0, v42);
  swift_release(v35);
  v53(v26, v12);
  __swift_destroy_boxed_opaque_existential_1(&v56);
  return v43;
}

uint64_t sub_1C4668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_3881B8, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0BD0);
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_3881E0, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0BC8;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0BE0, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3780);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CC760, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C49DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_388118, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0B70);
  v30 = swift_bridgeObjectRetain();
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_388140, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0B68;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0B80, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C80);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CA728, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C4D58(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char *v49;
  __int128 v50;
  unint64_t v51;
  void *v52;

  v47 = a1;
  v48 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v49 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v43 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v45);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v46 + 64;
  v25 = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v50);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_3880C8, v29 + 9, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v16, v11);
  sub_F4D8(&v50, v30 + v28);
  v31 = v30 + v29;
  *(_QWORD *)v31 = v47;
  *(_BYTE *)(v31 + 8) = v48;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A60);
  v33 = Promise.__allocating_init()(v32);
  v34 = type metadata accessor for TaskPriority(0);
  v35 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v49, 1, 1, v34);
  v36 = (_QWORD *)swift_allocObject(&unk_3880F0, 56, 7);
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = &unk_3C0B40;
  v36[5] = v30;
  v36[6] = v33;
  swift_retain();
  v37 = sub_1C91F0(v35, (uint64_t)&unk_3C0B50, (uint64_t)v36);
  swift_release(v37);
  v38 = sub_676C8();
  v39 = static OS_dispatch_queue.main.getter(v38);
  v51 = v38;
  v52 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v50 = v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0AD8);
  v41 = Promise.map<A>(on:_:)(&v50, sub_1CC760, 0, v40);
  swift_release(v33);
  v21(v25, v11);
  __swift_destroy_boxed_opaque_existential_1(&v50);
  return v41;
}

uint64_t sub_1C50DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_388078, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0B20);
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_3880A0, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0B18;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0B30, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3248);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CC724, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C5450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  unint64_t v49;
  void *v50;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v1);
  v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v42 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  JSONContext.init()(v19);
  JSONContext.withActionKinds()((uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v21 = sub_126124();
  v22 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v21);
  static JSONContext.Property<A>.intentTypes.getter(v22);
  JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v20(v15, v10);
  v23 = v45 + 64;
  v24 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  sub_150C8(v23, (uint64_t)&v48);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_387FD8, v28 + 8, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v26, v15, v10);
  sub_F4D8(&v48, v29 + v27);
  *(_QWORD *)(v29 + v28) = v46;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0AD0);
  v31 = Promise.__allocating_init()(v30);
  v32 = type metadata accessor for TaskPriority(0);
  v33 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v47, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject(&unk_388000, 56, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = &unk_3C0AC8;
  v34[5] = v29;
  v34[6] = v31;
  swift_retain();
  v35 = sub_1C91F0(v33, (uint64_t)&unk_3C0AE0, (uint64_t)v34);
  swift_release(v35);
  v36 = sub_676C8();
  v37 = static OS_dispatch_queue.main.getter(v36);
  v49 = v36;
  v50 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v48 = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BD6D0);
  v39 = Promise.map<A>(on:_:)(&v48, sub_1CA98C, 0, v38);
  swift_release(v31);
  v20(v24, v10);
  __swift_destroy_boxed_opaque_existential_1(&v48);
  return v39;
}

uint64_t sub_1C57C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  unint64_t v52;
  void *v53;

  v48 = a1;
  v49 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v2);
  v50 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v44 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v46);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
  v21(v16, v11);
  v24 = v47 + 64;
  v25 = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  sub_150C8(v24, (uint64_t)&v51);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_387CB8, v29 + 16, v26 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v16, v11);
  sub_F4D8(&v51, v30 + v28);
  v31 = (_QWORD *)(v30 + v29);
  v32 = v49;
  *v31 = v48;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0970);
  v33 = swift_bridgeObjectRetain();
  v34 = Promise.__allocating_init()(v33);
  v35 = type metadata accessor for TaskPriority(0);
  v36 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v50, 1, 1, v35);
  v37 = (_QWORD *)swift_allocObject(&unk_387CE0, 56, 7);
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = &unk_3C0968;
  v37[5] = v30;
  v37[6] = v34;
  swift_retain();
  v38 = sub_1C91F0(v36, (uint64_t)&unk_3C0980, (uint64_t)v37);
  swift_release(v38);
  v39 = sub_676C8();
  v40 = static OS_dispatch_queue.main.getter(v39);
  v52 = v39;
  v53 = &protocol witness table for OS_dispatch_queue;
  *(_QWORD *)&v51 = v40;
  v41 = type metadata accessor for GroupedSearchResultsPage(0);
  v42 = Promise.map<A>(on:_:)(&v51, sub_1C6FF4, 0, v41);
  swift_release(v34);
  v21(v25, v11);
  __swift_destroy_boxed_opaque_existential_1(&v51);
  return v42;
}

uint64_t sub_1C5B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1C5B60, 0, 0);
}

uint64_t sub_1C5B60()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t ActionIntent;
  uint64_t v9;

  v2 = v0[3];
  v1 = (_QWORD *)v0[4];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  ActionIntent = type metadata accessor for FetchActionIntent(0);
  v9 = sub_F1C0(&qword_3BB460, (void (*)(uint64_t))type metadata accessor for FetchActionIntent, (uint64_t)&protocol conformance descriptor for FetchActionIntent);
  *v7 = v0;
  v7[1] = sub_1C5C44;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[2], v0[5], v4, ActionIntent, v9, v5, v6);
}

uint64_t sub_1C5C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C5CDC;
  else
    v3 = sub_1C5CA8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C5CA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C5CDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C5D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_1C5D28, 0, 0);
}

uint64_t sub_1C5D28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v0[3];
  v1 = (_QWORD *)v0[4];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[5] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[6] = v7;
  v8 = sub_12672C();
  *v7 = v0;
  v7[1] = sub_1C5DEC;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v9, v4, &type metadata for UpNextScoringWeightsIntent, v8, v5, v6);
}

uint64_t sub_1C5DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C5E84;
  else
    v3 = sub_1C5E50;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C5E50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C5E84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C5EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = a3;
  return swift_task_switch(sub_1C5ED4, 0, 0);
}

uint64_t sub_1C5ED4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = sub_14118();
  *v7 = v0;
  v7[1] = sub_1C5FA8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0 + 3, v4, &type metadata for FromChannelShelvesIntent, v8, v5, v6);
}

uint64_t sub_1C5FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC71C;
  else
    v3 = sub_1CC778;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C600C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = a2;
  v4 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 112) = *(_QWORD *)(a3 + 96);
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 32) = v5;
  v6 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v3 + 64) = v6;
  return swift_task_switch(sub_1C6044, 0, 0);
}

uint64_t sub_1C6044()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[16];
  v1 = (_QWORD *)v0[17];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[18] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[19] = v7;
  v8 = sub_26FFC();
  *v7 = v0;
  v7[1] = sub_1C6118;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 15, v0 + 2, v4, &type metadata for SearchLandingPageIntent, v8, v5, v6);
}

uint64_t sub_1C6118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C61B4;
  else
    v3 = sub_1C617C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C617C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_1C61B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C61E8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 16) = a3;
  *(_WORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_1C6210, 0, 0);
}

uint64_t sub_1C6210()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_1264C8();
  *v7 = v0;
  v7[1] = sub_1C62E4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 4, v0 + 2, v4, &type metadata for ChannelPageIntent, v8, v5, v6);
}

uint64_t sub_1C62E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C6380;
  else
    v3 = sub_1C6348;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C6348()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1C6380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C63B4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 16) = a3;
  *(_BYTE *)(v4 + 24) = a4 & 1;
  *(_BYTE *)(v4 + 25) = HIBYTE(a4) & 1;
  return swift_task_switch(sub_1C63E0, 0, 0);
}

uint64_t sub_1C63E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_1266E8();
  *v7 = v0;
  v7[1] = sub_1C64B4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 4, v0 + 2, v4, &type metadata for ShowPageHeaderAndFooterShelvesIntent, v8, v5, v6);
}

uint64_t sub_1C64B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC710;
  else
    v3 = sub_1CC774;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C6518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = a3;
  return swift_task_switch(sub_1C6534, 0, 0);
}

uint64_t sub_1C6534()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = sub_97A8C();
  *v7 = v0;
  v7[1] = sub_1C5FA8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0 + 3, v4, &type metadata for ChannelUpsellInformationIntent, v8, v5, v6);
}

uint64_t sub_1C6608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = a3;
  return swift_task_switch(sub_1C6624, 0, 0);
}

uint64_t sub_1C6624()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = sub_8C0A0();
  *v7 = v0;
  v7[1] = sub_1C66F8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0 + 3, v4, &type metadata for EpisodeUpsellShelfIntent, v8, v5, v6);
}

uint64_t sub_1C66F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C5CDC;
  else
    v3 = sub_1C675C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C675C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C6790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return swift_task_switch(sub_1C67AC, 0, 0);
}

uint64_t sub_1C67AC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_8B84C();
  *v7 = v0;
  v7[1] = sub_1C62E4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 4, v0 + 2, v4, &type metadata for SharedWithYouShelfIntent, v8, v5, v6);
}

uint64_t sub_1C6880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return swift_task_switch(sub_1C689C, 0, 0);
}

uint64_t sub_1C689C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_126660();
  *v7 = v0;
  v7[1] = sub_1C64B4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 4, v0 + 2, v4, &type metadata for HighlightsPageIntent, v8, v5, v6);
}

uint64_t sub_1C6970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1C698C, 0, 0);
}

uint64_t sub_1C698C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[3];
  v1 = (_QWORD *)v0[4];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = type metadata accessor for HighlightResourceIntent(0);
  v9 = sub_F1C0(&qword_3BB4A0, (void (*)(uint64_t))type metadata accessor for HighlightResourceIntent, (uint64_t)&protocol conformance descriptor for HighlightResourceIntent);
  *v7 = v0;
  v7[1] = sub_1C6A70;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[2], v0[5], v4, v8, v9, v5, v6);
}

uint64_t sub_1C6A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC71C;
  else
    v3 = sub_1CC714;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C6AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = a3;
  return swift_task_switch(sub_1C6AF0, 0, 0);
}

uint64_t sub_1C6AF0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = sub_64910();
  *v7 = v0;
  v7[1] = sub_1C5FA8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0 + 3, v4, &type metadata for ChannelSubscriptionOffersIntent, v8, v5, v6);
}

uint64_t sub_1C6BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[3] = a3;
  return swift_task_switch(sub_1C6BE0, 0, 0);
}

uint64_t sub_1C6BE0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = sub_160C0();
  *v7 = v0;
  v7[1] = sub_1C5FA8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0 + 3, v4, &type metadata for FetchEpisodeOffersIntent, v8, v5, v6);
}

uint64_t sub_1C6CB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 16) = a3;
  *(_BYTE *)(v4 + 24) = a4;
  return swift_task_switch(sub_1C6CD4, 0, 0);
}

uint64_t sub_1C6CD4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_FC0E4();
  *v7 = v0;
  v7[1] = sub_1C62E4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 4, v0 + 2, v4, &type metadata for EpisodePageFooterShelvesIntent, v8, v5, v6);
}

uint64_t sub_1C6DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a1;
  v3[6] = a2;
  v3[4] = a3;
  return swift_task_switch(sub_1C6DC4, 0, 0);
}

uint64_t sub_1C6DC4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_1265D8();
  *v7 = v0;
  v7[1] = sub_1C6E98;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0 + 4, v4, &type metadata for FetchSmartPlayEpisodeAdamIDIntent, v8, v5, v6);
}

uint64_t sub_1C6E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C6380;
  else
    v3 = sub_1C6EFC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C6EFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1C6F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_267BC(a1, a2, &qword_3B3248);
}

uint64_t sub_1C6F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_267BC(a1, a2, &qword_3BD000);
}

uint64_t sub_1C6F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14510(a1, a2, type metadata accessor for SearchHintsPage);
}

uint64_t sub_1C6FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14510(a1, a2, type metadata accessor for HighlightResource);
}

uint64_t sub_1C6FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14510(a1, a2, type metadata accessor for GroupedSearchResultsPage);
}

uint64_t sub_1C7024()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  _QWORD v47[5];

  v45 = *v0;
  v1 = type metadata accessor for DispatchQoS.QoSClass(0);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v1;
  __chkstk_darwin(v1);
  v42 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyIntentTypes(0, v4);
  v38 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - v14;
  __chkstk_darwin(v16);
  v41 = (char *)&v36 - v17;
  v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v19 = String._bridgeToObjectiveC()();
  v46 = v18;
  LODWORD(v18) = objc_msgSend(v18, "BOOLForKey:", v19);

  if ((_DWORD)v18)
  {
    JSONContext.init()(v20);
    JSONContext.withActionKinds()((uint64_t)v15);
    v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    v21((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    v37 = v21;
    v22 = sub_126124();
    v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
    static JSONContext.Property<A>.intentTypes.getter(v23);
    v24 = v41;
    JSONContext.addingValue<A>(_:forProperty:)(v9, v6, v7);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v40);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v7);
    v21(v15, v10);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A60);
    v25 = sub_676C8();
    v26 = v42;
    v27 = v43;
    v28 = v44;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, enum case for DispatchQoS.QoSClass.default(_:), v44);
    v29 = static OS_dispatch_queue.global(qos:)(v26);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
    v47[3] = v25;
    v47[4] = &protocol witness table for OS_dispatch_queue;
    v47[0] = v29;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v24, v10);
    v30 = *(unsigned __int8 *)(v11 + 80);
    v31 = (v30 + 16) & ~v30;
    v32 = (v12 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject(&unk_387F10, v32 + 8, v30 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v33 + v31, v15, v10);
    *(_QWORD *)(v33 + v32) = v45;
    v34 = Promise.init(on:_:)(v47, sub_1CB510, v33);

    v37(v24, v10);
  }
  else
  {

    return 0;
  }
  return v34;
}

uint64_t sub_1C73A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  id v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t result;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD v52[4];
  uint64_t *v53;

  v50 = a1;
  v53 = a2;
  v3 = type metadata accessor for JSONContext(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v51 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - v10;
  v12 = type metadata accessor for JSONObject(0);
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  __chkstk_darwin(v12);
  v44 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v45 = (char *)&v44 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v44 - v23;
  v25 = objc_msgSend((id)objc_opt_self(MTConstants), "sharedDocumentsDirectory");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

  URL.appendingPathComponent(_:)(0xD000000000000016, 0x8000000000313130);
  v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v8, v5);
  v27 = Data.init(contentsOf:options:)(v11, 0);
  if (v2)
  {
    v26(v11, v5);
    swift_errorRelease(v2);
    v28 = objc_allocWithZone((Class)NSError);
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "initWithDomain:code:userInfo:", v29, 0, 0);

    return swift_willThrow(v30);
  }
  else
  {
    JSONObject.init(deserializing:)(v27);
    v26(v11, v5);
    v32 = v46;
    v31 = v47;
    v33 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v33(v21, v18, v47);
    v33(v24, v21, v31);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A68);
    v35 = swift_allocObject(v34, 64, 7);
    *(_OWORD *)(v35 + 16) = xmmword_2EA0D0;
    JSONObject.untyped.getter((_QWORD *)(v35 + 32), v35);
    v52[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0A70);
    v52[0] = v35;
    v36 = v45;
    JSONObject.init(wrapping:)(v52);
    v37 = v44;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v44, v36, v31);
    v38 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v51, v50, v49);
    v39 = type metadata accessor for Shelf(0);
    v40 = sub_F1C0((unint64_t *)&qword_3B0AE0, (void (*)(uint64_t))type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
    v41 = Array<A>.init(tryDeserializing:using:)(v37, v38, v39, v40);
    v42 = *(void (**)(char *, uint64_t))(v32 + 8);
    v42(v36, v31);
    result = ((uint64_t (*)(char *, uint64_t))v42)(v24, v31);
    *v53 = v41;
  }
  return result;
}

uint64_t sub_1C774C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_150C8(a1, a2);
}

uint64_t sub_1C7774@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C7788(a1, a2);
}

uint64_t sub_1C7788@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = type metadata accessor for HighlightResource(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_14510(a1, (uint64_t)v6, type metadata accessor for HighlightResource);
  v8 = *v6;
  v7 = v6[1];
  v9 = v6[2];
  swift_bridgeObjectRetain();
  sub_145D8((uint64_t)v6, type metadata accessor for HighlightResource);
  v10 = type metadata accessor for HighlightIdentifier();
  result = swift_allocObject(v10, 41, 7);
  *(_QWORD *)(result + 16) = v8;
  *(_QWORD *)(result + 24) = v7;
  *(_QWORD *)(result + 32) = v9;
  *(_BYTE *)(result + 40) = 0;
  *a2 = result;
  return result;
}

uint64_t sub_1C7858(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v3 = a1[1];
  v4 = a1[3];
  v19 = a1[2];
  v20 = *a1;
  v17 = *((_BYTE *)a1 + 33);
  v18 = *((_BYTE *)a1 + 32);
  v16 = *((_BYTE *)a1 + 34);
  v6 = a1[5];
  v5 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  v10 = a1[10];
  v23 = a1[12];
  v24 = a1[11];
  v11 = sub_1C7024();
  if (v11)
    return v11;
  *(_QWORD *)&v28 = v20;
  *((_QWORD *)&v28 + 1) = v3;
  v29 = v19;
  v30 = v4;
  v31 = v18;
  v32 = v17;
  v33 = v16;
  v34 = v6;
  v35 = v5;
  v36 = v7;
  v37 = v8;
  v38 = v9;
  v39 = v10;
  v40 = v24;
  v41 = v23;
  v42 = a2 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1C19C8(&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_150C8(v2 + 16, (uint64_t)&v25);
  v13 = swift_allocObject(&unk_387E98, 56, 7);
  sub_F4D8(&v25, v13 + 16);
  v26 = type metadata accessor for SyncTaskScheduler(0);
  v27 = &protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(&v25);
  SyncTaskScheduler.init()();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0AD8);
  v12 = Promise.map<A>(on:_:)(&v25, sub_1CB268, v13, v14);
  swift_release(v22);
  swift_release(v13);
  __swift_destroy_boxed_opaque_existential_1(&v25);
  return v12;
}

uint64_t sub_1C7A7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = a2[3];
  v6 = a2[4];
  v7 = __swift_project_boxed_opaque_existential_1(a2, v5);
  StoreDataCache.setObject(_:forKey:)(a1, (uint64_t)v7, v5, v6);
  *a3 = *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BD000) + 36));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C7AF8()
{
  return ExplicitContentPresenter.symbol.getter();
}

uint64_t sub_1C7B1C(uint64_t a1, char a2)
{
  uint64_t ActionIntent;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  ActionIntent = type metadata accessor for FetchActionIntent(0);
  __chkstk_darwin(ActionIntent);
  v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  v6[*(int *)(ActionIntent + 20)] = a2;
  v8 = sub_1C0AF4((uint64_t)v6);
  v13[3] = type metadata accessor for SyncTaskScheduler(0);
  v13[4] = &protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(v13);
  SyncTaskScheduler.init()();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2E40);
  v10 = Promise.map<A>(on:_:)(v13, sub_1C774C, 0, v9);
  swift_release(v8);
  __swift_destroy_boxed_opaque_existential_1(v13);
  sub_145D8((uint64_t)v6, type metadata accessor for FetchActionIntent);
  return v10;
}

uint64_t sub_1C7C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C7CBC(a1, a2, a3, sub_1C164C);
}

uint64_t sub_1C7C44(uint64_t a1, char a2)
{
  return sub_1C294C(a1, a2 & 1 | 0x100u);
}

uint64_t sub_1C7C70(uint64_t a1)
{
  return sub_1C4668(a1);
}

uint64_t sub_1C7C90(uint64_t a1)
{
  return sub_1C3078(a1);
}

uint64_t sub_1C7CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C7CBC(a1, a2, a3, sub_1C49DC);
}

uint64_t sub_1C7CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_bridgeObjectRetain(a1);
  v7 = a4(v6);
  swift_bridgeObjectRelease(a1);
  return v7;
}

uint64_t sub_1C7D00(uint64_t a1, int a2)
{
  return sub_1C4D58(a1, a2);
}

uint64_t sub_1C7D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];

  v1 = sub_1C50DC(a1);
  v5[3] = type metadata accessor for SyncTaskScheduler(0);
  v5[4] = &protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(v5);
  SyncTaskScheduler.init()();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2E40);
  v3 = Promise.map<A>(on:_:)(v5, sub_1C774C, 0, v2);
  swift_release(v1);
  __swift_destroy_boxed_opaque_existential_1(v5);
  return v3;
}

uint64_t sub_1C7DAC(uint64_t a1)
{
  return sub_1C33E8(a1);
}

uint64_t sub_1C7DCC(uint64_t a1)
{
  return sub_1C5450(a1);
}

uint64_t sub_1C7DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C80B8(a1, a2, a3, a4, sub_1C3EE0);
}

uint64_t sub_1C7DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v16[5];

  v4 = type metadata accessor for HighlightResourceIntent(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 20)];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  *(_QWORD *)&v6[*(int *)(v4 + 24)] = a2;
  swift_bridgeObjectRetain();
  v11 = sub_1C4270((uint64_t)v6);
  v16[3] = type metadata accessor for SyncTaskScheduler(0);
  v16[4] = &protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(v16);
  SyncTaskScheduler.init()();
  v12 = type metadata accessor for HighlightIdentifier();
  v13 = Promise.map<A>(on:_:)(v16, sub_1C7774, 0, v12);
  swift_release(v11);
  __swift_destroy_boxed_opaque_existential_1(v16);
  sub_145D8((uint64_t)v6, type metadata accessor for HighlightResourceIntent);
  return v13;
}

uint64_t sub_1C7F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[5];

  v4 = type metadata accessor for HighlightResourceIntent(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = a1;
  v6[8] = 0;
  v8 = &v6[*(int *)(v7 + 20)];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)&v6[*(int *)(v4 + 24)] = a2;
  swift_bridgeObjectRetain();
  v10 = sub_1C4270((uint64_t)v6);
  v15[3] = type metadata accessor for SyncTaskScheduler(0);
  v15[4] = &protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(v15);
  SyncTaskScheduler.init()();
  v11 = type metadata accessor for HighlightIdentifier();
  v12 = Promise.map<A>(on:_:)(v15, sub_1C7774, 0, v11);
  swift_release(v10);
  __swift_destroy_boxed_opaque_existential_1(v15);
  sub_145D8((uint64_t)v6, type metadata accessor for HighlightResourceIntent);
  return v12;
}

uint64_t sub_1C808C(uint64_t *a1, char a2)
{
  return sub_1C7858(a1, a2);
}

uint64_t sub_1C80AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C80B8(a1, a2, a3, a4, sub_1C3B50);
}

uint64_t sub_1C80B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;

  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v8 = a5(a1, a2);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  return v8;
}

uint64_t sub_1C8118()
{
  return sub_1C12E8();
}

uint64_t sub_1C8138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8170(a1, a2, a3, type metadata accessor for FetchMoreOfPageIntent, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for JSONObject, (uint64_t (*)(char *))sub_1C2554);
}

uint64_t sub_1C8154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8170(a1, a2, a3, type metadata accessor for FetchPageIntent, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for URL, (uint64_t (*)(char *))sub_1C3758);
}

uint64_t sub_1C8170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, __n128), uint64_t (*a6)(char *))
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v10 = a4(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v17 - v12;
  v14 = a5(0, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v15 = a6(v13);
  sub_145D8((uint64_t)v13, a4);
  return v15;
}

uint64_t sub_1C821C(uint64_t a1, char a2, char a3)
{
  int v3;

  if ((a3 & 1) != 0)
    v3 = 256;
  else
    v3 = 0;
  return sub_1C2CE0(a1, v3 & 0xFFFFFFFE | a2 & 1);
}

uint64_t sub_1C8250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  v4 = sub_1C57C4(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C82A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  v4 = sub_1C1DD0(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C82F0(uint64_t *a1)
{
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v14 = a1[3];
  v15 = *a1;
  v1 = *((_BYTE *)a1 + 32);
  v2 = *((_BYTE *)a1 + 33);
  v3 = *((_BYTE *)a1 + 34);
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v11 = a1[11];
  v10 = a1[12];
  v16 = *(_OWORD *)(a1 + 1);
  v17 = v14;
  v18 = v1;
  v19 = v2;
  v20 = v3;
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v11;
  v28 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1C2150((__int128 *)&v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C8438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8170(a1, a2, a3, type metadata accessor for FetchShelfIntent, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for URL, (uint64_t (*)(char *))sub_1C0EF0);
}

uint64_t sub_1C8454(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 56) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 64) = v7;
  *v7 = v6;
  v7[1] = sub_1C84BC;
  return v9(v6 + 16);
}

uint64_t sub_1C84BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C8568;
  else
    v3 = sub_1C8520;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8520()
{
  uint64_t v0;

  Promise.resolve(_:)(v0 + 16);
  sub_1459C(v0 + 16, &qword_3B3248);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C8568()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C85A8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1C8610;
  return v9(v6 + 16);
}

uint64_t sub_1C8610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C86B0;
  else
    v3 = sub_1C8674;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8674()
{
  uint64_t v0;

  Promise.resolve(_:)(v0 + 16);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C86B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C86F0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1C8758;
  return v9(v6 + 16);
}

uint64_t sub_1C8758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC784;
  else
    v3 = sub_1CC788;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C87BC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1C8824;
  return v9(v6 + 16);
}

uint64_t sub_1C8824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC784;
  else
    v3 = sub_1C8888;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8888()
{
  uint64_t v0;

  Promise.resolve(_:)(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C88C4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BD000);
  v9 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[3] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_1C8958;
  return v12(v9);
}

uint64_t sub_1C8958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC718;
  else
    v3 = sub_1C89BC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C89BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  Promise.resolve(_:)(v1);
  sub_1459C(v1, &qword_3BD000);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C8A08(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = type metadata accessor for SearchHintsPage(0);
  v9 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[3] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_1C8A98;
  return v12(v9);
}

uint64_t sub_1C8A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C8B48;
  else
    v3 = sub_1C8AFC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8AFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  Promise.resolve(_:)(v1);
  sub_145D8(v1, type metadata accessor for SearchHintsPage);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C8B48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C8B90(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1C8BF8;
  return v9(v6 + 16);
}

uint64_t sub_1C8BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC784;
  else
    v3 = sub_1C8C5C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8C5C()
{
  uint64_t v0;

  Promise.resolve(_:)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C8C98(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1C8D00;
  return v9(v6 + 16);
}

uint64_t sub_1C8D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC784;
  else
    v3 = sub_1CC78C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8D64(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = type metadata accessor for HighlightResource(0);
  v9 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[3] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_1C8DF4;
  return v12(v9);
}

uint64_t sub_1C8DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC718;
  else
    v3 = sub_1C8E58;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8E58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  Promise.resolve(_:)(v1);
  sub_145D8(v1, type metadata accessor for HighlightResource);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C8EA4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 24) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_1C8F0C;
  return v9(v6 + 16);
}

uint64_t sub_1C8F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC784;
  else
    v3 = sub_1CC790;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C8F70(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 32) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 40) = v7;
  *v7 = v6;
  v7[1] = sub_1C8FD8;
  return v9(v6 + 16);
}

uint64_t sub_1C8FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C9070;
  else
    v3 = sub_1C903C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C903C()
{
  uint64_t v0;

  Promise.resolve(_:)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C9070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  Promise.reject(_:)(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C90B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = type metadata accessor for GroupedSearchResultsPage(0);
  v9 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[3] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_1C9140;
  return v12(v9);
}

uint64_t sub_1C9140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC718;
  else
    v3 = sub_1C91A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C91A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  Promise.resolve(_:)(v1);
  sub_145D8(v1, type metadata accessor for GroupedSearchResultsPage);
  swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C91F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1459C(a1, &qword_3B5978);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_387BF0, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_3C0900, v16);
}

uint64_t sub_1C933C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C93A0;
  return v6(a1);
}

uint64_t sub_1C93A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C93EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch(sub_1C9408, 0, 0);
}

uint64_t sub_1C9408()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t ShelfIntent;
  uint64_t v9;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  ShelfIntent = type metadata accessor for FetchShelfIntent(0);
  v9 = sub_F1C0(&qword_3BB480, (void (*)(uint64_t))type metadata accessor for FetchShelfIntent, (uint64_t)&protocol conformance descriptor for FetchShelfIntent);
  *v7 = v0;
  v7[1] = sub_1C94F8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0[6], v4, ShelfIntent, v9, v5, v6);
}

uint64_t sub_1C94F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC710;
  else
    v3 = sub_1CC780;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C955C()
{
  return objectdestroyTm_6(type metadata accessor for FetchShelfIntent, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1C9570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FetchShelfIntent(0) - 8) + 80);
  v8 = (v6 + v7 + 40) & ~v7;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = v1 + v8;
  v12 = (_QWORD *)swift_task_alloc(dword_3C08D4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C08D0 + dword_3C08D0))(a1, v9, v10, v11);
}

uint64_t sub_1C963C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C08EC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C08E8
                                                                                     + dword_3C08E8))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C96D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1C96F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_3C08FC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_3C08F8 + dword_3C08F8))(a1, v4);
}

uint64_t sub_1C9764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_3C0A14);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1CC77C;
  v6[3] = a2;
  v6[4] = a3;
  return swift_task_switch(sub_1C5D28, 0, 0);
}

uint64_t sub_1C97CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = (_QWORD *)swift_task_alloc(dword_3C0C2C);
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CC77C;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = v7;
  return swift_task_switch(sub_1C5ED4, 0, 0);
}

uint64_t sub_1C9844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  __int128 v9;

  *(_QWORD *)(v4 + 136) = a2;
  *(_QWORD *)(v4 + 144) = a3;
  *(_QWORD *)(v4 + 128) = a1;
  v5 = *(_BYTE *)(a4 + 32);
  v6 = *(_BYTE *)(a4 + 33);
  v7 = *(_BYTE *)(a4 + 34);
  v8 = *(_BYTE *)(a4 + 104);
  v9 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  *(_BYTE *)(v4 + 48) = v5;
  *(_BYTE *)(v4 + 49) = v6;
  *(_BYTE *)(v4 + 50) = v7;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a4 + 40);
  *(_OWORD *)(v4 + 72) = *(_OWORD *)(a4 + 56);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)(a4 + 72);
  *(_OWORD *)(v4 + 104) = *(_OWORD *)(a4 + 88);
  *(_BYTE *)(v4 + 120) = v8;
  return swift_task_switch(sub_1C98A8, 0, 0);
}

uint64_t sub_1C98A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[17];
  v1 = (_QWORD *)v0[18];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[19] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[20] = v7;
  v8 = sub_1266A4();
  *v7 = v0;
  v7[1] = sub_1C9970;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[16], v0 + 2, v4, &type metadata for RecommendationsShelvesIntent, v8, v5, v6);
}

uint64_t sub_1C9970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C9A08;
  else
    v3 = sub_1C99D4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C99D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C9A08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C9A3C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a2;
  v4[6] = a3;
  v5 = a4[1];
  v4[2] = *a4;
  v4[3] = v5;
  v4[4] = a1;
  return swift_task_switch(sub_1C9A60, 0, 0);
}

uint64_t sub_1C9A60()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_3306C();
  *v7 = v0;
  v7[1] = sub_1C9B28;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[4], v0 + 2, v4, &type metadata for SearchHintsPageIntent, v8, v5, v6);
}

uint64_t sub_1C9B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C6380;
  else
    v3 = sub_1C9B8C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1C9B8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C9BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v7 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v7;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(a4 + 96);
  *(_QWORD *)(v4 + 120) = a1;
  v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v9;
  v10 = swift_task_alloc(dword_3C0934);
  *(_QWORD *)(v4 + 128) = v10;
  *(_QWORD *)v10 = v4;
  *(_QWORD *)(v10 + 8) = sub_1C9C6C;
  *(_QWORD *)(v10 + 128) = a2;
  *(_QWORD *)(v10 + 136) = a3;
  v11 = *(_OWORD *)(v4 + 64);
  v12 = *(_OWORD *)(v4 + 80);
  v13 = *(_OWORD *)(v4 + 96);
  *(_QWORD *)(v10 + 112) = *(_QWORD *)(v4 + 112);
  *(_OWORD *)(v10 + 80) = v12;
  *(_OWORD *)(v10 + 96) = v13;
  *(_OWORD *)(v10 + 64) = v11;
  v14 = *(_OWORD *)(v4 + 16);
  v15 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v10 + 48) = v15;
  *(_OWORD *)(v10 + 16) = v14;
  return swift_task_switch(sub_1C6044, 0, 0);
}

uint64_t sub_1C9C6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 128);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 120) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1C9CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 104, v5);
}

uint64_t sub_1C9DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_3C090C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C0908 + dword_3C0908))(a1, v7, v8, v9);
}

uint64_t sub_1C9E58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0924);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0920
                                                                                     + dword_3C0920))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C093C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))((char *)&dword_3C0938 + dword_3C0938))(a1, v7, v8, v9);
}

uint64_t sub_1C9FA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0954);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0950
                                                                                     + dword_3C0950))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CA03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch(sub_1CA058, 0, 0);
}

uint64_t sub_1CA058()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t MoreOfPageIntent;
  uint64_t v9;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  MoreOfPageIntent = type metadata accessor for FetchMoreOfPageIntent(0);
  v9 = sub_F1C0(&qword_3B72D8, (void (*)(uint64_t))type metadata accessor for FetchMoreOfPageIntent, (uint64_t)&protocol conformance descriptor for FetchMoreOfPageIntent);
  *v7 = v0;
  v7[1] = sub_1CA148;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0[6], v4, MoreOfPageIntent, v9, v5, v6);
}

uint64_t sub_1CA148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1C6380;
  else
    v3 = sub_1CA1AC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1CA1AC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 56));
  *v1 = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = *((_WORD *)a4 + 4);
  v9 = swift_task_alloc(dword_3C0C0C);
  *(_QWORD *)(v4 + 24) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_81DB0;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 48) = a3;
  *(_QWORD *)(v9 + 16) = v7;
  *(_WORD *)(v9 + 24) = v8;
  return swift_task_switch(sub_1C6210, 0, 0);
}

uint64_t sub_1CA26C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1CA288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = *((_BYTE *)a4 + 8);
  v9 = *((_BYTE *)a4 + 9);
  v10 = swift_task_alloc(dword_3C09B4);
  *(_QWORD *)(v4 + 24) = v10;
  *(_QWORD *)v10 = v4;
  *(_QWORD *)(v10 + 8) = sub_1CC77C;
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)(v10 + 48) = a3;
  *(_QWORD *)(v10 + 16) = v7;
  *(_BYTE *)(v10 + 24) = v8;
  *(_BYTE *)(v10 + 25) = v9;
  return swift_task_switch(sub_1C63E0, 0, 0);
}

uint64_t sub_1CA318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = (_QWORD *)swift_task_alloc(dword_3C0BBC);
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CC77C;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = v7;
  return swift_task_switch(sub_1C6534, 0, 0);
}

uint64_t sub_1CA390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = (_QWORD *)swift_task_alloc(dword_3C0B0C);
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CC77C;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = v7;
  return swift_task_switch(sub_1C6624, 0, 0);
}

id sub_1CA408@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t sub_1CA434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch(sub_1CA450, 0, 0);
}

uint64_t sub_1CA450()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t PageIntent;
  uint64_t v9;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  PageIntent = type metadata accessor for FetchPageIntent(0);
  v9 = sub_F1C0(&qword_3BB468, (void (*)(uint64_t))type metadata accessor for FetchPageIntent, (uint64_t)&protocol conformance descriptor for FetchPageIntent);
  *v7 = v0;
  v7[1] = sub_1C94F8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 2, v0[6], v4, PageIntent, v9, v5, v6);
}

uint64_t sub_1CA540(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a1;
  v8 = swift_task_alloc(dword_3C0A34);
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_1CC77C;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = a3;
  *(_OWORD *)(v8 + 16) = *a4;
  return swift_task_switch(sub_1C67AC, 0, 0);
}

uint64_t sub_1CA5BC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a1;
  v8 = swift_task_alloc(dword_3C0ABC);
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_1CC77C;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = a3;
  *(_OWORD *)(v8 + 16) = *a4;
  return swift_task_switch(sub_1C689C, 0, 0);
}

uint64_t sub_1CA638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = (_QWORD *)swift_task_alloc(dword_3C0BEC);
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CC77C;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = v7;
  return swift_task_switch(sub_1C6AF0, 0, 0);
}

uint64_t sub_1CA6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = (_QWORD *)swift_task_alloc(dword_3C0B8C);
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CC77C;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = v7;
  return swift_task_switch(sub_1C6BE0, 0, 0);
}

uint64_t sub_1CA728@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_1CA744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = *((_BYTE *)a4 + 8);
  v9 = swift_task_alloc(dword_3C0B5C);
  *(_QWORD *)(v4 + 24) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_1CC77C;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 48) = a3;
  *(_QWORD *)(v9 + 16) = v7;
  *(_BYTE *)(v9 + 24) = v8;
  return swift_task_switch(sub_1C6CD4, 0, 0);
}

uint64_t sub_1CA7C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;

  v4[4] = a2;
  v4[5] = a3;
  v4[2] = *a4;
  v4[3] = a1;
  return swift_task_switch(sub_1CA7E4, 0, 0);
}

uint64_t sub_1CA7E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[4];
  v1 = (_QWORD *)v0[5];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[6] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v7;
  v8 = sub_12650C();
  *v7 = v0;
  v7[1] = sub_1C5C44;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[3], v0 + 2, v4, &type metadata for EpisodeUpsellActionIntent, v8, v5, v6);
}

uint64_t sub_1CA8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *a4;
  v8 = (_QWORD *)swift_task_alloc(dword_3C0AEC);
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CA924;
  v8[5] = a2;
  v8[6] = a3;
  v8[4] = v7;
  return swift_task_switch(sub_1C6DC4, 0, 0);
}

uint64_t sub_1CA924(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 24);
  v8 = *v3;
  swift_task_dealloc(v7);
  if (!v2)
  {
    v9 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)v9 = a1;
    *(_BYTE *)(v9 + 8) = a2 & 1;
  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_1CA98C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1CA9A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a2;
  v4[6] = a3;
  v5 = a4[1];
  v4[2] = *a4;
  v4[3] = v5;
  v4[4] = a1;
  return swift_task_switch(sub_1CA9C4, 0, 0);
}

uint64_t sub_1CA9C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  type metadata accessor for IntentDispatchOptions(0);
  v3 = IntentDispatchOptions.__allocating_init()();
  v4 = IntentDispatchOptions.withJSONContext(_:)(v2);
  v0[7] = v4;
  swift_release(v3);
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[8] = v7;
  v8 = sub_12661C();
  *v7 = v0;
  v7[1] = sub_1CAA8C;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[4], v0 + 2, v4, &type metadata for GroupedSearchResultsIntent, v8, v5, v6);
}

uint64_t sub_1CAA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1CC710;
  else
    v3 = sub_1CC720;
  return swift_task_switch(v3, 0, 0);
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_1CAB84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0964);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))((char *)&dword_3C0960 + dword_3C0960))(a1, v7, v8, v9);
}

uint64_t sub_1CAC3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C097C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0978
                                                                                     + dword_3C0978))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CACD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C098C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0988 + dword_3C0988))(a1, v7, v8, v9);
}

uint64_t sub_1CAD8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C09A4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C09A0
                                                                                     + dword_3C09A0))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CAE20()
{
  return objectdestroyTm_6(type metadata accessor for FetchPageIntent, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1CAE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FetchPageIntent(0) - 8) + 80);
  v8 = (v6 + v7 + 40) & ~v7;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = v1 + v8;
  v12 = (_QWORD *)swift_task_alloc(dword_3C09BC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C09B8 + dword_3C09B8))(a1, v9, v10, v11);
}

uint64_t sub_1CAF00()
{
  return objectdestroyTm_6(type metadata accessor for FetchMoreOfPageIntent, (uint64_t (*)(_QWORD))&type metadata accessor for JSONObject);
}

uint64_t sub_1CAF14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FetchMoreOfPageIntent(0) - 8) + 80);
  v8 = (v6 + v7 + 40) & ~v7;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = v1 + v8;
  v12 = (_QWORD *)swift_task_alloc(dword_3C09D4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C09D0 + dword_3C09D0))(a1, v9, v10, v11);
}

uint64_t sub_1CAFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_1CB054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)swift_task_alloc(dword_3C09EC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_3C09E8 + dword_3C09E8))(a1, v6, v7);
}

uint64_t sub_1CB0F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0A04);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0A00
                                                                                     + dword_3C0A00))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CB18C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (_OWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0A1C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_3C0A18 + dword_3C0A18))(a1, v7, v8, v9);
}

uint64_t sub_1CB244()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1CB268@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C7A7C(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1CB280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 105, v5);
}

uint64_t sub_1CB358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_3C0A3C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_3C0A38 + dword_3C0A38))(a1, v7, v8, v9);
}

uint64_t sub_1CB410(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0A54);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0A50
                                                                                     + dword_3C0A50))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CB4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1CB510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSONContext(0) - 8) + 80);
  return sub_1C73A0(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1CB56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for HighlightResourceIntent(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 40) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v5));
  v11 = v0 + v9 + *(int *)(v6 + 20);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_1CB674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HighlightResourceIntent(0) - 8) + 80);
  v8 = v6 + v7 + 40;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_3C0A7C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_F2ED0;
  v12[4] = v10;
  v12[5] = v11;
  v12[2] = a1;
  v12[3] = v9;
  return swift_task_switch(sub_1C698C, 0, 0);
}

uint64_t sub_1CB734(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0A94);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0A90
                                                                                     + dword_3C0A90))(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_98Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_1CB864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (_OWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0AA4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_3C0AA0 + dword_3C0AA0))(a1, v7, v8, v9);
}

uint64_t sub_1CB920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0AC4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0AC0 + dword_3C0AC0))(a1, v7, v8, v9);
}

uint64_t sub_1CB9D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0ADC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_43684;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0AD8
                                                                                     + dword_3C0AD8))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CBA70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0AF4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0AF0 + dword_3C0AF0))(a1, v7, v8, v9);
}

uint64_t sub_1CBB2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0B14);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))((char *)&dword_3C0B10 + dword_3C0B10))(a1, v7, v8, v9);
}

uint64_t sub_1CBBE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0B2C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0B28
                                                                                     + dword_3C0B28))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CBC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 9, v5);
}

uint64_t sub_1CBCF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0B3C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0B38 + dword_3C0B38))(a1, v7, v8, v9);
}

uint64_t sub_1CBDAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0B4C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0B48
                                                                                     + dword_3C0B48))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CBE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0B64);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0B60 + dword_3C0B60))(a1, v7, v8, v9);
}

uint64_t sub_1CBEFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0B7C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0B78
                                                                                     + dword_3C0B78))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CBF94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0B94);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0B90 + dword_3C0B90))(a1, v7, v8, v9);
}

uint64_t sub_1CC04C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0BAC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0BA8
                                                                                     + dword_3C0BA8))(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_152Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1CC160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0BC4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0BC0 + dword_3C0BC0))(a1, v7, v8, v9);
}

uint64_t sub_1CC218(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_3C0BDC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_3C0BD8
                                                                                     + dword_3C0BD8))(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_50Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 10, v5);
}

uint64_t sub_1CC32C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0BF4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_43684;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0BF0 + dword_3C0BF0))(a1, v7, v8, v9);
}

uint64_t objectdestroy_202Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1CC474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = (uint64_t *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_3C0C14);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_F2ED0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_3C0C10 + dword_3C0C10))(a1, v7, v8, v9);
}

uint64_t sub_1CC52C()
{
  return objectdestroyTm_6(type metadata accessor for FetchActionIntent, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t objectdestroyTm_6(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = type metadata accessor for JSONContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(a1(0) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v9 + v11 + 40) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 64);
  v14 = v7 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v2 + v9));
  v15 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v2 + v12, v15);
  return swift_deallocObject(v2, v13, v14);
}

uint64_t sub_1CC61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for JSONContext(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FetchActionIntent(0) - 8) + 80);
  v8 = v6 + v7 + 40;
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_3C0C34);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_F2ED0;
  v12[4] = v10;
  v12[5] = v11;
  v12[2] = a1;
  v12[3] = v9;
  return swift_task_switch(sub_1C5B60, 0, 0);
}

uint64_t objectdestroy_3Tm_0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1CC724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C6F34(a1, a2);
}

uint64_t sub_1CC738@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CA26C(a1, a2);
}

id sub_1CC74C@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  return sub_1CA408(a1, a2);
}

uint64_t sub_1CC760@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CA728(a1, a2);
}

uint64_t static ActionMenu.Child.item(id:title:icon:role:state:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  _BYTE v31[40];

  v27 = a1;
  v28 = a3;
  v29 = a7 & 1;
  v30 = a6;
  v14 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC(a5, (uint64_t)v19, &qword_3BEB70);
  sub_267BC(a8, (uint64_t)v31, &qword_3B0C50);
  v20 = (uint64_t)v16 + v14[6];
  v21 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = v14[7];
  *((_BYTE *)v16 + v22) = 2;
  v23 = (uint64_t)v16 + v14[9];
  *(_QWORD *)(v23 + 32) = 0;
  *(_OWORD *)v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *v16 = v27;
  v16[1] = a2;
  v16[2] = v28;
  v16[3] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454((uint64_t)v19, v20, &qword_3BEB70);
  v24 = v29;
  *((_BYTE *)v16 + v22) = v30;
  *((_BYTE *)v16 + v14[8]) = v24;
  sub_3C454((uint64_t)v31, v23, &qword_3B0C50);
  sub_3C56C((uint64_t)v16, a9, type metadata accessor for ActionMenu.Item);
  v25 = type metadata accessor for ActionMenu.Child(0);
  return swift_storeEnumTagMultiPayload(a9, v25, 0);
}

uint64_t static ActionMenu.Child.submenu(id:title:subtitle:icon:children:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a5;
  v26 = a1;
  v15 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC(a7, (uint64_t)v20, &qword_3BEB70);
  v21 = (uint64_t)v17 + *(int *)(v15 + 28);
  v22 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *v17 = v26;
  v17[1] = a2;
  v17[2] = v27;
  v17[3] = a4;
  v17[4] = v28;
  v17[5] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454((uint64_t)v20, v21, &qword_3BEB70);
  *(_QWORD *)((char *)v17 + *(int *)(v15 + 32)) = a8;
  sub_3C56C((uint64_t)v17, a9, type metadata accessor for ActionMenu);
  v23 = type metadata accessor for ActionMenu.Child(0);
  return swift_storeEnumTagMultiPayload(a9, v23, 1);
}

uint64_t ActionMenu.init(id:title:subtitle:icon:children:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v17 = type metadata accessor for ActionMenu(0);
  v18 = (uint64_t)a9 + *(int *)(v17 + 28);
  v19 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  result = sub_3C454(a7, v18, &qword_3BEB70);
  *(_QWORD *)((char *)a9 + *(int *)(v17 + 32)) = a8;
  return result;
}

uint64_t sub_1CCBB0()
{
  uint64_t v0;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1018);
  result = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  off_3C0C48 = (int *)result;
  return result;
}

uint64_t sub_1CCBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1D5EFC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1CCC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1D5EFC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void ActionMenu.Child.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for ActionMenu.Child(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_171BF4(v0, (uint64_t)v5);
  v6 = (char *)sub_1CCD74 + 4 * byte_2FD178[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1CCD74()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release(v0[3]);
  return v1;
}

void sub_1CCE0C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ActionMenu.Child.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t ActionMenu.Item.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionMenu.Item(0);
  return sub_267BC(v1 + *(int *)(v3 + 24), a1, &qword_3BEB70);
}

uint64_t ActionMenu.Item.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionMenu.Item(0);
  return sub_3C454(a1, v1 + *(int *)(v3 + 24), &qword_3BEB70);
}

void (__swiftcall *ActionMenu.Item.icon.modify())()
{
  type metadata accessor for ActionMenu.Item(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionMenu.Item.role.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionMenu.Item(0) + 28));
}

uint64_t ActionMenu.Item.role.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActionMenu.Item(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (__swiftcall *ActionMenu.Item.role.modify())()
{
  type metadata accessor for ActionMenu.Item(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionMenu.Item.state.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionMenu.Item(0) + 32));
}

uint64_t ActionMenu.Item.state.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = type metadata accessor for ActionMenu.Item(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

void (__swiftcall *ActionMenu.Item.state.modify())()
{
  type metadata accessor for ActionMenu.Item(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionMenu.Item.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionMenu.Item(0);
  return sub_267BC(v1 + *(int *)(v3 + 36), a1, &qword_3B0C50);
}

uint64_t ActionMenu.Item.action.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionMenu.Item(0);
  return sub_3C454(a1, v1 + *(int *)(v3 + 36), &qword_3B0C50);
}

void (__swiftcall *ActionMenu.Item.action.modify())()
{
  type metadata accessor for ActionMenu.Item(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionMenu.Item.init(id:title:icon:role:state:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;

  v21 = a7 & 1;
  v15 = (int *)type metadata accessor for ActionMenu.Item(0);
  v16 = (uint64_t)a9 + v15[6];
  v17 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v15[7];
  *((_BYTE *)a9 + v18) = 2;
  v19 = (uint64_t)a9 + v15[9];
  *(_QWORD *)(v19 + 32) = 0;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_3C454(a5, v16, &qword_3BEB70);
  *((_BYTE *)a9 + v18) = a6;
  *((_BYTE *)a9 + v15[8]) = v21;
  return sub_3C454(a8, v19, &qword_3B0C50);
}

uint64_t type metadata accessor for ActionMenu.Item(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C0F70, (uint64_t)&nominal type descriptor for ActionMenu.Item);
}

uint64_t type metadata accessor for ActionMenu.Child(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C0EE0, (uint64_t)&nominal type descriptor for ActionMenu.Child);
}

uint64_t type metadata accessor for ActionMenu(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C0E28, (uint64_t)&nominal type descriptor for ActionMenu);
}

ShelfKit::ActionMenu::ItemRole_optional __swiftcall ActionMenu.ItemRole.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_374C00;
  return (ShelfKit::ActionMenu::ItemRole_optional)sub_1CD4EC(rawValue, v1);
}

uint64_t ActionMenu.ItemRole.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7463757274736564;
  else
    return 0x6C65636E6163;
}

uint64_t sub_1CD1D8(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x7463757274736564;
  else
    v3 = 0x6C65636E6163;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEB00000000657669;
  if (*a2)
    v5 = 0x7463757274736564;
  else
    v5 = 0x6C65636E6163;
  if (*a2)
    v6 = 0xEB00000000657669;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_1CD284()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7463757274736564;
  else
    v2 = 0x6C65636E6163;
  if (v1)
    v3 = 0xEB00000000657669;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1CD308(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7463757274736564;
  else
    v2 = 0x6C65636E6163;
  if (*v1)
    v3 = 0xEB00000000657669;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1CD368()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7463757274736564;
  else
    v2 = 0x6C65636E6163;
  if (v1)
    v3 = 0xEB00000000657669;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1CD3E8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_374C00;
  return sub_1CDABC(v2, a1, a2);
}

void sub_1CD3F4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C65636E6163;
  if (*v1)
    v2 = 0x7463757274736564;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xEB00000000657669;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CD438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1D5EB8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1CD494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1D5EB8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

ShelfKit::ActionMenu::ItemState_optional __swiftcall ActionMenu.ItemState.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_374C50;
  return (ShelfKit::ActionMenu::ItemState_optional)sub_1CD4EC(rawValue, v1);
}

uint64_t sub_1CD4EC(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  unsigned int v6;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v6 = 1;
  else
    v6 = 2;
  if (v5)
    return v6;
  else
    return 0;
}

uint64_t ActionMenu.ItemState.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 6710895;
  else
    return 28271;
}

uint64_t sub_1CD55C(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 6710895;
  else
    v3 = 28271;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE300000000000000;
  if (*a2)
    v5 = 6710895;
  else
    v5 = 28271;
  if (*a2)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_1CD5F0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 6710895;
  else
    v2 = 28271;
  if (v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE200000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1CD65C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 6710895;
  else
    v2 = 28271;
  if (*v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE200000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1CD6A4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 6710895;
  else
    v2 = 28271;
  if (v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE200000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1CD70C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_374C50;
  return sub_1CDABC(v2, a1, a2);
}

void sub_1CD718(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 28271;
  if (*v1)
    v2 = 6710895;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CD744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1D5E74();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1CD7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1D5E74();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t ActionMenu.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionMenu(0);
  return sub_267BC(v1 + *(int *)(v3 + 28), a1, &qword_3BEB70);
}

uint64_t ActionMenu.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionMenu(0);
  return sub_3C454(a1, v1 + *(int *)(v3 + 28), &qword_3BEB70);
}

void (__swiftcall *ActionMenu.icon.modify())()
{
  type metadata accessor for ActionMenu(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionMenu.children.getter()
{
  type metadata accessor for ActionMenu(0);
  return swift_bridgeObjectRetain();
}

uint64_t ActionMenu.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ActionMenu(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

void (__swiftcall *ActionMenu.children.modify())()
{
  type metadata accessor for ActionMenu(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t static ActionMenu.Child.deferred(id:factory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_1CD920(a1, a2, a3, a4, 2, a5);
}

{
  return sub_1CD920(a1, a2, a3, a4, 3, a5);
}

uint64_t sub_1CD920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  v8 = type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload(a6, v8, a5);
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1CD97C(char *a1, char *a2)
{
  return sub_1E30E0(*a1, *a2);
}

Swift::Int sub_1CD988()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 25705;
  else
    v2 = 0x646E696B24;
  if (v1)
    v3 = 0xE200000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1CD9F8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 25705;
  else
    v2 = 0x646E696B24;
  if (*v1)
    v3 = 0xE200000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1CDA44()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 25705;
  else
    v2 = 0x646E696B24;
  if (v1)
    v3 = 0xE200000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1CDAB0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_374CA0;
  return sub_1CDABC(v2, a1, a2);
}

uint64_t sub_1CDABC@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_1CDB14(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (!*v1)
    v2 = 0x646E696B24;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE200000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CDB44()
{
  _BYTE *v0;

  if (*v0)
    return 25705;
  else
    return 0x646E696B24;
}

uint64_t sub_1CDB70@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374CA0, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1CDBD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1D027C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1CDBF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1D027C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ActionMenu.Child.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  BOOL v36;
  uint64_t *v37;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;

  v49 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C50);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for ActionMenu.Child(0);
  __chkstk_darwin(v50);
  v7 = (uint64_t *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - v15;
  v18 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1D027C();
  v20 = v53;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ActionMenu.Child.CodingKeys, &type metadata for ActionMenu.Child.CodingKeys, v19, v18, v17);
  if (!v20)
  {
    v21 = (uint64_t)v13;
    v47 = v7;
    v48 = v10;
    v53 = v16;
    v22 = v50;
    v23 = v51;
    LOBYTE(v54) = 0;
    v24 = v52;
    v26 = KeyedDecodingContainer.decode(_:forKey:)(&v54, v52);
    v27 = v25;
    v28 = v26 == 1835365481 && v25 == (void *)0xE400000000000000;
    if (v28
      || (_stringCompareWithSmolCheck(_:_:expecting:)(1835365481, 0xE400000000000000, v26, v25, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v29 = v21;
      sub_150C8((uint64_t)a1, (uint64_t)&v54);
      ActionMenu.Item.init(from:)(&v54, v21);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
      v30 = (uint64_t)v53;
      v31 = v22;
      v32 = v21;
      v33 = 0;
    }
    else
    {
      v35 = v26 == 0x756E656D627573 && v27 == (void *)0xE700000000000000;
      if (!v35
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0x756E656D627573, 0xE700000000000000, v26, v27, 0) & 1) == 0)
      {
        v36 = v26 == 0x6574616C706D6574 && v27 == (void *)0xE800000000000000;
        if (!v36
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6574616C706D6574, 0xE800000000000000, v26, v27, 0) & 1) == 0)
        {
          v56 = 0;
          v54 = 0;
          v55 = 0xE000000000000000;
          _StringGuts.grow(_:)(42);
          swift_bridgeObjectRelease();
          v54 = 0x20646E696B24;
          v55 = 0xE600000000000000;
          v39._countAndFlagsBits = v26;
          v39._object = v27;
          String.append(_:)(v39);
          swift_bridgeObjectRelease();
          v40._object = (void *)0x8000000000313150;
          v40._countAndFlagsBits = 0xD000000000000022;
          String.append(_:)(v40);
          v41 = v54;
          v42 = v55;
          v43 = type metadata accessor for DecodingError(0);
          swift_allocError(v43, &protocol witness table for DecodingError, 0, 0);
          v44 = sub_1D02C0();
          static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)(&v56, v5, v41, v42, v24, v44);
          v45 = swift_bridgeObjectRelease();
          swift_willThrow(v45);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
          return __swift_destroy_boxed_opaque_existential_1(a1);
        }
        swift_bridgeObjectRelease();
        v56 = 1;
        sub_55BA8();
        KeyedDecodingContainer.decode<A>(_:forKey:)(&v54, &type metadata for ActionMenu.ID);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
        v37 = v47;
        v46 = v55;
        *v47 = v54;
        v37[1] = v46;
        swift_storeEnumTagMultiPayload(v37, v22, 4);
        v34 = (uint64_t)v37;
        v30 = (uint64_t)v53;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      v29 = (uint64_t)v48;
      sub_150C8((uint64_t)a1, (uint64_t)&v54);
      ActionMenu.init(from:)(&v54, v29);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
      v30 = (uint64_t)v53;
      v31 = v22;
      v32 = v29;
      v33 = 1;
    }
    swift_storeEnumTagMultiPayload(v32, v31, v33);
    v34 = v29;
LABEL_10:
    sub_3C56C(v34, v30, type metadata accessor for ActionMenu.Child);
    sub_3C56C(v30, v49, type metadata accessor for ActionMenu.Child);
  }
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t ActionMenu.Item.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  ValueMetadata *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _BYTE v85[40];
  ValueMetadata *v86;
  unint64_t v87;
  unint64_t v88;

  v82 = a2;
  v78 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v78);
  v77 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v4);
  v83 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C68);
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  __chkstk_darwin(v6);
  v79 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C70);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v65 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C78);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v84 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v20 = sub_1D030C();
  v21 = v88;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ActionMenu.Item.CodingKeys, &type metadata for ActionMenu.Item.CodingKeys, v20, v19, v18);
  if (v21)
  {
    v22 = v84;
  }
  else
  {
    v88 = v20;
    v75 = v10;
    v76 = v13;
    v23 = v15;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C88);
    v85[0] = 1;
    v25 = sub_16138(&qword_3C0C90, &qword_3C0C88, (void (*)(void))sub_1D0350, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v24, v85, v14, v24, v25);
    v26 = v17;
    v27 = (uint64_t)v86;
    v28 = v87;
    LOBYTE(v86) = 0;
    v72 = KeyedDecodingContainer.decode(_:forKey:)(&v86, v14);
    v73 = v29;
    v74 = v27;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0CA8);
    LOBYTE(v86) = 2;
    v31 = sub_16138(&qword_3C0CB0, &qword_3C0CA8, (void (*)(void))sub_1D0388, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v30, &v86, v14, v30, v31);
    v22 = v84;
    v70 = v30;
    v71 = v28;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0CC0);
    v85[0] = 3;
    v33 = sub_16138(&qword_3C0CC8, &qword_3C0CC0, (void (*)(void))sub_1D0404, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v32, v85, v14, v32, v33);
    v34 = v86;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0CE0);
    v85[0] = 4;
    v36 = sub_16138(&qword_3C0CE8, &qword_3C0CE0, (void (*)(void))sub_1D0428, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v35, v85, v14, v35, v36);
    v66 = v34;
    v69 = v14;
    v65 = v86;
    v38 = v22[3];
    v39 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v38);
    v40 = dispatch thunk of Decoder.userInfo.getter(v38, v39);
    v41 = v79;
    static JSONContext.Property<A>.actionKindTable.getter(v40);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D00);
    Dictionary<>.subscript.getter(v41, v40, v42);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v41, v81);
    v43 = v86;
    if (v86)
    {
      v44 = v87;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v43 = &type metadata for EmptyActionKinds;
      v44 = sub_1D044C();
    }
    v85[0] = 5;
    sub_211688((uint64_t)v85, (uint64_t)v43, (uint64_t)&type metadata for ActionMenu.Item.CodingKeys, v44, v88, (uint64_t)&v86);
    v45 = v71;
    v67 = v23;
    if (v71 < 2)
    {
      v46 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
      v47 = v45;
      v45 = v48;
      sub_1D0374(v74, v47);
      v74 = v46;
    }
    v49 = v77;
    v50 = v78;
    v51 = v83;
    v52 = (uint64_t)v75;
    v53 = v70;
    sub_267BC((uint64_t)v76, (uint64_t)v75, &qword_3C0C70);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53);
    v71 = v45;
    if (v54 == 1)
    {
      sub_1459C(v52, &qword_3C0C70);
      v55 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v51, 1, 1, v55);
    }
    else
    {
      sub_267BC(v52, v51, &qword_3BEB70);
      sub_1459C(v52, &qword_3C0CA8);
    }
    if (v66 == 3)
      v56 = 2;
    else
      v56 = v66;
    v68 = v26;
    if (v65 == 3)
      v57 = 1;
    else
      v57 = (v65 == 2) | v65;
    sub_267BC((uint64_t)&v86, (uint64_t)v85, &qword_3B0C50);
    v58 = v50;
    v59 = (uint64_t)v49 + *(int *)(v50 + 24);
    v60 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
    v61 = *(int *)(v50 + 28);
    *((_BYTE *)v49 + v61) = 2;
    v62 = (uint64_t)v49 + *(int *)(v58 + 36);
    *(_QWORD *)(v62 + 32) = 0;
    *(_OWORD *)v62 = 0u;
    *(_OWORD *)(v62 + 16) = 0u;
    v63 = v71;
    *v49 = v74;
    v49[1] = v63;
    v64 = v73;
    v49[2] = v72;
    v49[3] = v64;
    sub_3C454(v83, v59, &qword_3BEB70);
    *((_BYTE *)v49 + v61) = v56;
    *((_BYTE *)v49 + *(int *)(v58 + 32)) = v57 & 1;
    sub_3C454((uint64_t)v85, v62, &qword_3B0C50);
    sub_3C56C((uint64_t)v49, v82, type metadata accessor for ActionMenu.Item);
    sub_1459C((uint64_t)&v86, &qword_3B0C50);
    sub_1459C((uint64_t)v76, &qword_3C0C70);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
  }
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t ActionMenu.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;

  v69 = a2;
  v67 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v67);
  v68 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C70);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1D0490();
  v20 = (uint64_t)v71;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ActionMenu.CodingKeys, &type metadata for ActionMenu.CodingKeys, v19, v17, v18);
  if (!v20)
  {
    v65 = v9;
    v66 = v6;
    v71 = v12;
    v21 = v14;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C88);
    v74 = 0;
    v23 = sub_16138(&qword_3C0C90, &qword_3C0C88, (void (*)(void))sub_1D0350, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v22, &v74, v13, v22, v23);
    v25 = v72;
    v24 = v73;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D20);
    v74 = 1;
    v27 = sub_16138(&qword_3C0D28, &qword_3C0D20, (void (*)(void))sub_1D04D4, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v26, &v74, v13, v26, v27);
    v63 = v24;
    v64 = v25;
    v29 = v72;
    v28 = v73;
    v74 = 2;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v26, &v74, v13, v26, v27);
    v61 = v28;
    v62 = v29;
    v32 = v72;
    v31 = v73;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0CA8);
    LOBYTE(v72) = 3;
    v34 = sub_16138(&qword_3C0CB0, &qword_3C0CA8, (void (*)(void))sub_1D0388, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v33, &v72, v13, v33, v34);
    v59 = v33;
    v60 = v32;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D38);
    v74 = 4;
    sub_1D0530();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v72, v35);
    v57 = v72;
    v58 = (char *)v31;
    v36 = v63;
    v37 = v68;
    v38 = (uint64_t)v65;
    if (v63 >= 2)
    {
      v44 = (uint64_t)v66;
      v43 = v64;
    }
    else
    {
      v39 = v63;
      v40 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
      v42 = v41;
      sub_1D0374(v64, v39);
      v43 = v40;
      v36 = v42;
      v44 = (uint64_t)v66;
    }
    v45 = v62;
    v46 = v60;
    v63 = v36;
    if (v61 < 2)
    {
      sub_1D0374(v62, v61);
      v45 = 0;
      v61 = 0xE000000000000000;
    }
    v62 = v45;
    v64 = v43;
    v47 = v58;
    if (v58 == (_BYTE *)&dword_0 + 1)
    {
      v46 = 0;
      v47 = 0;
    }
    v66 = v47;
    sub_267BC((uint64_t)v71, v38, &qword_3C0C70);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v38, 1) == 1)
    {
      sub_1459C(v38, &qword_3C0C70);
      v48 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v44, 1, 1, v48);
    }
    else
    {
      sub_267BC(v38, v44, &qword_3BEB70);
      sub_1459C(v38, &qword_3C0CA8);
    }
    v49 = v67;
    v50 = v44;
    v51 = (uint64_t)v37 + *(int *)(v67 + 28);
    v52 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
    v53 = v63;
    *v37 = v64;
    v37[1] = v53;
    v54 = v61;
    v37[2] = v62;
    v37[3] = v54;
    v55 = v66;
    v37[4] = v46;
    v37[5] = v55;
    sub_3C454(v50, v51, &qword_3BEB70);
    *(_QWORD *)((char *)v37 + *(int *)(v49 + 32)) = v57;
    sub_3C56C((uint64_t)v37, v69, type metadata accessor for ActionMenu);
    sub_1459C((uint64_t)v71, &qword_3C0C70);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1(v70);
}

void ActionMenu.Child.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD v17[7];
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v2);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSLogger(0);
  v17[3] = *(_QWORD *)(v4 - 8);
  v17[4] = v4;
  __chkstk_darwin(v4);
  v17[2] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for ActionMenu.Child(0);
  __chkstk_darwin(v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D58);
  v17[5] = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1D027C();
  v17[6] = v12;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ActionMenu.Child.CodingKeys, &type metadata for ActionMenu.Child.CodingKeys, v15, v13, v14);
  sub_171BF4(v19, (uint64_t)v10);
  v16 = (char *)sub_1CF044 + 4 * byte_2FD17D[swift_getEnumCaseMultiPayload(v10, v8)];
  __asm { BR              X10 }
}

uint64_t sub_1CF044()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_3C56C(v1, v0, type metadata accessor for ActionMenu.Item);
  *(_BYTE *)(v3 - 112) = 0;
  v5 = *(_QWORD *)(v3 - 144);
  v4 = *(_QWORD *)(v3 - 136);
  v6 = *(_QWORD *)(v3 - 128);
  KeyedEncodingContainer.encode(_:forKey:)(1835365481, 0xE400000000000000, v3 - 112, v4);
  if (!v6)
    ActionMenu.Item.encode(to:)(v2);
  sub_145D8(v0, type metadata accessor for ActionMenu.Item);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 152) + 8))(v5, v4);
}

uint64_t ActionMenu.Item.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  ValueMetadata *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  ValueMetadata *v37;
  unint64_t v38;
  char v39;

  v2 = v1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C68);
  v35 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D68);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_1D030C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ActionMenu.Item.CodingKeys, &type metadata for ActionMenu.Item.CodingKeys, v11, v9, v10);
  v12 = v1[1];
  v37 = (ValueMetadata *)*v1;
  v38 = v12;
  v39 = 1;
  sub_1D0638();
  v13 = v36;
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v37);
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v6;
  v36 = v11;
  v15 = v1[2];
  v16 = v1[3];
  LOBYTE(v37) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v37, v5);
  v18 = (int *)type metadata accessor for ActionMenu.Item(0);
  v19 = (char *)v1 + v18[6];
  LOBYTE(v37) = 2;
  v20 = type metadata accessor for ArtworkModel(0);
  v21 = sub_F1C0(&qword_3BBA90, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v19, &v37, v5, v20, v21);
  LOBYTE(v37) = *((_BYTE *)v2 + v18[7]);
  v39 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C0CD8);
  sub_16138(&qword_3C0D70, &qword_3C0CD8, (void (*)(void))sub_1D067C, (uint64_t)&protocol conformance descriptor for <A> A?);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v37);
  LOBYTE(v37) = *((_BYTE *)v2 + v18[8]);
  v39 = 4;
  sub_1D06C0();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v37);
  v22 = (uint64_t)v8;
  v32 = v5;
  v24 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v25 = dispatch thunk of Encoder.userInfo.getter(v24, v23);
  v26 = v34;
  static JSONContext.Property<A>.actionKindTable.getter(v25);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D00);
  Dictionary<>.subscript.getter(v26, v25, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v33);
  v28 = v37;
  if (v37)
  {
    v29 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = &type metadata for EmptyActionKinds;
    v29 = sub_1D044C();
  }
  v30 = (uint64_t)v2 + v18[9];
  LOBYTE(v37) = 5;
  sub_211838(v30, v22, (uint64_t)&v37, (uint64_t)v28, (uint64_t)v28, (uint64_t)&type metadata for ActionMenu.Item.CodingKeys, v29, v36);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v22, v32);
}

uint64_t ActionMenu.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[2];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D88);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_1D0490();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ActionMenu.CodingKeys, &type metadata for ActionMenu.CodingKeys, v11, v9, v10);
  v12 = v3[1];
  v24[0] = *v3;
  v24[1] = v12;
  v23 = 0;
  sub_1D0638();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v24);
  if (!v2)
  {
    v13 = v3[2];
    v14 = v3[3];
    LOBYTE(v24[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, v14, v24, v5);
    v15 = v3[4];
    v16 = v3[5];
    LOBYTE(v24[0]) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, v24, v5);
    v17 = type metadata accessor for ActionMenu(0);
    v18 = (char *)v3 + *(int *)(v17 + 28);
    LOBYTE(v24[0]) = 3;
    v19 = type metadata accessor for ArtworkModel(0);
    v20 = sub_F1C0(&qword_3BBA90, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v18, v24, v5, v19, v20);
    v24[0] = *(_QWORD *)((char *)v3 + *(int *)(v17 + 32));
    v23 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D50);
    sub_1D05B4(&qword_3C0D90, &qword_3C0D98, (uint64_t)&protocol conformance descriptor for ActionMenu.Child, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1CF9A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionMenu.Child.init(from:)(a1, a2);
}

void sub_1CF9B8(_QWORD *a1)
{
  ActionMenu.Child.encode(to:)(a1);
}

void sub_1CF9CC(char *a1)
{
  sub_1E3174(*a1);
}

void sub_1CF9D8()
{
  char *v0;

  sub_2D85F0(*v0);
}

void sub_1CF9E0()
{
  __asm { BR              X10 }
}

uint64_t sub_1CFA18(uint64_t a1)
{
  String.hash(into:)(a1, 25705, 0xE200000000000000);
  return swift_bridgeObjectRelease(0xE200000000000000);
}

void sub_1CFA7C(uint64_t a1)
{
  char *v1;

  sub_2D8E40(a1, *v1);
}

unint64_t sub_1CFA84@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D5DE4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CFAB0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CFADC + 4 * byte_2FD188[*v0]))();
}

void sub_1CFADC(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

void sub_1CFAEC(_QWORD *a1@<X8>)
{
  *a1 = 1852793705;
  a1[1] = 0xE400000000000000;
}

void sub_1CFB00(_QWORD *a1@<X8>)
{
  *a1 = 1701605234;
  a1[1] = 0xE400000000000000;
}

void sub_1CFB14(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6574617473;
  a1[1] = v1;
}

void sub_1CFB28(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F69746361;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1CFB40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFB6C + 4 * byte_2FD18E[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1CFB6C()
{
  return 25705;
}

uint64_t sub_1CFB78()
{
  return 1852793705;
}

uint64_t sub_1CFB88()
{
  return 1701605234;
}

uint64_t sub_1CFB98()
{
  return 0x6574617473;
}

uint64_t sub_1CFBA8()
{
  return 0x6E6F69746361;
}

unint64_t sub_1CFBBC@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D5DE4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CFBE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1D030C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1CFC08(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1D030C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1CFC30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionMenu.Item.init(from:)(a1, a2);
}

uint64_t sub_1CFC44(_QWORD *a1)
{
  return ActionMenu.Item.encode(to:)(a1);
}

void sub_1CFC58(char *a1)
{
  sub_1E32E4(*a1);
}

void sub_1CFC64()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1CFCA4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_1CFD20()
{
  __asm { BR              X10 }
}

uint64_t sub_1CFD50(uint64_t a1)
{
  String.hash(into:)(a1, 0x656C746974, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_1CFDB8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1CFDF4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1CFE70@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D5E2C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CFE9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CFEC0 + 4 * byte_2FD1A3[*v0]))();
}

void sub_1CFEC0(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_1CFED8(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974627573;
  a1[1] = 0xE800000000000000;
}

void sub_1CFEF4(_QWORD *a1@<X8>)
{
  *a1 = 1852793705;
  a1[1] = 0xE400000000000000;
}

void sub_1CFF08(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6572646C696863;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1CFF24()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFF48 + 4 * byte_2FD1A8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1CFF48()
{
  return 0x656C746974;
}

uint64_t sub_1CFF5C()
{
  return 0x656C746974627573;
}

uint64_t sub_1CFF74()
{
  return 1852793705;
}

uint64_t sub_1CFF84()
{
  return 0x6E6572646C696863;
}

unint64_t sub_1CFF9C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D5E2C(a1);
  *a2 = result;
  return result;
}

void sub_1CFFC0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1CFFCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1D0490();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1CFFF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1D0490();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1D001C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionMenu.init(from:)(a1, a2);
}

uint64_t sub_1D0030(_QWORD *a1)
{
  return ActionMenu.encode(to:)(a1);
}

unint64_t ActionMenu.ID.debugDescription.getter(uint64_t a1, void *a2)
{
  Swift::String v4;
  Swift::String v5;

  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRetain(a2);
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(a2);
  v5._countAndFlagsBits = 10530;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  return 0xD000000000000019;
}

unint64_t sub_1D00E0()
{
  uint64_t v0;

  return ActionMenu.ID.debugDescription.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

_QWORD *sub_1D00E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;

  result = sub_44D08(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_1D0110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_44D58(a1, a2, a3);
}

uint64_t sub_1D0124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_44D2C(a1, a2, a3);
}

uint64_t sub_1D0138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_450C0(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_1D0164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_450E4(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_1D0190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_45424(a1, a2, a3);
}

unint64_t _s8ShelfKit10ActionMenuV2IDVAEycfC_0()
{
  unint64_t *v0;
  unint64_t v1;
  Swift::String v2;
  void *object;

  if (qword_3B01B0 != -1)
    swift_once(&qword_3B01B0, sub_1CCBB0);
  v0 = (unint64_t *)(*(uint64_t (**)(void))(*(_QWORD *)off_3C0C48 + 136))();
  do
    v1 = __ldaxr(v0);
  while (__stlxr(v1 + 1, v0));
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return 0xD000000000000024;
}

unint64_t sub_1D027C()
{
  unint64_t result;

  result = qword_3C0C58;
  if (!qword_3C0C58)
  {
    result = swift_getWitnessTable(&unk_2FDD08);
    atomic_store(result, (unint64_t *)&qword_3C0C58);
  }
  return result;
}

unint64_t sub_1D02C0()
{
  unint64_t result;

  result = qword_3C0C60;
  if (!qword_3C0C60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C0C50);
    result = swift_getWitnessTable(&protocol conformance descriptor for KeyedDecodingContainer<A>);
    atomic_store(result, (unint64_t *)&qword_3C0C60);
  }
  return result;
}

unint64_t sub_1D030C()
{
  unint64_t result;

  result = qword_3C0C80;
  if (!qword_3C0C80)
  {
    result = swift_getWitnessTable(&unk_2FDCB8);
    atomic_store(result, (unint64_t *)&qword_3C0C80);
  }
  return result;
}

uint64_t sub_1D0350()
{
  return sub_16138(&qword_3C0C98, &qword_3C0CA0, (void (*)(void))sub_55BA8, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_1D0374(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

unint64_t sub_1D0388()
{
  unint64_t result;

  result = qword_3C0CB8;
  if (!qword_3C0CB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3BEB70);
    sub_F1C0(&qword_3BBAA8, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?);
    atomic_store(result, (unint64_t *)&qword_3C0CB8);
  }
  return result;
}

uint64_t sub_1D0404()
{
  return sub_16138(&qword_3C0CD0, &qword_3C0CD8, (void (*)(void))sub_55B64, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_1D0428()
{
  return sub_16138(&qword_3C0CF0, &qword_3C0CF8, (void (*)(void))sub_55B20, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_1D044C()
{
  unint64_t result;

  result = qword_3C0D08;
  if (!qword_3C0D08)
  {
    result = swift_getWitnessTable(&unk_2FFFAC);
    atomic_store(result, (unint64_t *)&qword_3C0D08);
  }
  return result;
}

unint64_t sub_1D0490()
{
  unint64_t result;

  result = qword_3C0D18;
  if (!qword_3C0D18)
  {
    result = swift_getWitnessTable(&unk_2FDC68);
    atomic_store(result, (unint64_t *)&qword_3C0D18);
  }
  return result;
}

unint64_t sub_1D04D4()
{
  unint64_t result;

  result = qword_3C0D30;
  if (!qword_3C0D30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3B2420);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?);
    atomic_store(result, (unint64_t *)&qword_3C0D30);
  }
  return result;
}

unint64_t sub_1D0530()
{
  unint64_t result;

  result = qword_3C0D40;
  if (!qword_3C0D40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C0D38);
    sub_1D05B4(&qword_3C0D48, &qword_3B2D88, (uint64_t)&protocol conformance descriptor for ActionMenu.Child, (uint64_t)&protocol conformance descriptor for <A> [A]);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>);
    atomic_store(result, (unint64_t *)&qword_3C0D40);
  }
  return result;
}

uint64_t sub_1D05B4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C0D50);
    sub_F1C0(a2, (void (*)(uint64_t))type metadata accessor for ActionMenu.Child, a3);
    result = swift_getWitnessTable(a4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D0638()
{
  unint64_t result;

  result = qword_3C0D60;
  if (!qword_3C0D60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ID);
    atomic_store(result, (unint64_t *)&qword_3C0D60);
  }
  return result;
}

unint64_t sub_1D067C()
{
  unint64_t result;

  result = qword_3C0D78;
  if (!qword_3C0D78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ItemRole);
    atomic_store(result, (unint64_t *)&qword_3C0D78);
  }
  return result;
}

unint64_t sub_1D06C0()
{
  unint64_t result;

  result = qword_3C0D80;
  if (!qword_3C0D80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ItemState);
    atomic_store(result, (unint64_t *)&qword_3C0D80);
  }
  return result;
}

unint64_t sub_1D0708()
{
  unint64_t result;

  result = qword_3C0DA0;
  if (!qword_3C0DA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ID);
    atomic_store(result, (unint64_t *)&qword_3C0DA0);
  }
  return result;
}

unint64_t sub_1D0750()
{
  unint64_t result;

  result = qword_3C0DA8;
  if (!qword_3C0DA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ID);
    atomic_store(result, (unint64_t *)&qword_3C0DA8);
  }
  return result;
}

unint64_t sub_1D0798()
{
  unint64_t result;

  result = qword_3C0DB0;
  if (!qword_3C0DB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ItemRole);
    atomic_store(result, (unint64_t *)&qword_3C0DB0);
  }
  return result;
}

unint64_t sub_1D07E0()
{
  unint64_t result;

  result = qword_3C0DB8;
  if (!qword_3C0DB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ItemState);
    atomic_store(result, (unint64_t *)&qword_3C0DB8);
  }
  return result;
}

unint64_t sub_1D0828()
{
  unint64_t result;

  result = qword_3C0DC0;
  if (!qword_3C0DC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ID);
    atomic_store(result, (unint64_t *)&qword_3C0DC0);
  }
  return result;
}

void *sub_1D086C()
{
  return &protocol witness table for String;
}

unint64_t sub_1D087C()
{
  unint64_t result;

  result = qword_3C0DC8;
  if (!qword_3C0DC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ID);
    atomic_store(result, (unint64_t *)&qword_3C0DC8);
  }
  return result;
}

void *sub_1D08C0()
{
  return &protocol witness table for String;
}

void *sub_1D08CC()
{
  return &protocol witness table for String;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionMenu(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    v9 = *(int *)(a3 + 28);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    a1[4] = a2[4];
    a1[5] = v8;
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v19 = v11[2];
        v20 = v11[3];
        sub_3D464(v19, v20, v18);
        v10[2] = v19;
        v10[3] = v20;
        *((_BYTE *)v10 + 32) = v18;
      }
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v21 = (id *)(v11 + 7);
      v22 = *((unsigned __int8 *)v11 + 64);
      if (v22 == 255)
      {
        v10[7] = *v21;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)v11 + 64));
        v10[7] = v23;
        *((_BYTE *)v10 + 64) = v22;
      }
      v24 = (id *)(v11 + 9);
      v25 = *((unsigned __int8 *)v11 + 80);
      if (v25 == 255)
      {
        v10[9] = *v24;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)v11 + 80));
        v10[9] = v26;
        *((_BYTE *)v10 + 80) = v25;
      }
      v27 = (id *)(v11 + 11);
      v28 = *((unsigned __int8 *)v11 + 96);
      if (v28 == 255)
      {
        v10[11] = *v27;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)v11 + 96));
        v10[11] = v29;
        *((_BYTE *)v10 + 96) = v28;
      }
      v30 = (id *)(v11 + 13);
      v31 = *((unsigned __int8 *)v11 + 112);
      if (v31 == 255)
      {
        v10[13] = *v30;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)v11 + 112));
        v10[13] = v32;
        *((_BYTE *)v10 + 112) = v31;
      }
      v33 = (id *)(v11 + 15);
      v34 = *((unsigned __int8 *)v11 + 128);
      if (v34 == 255)
      {
        v10[15] = *v33;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)v11 + 128));
        v10[15] = v35;
        *((_BYTE *)v10 + 128) = v34;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v36 = v12[11];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v12[12];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (_QWORD *)((char *)v11 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ActionMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ActionMenu(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v16 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v17 = v10[2];
      v18 = v10[3];
      sub_3D464(v17, v18, v16);
      v9[2] = v17;
      v9[3] = v18;
      *((_BYTE *)v9 + 32) = v16;
    }
    *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
    v19 = (id *)(v10 + 7);
    v20 = *((unsigned __int8 *)v10 + 64);
    if (v20 == 255)
    {
      v9[7] = *v19;
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, *((_BYTE *)v10 + 64));
      v9[7] = v21;
      *((_BYTE *)v9 + 64) = v20;
    }
    v22 = (id *)(v10 + 9);
    v23 = *((unsigned __int8 *)v10 + 80);
    if (v23 == 255)
    {
      v9[9] = *v22;
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v24 = *v22;
      sub_3D47C(*v22, *((_BYTE *)v10 + 80));
      v9[9] = v24;
      *((_BYTE *)v9 + 80) = v23;
    }
    v25 = (id *)(v10 + 11);
    v26 = *((unsigned __int8 *)v10 + 96);
    if (v26 == 255)
    {
      v9[11] = *v25;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v27 = *v25;
      sub_3D47C(*v25, *((_BYTE *)v10 + 96));
      v9[11] = v27;
      *((_BYTE *)v9 + 96) = v26;
    }
    v28 = (id *)(v10 + 13);
    v29 = *((unsigned __int8 *)v10 + 112);
    if (v29 == 255)
    {
      v9[13] = *v28;
      *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v30 = *v28;
      sub_3D47C(*v28, *((_BYTE *)v10 + 112));
      v9[13] = v30;
      *((_BYTE *)v9 + 112) = v29;
    }
    v31 = (id *)(v10 + 15);
    v32 = *((unsigned __int8 *)v10 + 128);
    if (v32 == 255)
    {
      v9[15] = *v31;
      *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v33 = *v31;
      sub_3D47C(*v31, *((_BYTE *)v10 + 128));
      v9[15] = v33;
      *((_BYTE *)v9 + 128) = v32;
    }
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v34 = v11[11];
    v35 = (char *)v9 + v34;
    v36 = (char *)v10 + v34;
    v37 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    v38 = v11[12];
    v39 = (_QWORD *)((char *)v9 + v38);
    v40 = (_QWORD *)((char *)v10 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v42 = v11[16];
    v43 = (_QWORD *)((char *)v9 + v42);
    v44 = (_QWORD *)((char *)v10 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActionMenu(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  id *v62;
  id *v63;
  int v64;
  id v65;
  void *v66;
  char v67;
  id v68;
  char v69;
  id v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v26 = *((_OWORD *)v8 + 1);
        *(_BYTE *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_3D464(v15, v16, v14);
        *(_QWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 24) = v16;
        *(_BYTE *)(v7 + 32) = v14;
      }
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      v27 = (id *)(v8 + 56);
      v28 = v8[64];
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(v7 + 64) = v8[64];
        *(_QWORD *)(v7 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, v8[64]);
        *(_QWORD *)(v7 + 56) = v29;
        *(_BYTE *)(v7 + 64) = v28;
      }
      v31 = (id *)(v8 + 72);
      v32 = v8[80];
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v7 + 80) = v8[80];
        *(_QWORD *)(v7 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, v8[80]);
        *(_QWORD *)(v7 + 72) = v33;
        *(_BYTE *)(v7 + 80) = v32;
      }
      v35 = (id *)(v8 + 88);
      v36 = v8[96];
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v7 + 96) = v8[96];
        *(_QWORD *)(v7 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v8[96]);
        *(_QWORD *)(v7 + 88) = v37;
        *(_BYTE *)(v7 + 96) = v36;
      }
      v39 = (id *)(v8 + 104);
      v40 = v8[112];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v7 + 112) = v8[112];
        *(_QWORD *)(v7 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, v8[112]);
        *(_QWORD *)(v7 + 104) = v41;
        *(_BYTE *)(v7 + 112) = v40;
      }
      v43 = (id *)(v8 + 120);
      v44 = v8[128];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v7 + 128) = v8[128];
        *(_QWORD *)(v7 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, v8[128]);
        *(_QWORD *)(v7 + 120) = v45;
        *(_BYTE *)(v7 + 128) = v44;
      }
      *(_BYTE *)(v7 + 129) = v8[129];
      v47 = v9[11];
      v48 = v7 + v47;
      v49 = &v8[v47];
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v9[12];
      v52 = (_QWORD *)(v7 + v51);
      v53 = &v8[v51];
      *v52 = *(_QWORD *)v53;
      v52[1] = *((_QWORD *)v53 + 1);
      *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
      *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
      *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
      v54 = v9[16];
      v55 = (_QWORD *)(v7 + v54);
      v56 = &v8[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_145D8(v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(v7 + 16);
  v19 = (__int128 *)(v8 + 16);
  v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      v61 = *v19;
      *(_BYTE *)(v7 + 32) = v8[32];
      *v18 = v61;
    }
    else
    {
      v58 = *((_QWORD *)v8 + 2);
      v59 = *((_QWORD *)v8 + 3);
      sub_3D464(v58, v59, v8[32]);
      *(_QWORD *)(v7 + 16) = v58;
      *(_QWORD *)(v7 + 24) = v59;
      *(_BYTE *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E43C(v7 + 16);
    v60 = v8[32];
    *v18 = *v19;
    *(_BYTE *)(v7 + 32) = v60;
  }
  else
  {
    v21 = *((_QWORD *)v8 + 2);
    v22 = *((_QWORD *)v8 + 3);
    sub_3D464(v21, v22, v8[32]);
    v23 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    *(_QWORD *)(v7 + 24) = v22;
    v25 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v7 + 32) = v20;
    sub_3B5BC(v23, v24, v25);
  }
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v62 = (id *)(v7 + 56);
  v63 = (id *)(v8 + 56);
  v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      v70 = *v63;
      *(_BYTE *)(v7 + 64) = v8[64];
      *v62 = v70;
    }
    else
    {
      v68 = *v63;
      sub_3D47C(*v63, v8[64]);
      *(_QWORD *)(v7 + 56) = v68;
      *(_BYTE *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_3E470(v7 + 56);
    v69 = v8[64];
    *v62 = *v63;
    *(_BYTE *)(v7 + 64) = v69;
  }
  else
  {
    v65 = *v63;
    sub_3D47C(*v63, v8[64]);
    v66 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v65;
    v67 = *(_BYTE *)(v7 + 64);
    *(_BYTE *)(v7 + 64) = v64;
    sub_3D624(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v7 + 80) = v8[80];
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_3D47C(*v72, v8[80]);
      *(_QWORD *)(v7 + 72) = v77;
      *(_BYTE *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_3E470(v7 + 72);
    v78 = v8[80];
    *v71 = *v72;
    *(_BYTE *)(v7 + 80) = v78;
  }
  else
  {
    v74 = *v72;
    sub_3D47C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(_QWORD *)(v7 + 72) = v74;
    v76 = *(_BYTE *)(v7 + 80);
    *(_BYTE *)(v7 + 80) = v73;
    sub_3D624(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v7 + 96) = v8[96];
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_3D47C(*v81, v8[96]);
      *(_QWORD *)(v7 + 88) = v86;
      *(_BYTE *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_3E470(v7 + 88);
    v87 = v8[96];
    *v80 = *v81;
    *(_BYTE *)(v7 + 96) = v87;
  }
  else
  {
    v83 = *v81;
    sub_3D47C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v83;
    v85 = *(_BYTE *)(v7 + 96);
    *(_BYTE *)(v7 + 96) = v82;
    sub_3D624(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v7 + 112) = v8[112];
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_3D47C(*v90, v8[112]);
      *(_QWORD *)(v7 + 104) = v95;
      *(_BYTE *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_3E470(v7 + 104);
    v96 = v8[112];
    *v89 = *v90;
    *(_BYTE *)(v7 + 112) = v96;
  }
  else
  {
    v92 = *v90;
    sub_3D47C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(_QWORD *)(v7 + 104) = v92;
    v94 = *(_BYTE *)(v7 + 112);
    *(_BYTE *)(v7 + 112) = v91;
    sub_3D624(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v7 + 128) = v8[128];
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_3D47C(*v99, v8[128]);
      *(_QWORD *)(v7 + 120) = v104;
      *(_BYTE *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_3E470(v7 + 120);
    v105 = v8[128];
    *v98 = *v99;
    *(_BYTE *)(v7 + 128) = v105;
  }
  else
  {
    v101 = *v99;
    sub_3D47C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(_QWORD *)(v7 + 120) = v101;
    v103 = *(_BYTE *)(v7 + 128);
    *(_BYTE *)(v7 + 128) = v100;
    sub_3D624(v102, v103);
  }
  *(_BYTE *)(v7 + 129) = v8[129];
  v107 = v9[11];
  v108 = v7 + v107;
  v109 = &v8[v107];
  v110 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = v9[12];
  v112 = (_QWORD *)(v7 + v111);
  v113 = &v8[v111];
  *v112 = *(_QWORD *)v113;
  v112[1] = *((_QWORD *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
  *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
  *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
  v114 = v9[16];
  v115 = (_QWORD *)(v7 + v114);
  v116 = &v8[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ActionMenu(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v14 = v10[11];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for ActionMenu(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _OWORD *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int v31;
  int v32;
  void *v33;
  _QWORD *v34;
  int v35;
  int v36;
  void *v37;
  _QWORD *v38;
  int v39;
  int v40;
  void *v41;
  _QWORD *v42;
  int v43;
  int v44;
  void *v45;
  _QWORD *v46;
  int v47;
  int v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_145D8(v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_6;
    }
    v24 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_QWORD *)(v10 + 8) = v24;
    swift_bridgeObjectRelease();
    v25 = v11 + 16;
    v26 = *(unsigned __int8 *)(v10 + 32);
    if (v26 != 255)
    {
      v27 = v11[32];
      if (v27 != 255)
      {
        v28 = *(_QWORD *)(v10 + 16);
        v29 = *(_QWORD *)(v10 + 24);
        *(_OWORD *)(v10 + 16) = *v25;
        *(_BYTE *)(v10 + 32) = v27;
        sub_3B5BC(v28, v29, v26);
        goto LABEL_13;
      }
      sub_3E43C(v10 + 16);
    }
    *(_OWORD *)(v10 + 16) = *v25;
    *(_BYTE *)(v10 + 32) = v11[32];
LABEL_13:
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
    v30 = v11 + 56;
    v31 = *(unsigned __int8 *)(v10 + 64);
    if (v31 != 255)
    {
      v32 = v11[64];
      if (v32 != 255)
      {
        v33 = *(void **)(v10 + 56);
        *(_QWORD *)(v10 + 56) = *v30;
        *(_BYTE *)(v10 + 64) = v32;
        sub_3D624(v33, v31);
        goto LABEL_18;
      }
      sub_3E470(v10 + 56);
    }
    *(_QWORD *)(v10 + 56) = *v30;
    *(_BYTE *)(v10 + 64) = v11[64];
LABEL_18:
    v34 = v11 + 72;
    v35 = *(unsigned __int8 *)(v10 + 80);
    if (v35 != 255)
    {
      v36 = v11[80];
      if (v36 != 255)
      {
        v37 = *(void **)(v10 + 72);
        *(_QWORD *)(v10 + 72) = *v34;
        *(_BYTE *)(v10 + 80) = v36;
        sub_3D624(v37, v35);
        goto LABEL_23;
      }
      sub_3E470(v10 + 72);
    }
    *(_QWORD *)(v10 + 72) = *v34;
    *(_BYTE *)(v10 + 80) = v11[80];
LABEL_23:
    v38 = v11 + 88;
    v39 = *(unsigned __int8 *)(v10 + 96);
    if (v39 != 255)
    {
      v40 = v11[96];
      if (v40 != 255)
      {
        v41 = *(void **)(v10 + 88);
        *(_QWORD *)(v10 + 88) = *v38;
        *(_BYTE *)(v10 + 96) = v40;
        sub_3D624(v41, v39);
        goto LABEL_28;
      }
      sub_3E470(v10 + 88);
    }
    *(_QWORD *)(v10 + 88) = *v38;
    *(_BYTE *)(v10 + 96) = v11[96];
LABEL_28:
    v42 = v11 + 104;
    v43 = *(unsigned __int8 *)(v10 + 112);
    if (v43 != 255)
    {
      v44 = v11[112];
      if (v44 != 255)
      {
        v45 = *(void **)(v10 + 104);
        *(_QWORD *)(v10 + 104) = *v42;
        *(_BYTE *)(v10 + 112) = v44;
        sub_3D624(v45, v43);
        goto LABEL_33;
      }
      sub_3E470(v10 + 104);
    }
    *(_QWORD *)(v10 + 104) = *v42;
    *(_BYTE *)(v10 + 112) = v11[112];
LABEL_33:
    v46 = v11 + 120;
    v47 = *(unsigned __int8 *)(v10 + 128);
    if (v47 != 255)
    {
      v48 = v11[128];
      if (v48 != 255)
      {
        v49 = *(void **)(v10 + 120);
        *(_QWORD *)(v10 + 120) = *v46;
        *(_BYTE *)(v10 + 128) = v48;
        sub_3D624(v49, v47);
LABEL_38:
        *(_BYTE *)(v10 + 129) = v11[129];
        v50 = v12[11];
        v51 = v10 + v50;
        v52 = &v11[v50];
        v53 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
        v54 = v12[12];
        v55 = (_QWORD *)(v10 + v54);
        v56 = &v11[v54];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        *v55 = v58;
        v55[1] = v57;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
        *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
        *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
        v59 = v12[16];
        v60 = (_QWORD *)(v10 + v59);
        v61 = &v11[v59];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        *v60 = v63;
        v60[1] = v62;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      sub_3E470(v10 + 120);
    }
    *(_QWORD *)(v10 + 120) = *v46;
    *(_BYTE *)(v10 + 128) = v11[128];
    goto LABEL_38;
  }
  if (v16)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v17;
  *(_BYTE *)(v10 + 32) = v11[32];
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  *(_QWORD *)(v10 + 56) = *((_QWORD *)v11 + 7);
  *(_BYTE *)(v10 + 64) = v11[64];
  *(_OWORD *)(v10 + 113) = *(_OWORD *)(v11 + 113);
  *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
  *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
  *(_BYTE *)(v10 + 129) = v11[129];
  v18 = v12[11];
  v19 = v10 + v18;
  v20 = &v11[v18];
  v21 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  *(_OWORD *)(v10 + v12[12]) = *(_OWORD *)&v11[v12[12]];
  *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
  *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
  *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
  *(_OWORD *)(v10 + v12[16]) = *(_OWORD *)&v11[v12[16]];
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D1EBC);
}

uint64_t sub_1D1EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D1F48);
}

uint64_t sub_1D1F48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1D1FC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_2FD8D0;
  v4[1] = &unk_2FD8D0;
  v4[2] = &unk_2FD8E8;
  sub_5971C(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for ActionMenu.ID()
{
  return &type metadata for ActionMenu.ID;
}

uint64_t initializeBufferWithCopyOfBuffer for ActionMenu.Child(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1D20BC + 4 * byte_2FD1AD[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

_QWORD *destroy for ActionMenu.Child(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  result = (_QWORD *)swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for ActionMenu.Item(0);
      v5 = a1 + *(int *)(v4 + 24);
      v6 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
      {
        swift_bridgeObjectRelease();
        v7 = *(unsigned __int8 *)(v5 + 32);
        if (v7 != 255)
          sub_3B5BC(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v7);
        v8 = *(unsigned __int8 *)(v5 + 64);
        if (v8 != 255)
          sub_3D624(*(id *)(v5 + 56), v8);
        v9 = *(unsigned __int8 *)(v5 + 80);
        if (v9 != 255)
          sub_3D624(*(id *)(v5 + 72), v9);
        v10 = *(unsigned __int8 *)(v5 + 96);
        if (v10 != 255)
          sub_3D624(*(id *)(v5 + 88), v10);
        v11 = *(unsigned __int8 *)(v5 + 112);
        if (v11 != 255)
          sub_3D624(*(id *)(v5 + 104), v11);
        v12 = *(unsigned __int8 *)(v5 + 128);
        if (v12 != 255)
          sub_3D624(*(id *)(v5 + 120), v12);
        v13 = v5 + *(int *)(v6 + 44);
        v14 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      result = (_QWORD *)(a1 + *(int *)(v4 + 36));
      if (result[3])
        result = (_QWORD *)__swift_destroy_boxed_opaque_existential_1(result);
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = a1 + *(int *)(type metadata accessor for ActionMenu(0) + 28);
      v16 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
      {
        swift_bridgeObjectRelease();
        v17 = *(unsigned __int8 *)(v15 + 32);
        if (v17 != 255)
          sub_3B5BC(*(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v17);
        v18 = *(unsigned __int8 *)(v15 + 64);
        if (v18 != 255)
          sub_3D624(*(id *)(v15 + 56), v18);
        v19 = *(unsigned __int8 *)(v15 + 80);
        if (v19 != 255)
          sub_3D624(*(id *)(v15 + 72), v19);
        v20 = *(unsigned __int8 *)(v15 + 96);
        if (v20 != 255)
          sub_3D624(*(id *)(v15 + 88), v20);
        v21 = *(unsigned __int8 *)(v15 + 112);
        if (v21 != 255)
          sub_3D624(*(id *)(v15 + 104), v21);
        v22 = *(unsigned __int8 *)(v15 + 128);
        if (v22 != 255)
          sub_3D624(*(id *)(v15 + 120), v22);
        v23 = v15 + *(int *)(v16 + 44);
        v24 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_34;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      result = (_QWORD *)swift_release(*(_QWORD *)(a1 + 24));
      break;
    case 4:
LABEL_34:
      result = (_QWORD *)swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ActionMenu.Child(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1D2B0C + 4 * byte_2FD1B7[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_1D2B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v0 = *(_QWORD *)v3;
  v4 = *(_QWORD *)(v3 + 24);
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(v0 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t assignWithCopy for ActionMenu.Child(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_145D8(result, type metadata accessor for ActionMenu.Child);
    v5 = (char *)&loc_1D3218 + 4 * byte_2FD1BC[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for ActionMenu.Child(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    a1[2] = a2[2];
    v16 = type metadata accessor for ActionMenu(0);
    v17 = *(int *)(v16 + 28);
    v18 = (_OWORD *)((char *)a1 + v17);
    v19 = (_OWORD *)((char *)a2 + v17);
    v20 = (int *)type metadata accessor for ArtworkModel(0);
    v21 = *((_QWORD *)v20 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v35 = v19[1];
      *v18 = *v19;
      v18[1] = v35;
      *((_BYTE *)v18 + 32) = *((_BYTE *)v19 + 32);
      *(_OWORD *)((char *)v18 + 40) = *(_OWORD *)((char *)v19 + 40);
      *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
      *((_BYTE *)v18 + 64) = *((_BYTE *)v19 + 64);
      *(_OWORD *)((char *)v18 + 113) = *(_OWORD *)((char *)v19 + 113);
      *(_OWORD *)((char *)v18 + 104) = *(_OWORD *)((char *)v19 + 104);
      *(_OWORD *)((char *)v18 + 88) = *(_OWORD *)((char *)v19 + 88);
      *(_OWORD *)((char *)v18 + 72) = *(_OWORD *)((char *)v19 + 72);
      *((_BYTE *)v18 + 129) = *((_BYTE *)v19 + 129);
      v36 = v20[11];
      v37 = (char *)v18 + v36;
      v38 = (char *)v19 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      *(_OWORD *)((char *)v18 + v20[12]) = *(_OWORD *)((char *)v19 + v20[12]);
      *((_BYTE *)v18 + v20[13]) = *((_BYTE *)v19 + v20[13]);
      *((_BYTE *)v18 + v20[14]) = *((_BYTE *)v19 + v20[14]);
      *((_BYTE *)v18 + v20[15]) = *((_BYTE *)v19 + v20[15]);
      *(_OWORD *)((char *)v18 + v20[16]) = *(_OWORD *)((char *)v19 + v20[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v16 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 32));
    v32 = a1;
    v33 = a3;
    v34 = 1;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for ActionMenu.Item(0);
    v9 = v8[6];
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v23 = v11[1];
      *v10 = *v11;
      v10[1] = v23;
      *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      *(_OWORD *)((char *)v10 + 40) = *(_OWORD *)((char *)v11 + 40);
      *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
      *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      *(_OWORD *)((char *)v10 + 113) = *(_OWORD *)((char *)v11 + 113);
      *(_OWORD *)((char *)v10 + 104) = *(_OWORD *)((char *)v11 + 104);
      *(_OWORD *)((char *)v10 + 88) = *(_OWORD *)((char *)v11 + 88);
      *(_OWORD *)((char *)v10 + 72) = *(_OWORD *)((char *)v11 + 72);
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v24 = v12[11];
      v25 = (char *)v10 + v24;
      v26 = (char *)v11 + v24;
      v27 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      *(_OWORD *)((char *)v10 + v12[16]) = *(_OWORD *)((char *)v11 + v12[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    v28 = v8[9];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
    v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    v32 = a1;
    v33 = a3;
    v34 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v32, v33, v34);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for ActionMenu.Child(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for ActionMenu.Child);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      a1[2] = a2[2];
      v16 = type metadata accessor for ActionMenu(0);
      v17 = *(int *)(v16 + 28);
      v18 = (_OWORD *)((char *)a1 + v17);
      v19 = (_OWORD *)((char *)a2 + v17);
      v20 = (int *)type metadata accessor for ArtworkModel(0);
      v21 = *((_QWORD *)v20 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v35 = v19[1];
        *v18 = *v19;
        v18[1] = v35;
        *((_BYTE *)v18 + 32) = *((_BYTE *)v19 + 32);
        *(_OWORD *)((char *)v18 + 40) = *(_OWORD *)((char *)v19 + 40);
        *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
        *((_BYTE *)v18 + 64) = *((_BYTE *)v19 + 64);
        *(_OWORD *)((char *)v18 + 113) = *(_OWORD *)((char *)v19 + 113);
        *(_OWORD *)((char *)v18 + 104) = *(_OWORD *)((char *)v19 + 104);
        *(_OWORD *)((char *)v18 + 88) = *(_OWORD *)((char *)v19 + 88);
        *(_OWORD *)((char *)v18 + 72) = *(_OWORD *)((char *)v19 + 72);
        *((_BYTE *)v18 + 129) = *((_BYTE *)v19 + 129);
        v36 = v20[11];
        v37 = (char *)v18 + v36;
        v38 = (char *)v19 + v36;
        v39 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        *(_OWORD *)((char *)v18 + v20[12]) = *(_OWORD *)((char *)v19 + v20[12]);
        *((_BYTE *)v18 + v20[13]) = *((_BYTE *)v19 + v20[13]);
        *((_BYTE *)v18 + v20[14]) = *((_BYTE *)v19 + v20[14]);
        *((_BYTE *)v18 + v20[15]) = *((_BYTE *)v19 + v20[15]);
        *(_OWORD *)((char *)v18 + v20[16]) = *(_OWORD *)((char *)v19 + v20[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v16 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 32));
      v32 = a1;
      v33 = a3;
      v34 = 1;
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = (int *)type metadata accessor for ActionMenu.Item(0);
      v9 = v8[6];
      v10 = (_OWORD *)((char *)a1 + v9);
      v11 = (_OWORD *)((char *)a2 + v9);
      v12 = (int *)type metadata accessor for ArtworkModel(0);
      v13 = *((_QWORD *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v23 = v11[1];
        *v10 = *v11;
        v10[1] = v23;
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
        *(_OWORD *)((char *)v10 + 40) = *(_OWORD *)((char *)v11 + 40);
        *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
        *(_OWORD *)((char *)v10 + 113) = *(_OWORD *)((char *)v11 + 113);
        *(_OWORD *)((char *)v10 + 104) = *(_OWORD *)((char *)v11 + 104);
        *(_OWORD *)((char *)v10 + 88) = *(_OWORD *)((char *)v11 + 88);
        *(_OWORD *)((char *)v10 + 72) = *(_OWORD *)((char *)v11 + 72);
        *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
        v24 = v12[11];
        v25 = (char *)v10 + v24;
        v26 = (char *)v11 + v24;
        v27 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        *(_OWORD *)((char *)v10 + v12[12]) = *(_OWORD *)((char *)v11 + v12[12]);
        *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
        *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
        *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
        *(_OWORD *)((char *)v10 + v12[16]) = *(_OWORD *)((char *)v11 + v12[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      }
      *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
      *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
      v28 = v8[9];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      v31 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v31;
      v32 = a1;
      v33 = a3;
      v34 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v32, v33, v34);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1D3FEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = type metadata accessor for ActionMenu.Item(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for ActionMenu(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = " ";
      v5[3] = " ";
      v5[4] = &unk_2FD8D0;
      swift_initEnumMetadataMultiPayload(a1, 256, 5, v5);
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActionMenu.Item(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v19 = v11[2];
        v20 = v11[3];
        sub_3D464(v19, v20, v18);
        v10[2] = v19;
        v10[3] = v20;
        *((_BYTE *)v10 + 32) = v18;
      }
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v21 = (id *)(v11 + 7);
      v22 = *((unsigned __int8 *)v11 + 64);
      if (v22 == 255)
      {
        v10[7] = *v21;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)v11 + 64));
        v10[7] = v23;
        *((_BYTE *)v10 + 64) = v22;
      }
      v24 = (id *)(v11 + 9);
      v25 = *((unsigned __int8 *)v11 + 80);
      if (v25 == 255)
      {
        v10[9] = *v24;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)v11 + 80));
        v10[9] = v26;
        *((_BYTE *)v10 + 80) = v25;
      }
      v27 = (id *)(v11 + 11);
      v28 = *((unsigned __int8 *)v11 + 96);
      if (v28 == 255)
      {
        v10[11] = *v27;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)v11 + 96));
        v10[11] = v29;
        *((_BYTE *)v10 + 96) = v28;
      }
      v30 = (id *)(v11 + 13);
      v31 = *((unsigned __int8 *)v11 + 112);
      if (v31 == 255)
      {
        v10[13] = *v30;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)v11 + 112));
        v10[13] = v32;
        *((_BYTE *)v10 + 112) = v31;
      }
      v33 = (id *)(v11 + 15);
      v34 = *((unsigned __int8 *)v11 + 128);
      if (v34 == 255)
      {
        v10[15] = *v33;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)v11 + 128));
        v10[15] = v35;
        *((_BYTE *)v10 + 128) = v34;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v36 = v12[11];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v12[12];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (_QWORD *)((char *)v11 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v10, 0, 1, v12);
    }
    v49 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v49) = *((_BYTE *)a2 + v49);
    v50 = a3[9];
    v51 = (char *)v4 + v50;
    v52 = (char *)a2 + v50;
    v53 = *(_QWORD *)((char *)a2 + v50 + 24);
    if (v53)
    {
      v54 = *((_QWORD *)v52 + 4);
      *((_QWORD *)v51 + 3) = v53;
      *((_QWORD *)v51 + 4) = v54;
      (**(void (***)(void))(v53 - 8))();
    }
    else
    {
      v55 = *((_OWORD *)v52 + 1);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v55;
      *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
    }
  }
  return v4;
}

_QWORD *destroy for ActionMenu.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = (_QWORD *)(a1 + *(int *)(a2 + 36));
  if (result[3])
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

_QWORD *initializeWithCopy for ActionMenu.Item(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v16 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v17 = v10[2];
      v18 = v10[3];
      sub_3D464(v17, v18, v16);
      v9[2] = v17;
      v9[3] = v18;
      *((_BYTE *)v9 + 32) = v16;
    }
    *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
    v19 = (id *)(v10 + 7);
    v20 = *((unsigned __int8 *)v10 + 64);
    if (v20 == 255)
    {
      v9[7] = *v19;
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, *((_BYTE *)v10 + 64));
      v9[7] = v21;
      *((_BYTE *)v9 + 64) = v20;
    }
    v22 = (id *)(v10 + 9);
    v23 = *((unsigned __int8 *)v10 + 80);
    if (v23 == 255)
    {
      v9[9] = *v22;
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v24 = *v22;
      sub_3D47C(*v22, *((_BYTE *)v10 + 80));
      v9[9] = v24;
      *((_BYTE *)v9 + 80) = v23;
    }
    v25 = (id *)(v10 + 11);
    v26 = *((unsigned __int8 *)v10 + 96);
    if (v26 == 255)
    {
      v9[11] = *v25;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v27 = *v25;
      sub_3D47C(*v25, *((_BYTE *)v10 + 96));
      v9[11] = v27;
      *((_BYTE *)v9 + 96) = v26;
    }
    v28 = (id *)(v10 + 13);
    v29 = *((unsigned __int8 *)v10 + 112);
    if (v29 == 255)
    {
      v9[13] = *v28;
      *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v30 = *v28;
      sub_3D47C(*v28, *((_BYTE *)v10 + 112));
      v9[13] = v30;
      *((_BYTE *)v9 + 112) = v29;
    }
    v31 = (id *)(v10 + 15);
    v32 = *((unsigned __int8 *)v10 + 128);
    if (v32 == 255)
    {
      v9[15] = *v31;
      *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v33 = *v31;
      sub_3D47C(*v31, *((_BYTE *)v10 + 128));
      v9[15] = v33;
      *((_BYTE *)v9 + 128) = v32;
    }
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v34 = v11[11];
    v35 = (char *)v9 + v34;
    v36 = (char *)v10 + v34;
    v37 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    v38 = v11[12];
    v39 = (_QWORD *)((char *)v9 + v38);
    v40 = (_QWORD *)((char *)v10 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v42 = v11[16];
    v43 = (_QWORD *)((char *)v9 + v42);
    v44 = (_QWORD *)((char *)v10 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v9, 0, 1, v11);
  }
  v47 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
  v48 = a3[9];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = *(_QWORD *)((char *)a2 + v48 + 24);
  if (v51)
  {
    v52 = *((_QWORD *)v50 + 4);
    *((_QWORD *)v49 + 3) = v51;
    *((_QWORD *)v49 + 4) = v52;
    (**(void (***)(void))(v51 - 8))();
  }
  else
  {
    v53 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v53;
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
  }
  return a1;
}

_QWORD *assignWithCopy for ActionMenu.Item(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  id *v62;
  id *v63;
  int v64;
  id v65;
  void *v66;
  char v67;
  id v68;
  char v69;
  id v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v26 = *((_OWORD *)v8 + 1);
        *(_BYTE *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_3D464(v15, v16, v14);
        *(_QWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 24) = v16;
        *(_BYTE *)(v7 + 32) = v14;
      }
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      v27 = (id *)(v8 + 56);
      v28 = v8[64];
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(v7 + 64) = v8[64];
        *(_QWORD *)(v7 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, v8[64]);
        *(_QWORD *)(v7 + 56) = v29;
        *(_BYTE *)(v7 + 64) = v28;
      }
      v31 = (id *)(v8 + 72);
      v32 = v8[80];
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v7 + 80) = v8[80];
        *(_QWORD *)(v7 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, v8[80]);
        *(_QWORD *)(v7 + 72) = v33;
        *(_BYTE *)(v7 + 80) = v32;
      }
      v35 = (id *)(v8 + 88);
      v36 = v8[96];
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v7 + 96) = v8[96];
        *(_QWORD *)(v7 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v8[96]);
        *(_QWORD *)(v7 + 88) = v37;
        *(_BYTE *)(v7 + 96) = v36;
      }
      v39 = (id *)(v8 + 104);
      v40 = v8[112];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v7 + 112) = v8[112];
        *(_QWORD *)(v7 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, v8[112]);
        *(_QWORD *)(v7 + 104) = v41;
        *(_BYTE *)(v7 + 112) = v40;
      }
      v43 = (id *)(v8 + 120);
      v44 = v8[128];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v7 + 128) = v8[128];
        *(_QWORD *)(v7 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, v8[128]);
        *(_QWORD *)(v7 + 120) = v45;
        *(_BYTE *)(v7 + 128) = v44;
      }
      *(_BYTE *)(v7 + 129) = v8[129];
      v47 = v9[11];
      v48 = v7 + v47;
      v49 = &v8[v47];
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v9[12];
      v52 = (_QWORD *)(v7 + v51);
      v53 = &v8[v51];
      *v52 = *(_QWORD *)v53;
      v52[1] = *((_QWORD *)v53 + 1);
      *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
      *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
      *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
      v54 = v9[16];
      v55 = (_QWORD *)(v7 + v54);
      v56 = &v8[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_145D8(v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(v7 + 16);
  v19 = (__int128 *)(v8 + 16);
  v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      v61 = *v19;
      *(_BYTE *)(v7 + 32) = v8[32];
      *v18 = v61;
    }
    else
    {
      v58 = *((_QWORD *)v8 + 2);
      v59 = *((_QWORD *)v8 + 3);
      sub_3D464(v58, v59, v8[32]);
      *(_QWORD *)(v7 + 16) = v58;
      *(_QWORD *)(v7 + 24) = v59;
      *(_BYTE *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E43C(v7 + 16);
    v60 = v8[32];
    *v18 = *v19;
    *(_BYTE *)(v7 + 32) = v60;
  }
  else
  {
    v21 = *((_QWORD *)v8 + 2);
    v22 = *((_QWORD *)v8 + 3);
    sub_3D464(v21, v22, v8[32]);
    v23 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    *(_QWORD *)(v7 + 24) = v22;
    v25 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v7 + 32) = v20;
    sub_3B5BC(v23, v24, v25);
  }
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v62 = (id *)(v7 + 56);
  v63 = (id *)(v8 + 56);
  v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      v70 = *v63;
      *(_BYTE *)(v7 + 64) = v8[64];
      *v62 = v70;
    }
    else
    {
      v68 = *v63;
      sub_3D47C(*v63, v8[64]);
      *(_QWORD *)(v7 + 56) = v68;
      *(_BYTE *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_3E470(v7 + 56);
    v69 = v8[64];
    *v62 = *v63;
    *(_BYTE *)(v7 + 64) = v69;
  }
  else
  {
    v65 = *v63;
    sub_3D47C(*v63, v8[64]);
    v66 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v65;
    v67 = *(_BYTE *)(v7 + 64);
    *(_BYTE *)(v7 + 64) = v64;
    sub_3D624(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v7 + 80) = v8[80];
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_3D47C(*v72, v8[80]);
      *(_QWORD *)(v7 + 72) = v77;
      *(_BYTE *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_3E470(v7 + 72);
    v78 = v8[80];
    *v71 = *v72;
    *(_BYTE *)(v7 + 80) = v78;
  }
  else
  {
    v74 = *v72;
    sub_3D47C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(_QWORD *)(v7 + 72) = v74;
    v76 = *(_BYTE *)(v7 + 80);
    *(_BYTE *)(v7 + 80) = v73;
    sub_3D624(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v7 + 96) = v8[96];
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_3D47C(*v81, v8[96]);
      *(_QWORD *)(v7 + 88) = v86;
      *(_BYTE *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_3E470(v7 + 88);
    v87 = v8[96];
    *v80 = *v81;
    *(_BYTE *)(v7 + 96) = v87;
  }
  else
  {
    v83 = *v81;
    sub_3D47C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v83;
    v85 = *(_BYTE *)(v7 + 96);
    *(_BYTE *)(v7 + 96) = v82;
    sub_3D624(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v7 + 112) = v8[112];
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_3D47C(*v90, v8[112]);
      *(_QWORD *)(v7 + 104) = v95;
      *(_BYTE *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_3E470(v7 + 104);
    v96 = v8[112];
    *v89 = *v90;
    *(_BYTE *)(v7 + 112) = v96;
  }
  else
  {
    v92 = *v90;
    sub_3D47C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(_QWORD *)(v7 + 104) = v92;
    v94 = *(_BYTE *)(v7 + 112);
    *(_BYTE *)(v7 + 112) = v91;
    sub_3D624(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v7 + 128) = v8[128];
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_3D47C(*v99, v8[128]);
      *(_QWORD *)(v7 + 120) = v104;
      *(_BYTE *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_3E470(v7 + 120);
    v105 = v8[128];
    *v98 = *v99;
    *(_BYTE *)(v7 + 128) = v105;
  }
  else
  {
    v101 = *v99;
    sub_3D47C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(_QWORD *)(v7 + 120) = v101;
    v103 = *(_BYTE *)(v7 + 128);
    *(_BYTE *)(v7 + 128) = v100;
    sub_3D624(v102, v103);
  }
  *(_BYTE *)(v7 + 129) = v8[129];
  v107 = v9[11];
  v108 = v7 + v107;
  v109 = &v8[v107];
  v110 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = v9[12];
  v112 = (_QWORD *)(v7 + v111);
  v113 = &v8[v111];
  *v112 = *(_QWORD *)v113;
  v112[1] = *((_QWORD *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
  *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
  *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
  v114 = v9[16];
  v115 = (_QWORD *)(v7 + v114);
  v116 = &v8[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v117 = a3[9];
  v118 = (char *)a1 + v117;
  v119 = (char *)a2 + v117;
  v120 = *((_QWORD *)v119 + 3);
  if (!*(_QWORD *)((char *)a1 + v117 + 24))
  {
    if (v120)
    {
      *((_QWORD *)v118 + 3) = v120;
      *((_QWORD *)v118 + 4) = *((_QWORD *)v119 + 4);
      (**(void (***)(char *, char *))(v120 - 8))(v118, v119);
      return a1;
    }
LABEL_74:
    v121 = *(_OWORD *)v119;
    v122 = *((_OWORD *)v119 + 1);
    *((_QWORD *)v118 + 4) = *((_QWORD *)v119 + 4);
    *(_OWORD *)v118 = v121;
    *((_OWORD *)v118 + 1) = v122;
    return a1;
  }
  if (!v120)
  {
    __swift_destroy_boxed_opaque_existential_1(v118);
    goto LABEL_74;
  }
  __swift_assign_boxed_opaque_existential_1(v118, v119);
  return a1;
}

_OWORD *initializeWithTake for ActionMenu.Item(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v14 = v10[11];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  v19 = a3[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
  return a1;
}

_QWORD *assignWithTake for ActionMenu.Item(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v27;
  _OWORD *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int v34;
  int v35;
  void *v36;
  _QWORD *v37;
  int v38;
  int v39;
  void *v40;
  _QWORD *v41;
  int v42;
  int v43;
  void *v44;
  _QWORD *v45;
  int v46;
  int v47;
  void *v48;
  _QWORD *v49;
  int v50;
  int v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v16;
      *(_BYTE *)(v9 + 32) = v10[32];
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);
      *(_BYTE *)(v9 + 64) = v10[64];
      *(_OWORD *)(v9 + 113) = *(_OWORD *)(v10 + 113);
      *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
      *(_BYTE *)(v9 + 129) = v10[129];
      v17 = v11[11];
      v18 = v9 + v17;
      v19 = &v10[v17];
      v20 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      *(_OWORD *)(v9 + v11[12]) = *(_OWORD *)&v10[v11[12]];
      *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
      *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
      *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
      *(_OWORD *)(v9 + v11[16]) = *(_OWORD *)&v10[v11[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_145D8(v9, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v27 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v27;
  swift_bridgeObjectRelease();
  v28 = v10 + 16;
  v29 = *(unsigned __int8 *)(v9 + 32);
  if (v29 != 255)
  {
    v30 = v10[32];
    if (v30 != 255)
    {
      v31 = *(_QWORD *)(v9 + 16);
      v32 = *(_QWORD *)(v9 + 24);
      *(_OWORD *)(v9 + 16) = *v28;
      *(_BYTE *)(v9 + 32) = v30;
      sub_3B5BC(v31, v32, v29);
      goto LABEL_15;
    }
    sub_3E43C(v9 + 16);
  }
  *(_OWORD *)(v9 + 16) = *v28;
  *(_BYTE *)(v9 + 32) = v10[32];
LABEL_15:
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  v33 = v10 + 56;
  v34 = *(unsigned __int8 *)(v9 + 64);
  if (v34 != 255)
  {
    v35 = v10[64];
    if (v35 != 255)
    {
      v36 = *(void **)(v9 + 56);
      *(_QWORD *)(v9 + 56) = *v33;
      *(_BYTE *)(v9 + 64) = v35;
      sub_3D624(v36, v34);
      goto LABEL_20;
    }
    sub_3E470(v9 + 56);
  }
  *(_QWORD *)(v9 + 56) = *v33;
  *(_BYTE *)(v9 + 64) = v10[64];
LABEL_20:
  v37 = v10 + 72;
  v38 = *(unsigned __int8 *)(v9 + 80);
  if (v38 != 255)
  {
    v39 = v10[80];
    if (v39 != 255)
    {
      v40 = *(void **)(v9 + 72);
      *(_QWORD *)(v9 + 72) = *v37;
      *(_BYTE *)(v9 + 80) = v39;
      sub_3D624(v40, v38);
      goto LABEL_25;
    }
    sub_3E470(v9 + 72);
  }
  *(_QWORD *)(v9 + 72) = *v37;
  *(_BYTE *)(v9 + 80) = v10[80];
LABEL_25:
  v41 = v10 + 88;
  v42 = *(unsigned __int8 *)(v9 + 96);
  if (v42 != 255)
  {
    v43 = v10[96];
    if (v43 != 255)
    {
      v44 = *(void **)(v9 + 88);
      *(_QWORD *)(v9 + 88) = *v41;
      *(_BYTE *)(v9 + 96) = v43;
      sub_3D624(v44, v42);
      goto LABEL_30;
    }
    sub_3E470(v9 + 88);
  }
  *(_QWORD *)(v9 + 88) = *v41;
  *(_BYTE *)(v9 + 96) = v10[96];
LABEL_30:
  v45 = v10 + 104;
  v46 = *(unsigned __int8 *)(v9 + 112);
  if (v46 != 255)
  {
    v47 = v10[112];
    if (v47 != 255)
    {
      v48 = *(void **)(v9 + 104);
      *(_QWORD *)(v9 + 104) = *v45;
      *(_BYTE *)(v9 + 112) = v47;
      sub_3D624(v48, v46);
      goto LABEL_35;
    }
    sub_3E470(v9 + 104);
  }
  *(_QWORD *)(v9 + 104) = *v45;
  *(_BYTE *)(v9 + 112) = v10[112];
LABEL_35:
  v49 = v10 + 120;
  v50 = *(unsigned __int8 *)(v9 + 128);
  if (v50 == 255)
  {
LABEL_39:
    *(_QWORD *)(v9 + 120) = *v49;
    *(_BYTE *)(v9 + 128) = v10[128];
    goto LABEL_40;
  }
  v51 = v10[128];
  if (v51 == 255)
  {
    sub_3E470(v9 + 120);
    goto LABEL_39;
  }
  v52 = *(void **)(v9 + 120);
  *(_QWORD *)(v9 + 120) = *v49;
  *(_BYTE *)(v9 + 128) = v51;
  sub_3D624(v52, v50);
LABEL_40:
  *(_BYTE *)(v9 + 129) = v10[129];
  v53 = v11[11];
  v54 = v9 + v53;
  v55 = &v10[v53];
  v56 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
  v57 = v11[12];
  v58 = (_QWORD *)(v9 + v57);
  v59 = &v10[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
  *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
  *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
  v62 = v11[16];
  v63 = (_QWORD *)(v9 + v62);
  v64 = &v10[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
LABEL_7:
  v22 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  if (*(_QWORD *)((char *)a1 + v23 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v23));
  v25 = *(_OWORD *)((char *)a2 + v23 + 16);
  *(_OWORD *)v24 = *(_OWORD *)((char *)a2 + v23);
  *((_OWORD *)v24 + 1) = v25;
  *((_QWORD *)v24 + 4) = *(_QWORD *)((char *)a2 + v23 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D5740);
}

uint64_t sub_1D5740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D57CC);
}

uint64_t sub_1D57CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1D5844(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_2FD8D0;
  v4[1] = &unk_2FD8D0;
  sub_5971C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_2FD930;
    v4[4] = &unk_2FD948;
    v4[5] = &unk_2FD960;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for ActionMenu.ItemRole()
{
  return &type metadata for ActionMenu.ItemRole;
}

ValueMetadata *type metadata accessor for ActionMenu.ItemState()
{
  return &type metadata for ActionMenu.ItemState;
}

uint64_t storeEnumTagSinglePayload for ActionMenu.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5944 + 4 * byte_2FD1C6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5978 + 4 * byte_2FD1C1[v4]))();
}

uint64_t sub_1D5978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5988);
  return result;
}

uint64_t sub_1D5994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D599CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D59A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D59A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenu.CodingKeys()
{
  return &type metadata for ActionMenu.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ActionMenu.Item.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5A10 + 4 * byte_2FD1D0[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5A44 + 4 * byte_2FD1CB[v4]))();
}

uint64_t sub_1D5A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5A54);
  return result;
}

uint64_t sub_1D5A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5A68);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenu.Item.CodingKeys()
{
  return &type metadata for ActionMenu.Item.CodingKeys;
}

uint64_t _s8ShelfKit10ActionMenuV8ItemRoleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5ADC + 4 * byte_2FD1DA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5B10 + 4 * byte_2FD1D5[v4]))();
}

uint64_t sub_1D5B10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5B18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5B20);
  return result;
}

uint64_t sub_1D5B2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5B34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5B38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5B40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenu.Child.CodingKeys()
{
  return &type metadata for ActionMenu.Child.CodingKeys;
}

unint64_t sub_1D5B60()
{
  unint64_t result;

  result = qword_3C0FB8;
  if (!qword_3C0FB8)
  {
    result = swift_getWitnessTable(&unk_2FDA60);
    atomic_store(result, (unint64_t *)&qword_3C0FB8);
  }
  return result;
}

unint64_t sub_1D5BA8()
{
  unint64_t result;

  result = qword_3C0FC0;
  if (!qword_3C0FC0)
  {
    result = swift_getWitnessTable(&unk_2FDB50);
    atomic_store(result, (unint64_t *)&qword_3C0FC0);
  }
  return result;
}

unint64_t sub_1D5BF0()
{
  unint64_t result;

  result = qword_3C0FC8;
  if (!qword_3C0FC8)
  {
    result = swift_getWitnessTable(&unk_2FDC40);
    atomic_store(result, (unint64_t *)&qword_3C0FC8);
  }
  return result;
}

unint64_t sub_1D5C38()
{
  unint64_t result;

  result = qword_3C0FD0;
  if (!qword_3C0FD0)
  {
    result = swift_getWitnessTable(&unk_2FDB78);
    atomic_store(result, (unint64_t *)&qword_3C0FD0);
  }
  return result;
}

unint64_t sub_1D5C80()
{
  unint64_t result;

  result = qword_3C0FD8;
  if (!qword_3C0FD8)
  {
    result = swift_getWitnessTable(&unk_2FDBA0);
    atomic_store(result, (unint64_t *)&qword_3C0FD8);
  }
  return result;
}

unint64_t sub_1D5CC8()
{
  unint64_t result;

  result = qword_3C0FE0;
  if (!qword_3C0FE0)
  {
    result = swift_getWitnessTable(&unk_2FDA88);
    atomic_store(result, (unint64_t *)&qword_3C0FE0);
  }
  return result;
}

unint64_t sub_1D5D10()
{
  unint64_t result;

  result = qword_3C0FE8;
  if (!qword_3C0FE8)
  {
    result = swift_getWitnessTable(&unk_2FDAB0);
    atomic_store(result, (unint64_t *)&qword_3C0FE8);
  }
  return result;
}

unint64_t sub_1D5D58()
{
  unint64_t result;

  result = qword_3C0FF0;
  if (!qword_3C0FF0)
  {
    result = swift_getWitnessTable(&unk_2FD998);
    atomic_store(result, (unint64_t *)&qword_3C0FF0);
  }
  return result;
}

unint64_t sub_1D5DA0()
{
  unint64_t result;

  result = qword_3C0FF8;
  if (!qword_3C0FF8)
  {
    result = swift_getWitnessTable(&unk_2FD9C0);
    atomic_store(result, (unint64_t *)&qword_3C0FF8);
  }
  return result;
}

unint64_t sub_1D5DE4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374CF0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t sub_1D5E2C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_374DA0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_1D5E74()
{
  unint64_t result;

  result = qword_3C1000;
  if (!qword_3C1000)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ItemState);
    atomic_store(result, (unint64_t *)&qword_3C1000);
  }
  return result;
}

unint64_t sub_1D5EB8()
{
  unint64_t result;

  result = qword_3C1008;
  if (!qword_3C1008)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ItemRole);
    atomic_store(result, (unint64_t *)&qword_3C1008);
  }
  return result;
}

unint64_t sub_1D5EFC()
{
  unint64_t result;

  result = qword_3C1010;
  if (!qword_3C1010)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenu.ID);
    atomic_store(result, (unint64_t *)&qword_3C1010);
  }
  return result;
}

uint64_t MetricsImpressionIdType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6169726F74696465;
  if (*v0 != 1)
    v1 = 0x64695F6F636572;
  if (*v0)
    return v1;
  else
    return 0x64695F737469;
}

uint64_t MetricsPageType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5FE0 + 4 * byte_2FDD60[*v0]))(0x74736163646F50, 0xE700000000000000);
}

uint64_t sub_1D5FE0()
{
  return 0x4574736163646F50;
}

uint64_t sub_1D6004()
{
  return 0x6C656E6E616843;
}

uint64_t sub_1D6018()
{
  return 0x676E69646E614CLL;
}

uint64_t sub_1D602C()
{
  return 0x6979616C50776F4ELL;
}

uint64_t sub_1D6048()
{
  return 1836019538;
}

uint64_t sub_1D6058()
{
  return 0x79726F6765746143;
}

uint64_t sub_1D6070()
{
  return 0x6552686372616553;
}

uint64_t sub_1D6094()
{
  return 0x686372616553;
}

uint64_t sub_1D60A8()
{
  return 0x7478654E7055;
}

uint64_t sub_1D60BC()
{
  return 0x796C746E65636552;
}

uint64_t sub_1D60E0()
{
  return 0x656D6F636C6557;
}

unint64_t sub_1D60F4()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1D6110()
{
  return 1969319509;
}

uint64_t sub_1D6120()
{
  return 0;
}

uint64_t sub_1D612C()
{
  return 0x74706D6F7250;
}

uint64_t sub_1D6140()
{
  return 0x697263736E617254;
}

uint64_t sub_1D6160()
{
  return 0x6575657551;
}

uint64_t sub_1D6174()
{
  return 0x73676E6974746553;
}

uint64_t MetricsEventType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6973736572706D69;
  else
    return 1701273968;
}

uint64_t MetricsEventType.includingFields.getter()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B6B90);
  v3 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + 3 * v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_2EFAE0;
  v9 = v8 + v7;
  if (v1 == 1)
  {
    v10 = static MetricsFieldInclusionRequest.impressions.getter();
    v11 = static MetricsFieldInclusionRequest.pageFields.getter(v10);
    static MetricsFieldInclusionRequest.pageReferrer.getter(v11);
  }
  else
  {
    v12 = ((uint64_t (*)(void))static MetricsFieldInclusionRequest.pageFields.getter)();
    v13 = static MetricsFieldInclusionRequest.pageReferrer.getter(v12);
    static MetricsFieldInclusionRequest.searchFilters.getter(v13);
  }
  v14 = sub_B3718(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, 3, v3);
  swift_deallocClassInstance(v8, 32, 7);
  return v14;
}

ShelfKit::MetricsLabel_optional __swiftcall MetricsLabel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  char *v3;
  uint64_t v4;
  ShelfKit::MetricsLabel_optional result;
  char v6;
  char v7;

  object = rawValue._object;
  v3 = v1;
  v4 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_374E38, rawValue._countAndFlagsBits, rawValue._object, &unk_3B0320);
  result.value = swift_bridgeObjectRelease(object);
  v6 = 0;
  v7 = 32;
  switch(v4)
  {
    case 0:
      goto LABEL_34;
    case 1:
      v6 = 1;
      goto LABEL_34;
    case 2:
      v6 = 2;
      goto LABEL_34;
    case 3:
      v6 = 3;
      goto LABEL_34;
    case 4:
      v6 = 4;
      goto LABEL_34;
    case 5:
      v6 = 5;
      goto LABEL_34;
    case 6:
      v6 = 6;
      goto LABEL_34;
    case 7:
      v6 = 7;
      goto LABEL_34;
    case 8:
      v6 = 8;
      goto LABEL_34;
    case 9:
      v6 = 9;
      goto LABEL_34;
    case 10:
      v6 = 10;
      goto LABEL_34;
    case 11:
      v6 = 11;
      goto LABEL_34;
    case 12:
      v6 = 12;
      goto LABEL_34;
    case 13:
      v6 = 13;
      goto LABEL_34;
    case 14:
      v6 = 14;
      goto LABEL_34;
    case 15:
      v6 = 15;
      goto LABEL_34;
    case 16:
      v6 = 16;
      goto LABEL_34;
    case 17:
      v6 = 17;
      goto LABEL_34;
    case 18:
      v6 = 18;
      goto LABEL_34;
    case 19:
      v6 = 19;
      goto LABEL_34;
    case 20:
      v6 = 20;
      goto LABEL_34;
    case 21:
      v6 = 21;
      goto LABEL_34;
    case 22:
      v6 = 22;
      goto LABEL_34;
    case 23:
      v6 = 23;
      goto LABEL_34;
    case 24:
      v6 = 24;
      goto LABEL_34;
    case 25:
      v6 = 25;
      goto LABEL_34;
    case 26:
      v6 = 26;
      goto LABEL_34;
    case 27:
      v6 = 27;
      goto LABEL_34;
    case 28:
      v6 = 28;
      goto LABEL_34;
    case 29:
      v6 = 29;
      goto LABEL_34;
    case 30:
      v6 = 30;
      goto LABEL_34;
    case 31:
      v6 = 31;
LABEL_34:
      v7 = v6;
      break;
    case 32:
      break;
    case 33:
      v7 = 33;
      break;
    case 34:
      v7 = 34;
      break;
    case 35:
      v7 = 35;
      break;
    case 36:
      v7 = 36;
      break;
    case 37:
      v7 = 37;
      break;
    case 38:
      v7 = 38;
      break;
    case 39:
      v7 = 39;
      break;
    case 40:
      v7 = 40;
      break;
    case 41:
      v7 = 41;
      break;
    case 42:
      v7 = 42;
      break;
    case 43:
      v7 = 43;
      break;
    case 44:
      v7 = 44;
      break;
    case 45:
      v7 = 45;
      break;
    case 46:
      v7 = 46;
      break;
    case 47:
      v7 = 47;
      break;
    case 48:
      v7 = 48;
      break;
    case 49:
      v7 = 49;
      break;
    default:
      v7 = 50;
      break;
  }
  *v3 = v7;
  return result;
}

uint64_t MetricsLabel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D6500 + 4 * word_2FDDA6[*v0]))(0x74726F706572, 0xE600000000000000);
}

uint64_t sub_1D6500()
{
  return 0x4C52556572616873;
}

uint64_t sub_1D6518()
{
  return 0x6568744F79706F63;
}

uint64_t sub_1D653C()
{
  return 0x657461676976616ELL;
}

uint64_t sub_1D6554()
{
  return 0x63646F5079706F63;
}

unint64_t sub_1D65E8()
{
  return 0xD000000000000011;
}

uint64_t sub_1D6854()
{
  return 0x6E61725477656976;
}

unint64_t sub_1D6878()
{
  return 0xD000000000000017;
}

uint64_t sub_1D6890()
{
  return 2036427888;
}

uint64_t sub_1D68A0()
{
  return 0x776F6C6C6F666572;
}

unint64_t sub_1D68B8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1D68D0()
{
  return 0x657469726F766166;
}

uint64_t sub_1D68E8()
{
  return 0x6F7661466F646E75;
}

unint64_t sub_1D6908()
{
  return 0xD000000000000012;
}

uint64_t sub_1D6920()
{
  return 0x7261656C63;
}

unint64_t sub_1D6934()
{
  return 0xD000000000000013;
}

void sub_1D694C()
{
  JUMPOUT(0x1D6960);
}

uint64_t sub_1D696C()
{
  return 0x4C74736567677573;
}

uint64_t sub_1D698C()
{
  return 0x676775536F646E75;
}

uint64_t sub_1D69B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E2A78(*a1, *a2);
}

Swift::Int sub_1D69BC(uint64_t a1, uint64_t a2)
{
  return sub_1D6A88(a1, a2, (uint64_t (*)(_QWORD *))MetricsLabel.rawValue.getter);
}

uint64_t sub_1D69C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D6AFC(a1, a2, a3, MetricsLabel.rawValue.getter);
}

Swift::Int sub_1D69D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D6B58(a1, a2, a3, (uint64_t (*)(_QWORD *))MetricsLabel.rawValue.getter);
}

ShelfKit::MetricsLabel_optional sub_1D69E0(Swift::String *a1)
{
  return MetricsLabel.init(rawValue:)(*a1);
}

uint64_t sub_1D69EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MetricsLabel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ShelfKit::MetricsPageType_optional __swiftcall MetricsPageType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  char *v3;
  unint64_t v4;
  ShelfKit::MetricsPageType_optional result;
  char v6;

  object = rawValue._object;
  v3 = v1;
  v4 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_375308, rawValue._countAndFlagsBits, rawValue._object, &unk_3B0330);
  result.value = swift_bridgeObjectRelease(object);
  v6 = 19;
  if (v4 < 0x13)
    v6 = v4;
  *v3 = v6;
  return result;
}

uint64_t sub_1D6A70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E228C(*a1, *a2);
}

Swift::Int sub_1D6A7C(uint64_t a1, uint64_t a2)
{
  return sub_1D6A88(a1, a2, (uint64_t (*)(_QWORD *))MetricsPageType.rawValue.getter);
}

Swift::Int sub_1D6A88(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[9];

  v4 = Hasher.init(_seed:)(v9);
  v5 = a3(v4);
  v7 = v6;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v7);
  return Hasher._finalize()();
}

uint64_t sub_1D6AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D6AFC(a1, a2, a3, MetricsPageType.rawValue.getter);
}

uint64_t sub_1D6AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a4();
  v7 = v6;
  String.hash(into:)(a1, v5, v6);
  return swift_bridgeObjectRelease(v7);
}

Swift::Int sub_1D6B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D6B58(a1, a2, a3, (uint64_t (*)(_QWORD *))MetricsPageType.rawValue.getter);
}

Swift::Int sub_1D6B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  v5 = Hasher.init(_seed:)(v10);
  v6 = a4(v5);
  v8 = v7;
  String.hash(into:)(v10, v6, v7);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

ShelfKit::MetricsPageType_optional sub_1D6BBC(Swift::String *a1)
{
  return MetricsPageType.init(rawValue:)(*a1);
}

uint64_t sub_1D6BC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MetricsPageType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ShelfKit::MetricsShelfName_optional __swiftcall MetricsShelfName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_3754F0;
  return (ShelfKit::MetricsShelfName_optional)sub_AE318(rawValue, v2, v1);
}

uint64_t MetricsShelfName.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7478654E207055;
  if (*v0 != 1)
    v1 = 0x796C746E65636552;
  if (*v0)
    return v1;
  else
    return 0x6867696C68676948;
}

uint64_t sub_1D6C6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E3448(*a1, *a2);
}

Swift::Int sub_1D6C78()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x7478654E207055;
  if (v1 != 1)
  {
    v3 = 0x796C746E65636552;
    v2 = 0xEF646579616C5020;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6867696C68676948;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEF666C6568532074;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1D6D30(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x7478654E207055;
  if (*v1 != 1)
  {
    v3 = 0x796C746E65636552;
    v2 = 0xEF646579616C5020;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6867696C68676948;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEF666C6568532074;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1D6DC4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x7478654E207055;
  if (v1 != 1)
  {
    v3 = 0x796C746E65636552;
    v2 = 0xEF646579616C5020;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6867696C68676948;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEF666C6568532074;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

ShelfKit::MetricsShelfName_optional sub_1D6E78(Swift::String *a1)
{
  return MetricsShelfName.init(rawValue:)(*a1);
}

void sub_1D6E84(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEF666C6568532074;
  v4 = 0xE700000000000000;
  v5 = 0x7478654E207055;
  if (v2 != 1)
  {
    v5 = 0x796C746E65636552;
    v4 = 0xEF646579616C5020;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6867696C68676948;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

ShelfKit::MetricsImpressionIdType_optional __swiftcall MetricsImpressionIdType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_375558;
  return (ShelfKit::MetricsImpressionIdType_optional)sub_AE318(rawValue, v2, v1);
}

uint64_t sub_1D6F08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E0BF8(*a1, *a2);
}

Swift::Int sub_1D6F14()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xEC00000064695F6CLL;
  v3 = 0x6169726F74696465;
  if (v1 != 1)
  {
    v3 = 0x64695F6F636572;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64695F737469;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1D6FB8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xEC00000064695F6CLL;
  v3 = 0x6169726F74696465;
  if (*v1 != 1)
  {
    v3 = 0x64695F6F636572;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64695F737469;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1D7038()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xEC00000064695F6CLL;
  v3 = 0x6169726F74696465;
  if (v1 != 1)
  {
    v3 = 0x64695F6F636572;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64695F737469;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

ShelfKit::MetricsImpressionIdType_optional sub_1D70D8(Swift::String *a1)
{
  return MetricsImpressionIdType.init(rawValue:)(*a1);
}

void sub_1D70E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xEC00000064695F6CLL;
  v5 = 0x6169726F74696465;
  if (v2 != 1)
  {
    v5 = 0x64695F6F636572;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64695F737469;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

ShelfKit::MetricsActionResult_optional __swiftcall MetricsActionResult.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_3755C0;
  return (ShelfKit::MetricsActionResult_optional)sub_1D7618(rawValue, v2, v1);
}

uint64_t MetricsActionResult.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x65726F7453707061;
  else
    return 7368801;
}

uint64_t sub_1D7188(char *a1, char *a2)
{
  return sub_1E14C0(*a1, *a2);
}

Swift::Int sub_1D7194()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x65726F7453707061;
  else
    v2 = 7368801;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1D720C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x65726F7453707061;
  else
    v2 = 7368801;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1D7260()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x65726F7453707061;
  else
    v2 = 7368801;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

ShelfKit::MetricsActionResult_optional sub_1D72D4(Swift::String *a1)
{
  return MetricsActionResult.init(rawValue:)(*a1);
}

void sub_1D72E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7368801;
  if (*v1)
    v2 = 0x65726F7453707061;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

ShelfKit::MetricsLocationIdType_optional __swiftcall MetricsLocationIdType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_375610;
  return (ShelfKit::MetricsLocationIdType_optional)sub_AE318(rawValue, v2, v1);
}

uint64_t MetricsLocationIdType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64695F737469;
  if (*v0 != 1)
    v1 = 0x746E6F635F737469;
  if (*v0)
    return v1;
  else
    return 0x69746E6575716573;
}

uint64_t sub_1D738C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E0FA4(*a1, *a2);
}

Swift::Int sub_1D7398()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x64695F737469;
  if (v1 != 1)
  {
    v3 = 0x746E6F635F737469;
    v2 = 0xED00006449746E65;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x69746E6575716573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEA00000000006C61;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1D7444(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x64695F737469;
  if (*v1 != 1)
  {
    v3 = 0x746E6F635F737469;
    v2 = 0xED00006449746E65;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x69746E6575716573;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEA00000000006C61;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1D74CC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x64695F737469;
  if (v1 != 1)
  {
    v3 = 0x746E6F635F737469;
    v2 = 0xED00006449746E65;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x69746E6575716573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEA00000000006C61;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

ShelfKit::MetricsLocationIdType_optional sub_1D7574(Swift::String *a1)
{
  return MetricsLocationIdType.init(rawValue:)(*a1);
}

void sub_1D7580(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000006C61;
  v4 = 0xE600000000000000;
  v5 = 0x64695F737469;
  if (v2 != 1)
  {
    v5 = 0x746E6F635F737469;
    v4 = 0xED00006449746E65;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x69746E6575716573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t EpisodePlayState.playPauseState.getter()
{
  if ((EpisodePlayState.isEpisodePlaying.getter() & 1) != 0)
    return static MetricsActionType.pause.getter();
  else
    return static MetricsActionType.play.getter();
}

ShelfKit::MetricsEventType_optional __swiftcall MetricsEventType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_375678;
  return (ShelfKit::MetricsEventType_optional)sub_1D7618(rawValue, v2, v1);
}

uint64_t sub_1D7618@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X2>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v7;
  uint64_t result;
  char v9;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v7 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v7 == 1)
    v9 = 1;
  else
    v9 = 2;
  if (!v7)
    v9 = 0;
  *a3 = v9;
  return result;
}

uint64_t sub_1D7674(char *a1, char *a2)
{
  return sub_1E1BC0(*a1, *a2);
}

Swift::Int sub_1D7680()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6973736572706D69;
  else
    v2 = 1701273968;
  if (v1)
    v3 = 0xEB00000000736E6FLL;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1D7700(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6973736572706D69;
  else
    v2 = 1701273968;
  if (*v1)
    v3 = 0xEB00000000736E6FLL;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1D775C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6973736572706D69;
  else
    v2 = 1701273968;
  if (v1)
    v3 = 0xEB00000000736E6FLL;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

ShelfKit::MetricsEventType_optional sub_1D77D8(Swift::String *a1)
{
  return MetricsEventType.init(rawValue:)(*a1);
}

void sub_1D77E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701273968;
  if (*v1)
    v2 = 0x6973736572706D69;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xEB00000000736E6FLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t MetricsTargetId.init(rawValue:)@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_3756C8, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

uint64_t MetricsTargetId.rawValue.getter()
{
  return 0x6C6C41656553;
}

Swift::Int sub_1D788C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x6C6C41656553, 0xE600000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1D78D8(uint64_t a1)
{
  return String.hash(into:)(a1, 0x6C6C41656553, 0xE600000000000000);
}

Swift::Int sub_1D78EC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x6C6C41656553, 0xE600000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1D7934@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375700, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1D7984(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6C41656553;
  a1[1] = 0xE600000000000000;
}

uint64_t EpisodeListType.metricsShelfName.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int8x16_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _QWORD v8[4];
  int8x16_t v9;
  int8x16_t v10;
  char v11;

  result = sub_1A0A14(v1, (uint64_t)v8);
  if (v11 == 5)
  {
    v7 = 1;
  }
  else if (v11 == 9
         && ((v4 = vorrq_s8(v9, v10),
              v5 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v8[3] | v8[2] | v8[1],
              v8[0] == 1)
           ? (v6 = v5 == 0)
           : (v6 = 0),
             v6))
  {
    v7 = 2;
  }
  else
  {
    v7 = 3;
  }
  *a1 = v7;
  return result;
}

unint64_t sub_1D7A34()
{
  unint64_t result;

  result = qword_3C1020;
  if (!qword_3C1020)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsLabel);
    atomic_store(result, (unint64_t *)&qword_3C1020);
  }
  return result;
}

unint64_t sub_1D7A7C()
{
  unint64_t result;

  result = qword_3C1028;
  if (!qword_3C1028)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsPageType);
    atomic_store(result, (unint64_t *)&qword_3C1028);
  }
  return result;
}

unint64_t sub_1D7AC4()
{
  unint64_t result;

  result = qword_3C1030;
  if (!qword_3C1030)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsShelfName);
    atomic_store(result, (unint64_t *)&qword_3C1030);
  }
  return result;
}

unint64_t sub_1D7B0C()
{
  unint64_t result;

  result = qword_3C1038;
  if (!qword_3C1038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsImpressionIdType);
    atomic_store(result, (unint64_t *)&qword_3C1038);
  }
  return result;
}

unint64_t sub_1D7B54()
{
  unint64_t result;

  result = qword_3C1040;
  if (!qword_3C1040)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsActionResult);
    atomic_store(result, (unint64_t *)&qword_3C1040);
  }
  return result;
}

unint64_t sub_1D7B9C()
{
  unint64_t result;

  result = qword_3C1048;
  if (!qword_3C1048)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsLocationIdType);
    atomic_store(result, (unint64_t *)&qword_3C1048);
  }
  return result;
}

unint64_t sub_1D7BE4()
{
  unint64_t result;

  result = qword_3C1050;
  if (!qword_3C1050)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEventType);
    atomic_store(result, (unint64_t *)&qword_3C1050);
  }
  return result;
}

unint64_t sub_1D7C2C()
{
  unint64_t result;

  result = qword_3C1058;
  if (!qword_3C1058)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsTargetId);
    atomic_store(result, (unint64_t *)&qword_3C1058);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MetricsLabel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCF)
    goto LABEL_17;
  if (a2 + 49 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 49) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 49;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 49;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 49;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x32;
  v8 = v6 - 50;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsLabel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 49 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 49) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCE)
    return ((uint64_t (*)(void))((char *)&loc_1D7D4C + 4 * byte_2FDE0F[v4]))();
  *a1 = a2 + 49;
  return ((uint64_t (*)(void))((char *)sub_1D7D80 + 4 * byte_2FDE0A[v4]))();
}

uint64_t sub_1D7D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D7D90);
  return result;
}

uint64_t sub_1D7D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D7DA4);
  *(_BYTE *)result = a2 + 49;
  return result;
}

uint64_t sub_1D7DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsLabel()
{
  return &type metadata for MetricsLabel;
}

uint64_t getEnumTagSinglePayload for MetricsPageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsPageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1D7EA8 + 4 * byte_2FDE19[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1D7EDC + 4 * byte_2FDE14[v4]))();
}

uint64_t sub_1D7EDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7EE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D7EECLL);
  return result;
}

uint64_t sub_1D7EF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D7F00);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1D7F04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7F0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageType()
{
  return &type metadata for MetricsPageType;
}

ValueMetadata *type metadata accessor for MetricsShelfName()
{
  return &type metadata for MetricsShelfName;
}

ValueMetadata *type metadata accessor for MetricsImpressionIdType()
{
  return &type metadata for MetricsImpressionIdType;
}

ValueMetadata *type metadata accessor for MetricsActionResult()
{
  return &type metadata for MetricsActionResult;
}

uint64_t _s8ShelfKit21MetricsLocationIdTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D7FAC + 4 * byte_2FDE23[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D7FE0 + 4 * byte_2FDE1E[v4]))();
}

uint64_t sub_1D7FE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7FE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D7FF0);
  return result;
}

uint64_t sub_1D7FFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D8004);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D8008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D8010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsLocationIdType()
{
  return &type metadata for MetricsLocationIdType;
}

uint64_t _s8ShelfKit19MetricsActionResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D8078 + 4 * byte_2FDE2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D80AC + 4 * byte_2FDE28[v4]))();
}

uint64_t sub_1D80AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D80B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D80BCLL);
  return result;
}

uint64_t sub_1D80C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D80D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D80D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D80DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEventType()
{
  return &type metadata for MetricsEventType;
}

uint64_t storeEnumTagSinglePayload for MetricsTargetId(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D8138 + 4 * byte_2FDE32[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D8158 + 4 * byte_2FDE37[v4]))();
}

_BYTE *sub_1D8138(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D8158(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D8160(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D8168(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D8170(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D8178(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsTargetId()
{
  return &type metadata for MetricsTargetId;
}

uint64_t sub_1D8194@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - v10;
  sub_1D8BD0(v1, (uint64_t)&v16 - v10);
  switch(swift_getEnumCaseMultiPayload(v11, v3))
  {
    case 0u:
      v13 = 2;
      goto LABEL_16;
    case 1u:
      v14 = sub_1D8BD0((uint64_t)v11, (uint64_t)v5);
      if ((InteractionContext.Page.isUnfollowedLibraryShow.getter(v14) & 1) != 0)
      {
        *a1 = 0;
        sub_1459C((uint64_t)v5, &qword_3B0CC8);
      }
      else
      {
        if ((InteractionContext.Page.isRecentlyPlayedSeeAll.getter() & 1) != 0
          || (InteractionContext.Page.isUpNextSeeAll.getter() & 1) != 0)
        {
          sub_1459C((uint64_t)v5, &qword_3B0CC8);
          result = sub_1D8B8C((uint64_t)v11);
          *a1 = 5;
          return result;
        }
        sub_1459C((uint64_t)v5, &qword_3B0CC8);
LABEL_15:
        v13 = 14;
LABEL_16:
        *a1 = v13;
      }
      return sub_1D8B8C((uint64_t)v11);
    case 2u:
      v13 = 1;
      goto LABEL_16;
    case 3u:
      sub_1D8BD0((uint64_t)v11, (uint64_t)v8);
      swift_bridgeObjectRelease();
      v15 = (uint64_t)&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B7DD0) + 64)];
      *a1 = 0;
      sub_1459C(v15, &qword_3B0CC8);
      return sub_1D8B8C((uint64_t)v11);
    case 4u:
      v13 = 5;
      goto LABEL_16;
    case 6u:
      v13 = 3;
      goto LABEL_16;
    case 0xBu:
    case 0xCu:
      result = sub_1D8B8C((uint64_t)v11);
      *a1 = 3;
      return result;
    case 0xDu:
      v13 = 4;
      goto LABEL_16;
    default:
      goto LABEL_15;
  }
}

uint64_t sub_1D8368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char See;
  _QWORD v18[2];

  v1 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v1);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)v18 - v8;
  sub_1D8BD0(v0, (uint64_t)v18 - v8);
  switch(swift_getEnumCaseMultiPayload(v9, v1))
  {
    case 0u:
      sub_1D8BD0((uint64_t)v9, (uint64_t)v6);
      v10 = *(_QWORD *)v6;
      v11 = v6[8];
      sub_1D8B8C((uint64_t)v9);
      if ((v11 & 1) == 0)
        goto LABEL_10;
      goto LABEL_18;
    case 1u:
      v14 = sub_1D8BD0((uint64_t)v9, (uint64_t)v3);
      if ((InteractionContext.Page.isRecentlyPlayedSeeAll.getter(v14) & 1) != 0)
      {
        sub_1459C((uint64_t)v3, &qword_3B0CC8);
        sub_1D8B8C((uint64_t)v9);
        result = 0x796C746E65636552;
      }
      else
      {
        See = InteractionContext.Page.isUpNextSeeAll.getter();
        sub_1459C((uint64_t)v3, &qword_3B0CC8);
        if ((See & 1) != 0)
        {
          sub_1D8B8C((uint64_t)v9);
          result = 0x7478654E7055;
        }
        else
        {
LABEL_17:
          sub_1D8B8C((uint64_t)v9);
LABEL_18:
          result = 0;
        }
      }
      break;
    case 2u:
      sub_1D8BD0((uint64_t)v9, (uint64_t)v6);
      v10 = *(_QWORD *)v6;
      v12 = v6[8];
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 3u:
      sub_1D8BD0((uint64_t)v9, (uint64_t)v6);
      v10 = *(_QWORD *)v6;
      v12 = v6[8];
      swift_bridgeObjectRelease();
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7DD0);
      sub_1459C((uint64_t)&v6[*(int *)(v15 + 64)], &qword_3B0CC8);
LABEL_9:
      sub_1D8B8C((uint64_t)v9);
      if ((v12 & 1) != 0)
        goto LABEL_18;
LABEL_10:
      v18[1] = v10;
      v16 = sub_144B4();
      result = BinaryInteger.description.getter(&type metadata for UInt64, v16);
      break;
    case 4u:
      sub_1D8B8C((uint64_t)v9);
      return 0x6E6F6974617453;
    case 6u:
      sub_1D8B8C((uint64_t)v9);
      return 0x6573776F7242;
    case 0xBu:
      sub_1D8B8C((uint64_t)v9);
      return 0x7972617262694CLL;
    case 0xCu:
      sub_1D8B8C((uint64_t)v9);
      return 0x6F4E6E657473696CLL;
    case 0xDu:
      sub_1D8B8C((uint64_t)v9);
      return 0x6979616C50776F4ELL;
    default:
      goto LABEL_17;
  }
  return result;
}

uint64_t NativeClickMetricsItem.generateMetricsData(view:enableImpressionsSnapshot:sender:locationFields:)@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _BYTE v61[24];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[8];
  __int128 v71;
  __int128 v72;
  __int128 v73;
  void *v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  void *v79;
  _BYTE v80[144];

  v54 = a4;
  v53 = a2;
  v55 = a1;
  v59 = a6;
  v8 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v8);
  v52 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - v15;
  v58 = type metadata accessor for InteractionContext(0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v51 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v51 - v22;
  v24 = sub_B5B2C(a3, (uint64_t)v80);
  v25 = UIView.interactionContext.getter(v24);
  v60 = v23;
  v26 = InteractionContext.view.getter(v25);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(v53, v26, v54, a5);
  v28 = v27;
  if ((v55 & 1) != 0)
  {
    static MetricsFieldInclusionRequest.impressionsSnapshot.getter(v27);
    swift_beginAccess(v28 + 104, v70, 33, 0);
    sub_9BD74((uint64_t)v16, v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    swift_endAccess(v70);
  }
  swift_beginAccess(v28 + 16, &v77, 0, 0);
  v29 = *(_QWORD *)(v28 + 16);
  v30 = v58;
  v31 = v56;
  if (*(_QWORD *)(v29 + 16))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v32 = sub_29724(0x6570795465676170, 0xE800000000000000);
    if ((v33 & 1) != 0)
    {
      sub_1FB98(*(_QWORD *)(v29 + 56) + 32 * v32, (uint64_t)&v75);
    }
    else
    {
      v75 = 0u;
      v76 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v75 = 0u;
    v76 = 0u;
    swift_retain();
  }
  v34 = *(uint64_t (**)(char *, char *, uint64_t))(v31 + 16);
  v35 = v34(v20, v60, v30);
  if (*((_QWORD *)&v76 + 1))
  {
    v36 = *(void (**)(char *, uint64_t))(v31 + 8);
    v36(v20, v30);
    sub_1F460(&v75, &v78);
  }
  else
  {
    v37 = (uint64_t)v52;
    InteractionContext.page.getter(v35);
    sub_1D8194((char *)v70);
    sub_1D8B8C(v37);
    v38 = MetricsPageType.rawValue.getter();
    v79 = &type metadata for String;
    *(_QWORD *)&v78 = v38;
    *((_QWORD *)&v78 + 1) = v39;
    v36 = *(void (**)(char *, uint64_t))(v31 + 8);
    v36(v20, v30);
    sub_1459C((uint64_t)&v75, (uint64_t *)&unk_3BC540);
  }
  swift_beginAccess(v28 + 16, v70, 33, 0);
  sub_166FC((uint64_t)&v78, 0x6570795465676170, 0xE800000000000000);
  swift_endAccess(v70);
  swift_release(v28);
  v40 = *(_QWORD *)(v28 + 16);
  v41 = v57;
  if (*(_QWORD *)(v40 + 16))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v42 = sub_29724(0x644965676170, 0xE600000000000000);
    if ((v43 & 1) != 0)
    {
      sub_1FB98(*(_QWORD *)(v40 + 56) + 32 * v42, (uint64_t)&v71);
    }
    else
    {
      v71 = 0u;
      v72 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
    swift_retain();
  }
  v44 = v34(v41, v60, v30);
  if (*((_QWORD *)&v72 + 1))
  {
    v36(v41, v30);
    sub_1F460(&v71, &v73);
  }
  else
  {
    v45 = (uint64_t)v52;
    InteractionContext.page.getter(v44);
    v46 = sub_1D8368();
    v48 = v47;
    sub_1D8B8C(v45);
    v74 = &type metadata for String;
    *(_QWORD *)&v73 = v46;
    *((_QWORD *)&v73 + 1) = v48;
    v36(v41, v30);
    sub_1459C((uint64_t)&v71, (uint64_t *)&unk_3BC540);
  }
  swift_beginAccess(v28 + 16, v70, 33, 0);
  sub_166FC((uint64_t)&v73, 0x644965676170, 0xE600000000000000);
  swift_endAccess(v70);
  swift_release(v28);
  sub_B5B2C((uint64_t)v80, (uint64_t)v70);
  if (sub_28F78((uint64_t)v70) != 1)
  {
    v66 = v70[4];
    v67 = v70[5];
    v68 = v70[6];
    v69 = v70[7];
    v62 = v70[0];
    v63 = v70[1];
    v64 = v70[2];
    v65 = v70[3];
    swift_retain();
    v49 = ChildAndParentLocation.fields.getter();
    *((_QWORD *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_3B6B80);
    *(_QWORD *)&v62 = v49;
    swift_beginAccess(v28 + 16, v61, 33, 0);
    sub_166FC((uint64_t)&v62, 0x6E6F697461636F6CLL, 0xE800000000000000);
    swift_endAccess(v61);
    swift_release(v28);
  }
  sub_B1A70();
  swift_release(v28);
  return ((uint64_t (*)(char *, uint64_t))v36)(v60, v30);
}

uint64_t sub_1D8B8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of NativeClickMetricsItem.generateItemLevelLocationFields(locationPosition:sender:interactionView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1D8BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D8C14(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  v9 = v7 == a1 && v8 == a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0) & 1) != 0)
    return 0;
  v11 = 0;
  v12 = a3 + 7;
  v13 = 1;
  while (1)
  {
    if (v3 == v13)
      return 0;
    ++v11;
    v14 = *(v12 - 1);
    v15 = *v12;
    if (v14 == a1 && v15 == a2)
      break;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
    result = v13++;
    v12 += 2;
    if ((v17 & 1) != 0)
      return result;
  }
  return v11;
}

uint64_t sub_1D8CF8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  unint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;

  v3 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  while (v4)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
    }
    else
    {
      if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
      {
        __break(1u);
        return result;
      }
      v5 = *(id *)(a2 + 32);
    }
    v6 = v5;
    type metadata accessor for Shelf(0);
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      v8 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v8 == v4)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1);
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (v8 >= *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
          goto LABEL_20;
        v10 = *(id *)(a2 + 32 + 8 * v8);
      }
      v11 = v10;
      v12 = static NSObject.== infix(_:_:)(v10, v3);

      if ((v12 & 1) != 0)
        return v8;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    result = swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t StorePageProvider.__allocating_init(asPartOf:pageURL:page:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  StorePageProvider.init(asPartOf:pageURL:page:)(a1, a2, a3);
  return v7;
}

Swift::Void __swiftcall StorePageProvider.viewDidLoad()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _QWORD v41[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7390);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageRenderContentTypes(0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  __chkstk_darwin(v5);
  v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2998);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DAA50();
  v41[0] = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_shelfController) + 80);
  v11 = v41[0];
  swift_retain();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2990);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
  v14 = sub_32914(&qword_3B29A0, &qword_3B2990, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher.compactMap<A>(_:)(sub_2B2D0, 0, v12, v13, v14);
  swift_release(v11);
  v15 = sub_32914(&qword_3B29A8, &qword_3B2998, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v16 = Publisher.eraseToAnyPublisher()(v7, v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v41[0] = v16;
  v17 = swift_allocObject(&unk_388CA0, 24, 7);
  swift_weakInit(v17 + 16);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2970);
  v19 = sub_32914(&qword_3B2978, &qword_3B2970, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v20 = Publisher<>.sink(receiveValue:)(sub_1DAEDC, v17, v18, v19);
  swift_release(v17);
  swift_release(v41[0]);
  v21 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_subscriptions;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_subscriptions, v41, 33, 0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v23 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v21, v22, v23);
  swift_endAccess(v41);
  swift_release(v20);
  swift_beginAccess(v1 + 16, v41, 0, 0);
  v24 = *(_QWORD *)(v1 + 16);
  v25 = *(unsigned __int8 *)(v1 + 24);
  if ((v25 & 1) == 0 && !v24)
    goto LABEL_7;
  v26 = swift_retain();
  v27 = (uint64_t)v35;
  if (v25)
    static PageRenderContentTypes.primaryData.getter(v26);
  else
    static PageRenderContentTypes.sidepack.getter(v26);
  sub_1DAEE4(v24, v27);
  j__swift_release(v24);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v37);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
LABEL_7:
    sub_1DA338(0);
  v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_purchaseController + 24);
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_purchaseController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_purchaseController), v28);
  dispatch thunk of PurchaseControllerProtocol.recentlyEntitledProductsPublisher.getter(v28, v29);
  v30 = swift_allocObject(&unk_388CA0, 24, 7);
  swift_weakInit(v30 + 16);
  v31 = sub_32914(&qword_3B73F0, &qword_3B7390, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v32 = v39;
  v33 = Publisher<>.sink(receiveValue:)(sub_1DE140, v30, v39, v31);
  swift_release(v30);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v32);
  swift_beginAccess(v21, v40, 33, 0);
  AnyCancellable.store<A>(in:)(v21, v22, v23);
  swift_endAccess(v40);
  swift_release(v33);
}

uint64_t StorePageProvider.loadNewPageURL(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  _BYTE v22[24];

  v2 = v1;
  v21 = type metadata accessor for PageRenderContentTypes(0);
  v4 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for PageRenderEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v16 = v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, v22, 33, 0);
  sub_3C454((uint64_t)v13, v16, &qword_3B4370);
  swift_endAccess(v22);
  *v10 = 0;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for PageRenderEvent.reload(_:), v7);
  PassthroughSubject.send(_:)(v10);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  static PageRenderContentTypes.unspecified.getter(v17);
  v18 = v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
  v19 = swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes, v22, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 40))(v18, v6, v21, v19);
  swift_endAccess(v22);
  return sub_1DA338(0);
}

Swift::Bool __swiftcall StorePageProvider.shouldPrepareNextPage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v8[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
  swift_beginAccess(v4, v8, 0, 0);
  sub_267BC(v4, (uint64_t)v3, &qword_3B4720);
  v5 = type metadata accessor for JSONObject(0);
  LOBYTE(v4) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1459C((uint64_t)v3, &qword_3B4720);
  return v4;
}

Swift::Void __swiftcall StorePageProvider.prepareNextPage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];
  _BYTE v21[24];
  _BYTE v22[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v2);
  v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for JSONObject(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage, v22, 0, 0);
  sub_267BC(v9, (uint64_t)v4, &qword_3B4720);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1459C((uint64_t)v4, &qword_3B4720);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage, v21, 1, 0);
    *v10 = 1;
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider + 24);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider), v11);
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 144))(v8, v11, v12);
    v14 = swift_allocObject(&unk_388CA0, 24, 7);
    swift_weakInit(v14 + 16);
    v15 = swift_allocObject(&unk_388CA0, 24, 7);
    swift_weakInit(v15 + 16);
    v16 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
    v17 = swift_retain();
    v18 = static OS_dispatch_queue.main.getter(v17);
    v20[3] = v16;
    v20[4] = &protocol witness table for OS_dispatch_queue;
    v20[0] = v18;
    Promise.then(perform:orCatchError:on:)(sub_1DE148, v14, sub_1DE150, v15, v20);
    swift_release(v13);
    swift_release(v14);
    swift_release(v15);
    __swift_destroy_boxed_opaque_existential_1(v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release(v15);
  }
}

Swift::Void __swiftcall StorePageProvider.reload(ignoreCache:)(Swift::Bool ignoreCache)
{
  uint64_t v1;
  _BOOL4 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v16[24];

  v2 = ignoreCache;
  v3 = type metadata accessor for PageRenderContentTypes(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for PageRenderEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *v11 = v2;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for PageRenderEvent.reload(_:), v7, v9);
  PassthroughSubject.send(_:)(v11);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  static PageRenderContentTypes.unspecified.getter(v12);
  v13 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
  v14 = swift_beginAccess(v13, v16, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 40))(v13, v6, v3, v14);
  swift_endAccess(v16);
  sub_1DA338(v2);
}

unint64_t StorePageProvider.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  unint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v1 + 16, v7, 0, 0);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  j__swift_retain(v3);
  return sub_17D260(v5);
}

unint64_t sub_1D99B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  _BYTE v8[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 16, v8, 0, 0);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_BYTE *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  j__swift_retain(v4);
  return sub_17D260(v6);
}

void sub_1D9A10(uint64_t a1)
{
  char v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)a1;
  v4 = v1;
  v5 = v2;
  j__swift_retain(v3);
  sub_17D260(v2);
  sub_1D9A68(&v3);
}

void sub_1D9A68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t *);
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v2 = v1;
  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a1;
  v8 = *((_BYTE *)a1 + 8);
  v9 = a1[2];
  swift_beginAccess(v2 + 16, v22, 1, 0);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 16) = v7;
  *(_BYTE *)(v2 + 24) = v8;
  *(_QWORD *)(v2 + 32) = v9;
  j__swift_release(v10);
  sub_17D274(v11);
  sub_1DCA34(v6);
  CurrentValueSubject.value.setter(v6);
  swift_beginAccess(v2 + 64, v21, 0, 0);
  v12 = *(void (**)(uint64_t *))(v2 + 64);
  if (v12)
  {
    v13 = *(_QWORD *)(v2 + 72);
    v14 = *(_QWORD *)(v2 + 16);
    v15 = *(_BYTE *)(v2 + 24);
    v16 = *(_QWORD *)(v2 + 32);
    v18 = v14;
    v19 = v15;
    v20 = v16;
    sub_76C34((uint64_t)v12, v13);
    j__swift_retain(v14);
    sub_17D260(v16);
    v12(&v18);
    sub_327A0((uint64_t)v12, v13);
    j__swift_release(v14);
    sub_17D274(v16);
  }
}

uint64_t sub_1D9BB4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);
  _BYTE v9[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 48, v9, 0, 0);
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_QWORD *)(v3 + 56);
  if (v4)
  {
    v6 = swift_allocObject(&unk_388F38, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1DF618;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_76C34(v4, v5);
}

uint64_t sub_1D9C3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_388F10, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1DF5E8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess(*a2 + 48, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 48);
  v9 = *(_QWORD *)(v7 + 56);
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 56) = v5;
  sub_76C34(v3, v4);
  return sub_327A0(v8, v9);
}

uint64_t StorePageProvider.loadPageCallback.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 48, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 48);
  sub_76C34(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t StorePageProvider.loadPageCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 48, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return sub_327A0(v5, v6);
}

uint64_t sub_1D9D84@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _BYTE v9[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 64, v9, 0, 0);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v3 + 72);
  if (v4)
  {
    v6 = swift_allocObject(&unk_388EE8, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_3B570;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_76C34(v4, v5);
}

uint64_t sub_1D9E0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_388EC0, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_3B570;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess(*a2 + 64, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 72) = v5;
  sub_76C34(v3, v4);
  return sub_327A0(v8, v9);
}

uint64_t StorePageProvider.pageRender.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 80));
}

uint64_t StorePageProvider.isPreparingNextPage.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage, v3, 0, 0);
  return *v1;
}

uint64_t StorePageProvider.init(asPartOf:pageURL:page:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ShelvesController;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  __int128 v34[3];

  v4 = v3;
  v8 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v8);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = 0;
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_QWORD *)(v4 + 40) = CurrentValueSubject.init(_:)(v10);
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BE4F0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  *(_QWORD *)(v4 + 80) = PassthroughSubject.init()();
  v14 = v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
  v15 = type metadata accessor for URL(0);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v17 = (_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_channelAdamId);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingProvider) = 0;
  static PageRenderContentTypes.unspecified.getter(v16);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_shelves) = _swiftEmptyArrayStorage;
  v18 = v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_uberShelf;
  v19 = type metadata accessor for ModernShelf(0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightShelf, 1, 1, v19);
  v20(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingHeaderShelf, 1, 1, v19);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage) = 0;
  v21 = v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
  v22 = type metadata accessor for JSONObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_subscriptions) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_objectGraph) = a1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BE9F0);
  v24 = type metadata accessor for BaseObjectGraph(0);
  swift_retain();
  inject<A, B>(_:from:)(v34, v23, a1, v23, v24);
  sub_F4D8(v34, v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BAFB0);
  inject<A, B>(_:from:)(v34, v25, a1, v25, v24);
  *(_OWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightsProvider) = v34[0];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73E8);
  inject<A, B>(_:from:)(v34, v26, a1, v26, v24);
  sub_F4D8(v34, v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_purchaseController);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  inject<A, B>(_:from:)(v34, v27, a1, v27, v24);
  sub_F4D8(v34, v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_libraryActionController);
  v28 = type metadata accessor for StorePageStateController();
  BaseObjectGraph.inject<A>(_:)(v34, v28, v28);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storePageStateController) = *(_QWORD *)&v34[0];
  swift_beginAccess(v14, v34, 33, 0);
  sub_C600C(a2, v14, &qword_3B4370);
  swift_endAccess(v34);
  ShelvesController = type metadata accessor for ProgressivelyLoadShelvesController();
  v30 = (_QWORD *)swift_allocObject(ShelvesController, 88, 7);
  v30[7] = _swiftEmptyArrayStorage;
  v30[8] = _swiftEmptyArrayStorage;
  v30[9] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v34[0] = 0;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2990);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v30[10] = CurrentValueSubject.init(_:)(v34);
  inject<A, B>(_:from:)(v34, v23, a1, v23, v24);
  sub_F4D8(v34, (uint64_t)(v30 + 2));
  swift_release(a1);
  sub_1459C(a2, &qword_3B4370);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_shelfController) = v30;
  v32 = a3 && *(_BYTE *)(a3 + OBJC_IVAR____TtC8ShelfKit4Page_isIncomplete) != 1;
  *(_QWORD *)(v4 + 16) = a3;
  *(_BYTE *)(v4 + 24) = v32;
  *(_QWORD *)(v4 + 32) = 0;
  return v4;
}

uint64_t sub_1DA338(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t *v42;
  void (*v43)(uint64_t *);
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  unint64_t *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  char v79[24];
  char v80[24];
  char v81[32];

  v2 = v1;
  LODWORD(v69) = a1;
  v3 = type metadata accessor for PageRenderEvent(0);
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  __chkstk_darwin(v3);
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v5);
  v70 = (unint64_t *)((char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = type metadata accessor for URLComponents(0);
  v67 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v63 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for URLQueryItem(0);
  v8 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CB8);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v14);
  v65 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - v17;
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, v81, 0, 0);
  sub_267BC(v23, (uint64_t)v18, &qword_3B4370);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v24(v18, 1, v19) == 1)
    return sub_1459C((uint64_t)v18, &qword_3B4370);
  v68 = v20;
  v26 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v26(v22, v18, v19);
  if ((v69 & 1) != 0)
  {
    v61 = (void (*)(char *, uint64_t, uint64_t))v26;
    URLComponents.init(url:resolvingAgainstBaseURL:)(v22, 0);
    v27 = v66;
    v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
    v28 = v69(v13, 1, v66);
    if ((_DWORD)v28 || (v30 = URLComponents.queryItems.getter(v28)) == 0)
    {
      swift_bridgeObjectRelease();
      v29 = _swiftEmptyArrayStorage;
    }
    else
    {
      v29 = (_QWORD *)v30;
    }
    URLQueryItem.init(name:value:)(0xD000000000000019, 0x8000000000311000, 1702195828, 0xE400000000000000);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
    v62 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v29 = (_QWORD *)sub_1149C(0, v29[2] + 1, 1, (unint64_t)v29);
    v33 = v29[2];
    v32 = v29[3];
    if (v33 >= v32 >> 1)
      v29 = (_QWORD *)sub_1149C(v32 > 1, v33 + 1, 1, (unint64_t)v29);
    v29[2] = v33 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v29+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v33, v10, v64);
    v34 = (unsigned int (*)(char *, uint64_t, uint64_t))v69;
    if (v69(v13, 1, v27))
      swift_bridgeObjectRelease();
    else
      URLComponents.queryItems.setter(v29);
    v19 = v62;
    v35 = (uint64_t)v65;
    if (v34(v13, 1, v27))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v35, 1, 1, v19);
    }
    else
    {
      v36 = v67;
      v37 = v63;
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v67 + 16))(v63, v13, v27);
      URLComponents.url.getter(v38);
      v39 = v68;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v27);
      if (v24((char *)v35, 1, v19) != 1)
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v19);
        v61(v22, v35, v19);
        goto LABEL_19;
      }
    }
    sub_1459C(v35, &qword_3B4370);
LABEL_19:
    sub_1459C((uint64_t)v13, &qword_3B0CB8);
  }
  v40 = v19;
  swift_beginAccess(v2 + 16, v80, 1, 0);
  v41 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = 1;
  sub_17D274(v41);
  v42 = v70;
  sub_1DCA34(v70);
  CurrentValueSubject.value.setter(v42);
  swift_beginAccess(v2 + 64, v79, 0, 0);
  v43 = *(void (**)(uint64_t *))(v2 + 64);
  if (v43)
  {
    v44 = *(_QWORD *)(v2 + 72);
    v46 = *(_BYTE *)(v2 + 24);
    v47 = *(_QWORD *)(v2 + 32);
    v74 = *(_QWORD *)(v2 + 16);
    v45 = v74;
    v75 = v46;
    v76 = v47;
    sub_76C34((uint64_t)v43, v44);
    j__swift_retain(v45);
    sub_17D260(v47);
    v43(&v74);
    sub_327A0((uint64_t)v43, v44);
    j__swift_release(v45);
    sub_17D274(v47);
  }
  v48 = v71;
  *v71 = 1;
  v49 = enum case for PageRenderActivity.primaryDataFetchStarted(_:);
  v50 = type metadata accessor for PageRenderActivity(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v48, v49, v50);
  v52 = v72;
  v51 = v73;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v72 + 104))(v48, enum case for PageRenderEvent.activity(_:), v73);
  PassthroughSubject.send(_:)(v48);
  (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v48, v51);
  v53 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider + 24);
  v54 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider), v53);
  v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 152))(v22, v53, v54);
  v56 = swift_allocObject(&unk_388CA0, 24, 7);
  swift_weakInit(v56 + 16);
  v57 = swift_allocObject(&unk_388CA0, 24, 7);
  swift_weakInit(v57 + 16);
  v58 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v59 = swift_retain();
  v60 = static OS_dispatch_queue.main.getter(v59);
  v77 = v58;
  v78 = &protocol witness table for OS_dispatch_queue;
  v74 = v60;
  Promise.then(perform:orCatchError:on:)(sub_1E02C8, v56, sub_1E02D0, v57, &v74);
  swift_release(v55);
  swift_release(v56);
  swift_release(v57);
  __swift_destroy_boxed_opaque_existential_1(&v74);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v40);
  return swift_release(v57);
}

uint64_t sub_1DAA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[3];
  id v35;
  char v36[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3368);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, v36, 0, 0);
  sub_267BC(v15, (uint64_t)v10, &qword_3B4370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1459C((uint64_t)v10, &qword_3B4370);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightsProvider + 8);
  ObjectType = swift_getObjectType();
  v34[0] = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(v14, ObjectType, v17);
  v19 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v35 = (id)static OS_dispatch_queue.main.getter(v19);
  v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3370);
  v22 = sub_32914(&qword_3BEA40, &qword_3B3370, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v32 = v14;
  v23 = v22;
  v24 = sub_436CC();
  Publisher.receive<A>(on:options:)(&v35, v4, v21, v19, v23, v24);
  sub_1459C((uint64_t)v4, &qword_3B2B18);

  swift_release(v34[0]);
  v25 = swift_allocObject(&unk_388CA0, 24, 7);
  swift_weakInit(v25 + 16);
  v26 = sub_32914(&qword_3B3378, &qword_3B3368, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v27 = Publisher<>.sink(receiveValue:)(sub_1E0310, v25, v5, v26);
  swift_release(v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  v28 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_subscriptions;
  swift_beginAccess(v28, v34, 33, 0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v30 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v28, v29, v30);
  swift_endAccess(v34);
  swift_release(v27);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v32, v11);
}

uint64_t sub_1DADE4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1DAE08(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v11[24];

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v11, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v9 = result;
    *(_QWORD *)(result + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_shelves) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DCA34(v6);
    CurrentValueSubject.value.setter(v6);
    return swift_release(v9);
  }
  return result;
}

uint64_t sub_1DAEDC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1DAE08(a1, v1);
}

void sub_1DAEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void (*v65)(_QWORD *, _QWORD, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char v85;
  _QWORD *v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[30];
  char v103;
  char v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  char v108[32];

  v3 = v2;
  v100 = a2;
  v5 = type metadata accessor for URL(0);
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  __chkstk_darwin(v5);
  v88 = (uint64_t *)((char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v7);
  v97 = (unint64_t *)((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v9);
  v96 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for ModernShelf(0);
  v91 = *((_QWORD *)v11 - 1);
  __chkstk_darwin(v11);
  v13 = (uint64_t **)((char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v14);
  v93 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v16);
  v89 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v92 = (char *)&v88 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v20);
  v98 = (uint64_t)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v22);
  v90 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v24);
  v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ArtworkModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v99 = (uint64_t)&v88 - v32;
  sub_1DBFC4(a1);
  swift_beginAccess(v2 + 48, v108, 0, 0);
  v33 = *(void (**)(uint64_t))(v2 + 48);
  if (v33)
  {
    v34 = *(_QWORD *)(v2 + 56);
    swift_retain();
    v33(a1);
    sub_327A0((uint64_t)v33, v34);
  }
  v101 = a1;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_channelAdamId + 8) & 1) != 0)
  {
    v35 = 0;
    v36 = 0;
  }
  else
  {
    *(_QWORD *)&v105 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_channelAdamId);
    v37 = sub_144B4();
    v35 = BinaryInteger.description.getter(&type metadata for UInt64, v37);
  }
  v38 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_channelAdamId);
  *v38 = v35;
  v38[1] = v36;
  swift_bridgeObjectRelease();
  sub_267BC(v101 + OBJC_IVAR____TtC8ShelfKit4Page_uber, (uint64_t)v26, &qword_3BEB70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_1459C((uint64_t)v26, &qword_3BEB70);
    v39 = v101;
    v41 = (uint64_t)v96;
    v40 = v97;
  }
  else
  {
    v42 = v99;
    sub_3C56C((uint64_t)v26, v99, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v43 = type metadata accessor for Header(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v98, 1, 1, v43);
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
    v45 = swift_allocObject(v44, 72, 7);
    *(_OWORD *)(v45 + 16) = xmmword_2EA0D0;
    sub_14510(v42, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v46 = type metadata accessor for RoomUber(0);
    *(_QWORD *)(v45 + 56) = v46;
    *(_QWORD *)(v45 + 64) = sub_F1C0(&qword_3B5F50, (void (*)(uint64_t))type metadata accessor for RoomUber, (uint64_t)&protocol conformance descriptor for RoomUber);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((_QWORD *)(v45 + 32));
    UUID.init()(boxed_opaque_existential_2Tm);
    sub_3C56C((uint64_t)v30, (uint64_t)boxed_opaque_existential_2Tm + *(int *)(v46 + 20), (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v48 = v95;
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
    v50 = (uint64_t)v92;
    v49(v92, 1, 1, v95);
    v51 = type metadata accessor for ImpressionMetrics(0);
    v105 = 0u;
    v106 = 0u;
    v107 = 0;
    v52 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v93, 1, 1, v51);
    v53 = v11[8];
    *((_BYTE *)v13 + v53) = 3;
    v54 = (uint64_t)v13 + v11[9];
    v49((char *)v54, 1, 1, v48);
    *v13 = 0x726562556D6F6F52;
    v13[1] = 0xE800000000000000;
    sub_15BD4(v98, (uint64_t)v13 + v11[5], &qword_3B0C38);
    v55 = (char *)v13 + v11[6];
    *(_WORD *)v55 = 31;
    *((_WORD *)v55 + 3) = 256;
    *(_DWORD *)(v55 + 2) = 0;
    *((_QWORD *)v55 + 1) = 1;
    *(_QWORD *)((char *)v13 + v11[7]) = v45;
    sub_3C454(v50, v54, &qword_3B4370);
    *((_BYTE *)v13 + v11[10]) = 1;
    *((_BYTE *)v13 + v11[11]) = 0;
    v56 = (uint64_t)v13 + v11[12];
    if (*((_QWORD *)&v106 + 1))
    {
      sub_F4D8(&v105, v56);
    }
    else
    {
      v57 = (unint64_t)v106;
      *(_OWORD *)v56 = v105;
      *(_OWORD *)(v56 + 16) = v57;
      *(_QWORD *)(v56 + 32) = v107;
    }
    v39 = v101;
    v41 = (uint64_t)v96;
    v40 = v97;
    v58 = v91;
    v59 = (uint64_t)v90;
    sub_15BD4(v52, (uint64_t)v13 + v11[13], (uint64_t *)&unk_3B8790);
    *((_BYTE *)v13 + v53) = 3;
    sub_3C56C((uint64_t)v13, v59, type metadata accessor for ModernShelf);
    sub_145D8(v99, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v58 + 56))(v59, 0, 1, v11);
    v60 = v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_uberShelf;
    swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_uberShelf, &v105, 33, 0);
    sub_3C454(v59, v60, &qword_3B8660);
    swift_endAccess(&v105);
  }
  sub_267BC(v39 + OBJC_IVAR____TtC8ShelfKit4Page_nextPage, v41, &qword_3B4720);
  v61 = v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage, &v105, 33, 0);
  sub_C600C(v41, v61, &qword_3B4720);
  swift_endAccess(&v105);
  sub_1DCA34(v40);
  CurrentValueSubject.value.setter(v40);
  sub_1459C(v41, &qword_3B4720);
  sub_41408();
  v62 = type metadata accessor for Podcasts(0);
  *((_QWORD *)&v106 + 1) = v62;
  v63 = sub_F1C0((unint64_t *)&qword_3B33B8, (void (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v107 = v63;
  v64 = __swift_allocate_boxed_opaque_existential_2Tm(&v105);
  v65 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 104);
  v65(v64, enum case for Podcasts.renderImplicitFollowsAsLocalShows(_:), v62);
  LOBYTE(v61) = isFeatureEnabled(_:)(&v105);
  __swift_destroy_boxed_opaque_existential_1(&v105);
  if ((v61 & 1) == 0)
    sub_1DC128(v39);
  if ((objc_msgSend((id)objc_opt_self(PFClientUtil), "supportsLocalLibrary") & 1) == 0)
    sub_2BCB24(v39);
  v66 = v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes, &v105, 33, 0);
  v67 = type metadata accessor for PageRenderContentTypes(0);
  v68 = sub_F1C0(&qword_3C1248, (void (*)(uint64_t))&type metadata accessor for PageRenderContentTypes, (uint64_t)&protocol conformance descriptor for PageRenderContentTypes);
  dispatch thunk of RawRepresentable.rawValue.getter(&v104, v67, v68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
  dispatch thunk of RawRepresentable.rawValue.getter(&v103, v67, v68);
  v102[0] = v103 | v104;
  v69 = v101;
  v70 = sub_F1C0(&qword_3C1250, (void (*)(uint64_t))&type metadata accessor for PageRenderContentTypes, (uint64_t)&protocol conformance descriptor for PageRenderContentTypes);
  dispatch thunk of OptionSet.init(rawValue:)(v102, v67, v70);
  swift_endAccess(&v105);
  v71 = *(_QWORD *)(v69 + 16);
  *((_QWORD *)&v106 + 1) = v62;
  v107 = v63;
  v72 = __swift_allocate_boxed_opaque_existential_2Tm(&v105);
  v65(v72, enum case for Podcasts.timestampLinksInDescription(_:), v62);
  swift_bridgeObjectRetain();
  v73 = isFeatureEnabled(_:)(&v105);
  __swift_destroy_boxed_opaque_existential_1(&v105);
  if ((v73 & 1) != 0 && (InteractionContext.Page.isEpisodePage.getter(v74) & 1) != 0)
  {
    v75 = v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
    swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, v102, 0, 0);
    v76 = v89;
    sub_267BC(v75, v89, &qword_3B4370);
    v77 = v94;
    v78 = v95;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v76, 1, v95) == 1)
    {
      sub_1459C(v76, &qword_3B4370);
    }
    else
    {
      v79 = v76;
      v80 = v88;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v77 + 32))(v88, v79, v78);
      v81 = sub_1DF690(v69, v80);
      v82 = v77;
      v83 = v81;
      (*(void (**)(uint64_t *, uint64_t))(v82 + 8))(v80, v78);
      if (v83)
      {
        swift_bridgeObjectRelease();
        v71 = v83;
      }
    }
  }
  sub_415B0(*(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_objectGraph), v71);
  swift_bridgeObjectRelease();
  v84 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v85 = UITraitCollection.interfaceIdiomIsMac.getter(v84);

  if ((v85 & 1) == 0
    || (*((_QWORD *)&v106 + 1) = v62,
        v107 = v63,
        v86 = __swift_allocate_boxed_opaque_existential_2Tm(&v105),
        v65(v86, enum case for Podcasts.mercuryOnMac(_:), v62),
        v87 = isFeatureEnabled(_:)(&v105),
        __swift_destroy_boxed_opaque_existential_1(&v105),
        (v87 & 1) != 0))
  {
    sub_1DC6FC(v69 + OBJC_IVAR____TtC8ShelfKit4Page_pageContext);
  }
}

_QWORD *StorePageProvider.deinit()
{
  _QWORD *v0;
  unint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = v0[4];
  j__swift_release(v0[2]);
  sub_17D274(v1);
  swift_release(v0[5]);
  sub_327A0(v0[6], v0[7]);
  sub_327A0(v0[8], v0[9]);
  swift_release(v0[10]);
  sub_1459C((uint64_t)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, &qword_3B4370);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_objectGraph));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storeDataProvider));
  swift_unknownObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightsProvider));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_purchaseController));

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_libraryActionController));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_storePageStateController));
  v2 = (char *)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
  v3 = type metadata accessor for PageRenderContentTypes(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_shelfController));
  sub_1459C((uint64_t)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_uberShelf, &qword_3B8660);
  sub_1459C((uint64_t)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightShelf, &qword_3B8660);
  sub_1459C((uint64_t)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingHeaderShelf, &qword_3B8660);
  sub_1459C((uint64_t)v0 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage, &qword_3B4720);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StorePageProvider.__deallocating_deinit()
{
  uint64_t v0;

  StorePageProvider.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1DBB30(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];

  v4 = type metadata accessor for PageRenderContentTypes(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageRenderEvent(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a2 + 16;
  swift_beginAccess(a2 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(Strong + 80);
    swift_retain();
    swift_release(v15);
    v17 = v12 + OBJC_IVAR____TtC8ShelfKit4Page_pageMetrics;
    swift_beginAccess(v12 + OBJC_IVAR____TtC8ShelfKit4Page_pageMetrics, v29, 0, 0);
    v18 = type metadata accessor for PageMetrics(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v17, v18);
    v19 = enum case for PageRenderActivity.primaryDataFetchCompleted(_:);
    v20 = type metadata accessor for PageRenderActivity(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v11, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for PageRenderEvent.activity(_:), v8);
    PassthroughSubject.send(_:)(v11);
    swift_release(v16);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess(v13, v28, 0, 0);
  v21 = swift_weakLoadStrong(v13);
  if (v21)
  {
    v22 = v21;
    v25 = v12;
    v26 = 1;
    v27 = 0;
    swift_retain();
    sub_1D9A68(&v25);
    swift_release(v22);
  }
  swift_beginAccess(v13, &v25, 0, 0);
  result = swift_weakLoadStrong(v13);
  if (result)
  {
    v24 = result;
    static PageRenderContentTypes.primaryData.getter();
    sub_1DAEE4(v12, (uint64_t)v7);
    swift_release(v24);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1DBD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t *);
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PageRenderEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v32, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(Strong + 80);
    swift_retain();
    swift_release(v13);
    *v10 = a1;
    v15 = enum case for PageRenderActivity.primaryDataFetchFailed(_:);
    v16 = type metadata accessor for PageRenderActivity(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v10, v15, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for PageRenderEvent.activity(_:), v7);
    swift_errorRetain(a1);
    PassthroughSubject.send(_:)(v10);
    swift_release(v14);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_beginAccess(v11, v31, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v18 = result;
    swift_beginAccess(result + 16, v30, 1, 0);
    v19 = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v18 + 32) = a1;
    swift_errorRetain(a1);
    sub_17D274(v19);
    sub_1DCA34(v6);
    CurrentValueSubject.value.setter(v6);
    swift_beginAccess(v18 + 64, v29, 0, 0);
    v20 = *(void (**)(uint64_t *))(v18 + 64);
    if (v20)
    {
      v21 = *(_QWORD *)(v18 + 72);
      v23 = *(_BYTE *)(v18 + 24);
      v24 = *(_QWORD *)(v18 + 32);
      v26 = *(_QWORD *)(v18 + 16);
      v22 = v26;
      v27 = v23;
      v28 = v24;
      sub_76C34((uint64_t)v20, v21);
      j__swift_retain(v22);
      sub_17D260(v24);
      v20(&v26);
      sub_327A0((uint64_t)v20, v21);
      j__swift_release(v22);
      sub_17D274(v24);
    }
    return swift_release(v18);
  }
  return result;
}

uint64_t sub_1DBFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  __n128 v13;
  void (*v14)(_BYTE *, _QWORD);
  _QWORD *v15;
  _BYTE *v16;
  char v17[24];
  void *v18;
  _BYTE v19[32];
  _BYTE v20[24];

  v1 = a1 + OBJC_IVAR____TtC8ShelfKit4Page_pageMetrics;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8ShelfKit4Page_pageMetrics, v19, 32, 0);
  v3 = PageMetrics.pageFields.getter(v2);
  if (!v3)
  {
    v16 = v19;
    return swift_endAccess(v16);
  }
  v4 = v3;
  v5 = static MetricsField<>.pageID.getter(v3);
  v7 = sub_13E4A0(v5, v6, v4);
  v9 = v8;
  swift_endAccess(v19);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v9)
  {
    swift_getObjectType();
    v11 = AdamID.init(_:)(v7, v9);
    result = (uint64_t)HighlightsProviderProtocol.isSharedContent(_:)(v11, v12 & 1);
    if ((result & 1) != 0)
    {
      v13 = swift_beginAccess(v1, v20, 33, 0);
      v14 = (void (*)(_BYTE *, _QWORD))PageMetrics.pageFields.modify(v19, v13);
      if (*v15)
      {
        v18 = &type metadata for Bool;
        v17[0] = 1;
        sub_166FC((uint64_t)v17, 0x6F43646572616873, 0xED0000746E65746ELL);
      }
      v14(v19, 0);
      v16 = v20;
      return swift_endAccess(v16);
    }
  }
  return result;
}

void sub_1DC128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55[5];
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v53 - v9;
  __chkstk_darwin(v11);
  v14 = (char *)&v53 - v13;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_isIncomplete) & 1) != 0)
  {
    static Logger.podcastsStatesCoordination.getter(v12);
    v15 = swift_retain_n(a1, 2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v54 = v5;
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v55[0] = v19;
      *(_DWORD *)v18 = 136380675;
      v56 = a1;
      v20 = type metadata accessor for Page(0);
      swift_retain();
      v53 = (uint8_t *)v4;
      v21 = String.init<A>(describing:)(&v56, v20);
      v56 = sub_69298(v21, v22, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, v17, "Can't check potential feed update for incomplete page %{private}s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      (*(void (**)(char *, uint8_t *))(v54 + 8))(v7, v53);
      return;
    }

    swift_release_n(a1, 2);
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33 = v7;
    goto LABEL_13;
  }
  v23 = (uint64_t *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_showAdamId);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_showAdamId + 8) & 1) != 0)
  {
    static Logger.podcastsStatesCoordination.getter(v12);
    v24 = swift_retain_n(a1, 2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v54 = v5;
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v55[0] = v28;
      *(_DWORD *)v27 = 136380675;
      v56 = a1;
      v29 = type metadata accessor for Page(0);
      swift_retain();
      v30 = String.init<A>(describing:)(&v56, v29);
      v56 = sub_69298(v30, v31, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v25, v26, "Can't check potential feed update for page without an adamID %{private}s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      v32 = *(void (**)(char *, uint64_t))(v54 + 8);
    }
    else
    {

      swift_release_n(a1, 2);
      v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    }
    v33 = v10;
LABEL_13:
    v32(v33, v4);
    return;
  }
  v34 = *v23;
  if (*v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v35 = static Logger.podcastsStatesCoordination.getter(v12);
    v36 = static os_log_type_t.default.getter(v35);
    v37 = v36;
    v38 = Logger.logObject.getter(v36);
    v39 = v37;
    if (os_log_type_enabled(v38, v37))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v54 = v5;
      v55[0] = v41;
      v42 = v41;
      *(_DWORD *)v40 = 136380675;
      v53 = v40 + 4;
      v56 = v34;
      v43 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
      v56 = sub_69298(v43, v44, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v38, v39, "Scheduling feed update from store page for implicitly followed podcast adamID: %{private}s", v40, 0xCu);
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    v45 = (_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_libraryActionController);
    v46 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_libraryActionController + 24);
    v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_libraryActionController + 32);
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 144))(v34, v46, v47);
    v49 = swift_allocObject(&unk_388FB0, 24, 7);
    *(_QWORD *)(v49 + 16) = v34;
    v50 = swift_allocObject(&unk_388FD8, 24, 7);
    *(_QWORD *)(v50 + 16) = v34;
    v51 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
    v52 = static OS_dispatch_queue.main.getter(v51);
    v55[3] = v51;
    v55[4] = (uint64_t)&protocol witness table for OS_dispatch_queue;
    v55[0] = v52;
    Promise.then(perform:orCatchError:on:)(sub_1E02F0, v49, sub_1E0308, v50, v55);
    swift_release(v48);
    swift_release(v49);
    swift_release(v50);
    __swift_destroy_boxed_opaque_existential_1(v55);
  }
}

void sub_1DC6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  id v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B36E8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v11);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingProvider;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingProvider))
  {
    swift_storeEnumTagMultiPayload(v14, v12, 6);
    v16 = static InteractionContext.Page.== infix(_:_:)(a1, v14);
    sub_145D8((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    if ((v16 & 1) != 0)
    {
      v17 = objc_allocWithZone((Class)type metadata accessor for UnifiedMessagingProvider());
      v18 = UnifiedMessagingProvider.init(placement:)(0x65486573776F7262, 0xEC00000072656461);
      v19 = *(void **)(v2 + v15);
      *(_QWORD *)(v2 + v15) = v18;

      v20 = *(void **)(v2 + v15);
      if (v20)
      {
        v21 = v20;
        v22 = UnifiedMessagingProvider.bannerShelfPublisher.getter();

        v34[0] = v22;
        v23 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
        v35 = (id)static OS_dispatch_queue.main.getter(v23);
        v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B36F0);
        v26 = sub_32914(&qword_3B36F8, &qword_3B36F0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
        v27 = sub_436CC();
        Publisher.receive<A>(on:options:)(&v35, v6, v25, v23, v26, v27);
        sub_1459C((uint64_t)v6, &qword_3B2B18);

        swift_release(v34[0]);
        v28 = swift_allocObject(&unk_388CA0, 24, 7);
        swift_weakInit(v28 + 16);
        v29 = sub_32914(&qword_3B3700, &qword_3B36E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v30 = Publisher<>.sink(receiveValue:)(sub_1E02D8, v28, v7, v29);
        swift_release(v28);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v31 = v2 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_subscriptions;
        swift_beginAccess(v31, v34, 33, 0);
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
        v33 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
        AnyCancellable.store<A>(in:)(v31, v32, v33);
        swift_endAccess(v34);
        swift_release(v30);
      }
    }
  }
}

uint64_t sub_1DCA34@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  _QWORD *v77;
  unint64_t *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86[24];
  char v87[24];
  char v88[24];
  char v89[24];
  char v90[24];
  unint64_t v91;
  char v92[32];

  v3 = type metadata accessor for ModernPage(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v6);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3B80);
  __chkstk_darwin(v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v12);
  v85 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v82 = (uint64_t)&v74 - v15;
  __chkstk_darwin(v16);
  v84 = (uint64_t)&v74 - v17;
  v18 = type metadata accessor for ModernShelf(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v83 = (uint64_t)&v74 - v23;
  __chkstk_darwin(v24);
  v80 = (uint64_t)&v74 - v25;
  __chkstk_darwin(v26);
  v81 = (uint64_t)&v74 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v74 - v29;
  swift_beginAccess(v1 + 16, v92, 0, 0);
  v31 = *(_QWORD *)(v1 + 32);
  if (v31 >= 2)
  {
    v37 = swift_allocObject(&unk_388CA0, 24, 7);
    swift_weakInit(v37 + 16);
    *a1 = v31;
    a1[1] = (unint64_t)sub_1DF63C;
    a1[2] = v37;
    v38 = type metadata accessor for PageContent(0);
    swift_storeEnumTagMultiPayload(a1, v38, 1);
    return swift_errorRetain(v31);
  }
  v79 = v11;
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_shelves);
  v91 = v32;
  v33 = *(_QWORD *)(v32 + 16);
  if (!v33)
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    *(_BYTE *)a1 = 0;
    v40 = type metadata accessor for PageContent(0);
    v41 = a1;
    v42 = 0;
    return swift_storeEnumTagMultiPayload(v41, v40, v42);
  }
  v76 = v8;
  v77 = v21;
  v75 = v5;
  v78 = a1;
  v74 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v34 = v32 + v74;
  v35 = *(_QWORD *)(v19 + 72);
  swift_bridgeObjectRetain_n(v32, 2);
  while (1)
  {
    sub_14510(v34, (uint64_t)v30, type metadata accessor for ModernShelf);
    v36 = *(_QWORD *)(*(_QWORD *)&v30[*(int *)(v18 + 28)] + 16);
    sub_145D8((uint64_t)v30, type metadata accessor for ModernShelf);
    if (v36)
      break;
    v34 += v35;
    if (!--v33)
    {
      swift_bridgeObjectRelease();
      a1 = v78;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  v43 = v1;
  v44 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_uberShelf;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_uberShelf, v90, 0, 0);
  v45 = v84;
  sub_267BC(v44, v84, &qword_3B8660);
  v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v46(v45, 1, v18) == 1)
  {
    sub_1459C(v45, &qword_3B8660);
    v47 = v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingHeaderShelf;
    swift_beginAccess(v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingHeaderShelf, v89, 0, 0);
    v48 = v82;
    sub_267BC(v47, v82, &qword_3B8660);
    v49 = v46(v48, 1, v18);
    v50 = v77;
    v51 = (uint64_t)v76;
    if (v49 == 1)
    {
      sub_1459C(v48, &qword_3B8660);
    }
    else
    {
      v54 = v80;
      sub_3C56C(v48, v80, type metadata accessor for ModernShelf);
      v55 = (uint64_t)v79;
      sub_14510(v54, (uint64_t)v79, type metadata accessor for ModernShelf);
      sub_6A888(0, 0, v55);
      sub_145D8(v54, type metadata accessor for ModernShelf);
    }
  }
  else
  {
    v52 = v81;
    sub_3C56C(v45, v81, type metadata accessor for ModernShelf);
    v53 = (uint64_t)v79;
    sub_14510(v52, (uint64_t)v79, type metadata accessor for ModernShelf);
    sub_6A888(0, 0, v53);
    sub_145D8(v52, type metadata accessor for ModernShelf);
    v50 = v77;
    v51 = (uint64_t)v76;
  }
  v56 = v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightShelf;
  swift_beginAccess(v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightShelf, v88, 0, 0);
  v57 = v56;
  v58 = v85;
  sub_267BC(v57, v85, &qword_3B8660);
  if (v46(v58, 1, v18) == 1)
  {
    sub_1459C(v58, &qword_3B8660);
    goto LABEL_19;
  }
  v59 = v83;
  result = sub_3C56C(v58, v83, type metadata accessor for ModernShelf);
  if (*(_QWORD *)(v91 + 16))
  {
    v60 = (uint64_t)v79;
    sub_14510(v59, (uint64_t)v79, type metadata accessor for ModernShelf);
    sub_6A888(1, 1, v60);
    sub_145D8(v59, type metadata accessor for ModernShelf);
LABEL_19:
    v61 = v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
    swift_beginAccess(v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage, v87, 0, 0);
    sub_267BC(v61, v51, &qword_3B4720);
    v62 = type metadata accessor for JSONObject(0);
    LODWORD(v61) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v51, 1, v62);
    sub_1459C(v51, &qword_3B4720);
    if ((_DWORD)v61 != 1 || (*(_BYTE *)(v43 + 24) & 1) == 0 && *(_QWORD *)(v43 + 32))
    {
      static ModernShelf.loadingShelf(id:)(0x53676E6964616F6CLL, 0xEE004449666C6568, v50);
      v63 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native(v91) & 1) == 0)
        v63 = sub_10CD4(0, *(_QWORD *)(v63 + 16) + 1, 1, v63);
      v65 = *(_QWORD *)(v63 + 16);
      v64 = *(_QWORD *)(v63 + 24);
      if (v65 >= v64 >> 1)
        v63 = sub_10CD4(v64 > 1, v65 + 1, 1, v63);
      *(_QWORD *)(v63 + 16) = v65 + 1;
      sub_3C56C((uint64_t)v50, v63 + v74 + v65 * v35, type metadata accessor for ModernShelf);
      v91 = v63;
    }
    v66 = *(_QWORD *)(v43 + 16);
    v67 = v91;
    j__swift_retain(v66);
    v68 = v75;
    sub_1DD3B0(v66, v67, v75);
    swift_bridgeObjectRelease();
    j__swift_release(v66);
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B89B0);
    v70 = (uint64_t)v78;
    v71 = (char *)v78 + *(int *)(v69 + 48);
    sub_3C56C((uint64_t)v68, (uint64_t)v78, type metadata accessor for ModernPage);
    v72 = v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
    swift_beginAccess(v43 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes, v86, 0, 0);
    v73 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
    v40 = type metadata accessor for PageContent(0);
    v41 = (unint64_t *)v70;
    v42 = 3;
    return swift_storeEnumTagMultiPayload(v41, v40, v42);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v15[24];
  char v16[24];

  v2 = type metadata accessor for PageRenderContentTypes(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for PageRenderEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v11 = result;
    *v9 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for PageRenderEvent.reload(_:), v6);
    PassthroughSubject.send(_:)(v9);
    v12 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    static PageRenderContentTypes.unspecified.getter(v12);
    v13 = v11 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
    v14 = swift_beginAccess(v11 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes, v15, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v3 + 40))(v13, v5, v2, v14);
    swift_endAccess(v15);
    sub_1DA338(1);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_1DD3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v30;
  char *v31;
  uint64_t v32;
  _BYTE v33[24];

  v31 = a3;
  v32 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BFAD0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v30 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - v15;
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - v19;
  if (a1)
  {
    v21 = a1 + OBJC_IVAR____TtC8ShelfKit4Page_pageMetrics;
    v22 = swift_beginAccess(v21, v33, 0, 0);
    v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
    v23(v16, v21, v10, v22);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v16, v10);
  }
  else
  {
    static PageMetrics.notInstrumented.getter(v18);
    v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  }
  ((void (*)(char *, char *, uint64_t))v23)(v13, v20, v10);
  PageID.init(from:)(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v24 = v30;
    PageID.init(with:)(0x67615065726F7453, 0xE900000000000065);
    sub_1459C((uint64_t)v6, &qword_3BFAD0);
    v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v24 = v30;
    v25(v30, v6, v7);
  }
  v27 = v31;
  v26 = v32;
  v25(v31, v24, v7);
  v28 = type metadata accessor for ModernPage(0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v27[*(int *)(v28 + 20)], v20, v10);
  *(_QWORD *)&v27[*(int *)(v28 + 24)] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DD610(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    sub_1DD6C8(v2);
    swift_release(v5);
  }
  swift_beginAccess(v3, v10, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v7 = result;
    v8 = (_BYTE *)(result + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage);
    swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage, v9, 1, 0);
    *v8 = 0;
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_1DD6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v3);
  v5 = (unint64_t *)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_415B0(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_objectGraph), *(_QWORD *)(a1 + 16));
  sub_267BC(a1 + OBJC_IVAR____TtC8ShelfKit4Page_nextPage, (uint64_t)v8, &qword_3B4720);
  v9 = v1 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
  swift_beginAccess(v9, v12, 33, 0);
  sub_C600C((uint64_t)v8, v9, &qword_3B4720);
  swift_endAccess(v12);
  sub_1DCA34(v5);
  CurrentValueSubject.value.setter(v5);
  return sub_1459C((uint64_t)v8, &qword_3B4720);
}

uint64_t sub_1DD80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint8_t *v27;
  uint64_t Strong;
  uint64_t v29;
  _BYTE *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _BYTE v39[24];
  char v40[24];
  char v41[24];
  uint64_t v42;
  uint64_t v43;

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2 + 16;
  static Logger.navigation.getter(v15);
  swift_errorRetain(a1);
  v16 = swift_errorRetain(a1);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v37 = a2 + 16;
    v19 = swift_slowAlloc(12, -1);
    v36 = v10;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(8, -1);
    v35 = v11;
    v22 = (_QWORD *)v21;
    v38 = v9;
    *(_DWORD *)v20 = 138412290;
    swift_errorRetain(a1);
    v23 = v6;
    v24 = _swift_stdlib_bridgeErrorToNSError(a1);
    v42 = v24;
    v14 = v37;
    v9 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
    *v22 = v24;
    v6 = v23;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v17, v18, "Could not load next page of shelves, reason: %@", v20, 0xCu);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
    swift_arrayDestroy(v22, 1, v25);
    v26 = v22;
    v11 = v35;
    swift_slowDealloc(v26, -1, -1);
    v27 = v20;
    v10 = v36;
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_beginAccess(v14, &v42, 0, 0);
  Strong = swift_weakLoadStrong(v14);
  if (Strong)
  {
    v29 = Strong;
    v30 = (_BYTE *)(Strong + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_isPreparingNextPage, v41, 1, 0);
    *v30 = 0;
    swift_release(v29);
  }
  swift_beginAccess(v14, v40, 0, 0);
  result = swift_weakLoadStrong(v14);
  if (result)
  {
    v32 = result;
    v33 = type metadata accessor for JSONObject(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
    v34 = v32 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage;
    swift_beginAccess(v32 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_nextPage, v39, 33, 0);
    sub_C600C((uint64_t)v9, v34, &qword_3B4720);
    swift_endAccess(v39);
    sub_1DCA34(v6);
    CurrentValueSubject.value.setter(v6);
    sub_1459C((uint64_t)v9, &qword_3B4720);
    return swift_release(v32);
  }
  return result;
}

unint64_t sub_1DDB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = a2 + 16;
  swift_beginAccess(v10, v26, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    v12 = Strong;
    sub_14510(a1, (uint64_t)v9, type metadata accessor for ModernShelf);
    v13 = type metadata accessor for ModernShelf(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
    v14 = v12 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightShelf;
    swift_beginAccess(v12 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_highlightShelf, v25, 33, 0);
    sub_C600C((uint64_t)v9, v14, &qword_3B8660);
    swift_endAccess(v25);
    sub_1DCA34(v6);
    CurrentValueSubject.value.setter(v6);
    sub_1459C((uint64_t)v9, &qword_3B8660);
    swift_release(v12);
  }
  swift_beginAccess(v10, v25, 0, 0);
  result = swift_weakLoadStrong(v10);
  if (result)
  {
    v16 = result;
    swift_beginAccess(result + 16, v24, 0, 0);
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(unsigned __int8 *)(v16 + 24);
    v19 = *(_QWORD *)(v16 + 32);
    j__swift_retain(v17);
    sub_17D260(v19);
    swift_release(v16);
    v20 = swift_retain();
    if (v18 == 1)
    {
      j__swift_release(v20);
      sub_17D274(v19);
    }
    else
    {
      j__swift_release(v20);
      result = sub_17D274(v19);
      if (!v17)
        return result;
    }
    swift_beginAccess(v10, v23, 0, 0);
    v21 = swift_weakLoadStrong(v10);
    if (v21)
    {
      v22 = v21;
      sub_1DBFC4(v17);
      j__swift_release(v17);
      return swift_release(v22);
    }
    else
    {
      return j__swift_release(v17);
    }
  }
  return result;
}

uint64_t sub_1DDDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)&v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    sub_267BC(a1, (uint64_t)v9, &qword_3B8660);
    v12 = v11 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingHeaderShelf;
    swift_beginAccess(v11 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_unifiedMessagingHeaderShelf, v13, 33, 0);
    sub_C600C((uint64_t)v9, v12, &qword_3B8660);
    swift_endAccess(v13);
    sub_1DCA34(v6);
    CurrentValueSubject.value.setter(v6);
    sub_1459C((uint64_t)v9, &qword_3B8660);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_1DDF18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_388F60, 32, 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_1DF670;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_20;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v19 = sub_32914((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v21);
}

uint64_t sub_1DE140(uint64_t *a1)
{
  uint64_t v1;

  return sub_1DDF18(a1, v1);
}

uint64_t sub_1DE148(uint64_t *a1)
{
  uint64_t v1;

  return sub_1DD610(a1, v1);
}

uint64_t sub_1DE150(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD80C(a1, v1);
}

uint64_t sub_1DE158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[24];
  uint64_t v92;
  _BYTE v93[16];
  uint64_t v94[2];

  v4 = type metadata accessor for PageRenderContentTypes(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for PageRenderEvent(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for URL(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v81 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v86 = (char *)&v70 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - v16;
  v87 = sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
  static OS_os_log.purchases.getter(v87);
  swift_retain_n(a2, 4);
  v18 = swift_bridgeObjectRetain_n(a1, 2);
  v19 = Logger.logObject.getter(v18);
  v85 = static os_log_type_t.default.getter(v19);
  v20 = os_log_type_enabled(v19, (os_log_type_t)v85);
  v88 = a2 + 16;
  if (!v20)
  {

    swift_release_n(a2, 4);
    swift_bridgeObjectRelease_n(a1, 2);
    v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    v35(v17, v10);
    v36 = v10;
    goto LABEL_12;
  }
  v75 = v19;
  v76 = v11;
  v71 = v10;
  v77 = v7;
  v72 = v5;
  v73 = v4;
  v21 = swift_slowAlloc(32, -1);
  v74 = swift_slowAlloc(96, -1);
  v94[0] = v74;
  *(_DWORD *)v21 = 136315650;
  v92 = a1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B76D8);
  v23 = sub_32914(&qword_3B76E0, &qword_3B76D8, (uint64_t)&protocol conformance descriptor for Set<A>);
  v24 = sub_65CC4();
  v25 = Sequence<>.joined(separator:)(44, 0xE100000000000000, v22, v23, v24);
  v92 = sub_69298(v25, v26, v94);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
  swift_bridgeObjectRelease_n(a1, 2);
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 12) = 2080;
  swift_beginAccess(a2 + 16, v91, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (!Strong)
    goto LABEL_5;
  v28 = Strong;
  v29 = Strong + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
  v30 = swift_beginAccess(Strong + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, v90, 0, 0);
  v31 = v79;
  v32 = v80;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v79 + 48))(v29, 1, v80, v30))
  {
    swift_release(v28);
LABEL_5:
    v33 = 0;
    v34 = 0xE000000000000000;
    goto LABEL_8;
  }
  v37 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v78, v29, v32);
  v38 = swift_release(v28);
  v33 = URL.absoluteString.getter(v38);
  v34 = v39;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v32);
LABEL_8:
  v4 = v73;
  v36 = v71;
  v92 = sub_69298(v33, v34, v94);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
  swift_release_n(a2, 2);
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 22) = 2080;
  v40 = v88;
  swift_beginAccess(v88, v89, 0, 0);
  v41 = swift_weakLoadStrong(v40);
  if (!v41
    || (v42 = v41,
        v44 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_channelAdamId),
        v43 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_channelAdamId + 8),
        swift_bridgeObjectRetain(),
        swift_release(v42),
        !v43))
  {
    swift_bridgeObjectRelease();
    v44 = 0;
    v43 = 0xE000000000000000;
  }
  v5 = v72;
  v92 = sub_69298(v44, v43, v94);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
  swift_release_n(a2, 2);
  swift_bridgeObjectRelease();
  v45 = v75;
  _os_log_impl(&dword_0, v75, (os_log_type_t)v85, "StorePresenter got purchase list %s and we're displaying url %s for channel: %s", (uint8_t *)v21, 0x20u);
  v46 = v74;
  swift_arrayDestroy(v74, 3, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v46, -1, -1);
  swift_slowDealloc(v21, -1, -1);

  v35 = *(void (**)(char *, uint64_t))(v76 + 8);
  v35(v17, v36);
  v7 = v77;
LABEL_12:
  swift_retain();
  v47 = swift_bridgeObjectRetain();
  v48 = sub_1E0104(v47, a2);
  swift_release(a2);
  v49 = *(_QWORD *)(v48 + 16);
  v50 = swift_release(v48);
  if (v49)
  {
    v51 = v86;
    v52 = static OS_os_log.purchases.getter(v50);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_0, v53, v54, "StorePresenter product displayed was purchased, reloading", v55, 2u);
      swift_slowDealloc(v55, -1, -1);
    }

    v35(v51, v36);
    v56 = v88;
    swift_beginAccess(v88, v94, 0, 0);
    result = swift_weakLoadStrong(v56);
    if (result)
    {
      v58 = result;
      v59 = v82;
      *v82 = 1;
      v60 = v83;
      v61 = v84;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v83 + 104))(v59, enum case for PageRenderEvent.reload(_:), v84);
      PassthroughSubject.send(_:)(v59);
      v62 = (*(uint64_t (**)(_BYTE *, uint64_t))(v60 + 8))(v59, v61);
      static PageRenderContentTypes.unspecified.getter(v62);
      v63 = v58 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes;
      v64 = swift_beginAccess(v58 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_contentTypes, &v92, 33, 0);
      (*(void (**)(uint64_t, char *, uint64_t, __n128))(v5 + 40))(v63, v7, v4, v64);
      swift_endAccess(&v92);
      sub_1DA338(1);
      return swift_release(v58);
    }
  }
  else
  {
    v65 = v81;
    v66 = static OS_os_log.purchases.getter(v50);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.default.getter(v67);
    if (os_log_type_enabled(v67, (os_log_type_t)v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_0, v67, (os_log_type_t)v68, "No changes in entitlement for StorePresenter product displayed.", v69, 2u);
      swift_slowDealloc(v69, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v35)(v65, v36);
  }
  return result;
}

uint64_t sub_1DE90C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*a1 >> 57) & 0x78 | *a1 & 7;
  if (v9 == 95)
    v10 = 0x8000000000313340;
  else
    v10 = 0x8000000000313300;
  v11 = static Logger.podcastsStatesCoordination.getter(v6);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = swift_bridgeObjectRetain();
  v14 = Logger.logObject.getter(v13);
  v15 = v12;
  if (os_log_type_enabled(v14, v12))
  {
    if (v9 == 95)
      v16 = 0xD000000000000052;
    else
      v16 = 0xD000000000000039;
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v25 = v18;
    *(_DWORD *)v17 = 136315395;
    v23 = v4;
    swift_bridgeObjectRetain();
    v24 = sub_69298(v16, v10, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v17 + 12) = 2081;
    v24 = a2;
    v19 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v24 = sub_69298(v19, v20, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "%s adamID: %{private}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_1DEB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = static Logger.podcastsStatesCoordination.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  swift_errorRetain(a1);
  v11 = swift_errorRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = v10;
  if (os_log_type_enabled(v12, v10))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v24 = v4;
    v25 = a2;
    v16 = v15;
    v26 = v15;
    *(_DWORD *)v14 = 136380931;
    v17 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v25 = sub_69298(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v25 = a1;
    swift_errorRetain(a1);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B08);
    v20 = String.init<A>(describing:)(&v25, v19);
    v25 = sub_69298(v20, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v12, v13, "Error triggering feed update from store page for podcast adamID: %{private}s, with error: %s.", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1DEDC8()
{
  return type metadata accessor for StorePageProvider(0);
}

uint64_t type metadata accessor for StorePageProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_3C1110;
  if (!qword_3C1110)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StorePageProvider);
  return result;
}

void sub_1DEE0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[17];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;

  v10[0] = &unk_2FE658;
  v10[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v10[2] = &unk_2FE670;
  v10[3] = &unk_2FE670;
  v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_3EE70(319, (unint64_t *)&qword_3B1C30, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v10[5] = *(_QWORD *)(v2 - 8) + 64;
    v10[6] = &unk_2FE670;
    v10[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[8] = &unk_2FE688;
    v10[9] = &unk_2FE6A0;
    v10[10] = &unk_2FE688;
    v10[11] = &unk_2FE6B8;
    v10[12] = &unk_2FE688;
    v10[13] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4 = type metadata accessor for PageRenderContentTypes(319);
    if (v5 <= 0x3F)
    {
      v10[14] = *(_QWORD *)(v4 - 8) + 64;
      v10[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[16] = (char *)&value witness table for Builtin.NativeObject + 64;
      sub_3EE70(319, (unint64_t *)&qword_3B3460, type metadata accessor for ModernShelf);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = v11;
        v13 = v11;
        v14 = &unk_2FE6D0;
        sub_3EE70(319, (unint64_t *)&qword_3B4868, (uint64_t (*)(uint64_t))&type metadata accessor for JSONObject);
        if (v9 <= 0x3F)
        {
          v15 = *(_QWORD *)(v8 - 8) + 64;
          v16 = (char *)&value witness table for Builtin.BridgeObject + 64;
          swift_updateClassMetadata2(a1, 256, 23, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t method lookup function for StorePageProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for StorePageProvider);
}

uint64_t dispatch thunk of StorePageProvider.__allocating_init(asPartOf:pageURL:page:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

unint64_t destroy for StorePageProvider.State(_QWORD *a1)
{
  unint64_t result;

  j__swift_release(*a1);
  result = a1[2];
  if (result >= 2)
    return swift_errorRelease(result);
  return result;
}

uint64_t _s8ShelfKit17StorePageProviderC5StateVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  unint64_t v6;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = a2[2];
  if (v6 >= 2)
    swift_errorRetain(v6);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t *assignWithCopy for StorePageProvider.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2);
  v6 = *a1;
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  j__swift_release(v6);
  v7 = a1[2];
  v8 = a2[2];
  if (v7 >= 2)
  {
    if (v8 >= 2)
    {
      swift_errorRetain(a2[2]);
      v9 = a1[2];
      a1[2] = v8;
      swift_errorRelease(v9);
    }
    else
    {
      swift_errorRelease(v7);
      a1[2] = a2[2];
    }
  }
  else
  {
    if (v8 >= 2)
      swift_errorRetain(a2[2]);
    a1[2] = v8;
  }
  return a1;
}

uint64_t *assignWithTake for StorePageProvider.State(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5);
  v6 = a1[2];
  v7 = a2[2];
  if (v6 >= 2)
  {
    if (v7 >= 2)
    {
      a1[2] = v7;
      swift_errorRelease(v6);
      return a1;
    }
    swift_errorRelease(v6);
  }
  a1[2] = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for StorePageProvider.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorePageProvider.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorePageProvider.State()
{
  return &type metadata for StorePageProvider.State;
}

_QWORD *initializeBufferWithCopyOfBuffer for StorePageProvider.State.LoadState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL)
    swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for StorePageProvider.State.LoadState(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_errorRelease(result);
  return result;
}

unint64_t *assignWithCopy for StorePageProvider.State.LoadState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
      swift_errorRetain(*a2);
    *a1 = v4;
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_errorRelease(v3);
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain(*a2);
    v5 = *a1;
    *a1 = v4;
    swift_errorRelease(v5);
  }
  return a1;
}

unint64_t *assignWithTake for StorePageProvider.State.LoadState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {
    swift_errorRelease(v3);
LABEL_6:
    *a1 = v4;
    return a1;
  }
  *a1 = v4;
  swift_errorRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorePageProvider.State.LoadState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StorePageProvider.State.LoadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1DF3F4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1DF40C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for StorePageProvider.State.LoadState()
{
  return &type metadata for StorePageProvider.State.LoadState;
}

uint64_t initializeBufferWithCopyOfBuffer for StorePageProvider.State.PageState(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for StorePageProvider.State.PageState(_QWORD *a1)
{
  return j__swift_release(*a1);
}

uint64_t *assignWithCopy for StorePageProvider.State.PageState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2);
  v5 = *a1;
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5);
  return a1;
}

uint64_t *assignWithTake for StorePageProvider.State.PageState(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  j__swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorePageProvider.State.PageState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorePageProvider.State.PageState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DF5A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StorePageProvider.State.PageState()
{
  return &type metadata for StorePageProvider.State.PageState;
}

uint64_t sub_1DF5C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1DF5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DF618(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1DF63C()
{
  uint64_t v0;

  return sub_1DD244(v0);
}

uint64_t sub_1DF644()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1DF670()
{
  uint64_t v0;

  return sub_1DE158(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1DF690(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t result;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  int v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  char v66[24];
  _QWORD v67[3];
  _OWORD v68[2];
  uint64_t v69;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B92D0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((InteractionContext.Page.isEpisodePage.getter(v17) & 1) == 0)
    return 0;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = (char *)((unint64_t)v20 >> 62);
  if ((unint64_t)v20 >> 62)
    goto LABEL_39;
  v22 = *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(v20, 2);
  if (!v22)
  {
LABEL_24:
    swift_bridgeObjectRelease_n(v20, 2);
    return 0;
  }
LABEL_4:
  v64 = v21;
  v65 = (unint64_t)a2;
  if ((v20 & 0xC000000000000001) == 0)
  {
    v23 = (char *)*(id *)(v20 + 32);
    goto LABEL_6;
  }
  while (1)
  {
    v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
LABEL_6:
    v21 = v23;
    a2 = &OBJC_IVAR____TtC8ShelfKit5Shelf_contentType;
    if (*(_QWORD *)&v23[OBJC_IVAR____TtC8ShelfKit5Shelf_contentType] == 20)
      break;

    if (v22 == 1)
      goto LABEL_24;
    if ((v20 & 0xC000000000000001) != 0)
    {
      v63 = v6;
      v32 = 1;
      while (1)
      {
        v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32);
        v6 = (char *)(v32 + 1);
        if (__OFADD__(v32, 1))
          break;
        v21 = (char *)v33;
        if (*(_QWORD *)(v33 + OBJC_IVAR____TtC8ShelfKit5Shelf_contentType) == 20)
        {
          v6 = v63;
          goto LABEL_7;
        }
        swift_unknownObjectRelease(v33);
        ++v32;
        if (v6 == (char *)v22)
          goto LABEL_24;
      }
      __break(1u);
LABEL_39:
      if (v20 < 0)
        v56 = v20;
      else
        v56 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v20, 2);
      v22 = _CocoaArrayWrapper.endIndex.getter(v56);
      if (!v22)
        goto LABEL_24;
      goto LABEL_4;
    }
    v34 = 5;
    while (1)
    {
      v35 = v34 - 3;
      if (__OFADD__(v34 - 4, 1))
        break;
      v36 = *(char **)(v20 + 8 * v34);
      if (*(_QWORD *)&v36[OBJC_IVAR____TtC8ShelfKit5Shelf_contentType] == 20)
      {
        v21 = v36;
        goto LABEL_7;
      }
      ++v34;
      if (v35 == v22)
        goto LABEL_24;
    }
    __break(1u);
  }
LABEL_7:
  swift_bridgeObjectRelease_n(v20, 2);
  swift_bridgeObjectRetain();
  v24 = sub_1D8CF8((uint64_t)v21, v20);
  v26 = v25;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0
    || (v27 = *(_QWORD *)&v21[OBJC_IVAR____TtC8ShelfKit5Shelf_items], !*(_QWORD *)(v27 + 16))
    || (sub_150C8(v27 + 32, (uint64_t)v68),
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0948),
        v29 = type metadata accessor for Paragraph(0),
        (swift_dynamicCast(v67, v68, v28, v29, 6) & 1) == 0))
  {
LABEL_36:

    return 0;
  }
  v63 = (char *)v67[0];
  v30 = *(_QWORD *)(v67[0] + 32);
  v60 = v29;
  v61 = v24;
  if (v30 >> 62 == 2 || v30 >> 62 == 1)
    v31 = (void *)(v30 & 0x3FFFFFFFFFFFFFFFLL);
  else
    v31 = (void *)(v30 & 0x3FFFFFFFFFFFFFFFLL);
  v62 = type metadata accessor for TimestampParser(0);
  v37 = v31;
  v38 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

  v39 = (void *)static TimestampParser.addTimestampAttributions(to:episodeURL:)(v38, v65);
  if (!v39)
  {
    swift_release(v63);
    goto LABEL_36;
  }
  v40 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString(0));
  v57 = v39;
  v41 = LanguageAwareString.init(_:baseParagraphStyle:)(v57, 0);
  v65 = v41 | 0x8000000000000000;
  v42 = v63;
  LODWORD(v62) = v63[41];
  v59 = v63[40];
  swift_beginAccess(v63 + 42, v67, 0, 0);
  v58 = v42[42];
  swift_beginAccess(v42 + 43, v66, 0, 0);
  v43 = v42[43];
  sub_267BC((uint64_t)&v42[OBJC_IVAR____TtC8ShelfKit9Paragraph_shareSheetContentSource], (uint64_t)v19, &qword_3B92D0);
  sub_267BC((uint64_t)&v42[OBJC_IVAR____TtC8ShelfKit9Paragraph_impressionMetrics], (uint64_t)v15, (uint64_t *)&unk_3B8790);
  v44 = v60;
  swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
  v45 = sub_F80AC(v65, v59, v62, v58, v43, (uint64_t)v19, (uint64_t)v15);

  v46 = type metadata accessor for ActionMenu(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v12, 1, 1, v46);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0940);
  v48 = swift_allocObject(v47, 72, 7);
  *(_OWORD *)(v48 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v48 + 56) = v44;
  *(_QWORD *)(v48 + 64) = sub_F1C0(&qword_3B67B0, (void (*)(uint64_t))type metadata accessor for Paragraph, (uint64_t)&protocol conformance descriptor for Paragraph);
  *(_QWORD *)(v48 + 32) = v45;
  v49 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v9, 1, 1, v49);
  v50 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v6, 1, 1, v50);
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  sub_267BC((uint64_t)&v21[OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics], (uint64_t)v15, (uint64_t *)&unk_3B8790);
  objc_allocWithZone((Class)type metadata accessor for Shelf(0));
  swift_retain();
  v51 = Shelf.init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(0, 0, 20, 0, 0, 0, 0, 0, 0, 0, (uint64_t)v12, 0, 0, 0, v48, (uint64_t)v9, 3, 2, 1,
          0,
          0,
          (uint64_t)v6,
          (uint64_t)v68,
          (uint64_t)v15);
  swift_bridgeObjectRetain();
  v52 = v51;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(v20);
  *(_QWORD *)&v68[0] = v20;
  if (v64 || (result & 1) == 0)
  {
    result = sub_1E544(v20);
    v20 = result;
    *(_QWORD *)&v68[0] = result;
  }
  if ((v61 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v61 < *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8)))
  {
    v54 = *(void **)((char *)&stru_20.cmd + 8 * v61 + (v20 & 0xFFFFFFFFFFFFFF8));
    *(_QWORD *)((char *)&stru_20.cmd + 8 * v61 + (v20 & 0xFFFFFFFFFFFFFF8)) = v52;

    specialized Array._endMutation()(v55);
    swift_release(v63);

    swift_release(v45);
    return *(_QWORD *)&v68[0];
  }
  __break(1u);
  return result;
}

void sub_1DFD60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  char v52[24];
  char v53[32];
  int64_t v54;

  v40 = a2;
  v42 = a1;
  v6 = type metadata accessor for URL(0);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = 0;
  v8 = 0;
  v9 = *(_QWORD *)(a3 + 56);
  v46 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v54 = (unint64_t)(v10 + 63) >> 6;
  v13 = a4 + 16;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_21;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v16 >= v54)
      goto LABEL_33;
    v17 = *(_QWORD *)(v46 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v54)
        goto LABEL_33;
      v17 = *(_QWORD *)(v46 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v54)
          goto LABEL_33;
        v17 = *(_QWORD *)(v46 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_21:
    v19 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v15);
    v21 = *v19;
    v20 = v19[1];
    swift_beginAccess(v13, v53, 0, 0);
    Strong = swift_weakLoadStrong(v13);
    if (Strong)
    {
      v23 = Strong;
      v24 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_channelAdamId);
      v25 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_channelAdamId + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release(v23);
      if (v25)
      {
        v49 = v21;
        v50 = v20;
        v47 = v24;
        v48 = v25;
        v26 = sub_65CC4();
        v27 = StringProtocol.contains<A>(_:)(&v47, &type metadata for String, &type metadata for String, v26, v26);
        swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
          goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_beginAccess(v13, v52, 0, 0);
    v28 = swift_weakLoadStrong(v13);
    if (v28)
    {
      v29 = v28;
      v30 = v28 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL;
      v31 = swift_beginAccess(v28 + OBJC_IVAR____TtC8ShelfKit17StorePageProvider_pageURL, v51, 0, 0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v44 + 48))(v30, 1, v45, v31))
      {
        swift_bridgeObjectRelease();
        swift_release(v29);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v41, v30, v45);
        v32 = swift_release(v29);
        v33 = v41;
        v39 = URL.absoluteString.getter(v32);
        v35 = v34;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v45);
        v49 = v39;
        v50 = v35;
        v47 = v21;
        v48 = v20;
        v36 = sub_65CC4();
        StringProtocol.contains<A>(_:)(&v47, &type metadata for String, &type metadata for String, v36, v36);
        swift_bridgeObjectRelease();
LABEL_30:
        swift_bridgeObjectRelease();
        *(unint64_t *)((char *)v42 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        if (__OFADD__(v43++, 1))
        {
          __break(1u);
LABEL_33:
          swift_retain();
          sub_2CE864(v42, v40, v43, a3);
          return;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v18 = v16 + 3;
  if (v18 >= v54)
    goto LABEL_33;
  v17 = *(_QWORD *)(v46 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v54)
      goto LABEL_33;
    v17 = *(_QWORD *)(v46 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1E0104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n(a2, 2);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v9, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v17 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    sub_1DFD60((unint64_t *)((char *)&v17 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    v12 = v11;
    swift_release(a1);
    v13 = swift_release(a2);
    if (v3)
      swift_willThrow(v13);
    swift_release_n(a2, 2);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v9, -1);
    bzero(v14, v9);
    swift_retain();
    sub_1DFD60((unint64_t *)v14, v8, a1, a2);
    v12 = v15;
    swift_release(a1);
    swift_release(a2);
    swift_slowDealloc(v14, -1, -1);
    swift_release_n(a2, 2);
  }
  return v12;
}

uint64_t sub_1E02C8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1DBB30(a1, v1);
}

uint64_t sub_1E02D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1DBD70(a1, v1);
}

uint64_t sub_1E02D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1DDDCC(a1, v1);
}

uint64_t sub_1E02E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1E02F0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1DE90C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1E02F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1E0308(uint64_t a1)
{
  uint64_t v1;

  return sub_1DEB70(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1E0310(uint64_t a1)
{
  uint64_t v1;

  return sub_1DDB68(a1, v1);
}

void sub_1E032C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E0374(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E03DC + 4 * byte_2FE714[a2]))(0x737472616863);
}

uint64_t sub_1E03DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x737472616863 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x737472616863, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

BOOL sub_1E0488(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_1E0494(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7079546563697270;
  else
    v3 = 0x64496D616461;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x7079546563697270;
  else
    v5 = 0x64496D616461;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E0538(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64496D616461;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6863614370696B73;
    else
      v4 = 0xD000000000000010;
    if (v3 == 1)
      v5 = 0xE900000000000065;
    else
      v5 = 0x8000000000309830;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6863614370696B73;
      else
        v2 = 0xD000000000000010;
      if (v6 == 1)
        v7 = 0xE900000000000065;
      else
        v7 = 0x8000000000309830;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x64496D616461;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x64496D616461)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E0650(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7263736275537369;
  else
    v3 = 0x64496D616461;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEC00000064656269;
  if ((a2 & 1) != 0)
    v5 = 0x7263736275537369;
  else
    v5 = 0x64496D616461;
  if ((a2 & 1) != 0)
    v6 = 0xEC00000064656269;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E06F8(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x647261646E617473;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 1919246965;
    else
      v4 = 0x746954656772616CLL;
    if (v3 == 1)
      v5 = 0xE400000000000000;
    else
      v5 = 0xEA0000000000656CLL;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 1919246965;
      else
        v2 = 0x746954656772616CLL;
      if (v6 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xEA0000000000656CLL;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x647261646E617473;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x647261646E617473)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_1E0808(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E0858(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E08E8 + 4 * byte_2FE71D[a2]))(0x644972657375);
}

uint64_t sub_1E08E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x644972657375 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x644972657375, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_1E09C0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E0A08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E0A84 + 4 * byte_2FE727[a2]))(0x6D617473656D6974);
}

uint64_t sub_1E0A84(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D617473656D6974 && v1 == 0xE900000000000070)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6D617473656D6974, 0xE900000000000070, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000070);
  return v2 & 1;
}

uint64_t sub_1E0B54(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D617473656D6974;
  else
    v3 = 0x64496D616461;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE900000000000070;
  if ((a2 & 1) != 0)
    v5 = 0x6D617473656D6974;
  else
    v5 = 0x64496D616461;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000070;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E0BF8(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64695F737469;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6169726F74696465;
    else
      v4 = 0x64695F6F636572;
    if (v3 == 1)
      v5 = 0xEC00000064695F6CLL;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6169726F74696465;
      else
        v2 = 0x64695F6F636572;
      if (v6 == 1)
        v7 = 0xEC00000064695F6CLL;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x64695F737469;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x64695F737469)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E0D18(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64496D616461;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6C725565676170;
    else
      v4 = 0xD000000000000010;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0x80000000003098C0;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6C725565676170;
      else
        v2 = 0xD000000000000010;
      if (v6 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0x80000000003098C0;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x64496D616461;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x64496D616461)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E0E28(uint64_t a1, uint64_t a2)
{
  return sub_1E2A84(a1, a2, FlowPresentationContext.rawValue.getter);
}

void sub_1E0E34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E0E84(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E0EF4 + 4 * byte_2FE731[a2]))(0x64616F6C6E776F64);
}

uint64_t sub_1E0EF4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64616F6C6E776F64 && v1 == 0xE900000000000073)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x64616F6C6E776F64, 0xE900000000000073, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000073);
  return v2 & 1;
}

uint64_t sub_1E0FA4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000006C61;
  v3 = 0x69746E6575716573;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x64695F737469;
    else
      v5 = 0x746E6F635F737469;
    if (v4 == 1)
      v6 = 0xE600000000000000;
    else
      v6 = 0xED00006449746E65;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x69746E6575716573;
  v6 = 0xEA00000000006C61;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x64695F737469;
    else
      v3 = 0x746E6F635F737469;
    if (v7 == 1)
      v2 = 0xE600000000000000;
    else
      v2 = 0xED00006449746E65;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_1E10CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E1114(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E11E8 + 4 * byte_2FE73D[a2]))(0x736C656E6E616863);
}

uint64_t sub_1E11E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x736C656E6E616863 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x736C656E6E616863, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v2 & 1;
}

uint64_t sub_1E1314(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656372756F736572;
  else
    v3 = 7562345;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xEC000000736C7255;
  if ((a2 & 1) != 0)
    v5 = 0x656372756F736572;
  else
    v5 = 7562345;
  if ((a2 & 1) != 0)
    v6 = 0xEC000000736C7255;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E13B8(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x68636E75616CLL;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x746977536B736174;
    else
      v4 = 1802398060;
    if (v3 == 1)
      v5 = 0xEA00000000006863;
    else
      v5 = 0xE400000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x746977536B736174;
      else
        v2 = 1802398060;
      if (v6 == 1)
        v7 = 0xEA00000000006863;
      else
        v7 = 0xE400000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x68636E75616CLL;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x68636E75616CLL)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E14C0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65726F7453707061;
  else
    v3 = 7368801;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65726F7453707061;
  else
    v5 = 7368801;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E155C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746977536B736174;
  else
    v3 = 1953068401;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEA00000000006863;
  if ((a2 & 1) != 0)
    v5 = 0x746977536B736174;
  else
    v5 = 1953068401;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006863;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E15FC(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x776F6C6C6F66;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x776F6C6C6F666E75;
    else
      v4 = 0x6465776F6C6C6F66;
    if (v3 == 1)
      v5 = 0xE800000000000000;
    else
      v5 = 0xED000073776F6853;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x776F6C6C6F666E75;
      else
        v2 = 0x6465776F6C6C6F66;
      if (v6 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xED000073776F6853;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x776F6C6C6F66;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x776F6C6C6F66)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E1724(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x64496D616461;
    else
      v3 = 7107189;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE300000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x64496D616461;
      else
        v6 = 7107189;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE300000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE200000000000000;
    v3 = 25705;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE200000000000000;
  v6 = 25705;
  if (v3 != 25705)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v4;
LABEL_22:
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E180C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x696D6F636E497369;
  else
    v3 = 7107189;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xED00006C7255676ELL;
  if ((a2 & 1) != 0)
    v5 = 0x696D6F636E497369;
  else
    v5 = 7107189;
  if ((a2 & 1) != 0)
    v6 = 0xED00006C7255676ELL;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E18B4(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64496D616461;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6863614370696B73;
    else
      v4 = 0x4364696150736168;
    if (v3 == 1)
      v5 = 0xE900000000000065;
    else
      v5 = 0xEE00746E65746E6FLL;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6863614370696B73;
      else
        v2 = 0x4364696150736168;
      if (v6 == 1)
        v7 = 0xE900000000000065;
      else
        v7 = 0xEE00746E65746E6FLL;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x64496D616461;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x64496D616461)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_1E19E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E1A1C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E1ACC + 4 * byte_2FE74A[a2]))(0xD000000000000014);
}

uint64_t sub_1E1ACC(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x8000000000309140;
  if (a1 == 0xD000000000000014 && v1 == 0x8000000000309140)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000014, 0x8000000000309140, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_1E1BC0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6973736572706D69;
  else
    v3 = 1701273968;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEB00000000736E6FLL;
  if ((a2 & 1) != 0)
    v5 = 0x6973736572706D69;
  else
    v5 = 1701273968;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000736E6FLL;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1E1C64(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E1CA4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E1D44 + 4 * byte_2FE758[a2]))(1414745936);
}

uint64_t sub_1E1D44(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1414745936 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1414745936, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

void sub_1E1E44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E1E8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E1F58 + 4 * byte_2FE768[a2]))(0x70756B636F4CLL);
}

uint64_t sub_1E1F58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x70756B636F4CLL && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x70756B636F4CLL, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_1E2074(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E20C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E2130 + 4 * byte_2FE774[a2]))(0x7473616F74);
}

uint64_t sub_1E2130(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7473616F74 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7473616F74, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_1E21E0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E696B636F6C62;
  else
    v3 = 0x6B636F6C426E6F6ELL;
  if (v2)
    v4 = 0xEB00000000676E69;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E696B636F6C62;
  else
    v5 = 0x6B636F6C426E6F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEB00000000676E69;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E228C(uint64_t a1, uint64_t a2)
{
  return sub_1E2A84(a1, a2, MetricsPageType.rawValue.getter);
}

void sub_1E2298(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E22FC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E23B8 + 4 * byte_2FE780[a2]))(0xD000000000000013);
}

uint64_t sub_1E23B8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x8000000000308CD0;
  if (a1 == 0xD000000000000013 && v1 == 0x8000000000308CD0)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000013, 0x8000000000308CD0, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_1E24AC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1E2520(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E257C + 4 * byte_2FE78C[a2]))(0xD000000000000010);
}

uint64_t sub_1E257C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x8000000000309780;
  if (a1 == 0xD000000000000010 && v1 == 0x8000000000309780)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000010, 0x8000000000309780, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_1E2610(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E2648(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E26B8 + 4 * byte_2FE795[a2]))(2036625250);
}

uint64_t sub_1E26B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 2036625250 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 2036625250, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

void sub_1E276C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E27D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E2850 + 4 * byte_2FE7A0[a2]))(0x617461646174656DLL);
}

uint64_t sub_1E2850(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x617461646174656DLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x617461646174656DLL, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v2 & 1;
}

uint64_t sub_1E2924(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 1701147238;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 1684627824;
    else
      v4 = 0x646972627968;
    if (v3 == 1)
      v5 = 0xE400000000000000;
    else
      v5 = 0xE600000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 1684627824;
      else
        v2 = 0x646972627968;
      if (v6 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE600000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1701147238;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 1701147238)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E2A14(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)&aPodcast_8[8 * a1];
  v3 = *(_QWORD *)&aPodcast_8[8 * a2];
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE700000000000000, v3, 0xE700000000000000, 0);
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  return v4 & 1;
}

uint64_t sub_1E2A78(uint64_t a1, uint64_t a2)
{
  return sub_1E2A84(a1, a2, MetricsLabel.rawValue.getter);
}

uint64_t sub_1E2A84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  v4 = a3();
  v6 = v5;
  v7 = a3();
  if (v4 == v7 && v6 == v8)
  {
    v11 = 1;
    v10 = v6;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  return v11 & 1;
}

void sub_1E2B1C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E2B78(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E2C18 + 4 * byte_2FE7AD[a2]))(0x7469784565676170);
}

uint64_t sub_1E2C18(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7469784565676170 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7469784565676170, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v2 & 1;
}

uint64_t sub_1E2D18(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7463757274736564;
  else
    v3 = 0x6C65636E6163;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEB00000000657669;
  if ((a2 & 1) != 0)
    v5 = 0x7463757274736564;
  else
    v5 = 0x6C65636E6163;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000657669;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1E2DC0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E2DF8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E2E7C + 4 * byte_2FE7BA[a2]))(0x656C746974);
}

uint64_t sub_1E2E7C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_1E2F4C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 1869903201;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x746867696CLL;
    else
      v4 = 1802658148;
    if (v3 == 1)
      v5 = 0xE500000000000000;
    else
      v5 = 0xE400000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x746867696CLL;
      else
        v2 = 1802658148;
      if (v6 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1869903201;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 1869903201)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_1E303C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F69746361;
  else
    v3 = 0x697461676976616ELL;
  if (v2)
    v4 = 0xEA00000000006E6FLL;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F69746361;
  else
    v5 = 0x697461676976616ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xEA00000000006E6FLL;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E30E0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 25705;
  else
    v3 = 0x646E696B24;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 25705;
  else
    v5 = 0x646E696B24;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1E3174(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E31BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E3228 + 4 * byte_2FE7C6[a2]))(25705);
}

uint64_t sub_1E3228(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 25705 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 25705, 0xE200000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE200000000000000);
  return v2 & 1;
}

void sub_1E32E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1E331C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1E3390 + 4 * byte_2FE7D1[a2]))(0x656C746974);
}

uint64_t sub_1E3390(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_1E3448(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEF666C6568532074;
  v3 = 0x6867696C68676948;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7478654E207055;
    else
      v5 = 0x796C746E65636552;
    if (v4 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xEF646579616C5020;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6867696C68676948;
  v6 = 0xEF666C6568532074;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x7478654E207055;
    else
      v3 = 0x796C746E65636552;
    if (v7 == 1)
      v2 = 0xE700000000000000;
    else
      v2 = 0xEF646579616C5020;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

uint64_t sub_1E3588(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F697463656C6573;
  else
    v3 = 0x75747865746E6F63;
  if (v2)
    v4 = 0xEA00000000006C61;
  else
    v4 = 0xED0000756E654D6ELL;
  if ((a2 & 1) != 0)
    v5 = 0x6F697463656C6573;
  else
    v5 = 0x75747865746E6F63;
  if ((a2 & 1) != 0)
    v6 = 0xED0000756E654D6ELL;
  else
    v6 = 0xEA00000000006C61;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1E363C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656372756F736572;
  else
    v3 = 0x6867696C68676968;
  if (v2)
    v4 = 0xEC00000073644974;
  else
    v4 = 0xEC000000736C7255;
  if ((a2 & 1) != 0)
    v5 = 0x656372756F736572;
  else
    v5 = 0x6867696C68676968;
  if ((a2 & 1) != 0)
    v6 = 0xEC000000736C7255;
  else
    v6 = 0xEC00000073644974;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = result;
  *(_BYTE *)(a5 + 1) = a2 & 1;
  *(_DWORD *)(a5 + 2) = a3;
  *(_BYTE *)(a5 + 6) = BYTE4(a3);
  *(_BYTE *)(a5 + 7) = BYTE5(a3) & 1;
  *(_QWORD *)(a5 + 8) = a4;
  return result;
}

uint64_t static ModernShelf.generateNewUniqueId()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v4);
  v5 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t ModernShelf.init(id:header:itemPresentation:items:url:mergeWhenFetched:hideFromCarPlay:shelvesIntent:impressionMetrics:metricsName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, char *a12)
{
  char v15;
  char v16;
  char v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  int v29;
  char v34;

  v15 = *a4;
  v16 = a4[1];
  v29 = *(_DWORD *)(a4 + 2);
  v17 = a4[6];
  v27 = a4[7];
  v26 = *((_QWORD *)a4 + 1);
  v34 = *a12;
  v18 = (int *)type metadata accessor for ModernShelf(0);
  v19 = v18[8];
  *((_BYTE *)a9 + v19) = 3;
  v20 = (uint64_t)a9 + v18[9];
  v21 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *a9 = a1;
  a9[1] = a2;
  sub_15BD4(a3, (uint64_t)a9 + v18[5], &qword_3B0C38);
  v22 = (char *)a9 + v18[6];
  *v22 = v15;
  v22[1] = v16;
  v22[6] = v17;
  *(_DWORD *)(v22 + 2) = v29;
  v22[7] = v27;
  *((_QWORD *)v22 + 1) = v26;
  *(_QWORD *)((char *)a9 + v18[7]) = a5;
  sub_15B8C(a6, v20);
  *((_BYTE *)a9 + v18[10]) = a7;
  *((_BYTE *)a9 + v18[11]) = a8;
  v23 = (uint64_t)a9 + v18[12];
  if (*(_QWORD *)(a10 + 24))
  {
    sub_F4D8((__int128 *)a10, v23);
  }
  else
  {
    v24 = *(_OWORD *)(a10 + 16);
    *(_OWORD *)v23 = *(_OWORD *)a10;
    *(_OWORD *)(v23 + 16) = v24;
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(a10 + 32);
  }
  result = sub_15BD4(a11, (uint64_t)a9 + v18[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)a9 + v19) = v34;
  return result;
}

uint64_t type metadata accessor for ModernShelf(uint64_t a1)
{
  uint64_t result;

  result = qword_3C12D0;
  if (!qword_3C12D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModernShelf);
  return result;
}

uint64_t ModernShelf.merging(shelf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = (int *)type metadata accessor for ModernShelf(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + *(int *)(v6 + 40)) & 1) == 0)
    return sub_14510(a1, a2, type metadata accessor for ModernShelf);
  v9 = v5[6];
  v10 = *(_BYTE *)(v2 + v9);
  v11 = ModernShelf.ItemKind.rawValue.getter(*(_BYTE *)(a1 + v9));
  v13 = v12;
  v14 = ModernShelf.ItemKind.rawValue.getter(v10);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
    {
      v19 = type metadata accessor for ShelfError(0);
      v20 = sub_F1C0((unint64_t *)&qword_3B2B10, (void (*)(uint64_t))type metadata accessor for ShelfError, (uint64_t)&protocol conformance descriptor for ShelfError);
      swift_allocError(v19, v20, 0, 0);
      v22 = v21;
      v23 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
      sub_14510(v2, v22, type metadata accessor for ModernShelf);
      sub_14510(a1, v23, type metadata accessor for ModernShelf);
      v24 = swift_storeEnumTagMultiPayload(v22, v19, 1);
      return swift_willThrow(v24);
    }
  }
  sub_14510(v2, (uint64_t)v8, type metadata accessor for ModernShelf);
  v26 = swift_bridgeObjectRetain(*(_QWORD *)(a1 + v5[7]));
  sub_1E3CF8(v26);
  v27 = (uint64_t)&v8[v5[9]];
  sub_1459C(v27, &qword_3B4370);
  v28 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  return sub_15C18((uint64_t)v8, a2);
}

uint64_t sub_1E3B9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10644(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1E3CEC(uint64_t a1)
{
  return sub_1E3EB0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1FC1D8);
}

uint64_t sub_1E3CF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10CC0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A50);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1E3E60(uint64_t a1)
{
  return sub_1E421C(a1, (uint64_t (*)(void))sub_10CD4, type metadata accessor for ModernShelf);
}

uint64_t sub_1E3E74(uint64_t a1)
{
  return sub_1E3EB0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1FC1FC);
}

uint64_t sub_1E3E80(uint64_t a1)
{
  return sub_1E3EB0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1FC430);
}

uint64_t sub_1E3E8C(uint64_t a1)
{
  return sub_1E3EB0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1FC454);
}

uint64_t sub_1E3E98(uint64_t a1)
{
  return sub_1E3EB0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1FC478);
}

uint64_t sub_1E3EA4(uint64_t a1)
{
  return sub_1E3EB0(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1FC49C);
}

uint64_t sub_1E3EB0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8));
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8)) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1E406C(uint64_t a1)
{
  return sub_1E421C(a1, (uint64_t (*)(void))sub_111EC, type metadata accessor for TabMenu.Item);
}

uint64_t sub_1E4080(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_11488(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B0948);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1E41F4(uint64_t a1)
{
  return sub_1E421C(a1, (uint64_t (*)(void))sub_10CE8, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

uint64_t sub_1E4208(uint64_t a1)
{
  return sub_1E421C(a1, (uint64_t (*)(void))sub_10CAC, type metadata accessor for ActionMenu.Child);
}

uint64_t sub_1E421C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy(v16);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1E4394(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_117CC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t static ModernShelf.loadingShelf(id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *boxed_opaque_existential_2Tm;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v31 = a1;
  v32 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Header(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_2EA0D0;
  v16 = type metadata accessor for EmptyModel(0);
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = sub_F1C0((unint64_t *)&qword_3BB958, (void (*)(uint64_t))type metadata accessor for EmptyModel, (uint64_t)&protocol conformance descriptor for EmptyModel);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((_QWORD *)(v15 + 32));
  v18 = (char *)boxed_opaque_existential_2Tm + *(int *)(v16 + 20);
  v19 = type metadata accessor for ImpressionMetrics(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  *boxed_opaque_existential_2Tm = 0x49676E6964616F6CLL;
  boxed_opaque_existential_2Tm[1] = 0xEB000000006D6574;
  v21 = type metadata accessor for URL(0);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v9, 1, 1, v21);
  v35 = 0;
  v33 = 0u;
  v34 = 0u;
  v20(v6, 1, 1, v19);
  v23 = (int *)type metadata accessor for ModernShelf(0);
  v24 = v23[8];
  *((_BYTE *)a3 + v24) = 3;
  v25 = (uint64_t)a3 + v23[9];
  v22((char *)v25, 1, 1, v21);
  v26 = v32;
  *a3 = v31;
  a3[1] = v26;
  sub_15BD4((uint64_t)v12, (uint64_t)a3 + v23[5], &qword_3B0C38);
  v27 = (char *)a3 + v23[6];
  *(_WORD *)v27 = 34;
  *((_WORD *)v27 + 3) = 256;
  *(_DWORD *)(v27 + 2) = 0;
  *((_QWORD *)v27 + 1) = 1;
  *(_QWORD *)((char *)a3 + v23[7]) = v15;
  swift_bridgeObjectRetain(v26);
  sub_15B8C((uint64_t)v9, v25);
  *((_BYTE *)a3 + v23[10]) = 1;
  *((_BYTE *)a3 + v23[11]) = 0;
  v28 = (uint64_t)a3 + v23[12];
  if (*((_QWORD *)&v34 + 1))
  {
    sub_F4D8(&v33, v28);
  }
  else
  {
    v29 = (unint64_t)v34;
    *(_OWORD *)v28 = v33;
    *(_OWORD *)(v28 + 16) = v29;
    *(_QWORD *)(v28 + 32) = v35;
  }
  result = sub_15BD4((uint64_t)v6, (uint64_t)a3 + v23[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)a3 + v24) = 3;
  return result;
}

uint64_t ModernShelf.init(id:title:itemPresentation:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t result;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v51 = a2;
  v52 = a6;
  v49 = a3;
  v50 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  __chkstk_darwin(v22);
  v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v25);
  v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a5;
  v46 = a5[1];
  v47 = v28;
  v48 = *(unsigned int *)(a5 + 2);
  v29 = a5[6];
  v45 = a5[7];
  v44 = *((_QWORD *)a5 + 1);
  v30 = type metadata accessor for ActionMenu(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v24, 1, 1, v30);
  v31 = type metadata accessor for Header.PrimaryAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 1, 1, v31);
  v32 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 1, 1, v32);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)(v49, a4, 0, 0, 0, 0, 0, 0, (uint64_t)v27, (uint64_t)v24, (uint64_t)v21, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v18);
  v33 = type metadata accessor for URL(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v34(v15, 1, 1, v33);
  v35 = type metadata accessor for ImpressionMetrics(0);
  v53 = 0u;
  v54 = 0u;
  v55 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 1, 1, v35);
  v36 = (int *)type metadata accessor for ModernShelf(0);
  v37 = v36[8];
  *((_BYTE *)a7 + v37) = 3;
  v38 = (uint64_t)a7 + v36[9];
  v34((char *)v38, 1, 1, v33);
  v39 = v51;
  *a7 = v50;
  a7[1] = v39;
  sub_15BD4((uint64_t)v27, (uint64_t)a7 + v36[5], &qword_3B0C38);
  v40 = (char *)a7 + v36[6];
  *v40 = v47;
  v40[1] = v46;
  v40[6] = v29;
  *(_DWORD *)(v40 + 2) = v48;
  v40[7] = v45;
  *((_QWORD *)v40 + 1) = v44;
  *(_QWORD *)((char *)a7 + v36[7]) = v52;
  sub_15B8C((uint64_t)v15, v38);
  *((_BYTE *)a7 + v36[10]) = 1;
  *((_BYTE *)a7 + v36[11]) = 0;
  v41 = (uint64_t)a7 + v36[12];
  if (*((_QWORD *)&v54 + 1))
  {
    sub_F4D8(&v53, v41);
  }
  else
  {
    v42 = (unint64_t)v54;
    *(_OWORD *)v41 = v53;
    *(_OWORD *)(v41 + 16) = v42;
    *(_QWORD *)(v41 + 32) = v55;
  }
  result = sub_15BD4((uint64_t)v12, (uint64_t)a7 + v36[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)a7 + v37) = 3;
  return result;
}

uint64_t ModernShelf.uberStyle.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ModernShelf(0) + 24));
  if (v1 > 0x2F)
    return 6;
  if (((1 << v1) & 0x800380000000) != 0)
    return 2;
  if (((1 << v1) & 0x30000000000) != 0)
    return 1;
  else
    return 6;
}

uint64_t static ModernShelf.errorShelf(id:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v30 = a1;
  v31 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Header(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
  v17 = swift_allocObject(v16, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v17 + 56) = type metadata accessor for ErrorModel(0);
  *(_QWORD *)(v17 + 64) = sub_F1C0(&qword_3BB908, (void (*)(uint64_t))type metadata accessor for ErrorModel, (uint64_t)&protocol conformance descriptor for ErrorModel);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((_QWORD *)(v17 + 32));
  sub_14510(a3, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for ErrorModel);
  v19 = type metadata accessor for URL(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v11, 1, 1, v19);
  v21 = type metadata accessor for ImpressionMetrics(0);
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
  v22 = (int *)type metadata accessor for ModernShelf(0);
  v23 = v22[8];
  *((_BYTE *)a4 + v23) = 3;
  v24 = (uint64_t)a4 + v22[9];
  v20((char *)v24, 1, 1, v19);
  v25 = v31;
  *a4 = v30;
  a4[1] = v25;
  sub_15BD4((uint64_t)v14, (uint64_t)a4 + v22[5], &qword_3B0C38);
  v26 = (char *)a4 + v22[6];
  *(_WORD *)v26 = 56;
  *((_WORD *)v26 + 3) = 256;
  *(_DWORD *)(v26 + 2) = 0;
  *((_QWORD *)v26 + 1) = 1;
  *(_QWORD *)((char *)a4 + v22[7]) = v17;
  swift_bridgeObjectRetain();
  sub_15B8C((uint64_t)v11, v24);
  *((_BYTE *)a4 + v22[10]) = 1;
  *((_BYTE *)a4 + v22[11]) = 0;
  v27 = (uint64_t)a4 + v22[12];
  if (*((_QWORD *)&v33 + 1))
  {
    sub_F4D8(&v32, v27);
  }
  else
  {
    v28 = (unint64_t)v33;
    *(_OWORD *)v27 = v32;
    *(_OWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 32) = v34;
  }
  result = sub_15BD4((uint64_t)v8, (uint64_t)a4 + v22[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)a4 + v23) = 3;
  return result;
}

BOOL Array<A>.shelvesHaveContent.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  BOOL v12;
  uint64_t v14;

  v2 = type metadata accessor for ModernShelf(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return 0;
  v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v8 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v9 = v6 - 1;
  do
  {
    sub_14510(v7, (uint64_t)v5, type metadata accessor for ModernShelf);
    v10 = *(_QWORD *)(*(_QWORD *)&v5[*(int *)(v2 + 28)] + 16);
    v11 = v10 != 0;
    sub_145D8((uint64_t)v5, type metadata accessor for ModernShelf);
    if (v10)
      v12 = 1;
    else
      v12 = v9 == 0;
    --v9;
    v7 += v8;
  }
  while (!v12);
  swift_bridgeObjectRelease();
  return v11;
}

BOOL ModernShelf.Background.isColor.getter(uint64_t a1)
{
  return (a1 & 0x1FFFFFFFFLL) != 0x100000003;
}

BOOL ModernShelf.Background.isHexColorFaded.getter(uint64_t a1)
{
  return (a1 & 0x100000000) == 0;
}

uint64_t ModernShelf.Background.color.getter(uint64_t a1)
{
  id v1;
  uint64_t v2;

  if ((a1 & 0x100000000) != 0)
    __asm { BR              X10 }
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", (double)a1 / 255.0, (double)BYTE1(a1) / 255.0, (double)BYTE2(a1) / 255.0, (double)BYTE3(a1) / 255.0);
  v2 = UIColor.fadedBackgroundColor.getter();

  return v2;
}

void ModernShelf.Background.hash(into:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = a2;
  if ((a2 & 0x100000000) != 0)
    __asm { BR              X10 }
  Hasher._combine(_:)(4uLL);
  Hasher._combine(_:)(bswap32(v2));
}

uint64_t static ModernShelf.Background.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x100000000) != 0)
    return ((uint64_t (*)(void))((char *)&loc_1E51EC + 4 * byte_2FE7DA[a1]))();
  if ((a2 & 0x100000000) != 0)
    return 0;
  return (_DWORD)a1 == (_DWORD)a2;
}

Swift::Int ModernShelf.Background.hashValue.getter(unint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  ModernShelf.Background.hash(into:)((uint64_t)v3, a1 | ((HIDWORD(a1) & 1) << 32));
  return Hasher._finalize()();
}

Swift::Int sub_1E5290()
{
  unsigned int *v0;
  uint64_t v1;
  unsigned __int8 v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = *((_BYTE *)v0 + 4);
  Hasher.init(_seed:)(v4);
  ModernShelf.Background.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 32));
  return Hasher._finalize()();
}

void sub_1E52E0(uint64_t a1)
{
  unsigned int *v1;

  ModernShelf.Background.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

Swift::Int sub_1E5300()
{
  unsigned int *v0;
  uint64_t v1;
  unsigned __int8 v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = *((_BYTE *)v0 + 4);
  Hasher.init(_seed:)(v4);
  ModernShelf.Background.hash(into:)((uint64_t)v4, v1 | ((unint64_t)v2 << 32));
  return Hasher._finalize()();
}

uint64_t sub_1E534C(unsigned int *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  char v6;

  v4 = *a1;
  v5 = *(_DWORD *)a2;
  v6 = *(_BYTE *)(a2 + 4);
  if (*((_BYTE *)a1 + 4) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1E5384 + 4 * byte_2FE7DE[v4]))();
  if ((v6 & 1) != 0)
    return 0;
  return sub_1E0488(v4, v5);
}

ShelfKit::ModernShelf::ItemPresentation::Orientation_optional __swiftcall ModernShelf.ItemPresentation.Orientation.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  ShelfKit::ModernShelf::ItemPresentation::Orientation_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375738, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = ShelfKit_ModernShelf_ItemPresentation_Orientation_horizontal;
  else
    v4.value = ShelfKit_ModernShelf_ItemPresentation_Orientation_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t ModernShelf.ItemPresentation.Orientation.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E6F7A69726F68;
  else
    return 0x6C61636974726576;
}

uint64_t sub_1E5450(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x746E6F7A69726F68;
  else
    v3 = 0x6C61636974726576;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEA00000000006C61;
  if (*a2)
    v5 = 0x746E6F7A69726F68;
  else
    v5 = 0x6C61636974726576;
  if (*a2)
    v6 = 0xEA00000000006C61;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

uint64_t sub_1E54FC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375738, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1E5558(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C61636974726576;
  if (*v1)
    v2 = 0x746E6F7A69726F68;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xEA00000000006C61;
  *a1 = v2;
  a1[1] = v3;
}

Swift::Int sub_1E559C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x746E6F7A69726F68;
  else
    v2 = 0x6C61636974726576;
  if (v1)
    v3 = 0xEA00000000006C61;
  else
    v3 = 0xE800000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1E5620(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x746E6F7A69726F68;
  else
    v2 = 0x6C61636974726576;
  if (*v1)
    v3 = 0xEA00000000006C61;
  else
    v3 = 0xE800000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1E5680()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x746E6F7A69726F68;
  else
    v2 = 0x6C61636974726576;
  if (v1)
    v3 = 0xEA00000000006C61;
  else
    v3 = 0xE800000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t ModernShelf.ItemPresentation.orientation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result & 1;
  return result;
}

unint64_t ModernShelf.ItemPresentation.background.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 2) | ((unint64_t)*(unsigned __int8 *)(v0 + 6) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 7) << 40);
}

uint64_t ModernShelf.ItemPresentation.background.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 2) = result;
  *(_BYTE *)(v1 + 6) = BYTE4(result);
  *(_BYTE *)(v1 + 7) = BYTE5(result) & 1;
  return result;
}

uint64_t ModernShelf.ItemPresentation.horizontalRows.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

void ModernShelf.ItemPresentation.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  Swift::UInt v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(unsigned __int8 *)(v1 + 1);
  v4 = *(unsigned __int8 *)(v1 + 6);
  v5 = *(unsigned int *)(v1 + 2);
  v6 = *(unsigned __int8 *)(v1 + 7);
  v7 = *(_QWORD *)(v1 + 8);
  v8 = ModernShelf.ItemKind.rawValue.getter(*(_BYTE *)v1);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease();
  if (v3)
    v10 = 0x746E6F7A69726F68;
  else
    v10 = 0x6C61636974726576;
  if (v3)
    v11 = 0xEA00000000006C61;
  else
    v11 = 0xE800000000000000;
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease();
  if (v6 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    ModernShelf.Background.hash(into:)(a1, v5 | ((((v5 | (unint64_t)(v4 << 32)) >> 32) & 1) << 32));
  }
  Hasher._combine(_:)(v7);
}

Swift::Int ModernShelf.ItemPresentation.hashValue.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  Swift::UInt v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v12[9];

  v1 = *(unsigned __int8 *)(v0 + 1);
  v2 = *(unsigned __int8 *)(v0 + 6);
  v3 = *(unsigned int *)(v0 + 2);
  v4 = *(unsigned __int8 *)(v0 + 7);
  v5 = *(_QWORD *)(v0 + 8);
  v6 = *(_BYTE *)v0;
  Hasher.init(_seed:)(v12);
  v7 = ModernShelf.ItemKind.rawValue.getter(v6);
  String.hash(into:)(v12, v7, v8);
  swift_bridgeObjectRelease();
  if (v1)
    v9 = 0x746E6F7A69726F68;
  else
    v9 = 0x6C61636974726576;
  if (v1)
    v10 = 0xEA00000000006C61;
  else
    v10 = 0xE800000000000000;
  String.hash(into:)(v12, v9, v10);
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    ModernShelf.Background.hash(into:)((uint64_t)v12, v3 | ((((v3 | (unint64_t)(v2 << 32)) >> 32) & 1) << 32));
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

Swift::Int sub_1E5984()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  Swift::UInt v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v12[9];

  v1 = *(unsigned __int8 *)(v0 + 1);
  v2 = *(unsigned __int8 *)(v0 + 6);
  v3 = *(unsigned int *)(v0 + 2);
  v4 = *(unsigned __int8 *)(v0 + 7);
  v5 = *(_QWORD *)(v0 + 8);
  v6 = *(_BYTE *)v0;
  Hasher.init(_seed:)(v12);
  v7 = ModernShelf.ItemKind.rawValue.getter(v6);
  String.hash(into:)(v12, v7, v8);
  swift_bridgeObjectRelease();
  if (v1)
    v9 = 0x746E6F7A69726F68;
  else
    v9 = 0x6C61636974726576;
  if (v1)
    v10 = 0xEA00000000006C61;
  else
    v10 = 0xE800000000000000;
  String.hash(into:)(v12, v9, v10);
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    ModernShelf.Background.hash(into:)((uint64_t)v12, v3 | ((((v3 | (unint64_t)(v2 << 32)) >> 32) & 1) << 32));
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t ModernShelf.header.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModernShelf(0);
  return sub_267BC(v1 + *(int *)(v3 + 20), a1, &qword_3B0C38);
}

uint64_t ModernShelf.itemPresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;

  result = type metadata accessor for ModernShelf(0);
  v4 = (char *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  v6 = v4[1];
  v7 = *(_DWORD *)(v4 + 2);
  v8 = v4[6];
  v9 = v4[7];
  v10 = *((_QWORD *)v4 + 1);
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 1) = v6;
  *(_BYTE *)(a1 + 6) = v8;
  *(_DWORD *)(a1 + 2) = v7;
  *(_BYTE *)(a1 + 7) = v9;
  *(_QWORD *)(a1 + 8) = v10;
  return result;
}

uint64_t ModernShelf.itemPresentation.setter(char *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  int v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(_DWORD *)(a1 + 2);
  v5 = a1[6];
  v6 = a1[7];
  v7 = *((_QWORD *)a1 + 1);
  result = type metadata accessor for ModernShelf(0);
  v9 = v1 + *(int *)(result + 24);
  *(_BYTE *)v9 = v2;
  *(_BYTE *)(v9 + 1) = v3;
  *(_BYTE *)(v9 + 6) = v5;
  *(_DWORD *)(v9 + 2) = v4;
  *(_BYTE *)(v9 + 7) = v6;
  *(_QWORD *)(v9 + 8) = v7;
  return result;
}

void (__swiftcall *ModernShelf.itemPresentation.modify())()
{
  type metadata accessor for ModernShelf(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ModernShelf.items.getter()
{
  type metadata accessor for ModernShelf(0);
  return swift_bridgeObjectRetain();
}

uint64_t ModernShelf.items.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ModernShelf(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

void (__swiftcall *ModernShelf.items.modify())()
{
  type metadata accessor for ModernShelf(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ModernShelf.metricsName.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ModernShelf(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ModernShelf.metricsName.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for ModernShelf(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

void (__swiftcall *ModernShelf.metricsName.modify())()
{
  type metadata accessor for ModernShelf(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ModernShelf.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModernShelf(0);
  return sub_267BC(v1 + *(int *)(v3 + 36), a1, &qword_3B4370);
}

uint64_t ModernShelf.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ModernShelf(0) + 36);
  return sub_15B8C(a1, v3);
}

void (__swiftcall *ModernShelf.url.modify())()
{
  type metadata accessor for ModernShelf(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ModernShelf.mergeWhenFetched.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ModernShelf(0) + 40));
}

uint64_t ModernShelf.hideFromCarPlay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ModernShelf(0) + 44));
}

__n128 ModernShelf.shelvesIntent.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for ModernShelf(0) + 48);
  if (*(_QWORD *)(v3 + 24))
  {
    sub_150C8(v3, a1);
  }
  else
  {
    result = *(__n128 *)v3;
    v5 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v3;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v3 + 32);
  }
  return result;
}

uint64_t ModernShelf.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModernShelf(0);
  return sub_267BC(v1 + *(int *)(v3 + 52), a1, (uint64_t *)&unk_3B8790);
}

uint64_t ModernShelf.disableAnimationsOnUpdate.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ModernShelf(0) + 24));
  return (v1 < 0x30) & (0x830380000000uLL >> v1);
}

uint64_t static ModernShelf.collectionUniqueItemIdFor(section:item:)(uint64_t *a1, _QWORD *a2)
{
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  uint64_t v11;

  v11 = *a1;
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 45;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v8 = v7;
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1E5F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_267BC(v2 + *(int *)(a1 + 52), a2, (uint64_t *)&unk_3B8790);
}

uint64_t Array<A>.shelvesAreEmpty.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  BOOL v13;
  uint64_t v15;

  v2 = type metadata accessor for ModernShelf(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return 1;
  v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v8 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v9 = v6 - 1;
  do
  {
    sub_14510(v7, (uint64_t)v5, type metadata accessor for ModernShelf);
    v10 = *(_QWORD *)(*(_QWORD *)&v5[*(int *)(v2 + 28)] + 16);
    v11 = v10 == 0;
    sub_145D8((uint64_t)v5, type metadata accessor for ModernShelf);
    v13 = v9-- != 0;
    if (v10)
      break;
    v7 += v8;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v11;
}

Swift::String_optional __swiftcall ModernShelf.accessibilityLabel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  Swift::String_optional result;
  uint64_t v23;
  void *v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - v5;
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v23 - v8);
  v10 = v0 + *(int *)(type metadata accessor for ModernShelf(0) + 20);
  sub_267BC(v10, (uint64_t)v9, &qword_3B0C38);
  v11 = type metadata accessor for Header(0);
  v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (v12(v9, 1, v11) == 1)
  {
    sub_1459C((uint64_t)v9, &qword_3B0C38);
    goto LABEL_6;
  }
  v14 = *v9;
  v13 = (void *)v9[1];
  swift_bridgeObjectRetain();
  sub_145D8((uint64_t)v9, type metadata accessor for Header);
  if (!v13)
  {
LABEL_6:
    sub_267BC(v10, (uint64_t)v3, &qword_3B0C38);
    if (v12((uint64_t *)v3, 1, v11) == 1)
    {
      sub_1459C((uint64_t)v3, &qword_3B0C38);
      v14 = 0;
      v13 = 0;
    }
    else
    {
      v15 = *((_QWORD *)v3 + 2);
      v13 = (void *)*((_QWORD *)v3 + 3);
      swift_bridgeObjectRetain();
      sub_145D8((uint64_t)v3, type metadata accessor for Header);
      if (v13)
        v14 = v15;
      else
        v14 = 0;
    }
    goto LABEL_13;
  }
  sub_267BC(v10, (uint64_t)v6, &qword_3B0C38);
  if (v12((uint64_t *)v6, 1, v11) == 1)
  {
    sub_1459C((uint64_t)v6, &qword_3B0C38);
  }
  else
  {
    v17 = *((_QWORD *)v6 + 2);
    v16 = (void *)*((_QWORD *)v6 + 3);
    swift_bridgeObjectRetain();
    sub_145D8((uint64_t)v6, type metadata accessor for Header);
    if (v16)
    {
      v23 = v14;
      v24 = v13;
      v18._countAndFlagsBits = 8236;
      v18._object = (void *)0xE200000000000000;
      String.append(_:)(v18);
      v19._countAndFlagsBits = v17;
      v19._object = v16;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      v14 = v23;
      v13 = v24;
    }
  }
LABEL_13:
  v20 = v14;
  v21 = v13;
  result.value._object = v21;
  result.value._countAndFlagsBits = v20;
  return result;
}

uint64_t ModernShelf.generateItemLevelImpressionFields(interactionView:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  _QWORD v74[2];
  _OWORD v75[2];
  __int128 v76;
  __int128 v77;

  v2 = v1;
  v73 = a1;
  v3 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v3);
  v72 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ImpressionMetrics.ID(0);
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  __chkstk_darwin(v8);
  v63 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v71 = (char *)&v62 - v11;
  v12 = type metadata accessor for ModernShelf(0);
  v13 = v1 + *(int *)(v12 + 52);
  v14 = type metadata accessor for ImpressionMetrics(0);
  v70 = *(_QWORD *)(v14 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  v67 = v13;
  v69 = v15;
  v16 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v13, 1, v14);
  if ((_DWORD)v16 != 1)
  {
    v17 = static os_log_type_t.error.getter();
    sub_1F470();
    v18 = (void *)static OS_os_log.metrics.getter();
    os_log(_:dso:log:_:_:)(v17, &dword_0, v18, "tried to generate impressions but impressions are already there", 63, 2, _swiftEmptyArrayStorage);

  }
  v19 = *(unsigned __int8 *)(v2 + *(int *)(v12 + 24));
  if (v19 == 7 || v19 == 25)
    v21 = static MetricsTargetType.powerSwoosh.getter(v16);
  else
    v21 = static MetricsTargetType.swoosh.getter(v16);
  v23 = v21;
  v24 = v22;
  v25 = static MetricsField<>.impressionType.getter(v21);
  v27 = v26;
  *((_QWORD *)&v77 + 1) = &type metadata for String;
  *(_QWORD *)&v76 = v23;
  *((_QWORD *)&v76 + 1) = v24;
  sub_1F460(&v76, v75);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v74[0] = &_swiftEmptyDictionarySingleton;
  sub_1E640(v75, v25, v27, isUniquelyReferenced_nonNull_native);
  v68 = v74[0];
  swift_bridgeObjectRelease();
  v29 = swift_bridgeObjectRelease();
  v30 = static MetricsField<>.name.getter(v29);
  v32 = v31;
  v76 = 0u;
  v77 = 0u;
  ModernShelf.metricsName(sender:)();
  v34 = v33;
  v62 = v2;
  v36 = v35;
  sub_1459C((uint64_t)&v76, (uint64_t *)&unk_3BC540);
  *((_QWORD *)&v77 + 1) = &type metadata for String;
  *(_QWORD *)&v76 = v34;
  *((_QWORD *)&v76 + 1) = v36;
  sub_1F460(&v76, v75);
  v37 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v74[0] = &_swiftEmptyDictionarySingleton;
  sub_1E640(v75, v30, v32, v37);
  v66 = v74[0];
  swift_bridgeObjectRelease();
  v38 = swift_bridgeObjectRelease();
  v39 = static MetricsField<>.locationType.getter(v38);
  v41 = v40;
  *((_QWORD *)&v77 + 1) = &type metadata for String;
  *(_QWORD *)&v76 = v23;
  *((_QWORD *)&v76 + 1) = v24;
  sub_1F460(&v76, v75);
  v42 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  v74[0] = &_swiftEmptyDictionarySingleton;
  sub_1E640(v75, v39, v41, v42);
  v43 = v74[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_267BC(v67, (uint64_t)v7, (uint64_t *)&unk_3B8790);
  if (v69(v7, 1, v14) == 1)
  {
    sub_1459C((uint64_t)v7, (uint64_t *)&unk_3B8790);
    v76 = 0u;
    v77 = 0u;
    ModernShelf.metricsName(sender:)();
    v45 = v44;
    v47 = v46;
    sub_1459C((uint64_t)&v76, (uint64_t *)&unk_3BC540);
    *(_QWORD *)&v76 = v45;
    *((_QWORD *)&v76 + 1) = v47;
    *(_QWORD *)&v75[0] = 32;
    *((_QWORD *)&v75[0] + 1) = 0xE100000000000000;
    v74[0] = 0;
    v74[1] = 0xE000000000000000;
    v48 = sub_65CC4();
    v49 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v75, v74, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v48, v48, v48);
    v51 = v50;
    swift_bridgeObjectRelease();
    v52 = v70;
  }
  else
  {
    v53 = v63;
    ImpressionMetrics.id.getter();
    v52 = v70;
    v54 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v7, v14);
    v49 = ImpressionMetrics.ID.element.getter(v54);
    v51 = v55;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v65);
  }
  v56 = v71;
  v57 = ImpressionMetrics.ID.init(element:)(v49, v51);
  v58 = v72;
  ScalarDictionary.init()(v57);
  v59 = v73;
  v60 = ImpressionMetrics.init(id:fields:custom:commonFields:clickLocationFields:)(v56, v68, v58, v66, v43);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v52 + 56))(v59, 0, 1, v14, v60);
}

void ModernShelf.metricsName(sender:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for ImpressionMetrics(0);
  __chkstk_darwin(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v3);
  v4 = (char *)sub_1E6830
     + 4 * byte_2FE7E2[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ModernShelf(0) + 32))];
  __asm { BR              X10 }
}

uint64_t sub_1E6830()
{
  return 0x7478654E207055;
}

uint64_t ModernShelf.generateParentLocationFields(locationPosition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[2];
  _QWORD v39[2];
  __int128 v40;
  __int128 v41;

  v3 = v2;
  v6 = type metadata accessor for ImpressionMetrics.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModernShelf(0);
  sub_267BC(v3 + *(int *)(v13 + 52), (uint64_t)v12, (uint64_t *)&unk_3B8790);
  v14 = type metadata accessor for ImpressionMetrics(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_1459C((uint64_t)v12, (uint64_t *)&unk_3B8790);
    v40 = 0u;
    v41 = 0u;
    ModernShelf.metricsName(sender:)();
    v17 = v16;
    v19 = v18;
    sub_1459C((uint64_t)&v40, (uint64_t *)&unk_3BC540);
    *(_QWORD *)&v40 = v17;
    *((_QWORD *)&v40 + 1) = v19;
    v39[0] = 32;
    v39[1] = 0xE100000000000000;
    v38[0] = 0;
    v38[1] = 0xE000000000000000;
    v20 = sub_65CC4();
    v21 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v39, v38, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v20, v20, v20);
    v23 = v22;
    v24 = swift_bridgeObjectRelease();
  }
  else
  {
    ImpressionMetrics.id.getter();
    v25 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    v21 = ImpressionMetrics.ID.element.getter(v25);
    v23 = v26;
    v24 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v27 = *(unsigned __int8 *)(v3 + *(int *)(v13 + 24));
  if (v27 == 7 || v27 == 25)
    v29 = static MetricsTargetType.powerSwoosh.getter(v24);
  else
    v29 = static MetricsTargetType.swoosh.getter(v24);
  v31 = v29;
  v32 = v30;
  v40 = 0u;
  v41 = 0u;
  ModernShelf.metricsName(sender:)();
  v34 = v33;
  v36 = v35;
  result = sub_1459C((uint64_t)&v40, (uint64_t *)&unk_3BC540);
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v23;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = a1;
  *(_QWORD *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = v32;
  *(_QWORD *)(a2 + 48) = v34;
  *(_QWORD *)(a2 + 56) = v36;
  return result;
}

BOOL _s8ShelfKit06ModernA0V16ItemPresentationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  _BOOL8 result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v23 = *(unsigned __int8 *)(a1 + 6);
  v3 = *(unsigned int *)(a1 + 2);
  v4 = *(_BYTE *)(a1 + 7);
  v5 = *(unsigned __int8 *)(a2 + 1);
  v6 = *(unsigned __int8 *)(a2 + 6);
  v7 = *(unsigned int *)(a2 + 2);
  v8 = *(_BYTE *)(a2 + 7);
  v24 = *(_QWORD *)(a2 + 8);
  v25 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)a2;
  v10 = ModernShelf.ItemKind.rawValue.getter(*(_BYTE *)a1);
  v12 = v11;
  v13 = ModernShelf.ItemKind.rawValue.getter(v9);
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v16 & 1) == 0)
      return result;
  }
  if (v2)
    v18 = 0x746E6F7A69726F68;
  else
    v18 = 0x6C61636974726576;
  if (v2)
    v19 = 0xEA00000000006C61;
  else
    v19 = 0xE800000000000000;
  if (v5)
    v20 = 0x746E6F7A69726F68;
  else
    v20 = 0x6C61636974726576;
  if (v5)
    v21 = 0xEA00000000006C61;
  else
    v21 = 0xE800000000000000;
  if (v18 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n(v19, 2);
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v20, v21, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v22 & 1) == 0)
      return result;
  }
  if ((v4 & 1) != 0)
  {
    if ((v8 & 1) != 0)
      return v25 == v24;
    return 0;
  }
  if ((v8 & 1) != 0)
    return 0;
  if (((v3 | (v23 << 32)) & 0x100000000) != 0)
    __asm { BR              X11 }
  result = 0;
  if (((v7 | (v6 << 32)) & 0x100000000) == 0 && (_DWORD)v3 == (_DWORD)v7)
    return v25 == v24;
  return result;
}

void sub_1E6EE0(uint64_t a1@<X8>)
{
  if ((a1 & 0x100000000) != 0 && !(_DWORD)a1)
    JUMPOUT(0x1E6E68);
  JUMPOUT(0x1E6E80);
}

void sub_1E6EF0(uint64_t a1@<X8>)
{
  if ((a1 & 0x100000000) != 0 && (_DWORD)a1 == 1)
    JUMPOUT(0x1E6E68);
  JUMPOUT(0x1E6E80);
}

void sub_1E6F04(uint64_t a1@<X8>)
{
  if ((a1 & 0x100000000) != 0 && (_DWORD)a1 == 2)
    JUMPOUT(0x1E6E68);
  JUMPOUT(0x1E6E80);
}

void sub_1E6F18(uint64_t a1@<X8>)
{
  if ((a1 & 0x100000000) != 0 && a1 >= 3)
    JUMPOUT(0x1E6E68);
  JUMPOUT(0x1E6E80);
}

unint64_t sub_1E6F30()
{
  unint64_t result;

  result = qword_3C1260;
  if (!qword_3C1260)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ModernShelf.Background);
    atomic_store(result, (unint64_t *)&qword_3C1260);
  }
  return result;
}

unint64_t sub_1E6F78()
{
  unint64_t result;

  result = qword_3C1268;
  if (!qword_3C1268)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ModernShelf.ItemPresentation.Orientation);
    atomic_store(result, (unint64_t *)&qword_3C1268);
  }
  return result;
}

unint64_t sub_1E6FC0()
{
  unint64_t result;

  result = qword_3C1270;
  if (!qword_3C1270)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ModernShelf.ItemPresentation);
    atomic_store(result, (unint64_t *)&qword_3C1270);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ModernShelf(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;
  int v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id *v52;
  int v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  id *v58;
  int v59;
  id v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  void (*v74)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v75)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  id *v103;
  int v104;
  id v105;
  id *v106;
  int v107;
  id v108;
  id *v109;
  int v110;
  id v111;
  id *v112;
  int v113;
  id v114;
  id *v115;
  int v116;
  id v117;
  uint64_t v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  void (*v131)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  int *v135;
  uint64_t v136;
  unsigned int (*v137)(_QWORD *, uint64_t, int *);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  id *v144;
  int v145;
  id v146;
  id *v147;
  int v148;
  id v149;
  id *v150;
  int v151;
  id v152;
  id *v153;
  int v154;
  id v155;
  id *v156;
  int v157;
  id v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  void (*v171)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int (*v178)(char *, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v194;
  unsigned int (*v195)(_QWORD *, uint64_t, int *);
  char *__dst;
  _QWORD *__dsta;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  int *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  uint64_t v209;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Header(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v204 = v6;
      v206 = v12;
      v16 = v10[1];
      *v9 = *v10;
      v9[1] = v16;
      v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      v18 = v10[5];
      v9[4] = v10[4];
      v9[5] = v18;
      *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
      v208 = v10;
      v209 = v11;
      v19 = *(int *)(v11 + 36);
      v20 = (_QWORD *)((char *)v9 + v19);
      v21 = (_QWORD *)((char *)v10 + v19);
      v22 = type metadata accessor for ActionMenu(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
      v25 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v207 = v9;
      if (v24(v21, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v28 = v208;
        v27 = v209;
        v6 = v204;
      }
      else
      {
        v200 = v23;
        v202 = v25;
        v29 = v21[1];
        *v20 = *v21;
        v20[1] = v29;
        v30 = v21[3];
        v20[2] = v21[2];
        v20[3] = v30;
        v31 = v21[5];
        v20[4] = v21[4];
        v20[5] = v31;
        v32 = *(int *)(v25 + 28);
        __dst = (char *)v20;
        v198 = v21;
        v33 = (_QWORD *)((char *)v20 + v32);
        v34 = (_QWORD *)((char *)v21 + v32);
        v35 = type metadata accessor for ArtworkModel(0);
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v34, 1, v35))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          v28 = v208;
          v27 = v209;
          v39 = __dst;
          v40 = v200;
          v6 = v204;
        }
        else
        {
          v194 = v36;
          v41 = (int *)v35;
          v42 = v34[1];
          *v33 = *v34;
          v33[1] = v42;
          v43 = *((unsigned __int8 *)v34 + 32);
          swift_bridgeObjectRetain();
          v6 = v204;
          if (v43 == 255)
          {
            *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
            *((_BYTE *)v33 + 32) = *((_BYTE *)v34 + 32);
          }
          else
          {
            v44 = v34[2];
            v45 = v34[3];
            sub_3D464(v44, v45, v43);
            v33[2] = v44;
            v33[3] = v45;
            *((_BYTE *)v33 + 32) = v43;
          }
          v39 = __dst;
          *(_OWORD *)(v33 + 5) = *(_OWORD *)(v34 + 5);
          v46 = (id *)(v34 + 7);
          v47 = *((unsigned __int8 *)v34 + 64);
          if (v47 == 255)
          {
            v33[7] = *v46;
            *((_BYTE *)v33 + 64) = *((_BYTE *)v34 + 64);
          }
          else
          {
            v48 = *v46;
            sub_3D47C(*v46, *((_BYTE *)v34 + 64));
            v33[7] = v48;
            *((_BYTE *)v33 + 64) = v47;
          }
          v49 = (id *)(v34 + 9);
          v50 = *((unsigned __int8 *)v34 + 80);
          if (v50 == 255)
          {
            v33[9] = *v49;
            *((_BYTE *)v33 + 80) = *((_BYTE *)v34 + 80);
          }
          else
          {
            v51 = *v49;
            sub_3D47C(*v49, *((_BYTE *)v34 + 80));
            v33[9] = v51;
            *((_BYTE *)v33 + 80) = v50;
          }
          v52 = (id *)(v34 + 11);
          v53 = *((unsigned __int8 *)v34 + 96);
          if (v53 == 255)
          {
            v33[11] = *v52;
            *((_BYTE *)v33 + 96) = *((_BYTE *)v34 + 96);
          }
          else
          {
            v54 = *v52;
            sub_3D47C(*v52, *((_BYTE *)v34 + 96));
            v33[11] = v54;
            *((_BYTE *)v33 + 96) = v53;
          }
          v55 = (id *)(v34 + 13);
          v56 = *((unsigned __int8 *)v34 + 112);
          if (v56 == 255)
          {
            v33[13] = *v55;
            *((_BYTE *)v33 + 112) = *((_BYTE *)v34 + 112);
          }
          else
          {
            v57 = *v55;
            sub_3D47C(*v55, *((_BYTE *)v34 + 112));
            v33[13] = v57;
            *((_BYTE *)v33 + 112) = v56;
          }
          v58 = (id *)(v34 + 15);
          v59 = *((unsigned __int8 *)v34 + 128);
          if (v59 == 255)
          {
            v33[15] = *v58;
            *((_BYTE *)v33 + 128) = *((_BYTE *)v34 + 128);
          }
          else
          {
            v60 = *v58;
            sub_3D47C(*v58, *((_BYTE *)v34 + 128));
            v33[15] = v60;
            *((_BYTE *)v33 + 128) = v59;
          }
          *((_BYTE *)v33 + 129) = *((_BYTE *)v34 + 129);
          v61 = v41;
          v62 = v41[11];
          v63 = (char *)v33 + v62;
          v64 = (char *)v34 + v62;
          v65 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          v66 = v41[12];
          v67 = (_QWORD *)((char *)v33 + v66);
          v68 = (_QWORD *)((char *)v34 + v66);
          v69 = v68[1];
          *v67 = *v68;
          v67[1] = v69;
          *((_BYTE *)v33 + v41[13]) = *((_BYTE *)v34 + v41[13]);
          *((_BYTE *)v33 + v41[14]) = *((_BYTE *)v34 + v41[14]);
          *((_BYTE *)v33 + v41[15]) = *((_BYTE *)v34 + v41[15]);
          v70 = v41[16];
          v71 = (_QWORD *)((char *)v33 + v70);
          v72 = (_QWORD *)((char *)v34 + v70);
          v73 = v72[1];
          *v71 = *v72;
          v71[1] = v73;
          v74 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v194 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v74(v33, 0, 1, v61);
          v28 = v208;
          v27 = v209;
          v40 = v200;
        }
        v25 = v202;
        *(_QWORD *)&v39[*(int *)(v202 + 32)] = *(_QWORD *)((char *)v198 + *(int *)(v202 + 32));
        v75 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
        swift_bridgeObjectRetain();
        v75(v39, 0, 1, v202);
        v9 = v207;
      }
      v76 = v27;
      v77 = *(int *)(v27 + 40);
      v78 = (_QWORD *)((char *)v9 + v77);
      v79 = (_QWORD *)((char *)v28 + v77);
      v80 = type metadata accessor for Header.PrimaryAction(0);
      v81 = *(_QWORD *)(v80 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        v83 = v206;
        v84 = v76;
      }
      else
      {
        v205 = v81;
        if (swift_getEnumCaseMultiPayload(v79, v80) == 1)
        {
          v85 = v78;
          v86 = v79[1];
          *v85 = *v79;
          v85[1] = v86;
          v87 = v25;
          v88 = v79[3];
          v85[2] = v79[2];
          v85[3] = v88;
          v89 = v79[5];
          v85[4] = v79[4];
          v85[5] = v89;
          v203 = v87;
          v90 = *(int *)(v87 + 28);
          v199 = v80;
          v201 = v85;
          __dsta = (_QWORD *)((char *)v85 + v90);
          v91 = (_QWORD *)((char *)v79 + v90);
          v92 = (int *)type metadata accessor for ArtworkModel(0);
          v93 = *((_QWORD *)v92 - 1);
          v195 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v93 + 48);
          swift_bridgeObjectRetain();
          v94 = v91;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v195(v91, 1, v92))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(__dsta, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            v84 = v209;
          }
          else
          {
            v98 = v91[1];
            *__dsta = *v91;
            __dsta[1] = v98;
            v99 = *((unsigned __int8 *)v91 + 32);
            swift_bridgeObjectRetain();
            if (v99 == 255)
            {
              *((_OWORD *)__dsta + 1) = *((_OWORD *)v94 + 1);
              *((_BYTE *)__dsta + 32) = *((_BYTE *)v94 + 32);
            }
            else
            {
              v100 = v94;
              v101 = v94[2];
              v102 = v94[3];
              sub_3D464(v101, v102, v99);
              __dsta[2] = v101;
              __dsta[3] = v102;
              v94 = v100;
              *((_BYTE *)__dsta + 32) = v99;
            }
            v84 = v209;
            *(_OWORD *)(__dsta + 5) = *(_OWORD *)(v94 + 5);
            v103 = (id *)(v94 + 7);
            v104 = *((unsigned __int8 *)v94 + 64);
            if (v104 == 255)
            {
              __dsta[7] = *v103;
              *((_BYTE *)__dsta + 64) = *((_BYTE *)v94 + 64);
            }
            else
            {
              v105 = *v103;
              sub_3D47C(*v103, *((_BYTE *)v94 + 64));
              __dsta[7] = v105;
              *((_BYTE *)__dsta + 64) = v104;
            }
            v106 = (id *)(v94 + 9);
            v107 = *((unsigned __int8 *)v94 + 80);
            if (v107 == 255)
            {
              __dsta[9] = *v106;
              *((_BYTE *)__dsta + 80) = *((_BYTE *)v94 + 80);
            }
            else
            {
              v108 = *v106;
              sub_3D47C(*v106, *((_BYTE *)v94 + 80));
              __dsta[9] = v108;
              *((_BYTE *)__dsta + 80) = v107;
            }
            v109 = (id *)(v94 + 11);
            v110 = *((unsigned __int8 *)v94 + 96);
            if (v110 == 255)
            {
              __dsta[11] = *v109;
              *((_BYTE *)__dsta + 96) = *((_BYTE *)v94 + 96);
            }
            else
            {
              v111 = *v109;
              sub_3D47C(*v109, *((_BYTE *)v94 + 96));
              __dsta[11] = v111;
              *((_BYTE *)__dsta + 96) = v110;
            }
            v112 = (id *)(v94 + 13);
            v113 = *((unsigned __int8 *)v94 + 112);
            if (v113 == 255)
            {
              __dsta[13] = *v112;
              *((_BYTE *)__dsta + 112) = *((_BYTE *)v94 + 112);
            }
            else
            {
              v114 = *v112;
              sub_3D47C(*v112, *((_BYTE *)v94 + 112));
              __dsta[13] = v114;
              *((_BYTE *)__dsta + 112) = v113;
            }
            v115 = (id *)(v94 + 15);
            v116 = *((unsigned __int8 *)v94 + 128);
            if (v116 == 255)
            {
              __dsta[15] = *v115;
              *((_BYTE *)__dsta + 128) = *((_BYTE *)v94 + 128);
            }
            else
            {
              v117 = *v115;
              sub_3D47C(*v115, *((_BYTE *)v94 + 128));
              __dsta[15] = v117;
              *((_BYTE *)__dsta + 128) = v116;
            }
            *((_BYTE *)__dsta + 129) = *((_BYTE *)v94 + 129);
            v118 = v92[11];
            v119 = (char *)__dsta + v118;
            v120 = v94;
            v121 = (char *)v94 + v118;
            v122 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v119, v121, v122);
            v123 = v92[12];
            v124 = (_QWORD *)((char *)__dsta + v123);
            v125 = (_QWORD *)((char *)v120 + v123);
            v126 = v125[1];
            *v124 = *v125;
            v124[1] = v126;
            *((_BYTE *)__dsta + v92[13]) = *((_BYTE *)v120 + v92[13]);
            *((_BYTE *)__dsta + v92[14]) = *((_BYTE *)v120 + v92[14]);
            *((_BYTE *)__dsta + v92[15]) = *((_BYTE *)v120 + v92[15]);
            v127 = v92[16];
            v128 = (_QWORD *)((char *)__dsta + v127);
            v129 = (_QWORD *)((char *)v120 + v127);
            v130 = v129[1];
            *v128 = *v129;
            v128[1] = v130;
            v131 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v93 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v131(__dsta, 0, 1, v92);
          }
          v80 = v199;
          v78 = v201;
          *(_QWORD *)((char *)v201 + *(int *)(v203 + 32)) = *(_QWORD *)((char *)v79 + *(int *)(v203 + 32));
          swift_bridgeObjectRetain();
          v96 = 1;
          v83 = v206;
          v9 = v207;
          v97 = v205;
        }
        else
        {
          *v78 = *v79;
          swift_retain();
          v96 = 0;
          v97 = v81;
          v83 = v206;
          v84 = v76;
        }
        swift_storeEnumTagMultiPayload(v78, v80, v96);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v78, 0, 1, v80);
      }
      *(_QWORD *)((char *)v9 + *(int *)(v84 + 44)) = *(_QWORD *)((char *)v208 + *(int *)(v84 + 44));
      v132 = *(int *)(v84 + 48);
      v133 = (_QWORD *)((char *)v9 + v132);
      v134 = (_QWORD *)((char *)v208 + v132);
      v135 = (int *)type metadata accessor for ArtworkModel(0);
      v136 = *((_QWORD *)v135 - 1);
      v137 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v136 + 48);
      swift_bridgeObjectRetain();
      if (v137(v134, 1, v135))
      {
        v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        v139 = v136;
        v140 = v134[1];
        *v133 = *v134;
        v133[1] = v140;
        v141 = *((unsigned __int8 *)v134 + 32);
        swift_bridgeObjectRetain();
        if (v141 == 255)
        {
          *((_OWORD *)v133 + 1) = *((_OWORD *)v134 + 1);
          *((_BYTE *)v133 + 32) = *((_BYTE *)v134 + 32);
        }
        else
        {
          v142 = v134[2];
          v143 = v134[3];
          sub_3D464(v142, v143, v141);
          v133[2] = v142;
          v133[3] = v143;
          *((_BYTE *)v133 + 32) = v141;
        }
        *(_OWORD *)(v133 + 5) = *(_OWORD *)(v134 + 5);
        v144 = (id *)(v134 + 7);
        v145 = *((unsigned __int8 *)v134 + 64);
        if (v145 == 255)
        {
          v133[7] = *v144;
          *((_BYTE *)v133 + 64) = *((_BYTE *)v134 + 64);
        }
        else
        {
          v146 = *v144;
          sub_3D47C(*v144, *((_BYTE *)v134 + 64));
          v133[7] = v146;
          *((_BYTE *)v133 + 64) = v145;
        }
        v83 = v206;
        v147 = (id *)(v134 + 9);
        v148 = *((unsigned __int8 *)v134 + 80);
        if (v148 == 255)
        {
          v133[9] = *v147;
          *((_BYTE *)v133 + 80) = *((_BYTE *)v134 + 80);
        }
        else
        {
          v149 = *v147;
          sub_3D47C(*v147, *((_BYTE *)v134 + 80));
          v133[9] = v149;
          *((_BYTE *)v133 + 80) = v148;
        }
        v150 = (id *)(v134 + 11);
        v151 = *((unsigned __int8 *)v134 + 96);
        if (v151 == 255)
        {
          v133[11] = *v150;
          *((_BYTE *)v133 + 96) = *((_BYTE *)v134 + 96);
        }
        else
        {
          v152 = *v150;
          sub_3D47C(*v150, *((_BYTE *)v134 + 96));
          v133[11] = v152;
          *((_BYTE *)v133 + 96) = v151;
        }
        v153 = (id *)(v134 + 13);
        v154 = *((unsigned __int8 *)v134 + 112);
        if (v154 == 255)
        {
          v133[13] = *v153;
          *((_BYTE *)v133 + 112) = *((_BYTE *)v134 + 112);
        }
        else
        {
          v155 = *v153;
          sub_3D47C(*v153, *((_BYTE *)v134 + 112));
          v133[13] = v155;
          *((_BYTE *)v133 + 112) = v154;
        }
        v156 = (id *)(v134 + 15);
        v157 = *((unsigned __int8 *)v134 + 128);
        if (v157 == 255)
        {
          v133[15] = *v156;
          *((_BYTE *)v133 + 128) = *((_BYTE *)v134 + 128);
        }
        else
        {
          v158 = *v156;
          sub_3D47C(*v156, *((_BYTE *)v134 + 128));
          v133[15] = v158;
          *((_BYTE *)v133 + 128) = v157;
        }
        *((_BYTE *)v133 + 129) = *((_BYTE *)v134 + 129);
        v159 = v135[11];
        v160 = (char *)v133 + v159;
        v161 = (char *)v134 + v159;
        v162 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v160, v161, v162);
        v163 = v135[12];
        v164 = (_QWORD *)((char *)v133 + v163);
        v165 = (_QWORD *)((char *)v134 + v163);
        v166 = v165[1];
        *v164 = *v165;
        v164[1] = v166;
        *((_BYTE *)v133 + v135[13]) = *((_BYTE *)v134 + v135[13]);
        *((_BYTE *)v133 + v135[14]) = *((_BYTE *)v134 + v135[14]);
        *((_BYTE *)v133 + v135[15]) = *((_BYTE *)v134 + v135[15]);
        v167 = v135[16];
        v168 = (_QWORD *)((char *)v133 + v167);
        v169 = (_QWORD *)((char *)v134 + v167);
        v170 = v169[1];
        *v168 = *v169;
        v168[1] = v170;
        v171 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v139 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v171(v133, 0, 1, v135);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v207, 0, 1, v209);
    }
    v172 = v6[7];
    *(_OWORD *)((char *)v4 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)v4 + v172) = *(_QWORD *)((char *)a2 + v172);
    v173 = v6[9];
    *((_BYTE *)v4 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v174 = (char *)v4 + v173;
    v175 = (char *)a2 + v173;
    v176 = type metadata accessor for URL(0);
    v177 = *(_QWORD *)(v176 - 8);
    v178 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
    swift_bridgeObjectRetain();
    if (v178(v175, 1, v176))
    {
      v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v174, v175, v176);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
    }
    v180 = v6[11];
    *((_BYTE *)v4 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *((_BYTE *)v4 + v180) = *((_BYTE *)a2 + v180);
    v181 = v6[12];
    v182 = (char *)v4 + v181;
    v183 = (char *)a2 + v181;
    v184 = *(_QWORD *)((char *)a2 + v181 + 24);
    if (v184)
    {
      v185 = *((_QWORD *)v183 + 4);
      *((_QWORD *)v182 + 3) = v184;
      *((_QWORD *)v182 + 4) = v185;
      (**(void (***)(void))(v184 - 8))();
    }
    else
    {
      v186 = *((_OWORD *)v183 + 1);
      *(_OWORD *)v182 = *(_OWORD *)v183;
      *((_OWORD *)v182 + 1) = v186;
      *((_QWORD *)v182 + 4) = *((_QWORD *)v183 + 4);
    }
    v187 = v6[13];
    v188 = (char *)v4 + v187;
    v189 = (char *)a2 + v187;
    v190 = type metadata accessor for ImpressionMetrics(0);
    v191 = *(_QWORD *)(v190 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
    {
      v192 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v188, v189, v190);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
    }
  }
  return v4;
}

uint64_t destroy for ModernShelf(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = (int *)type metadata accessor for Header(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + v5[9];
    v7 = type metadata accessor for ActionMenu(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 28);
      v9 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        v10 = *(unsigned __int8 *)(v8 + 32);
        if (v10 != 255)
          sub_3B5BC(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), v10);
        v11 = *(unsigned __int8 *)(v8 + 64);
        if (v11 != 255)
          sub_3D624(*(id *)(v8 + 56), v11);
        v12 = *(unsigned __int8 *)(v8 + 80);
        if (v12 != 255)
          sub_3D624(*(id *)(v8 + 72), v12);
        v13 = *(unsigned __int8 *)(v8 + 96);
        if (v13 != 255)
          sub_3D624(*(id *)(v8 + 88), v13);
        v14 = *(unsigned __int8 *)(v8 + 112);
        if (v14 != 255)
          sub_3D624(*(id *)(v8 + 104), v14);
        v15 = *(unsigned __int8 *)(v8 + 128);
        if (v15 != 255)
          sub_3D624(*(id *)(v8 + 120), v15);
        v16 = v8 + *(int *)(v9 + 44);
        v17 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v18 = (_QWORD *)(v4 + v5[10]);
    v19 = type metadata accessor for Header.PrimaryAction(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = (char *)v18 + *(int *)(v7 + 28);
        v21 = type metadata accessor for ArtworkModel(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
        {
          swift_bridgeObjectRelease();
          v22 = v20[32];
          if (v22 != 255)
            sub_3B5BC(*((_QWORD *)v20 + 2), *((_QWORD *)v20 + 3), v22);
          v23 = v20[64];
          if (v23 != 255)
            sub_3D624(*((id *)v20 + 7), v23);
          v24 = v20[80];
          if (v24 != 255)
            sub_3D624(*((id *)v20 + 9), v24);
          v25 = v20[96];
          if (v25 != 255)
            sub_3D624(*((id *)v20 + 11), v25);
          v26 = v20[112];
          if (v26 != 255)
            sub_3D624(*((id *)v20 + 13), v26);
          v27 = v20[128];
          if (v27 != 255)
            sub_3D624(*((id *)v20 + 15), v27);
          v28 = &v20[*(int *)(v21 + 44)];
          v29 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release(*v18);
      }
    }
    swift_bridgeObjectRelease();
    v30 = v4 + v5[12];
    v31 = type metadata accessor for ArtworkModel(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
    {
      swift_bridgeObjectRelease();
      v32 = *(unsigned __int8 *)(v30 + 32);
      if (v32 != 255)
        sub_3B5BC(*(_QWORD *)(v30 + 16), *(_QWORD *)(v30 + 24), v32);
      v33 = *(unsigned __int8 *)(v30 + 64);
      if (v33 != 255)
        sub_3D624(*(id *)(v30 + 56), v33);
      v34 = *(unsigned __int8 *)(v30 + 80);
      if (v34 != 255)
        sub_3D624(*(id *)(v30 + 72), v34);
      v35 = *(unsigned __int8 *)(v30 + 96);
      if (v35 != 255)
        sub_3D624(*(id *)(v30 + 88), v35);
      v36 = *(unsigned __int8 *)(v30 + 112);
      if (v36 != 255)
        sub_3D624(*(id *)(v30 + 104), v36);
      v37 = *(unsigned __int8 *)(v30 + 128);
      if (v37 != 255)
        sub_3D624(*(id *)(v30 + 120), v37);
      v38 = v30 + *(int *)(v31 + 44);
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v40 = a1 + a2[9];
  v41 = type metadata accessor for URL(0);
  v42 = *(_QWORD *)(v41 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
  v43 = (_QWORD *)(a1 + a2[12]);
  if (v43[3])
    __swift_destroy_boxed_opaque_existential_1(v43);
  v44 = a1 + a2[13];
  v45 = type metadata accessor for ImpressionMetrics(0);
  v46 = *(_QWORD *)(v45 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  return result;
}

_QWORD *initializeWithCopy for ModernShelf(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(_QWORD *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  int *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  id *v43;
  int v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id *v52;
  int v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  id *v100;
  int v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  id *v106;
  int v107;
  id v108;
  id *v109;
  int v110;
  id v111;
  id *v112;
  int v113;
  id v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  void (*v128)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  int *v132;
  uint64_t v133;
  unsigned int (*v134)(_QWORD *, uint64_t, int *);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  id *v141;
  int v142;
  id v143;
  id *v144;
  int v145;
  id v146;
  id *v147;
  int v148;
  id v149;
  id *v150;
  int v151;
  id v152;
  id *v153;
  int v154;
  id v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  void (*v168)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v191;
  unsigned int (*v192)(_QWORD *, uint64_t, int *);
  char *__dst;
  _QWORD *__dsta;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  _QWORD *v205;
  uint64_t v206;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Header(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v201 = v3;
    v203 = v11;
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    v16 = v9[5];
    v8[4] = v9[4];
    v8[5] = v16;
    *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
    v205 = v9;
    v206 = v10;
    v17 = *(int *)(v10 + 36);
    v18 = (_QWORD *)((char *)v8 + v17);
    v19 = (_QWORD *)((char *)v9 + v17);
    v20 = type metadata accessor for ActionMenu(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
    v23 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v204 = v8;
    if (v22(v19, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v26 = v205;
      v25 = v206;
      v3 = v201;
    }
    else
    {
      v197 = v21;
      v199 = v23;
      v27 = v19[1];
      *v18 = *v19;
      v18[1] = v27;
      v28 = v19[3];
      v18[2] = v19[2];
      v18[3] = v28;
      v29 = v19[5];
      v18[4] = v19[4];
      v18[5] = v29;
      v30 = *(int *)(v23 + 28);
      __dst = (char *)v18;
      v195 = v19;
      v31 = (_QWORD *)((char *)v18 + v30);
      v32 = (_QWORD *)((char *)v19 + v30);
      v33 = type metadata accessor for ArtworkModel(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35(v32, 1, v33))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        v25 = v206;
        v37 = __dst;
        v3 = v201;
      }
      else
      {
        v191 = v34;
        v38 = (int *)v33;
        v39 = v32[1];
        *v31 = *v32;
        v31[1] = v39;
        v40 = *((unsigned __int8 *)v32 + 32);
        swift_bridgeObjectRetain();
        v3 = v201;
        if (v40 == 255)
        {
          *((_OWORD *)v31 + 1) = *((_OWORD *)v32 + 1);
          *((_BYTE *)v31 + 32) = *((_BYTE *)v32 + 32);
        }
        else
        {
          v41 = v32[2];
          v42 = v32[3];
          sub_3D464(v41, v42, v40);
          v31[2] = v41;
          v31[3] = v42;
          *((_BYTE *)v31 + 32) = v40;
        }
        v37 = __dst;
        *(_OWORD *)(v31 + 5) = *(_OWORD *)(v32 + 5);
        v43 = (id *)(v32 + 7);
        v44 = *((unsigned __int8 *)v32 + 64);
        if (v44 == 255)
        {
          v31[7] = *v43;
          *((_BYTE *)v31 + 64) = *((_BYTE *)v32 + 64);
        }
        else
        {
          v45 = *v43;
          sub_3D47C(*v43, *((_BYTE *)v32 + 64));
          v31[7] = v45;
          *((_BYTE *)v31 + 64) = v44;
        }
        v46 = (id *)(v32 + 9);
        v47 = *((unsigned __int8 *)v32 + 80);
        if (v47 == 255)
        {
          v31[9] = *v46;
          *((_BYTE *)v31 + 80) = *((_BYTE *)v32 + 80);
        }
        else
        {
          v48 = *v46;
          sub_3D47C(*v46, *((_BYTE *)v32 + 80));
          v31[9] = v48;
          *((_BYTE *)v31 + 80) = v47;
        }
        v49 = (id *)(v32 + 11);
        v50 = *((unsigned __int8 *)v32 + 96);
        if (v50 == 255)
        {
          v31[11] = *v49;
          *((_BYTE *)v31 + 96) = *((_BYTE *)v32 + 96);
        }
        else
        {
          v51 = *v49;
          sub_3D47C(*v49, *((_BYTE *)v32 + 96));
          v31[11] = v51;
          *((_BYTE *)v31 + 96) = v50;
        }
        v52 = (id *)(v32 + 13);
        v53 = *((unsigned __int8 *)v32 + 112);
        if (v53 == 255)
        {
          v31[13] = *v52;
          *((_BYTE *)v31 + 112) = *((_BYTE *)v32 + 112);
        }
        else
        {
          v54 = *v52;
          sub_3D47C(*v52, *((_BYTE *)v32 + 112));
          v31[13] = v54;
          *((_BYTE *)v31 + 112) = v53;
        }
        v55 = (id *)(v32 + 15);
        v56 = *((unsigned __int8 *)v32 + 128);
        if (v56 == 255)
        {
          v31[15] = *v55;
          *((_BYTE *)v31 + 128) = *((_BYTE *)v32 + 128);
        }
        else
        {
          v57 = *v55;
          sub_3D47C(*v55, *((_BYTE *)v32 + 128));
          v31[15] = v57;
          *((_BYTE *)v31 + 128) = v56;
        }
        *((_BYTE *)v31 + 129) = *((_BYTE *)v32 + 129);
        v58 = v38;
        v59 = v38[11];
        v60 = (char *)v31 + v59;
        v61 = (char *)v32 + v59;
        v62 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        v63 = v38[12];
        v64 = (_QWORD *)((char *)v31 + v63);
        v65 = (_QWORD *)((char *)v32 + v63);
        v66 = v65[1];
        *v64 = *v65;
        v64[1] = v66;
        *((_BYTE *)v31 + v38[13]) = *((_BYTE *)v32 + v38[13]);
        *((_BYTE *)v31 + v38[14]) = *((_BYTE *)v32 + v38[14]);
        *((_BYTE *)v31 + v38[15]) = *((_BYTE *)v32 + v38[15]);
        v67 = v38[16];
        v68 = (_QWORD *)((char *)v31 + v67);
        v69 = (_QWORD *)((char *)v32 + v67);
        v70 = v69[1];
        *v68 = *v69;
        v68[1] = v70;
        v71 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v191 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v71(v31, 0, 1, v58);
        v25 = v206;
      }
      v23 = v199;
      v26 = v205;
      *(_QWORD *)&v37[*(int *)(v199 + 32)] = *(_QWORD *)((char *)v195 + *(int *)(v199 + 32));
      v72 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56);
      swift_bridgeObjectRetain();
      v72(v37, 0, 1, v199);
      v8 = v204;
    }
    v73 = v25;
    v74 = *(int *)(v25 + 40);
    v75 = (_QWORD *)((char *)v8 + v74);
    v76 = (_QWORD *)((char *)v26 + v74);
    v77 = type metadata accessor for Header.PrimaryAction(0);
    v78 = *(_QWORD *)(v77 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      v80 = v203;
      v81 = v73;
    }
    else
    {
      v202 = v78;
      if (swift_getEnumCaseMultiPayload(v76, v77) == 1)
      {
        v82 = v75;
        v83 = v76[1];
        *v82 = *v76;
        v82[1] = v83;
        v84 = v23;
        v85 = v76[3];
        v82[2] = v76[2];
        v82[3] = v85;
        v86 = v76[5];
        v82[4] = v76[4];
        v82[5] = v86;
        v200 = v84;
        v87 = *(int *)(v84 + 28);
        v196 = v77;
        v198 = v82;
        __dsta = (_QWORD *)((char *)v82 + v87);
        v88 = (_QWORD *)((char *)v76 + v87);
        v89 = (int *)type metadata accessor for ArtworkModel(0);
        v90 = *((_QWORD *)v89 - 1);
        v192 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v90 + 48);
        swift_bridgeObjectRetain();
        v91 = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v192(v88, 1, v89))
        {
          v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(__dsta, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          v81 = v206;
        }
        else
        {
          v95 = v88[1];
          *__dsta = *v88;
          __dsta[1] = v95;
          v96 = *((unsigned __int8 *)v88 + 32);
          swift_bridgeObjectRetain();
          if (v96 == 255)
          {
            *((_OWORD *)__dsta + 1) = *((_OWORD *)v91 + 1);
            *((_BYTE *)__dsta + 32) = *((_BYTE *)v91 + 32);
          }
          else
          {
            v97 = v91;
            v98 = v91[2];
            v99 = v91[3];
            sub_3D464(v98, v99, v96);
            __dsta[2] = v98;
            __dsta[3] = v99;
            v91 = v97;
            *((_BYTE *)__dsta + 32) = v96;
          }
          v81 = v206;
          *(_OWORD *)(__dsta + 5) = *(_OWORD *)(v91 + 5);
          v100 = (id *)(v91 + 7);
          v101 = *((unsigned __int8 *)v91 + 64);
          if (v101 == 255)
          {
            __dsta[7] = *v100;
            *((_BYTE *)__dsta + 64) = *((_BYTE *)v91 + 64);
          }
          else
          {
            v102 = *v100;
            sub_3D47C(*v100, *((_BYTE *)v91 + 64));
            __dsta[7] = v102;
            *((_BYTE *)__dsta + 64) = v101;
          }
          v103 = (id *)(v91 + 9);
          v104 = *((unsigned __int8 *)v91 + 80);
          if (v104 == 255)
          {
            __dsta[9] = *v103;
            *((_BYTE *)__dsta + 80) = *((_BYTE *)v91 + 80);
          }
          else
          {
            v105 = *v103;
            sub_3D47C(*v103, *((_BYTE *)v91 + 80));
            __dsta[9] = v105;
            *((_BYTE *)__dsta + 80) = v104;
          }
          v106 = (id *)(v91 + 11);
          v107 = *((unsigned __int8 *)v91 + 96);
          if (v107 == 255)
          {
            __dsta[11] = *v106;
            *((_BYTE *)__dsta + 96) = *((_BYTE *)v91 + 96);
          }
          else
          {
            v108 = *v106;
            sub_3D47C(*v106, *((_BYTE *)v91 + 96));
            __dsta[11] = v108;
            *((_BYTE *)__dsta + 96) = v107;
          }
          v109 = (id *)(v91 + 13);
          v110 = *((unsigned __int8 *)v91 + 112);
          if (v110 == 255)
          {
            __dsta[13] = *v109;
            *((_BYTE *)__dsta + 112) = *((_BYTE *)v91 + 112);
          }
          else
          {
            v111 = *v109;
            sub_3D47C(*v109, *((_BYTE *)v91 + 112));
            __dsta[13] = v111;
            *((_BYTE *)__dsta + 112) = v110;
          }
          v112 = (id *)(v91 + 15);
          v113 = *((unsigned __int8 *)v91 + 128);
          if (v113 == 255)
          {
            __dsta[15] = *v112;
            *((_BYTE *)__dsta + 128) = *((_BYTE *)v91 + 128);
          }
          else
          {
            v114 = *v112;
            sub_3D47C(*v112, *((_BYTE *)v91 + 128));
            __dsta[15] = v114;
            *((_BYTE *)__dsta + 128) = v113;
          }
          *((_BYTE *)__dsta + 129) = *((_BYTE *)v91 + 129);
          v115 = v89[11];
          v116 = (char *)__dsta + v115;
          v117 = v91;
          v118 = (char *)v91 + v115;
          v119 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v116, v118, v119);
          v120 = v89[12];
          v121 = (_QWORD *)((char *)__dsta + v120);
          v122 = (_QWORD *)((char *)v117 + v120);
          v123 = v122[1];
          *v121 = *v122;
          v121[1] = v123;
          *((_BYTE *)__dsta + v89[13]) = *((_BYTE *)v117 + v89[13]);
          *((_BYTE *)__dsta + v89[14]) = *((_BYTE *)v117 + v89[14]);
          *((_BYTE *)__dsta + v89[15]) = *((_BYTE *)v117 + v89[15]);
          v124 = v89[16];
          v125 = (_QWORD *)((char *)__dsta + v124);
          v126 = (_QWORD *)((char *)v117 + v124);
          v127 = v126[1];
          *v125 = *v126;
          v125[1] = v127;
          v128 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v90 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v128(__dsta, 0, 1, v89);
        }
        v77 = v196;
        v75 = v198;
        *(_QWORD *)((char *)v198 + *(int *)(v200 + 32)) = *(_QWORD *)((char *)v76 + *(int *)(v200 + 32));
        swift_bridgeObjectRetain();
        v93 = 1;
        v80 = v203;
        v8 = v204;
        v94 = v202;
      }
      else
      {
        *v75 = *v76;
        swift_retain();
        v93 = 0;
        v94 = v78;
        v80 = v203;
        v81 = v73;
      }
      swift_storeEnumTagMultiPayload(v75, v77, v93);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v75, 0, 1, v77);
    }
    *(_QWORD *)((char *)v8 + *(int *)(v81 + 44)) = *(_QWORD *)((char *)v205 + *(int *)(v81 + 44));
    v129 = *(int *)(v81 + 48);
    v130 = (_QWORD *)((char *)v8 + v129);
    v131 = (_QWORD *)((char *)v205 + v129);
    v132 = (int *)type metadata accessor for ArtworkModel(0);
    v133 = *((_QWORD *)v132 - 1);
    v134 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v133 + 48);
    swift_bridgeObjectRetain();
    if (v134(v131, 1, v132))
    {
      v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    }
    else
    {
      v136 = v133;
      v137 = v131[1];
      *v130 = *v131;
      v130[1] = v137;
      v138 = *((unsigned __int8 *)v131 + 32);
      swift_bridgeObjectRetain();
      if (v138 == 255)
      {
        *((_OWORD *)v130 + 1) = *((_OWORD *)v131 + 1);
        *((_BYTE *)v130 + 32) = *((_BYTE *)v131 + 32);
      }
      else
      {
        v139 = v131[2];
        v140 = v131[3];
        sub_3D464(v139, v140, v138);
        v130[2] = v139;
        v130[3] = v140;
        *((_BYTE *)v130 + 32) = v138;
      }
      *(_OWORD *)(v130 + 5) = *(_OWORD *)(v131 + 5);
      v141 = (id *)(v131 + 7);
      v142 = *((unsigned __int8 *)v131 + 64);
      if (v142 == 255)
      {
        v130[7] = *v141;
        *((_BYTE *)v130 + 64) = *((_BYTE *)v131 + 64);
      }
      else
      {
        v143 = *v141;
        sub_3D47C(*v141, *((_BYTE *)v131 + 64));
        v130[7] = v143;
        *((_BYTE *)v130 + 64) = v142;
      }
      v80 = v203;
      v144 = (id *)(v131 + 9);
      v145 = *((unsigned __int8 *)v131 + 80);
      if (v145 == 255)
      {
        v130[9] = *v144;
        *((_BYTE *)v130 + 80) = *((_BYTE *)v131 + 80);
      }
      else
      {
        v146 = *v144;
        sub_3D47C(*v144, *((_BYTE *)v131 + 80));
        v130[9] = v146;
        *((_BYTE *)v130 + 80) = v145;
      }
      v147 = (id *)(v131 + 11);
      v148 = *((unsigned __int8 *)v131 + 96);
      if (v148 == 255)
      {
        v130[11] = *v147;
        *((_BYTE *)v130 + 96) = *((_BYTE *)v131 + 96);
      }
      else
      {
        v149 = *v147;
        sub_3D47C(*v147, *((_BYTE *)v131 + 96));
        v130[11] = v149;
        *((_BYTE *)v130 + 96) = v148;
      }
      v150 = (id *)(v131 + 13);
      v151 = *((unsigned __int8 *)v131 + 112);
      if (v151 == 255)
      {
        v130[13] = *v150;
        *((_BYTE *)v130 + 112) = *((_BYTE *)v131 + 112);
      }
      else
      {
        v152 = *v150;
        sub_3D47C(*v150, *((_BYTE *)v131 + 112));
        v130[13] = v152;
        *((_BYTE *)v130 + 112) = v151;
      }
      v153 = (id *)(v131 + 15);
      v154 = *((unsigned __int8 *)v131 + 128);
      if (v154 == 255)
      {
        v130[15] = *v153;
        *((_BYTE *)v130 + 128) = *((_BYTE *)v131 + 128);
      }
      else
      {
        v155 = *v153;
        sub_3D47C(*v153, *((_BYTE *)v131 + 128));
        v130[15] = v155;
        *((_BYTE *)v130 + 128) = v154;
      }
      *((_BYTE *)v130 + 129) = *((_BYTE *)v131 + 129);
      v156 = v132[11];
      v157 = (char *)v130 + v156;
      v158 = (char *)v131 + v156;
      v159 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
      v160 = v132[12];
      v161 = (_QWORD *)((char *)v130 + v160);
      v162 = (_QWORD *)((char *)v131 + v160);
      v163 = v162[1];
      *v161 = *v162;
      v161[1] = v163;
      *((_BYTE *)v130 + v132[13]) = *((_BYTE *)v131 + v132[13]);
      *((_BYTE *)v130 + v132[14]) = *((_BYTE *)v131 + v132[14]);
      *((_BYTE *)v130 + v132[15]) = *((_BYTE *)v131 + v132[15]);
      v164 = v132[16];
      v165 = (_QWORD *)((char *)v130 + v164);
      v166 = (_QWORD *)((char *)v131 + v164);
      v167 = v166[1];
      *v165 = *v166;
      v165[1] = v167;
      v168 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v136 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v168(v130, 0, 1, v132);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v204, 0, 1, v206);
  }
  v169 = v3[7];
  *(_OWORD *)((char *)a1 + v3[6]) = *(_OWORD *)((char *)a2 + v3[6]);
  *(_QWORD *)((char *)a1 + v169) = *(_QWORD *)((char *)a2 + v169);
  v170 = v3[9];
  *((_BYTE *)a1 + v3[8]) = *((_BYTE *)a2 + v3[8]);
  v171 = (char *)a1 + v170;
  v172 = (char *)a2 + v170;
  v173 = type metadata accessor for URL(0);
  v174 = *(_QWORD *)(v173 - 8);
  v175 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48);
  swift_bridgeObjectRetain();
  if (v175(v172, 1, v173))
  {
    v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v171, v172, v173);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v171, 0, 1, v173);
  }
  v177 = v3[11];
  *((_BYTE *)a1 + v3[10]) = *((_BYTE *)a2 + v3[10]);
  *((_BYTE *)a1 + v177) = *((_BYTE *)a2 + v177);
  v178 = v3[12];
  v179 = (char *)a1 + v178;
  v180 = (char *)a2 + v178;
  v181 = *(_QWORD *)((char *)a2 + v178 + 24);
  if (v181)
  {
    v182 = *((_QWORD *)v180 + 4);
    *((_QWORD *)v179 + 3) = v181;
    *((_QWORD *)v179 + 4) = v182;
    (**(void (***)(void))(v181 - 8))();
  }
  else
  {
    v183 = *((_OWORD *)v180 + 1);
    *(_OWORD *)v179 = *(_OWORD *)v180;
    *((_OWORD *)v179 + 1) = v183;
    *((_QWORD *)v179 + 4) = *((_QWORD *)v180 + 4);
  }
  v184 = v3[13];
  v185 = (char *)a1 + v184;
  v186 = (char *)a2 + v184;
  v187 = type metadata accessor for ImpressionMetrics(0);
  v188 = *(_QWORD *)(v187 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
  {
    v189 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v185, v186, v187);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
  }
  return a1;
}

_QWORD *assignWithCopy for ModernShelf(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, int *);
  int v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int *v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, int *);
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  id *v71;
  int v72;
  id v73;
  id v74;
  id *v75;
  int v76;
  id v77;
  id v78;
  id *v79;
  int v80;
  id v81;
  id v82;
  id *v83;
  int v84;
  id v85;
  id v86;
  id *v87;
  int v88;
  id v89;
  id v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  void (*v101)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v102)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  id *v120;
  int v121;
  id v122;
  id v123;
  id *v124;
  int v125;
  id v126;
  id v127;
  id *v128;
  int v129;
  id v130;
  id v131;
  id *v132;
  int v133;
  id v134;
  id v135;
  id *v136;
  int v137;
  id v138;
  id v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  _QWORD *v148;
  char *v149;
  void (*v150)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v151;
  _QWORD *v152;
  char *v153;
  int *v154;
  uint64_t v155;
  unsigned int (*v156)(char *, uint64_t, int *);
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  id *v162;
  int v163;
  id v164;
  id v165;
  id *v166;
  int v167;
  id v168;
  id v169;
  id *v170;
  int v171;
  id v172;
  id v173;
  id *v174;
  int v175;
  id v176;
  id v177;
  id *v178;
  int v179;
  id v180;
  id v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  char *v188;
  uint64_t v189;
  _QWORD *v190;
  char *v191;
  void (*v192)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v193;
  char *v194;
  char *v195;
  int v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t (*v202)(char *, uint64_t, uint64_t);
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(char *, uint64_t, uint64_t);
  int v218;
  int v219;
  uint64_t v220;
  __int128 v222;
  id *v223;
  int v224;
  id v225;
  id v226;
  id *v227;
  int v228;
  id v229;
  id v230;
  id *v231;
  int v232;
  id v233;
  id v234;
  id *v235;
  int v236;
  id v237;
  id v238;
  id *v239;
  int v240;
  id v241;
  id v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  char *v249;
  uint64_t v250;
  _QWORD *v251;
  char *v252;
  void (*v253)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v254)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v255;
  __int128 *v256;
  __int128 *v257;
  int v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unsigned __int8 v263;
  __int128 v264;
  char *v265;
  id *v266;
  int v267;
  id v268;
  id v269;
  id *v270;
  int v271;
  id v272;
  id v273;
  id *v274;
  int v275;
  id v276;
  id v277;
  id *v278;
  int v279;
  id v280;
  id v281;
  id *v282;
  int v283;
  id v284;
  id v285;
  uint64_t v286;
  char *v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  char *v296;
  void (*v297)(char *, _QWORD, uint64_t, int *);
  uint64_t v298;
  uint64_t v299;
  unsigned __int8 v300;
  __int128 v301;
  _QWORD *v302;
  unsigned __int8 *v303;
  int v304;
  id v305;
  void *v306;
  char v307;
  id v308;
  char v309;
  id v310;
  _QWORD *v311;
  unsigned __int8 *v312;
  int v313;
  id v314;
  void *v315;
  char v316;
  id v317;
  char v318;
  id v319;
  _QWORD *v320;
  unsigned __int8 *v321;
  int v322;
  id v323;
  void *v324;
  char v325;
  id v326;
  char v327;
  id v328;
  _QWORD *v329;
  unsigned __int8 *v330;
  int v331;
  id v332;
  void *v333;
  char v334;
  id v335;
  char v336;
  id v337;
  _QWORD *v338;
  unsigned __int8 *v339;
  int v340;
  id v341;
  void *v342;
  char v343;
  id v344;
  char v345;
  id v346;
  uint64_t v347;
  char *v348;
  unsigned __int8 *v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  unsigned __int8 *v354;
  uint64_t v355;
  char *v356;
  unsigned __int8 *v357;
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  uint64_t (*v362)(char *, uint64_t, uint64_t);
  int v363;
  int v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  int *v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  int *v379;
  int v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  _QWORD *v386;
  __int128 v387;
  id *v388;
  int v389;
  id v390;
  id v391;
  id *v392;
  int v393;
  id v394;
  id v395;
  id *v396;
  int v397;
  id v398;
  id v399;
  id *v400;
  int v401;
  id v402;
  id v403;
  id *v404;
  int v405;
  id v406;
  id v407;
  uint64_t v408;
  _QWORD *v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  _QWORD *v413;
  _QWORD *v414;
  uint64_t v415;
  _QWORD *v416;
  _QWORD *v417;
  int *v418;
  void (*v419)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v420;
  uint64_t v421;
  char *v422;
  int *v423;
  uint64_t v424;
  uint64_t (*v425)(uint64_t, uint64_t, int *);
  int v426;
  int v427;
  int v428;
  uint64_t v429;
  uint64_t v430;
  __int128 *v431;
  __int128 *v432;
  int v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  unsigned __int8 v438;
  __int128 v439;
  id *v440;
  int v441;
  id v442;
  id v443;
  id *v444;
  int v445;
  id v446;
  id v447;
  id *v448;
  int v449;
  id v450;
  id v451;
  id *v452;
  int v453;
  id v454;
  id v455;
  id *v456;
  int v457;
  id v458;
  id v459;
  uint64_t v460;
  uint64_t v461;
  unsigned __int8 *v462;
  uint64_t v463;
  uint64_t v464;
  _QWORD *v465;
  unsigned __int8 *v466;
  uint64_t v467;
  _QWORD *v468;
  unsigned __int8 *v469;
  void (*v470)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v471;
  uint64_t v472;
  unsigned __int8 v473;
  __int128 v474;
  id *v475;
  id *v476;
  int v477;
  id v478;
  void *v479;
  char v480;
  id v481;
  unsigned __int8 v482;
  id v483;
  id *v484;
  id *v485;
  int v486;
  id v487;
  void *v488;
  char v489;
  id v490;
  unsigned __int8 v491;
  id v492;
  id *v493;
  id *v494;
  int v495;
  id v496;
  void *v497;
  char v498;
  id v499;
  unsigned __int8 v500;
  id v501;
  id *v502;
  id *v503;
  int v504;
  id v505;
  void *v506;
  char v507;
  id v508;
  unsigned __int8 v509;
  id v510;
  id *v511;
  id *v512;
  int v513;
  id v514;
  void *v515;
  char v516;
  id v517;
  unsigned __int8 v518;
  id v519;
  uint64_t v520;
  uint64_t v521;
  unsigned __int8 *v522;
  uint64_t v523;
  uint64_t v524;
  _QWORD *v525;
  unsigned __int8 *v526;
  uint64_t v527;
  _QWORD *v528;
  unsigned __int8 *v529;
  __int128 v530;
  id *v531;
  int v532;
  id v533;
  id v534;
  id *v535;
  int v536;
  id v537;
  id v538;
  id *v539;
  int v540;
  id v541;
  id v542;
  id *v543;
  int v544;
  id v545;
  id v546;
  id *v547;
  int v548;
  id v549;
  id v550;
  uint64_t v551;
  _QWORD *v552;
  uint64_t v553;
  uint64_t v554;
  _QWORD *v555;
  char *v556;
  uint64_t v557;
  _QWORD *v558;
  char *v559;
  unsigned int (*v560)(char *, uint64_t, int *);
  uint64_t v561;
  _QWORD *__dst;
  _QWORD *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;
  _QWORD *__dstd;
  _QWORD *v567;
  uint64_t v568;
  _QWORD *v569;
  uint64_t v570;
  unsigned int (*v571)(char *, uint64_t, uint64_t);
  unsigned int (*v572)(char *, uint64_t, uint64_t);
  int *v573;
  _QWORD *v574;
  _QWORD *v575;
  void *v576;
  _QWORD *v577;
  char *v578;
  char *v579;
  uint64_t v580;
  uint64_t v581;
  _QWORD *__src;
  char *__srca;
  char *__srcb;
  int *v585;
  int *v586;
  int *v587;
  _QWORD *v588;
  char *v589;
  char *v590;
  void *v591;
  char *v592;
  char *v593;
  char *v594;
  char *v595;
  char *v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  int *v601;
  int *v602;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (uint64_t)v5 + v6;
  v8 = (char *)v4 + v6;
  v9 = (int *)type metadata accessor for Header(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_145D8(v7, type metadata accessor for Header);
      goto LABEL_7;
    }
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
    *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
    *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v7 + 48) = v8[48];
    *(_BYTE *)(v7 + 49) = v8[49];
    v602 = v9;
    v25 = v9[9];
    v26 = (_QWORD *)(v7 + v25);
    v27 = &v8[v25];
    v28 = type metadata accessor for ActionMenu(0);
    v575 = *(_QWORD **)(v28 - 8);
    v29 = (uint64_t (*)(char *, uint64_t, uint64_t))v575[6];
    v30 = v29((char *)v26, 1, v28);
    __srca = v27;
    v31 = v29(v27, 1, v28);
    v581 = v28;
    if (v30)
    {
      if (!v31)
      {
        v593 = v8;
        v598 = v7;
        v586 = a3;
        *v26 = *(_QWORD *)v27;
        v26[1] = *((_QWORD *)v27 + 1);
        v26[2] = *((_QWORD *)v27 + 2);
        v26[3] = *((_QWORD *)v27 + 3);
        v26[4] = *((_QWORD *)v27 + 4);
        v26[5] = *((_QWORD *)v27 + 5);
        v32 = *(int *)(v28 + 28);
        v567 = v26;
        v33 = (_QWORD *)((char *)v26 + v32);
        v34 = &v27[v32];
        v35 = type metadata accessor for ArtworkModel(0);
        v36 = *(_QWORD **)(v35 - 8);
        v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v36[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v34, 1, v35))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          v39 = v602;
          v40 = v575;
        }
        else
        {
          __dsta = v36;
          v66 = (int *)v35;
          *v33 = *(_QWORD *)v34;
          v33[1] = *((_QWORD *)v34 + 1);
          v67 = v34[32];
          swift_bridgeObjectRetain();
          v40 = v575;
          if (v67 == 255)
          {
            v222 = *((_OWORD *)v34 + 1);
            *((_BYTE *)v33 + 32) = v34[32];
            *((_OWORD *)v33 + 1) = v222;
          }
          else
          {
            v68 = *((_QWORD *)v34 + 2);
            v69 = *((_QWORD *)v34 + 3);
            sub_3D464(v68, v69, v67);
            v33[2] = v68;
            v33[3] = v69;
            *((_BYTE *)v33 + 32) = v67;
          }
          v26 = v567;
          v33[5] = *((_QWORD *)v34 + 5);
          v33[6] = *((_QWORD *)v34 + 6);
          v223 = (id *)(v34 + 56);
          v224 = v34[64];
          if (v224 == 255)
          {
            v226 = *v223;
            *((_BYTE *)v33 + 64) = v34[64];
            v33[7] = v226;
          }
          else
          {
            v225 = *v223;
            sub_3D47C(*v223, v34[64]);
            v33[7] = v225;
            *((_BYTE *)v33 + 64) = v224;
          }
          v227 = (id *)(v34 + 72);
          v228 = v34[80];
          if (v228 == 255)
          {
            v230 = *v227;
            *((_BYTE *)v33 + 80) = v34[80];
            v33[9] = v230;
          }
          else
          {
            v229 = *v227;
            sub_3D47C(*v227, v34[80]);
            v33[9] = v229;
            *((_BYTE *)v33 + 80) = v228;
          }
          v231 = (id *)(v34 + 88);
          v232 = v34[96];
          if (v232 == 255)
          {
            v234 = *v231;
            *((_BYTE *)v33 + 96) = v34[96];
            v33[11] = v234;
          }
          else
          {
            v233 = *v231;
            sub_3D47C(*v231, v34[96]);
            v33[11] = v233;
            *((_BYTE *)v33 + 96) = v232;
          }
          v235 = (id *)(v34 + 104);
          v236 = v34[112];
          if (v236 == 255)
          {
            v238 = *v235;
            *((_BYTE *)v33 + 112) = v34[112];
            v33[13] = v238;
          }
          else
          {
            v237 = *v235;
            sub_3D47C(*v235, v34[112]);
            v33[13] = v237;
            *((_BYTE *)v33 + 112) = v236;
          }
          v239 = (id *)(v34 + 120);
          v240 = v34[128];
          if (v240 == 255)
          {
            v242 = *v239;
            *((_BYTE *)v33 + 128) = v34[128];
            v33[15] = v242;
          }
          else
          {
            v241 = *v239;
            sub_3D47C(*v239, v34[128]);
            v33[15] = v241;
            *((_BYTE *)v33 + 128) = v240;
          }
          *((_BYTE *)v33 + 129) = v34[129];
          v243 = v66[11];
          v244 = (char *)v33 + v243;
          v245 = &v34[v243];
          v246 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v244, v245, v246);
          v247 = v66[12];
          v248 = (_QWORD *)((char *)v33 + v247);
          v249 = &v34[v247];
          *v248 = *(_QWORD *)v249;
          v248[1] = *((_QWORD *)v249 + 1);
          *((_BYTE *)v33 + v66[13]) = v34[v66[13]];
          *((_BYTE *)v33 + v66[14]) = v34[v66[14]];
          *((_BYTE *)v33 + v66[15]) = v34[v66[15]];
          v250 = v66[16];
          v251 = (_QWORD *)((char *)v33 + v250);
          v252 = &v34[v250];
          *v251 = *(_QWORD *)v252;
          v251[1] = *((_QWORD *)v252 + 1);
          v253 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dsta[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v253(v33, 0, 1, v66);
          v39 = v602;
          v8 = v593;
        }
        *(_QWORD *)((char *)v26 + *(int *)(v581 + 32)) = *(_QWORD *)&__srca[*(int *)(v581 + 32)];
        v254 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v40[7];
        swift_bridgeObjectRetain();
        v254((char *)v26, 0, 1, v581);
        a3 = v586;
        v7 = v598;
LABEL_204:
        v358 = v39[10];
        v359 = (_QWORD *)(v7 + v358);
        v360 = &v8[v358];
        v361 = type metadata accessor for Header.PrimaryAction(0);
        v577 = *(_QWORD **)(v361 - 8);
        v362 = (uint64_t (*)(char *, uint64_t, uint64_t))v577[6];
        v363 = v362((char *)v359, 1, v361);
        __srcb = v360;
        v364 = v362(v360, 1, v361);
        if (v363)
        {
          if (!v364)
          {
            if (swift_getEnumCaseMultiPayload(v360, v361) == 1)
            {
              v595 = v8;
              v600 = v7;
              *v359 = *(_QWORD *)v360;
              v359[1] = *((_QWORD *)v360 + 1);
              v359[2] = *((_QWORD *)v360 + 2);
              v359[3] = *((_QWORD *)v360 + 3);
              v359[4] = *((_QWORD *)v360 + 4);
              v359[5] = *((_QWORD *)v360 + 5);
              v365 = *(int *)(v581 + 28);
              __dstc = (_QWORD *)((char *)v359 + v365);
              v366 = &v360[v365];
              v367 = type metadata accessor for ArtworkModel(0);
              v368 = *(_QWORD *)(v367 - 8);
              v571 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v368 + 48);
              swift_bridgeObjectRetain();
              v369 = v366;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v571(v366, 1, v367))
              {
                v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
                memcpy(__dstc, v366, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
                v7 = v600;
              }
              else
              {
                v561 = v368;
                v379 = (int *)v367;
                *__dstc = *(_QWORD *)v366;
                __dstc[1] = *((_QWORD *)v366 + 1);
                v380 = v366[32];
                swift_bridgeObjectRetain();
                if (v380 == 255)
                {
                  v387 = *((_OWORD *)v366 + 1);
                  *((_BYTE *)__dstc + 32) = v366[32];
                  *((_OWORD *)__dstc + 1) = v387;
                }
                else
                {
                  v381 = *((_QWORD *)v366 + 2);
                  v382 = *((_QWORD *)v366 + 3);
                  sub_3D464(v381, v382, v380);
                  __dstc[2] = v381;
                  __dstc[3] = v382;
                  v369 = v366;
                  *((_BYTE *)__dstc + 32) = v380;
                }
                __dstc[5] = *((_QWORD *)v369 + 5);
                __dstc[6] = *((_QWORD *)v369 + 6);
                v388 = (id *)(v369 + 56);
                v389 = v369[64];
                v7 = v600;
                if (v389 == 255)
                {
                  v391 = *v388;
                  *((_BYTE *)__dstc + 64) = v369[64];
                  __dstc[7] = v391;
                }
                else
                {
                  v390 = *v388;
                  sub_3D47C(*v388, v389);
                  __dstc[7] = v390;
                  v369 = v366;
                  *((_BYTE *)__dstc + 64) = v389;
                }
                v392 = (id *)(v369 + 72);
                v393 = v369[80];
                if (v393 == 255)
                {
                  v395 = *v392;
                  *((_BYTE *)__dstc + 80) = v369[80];
                  __dstc[9] = v395;
                }
                else
                {
                  v394 = *v392;
                  sub_3D47C(*v392, v393);
                  __dstc[9] = v394;
                  v369 = v366;
                  *((_BYTE *)__dstc + 80) = v393;
                }
                v396 = (id *)(v369 + 88);
                v397 = v369[96];
                if (v397 == 255)
                {
                  v399 = *v396;
                  *((_BYTE *)__dstc + 96) = v369[96];
                  __dstc[11] = v399;
                }
                else
                {
                  v398 = *v396;
                  sub_3D47C(*v396, v397);
                  __dstc[11] = v398;
                  v369 = v366;
                  *((_BYTE *)__dstc + 96) = v397;
                }
                v400 = (id *)(v369 + 104);
                v401 = v369[112];
                if (v401 == 255)
                {
                  v403 = *v400;
                  *((_BYTE *)__dstc + 112) = v369[112];
                  __dstc[13] = v403;
                }
                else
                {
                  v402 = *v400;
                  sub_3D47C(*v400, v401);
                  __dstc[13] = v402;
                  v369 = v366;
                  *((_BYTE *)__dstc + 112) = v401;
                }
                v404 = (id *)(v369 + 120);
                v405 = v369[128];
                if (v405 == 255)
                {
                  v407 = *v404;
                  *((_BYTE *)__dstc + 128) = v369[128];
                  __dstc[15] = v407;
                }
                else
                {
                  v406 = *v404;
                  sub_3D47C(*v404, v405);
                  __dstc[15] = v406;
                  v369 = v366;
                  *((_BYTE *)__dstc + 128) = v405;
                }
                *((_BYTE *)__dstc + 129) = v369[129];
                v408 = v379[11];
                v589 = (char *)__dstc + v408;
                v409 = v369;
                v410 = &v369[v408];
                v411 = type metadata accessor for ArtworkCrop(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v411 - 8) + 16))(v589, v410, v411);
                v412 = v379[12];
                v413 = (_QWORD *)((char *)__dstc + v412);
                v414 = (_QWORD *)((char *)v409 + v412);
                *v413 = *v414;
                v413[1] = v414[1];
                *((_BYTE *)__dstc + v379[13]) = *((_BYTE *)v409 + v379[13]);
                *((_BYTE *)__dstc + v379[14]) = *((_BYTE *)v409 + v379[14]);
                *((_BYTE *)__dstc + v379[15]) = *((_BYTE *)v409 + v379[15]);
                v415 = v379[16];
                v416 = (_QWORD *)((char *)__dstc + v415);
                v417 = (_QWORD *)((char *)v409 + v415);
                *v416 = *v417;
                v416[1] = v417[1];
                v418 = v379;
                v419 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v561 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v419(__dstc, 0, 1, v418);
              }
              v372 = v602;
              *(_QWORD *)((char *)v359 + *(int *)(v581 + 32)) = *(_QWORD *)&__srcb[*(int *)(v581 + 32)];
              swift_bridgeObjectRetain();
              v378 = 1;
              v8 = v595;
            }
            else
            {
              *v359 = *(_QWORD *)v360;
              swift_retain();
              v378 = 0;
              v372 = v602;
            }
            swift_storeEnumTagMultiPayload((char *)v359, v361, v378);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v577[7])((char *)v359, 0, 1, v361);
            goto LABEL_241;
          }
        }
        else
        {
          if (!v364)
          {
            v372 = v602;
            if (v5 != v4)
            {
              sub_145D8((uint64_t)v359, type metadata accessor for Header.PrimaryAction);
              if (swift_getEnumCaseMultiPayload(v360, v361) == 1)
              {
                v596 = v8;
                *v359 = *(_QWORD *)v360;
                v359[1] = *((_QWORD *)v360 + 1);
                v359[2] = *((_QWORD *)v360 + 2);
                v359[3] = *((_QWORD *)v360 + 3);
                v359[4] = *((_QWORD *)v360 + 4);
                v359[5] = *((_QWORD *)v360 + 5);
                v373 = *(int *)(v581 + 28);
                v588 = (_QWORD *)((char *)v359 + v373);
                v374 = &v360[v373];
                v375 = type metadata accessor for ArtworkModel(0);
                __dstd = *(_QWORD **)(v375 - 8);
                v572 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstd[6];
                swift_bridgeObjectRetain();
                v376 = v374;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v572(v374, 1, v375))
                {
                  v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
                  memcpy(v588, v374, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
                  v372 = v602;
                }
                else
                {
                  v573 = (int *)v375;
                  *v588 = *(_QWORD *)v374;
                  v588[1] = *((_QWORD *)v374 + 1);
                  v383 = v374[32];
                  swift_bridgeObjectRetain();
                  v578 = v376;
                  if (v383 == 255)
                  {
                    v386 = v588;
                    v530 = *((_OWORD *)v376 + 1);
                    *((_BYTE *)v588 + 32) = v376[32];
                    *((_OWORD *)v588 + 1) = v530;
                  }
                  else
                  {
                    v384 = *((_QWORD *)v376 + 2);
                    v385 = *((_QWORD *)v376 + 3);
                    sub_3D464(v384, *((_QWORD *)v578 + 3), v383);
                    v588[2] = v384;
                    v588[3] = v385;
                    v376 = v578;
                    v386 = v588;
                    *((_BYTE *)v588 + 32) = v383;
                  }
                  v372 = v602;
                  v386[5] = *((_QWORD *)v376 + 5);
                  v386[6] = *((_QWORD *)v376 + 6);
                  v531 = (id *)(v376 + 56);
                  v532 = v376[64];
                  if (v532 == 255)
                  {
                    v534 = *v531;
                    *((_BYTE *)v386 + 64) = v376[64];
                    v386[7] = v534;
                  }
                  else
                  {
                    v533 = *v531;
                    sub_3D47C(*v531, v532);
                    v588[7] = v533;
                    v376 = v578;
                    v386 = v588;
                    *((_BYTE *)v588 + 64) = v532;
                  }
                  v535 = (id *)(v376 + 72);
                  v536 = v376[80];
                  if (v536 == 255)
                  {
                    v538 = *v535;
                    *((_BYTE *)v386 + 80) = v376[80];
                    v386[9] = v538;
                  }
                  else
                  {
                    v537 = *v535;
                    sub_3D47C(*v535, v536);
                    v588[9] = v537;
                    v376 = v578;
                    v386 = v588;
                    *((_BYTE *)v588 + 80) = v536;
                  }
                  v539 = (id *)(v376 + 88);
                  v540 = v376[96];
                  if (v540 == 255)
                  {
                    v542 = *v539;
                    *((_BYTE *)v386 + 96) = v376[96];
                    v386[11] = v542;
                  }
                  else
                  {
                    v541 = *v539;
                    sub_3D47C(*v539, v540);
                    v588[11] = v541;
                    v376 = v578;
                    v386 = v588;
                    *((_BYTE *)v588 + 96) = v540;
                  }
                  v543 = (id *)(v376 + 104);
                  v544 = v376[112];
                  if (v544 == 255)
                  {
                    v546 = *v543;
                    *((_BYTE *)v386 + 112) = v376[112];
                    v386[13] = v546;
                  }
                  else
                  {
                    v545 = *v543;
                    sub_3D47C(*v543, v544);
                    v588[13] = v545;
                    v376 = v578;
                    v386 = v588;
                    *((_BYTE *)v588 + 112) = v544;
                  }
                  v547 = (id *)(v376 + 120);
                  v548 = v376[128];
                  if (v548 == 255)
                  {
                    v550 = *v547;
                    *((_BYTE *)v386 + 128) = v376[128];
                    v386[15] = v550;
                  }
                  else
                  {
                    v549 = *v547;
                    sub_3D47C(*v547, v548);
                    v588[15] = v549;
                    v376 = v578;
                    v386 = v588;
                    *((_BYTE *)v588 + 128) = v548;
                  }
                  *((_BYTE *)v386 + 129) = v376[129];
                  v551 = *(int *)(v375 + 44);
                  v590 = (char *)v386 + v551;
                  v552 = v386;
                  v579 = &v376[v551];
                  v553 = type metadata accessor for ArtworkCrop(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v553 - 8) + 16))(v590, v579, v553);
                  v554 = v573[12];
                  v555 = (_QWORD *)((char *)v552 + v554);
                  v556 = &v376[v554];
                  *v555 = *(_QWORD *)v556;
                  v555[1] = *((_QWORD *)v556 + 1);
                  *((_BYTE *)v552 + v573[13]) = v376[v573[13]];
                  *((_BYTE *)v552 + v573[14]) = v376[v573[14]];
                  *((_BYTE *)v552 + v573[15]) = v376[v573[15]];
                  v557 = v573[16];
                  v558 = (_QWORD *)((char *)v552 + v557);
                  v559 = &v376[v557];
                  *v558 = *(_QWORD *)v559;
                  v558[1] = *((_QWORD *)v559 + 1);
                  v591 = (void *)__dstd[7];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v591)(v552, 0, 1, v573);
                }
                v8 = v596;
                *(_QWORD *)((char *)v359 + *(int *)(v581 + 32)) = *(_QWORD *)&__srcb[*(int *)(v581 + 32)];
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload((char *)v359, v361, 1);
              }
              else
              {
                *v359 = *(_QWORD *)v360;
                swift_retain();
                swift_storeEnumTagMultiPayload((char *)v359, v361, 0);
              }
            }
            goto LABEL_241;
          }
          sub_145D8((uint64_t)v359, type metadata accessor for Header.PrimaryAction);
        }
        v371 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
        memcpy(v359, v360, *(_QWORD *)(*(_QWORD *)(v371 - 8) + 64));
        v372 = v602;
LABEL_241:
        *(_QWORD *)(v7 + v372[11]) = *(_QWORD *)&v8[v372[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v420 = v372[12];
        v421 = v7 + v420;
        v422 = &v8[v420];
        v423 = (int *)type metadata accessor for ArtworkModel(0);
        v424 = *((_QWORD *)v423 - 1);
        v425 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v424 + 48);
        v426 = v425(v421, 1, v423);
        v427 = v425((uint64_t)v422, 1, v423);
        if (v426)
        {
          if (!v427)
          {
            *(_QWORD *)v421 = *(_QWORD *)v422;
            *(_QWORD *)(v421 + 8) = *((_QWORD *)v422 + 1);
            v428 = v422[32];
            swift_bridgeObjectRetain();
            if (v428 == 255)
            {
              v439 = *((_OWORD *)v422 + 1);
              *(_BYTE *)(v421 + 32) = v422[32];
              *(_OWORD *)(v421 + 16) = v439;
            }
            else
            {
              v429 = *((_QWORD *)v422 + 2);
              v430 = *((_QWORD *)v422 + 3);
              sub_3D464(v429, v430, v428);
              *(_QWORD *)(v421 + 16) = v429;
              *(_QWORD *)(v421 + 24) = v430;
              *(_BYTE *)(v421 + 32) = v428;
            }
            *(_QWORD *)(v421 + 40) = *((_QWORD *)v422 + 5);
            *(_QWORD *)(v421 + 48) = *((_QWORD *)v422 + 6);
            v440 = (id *)(v422 + 56);
            v441 = v422[64];
            if (v441 == 255)
            {
              v443 = *v440;
              *(_BYTE *)(v421 + 64) = v422[64];
              *(_QWORD *)(v421 + 56) = v443;
            }
            else
            {
              v442 = *v440;
              sub_3D47C(*v440, v422[64]);
              *(_QWORD *)(v421 + 56) = v442;
              *(_BYTE *)(v421 + 64) = v441;
            }
            v444 = (id *)(v422 + 72);
            v445 = v422[80];
            if (v445 == 255)
            {
              v447 = *v444;
              *(_BYTE *)(v421 + 80) = v422[80];
              *(_QWORD *)(v421 + 72) = v447;
            }
            else
            {
              v446 = *v444;
              sub_3D47C(*v444, v422[80]);
              *(_QWORD *)(v421 + 72) = v446;
              *(_BYTE *)(v421 + 80) = v445;
            }
            v448 = (id *)(v422 + 88);
            v449 = v422[96];
            if (v449 == 255)
            {
              v451 = *v448;
              *(_BYTE *)(v421 + 96) = v422[96];
              *(_QWORD *)(v421 + 88) = v451;
            }
            else
            {
              v450 = *v448;
              sub_3D47C(*v448, v422[96]);
              *(_QWORD *)(v421 + 88) = v450;
              *(_BYTE *)(v421 + 96) = v449;
            }
            v452 = (id *)(v422 + 104);
            v453 = v422[112];
            if (v453 == 255)
            {
              v455 = *v452;
              *(_BYTE *)(v421 + 112) = v422[112];
              *(_QWORD *)(v421 + 104) = v455;
            }
            else
            {
              v454 = *v452;
              sub_3D47C(*v452, v422[112]);
              *(_QWORD *)(v421 + 104) = v454;
              *(_BYTE *)(v421 + 112) = v453;
            }
            v456 = (id *)(v422 + 120);
            v457 = v422[128];
            if (v457 == 255)
            {
              v459 = *v456;
              *(_BYTE *)(v421 + 128) = v422[128];
              *(_QWORD *)(v421 + 120) = v459;
            }
            else
            {
              v458 = *v456;
              sub_3D47C(*v456, v422[128]);
              *(_QWORD *)(v421 + 120) = v458;
              *(_BYTE *)(v421 + 128) = v457;
            }
            *(_BYTE *)(v421 + 129) = v422[129];
            v460 = v423[11];
            v461 = v421 + v460;
            v462 = (unsigned __int8 *)&v422[v460];
            v463 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v463 - 8) + 16))(v461, v462, v463);
            v464 = v423[12];
            v465 = (_QWORD *)(v421 + v464);
            v466 = (unsigned __int8 *)&v422[v464];
            *v465 = *(_QWORD *)v466;
            v465[1] = *((_QWORD *)v466 + 1);
            *(_BYTE *)(v421 + v423[13]) = v422[v423[13]];
            *(_BYTE *)(v421 + v423[14]) = v422[v423[14]];
            *(_BYTE *)(v421 + v423[15]) = v422[v423[15]];
            v467 = v423[16];
            v468 = (_QWORD *)(v421 + v467);
            v469 = (unsigned __int8 *)&v422[v467];
            *v468 = *(_QWORD *)v469;
            v468[1] = *((_QWORD *)v469 + 1);
            v470 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v424 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v470(v421, 0, 1, v423);
            goto LABEL_96;
          }
        }
        else
        {
          if (!v427)
          {
            *(_QWORD *)v421 = *(_QWORD *)v422;
            *(_QWORD *)(v421 + 8) = *((_QWORD *)v422 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v431 = (__int128 *)(v421 + 16);
            v432 = (__int128 *)(v422 + 16);
            v433 = v422[32];
            if (*(unsigned __int8 *)(v421 + 32) == 255)
            {
              if (v433 == 255)
              {
                v474 = *v432;
                *(_BYTE *)(v421 + 32) = v422[32];
                *v431 = v474;
              }
              else
              {
                v471 = *((_QWORD *)v422 + 2);
                v472 = *((_QWORD *)v422 + 3);
                sub_3D464(v471, v472, v422[32]);
                *(_QWORD *)(v421 + 16) = v471;
                *(_QWORD *)(v421 + 24) = v472;
                *(_BYTE *)(v421 + 32) = v433;
              }
            }
            else if (v433 == 255)
            {
              sub_3E43C(v421 + 16);
              v473 = v422[32];
              *v431 = *v432;
              *(_BYTE *)(v421 + 32) = v473;
            }
            else
            {
              v434 = *((_QWORD *)v422 + 2);
              v435 = *((_QWORD *)v422 + 3);
              sub_3D464(v434, v435, v422[32]);
              v436 = *(_QWORD *)(v421 + 16);
              v437 = *(_QWORD *)(v421 + 24);
              *(_QWORD *)(v421 + 16) = v434;
              *(_QWORD *)(v421 + 24) = v435;
              v438 = *(_BYTE *)(v421 + 32);
              *(_BYTE *)(v421 + 32) = v433;
              sub_3B5BC(v436, v437, v438);
            }
            *(_QWORD *)(v421 + 40) = *((_QWORD *)v422 + 5);
            *(_QWORD *)(v421 + 48) = *((_QWORD *)v422 + 6);
            v475 = (id *)(v421 + 56);
            v476 = (id *)(v422 + 56);
            v477 = v422[64];
            if (*(unsigned __int8 *)(v421 + 64) == 255)
            {
              if (v477 == 255)
              {
                v483 = *v476;
                *(_BYTE *)(v421 + 64) = v422[64];
                *v475 = v483;
              }
              else
              {
                v481 = *v476;
                sub_3D47C(*v476, v422[64]);
                *(_QWORD *)(v421 + 56) = v481;
                *(_BYTE *)(v421 + 64) = v477;
              }
            }
            else if (v477 == 255)
            {
              sub_3E470(v421 + 56);
              v482 = v422[64];
              *v475 = *v476;
              *(_BYTE *)(v421 + 64) = v482;
            }
            else
            {
              v478 = *v476;
              sub_3D47C(*v476, v422[64]);
              v479 = *(void **)(v421 + 56);
              *(_QWORD *)(v421 + 56) = v478;
              v480 = *(_BYTE *)(v421 + 64);
              *(_BYTE *)(v421 + 64) = v477;
              sub_3D624(v479, v480);
            }
            v484 = (id *)(v421 + 72);
            v485 = (id *)(v422 + 72);
            v486 = v422[80];
            if (*(unsigned __int8 *)(v421 + 80) == 255)
            {
              if (v486 == 255)
              {
                v492 = *v485;
                *(_BYTE *)(v421 + 80) = v422[80];
                *v484 = v492;
              }
              else
              {
                v490 = *v485;
                sub_3D47C(*v485, v422[80]);
                *(_QWORD *)(v421 + 72) = v490;
                *(_BYTE *)(v421 + 80) = v486;
              }
            }
            else if (v486 == 255)
            {
              sub_3E470(v421 + 72);
              v491 = v422[80];
              *v484 = *v485;
              *(_BYTE *)(v421 + 80) = v491;
            }
            else
            {
              v487 = *v485;
              sub_3D47C(*v485, v422[80]);
              v488 = *(void **)(v421 + 72);
              *(_QWORD *)(v421 + 72) = v487;
              v489 = *(_BYTE *)(v421 + 80);
              *(_BYTE *)(v421 + 80) = v486;
              sub_3D624(v488, v489);
            }
            v493 = (id *)(v421 + 88);
            v494 = (id *)(v422 + 88);
            v495 = v422[96];
            if (*(unsigned __int8 *)(v421 + 96) == 255)
            {
              if (v495 == 255)
              {
                v501 = *v494;
                *(_BYTE *)(v421 + 96) = v422[96];
                *v493 = v501;
              }
              else
              {
                v499 = *v494;
                sub_3D47C(*v494, v422[96]);
                *(_QWORD *)(v421 + 88) = v499;
                *(_BYTE *)(v421 + 96) = v495;
              }
            }
            else if (v495 == 255)
            {
              sub_3E470(v421 + 88);
              v500 = v422[96];
              *v493 = *v494;
              *(_BYTE *)(v421 + 96) = v500;
            }
            else
            {
              v496 = *v494;
              sub_3D47C(*v494, v422[96]);
              v497 = *(void **)(v421 + 88);
              *(_QWORD *)(v421 + 88) = v496;
              v498 = *(_BYTE *)(v421 + 96);
              *(_BYTE *)(v421 + 96) = v495;
              sub_3D624(v497, v498);
            }
            v502 = (id *)(v421 + 104);
            v503 = (id *)(v422 + 104);
            v504 = v422[112];
            if (*(unsigned __int8 *)(v421 + 112) == 255)
            {
              if (v504 == 255)
              {
                v510 = *v503;
                *(_BYTE *)(v421 + 112) = v422[112];
                *v502 = v510;
              }
              else
              {
                v508 = *v503;
                sub_3D47C(*v503, v422[112]);
                *(_QWORD *)(v421 + 104) = v508;
                *(_BYTE *)(v421 + 112) = v504;
              }
            }
            else if (v504 == 255)
            {
              sub_3E470(v421 + 104);
              v509 = v422[112];
              *v502 = *v503;
              *(_BYTE *)(v421 + 112) = v509;
            }
            else
            {
              v505 = *v503;
              sub_3D47C(*v503, v422[112]);
              v506 = *(void **)(v421 + 104);
              *(_QWORD *)(v421 + 104) = v505;
              v507 = *(_BYTE *)(v421 + 112);
              *(_BYTE *)(v421 + 112) = v504;
              sub_3D624(v506, v507);
            }
            v511 = (id *)(v421 + 120);
            v512 = (id *)(v422 + 120);
            v513 = v422[128];
            if (*(unsigned __int8 *)(v421 + 128) == 255)
            {
              if (v513 == 255)
              {
                v519 = *v512;
                *(_BYTE *)(v421 + 128) = v422[128];
                *v511 = v519;
              }
              else
              {
                v517 = *v512;
                sub_3D47C(*v512, v422[128]);
                *(_QWORD *)(v421 + 120) = v517;
                *(_BYTE *)(v421 + 128) = v513;
              }
            }
            else if (v513 == 255)
            {
              sub_3E470(v421 + 120);
              v518 = v422[128];
              *v511 = *v512;
              *(_BYTE *)(v421 + 128) = v518;
            }
            else
            {
              v514 = *v512;
              sub_3D47C(*v512, v422[128]);
              v515 = *(void **)(v421 + 120);
              *(_QWORD *)(v421 + 120) = v514;
              v516 = *(_BYTE *)(v421 + 128);
              *(_BYTE *)(v421 + 128) = v513;
              sub_3D624(v515, v516);
            }
            *(_BYTE *)(v421 + 129) = v422[129];
            v520 = v423[11];
            v521 = v421 + v520;
            v522 = (unsigned __int8 *)&v422[v520];
            v523 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v523 - 8) + 24))(v521, v522, v523);
            v524 = v423[12];
            v525 = (_QWORD *)(v421 + v524);
            v526 = (unsigned __int8 *)&v422[v524];
            *v525 = *(_QWORD *)v526;
            v525[1] = *((_QWORD *)v526 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v421 + v423[13]) = v422[v423[13]];
            *(_BYTE *)(v421 + v423[14]) = v422[v423[14]];
            *(_BYTE *)(v421 + v423[15]) = v422[v423[15]];
            v527 = v423[16];
            v528 = (_QWORD *)(v421 + v527);
            v529 = (unsigned __int8 *)&v422[v527];
            *v528 = *(_QWORD *)v529;
            v528[1] = *((_QWORD *)v529 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_96;
          }
          sub_145D8(v421, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        }
        v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70) - 8) + 64);
        v23 = (void *)v421;
        v24 = v422;
LABEL_8:
        memcpy(v23, v24, v22);
        goto LABEL_96;
      }
LABEL_17:
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      v39 = v602;
      goto LABEL_204;
    }
    if (v31)
    {
      sub_145D8((uint64_t)v26, type metadata accessor for ActionMenu);
      goto LABEL_17;
    }
    v599 = v7;
    v587 = a3;
    *v26 = *(_QWORD *)v27;
    v26[1] = *((_QWORD *)v27 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26[2] = *((_QWORD *)v27 + 2);
    v26[3] = *((_QWORD *)v27 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26[4] = *((_QWORD *)v27 + 4);
    v26[5] = *((_QWORD *)v27 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v55 = *(int *)(v28 + 28);
    v569 = v26;
    v56 = (char *)v26 + v55;
    v57 = &v27[v55];
    v58 = (int *)type metadata accessor for ArtworkModel(0);
    v59 = *((_QWORD *)v58 - 1);
    v60 = *(uint64_t (**)(char *, uint64_t, int *))(v59 + 48);
    v61 = v60(v56, 1, v58);
    v62 = v60(v57, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        v594 = v8;
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
        v63 = v57[32];
        swift_bridgeObjectRetain();
        v39 = v602;
        if (v63 == 255)
        {
          v264 = *((_OWORD *)v57 + 1);
          v56[32] = v57[32];
          *((_OWORD *)v56 + 1) = v264;
        }
        else
        {
          v64 = *((_QWORD *)v57 + 2);
          v65 = *((_QWORD *)v57 + 3);
          sub_3D464(v64, v65, v63);
          *((_QWORD *)v56 + 2) = v64;
          *((_QWORD *)v56 + 3) = v65;
          v56[32] = v63;
        }
        v265 = v57;
        *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
        *((_QWORD *)v56 + 6) = *((_QWORD *)v57 + 6);
        v266 = (id *)(v57 + 56);
        v267 = v57[64];
        if (v267 == 255)
        {
          v269 = *v266;
          v56[64] = v57[64];
          *((_QWORD *)v56 + 7) = v269;
        }
        else
        {
          v268 = *v266;
          sub_3D47C(*v266, v57[64]);
          v265 = v57;
          *((_QWORD *)v56 + 7) = v268;
          v56[64] = v267;
        }
        v28 = v581;
        v270 = (id *)(v265 + 72);
        v271 = v265[80];
        if (v271 == 255)
        {
          v273 = *v270;
          v56[80] = v265[80];
          *((_QWORD *)v56 + 9) = v273;
        }
        else
        {
          v272 = *v270;
          sub_3D47C(*v270, v265[80]);
          v265 = v57;
          *((_QWORD *)v56 + 9) = v272;
          v56[80] = v271;
        }
        v274 = (id *)(v265 + 88);
        v275 = v265[96];
        if (v275 == 255)
        {
          v277 = *v274;
          v56[96] = v265[96];
          *((_QWORD *)v56 + 11) = v277;
        }
        else
        {
          v276 = *v274;
          sub_3D47C(*v274, v265[96]);
          v265 = v57;
          *((_QWORD *)v56 + 11) = v276;
          v56[96] = v275;
        }
        v278 = (id *)(v265 + 104);
        v279 = v265[112];
        if (v279 == 255)
        {
          v281 = *v278;
          v56[112] = v265[112];
          *((_QWORD *)v56 + 13) = v281;
        }
        else
        {
          v280 = *v278;
          sub_3D47C(*v278, v265[112]);
          v265 = v57;
          *((_QWORD *)v56 + 13) = v280;
          v56[112] = v279;
        }
        v282 = (id *)(v265 + 120);
        v283 = v265[128];
        if (v283 == 255)
        {
          v285 = *v282;
          v56[128] = v265[128];
          *((_QWORD *)v56 + 15) = v285;
        }
        else
        {
          v284 = *v282;
          sub_3D47C(*v282, v265[128]);
          v265 = v57;
          *((_QWORD *)v56 + 15) = v284;
          v56[128] = v283;
        }
        v56[129] = v265[129];
        v286 = v58[11];
        v287 = &v56[v286];
        v288 = &v265[v286];
        v289 = v265;
        v290 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v287, v288, v290);
        v291 = v58[12];
        v292 = &v56[v291];
        v293 = &v289[v291];
        *(_QWORD *)v292 = *(_QWORD *)v293;
        *((_QWORD *)v292 + 1) = *((_QWORD *)v293 + 1);
        v56[v58[13]] = v289[v58[13]];
        v56[v58[14]] = v289[v58[14]];
        v56[v58[15]] = v289[v58[15]];
        v294 = v58[16];
        v295 = &v56[v294];
        v296 = &v289[v294];
        *(_QWORD *)v295 = *(_QWORD *)v296;
        *((_QWORD *)v295 + 1) = *((_QWORD *)v296 + 1);
        v297 = *(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v297(v56, 0, 1, v58);
LABEL_202:
        a3 = v587;
        v8 = v594;
        v7 = v599;
        goto LABEL_203;
      }
    }
    else
    {
      if (!v62)
      {
        v594 = v8;
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v255 = v57;
        v256 = (__int128 *)(v56 + 16);
        v257 = (__int128 *)(v57 + 16);
        v258 = v57[32];
        v39 = v602;
        if (v56[32] == 255)
        {
          if (v258 == 255)
          {
            v301 = *v257;
            v56[32] = v57[32];
            *v256 = v301;
          }
          else
          {
            v298 = *((_QWORD *)v57 + 2);
            v299 = *((_QWORD *)v57 + 3);
            sub_3D464(v298, v299, v57[32]);
            v255 = v57;
            *((_QWORD *)v56 + 2) = v298;
            *((_QWORD *)v56 + 3) = v299;
            v56[32] = v258;
          }
        }
        else if (v258 == 255)
        {
          sub_3E43C((uint64_t)(v56 + 16));
          v255 = v57;
          v300 = v57[32];
          *v256 = *v257;
          v56[32] = v300;
        }
        else
        {
          v259 = *((_QWORD *)v57 + 2);
          v260 = *((_QWORD *)v57 + 3);
          sub_3D464(v259, v260, v57[32]);
          v261 = *((_QWORD *)v56 + 2);
          v262 = *((_QWORD *)v56 + 3);
          *((_QWORD *)v56 + 2) = v259;
          *((_QWORD *)v56 + 3) = v260;
          v263 = v56[32];
          v56[32] = v258;
          sub_3B5BC(v261, v262, v263);
          v255 = v57;
        }
        *((_QWORD *)v56 + 5) = *((_QWORD *)v255 + 5);
        *((_QWORD *)v56 + 6) = *((_QWORD *)v255 + 6);
        v302 = v56 + 56;
        v303 = (unsigned __int8 *)(v255 + 56);
        v304 = v255[64];
        if (v56[64] == 255)
        {
          if (v304 == 255)
          {
            v310 = *(id *)v303;
            v56[64] = v255[64];
            *v302 = v310;
          }
          else
          {
            v308 = *(id *)v303;
            sub_3D47C(*(id *)v303, v255[64]);
            v255 = v57;
            *((_QWORD *)v56 + 7) = v308;
            v56[64] = v304;
          }
        }
        else
        {
          if (v304 == 255)
          {
            sub_3E470((uint64_t)(v56 + 56));
            v309 = v303[8];
            *v302 = *(_QWORD *)v303;
            v56[64] = v309;
          }
          else
          {
            v305 = *(id *)v303;
            sub_3D47C(*(id *)v303, v255[64]);
            v306 = (void *)*((_QWORD *)v56 + 7);
            *((_QWORD *)v56 + 7) = v305;
            v307 = v56[64];
            v56[64] = v304;
            sub_3D624(v306, v307);
          }
          v255 = v57;
        }
        v311 = v56 + 72;
        v312 = (unsigned __int8 *)(v255 + 72);
        v313 = v255[80];
        if (v56[80] == 255)
        {
          if (v313 == 255)
          {
            v319 = *(id *)v312;
            v56[80] = v255[80];
            *v311 = v319;
          }
          else
          {
            v317 = *(id *)v312;
            sub_3D47C(*(id *)v312, v255[80]);
            v255 = v57;
            *((_QWORD *)v56 + 9) = v317;
            v56[80] = v313;
          }
        }
        else
        {
          if (v313 == 255)
          {
            sub_3E470((uint64_t)(v56 + 72));
            v318 = v312[8];
            *v311 = *(_QWORD *)v312;
            v56[80] = v318;
          }
          else
          {
            v314 = *(id *)v312;
            sub_3D47C(*(id *)v312, v255[80]);
            v315 = (void *)*((_QWORD *)v56 + 9);
            *((_QWORD *)v56 + 9) = v314;
            v316 = v56[80];
            v56[80] = v313;
            sub_3D624(v315, v316);
          }
          v255 = v57;
        }
        v320 = v56 + 88;
        v321 = (unsigned __int8 *)(v255 + 88);
        v322 = v255[96];
        if (v56[96] == 255)
        {
          if (v322 == 255)
          {
            v328 = *(id *)v321;
            v56[96] = v255[96];
            *v320 = v328;
          }
          else
          {
            v326 = *(id *)v321;
            sub_3D47C(*(id *)v321, v255[96]);
            v255 = v57;
            *((_QWORD *)v56 + 11) = v326;
            v56[96] = v322;
          }
        }
        else
        {
          if (v322 == 255)
          {
            sub_3E470((uint64_t)(v56 + 88));
            v327 = v321[8];
            *v320 = *(_QWORD *)v321;
            v56[96] = v327;
          }
          else
          {
            v323 = *(id *)v321;
            sub_3D47C(*(id *)v321, v255[96]);
            v324 = (void *)*((_QWORD *)v56 + 11);
            *((_QWORD *)v56 + 11) = v323;
            v325 = v56[96];
            v56[96] = v322;
            sub_3D624(v324, v325);
          }
          v255 = v57;
        }
        v329 = v56 + 104;
        v330 = (unsigned __int8 *)(v255 + 104);
        v331 = v255[112];
        if (v56[112] == 255)
        {
          if (v331 == 255)
          {
            v337 = *(id *)v330;
            v56[112] = v255[112];
            *v329 = v337;
          }
          else
          {
            v335 = *(id *)v330;
            sub_3D47C(*(id *)v330, v255[112]);
            v255 = v57;
            *((_QWORD *)v56 + 13) = v335;
            v56[112] = v331;
          }
        }
        else
        {
          if (v331 == 255)
          {
            sub_3E470((uint64_t)(v56 + 104));
            v336 = v330[8];
            *v329 = *(_QWORD *)v330;
            v56[112] = v336;
          }
          else
          {
            v332 = *(id *)v330;
            sub_3D47C(*(id *)v330, v255[112]);
            v333 = (void *)*((_QWORD *)v56 + 13);
            *((_QWORD *)v56 + 13) = v332;
            v334 = v56[112];
            v56[112] = v331;
            sub_3D624(v333, v334);
          }
          v255 = v57;
        }
        v338 = v56 + 120;
        v339 = (unsigned __int8 *)(v255 + 120);
        v340 = v255[128];
        if (v56[128] == 255)
        {
          if (v340 == 255)
          {
            v346 = *(id *)v339;
            v56[128] = v255[128];
            *v338 = v346;
          }
          else
          {
            v344 = *(id *)v339;
            sub_3D47C(*(id *)v339, v255[128]);
            v255 = v57;
            *((_QWORD *)v56 + 15) = v344;
            v56[128] = v340;
          }
          v28 = v581;
        }
        else
        {
          if (v340 == 255)
          {
            sub_3E470((uint64_t)(v56 + 120));
            v345 = v339[8];
            *v338 = *(_QWORD *)v339;
            v56[128] = v345;
          }
          else
          {
            v341 = *(id *)v339;
            sub_3D47C(*(id *)v339, v255[128]);
            v342 = (void *)*((_QWORD *)v56 + 15);
            *((_QWORD *)v56 + 15) = v341;
            v343 = v56[128];
            v56[128] = v340;
            sub_3D624(v342, v343);
          }
          v255 = v57;
          v28 = v581;
        }
        v56[129] = v255[129];
        v347 = v58[11];
        v348 = &v56[v347];
        v349 = (unsigned __int8 *)&v255[v347];
        v350 = v255;
        v351 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v351 - 8) + 24))(v348, v349, v351);
        v352 = v58[12];
        v353 = &v56[v352];
        v354 = (unsigned __int8 *)&v350[v352];
        *(_QWORD *)v353 = *(_QWORD *)v354;
        *((_QWORD *)v353 + 1) = *((_QWORD *)v354 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v56[v58[13]] = v350[v58[13]];
        v56[v58[14]] = v350[v58[14]];
        v56[v58[15]] = v350[v58[15]];
        v355 = v58[16];
        v356 = &v56[v355];
        v357 = (unsigned __int8 *)&v350[v355];
        *(_QWORD *)v356 = *(_QWORD *)v357;
        *((_QWORD *)v356 + 1) = *((_QWORD *)v357 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_202;
      }
      sub_145D8((uint64_t)v56, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    a3 = v587;
    v7 = v599;
    v39 = v602;
LABEL_203:
    *(_QWORD *)((char *)v569 + *(int *)(v28 + 32)) = *(_QWORD *)&__srca[*(int *)(v28 + 32)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_204;
  }
  if (v13)
  {
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38) - 8) + 64);
    v23 = (void *)v7;
    v24 = v8;
    goto LABEL_8;
  }
  v574 = v5;
  v580 = v10;
  __src = v4;
  v585 = a3;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
  *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
  *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_BYTE *)(v7 + 48) = v8[48];
  *(_BYTE *)(v7 + 49) = v8[49];
  v14 = v9[9];
  v15 = (_QWORD *)(v7 + v14);
  v592 = v8;
  v16 = &v8[v14];
  v17 = type metadata accessor for ActionMenu(0);
  v18 = *(_QWORD **)(v17 - 8);
  v19 = (unsigned int (*)(char *, uint64_t, uint64_t))v18[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v597 = v7;
  v601 = v9;
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v21 = v592;
    v5 = v574;
  }
  else
  {
    __dst = v18;
    v568 = v17;
    *v15 = *(_QWORD *)v16;
    v15[1] = *((_QWORD *)v16 + 1);
    v15[2] = *((_QWORD *)v16 + 2);
    v15[3] = *((_QWORD *)v16 + 3);
    v15[4] = *((_QWORD *)v16 + 4);
    v15[5] = *((_QWORD *)v16 + 5);
    v41 = *(int *)(v17 + 28);
    v42 = (_QWORD *)((char *)v15 + v41);
    v43 = &v16[v41];
    v44 = (int *)type metadata accessor for ArtworkModel(0);
    v45 = *((_QWORD *)v44 - 1);
    v46 = *(uint64_t (**)(char *, uint64_t, int *))(v45 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = v46(v43, 1, v44);
    v48 = v15;
    if (v47)
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v50 = __dst;
      v5 = v574;
    }
    else
    {
      *v42 = *(_QWORD *)v43;
      v42[1] = *((_QWORD *)v43 + 1);
      v52 = v43[32];
      swift_bridgeObjectRetain();
      v5 = v574;
      if (v52 == 255)
      {
        v70 = *((_OWORD *)v43 + 1);
        *((_BYTE *)v42 + 32) = v43[32];
        *((_OWORD *)v42 + 1) = v70;
      }
      else
      {
        v53 = *((_QWORD *)v43 + 2);
        v54 = *((_QWORD *)v43 + 3);
        sub_3D464(v53, v54, v52);
        v42[2] = v53;
        v42[3] = v54;
        *((_BYTE *)v42 + 32) = v52;
      }
      v9 = v601;
      v42[5] = *((_QWORD *)v43 + 5);
      v42[6] = *((_QWORD *)v43 + 6);
      v71 = (id *)(v43 + 56);
      v72 = v43[64];
      if (v72 == 255)
      {
        v74 = *v71;
        *((_BYTE *)v42 + 64) = v43[64];
        v42[7] = v74;
      }
      else
      {
        v73 = *v71;
        sub_3D47C(*v71, v43[64]);
        v42[7] = v73;
        *((_BYTE *)v42 + 64) = v72;
      }
      v75 = (id *)(v43 + 72);
      v76 = v43[80];
      if (v76 == 255)
      {
        v78 = *v75;
        *((_BYTE *)v42 + 80) = v43[80];
        v42[9] = v78;
      }
      else
      {
        v77 = *v75;
        sub_3D47C(*v75, v43[80]);
        v42[9] = v77;
        *((_BYTE *)v42 + 80) = v76;
      }
      v79 = (id *)(v43 + 88);
      v80 = v43[96];
      if (v80 == 255)
      {
        v82 = *v79;
        *((_BYTE *)v42 + 96) = v43[96];
        v42[11] = v82;
      }
      else
      {
        v81 = *v79;
        sub_3D47C(*v79, v43[96]);
        v42[11] = v81;
        *((_BYTE *)v42 + 96) = v80;
      }
      v83 = (id *)(v43 + 104);
      v84 = v43[112];
      if (v84 == 255)
      {
        v86 = *v83;
        *((_BYTE *)v42 + 112) = v43[112];
        v42[13] = v86;
      }
      else
      {
        v85 = *v83;
        sub_3D47C(*v83, v43[112]);
        v42[13] = v85;
        *((_BYTE *)v42 + 112) = v84;
      }
      v87 = (id *)(v43 + 120);
      v88 = v43[128];
      if (v88 == 255)
      {
        v90 = *v87;
        *((_BYTE *)v42 + 128) = v43[128];
        v42[15] = v90;
      }
      else
      {
        v89 = *v87;
        sub_3D47C(*v87, v43[128]);
        v42[15] = v89;
        *((_BYTE *)v42 + 128) = v88;
      }
      *((_BYTE *)v42 + 129) = v43[129];
      v91 = v44[11];
      v92 = (char *)v42 + v91;
      v93 = &v43[v91];
      v94 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
      v95 = v44[12];
      v96 = (_QWORD *)((char *)v42 + v95);
      v97 = &v43[v95];
      *v96 = *(_QWORD *)v97;
      v96[1] = *((_QWORD *)v97 + 1);
      *((_BYTE *)v42 + v44[13]) = v43[v44[13]];
      *((_BYTE *)v42 + v44[14]) = v43[v44[14]];
      *((_BYTE *)v42 + v44[15]) = v43[v44[15]];
      v98 = v44[16];
      v99 = (_QWORD *)((char *)v42 + v98);
      v100 = &v43[v98];
      *v99 = *(_QWORD *)v100;
      v99[1] = *((_QWORD *)v100 + 1);
      v101 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v45 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v101(v42, 0, 1, v44);
      v50 = __dst;
    }
    v17 = v568;
    *(_QWORD *)((char *)v48 + *(int *)(v568 + 32)) = *(_QWORD *)&v16[*(int *)(v568 + 32)];
    v102 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v50[7];
    swift_bridgeObjectRetain();
    v102(v48, 0, 1, v568);
    v21 = v592;
    v7 = v597;
  }
  v103 = v9[10];
  v104 = (_QWORD *)(v7 + v103);
  v105 = &v21[v103];
  v106 = type metadata accessor for Header.PrimaryAction(0);
  v107 = *(void **)(v106 - 8);
  v4 = __src;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v107 + 6))(v105, 1, v106))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v105, v106) == 1)
    {
      v570 = v17;
      v576 = v107;
      *v104 = *(_QWORD *)v105;
      v104[1] = *((_QWORD *)v105 + 1);
      v104[2] = *((_QWORD *)v105 + 2);
      v104[3] = *((_QWORD *)v105 + 3);
      v104[4] = *((_QWORD *)v105 + 4);
      v104[5] = *((_QWORD *)v105 + 5);
      v109 = *(int *)(v17 + 28);
      __dstb = (_QWORD *)((char *)v104 + v109);
      v110 = &v105[v109];
      v111 = (int *)type metadata accessor for ArtworkModel(0);
      v112 = *((_QWORD *)v111 - 1);
      v560 = *(unsigned int (**)(char *, uint64_t, int *))(v112 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v560(v110, 1, v111))
      {
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(__dstb, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        v9 = v601;
      }
      else
      {
        *__dstb = *(_QWORD *)v110;
        __dstb[1] = *((_QWORD *)v110 + 1);
        v115 = v110[32];
        swift_bridgeObjectRetain();
        if (v115 == 255)
        {
          v119 = *((_OWORD *)v110 + 1);
          *((_BYTE *)__dstb + 32) = v110[32];
          *((_OWORD *)__dstb + 1) = v119;
        }
        else
        {
          v116 = *((_QWORD *)v110 + 2);
          v117 = *((_QWORD *)v110 + 3);
          sub_3D464(v116, v117, v115);
          __dstb[2] = v116;
          __dstb[3] = v117;
          *((_BYTE *)__dstb + 32) = v115;
        }
        v9 = v601;
        __dstb[5] = *((_QWORD *)v110 + 5);
        __dstb[6] = *((_QWORD *)v110 + 6);
        v120 = (id *)(v110 + 56);
        v121 = v110[64];
        if (v121 == 255)
        {
          v123 = *v120;
          *((_BYTE *)__dstb + 64) = v110[64];
          __dstb[7] = v123;
        }
        else
        {
          v122 = *v120;
          sub_3D47C(*v120, v110[64]);
          __dstb[7] = v122;
          *((_BYTE *)__dstb + 64) = v121;
        }
        v124 = (id *)(v110 + 72);
        v125 = v110[80];
        if (v125 == 255)
        {
          v127 = *v124;
          *((_BYTE *)__dstb + 80) = v110[80];
          __dstb[9] = v127;
        }
        else
        {
          v126 = *v124;
          sub_3D47C(*v124, v110[80]);
          __dstb[9] = v126;
          *((_BYTE *)__dstb + 80) = v125;
        }
        v128 = (id *)(v110 + 88);
        v129 = v110[96];
        if (v129 == 255)
        {
          v131 = *v128;
          *((_BYTE *)__dstb + 96) = v110[96];
          __dstb[11] = v131;
        }
        else
        {
          v130 = *v128;
          sub_3D47C(*v128, v110[96]);
          __dstb[11] = v130;
          *((_BYTE *)__dstb + 96) = v129;
        }
        v132 = (id *)(v110 + 104);
        v133 = v110[112];
        if (v133 == 255)
        {
          v135 = *v132;
          *((_BYTE *)__dstb + 112) = v110[112];
          __dstb[13] = v135;
        }
        else
        {
          v134 = *v132;
          sub_3D47C(*v132, v110[112]);
          __dstb[13] = v134;
          *((_BYTE *)__dstb + 112) = v133;
        }
        v136 = (id *)(v110 + 120);
        v137 = v110[128];
        if (v137 == 255)
        {
          v139 = *v136;
          *((_BYTE *)__dstb + 128) = v110[128];
          __dstb[15] = v139;
        }
        else
        {
          v138 = *v136;
          sub_3D47C(*v136, v110[128]);
          __dstb[15] = v138;
          *((_BYTE *)__dstb + 128) = v137;
        }
        *((_BYTE *)__dstb + 129) = v110[129];
        v140 = v111[11];
        v141 = (char *)__dstb + v140;
        v142 = &v110[v140];
        v143 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
        v144 = v111[12];
        v145 = (_QWORD *)((char *)__dstb + v144);
        v146 = &v110[v144];
        *v145 = *(_QWORD *)v146;
        v145[1] = *((_QWORD *)v146 + 1);
        *((_BYTE *)__dstb + v111[13]) = v110[v111[13]];
        *((_BYTE *)__dstb + v111[14]) = v110[v111[14]];
        *((_BYTE *)__dstb + v111[15]) = v110[v111[15]];
        v147 = v111[16];
        v148 = (_QWORD *)((char *)__dstb + v147);
        v149 = &v110[v147];
        *v148 = *(_QWORD *)v149;
        v148[1] = *((_QWORD *)v149 + 1);
        v150 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v112 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v150(__dstb, 0, 1, v111);
      }
      *(_QWORD *)((char *)v104 + *(int *)(v570 + 32)) = *(_QWORD *)&v105[*(int *)(v570 + 32)];
      swift_bridgeObjectRetain();
      v114 = 1;
      v21 = v592;
      v7 = v597;
      v4 = __src;
      v107 = v576;
    }
    else
    {
      *v104 = *(_QWORD *)v105;
      swift_retain();
      v114 = 0;
    }
    swift_storeEnumTagMultiPayload(v104, v106, v114);
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v107 + 7))(v104, 0, 1, v106);
  }
  *(_QWORD *)(v7 + v9[11]) = *(_QWORD *)&v21[v9[11]];
  v151 = v9[12];
  v152 = (_QWORD *)(v7 + v151);
  v153 = &v21[v151];
  v154 = (int *)type metadata accessor for ArtworkModel(0);
  v155 = *((_QWORD *)v154 - 1);
  v156 = *(unsigned int (**)(char *, uint64_t, int *))(v155 + 48);
  swift_bridgeObjectRetain();
  if (v156(v153, 1, v154))
  {
    v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
  }
  else
  {
    *v152 = *(_QWORD *)v153;
    v152[1] = *((_QWORD *)v153 + 1);
    v158 = v153[32];
    swift_bridgeObjectRetain();
    if (v158 == 255)
    {
      v161 = *((_OWORD *)v153 + 1);
      *((_BYTE *)v152 + 32) = v153[32];
      *((_OWORD *)v152 + 1) = v161;
    }
    else
    {
      v159 = *((_QWORD *)v153 + 2);
      v160 = *((_QWORD *)v153 + 3);
      sub_3D464(v159, v160, v158);
      v152[2] = v159;
      v152[3] = v160;
      *((_BYTE *)v152 + 32) = v158;
    }
    v152[5] = *((_QWORD *)v153 + 5);
    v152[6] = *((_QWORD *)v153 + 6);
    v162 = (id *)(v153 + 56);
    v163 = v153[64];
    if (v163 == 255)
    {
      v165 = *v162;
      *((_BYTE *)v152 + 64) = v153[64];
      v152[7] = v165;
    }
    else
    {
      v164 = *v162;
      sub_3D47C(*v162, v153[64]);
      v152[7] = v164;
      *((_BYTE *)v152 + 64) = v163;
    }
    v166 = (id *)(v153 + 72);
    v167 = v153[80];
    if (v167 == 255)
    {
      v169 = *v166;
      *((_BYTE *)v152 + 80) = v153[80];
      v152[9] = v169;
    }
    else
    {
      v168 = *v166;
      sub_3D47C(*v166, v153[80]);
      v152[9] = v168;
      *((_BYTE *)v152 + 80) = v167;
    }
    v170 = (id *)(v153 + 88);
    v171 = v153[96];
    if (v171 == 255)
    {
      v173 = *v170;
      *((_BYTE *)v152 + 96) = v153[96];
      v152[11] = v173;
    }
    else
    {
      v172 = *v170;
      sub_3D47C(*v170, v153[96]);
      v152[11] = v172;
      *((_BYTE *)v152 + 96) = v171;
    }
    v174 = (id *)(v153 + 104);
    v175 = v153[112];
    if (v175 == 255)
    {
      v177 = *v174;
      *((_BYTE *)v152 + 112) = v153[112];
      v152[13] = v177;
    }
    else
    {
      v176 = *v174;
      sub_3D47C(*v174, v153[112]);
      v152[13] = v176;
      *((_BYTE *)v152 + 112) = v175;
    }
    v178 = (id *)(v153 + 120);
    v179 = v153[128];
    if (v179 == 255)
    {
      v181 = *v178;
      *((_BYTE *)v152 + 128) = v153[128];
      v152[15] = v181;
    }
    else
    {
      v180 = *v178;
      sub_3D47C(*v178, v153[128]);
      v152[15] = v180;
      *((_BYTE *)v152 + 128) = v179;
    }
    *((_BYTE *)v152 + 129) = v153[129];
    v182 = v154[11];
    v183 = (char *)v152 + v182;
    v184 = &v153[v182];
    v185 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v183, v184, v185);
    v186 = v154[12];
    v187 = (_QWORD *)((char *)v152 + v186);
    v188 = &v153[v186];
    *v187 = *(_QWORD *)v188;
    v187[1] = *((_QWORD *)v188 + 1);
    *((_BYTE *)v152 + v154[13]) = v153[v154[13]];
    *((_BYTE *)v152 + v154[14]) = v153[v154[14]];
    *((_BYTE *)v152 + v154[15]) = v153[v154[15]];
    v189 = v154[16];
    v190 = (_QWORD *)((char *)v152 + v189);
    v191 = &v153[v189];
    *v190 = *(_QWORD *)v191;
    v190[1] = *((_QWORD *)v191 + 1);
    v192 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v155 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v192(v152, 0, 1, v154);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v580 + 56))(v597, 0, 1, v601);
  a3 = v585;
LABEL_96:
  v193 = a3[6];
  v194 = (char *)v5 + v193;
  v195 = (char *)v4 + v193;
  *v194 = *v195;
  v194[1] = v195[1];
  v196 = *(_DWORD *)(v195 + 2);
  *((_WORD *)v194 + 3) = *((_WORD *)v195 + 3);
  *(_DWORD *)(v194 + 2) = v196;
  *((_QWORD *)v194 + 1) = *((_QWORD *)v195 + 1);
  *(_QWORD *)((char *)v5 + a3[7]) = *(_QWORD *)((char *)v4 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + a3[8]) = *((_BYTE *)v4 + a3[8]);
  v197 = a3[9];
  v198 = (char *)v5 + v197;
  v199 = (char *)v4 + v197;
  v200 = type metadata accessor for URL(0);
  v201 = *(_QWORD *)(v200 - 8);
  v202 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v201 + 48);
  v203 = v202(v198, 1, v200);
  v204 = v202(v199, 1, v200);
  if (v203)
  {
    if (!v204)
    {
      (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v198, v199, v200);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v198, 0, 1, v200);
      goto LABEL_102;
    }
    goto LABEL_101;
  }
  if (v204)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v198, v200);
LABEL_101:
    v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
    goto LABEL_102;
  }
  (*(void (**)(char *, char *, uint64_t))(v201 + 24))(v198, v199, v200);
LABEL_102:
  *((_BYTE *)v5 + a3[10]) = *((_BYTE *)v4 + a3[10]);
  *((_BYTE *)v5 + a3[11]) = *((_BYTE *)v4 + a3[11]);
  v206 = a3[12];
  v207 = (char *)v5 + v206;
  v208 = (char *)v4 + v206;
  v209 = *(_QWORD *)((char *)v4 + v206 + 24);
  if (*(_QWORD *)((char *)v5 + v206 + 24))
  {
    if (v209)
    {
      __swift_assign_boxed_opaque_existential_1(v207, v208);
      goto LABEL_109;
    }
    __swift_destroy_boxed_opaque_existential_1(v207);
  }
  else if (v209)
  {
    *((_QWORD *)v207 + 3) = v209;
    *((_QWORD *)v207 + 4) = *((_QWORD *)v208 + 4);
    (**(void (***)(char *, char *))(v209 - 8))(v207, v208);
    goto LABEL_109;
  }
  v210 = *(_OWORD *)v208;
  v211 = *((_OWORD *)v208 + 1);
  *((_QWORD *)v207 + 4) = *((_QWORD *)v208 + 4);
  *(_OWORD *)v207 = v210;
  *((_OWORD *)v207 + 1) = v211;
LABEL_109:
  v212 = a3[13];
  v213 = (char *)v5 + v212;
  v214 = (char *)v4 + v212;
  v215 = type metadata accessor for ImpressionMetrics(0);
  v216 = *(_QWORD *)(v215 - 8);
  v217 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v216 + 48);
  v218 = v217(v213, 1, v215);
  v219 = v217(v214, 1, v215);
  if (!v218)
  {
    if (!v219)
    {
      (*(void (**)(char *, char *, uint64_t))(v216 + 24))(v213, v214, v215);
      return v5;
    }
    (*(void (**)(char *, uint64_t))(v216 + 8))(v213, v215);
    goto LABEL_114;
  }
  if (v219)
  {
LABEL_114:
    v220 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
    return v5;
  }
  (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v213, v214, v215);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
  return v5;
}

_OWORD *initializeWithTake for ModernShelf(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  char *v89;
  uint64_t v90;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for Header(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v90 = v10;
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v7[2] = v8[2];
    *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
    v13 = v9[9];
    v14 = (_OWORD *)((char *)v7 + v13);
    v15 = (_OWORD *)((char *)v8 + v13);
    v16 = type metadata accessor for ActionMenu(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v85 = v16;
      v87 = v17;
      v19 = v15[1];
      *v14 = *v15;
      v14[1] = v19;
      v14[2] = v15[2];
      v20 = *(int *)(v16 + 28);
      v21 = (_OWORD *)((char *)v14 + v20);
      v22 = (_OWORD *)((char *)v15 + v20);
      v23 = type metadata accessor for ArtworkModel(0);
      v81 = *(_QWORD *)(v23 - 8);
      v83 = (int *)v23;
      if ((*(unsigned int (**)(_OWORD *, uint64_t))(v81 + 48))(v22, 1))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = v22[1];
        *v21 = *v22;
        v21[1] = v25;
        *((_BYTE *)v21 + 32) = *((_BYTE *)v22 + 32);
        *(_OWORD *)((char *)v21 + 40) = *(_OWORD *)((char *)v22 + 40);
        *((_QWORD *)v21 + 7) = *((_QWORD *)v22 + 7);
        *((_BYTE *)v21 + 64) = *((_BYTE *)v22 + 64);
        *(_OWORD *)((char *)v21 + 113) = *(_OWORD *)((char *)v22 + 113);
        *(_OWORD *)((char *)v21 + 104) = *(_OWORD *)((char *)v22 + 104);
        *(_OWORD *)((char *)v21 + 88) = *(_OWORD *)((char *)v22 + 88);
        *(_OWORD *)((char *)v21 + 72) = *(_OWORD *)((char *)v22 + 72);
        *((_BYTE *)v21 + 129) = *((_BYTE *)v22 + 129);
        v26 = v83[11];
        v77 = (char *)v22 + v26;
        v79 = (char *)v21 + v26;
        v27 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v79, v77, v27);
        *(_OWORD *)((char *)v21 + v83[12]) = *(_OWORD *)((char *)v22 + v83[12]);
        *((_BYTE *)v21 + v83[13]) = *((_BYTE *)v22 + v83[13]);
        *((_BYTE *)v21 + v83[14]) = *((_BYTE *)v22 + v83[14]);
        *((_BYTE *)v21 + v83[15]) = *((_BYTE *)v22 + v83[15]);
        *(_OWORD *)((char *)v21 + v83[16]) = *(_OWORD *)((char *)v22 + v83[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t))(v81 + 56))(v21, 0, 1);
      }
      v16 = v85;
      *(_QWORD *)((char *)v14 + *(int *)(v85 + 32)) = *(_QWORD *)((char *)v15 + *(int *)(v85 + 32));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v14, 0, 1, v85);
    }
    v28 = v9[10];
    v88 = v7;
    v29 = (_OWORD *)((char *)v7 + v28);
    v30 = (_OWORD *)((char *)v8 + v28);
    v31 = type metadata accessor for Header.PrimaryAction(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v82 = v31;
      v84 = v32;
      if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
      {
        v34 = v30[1];
        v35 = v29;
        *v29 = *v30;
        v29[1] = v34;
        v29[2] = v30[2];
        v86 = v16;
        v36 = *(int *)(v16 + 28);
        v37 = (_OWORD *)((char *)v29 + v36);
        v38 = (_OWORD *)((char *)v30 + v36);
        v39 = (int *)type metadata accessor for ArtworkModel(0);
        v80 = *((_QWORD *)v39 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v80 + 48))(v38, 1, v39))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v43 = v38[1];
          *v37 = *v38;
          v37[1] = v43;
          *((_BYTE *)v37 + 32) = *((_BYTE *)v38 + 32);
          *(_OWORD *)((char *)v37 + 40) = *(_OWORD *)((char *)v38 + 40);
          *((_QWORD *)v37 + 7) = *((_QWORD *)v38 + 7);
          *((_BYTE *)v37 + 64) = *((_BYTE *)v38 + 64);
          *(_OWORD *)((char *)v37 + 113) = *(_OWORD *)((char *)v38 + 113);
          *(_OWORD *)((char *)v37 + 104) = *(_OWORD *)((char *)v38 + 104);
          *(_OWORD *)((char *)v37 + 88) = *(_OWORD *)((char *)v38 + 88);
          *(_OWORD *)((char *)v37 + 72) = *(_OWORD *)((char *)v38 + 72);
          *((_BYTE *)v37 + 129) = *((_BYTE *)v38 + 129);
          v44 = v39[11];
          v76 = (char *)v38 + v44;
          v78 = (char *)v37 + v44;
          v45 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v78, v76, v45);
          *(_OWORD *)((char *)v37 + v39[12]) = *(_OWORD *)((char *)v38 + v39[12]);
          *((_BYTE *)v37 + v39[13]) = *((_BYTE *)v38 + v39[13]);
          *((_BYTE *)v37 + v39[14]) = *((_BYTE *)v38 + v39[14]);
          *((_BYTE *)v37 + v39[15]) = *((_BYTE *)v38 + v39[15]);
          *(_OWORD *)((char *)v37 + v39[16]) = *(_OWORD *)((char *)v38 + v39[16]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v80 + 56))(v37, 0, 1, v39);
        }
        v41 = v84;
        v42 = v82;
        *(_QWORD *)((char *)v35 + *(int *)(v86 + 32)) = *(_QWORD *)((char *)v30 + *(int *)(v86 + 32));
        swift_storeEnumTagMultiPayload(v35, v82, 1);
      }
      else
      {
        v41 = v32;
        v35 = v29;
        memcpy(v29, v30, *(_QWORD *)(v84 + 64));
        v42 = v31;
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v42);
    }
    v46 = v88;
    *(_QWORD *)((char *)v88 + v9[11]) = *(_QWORD *)((char *)v8 + v9[11]);
    v47 = v9[12];
    v48 = (_OWORD *)((char *)v88 + v47);
    v49 = (_OWORD *)((char *)v8 + v47);
    v50 = (int *)type metadata accessor for ArtworkModel(0);
    v51 = *((_QWORD *)v50 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v51 + 48))(v49, 1, v50))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = v49[1];
      *v48 = *v49;
      v48[1] = v53;
      *((_BYTE *)v48 + 32) = *((_BYTE *)v49 + 32);
      *(_OWORD *)((char *)v48 + 40) = *(_OWORD *)((char *)v49 + 40);
      *((_QWORD *)v48 + 7) = *((_QWORD *)v49 + 7);
      *((_BYTE *)v48 + 64) = *((_BYTE *)v49 + 64);
      *(_OWORD *)((char *)v48 + 113) = *(_OWORD *)((char *)v49 + 113);
      *(_OWORD *)((char *)v48 + 104) = *(_OWORD *)((char *)v49 + 104);
      *(_OWORD *)((char *)v48 + 88) = *(_OWORD *)((char *)v49 + 88);
      *(_OWORD *)((char *)v48 + 72) = *(_OWORD *)((char *)v49 + 72);
      *((_BYTE *)v48 + 129) = *((_BYTE *)v49 + 129);
      v54 = v50[11];
      v89 = (char *)v48 + v54;
      v55 = (char *)v49 + v54;
      v56 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v89, v55, v56);
      *(_OWORD *)((char *)v48 + v50[12]) = *(_OWORD *)((char *)v49 + v50[12]);
      *((_BYTE *)v48 + v50[13]) = *((_BYTE *)v49 + v50[13]);
      *((_BYTE *)v48 + v50[14]) = *((_BYTE *)v49 + v50[14]);
      *((_BYTE *)v48 + v50[15]) = *((_BYTE *)v49 + v50[15]);
      *(_OWORD *)((char *)v48 + v50[16]) = *(_OWORD *)((char *)v49 + v50[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v51 + 56))(v48, 0, 1, v50);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v90 + 56))(v46, 0, 1, v9);
  }
  v57 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v57) = *(_QWORD *)((char *)a2 + v57);
  v58 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  v64 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v64) = *((_BYTE *)a2 + v64);
  v65 = a3[12];
  v66 = a3[13];
  v67 = (char *)a1 + v65;
  v68 = (char *)a2 + v65;
  v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
  v70 = (char *)a1 + v66;
  v71 = (char *)a2 + v66;
  v72 = type metadata accessor for ImpressionMetrics(0);
  v73 = *(_QWORD *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  return a1;
}

_QWORD *assignWithTake for ModernShelf(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  char *v18;
  uint64_t v19;
  unsigned int (**v20)(_OWORD *, uint64_t, uint64_t);
  uint64_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  __int128 v36;
  uint64_t v37;
  _OWORD *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  int *v69;
  uint64_t (*v70)(uint64_t, uint64_t, int *);
  int v71;
  size_t v72;
  void *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  _OWORD *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(char *, uint64_t, uint64_t);
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  __int128 v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD *v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  int v133;
  int v134;
  void *v135;
  _QWORD *v136;
  int v137;
  int v138;
  void *v139;
  _QWORD *v140;
  int v141;
  int v142;
  void *v143;
  _QWORD *v144;
  int v145;
  int v146;
  void *v147;
  _QWORD *v148;
  int v149;
  int v150;
  void *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t (*v169)(char *, uint64_t, uint64_t);
  int v170;
  int v171;
  __int128 v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  int *v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t, uint64_t, int *);
  int v195;
  int v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  _OWORD *v203;
  int v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  void *v211;
  _QWORD *v212;
  int v213;
  int v214;
  void *v215;
  _QWORD *v216;
  int v217;
  int v218;
  void *v219;
  _QWORD *v220;
  int v221;
  int v222;
  void *v223;
  _QWORD *v224;
  int v225;
  int v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  __int128 v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  char *v250;
  char *v251;
  char *v252;
  void *v253;
  char *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  int *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  int *__dst;
  void *__dsta;
  _OWORD *__dstb;
  char *__src;
  int *__srca;
  int *__srcb;
  int *__srcc;
  void (**__srcd)(char *, _QWORD, uint64_t);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  int *v275;
  uint64_t v276;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Header(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_145D8(v8, type metadata accessor for Header);
      goto LABEL_7;
    }
    v25 = *((_QWORD *)v9 + 1);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v25;
    swift_bridgeObjectRelease();
    v26 = *((_QWORD *)v9 + 3);
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = v26;
    swift_bridgeObjectRelease();
    v27 = *((_QWORD *)v9 + 5);
    *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
    *(_QWORD *)(v8 + 40) = v27;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v8 + 48) = v9[48];
    *(_BYTE *)(v8 + 49) = v9[49];
    v28 = *(int *)(v10 + 36);
    v29 = v8 + v28;
    v30 = &v9[v28];
    v31 = type metadata accessor for ActionMenu(0);
    v257 = *(_QWORD *)(v31 - 8);
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v257 + 48);
    v272 = v29;
    LODWORD(v29) = v32(v29, 1, v31);
    __dst = (int *)v31;
    __src = v30;
    v33 = v32((uint64_t)v30, 1, v31);
    v276 = v10;
    if ((_DWORD)v29)
    {
      if (v33)
      {
        v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0) - 8) + 64);
        v35 = (void *)v272;
LABEL_16:
        memcpy(v35, v30, v34);
        goto LABEL_92;
      }
      v42 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v272 = *(_OWORD *)v30;
      *(_OWORD *)(v272 + 16) = v42;
      *(_OWORD *)(v272 + 32) = *((_OWORD *)v30 + 2);
      v43 = *(int *)(v31 + 28);
      v44 = (_OWORD *)(v272 + v43);
      v45 = &v30[v43];
      v46 = (int *)type metadata accessor for ArtworkModel(0);
      v47 = *((_QWORD *)v46 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v118 = *((_OWORD *)v45 + 1);
        *v44 = *(_OWORD *)v45;
        v44[1] = v118;
        *((_BYTE *)v44 + 32) = v45[32];
        *(_OWORD *)((char *)v44 + 40) = *(_OWORD *)(v45 + 40);
        *((_QWORD *)v44 + 7) = *((_QWORD *)v45 + 7);
        *((_BYTE *)v44 + 64) = v45[64];
        *(_OWORD *)((char *)v44 + 113) = *(_OWORD *)(v45 + 113);
        *(_OWORD *)((char *)v44 + 104) = *(_OWORD *)(v45 + 104);
        *(_OWORD *)((char *)v44 + 88) = *(_OWORD *)(v45 + 88);
        *(_OWORD *)((char *)v44 + 72) = *(_OWORD *)(v45 + 72);
        *((_BYTE *)v44 + 129) = v45[129];
        v119 = v46[11];
        v120 = (char *)v44 + v119;
        v254 = &v45[v119];
        v121 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v120, v254, v121);
        *(_OWORD *)((char *)v44 + v46[12]) = *(_OWORD *)&v45[v46[12]];
        *((_BYTE *)v44 + v46[13]) = v45[v46[13]];
        *((_BYTE *)v44 + v46[14]) = v45[v46[14]];
        *((_BYTE *)v44 + v46[15]) = v45[v46[15]];
        *(_OWORD *)((char *)v44 + v46[16]) = *(_OWORD *)&v45[v46[16]];
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
      }
      v10 = v276;
      *(_QWORD *)(v272 + __dst[8]) = *(_QWORD *)&__src[__dst[8]];
      (*(void (**)(void))(v257 + 56))();
LABEL_92:
      v165 = *(int *)(v10 + 40);
      v166 = (char *)(v8 + v165);
      v167 = &v9[v165];
      v168 = type metadata accessor for Header.PrimaryAction(0);
      v273 = *(_QWORD *)(v168 - 8);
      v169 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v273 + 48);
      v170 = v169(v166, 1, v168);
      v171 = v169(v167, 1, v168);
      if (v170)
      {
        if (!v171)
        {
          if (swift_getEnumCaseMultiPayload(v167, v168) == 1)
          {
            v172 = *((_OWORD *)v167 + 1);
            *(_OWORD *)v166 = *(_OWORD *)v167;
            *((_OWORD *)v166 + 1) = v172;
            *((_OWORD *)v166 + 2) = *((_OWORD *)v167 + 2);
            v173 = __dst[7];
            v174 = &v166[v173];
            v175 = &v167[v173];
            v176 = type metadata accessor for ArtworkModel(0);
            v261 = *(_QWORD *)(v176 - 8);
            __srcc = (int *)v176;
            if ((*(unsigned int (**)(char *, uint64_t))(v261 + 48))(v175, 1))
            {
              v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
            }
            else
            {
              v186 = *((_OWORD *)v175 + 1);
              *(_OWORD *)v174 = *(_OWORD *)v175;
              *((_OWORD *)v174 + 1) = v186;
              v174[32] = v175[32];
              *(_OWORD *)(v174 + 40) = *(_OWORD *)(v175 + 40);
              *((_QWORD *)v174 + 7) = *((_QWORD *)v175 + 7);
              v174[64] = v175[64];
              *(_OWORD *)(v174 + 113) = *(_OWORD *)(v175 + 113);
              *(_OWORD *)(v174 + 104) = *(_OWORD *)(v175 + 104);
              *(_OWORD *)(v174 + 88) = *(_OWORD *)(v175 + 88);
              *(_OWORD *)(v174 + 72) = *(_OWORD *)(v175 + 72);
              v174[129] = v175[129];
              v187 = __srcc[11];
              v251 = &v175[v187];
              v255 = &v174[v187];
              v188 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v255, v251, v188);
              *(_OWORD *)&v174[__srcc[12]] = *(_OWORD *)&v175[__srcc[12]];
              v174[__srcc[13]] = v175[__srcc[13]];
              v174[__srcc[14]] = v175[__srcc[14]];
              v174[__srcc[15]] = v175[__srcc[15]];
              *(_OWORD *)&v174[__srcc[16]] = *(_OWORD *)&v175[__srcc[16]];
              (*(void (**)(char *, _QWORD, uint64_t))(v261 + 56))(v174, 0, 1);
            }
            v185 = v273;
            *(_QWORD *)&v166[__dst[8]] = *(_QWORD *)&v167[__dst[8]];
            swift_storeEnumTagMultiPayload(v166, v168, 1);
          }
          else
          {
            v185 = v273;
            memcpy(v166, v167, *(_QWORD *)(v273 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v185 + 56))(v166, 0, 1, v168);
LABEL_109:
          *(_QWORD *)(v8 + *(int *)(v276 + 44)) = *(_QWORD *)&v9[*(int *)(v276 + 44)];
          swift_bridgeObjectRelease();
          v189 = *(int *)(v276 + 48);
          v190 = v8 + v189;
          v191 = &v9[v189];
          v192 = (int *)type metadata accessor for ArtworkModel(0);
          v193 = *((_QWORD *)v192 - 1);
          v194 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v193 + 48);
          v195 = v194(v190, 1, v192);
          v196 = v194((uint64_t)v191, 1, v192);
          if (v195)
          {
            if (!v196)
            {
              v197 = *((_OWORD *)v191 + 1);
              *(_OWORD *)v190 = *(_OWORD *)v191;
              *(_OWORD *)(v190 + 16) = v197;
              *(_BYTE *)(v190 + 32) = v191[32];
              *(_OWORD *)(v190 + 40) = *(_OWORD *)(v191 + 40);
              *(_QWORD *)(v190 + 56) = *((_QWORD *)v191 + 7);
              *(_BYTE *)(v190 + 64) = v191[64];
              *(_OWORD *)(v190 + 113) = *(_OWORD *)(v191 + 113);
              *(_OWORD *)(v190 + 104) = *(_OWORD *)(v191 + 104);
              *(_OWORD *)(v190 + 88) = *(_OWORD *)(v191 + 88);
              *(_OWORD *)(v190 + 72) = *(_OWORD *)(v191 + 72);
              *(_BYTE *)(v190 + 129) = v191[129];
              v198 = v192[11];
              v199 = v190 + v198;
              v200 = &v191[v198];
              v201 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v199, v200, v201);
              *(_OWORD *)(v190 + v192[12]) = *(_OWORD *)&v191[v192[12]];
              *(_BYTE *)(v190 + v192[13]) = v191[v192[13]];
              *(_BYTE *)(v190 + v192[14]) = v191[v192[14]];
              *(_BYTE *)(v190 + v192[15]) = v191[v192[15]];
              *(_OWORD *)(v190 + v192[16]) = *(_OWORD *)&v191[v192[16]];
              (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v193 + 56))(v190, 0, 1, v192);
              goto LABEL_37;
            }
            goto LABEL_114;
          }
          if (v196)
          {
            sub_145D8(v190, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_114:
            v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70) - 8) + 64);
            v23 = (void *)v190;
            v24 = v191;
            goto LABEL_8;
          }
          v202 = *((_QWORD *)v191 + 1);
          *(_QWORD *)v190 = *(_QWORD *)v191;
          *(_QWORD *)(v190 + 8) = v202;
          swift_bridgeObjectRelease();
          v203 = v191 + 16;
          v204 = *(unsigned __int8 *)(v190 + 32);
          if (v204 != 255)
          {
            v205 = v191[32];
            if (v205 != 255)
            {
              v206 = *(_QWORD *)(v190 + 16);
              v207 = *(_QWORD *)(v190 + 24);
              *(_OWORD *)(v190 + 16) = *v203;
              *(_BYTE *)(v190 + 32) = v205;
              sub_3B5BC(v206, v207, v204);
              goto LABEL_121;
            }
            sub_3E43C(v190 + 16);
          }
          *(_OWORD *)(v190 + 16) = *v203;
          *(_BYTE *)(v190 + 32) = v191[32];
LABEL_121:
          *(_OWORD *)(v190 + 40) = *(_OWORD *)(v191 + 40);
          v208 = v191 + 56;
          v209 = *(unsigned __int8 *)(v190 + 64);
          if (v209 != 255)
          {
            v210 = v191[64];
            if (v210 != 255)
            {
              v211 = *(void **)(v190 + 56);
              *(_QWORD *)(v190 + 56) = *v208;
              *(_BYTE *)(v190 + 64) = v210;
              sub_3D624(v211, v209);
              goto LABEL_126;
            }
            sub_3E470(v190 + 56);
          }
          *(_QWORD *)(v190 + 56) = *v208;
          *(_BYTE *)(v190 + 64) = v191[64];
LABEL_126:
          v212 = v191 + 72;
          v213 = *(unsigned __int8 *)(v190 + 80);
          if (v213 != 255)
          {
            v214 = v191[80];
            if (v214 != 255)
            {
              v215 = *(void **)(v190 + 72);
              *(_QWORD *)(v190 + 72) = *v212;
              *(_BYTE *)(v190 + 80) = v214;
              sub_3D624(v215, v213);
              goto LABEL_131;
            }
            sub_3E470(v190 + 72);
          }
          *(_QWORD *)(v190 + 72) = *v212;
          *(_BYTE *)(v190 + 80) = v191[80];
LABEL_131:
          v216 = v191 + 88;
          v217 = *(unsigned __int8 *)(v190 + 96);
          if (v217 != 255)
          {
            v218 = v191[96];
            if (v218 != 255)
            {
              v219 = *(void **)(v190 + 88);
              *(_QWORD *)(v190 + 88) = *v216;
              *(_BYTE *)(v190 + 96) = v218;
              sub_3D624(v219, v217);
              goto LABEL_136;
            }
            sub_3E470(v190 + 88);
          }
          *(_QWORD *)(v190 + 88) = *v216;
          *(_BYTE *)(v190 + 96) = v191[96];
LABEL_136:
          v220 = v191 + 104;
          v221 = *(unsigned __int8 *)(v190 + 112);
          if (v221 != 255)
          {
            v222 = v191[112];
            if (v222 != 255)
            {
              v223 = *(void **)(v190 + 104);
              *(_QWORD *)(v190 + 104) = *v220;
              *(_BYTE *)(v190 + 112) = v222;
              sub_3D624(v223, v221);
              goto LABEL_141;
            }
            sub_3E470(v190 + 104);
          }
          *(_QWORD *)(v190 + 104) = *v220;
          *(_BYTE *)(v190 + 112) = v191[112];
LABEL_141:
          v224 = v191 + 120;
          v225 = *(unsigned __int8 *)(v190 + 128);
          if (v225 != 255)
          {
            v226 = v191[128];
            if (v226 != 255)
            {
              v227 = *(void **)(v190 + 120);
              *(_QWORD *)(v190 + 120) = *v224;
              *(_BYTE *)(v190 + 128) = v226;
              sub_3D624(v227, v225);
LABEL_146:
              *(_BYTE *)(v190 + 129) = v191[129];
              v228 = v192[11];
              v229 = v190 + v228;
              v230 = &v191[v228];
              v231 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 40))(v229, v230, v231);
              v232 = v192[12];
              v233 = (_QWORD *)(v190 + v232);
              v234 = &v191[v232];
              v236 = *(_QWORD *)v234;
              v235 = *((_QWORD *)v234 + 1);
              *v233 = v236;
              v233[1] = v235;
              swift_bridgeObjectRelease();
              *(_BYTE *)(v190 + v192[13]) = v191[v192[13]];
              *(_BYTE *)(v190 + v192[14]) = v191[v192[14]];
              *(_BYTE *)(v190 + v192[15]) = v191[v192[15]];
              v237 = v192[16];
              v238 = (_QWORD *)(v190 + v237);
              v239 = &v191[v237];
              v241 = *(_QWORD *)v239;
              v240 = *((_QWORD *)v239 + 1);
              *v238 = v241;
              v238[1] = v240;
              swift_bridgeObjectRelease();
              goto LABEL_37;
            }
            sub_3E470(v190 + 120);
          }
          *(_QWORD *)(v190 + 120) = *v224;
          *(_BYTE *)(v190 + 128) = v191[128];
          goto LABEL_146;
        }
      }
      else
      {
        if (!v171)
        {
          if (a1 == a2)
            goto LABEL_109;
          sub_145D8((uint64_t)v166, type metadata accessor for Header.PrimaryAction);
          if (swift_getEnumCaseMultiPayload(v167, v168) == 1)
          {
            v179 = *((_OWORD *)v167 + 1);
            *(_OWORD *)v166 = *(_OWORD *)v167;
            *((_OWORD *)v166 + 1) = v179;
            *((_OWORD *)v166 + 2) = *((_OWORD *)v167 + 2);
            v180 = __dst[7];
            v181 = &v166[v180];
            v182 = &v167[v180];
            v183 = type metadata accessor for ArtworkModel(0);
            __srcd = *(void (***)(char *, _QWORD, uint64_t))(v183 - 8);
            v274 = (int *)v183;
            if (((unsigned int (*)(char *, uint64_t))__srcd[6])(v182, 1))
            {
              v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
            }
            else
            {
              v242 = *((_OWORD *)v182 + 1);
              *(_OWORD *)v181 = *(_OWORD *)v182;
              *((_OWORD *)v181 + 1) = v242;
              v181[32] = v182[32];
              *(_OWORD *)(v181 + 40) = *(_OWORD *)(v182 + 40);
              *((_QWORD *)v181 + 7) = *((_QWORD *)v182 + 7);
              v181[64] = v182[64];
              *(_OWORD *)(v181 + 113) = *(_OWORD *)(v182 + 113);
              *(_OWORD *)(v181 + 104) = *(_OWORD *)(v182 + 104);
              *(_OWORD *)(v181 + 88) = *(_OWORD *)(v182 + 88);
              *(_OWORD *)(v181 + 72) = *(_OWORD *)(v182 + 72);
              v181[129] = v182[129];
              v243 = v274[11];
              v256 = &v182[v243];
              v262 = &v181[v243];
              v244 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v262, v256, v244);
              *(_OWORD *)&v181[v274[12]] = *(_OWORD *)&v182[v274[12]];
              v181[v274[13]] = v182[v274[13]];
              v181[v274[14]] = v182[v274[14]];
              v181[v274[15]] = v182[v274[15]];
              *(_OWORD *)&v181[v274[16]] = *(_OWORD *)&v182[v274[16]];
              __srcd[7](v181, 0, 1);
            }
            *(_QWORD *)&v166[__dst[8]] = *(_QWORD *)&v167[__dst[8]];
            swift_storeEnumTagMultiPayload(v166, v168, 1);
            goto LABEL_109;
          }
          v178 = v273;
LABEL_100:
          memcpy(v166, v167, *(_QWORD *)(v178 + 64));
          goto LABEL_109;
        }
        sub_145D8((uint64_t)v166, type metadata accessor for Header.PrimaryAction);
      }
      v178 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B3740) - 8);
      goto LABEL_100;
    }
    if (v33)
    {
      sub_145D8(v272, type metadata accessor for ActionMenu);
      v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0) - 8) + 64);
      v35 = (void *)v272;
      goto LABEL_16;
    }
    v63 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v272 = *(_QWORD *)v30;
    *(_QWORD *)(v272 + 8) = v63;
    swift_bridgeObjectRelease();
    v64 = *((_QWORD *)v30 + 3);
    *(_QWORD *)(v272 + 16) = *((_QWORD *)v30 + 2);
    *(_QWORD *)(v272 + 24) = v64;
    swift_bridgeObjectRelease();
    v65 = *((_QWORD *)v30 + 5);
    *(_QWORD *)(v272 + 32) = *((_QWORD *)v30 + 4);
    *(_QWORD *)(v272 + 40) = v65;
    swift_bridgeObjectRelease();
    v66 = *(int *)(v31 + 28);
    v67 = v272 + v66;
    v68 = &v30[v66];
    v69 = (int *)type metadata accessor for ArtworkModel(0);
    v247 = *((_QWORD *)v69 - 1);
    v70 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v247 + 48);
    v260 = v67;
    LODWORD(v67) = v70(v67, 1, v69);
    v71 = v70((uint64_t)v68, 1, v69);
    if ((_DWORD)v67)
    {
      if (!v71)
      {
        v122 = *((_OWORD *)v68 + 1);
        *(_OWORD *)v260 = *(_OWORD *)v68;
        *(_OWORD *)(v260 + 16) = v122;
        *(_BYTE *)(v260 + 32) = v68[32];
        *(_OWORD *)(v260 + 40) = *(_OWORD *)(v68 + 40);
        *(_QWORD *)(v260 + 56) = *((_QWORD *)v68 + 7);
        *(_BYTE *)(v260 + 64) = v68[64];
        *(_OWORD *)(v260 + 113) = *(_OWORD *)(v68 + 113);
        *(_OWORD *)(v260 + 104) = *(_OWORD *)(v68 + 104);
        *(_OWORD *)(v260 + 88) = *(_OWORD *)(v68 + 88);
        *(_OWORD *)(v260 + 72) = *(_OWORD *)(v68 + 72);
        *(_BYTE *)(v260 + 129) = v68[129];
        v123 = v69[11];
        v246 = v260 + v123;
        v124 = &v68[v123];
        v125 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v246, v124, v125);
        *(_OWORD *)(v260 + v69[12]) = *(_OWORD *)&v68[v69[12]];
        *(_BYTE *)(v260 + v69[13]) = v68[v69[13]];
        *(_BYTE *)(v260 + v69[14]) = v68[v69[14]];
        *(_BYTE *)(v260 + v69[15]) = v68[v69[15]];
        *(_OWORD *)(v260 + v69[16]) = *(_OWORD *)&v68[v69[16]];
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v247 + 56))(v260, 0, 1, v69);
        goto LABEL_91;
      }
      v72 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70) - 8) + 64);
      v73 = (void *)v260;
LABEL_58:
      memcpy(v73, v68, v72);
LABEL_91:
      *(_QWORD *)(v272 + __dst[8]) = *(_QWORD *)&__src[__dst[8]];
      swift_bridgeObjectRelease();
      goto LABEL_92;
    }
    if (v71)
    {
      sub_145D8(v260, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      v72 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70) - 8) + 64);
      v73 = (void *)v260;
      goto LABEL_58;
    }
    v126 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v260 = *(_QWORD *)v68;
    *(_QWORD *)(v260 + 8) = v126;
    swift_bridgeObjectRelease();
    v127 = v68 + 16;
    v128 = *(unsigned __int8 *)(v260 + 32);
    if (v128 != 255)
    {
      v129 = v68[32];
      if (v129 != 255)
      {
        v130 = *(_QWORD *)(v260 + 16);
        v131 = *(_QWORD *)(v260 + 24);
        *(_OWORD *)(v260 + 16) = *v127;
        *(_BYTE *)(v260 + 32) = v129;
        sub_3B5BC(v130, v131, v128);
        goto LABEL_65;
      }
      sub_3E43C(v260 + 16);
    }
    *(_OWORD *)(v260 + 16) = *v127;
    *(_BYTE *)(v260 + 32) = v68[32];
LABEL_65:
    *(_OWORD *)(v260 + 40) = *(_OWORD *)(v68 + 40);
    v132 = v68 + 56;
    v133 = *(unsigned __int8 *)(v260 + 64);
    if (v133 != 255)
    {
      v134 = v68[64];
      if (v134 != 255)
      {
        v135 = *(void **)(v260 + 56);
        *(_QWORD *)(v260 + 56) = *v132;
        *(_BYTE *)(v260 + 64) = v134;
        sub_3D624(v135, v133);
        goto LABEL_70;
      }
      sub_3E470(v260 + 56);
    }
    *(_QWORD *)(v260 + 56) = *v132;
    *(_BYTE *)(v260 + 64) = v68[64];
LABEL_70:
    v136 = v68 + 72;
    v137 = *(unsigned __int8 *)(v260 + 80);
    if (v137 != 255)
    {
      v138 = v68[80];
      if (v138 != 255)
      {
        v139 = *(void **)(v260 + 72);
        *(_QWORD *)(v260 + 72) = *v136;
        *(_BYTE *)(v260 + 80) = v138;
        sub_3D624(v139, v137);
        goto LABEL_75;
      }
      sub_3E470(v260 + 72);
    }
    *(_QWORD *)(v260 + 72) = *v136;
    *(_BYTE *)(v260 + 80) = v68[80];
LABEL_75:
    v140 = v68 + 88;
    v141 = *(unsigned __int8 *)(v260 + 96);
    if (v141 != 255)
    {
      v142 = v68[96];
      if (v142 != 255)
      {
        v143 = *(void **)(v260 + 88);
        *(_QWORD *)(v260 + 88) = *v140;
        *(_BYTE *)(v260 + 96) = v142;
        sub_3D624(v143, v141);
        goto LABEL_80;
      }
      sub_3E470(v260 + 88);
    }
    *(_QWORD *)(v260 + 88) = *v140;
    *(_BYTE *)(v260 + 96) = v68[96];
LABEL_80:
    v144 = v68 + 104;
    v145 = *(unsigned __int8 *)(v260 + 112);
    if (v145 != 255)
    {
      v146 = v68[112];
      if (v146 != 255)
      {
        v147 = *(void **)(v260 + 104);
        *(_QWORD *)(v260 + 104) = *v144;
        *(_BYTE *)(v260 + 112) = v146;
        sub_3D624(v147, v145);
        goto LABEL_85;
      }
      sub_3E470(v260 + 104);
    }
    *(_QWORD *)(v260 + 104) = *v144;
    *(_BYTE *)(v260 + 112) = v68[112];
LABEL_85:
    v148 = v68 + 120;
    v149 = *(unsigned __int8 *)(v260 + 128);
    if (v149 != 255)
    {
      v150 = v68[128];
      if (v150 != 255)
      {
        v151 = *(void **)(v260 + 120);
        *(_QWORD *)(v260 + 120) = *v148;
        *(_BYTE *)(v260 + 128) = v150;
        sub_3D624(v151, v149);
LABEL_90:
        *(_BYTE *)(v260 + 129) = v68[129];
        v152 = v69[11];
        v249 = v260 + v152;
        v153 = &v68[v152];
        v154 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 40))(v249, v153, v154);
        v155 = v69[12];
        v156 = (_QWORD *)(v260 + v155);
        v157 = &v68[v155];
        v159 = *(_QWORD *)v157;
        v158 = *((_QWORD *)v157 + 1);
        *v156 = v159;
        v156[1] = v158;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v260 + v69[13]) = v68[v69[13]];
        *(_BYTE *)(v260 + v69[14]) = v68[v69[14]];
        *(_BYTE *)(v260 + v69[15]) = v68[v69[15]];
        v160 = v69[16];
        v161 = (_QWORD *)(v260 + v160);
        v162 = &v68[v160];
        v164 = *(_QWORD *)v162;
        v163 = *((_QWORD *)v162 + 1);
        *v161 = v164;
        v161[1] = v163;
        swift_bridgeObjectRelease();
        goto LABEL_91;
      }
      sub_3E470(v260 + 120);
    }
    *(_QWORD *)(v260 + 120) = *v148;
    *(_BYTE *)(v260 + 128) = v68[128];
    goto LABEL_90;
  }
  if (v14)
  {
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38) - 8) + 64);
    v23 = (void *)v8;
    v24 = v9;
LABEL_8:
    memcpy(v23, v24, v22);
    goto LABEL_37;
  }
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
  *(_WORD *)(v8 + 48) = *((_WORD *)v9 + 24);
  v275 = (int *)v10;
  v16 = *(int *)(v10 + 36);
  v17 = (_OWORD *)(v8 + v16);
  v18 = &v9[v16];
  v19 = type metadata accessor for ActionMenu(0);
  v20 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v19 - 8);
  v271 = v11;
  if (((unsigned int (**)(char *, uint64_t, uint64_t))v20)[6](v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    __dsta = v20;
    __srca = (int *)v19;
    v36 = *((_OWORD *)v18 + 1);
    *v17 = *(_OWORD *)v18;
    v17[1] = v36;
    v17[2] = *((_OWORD *)v18 + 2);
    v37 = *(int *)(v19 + 28);
    v38 = (_OWORD *)((char *)v17 + v37);
    v39 = &v18[v37];
    v40 = (int *)type metadata accessor for ArtworkModel(0);
    v258 = *((_QWORD *)v40 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v258 + 48))(v39, 1, v40))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v49 = *((_OWORD *)v39 + 1);
      *v38 = *(_OWORD *)v39;
      v38[1] = v49;
      *((_BYTE *)v38 + 32) = v39[32];
      *(_OWORD *)((char *)v38 + 40) = *(_OWORD *)(v39 + 40);
      *((_QWORD *)v38 + 7) = *((_QWORD *)v39 + 7);
      *((_BYTE *)v38 + 64) = v39[64];
      *(_OWORD *)((char *)v38 + 113) = *(_OWORD *)(v39 + 113);
      *(_OWORD *)((char *)v38 + 104) = *(_OWORD *)(v39 + 104);
      *(_OWORD *)((char *)v38 + 88) = *(_OWORD *)(v39 + 88);
      *(_OWORD *)((char *)v38 + 72) = *(_OWORD *)(v39 + 72);
      *((_BYTE *)v38 + 129) = v39[129];
      v50 = v40[11];
      v250 = &v39[v50];
      v252 = (char *)v38 + v50;
      v51 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v252, v250, v51);
      *(_OWORD *)((char *)v38 + v40[12]) = *(_OWORD *)&v39[v40[12]];
      *((_BYTE *)v38 + v40[13]) = v39[v40[13]];
      *((_BYTE *)v38 + v40[14]) = v39[v40[14]];
      *((_BYTE *)v38 + v40[15]) = v39[v40[15]];
      *(_OWORD *)((char *)v38 + v40[16]) = *(_OWORD *)&v39[v40[16]];
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v258 + 56))(v38, 0, 1, v40);
    }
    v19 = (uint64_t)__srca;
    *(_QWORD *)((char *)v17 + __srca[8]) = *(_QWORD *)&v18[__srca[8]];
    (*((void (**)(_OWORD *, _QWORD, uint64_t, int *))__dsta + 7))(v17, 0, 1, __srca);
  }
  v52 = v275[10];
  v53 = (_OWORD *)(v8 + v52);
  v54 = &v9[v52];
  v55 = type metadata accessor for Header.PrimaryAction(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v54, v55) == 1)
    {
      v58 = *((_OWORD *)v54 + 1);
      *v53 = *(_OWORD *)v54;
      v53[1] = v58;
      v53[2] = *((_OWORD *)v54 + 2);
      v59 = *(int *)(v19 + 28);
      __dstb = (_OWORD *)((char *)v53 + v59);
      __srcb = (int *)v19;
      v60 = &v54[v59];
      v61 = type metadata accessor for ArtworkModel(0);
      v253 = *(void **)(v61 - 8);
      v259 = (int *)v61;
      if ((*((unsigned int (**)(char *, uint64_t))v253 + 6))(v60, 1))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(__dstb, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v74 = *((_OWORD *)v60 + 1);
        *__dstb = *(_OWORD *)v60;
        __dstb[1] = v74;
        *((_BYTE *)__dstb + 32) = v60[32];
        *(_OWORD *)((char *)__dstb + 40) = *(_OWORD *)(v60 + 40);
        *((_QWORD *)__dstb + 7) = *((_QWORD *)v60 + 7);
        *((_BYTE *)__dstb + 64) = v60[64];
        *(_OWORD *)((char *)__dstb + 113) = *(_OWORD *)(v60 + 113);
        *(_OWORD *)((char *)__dstb + 104) = *(_OWORD *)(v60 + 104);
        *(_OWORD *)((char *)__dstb + 88) = *(_OWORD *)(v60 + 88);
        *(_OWORD *)((char *)__dstb + 72) = *(_OWORD *)(v60 + 72);
        *((_BYTE *)__dstb + 129) = v60[129];
        v75 = v259[11];
        v245 = &v60[v75];
        v248 = (char *)__dstb + v75;
        v76 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v248, v245, v76);
        *(_OWORD *)((char *)__dstb + v259[12]) = *(_OWORD *)&v60[v259[12]];
        *((_BYTE *)__dstb + v259[13]) = v60[v259[13]];
        *((_BYTE *)__dstb + v259[14]) = v60[v259[14]];
        *((_BYTE *)__dstb + v259[15]) = v60[v259[15]];
        *(_OWORD *)((char *)__dstb + v259[16]) = *(_OWORD *)&v60[v259[16]];
        (*((void (**)(_OWORD *, _QWORD, uint64_t))v253 + 7))(__dstb, 0, 1);
      }
      *(_QWORD *)((char *)v53 + __srcb[8]) = *(_QWORD *)&v54[__srcb[8]];
      swift_storeEnumTagMultiPayload(v53, v55, 1);
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(v56 + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v77 = v275;
  *(_QWORD *)(v8 + v275[11]) = *(_QWORD *)&v9[v275[11]];
  v78 = v275[12];
  v79 = (_OWORD *)(v8 + v78);
  v80 = &v9[v78];
  v81 = (int *)type metadata accessor for ArtworkModel(0);
  v82 = *((_QWORD *)v81 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v82 + 48))(v80, 1, v81))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v84 = *((_OWORD *)v80 + 1);
    *v79 = *(_OWORD *)v80;
    v79[1] = v84;
    *((_BYTE *)v79 + 32) = v80[32];
    *(_OWORD *)((char *)v79 + 40) = *(_OWORD *)(v80 + 40);
    *((_QWORD *)v79 + 7) = *((_QWORD *)v80 + 7);
    *((_BYTE *)v79 + 64) = v80[64];
    *(_OWORD *)((char *)v79 + 113) = *(_OWORD *)(v80 + 113);
    *(_OWORD *)((char *)v79 + 104) = *(_OWORD *)(v80 + 104);
    *(_OWORD *)((char *)v79 + 88) = *(_OWORD *)(v80 + 88);
    *(_OWORD *)((char *)v79 + 72) = *(_OWORD *)(v80 + 72);
    *((_BYTE *)v79 + 129) = v80[129];
    v85 = v81[11];
    v86 = (char *)v79 + v85;
    v87 = &v80[v85];
    v88 = type metadata accessor for ArtworkCrop(0);
    v89 = v86;
    v77 = v275;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v89, v87, v88);
    *(_OWORD *)((char *)v79 + v81[12]) = *(_OWORD *)&v80[v81[12]];
    *((_BYTE *)v79 + v81[13]) = v80[v81[13]];
    *((_BYTE *)v79 + v81[14]) = v80[v81[14]];
    *((_BYTE *)v79 + v81[15]) = v80[v81[15]];
    *(_OWORD *)((char *)v79 + v81[16]) = *(_OWORD *)&v80[v81[16]];
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v82 + 56))(v79, 0, 1, v81);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v271 + 56))(v8, 0, 1, v77);
LABEL_37:
  v90 = a3[6];
  v91 = a3[7];
  v92 = (char *)a1 + v90;
  v93 = (char *)a2 + v90;
  *v92 = *v93;
  v92[1] = v93[1];
  *(_DWORD *)(v92 + 2) = *(_DWORD *)(v93 + 2);
  *((_WORD *)v92 + 3) = *((_WORD *)v93 + 3);
  *((_QWORD *)v92 + 1) = *((_QWORD *)v93 + 1);
  *(_QWORD *)((char *)a1 + v91) = *(_QWORD *)((char *)a2 + v91);
  swift_bridgeObjectRelease();
  v94 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  v97 = type metadata accessor for URL(0);
  v98 = *(_QWORD *)(v97 - 8);
  v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  v100 = v99(v95, 1, v97);
  v101 = v99(v96, 1, v97);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v96, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v97);
LABEL_42:
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v95, v96, v97);
LABEL_43:
  v103 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v103) = *((_BYTE *)a2 + v103);
  v104 = a3[12];
  v105 = (char *)a1 + v104;
  v106 = (char *)a2 + v104;
  if (*(_QWORD *)((char *)a1 + v104 + 24))
    __swift_destroy_boxed_opaque_existential_1(v105);
  v107 = *((_OWORD *)v106 + 1);
  *(_OWORD *)v105 = *(_OWORD *)v106;
  *((_OWORD *)v105 + 1) = v107;
  *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
  v108 = a3[13];
  v109 = (char *)a1 + v108;
  v110 = (char *)a2 + v108;
  v111 = type metadata accessor for ImpressionMetrics(0);
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
  v114 = v113(v109, 1, v111);
  v115 = v113(v110, 1, v111);
  if (!v114)
  {
    if (!v115)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 40))(v109, v110, v111);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v112 + 8))(v109, v111);
    goto LABEL_50;
  }
  if (v115)
  {
LABEL_50:
    v116 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v109, v110, v111);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModernShelf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1ED850);
}

uint64_t sub_1ED850(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[13];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ModernShelf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1ED92C);
}

uint64_t sub_1ED92C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[13];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1ED9F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  v8[0] = &unk_2FEA88;
  sub_3EE70(319, (unint64_t *)&unk_3C12E0, type metadata accessor for Header);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v8[2] = &unk_2FEAA0;
    v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[4] = &unk_2FEAB8;
    sub_3EE70(319, (unint64_t *)&qword_3B1C30, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    if (v5 <= 0x3F)
    {
      v8[5] = *(_QWORD *)(v4 - 8) + 64;
      v8[6] = &unk_2FEAD0;
      v8[7] = &unk_2FEAD0;
      v8[8] = &unk_2FEAE8;
      sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
      if (v7 <= 0x3F)
      {
        v8[9] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 10, v8, a1 + 16);
      }
    }
  }
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ModernShelf.Background(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ModernShelf.Background(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_1EDB68(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1EDB84(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernShelf.Background()
{
  return &type metadata for ModernShelf.Background;
}

uint64_t getEnumTagSinglePayload for ModernShelf.ItemPresentation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 1);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModernShelf.ItemPresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernShelf.ItemPresentation()
{
  return &type metadata for ModernShelf.ItemPresentation;
}

uint64_t storeEnumTagSinglePayload for ModernShelf.ItemPresentation.Orientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1EDC94 + 4 * byte_2FE815[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1EDCC8 + 4 * byte_2FE810[v4]))();
}

uint64_t sub_1EDCC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1EDCD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1EDCD8);
  return result;
}

uint64_t sub_1EDCE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1EDCECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1EDCF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1EDCF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModernShelf.ItemPresentation.Orientation()
{
  return &type metadata for ModernShelf.ItemPresentation.Orientation;
}

uint64_t ActionButton.init(id:title:icon:role:action:impressionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  char v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v14 = *a6;
  v15 = (int *)type metadata accessor for ActionButton(0);
  v16 = (uint64_t)a9 + v15[6];
  v17 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v15[7];
  *((_BYTE *)a9 + v18) = 2;
  v19 = (uint64_t)a9 + v15[9];
  v20 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_3C454(a5, v16, &qword_3BEB70);
  *((_BYTE *)a9 + v18) = v14;
  sub_F4D8(a7, (uint64_t)a9 + v15[8]);
  return sub_3C454(a8, v19, (uint64_t *)&unk_3B8790);
}

uint64_t type metadata accessor for ActionButton(uint64_t a1)
{
  uint64_t result;

  result = qword_3C1440;
  if (!qword_3C1440)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActionButton);
  return result;
}

uint64_t sub_1EDE64()
{
  uint64_t v0;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1018);
  result = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  off_3C1330 = (int *)result;
  return result;
}

uint64_t sub_1EDE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F181C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1EDEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F181C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

ShelfKit::ActionButton::Role_optional __swiftcall ActionButton.Role.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  Swift::Int v5;
  ShelfKit::ActionButton::Role_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375788, v3);
  result.value = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *v4 = v7;
  return result;
}

uint64_t ActionButton.Role.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7463757274736564;
  else
    return 0x6C65636E6163;
}

uint64_t sub_1EDFE4(char *a1, char *a2)
{
  return sub_1E2D18(*a1, *a2);
}

ShelfKit::ActionButton::Role_optional sub_1EDFF0(Swift::String *a1)
{
  return ActionButton.Role.init(rawValue:)(*a1);
}

uint64_t sub_1EDFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F17D8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1EE058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F17D8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t ActionButton.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionButton(0);
  return sub_267BC(v1 + *(int *)(v3 + 24), a1, &qword_3BEB70);
}

uint64_t ActionButton.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionButton(0);
  return sub_3C454(a1, v1 + *(int *)(v3 + 24), &qword_3BEB70);
}

void (__swiftcall *ActionButton.icon.modify())()
{
  type metadata accessor for ActionButton(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionButton.role.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActionButton(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ActionButton.role.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for ActionButton(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

void (__swiftcall *ActionButton.role.modify())()
{
  type metadata accessor for ActionButton(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionButton.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ActionButton(0) + 32);
  return sub_150C8(v3, a1);
}

uint64_t ActionButton.action.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ActionButton(0) + 32));
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_F4D8(a1, (uint64_t)v3);
}

void (__swiftcall *ActionButton.action.modify())()
{
  type metadata accessor for ActionButton(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionButton.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionButton(0);
  return sub_267BC(v1 + *(int *)(v3 + 36), a1, (uint64_t *)&unk_3B8790);
}

uint64_t ActionButton.impressionMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionButton(0);
  return sub_3C454(a1, v1 + *(int *)(v3 + 36), (uint64_t *)&unk_3B8790);
}

void (__swiftcall *ActionButton.impressionMetrics.modify())()
{
  type metadata accessor for ActionButton(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t ActionButton.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32[2];

  v31 = a2;
  v3 = (int *)type metadata accessor for ActionButton(0);
  __chkstk_darwin(v3);
  v5 = (unint64_t *)&v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_BYTE *)(a1 + 56);
  if (*(_QWORD *)(a1 + 8))
  {
    v13 = *(_QWORD *)a1;
    v29 = *(_QWORD *)(a1 + 8);
    v30 = v13;
  }
  else
  {
    v29 = 0xE000000000000000;
    v30 = 0;
  }
  if ((v12 & 1) != 0)
    v14 = 1;
  else
    v14 = 2;
  v28 = v14;
  v15 = type metadata accessor for ArtworkModel(0);
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v11, 1, 1, v15);
  sub_150C8(a1 + 16, (uint64_t)v32);
  v17 = type metadata accessor for LegacyActionButton(0);
  sub_267BC(a1 + *(int *)(v17 + 28), (uint64_t)v8, (uint64_t *)&unk_3B8790);
  swift_bridgeObjectRetain();
  v18 = _s8ShelfKit12ActionButtonV2IDVAEycfC_0();
  v20 = v19;
  v21 = (uint64_t)v5 + v3[6];
  v16((_BYTE *)v21, 1, 1, v15);
  v22 = v3[7];
  *((_BYTE *)v5 + v22) = 2;
  v23 = (uint64_t)v5 + v3[9];
  v24 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *v5 = v18;
  v5[1] = v20;
  v25 = v29;
  v5[2] = v30;
  v5[3] = v25;
  sub_3C454((uint64_t)v11, v21, &qword_3BEB70);
  *((_BYTE *)v5 + v22) = v28;
  sub_F4D8(v32, (uint64_t)v5 + v3[8]);
  sub_3C454((uint64_t)v8, v23, (uint64_t *)&unk_3B8790);
  sub_167290((uint64_t)v5, v31);
  return sub_145D8(a1, type metadata accessor for LegacyActionButton);
}

void sub_1EE544(char *a1)
{
  sub_1E2DC0(*a1);
}

void sub_1EE550()
{
  char *v0;

  sub_2D86B4(*v0);
}

void sub_1EE558(uint64_t a1)
{
  char *v1;

  sub_2D8D94(a1, *v1);
}

void sub_1EE560(uint64_t a1)
{
  char *v1;

  sub_2D8F00(a1, *v1);
}

unint64_t sub_1EE568@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1F1790(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1EE594()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1EE5B8 + 4 * byte_2FEB78[*v0]))();
}

void sub_1EE5B8(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_1EE5D0(_QWORD *a1@<X8>)
{
  *a1 = 1852793705;
  a1[1] = 0xE400000000000000;
}

void sub_1EE5E4(_QWORD *a1@<X8>)
{
  *a1 = 1701605234;
  a1[1] = 0xE400000000000000;
}

void sub_1EE5F8(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F69746361;
  a1[1] = 0xE600000000000000;
}

void sub_1EE610(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000000309180;
}

uint64_t sub_1EE630()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1EE654 + 4 * byte_2FEB7E[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1EE654()
{
  return 0x656C746974;
}

uint64_t sub_1EE668()
{
  return 1852793705;
}

uint64_t sub_1EE678()
{
  return 1701605234;
}

uint64_t sub_1EE688()
{
  return 0x6E6F69746361;
}

unint64_t sub_1EE69C()
{
  return 0xD000000000000011;
}

unint64_t sub_1EE6B8@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1F1790(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1EE6DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1EF6B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EE704(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1EF6B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ActionButton.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _BYTE *v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  _BYTE *v65;
  unint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _BYTE v75[4];
  int v76;
  _BYTE *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  unint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97[2];
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;

  v86 = a2;
  v87 = type metadata accessor for ActionButton(0);
  __chkstk_darwin(v87);
  v89 = &v75[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v4);
  v90 = &v75[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v6);
  v91 = &v75[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1338);
  __chkstk_darwin(v8);
  v88 = &v75[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v92 = &v75[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C68);
  v94 = *(_QWORD *)(v12 - 8);
  v95 = v12;
  __chkstk_darwin(v12);
  v93 = &v75[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C70);
  __chkstk_darwin(v14);
  v16 = &v75[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v19 = &v75[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1340);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v75[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = a1[3];
  v25 = a1[4];
  v100 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v26 = sub_1EF6B8();
  v27 = v96;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ActionButton.CodingKeys, &type metadata for ActionButton.CodingKeys, v26, v24, v25);
  if (!v27)
  {
    v84 = v26;
    v83 = v16;
    v85 = v19;
    v96 = v21;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1350);
    LOBYTE(v97[0]) = 0;
    v29 = sub_16138(&qword_3C1358, &qword_3C1350, (void (*)(void))sub_1EF6FC, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v28, v97, v20, v28, v29);
    v31 = v98;
    v30 = v99;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D20);
    LOBYTE(v97[0]) = 1;
    v33 = sub_16138(&qword_3C0D28, &qword_3C0D20, (void (*)(void))sub_1D04D4, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v32, v97, v20, v32, v33);
    v82 = v31;
    v35 = v98;
    v34 = v99;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0CA8);
    LOBYTE(v98) = 2;
    v37 = sub_16138(&qword_3C0CB0, &qword_3C0CA8, (void (*)(void))sub_1D0388, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v36, &v98, v20, v36, v37);
    v80 = v35;
    v81 = v34;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1370);
    LOBYTE(v97[0]) = 3;
    v40 = sub_16138(&qword_3C1378, &qword_3C1370, (void (*)(void))sub_1EF720, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v39, v97, v20, v39, v40);
    v79 = v30;
    v77 = v23;
    v78 = v20;
    v41 = v98;
    v43 = v100[3];
    v42 = v100[4];
    __swift_project_boxed_opaque_existential_1(v100, v43);
    v44 = dispatch thunk of Decoder.userInfo.getter(v43, v42);
    v45 = v93;
    static JSONContext.Property<A>.actionKindTable.getter(v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D00);
    Dictionary<>.subscript.getter(v45, v44, v46);
    (*(void (**)(_BYTE *, uint64_t))(v94 + 8))(v45, v95);
    v47 = *(ValueMetadata **)&v97[0];
    if (*(_QWORD *)&v97[0])
    {
      v48 = *((_QWORD *)&v97[0] + 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v47 = &type metadata for EmptyActionKinds;
      v48 = sub_1D044C();
    }
    LOBYTE(v97[0]) = 4;
    sub_2118F8((uint64_t)v77, (uint64_t)v47, (uint64_t)&type metadata for ActionButton.CodingKeys, v48, v84, (uint64_t)&v98);
    v49 = v78;
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1390);
    LOBYTE(v97[0]) = 5;
    v51 = sub_16138(&qword_3C1398, &qword_3C1390, (void (*)(void))sub_1EF744, (uint64_t)&protocol conformance descriptor for <A> DiscardOnError<A>);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v50, v97, v49, v50, v51);
    v52 = v79;
    v76 = v41;
    if (v79 < 2)
    {
      v53 = _s8ShelfKit12ActionButtonV2IDVAEycfC_0();
      v55 = v54;
      sub_1D0374(v82, v52);
      v82 = v53;
      v79 = v55;
    }
    v56 = v91;
    v57 = v81;
    v58 = v80;
    v59 = v89;
    v60 = (int *)v87;
    if (v81 < 2)
    {
      sub_1D0374(v80, v81);
      v58 = 0;
      v57 = 0xE000000000000000;
    }
    v61 = (uint64_t)v83;
    sub_267BC((uint64_t)v85, (uint64_t)v83, &qword_3C0C70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v61, 1, v36) == 1)
    {
      sub_1459C(v61, &qword_3C0C70);
      v62 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v56, 1, 1, v62);
    }
    else
    {
      sub_267BC(v61, (uint64_t)v56, &qword_3BEB70);
      sub_1459C(v61, &qword_3C0CA8);
    }
    v63 = v58;
    if (v76 == 3)
      v64 = 2;
    else
      v64 = v76;
    LODWORD(v95) = v64;
    sub_150C8((uint64_t)&v98, (uint64_t)v97);
    v65 = v88;
    sub_267BC((uint64_t)v92, (uint64_t)v88, &qword_3C1338);
    v66 = v57;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v65, 1, v50) == 1)
    {
      sub_1459C((uint64_t)v65, &qword_3C1338);
      v67 = type metadata accessor for ImpressionMetrics(0);
      v68 = v90;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v90, 1, 1, v67);
    }
    else
    {
      v68 = v90;
      sub_267BC((uint64_t)v65, (uint64_t)v90, (uint64_t *)&unk_3B8790);
      sub_1459C((uint64_t)v65, &qword_3C1390);
    }
    v69 = (uint64_t)v59 + v60[6];
    v70 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
    v71 = v60[7];
    *((_BYTE *)v59 + v71) = 2;
    v72 = (uint64_t)v59 + v60[9];
    v73 = type metadata accessor for ImpressionMetrics(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v72, 1, 1, v73);
    v74 = v79;
    *v59 = v82;
    v59[1] = v74;
    v59[2] = v63;
    v59[3] = v66;
    sub_3C454((uint64_t)v91, v69, &qword_3BEB70);
    *((_BYTE *)v59 + v71) = v95;
    sub_F4D8(v97, (uint64_t)v59 + v60[8]);
    sub_3C454((uint64_t)v68, v72, (uint64_t *)&unk_3B8790);
    sub_167290((uint64_t)v59, v86);
    sub_1459C((uint64_t)v92, &qword_3C1338);
    __swift_destroy_boxed_opaque_existential_1(&v98);
    sub_1459C((uint64_t)v85, &qword_3C0C70);
    (*(void (**)(_BYTE *, uint64_t))(v96 + 8))(v77, v78);
  }
  return __swift_destroy_boxed_opaque_existential_1(v100);
}

uint64_t ActionButton.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  ValueMetadata *v42;
  unint64_t v43;
  char v44;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C68);
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  __chkstk_darwin(v4);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C13A8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1EF6B8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ActionButton.CodingKeys, &type metadata for ActionButton.CodingKeys, v12, v10, v11);
  v13 = v1[1];
  v42 = (ValueMetadata *)*v1;
  v43 = v13;
  v44 = 0;
  sub_1EF7C0();
  v14 = v41;
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v42);
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v41 = a1;
  v15 = v7;
  v16 = v1[2];
  v17 = v1[3];
  LOBYTE(v42) = 1;
  KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v42, v6);
  v19 = (int *)type metadata accessor for ActionButton(0);
  v20 = (char *)v1 + v19[6];
  LOBYTE(v42) = 2;
  v21 = type metadata accessor for ArtworkModel(0);
  v22 = sub_F1C0(&qword_3BBA90, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v20, &v42, v6, v21, v22);
  LOBYTE(v42) = *((_BYTE *)v2 + v19[7]);
  v44 = 3;
  v23 = sub_1EF804();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v42, &v44, v6, &type metadata for ActionButton.Role, v23);
  v37 = v6;
  v25 = v41[3];
  v24 = v41[4];
  __swift_project_boxed_opaque_existential_1(v41, v25);
  v26 = dispatch thunk of Encoder.userInfo.getter(v25, v24);
  v27 = v38;
  static JSONContext.Property<A>.actionKindTable.getter(v26);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D00);
  Dictionary<>.subscript.getter(v27, v26, v28);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v40);
  v29 = v42;
  if (v42)
  {
    v30 = v43;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = &type metadata for EmptyActionKinds;
    v30 = sub_1D044C();
  }
  v31 = (uint64_t)v2 + v19[8];
  LOBYTE(v42) = 4;
  sub_211A5C(v31, (uint64_t)v9, (uint64_t)&v42, (uint64_t)v29, (uint64_t)v29, (uint64_t)&type metadata for ActionButton.CodingKeys, v30, v12);
  v32 = (char *)v2 + v19[9];
  LOBYTE(v42) = 5;
  v33 = type metadata accessor for ImpressionMetrics(0);
  v34 = sub_F1C0(&qword_3B3268, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
  v35 = v37;
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v32, &v42, v37, v33, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v9, v35);
}

uint64_t sub_1EF4C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionButton.init(from:)(a1, a2);
}

uint64_t sub_1EF4D8(_QWORD *a1)
{
  return ActionButton.encode(to:)(a1);
}

unint64_t ActionButton.ID.debugDescription.getter(uint64_t a1, void *a2)
{
  Swift::String v4;
  Swift::String v5;

  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRetain(a2);
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(a2);
  v5._countAndFlagsBits = 10530;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  return 0xD00000000000001BLL;
}

unint64_t sub_1EF588()
{
  uint64_t v0;

  return ActionButton.ID.debugDescription.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

_QWORD *sub_1EF590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;

  result = sub_45450(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_1EF5B8@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_45794(a1, a2, a3);
}

uint64_t sub_1EF5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_45AB0(a1, a2, a3);
}

unint64_t _s8ShelfKit12ActionButtonV2IDVAEycfC_0()
{
  unint64_t *v0;
  unint64_t v1;
  Swift::String v2;

  if (qword_3B01B8 != -1)
    swift_once(&qword_3B01B8, sub_1EDE64);
  v0 = (unint64_t *)(*(uint64_t (**)(void))(*(_QWORD *)off_3C1330 + 136))();
  do
    v1 = __ldaxr(v0);
  while (__stlxr(v1 + 1, v0));
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

unint64_t sub_1EF6B8()
{
  unint64_t result;

  result = qword_3C1348;
  if (!qword_3C1348)
  {
    result = swift_getWitnessTable(&unk_2FF15C);
    atomic_store(result, (unint64_t *)&qword_3C1348);
  }
  return result;
}

uint64_t sub_1EF6FC()
{
  return sub_16138(&qword_3C1360, &qword_3C1368, (void (*)(void))sub_55ADC, (uint64_t)&protocol conformance descriptor for <A> A?);
}

uint64_t sub_1EF720()
{
  return sub_16138(&qword_3C1380, &qword_3C1388, (void (*)(void))sub_55A98, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_1EF744()
{
  unint64_t result;

  result = qword_3C13A0;
  if (!qword_3C13A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3B8790);
    sub_F1C0(&qword_3B3280, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?);
    atomic_store(result, (unint64_t *)&qword_3C13A0);
  }
  return result;
}

unint64_t sub_1EF7C0()
{
  unint64_t result;

  result = qword_3C13B0;
  if (!qword_3C13B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.ID);
    atomic_store(result, (unint64_t *)&qword_3C13B0);
  }
  return result;
}

unint64_t sub_1EF804()
{
  unint64_t result;

  result = qword_3C13B8;
  if (!qword_3C13B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.Role);
    atomic_store(result, (unint64_t *)&qword_3C13B8);
  }
  return result;
}

unint64_t sub_1EF84C()
{
  unint64_t result;

  result = qword_3C13C0;
  if (!qword_3C13C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.ID);
    atomic_store(result, (unint64_t *)&qword_3C13C0);
  }
  return result;
}

unint64_t sub_1EF894()
{
  unint64_t result;

  result = qword_3C13C8;
  if (!qword_3C13C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.Role);
    atomic_store(result, (unint64_t *)&qword_3C13C8);
  }
  return result;
}

unint64_t sub_1EF8DC()
{
  unint64_t result;

  result = qword_3C13D0;
  if (!qword_3C13D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.ID);
    atomic_store(result, (unint64_t *)&qword_3C13D0);
  }
  return result;
}

unint64_t sub_1EF924()
{
  unint64_t result;

  result = qword_3C13D8;
  if (!qword_3C13D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.ID);
    atomic_store(result, (unint64_t *)&qword_3C13D8);
  }
  return result;
}

unint64_t sub_1EF96C()
{
  unint64_t result;

  result = qword_3C13E0;
  if (!qword_3C13E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.ID);
    atomic_store(result, (unint64_t *)&qword_3C13E0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v19 = v11[2];
        v20 = v11[3];
        sub_3D464(v19, v20, v18);
        v10[2] = v19;
        v10[3] = v20;
        *((_BYTE *)v10 + 32) = v18;
      }
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v21 = (id *)(v11 + 7);
      v22 = *((unsigned __int8 *)v11 + 64);
      if (v22 == 255)
      {
        v10[7] = *v21;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)v11 + 64));
        v10[7] = v23;
        *((_BYTE *)v10 + 64) = v22;
      }
      v24 = (id *)(v11 + 9);
      v25 = *((unsigned __int8 *)v11 + 80);
      if (v25 == 255)
      {
        v10[9] = *v24;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)v11 + 80));
        v10[9] = v26;
        *((_BYTE *)v10 + 80) = v25;
      }
      v27 = (id *)(v11 + 11);
      v28 = *((unsigned __int8 *)v11 + 96);
      if (v28 == 255)
      {
        v10[11] = *v27;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)v11 + 96));
        v10[11] = v29;
        *((_BYTE *)v10 + 96) = v28;
      }
      v30 = (id *)(v11 + 13);
      v31 = *((unsigned __int8 *)v11 + 112);
      if (v31 == 255)
      {
        v10[13] = *v30;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)v11 + 112));
        v10[13] = v32;
        *((_BYTE *)v10 + 112) = v31;
      }
      v33 = (id *)(v11 + 15);
      v34 = *((unsigned __int8 *)v11 + 128);
      if (v34 == 255)
      {
        v10[15] = *v33;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)v11 + 128));
        v10[15] = v35;
        *((_BYTE *)v10 + 128) = v34;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v36 = v12[11];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v12[12];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (_QWORD *)((char *)v11 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v10, 0, 1, v12);
    }
    v49 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v50 = *(_OWORD *)((char *)a2 + v49 + 24);
    *(_OWORD *)((char *)v4 + v49 + 24) = v50;
    (**(void (***)(void))(v50 - 8))();
    v51 = a3[9];
    v52 = (char *)v4 + v51;
    v53 = (char *)a2 + v51;
    v54 = type metadata accessor for ImpressionMetrics(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
  }
  return v4;
}

uint64_t destroy for ActionButton(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + a2[8]));
  v14 = a1 + a2[9];
  v15 = type metadata accessor for ImpressionMetrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  return result;
}

_QWORD *initializeWithCopy for ActionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v16 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v17 = v10[2];
      v18 = v10[3];
      sub_3D464(v17, v18, v16);
      v9[2] = v17;
      v9[3] = v18;
      *((_BYTE *)v9 + 32) = v16;
    }
    *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
    v19 = (id *)(v10 + 7);
    v20 = *((unsigned __int8 *)v10 + 64);
    if (v20 == 255)
    {
      v9[7] = *v19;
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, *((_BYTE *)v10 + 64));
      v9[7] = v21;
      *((_BYTE *)v9 + 64) = v20;
    }
    v22 = (id *)(v10 + 9);
    v23 = *((unsigned __int8 *)v10 + 80);
    if (v23 == 255)
    {
      v9[9] = *v22;
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v24 = *v22;
      sub_3D47C(*v22, *((_BYTE *)v10 + 80));
      v9[9] = v24;
      *((_BYTE *)v9 + 80) = v23;
    }
    v25 = (id *)(v10 + 11);
    v26 = *((unsigned __int8 *)v10 + 96);
    if (v26 == 255)
    {
      v9[11] = *v25;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v27 = *v25;
      sub_3D47C(*v25, *((_BYTE *)v10 + 96));
      v9[11] = v27;
      *((_BYTE *)v9 + 96) = v26;
    }
    v28 = (id *)(v10 + 13);
    v29 = *((unsigned __int8 *)v10 + 112);
    if (v29 == 255)
    {
      v9[13] = *v28;
      *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v30 = *v28;
      sub_3D47C(*v28, *((_BYTE *)v10 + 112));
      v9[13] = v30;
      *((_BYTE *)v9 + 112) = v29;
    }
    v31 = (id *)(v10 + 15);
    v32 = *((unsigned __int8 *)v10 + 128);
    if (v32 == 255)
    {
      v9[15] = *v31;
      *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v33 = *v31;
      sub_3D47C(*v31, *((_BYTE *)v10 + 128));
      v9[15] = v33;
      *((_BYTE *)v9 + 128) = v32;
    }
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v34 = v11[11];
    v35 = (char *)v9 + v34;
    v36 = (char *)v10 + v34;
    v37 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    v38 = v11[12];
    v39 = (_QWORD *)((char *)v9 + v38);
    v40 = (_QWORD *)((char *)v10 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v42 = v11[16];
    v43 = (_QWORD *)((char *)v9 + v42);
    v44 = (_QWORD *)((char *)v10 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v9, 0, 1, v11);
  }
  v47 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v48 = *(_OWORD *)((char *)a2 + v47 + 24);
  *(_OWORD *)((char *)a1 + v47 + 24) = v48;
  (**(void (***)(void))(v48 - 8))();
  v49 = a3[9];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = type metadata accessor for ImpressionMetrics(0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  return a1;
}

_QWORD *assignWithCopy for ActionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  id *v62;
  id *v63;
  int v64;
  id v65;
  void *v66;
  char v67;
  id v68;
  char v69;
  id v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  int v123;
  int v124;
  uint64_t v125;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v26 = *((_OWORD *)v8 + 1);
        *(_BYTE *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_3D464(v15, v16, v14);
        *(_QWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 24) = v16;
        *(_BYTE *)(v7 + 32) = v14;
      }
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      v27 = (id *)(v8 + 56);
      v28 = v8[64];
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(v7 + 64) = v8[64];
        *(_QWORD *)(v7 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, v8[64]);
        *(_QWORD *)(v7 + 56) = v29;
        *(_BYTE *)(v7 + 64) = v28;
      }
      v31 = (id *)(v8 + 72);
      v32 = v8[80];
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v7 + 80) = v8[80];
        *(_QWORD *)(v7 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, v8[80]);
        *(_QWORD *)(v7 + 72) = v33;
        *(_BYTE *)(v7 + 80) = v32;
      }
      v35 = (id *)(v8 + 88);
      v36 = v8[96];
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v7 + 96) = v8[96];
        *(_QWORD *)(v7 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v8[96]);
        *(_QWORD *)(v7 + 88) = v37;
        *(_BYTE *)(v7 + 96) = v36;
      }
      v39 = (id *)(v8 + 104);
      v40 = v8[112];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v7 + 112) = v8[112];
        *(_QWORD *)(v7 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, v8[112]);
        *(_QWORD *)(v7 + 104) = v41;
        *(_BYTE *)(v7 + 112) = v40;
      }
      v43 = (id *)(v8 + 120);
      v44 = v8[128];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v7 + 128) = v8[128];
        *(_QWORD *)(v7 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, v8[128]);
        *(_QWORD *)(v7 + 120) = v45;
        *(_BYTE *)(v7 + 128) = v44;
      }
      *(_BYTE *)(v7 + 129) = v8[129];
      v47 = v9[11];
      v48 = v7 + v47;
      v49 = &v8[v47];
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v9[12];
      v52 = (_QWORD *)(v7 + v51);
      v53 = &v8[v51];
      *v52 = *(_QWORD *)v53;
      v52[1] = *((_QWORD *)v53 + 1);
      *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
      *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
      *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
      v54 = v9[16];
      v55 = (_QWORD *)(v7 + v54);
      v56 = &v8[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_145D8(v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(v7 + 16);
  v19 = (__int128 *)(v8 + 16);
  v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      v61 = *v19;
      *(_BYTE *)(v7 + 32) = v8[32];
      *v18 = v61;
    }
    else
    {
      v58 = *((_QWORD *)v8 + 2);
      v59 = *((_QWORD *)v8 + 3);
      sub_3D464(v58, v59, v8[32]);
      *(_QWORD *)(v7 + 16) = v58;
      *(_QWORD *)(v7 + 24) = v59;
      *(_BYTE *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E43C(v7 + 16);
    v60 = v8[32];
    *v18 = *v19;
    *(_BYTE *)(v7 + 32) = v60;
  }
  else
  {
    v21 = *((_QWORD *)v8 + 2);
    v22 = *((_QWORD *)v8 + 3);
    sub_3D464(v21, v22, v8[32]);
    v23 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    *(_QWORD *)(v7 + 24) = v22;
    v25 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v7 + 32) = v20;
    sub_3B5BC(v23, v24, v25);
  }
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v62 = (id *)(v7 + 56);
  v63 = (id *)(v8 + 56);
  v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      v70 = *v63;
      *(_BYTE *)(v7 + 64) = v8[64];
      *v62 = v70;
    }
    else
    {
      v68 = *v63;
      sub_3D47C(*v63, v8[64]);
      *(_QWORD *)(v7 + 56) = v68;
      *(_BYTE *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_3E470(v7 + 56);
    v69 = v8[64];
    *v62 = *v63;
    *(_BYTE *)(v7 + 64) = v69;
  }
  else
  {
    v65 = *v63;
    sub_3D47C(*v63, v8[64]);
    v66 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v65;
    v67 = *(_BYTE *)(v7 + 64);
    *(_BYTE *)(v7 + 64) = v64;
    sub_3D624(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v7 + 80) = v8[80];
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_3D47C(*v72, v8[80]);
      *(_QWORD *)(v7 + 72) = v77;
      *(_BYTE *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_3E470(v7 + 72);
    v78 = v8[80];
    *v71 = *v72;
    *(_BYTE *)(v7 + 80) = v78;
  }
  else
  {
    v74 = *v72;
    sub_3D47C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(_QWORD *)(v7 + 72) = v74;
    v76 = *(_BYTE *)(v7 + 80);
    *(_BYTE *)(v7 + 80) = v73;
    sub_3D624(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v7 + 96) = v8[96];
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_3D47C(*v81, v8[96]);
      *(_QWORD *)(v7 + 88) = v86;
      *(_BYTE *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_3E470(v7 + 88);
    v87 = v8[96];
    *v80 = *v81;
    *(_BYTE *)(v7 + 96) = v87;
  }
  else
  {
    v83 = *v81;
    sub_3D47C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v83;
    v85 = *(_BYTE *)(v7 + 96);
    *(_BYTE *)(v7 + 96) = v82;
    sub_3D624(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v7 + 112) = v8[112];
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_3D47C(*v90, v8[112]);
      *(_QWORD *)(v7 + 104) = v95;
      *(_BYTE *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_3E470(v7 + 104);
    v96 = v8[112];
    *v89 = *v90;
    *(_BYTE *)(v7 + 112) = v96;
  }
  else
  {
    v92 = *v90;
    sub_3D47C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(_QWORD *)(v7 + 104) = v92;
    v94 = *(_BYTE *)(v7 + 112);
    *(_BYTE *)(v7 + 112) = v91;
    sub_3D624(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v7 + 128) = v8[128];
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_3D47C(*v99, v8[128]);
      *(_QWORD *)(v7 + 120) = v104;
      *(_BYTE *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_3E470(v7 + 120);
    v105 = v8[128];
    *v98 = *v99;
    *(_BYTE *)(v7 + 128) = v105;
  }
  else
  {
    v101 = *v99;
    sub_3D47C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(_QWORD *)(v7 + 120) = v101;
    v103 = *(_BYTE *)(v7 + 128);
    *(_BYTE *)(v7 + 128) = v100;
    sub_3D624(v102, v103);
  }
  *(_BYTE *)(v7 + 129) = v8[129];
  v107 = v9[11];
  v108 = v7 + v107;
  v109 = &v8[v107];
  v110 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = v9[12];
  v112 = (_QWORD *)(v7 + v111);
  v113 = &v8[v111];
  *v112 = *(_QWORD *)v113;
  v112[1] = *((_QWORD *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
  *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
  *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
  v114 = v9[16];
  v115 = (_QWORD *)(v7 + v114);
  v116 = &v8[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[8]), (_QWORD *)((char *)a2 + a3[8]));
  v117 = a3[9];
  v118 = (char *)a1 + v117;
  v119 = (char *)a2 + v117;
  v120 = type metadata accessor for ImpressionMetrics(0);
  v121 = *(_QWORD *)(v120 - 8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48);
  v123 = v122(v118, 1, v120);
  v124 = v122(v119, 1, v120);
  if (!v123)
  {
    if (!v124)
    {
      (*(void (**)(char *, char *, uint64_t))(v121 + 24))(v118, v119, v120);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v121 + 8))(v118, v120);
    goto LABEL_73;
  }
  if (v124)
  {
LABEL_73:
    v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
  return a1;
}

_OWORD *initializeWithTake for ActionButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v14 = v10[11];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for ImpressionMetrics(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

_QWORD *assignWithTake for ActionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v35;
  _OWORD *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int v42;
  int v43;
  void *v44;
  _QWORD *v45;
  int v46;
  int v47;
  void *v48;
  _QWORD *v49;
  int v50;
  int v51;
  void *v52;
  _QWORD *v53;
  int v54;
  int v55;
  void *v56;
  _QWORD *v57;
  int v58;
  int v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v16;
      *(_BYTE *)(v9 + 32) = v10[32];
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);
      *(_BYTE *)(v9 + 64) = v10[64];
      *(_OWORD *)(v9 + 113) = *(_OWORD *)(v10 + 113);
      *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
      *(_BYTE *)(v9 + 129) = v10[129];
      v17 = v11[11];
      v18 = v9 + v17;
      v19 = &v10[v17];
      v20 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      *(_OWORD *)(v9 + v11[12]) = *(_OWORD *)&v10[v11[12]];
      *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
      *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
      *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
      *(_OWORD *)(v9 + v11[16]) = *(_OWORD *)&v10[v11[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_145D8(v9, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v35 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v35;
  swift_bridgeObjectRelease();
  v36 = v10 + 16;
  v37 = *(unsigned __int8 *)(v9 + 32);
  if (v37 != 255)
  {
    v38 = v10[32];
    if (v38 != 255)
    {
      v39 = *(_QWORD *)(v9 + 16);
      v40 = *(_QWORD *)(v9 + 24);
      *(_OWORD *)(v9 + 16) = *v36;
      *(_BYTE *)(v9 + 32) = v38;
      sub_3B5BC(v39, v40, v37);
      goto LABEL_20;
    }
    sub_3E43C(v9 + 16);
  }
  *(_OWORD *)(v9 + 16) = *v36;
  *(_BYTE *)(v9 + 32) = v10[32];
LABEL_20:
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  v41 = v10 + 56;
  v42 = *(unsigned __int8 *)(v9 + 64);
  if (v42 != 255)
  {
    v43 = v10[64];
    if (v43 != 255)
    {
      v44 = *(void **)(v9 + 56);
      *(_QWORD *)(v9 + 56) = *v41;
      *(_BYTE *)(v9 + 64) = v43;
      sub_3D624(v44, v42);
      goto LABEL_25;
    }
    sub_3E470(v9 + 56);
  }
  *(_QWORD *)(v9 + 56) = *v41;
  *(_BYTE *)(v9 + 64) = v10[64];
LABEL_25:
  v45 = v10 + 72;
  v46 = *(unsigned __int8 *)(v9 + 80);
  if (v46 != 255)
  {
    v47 = v10[80];
    if (v47 != 255)
    {
      v48 = *(void **)(v9 + 72);
      *(_QWORD *)(v9 + 72) = *v45;
      *(_BYTE *)(v9 + 80) = v47;
      sub_3D624(v48, v46);
      goto LABEL_30;
    }
    sub_3E470(v9 + 72);
  }
  *(_QWORD *)(v9 + 72) = *v45;
  *(_BYTE *)(v9 + 80) = v10[80];
LABEL_30:
  v49 = v10 + 88;
  v50 = *(unsigned __int8 *)(v9 + 96);
  if (v50 != 255)
  {
    v51 = v10[96];
    if (v51 != 255)
    {
      v52 = *(void **)(v9 + 88);
      *(_QWORD *)(v9 + 88) = *v49;
      *(_BYTE *)(v9 + 96) = v51;
      sub_3D624(v52, v50);
      goto LABEL_35;
    }
    sub_3E470(v9 + 88);
  }
  *(_QWORD *)(v9 + 88) = *v49;
  *(_BYTE *)(v9 + 96) = v10[96];
LABEL_35:
  v53 = v10 + 104;
  v54 = *(unsigned __int8 *)(v9 + 112);
  if (v54 != 255)
  {
    v55 = v10[112];
    if (v55 != 255)
    {
      v56 = *(void **)(v9 + 104);
      *(_QWORD *)(v9 + 104) = *v53;
      *(_BYTE *)(v9 + 112) = v55;
      sub_3D624(v56, v54);
      goto LABEL_40;
    }
    sub_3E470(v9 + 104);
  }
  *(_QWORD *)(v9 + 104) = *v53;
  *(_BYTE *)(v9 + 112) = v10[112];
LABEL_40:
  v57 = v10 + 120;
  v58 = *(unsigned __int8 *)(v9 + 128);
  if (v58 == 255)
  {
LABEL_44:
    *(_QWORD *)(v9 + 120) = *v57;
    *(_BYTE *)(v9 + 128) = v10[128];
    goto LABEL_45;
  }
  v59 = v10[128];
  if (v59 == 255)
  {
    sub_3E470(v9 + 120);
    goto LABEL_44;
  }
  v60 = *(void **)(v9 + 120);
  *(_QWORD *)(v9 + 120) = *v57;
  *(_BYTE *)(v9 + 128) = v59;
  sub_3D624(v60, v58);
LABEL_45:
  *(_BYTE *)(v9 + 129) = v10[129];
  v61 = v11[11];
  v62 = v9 + v61;
  v63 = &v10[v61];
  v64 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  v65 = v11[12];
  v66 = (_QWORD *)(v9 + v65);
  v67 = &v10[v65];
  v69 = *(_QWORD *)v67;
  v68 = *((_QWORD *)v67 + 1);
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
  *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
  *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
  v70 = v11[16];
  v71 = (_QWORD *)(v9 + v70);
  v72 = &v10[v70];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
LABEL_7:
  v22 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v22));
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for ImpressionMetrics(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  LODWORD(v24) = v31(v27, 1, v29);
  v32 = v31(v28, 1, v29);
  if (!(_DWORD)v24)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v27, v28, v29);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F12F4);
}

uint64_t sub_1F12F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ActionButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F13A8);
}

uint64_t sub_1F13A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1F144C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_2FF008;
  v6[1] = &unk_2FF008;
  sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_2FF020;
    v6[4] = &unk_2FF038;
    sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

ValueMetadata *type metadata accessor for ActionButton.ID()
{
  return &type metadata for ActionButton.ID;
}

uint64_t storeEnumTagSinglePayload for ActionButton.Role(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1F156C + 4 * byte_2FEB89[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1F15A0 + 4 * byte_2FEB84[v4]))();
}

uint64_t sub_1F15A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F15A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1F15B0);
  return result;
}

uint64_t sub_1F15BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1F15C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1F15C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F15D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionButton.Role()
{
  return &type metadata for ActionButton.Role;
}

uint64_t storeEnumTagSinglePayload for ActionButton.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1F1638 + 4 * byte_2FEB93[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1F166C + 4 * byte_2FEB8E[v4]))();
}

uint64_t sub_1F166C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F1674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1F167CLL);
  return result;
}

uint64_t sub_1F1688(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1F1690);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1F1694(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1F169C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionButton.CodingKeys()
{
  return &type metadata for ActionButton.CodingKeys;
}

unint64_t sub_1F16BC()
{
  unint64_t result;

  result = qword_3C1488;
  if (!qword_3C1488)
  {
    result = swift_getWitnessTable(&unk_2FF134);
    atomic_store(result, (unint64_t *)&qword_3C1488);
  }
  return result;
}

unint64_t sub_1F1704()
{
  unint64_t result;

  result = qword_3C1490;
  if (!qword_3C1490)
  {
    result = swift_getWitnessTable(&unk_2FF06C);
    atomic_store(result, (unint64_t *)&qword_3C1490);
  }
  return result;
}

unint64_t sub_1F174C()
{
  unint64_t result;

  result = qword_3C1498;
  if (!qword_3C1498)
  {
    result = swift_getWitnessTable(&unk_2FF094);
    atomic_store(result, (unint64_t *)&qword_3C1498);
  }
  return result;
}

unint64_t sub_1F1790(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_3757D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t sub_1F17D8()
{
  unint64_t result;

  result = qword_3C14A0;
  if (!qword_3C14A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.Role);
    atomic_store(result, (unint64_t *)&qword_3C14A0);
  }
  return result;
}

unint64_t sub_1F181C()
{
  unint64_t result;

  result = qword_3C14A8;
  if (!qword_3C14A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionButton.ID);
    atomic_store(result, (unint64_t *)&qword_3C14A8);
  }
  return result;
}

unint64_t static UpNextScoringWeightsIntent.kind.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1F187C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1F19B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F18A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1F19B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1F18CC(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000000002FF190;
}

uint64_t UpNextScoringWeightsIntent.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C14B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v8 = sub_1F19B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for UpNextScoringWeightsIntent.CodingKeys, &type metadata for UpNextScoringWeightsIntent.CodingKeys, v8, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1F19B0()
{
  unint64_t result;

  result = qword_3C14B8;
  if (!qword_3C14B8)
  {
    result = swift_getWitnessTable(&unk_2FF318);
    atomic_store(result, (unint64_t *)&qword_3C14B8);
  }
  return result;
}

unint64_t sub_1F19F8()
{
  unint64_t result;

  result = qword_3C14C0;
  if (!qword_3C14C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UpNextScoringWeightsIntent);
    atomic_store(result, (unint64_t *)&qword_3C14C0);
  }
  return result;
}

unint64_t sub_1F1A44()
{
  unint64_t result;

  result = qword_3C14C8;
  if (!qword_3C14C8)
  {
    type metadata accessor for UpNextScoringWeights();
    result = swift_getWitnessTable(&protocol conformance descriptor for UpNextScoringWeights);
    atomic_store(result, (unint64_t *)&qword_3C14C8);
  }
  return result;
}

uint64_t sub_1F1A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F1B98();
  return CustomJSValueConvertible<>.jsRepresentation(in:)(a1, a2, a3, v6);
}

ValueMetadata *type metadata accessor for UpNextScoringWeightsIntent()
{
  return &type metadata for UpNextScoringWeightsIntent;
}

ValueMetadata *type metadata accessor for UpNextScoringWeightsIntent.CodingKeys()
{
  return &type metadata for UpNextScoringWeightsIntent.CodingKeys;
}

unint64_t sub_1F1B0C()
{
  unint64_t result;

  result = qword_3C14D0;
  if (!qword_3C14D0)
  {
    result = swift_getWitnessTable(&unk_2FF2C8);
    atomic_store(result, (unint64_t *)&qword_3C14D0);
  }
  return result;
}

unint64_t sub_1F1B54()
{
  unint64_t result;

  result = qword_3C14D8;
  if (!qword_3C14D8)
  {
    result = swift_getWitnessTable(&unk_2FF2F0);
    atomic_store(result, (unint64_t *)&qword_3C14D8);
  }
  return result;
}

unint64_t sub_1F1B98()
{
  unint64_t result;

  result = qword_3C14E0;
  if (!qword_3C14E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UpNextScoringWeightsIntent);
    atomic_store(result, (unint64_t *)&qword_3C14E0);
  }
  return result;
}

uint64_t LegacyActionMenu.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v67 = a2;
  v59 = a3;
  v58 = type metadata accessor for LegacyActionMenu(0);
  __chkstk_darwin(v58);
  v57 = (uint64_t *)((char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = type metadata accessor for JSONContext(0);
  v5 = *(_QWORD *)(v63 - 8);
  v6 = __chkstk_darwin(v63);
  v66 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (char *)&v54 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONObject(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v60 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v54 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v54 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v54 - v22;
  v24 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v56 = JSONObject.string.getter(v24);
  v65 = v25;
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v23, v12);
  v27 = JSONObject.subscript.getter(0x726F737365636361, 0xED00007478655479);
  v55 = JSONObject.string.getter(v27);
  v61 = v28;
  v69 = v12;
  v29 = v12;
  v30 = (uint64_t)v11;
  v64 = (void (*)(uint64_t, uint64_t))v26;
  v26(v21, v29);
  v31 = type metadata accessor for ArtworkModel(0);
  JSONObject.subscript.getter(0x6B726F77747261, 0xE700000000000000);
  v70 = v5;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v33 = v62;
  v34 = v63;
  v35 = v67;
  v32(v62, v67, v63);
  v36 = v34;
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  v37 = v18;
  v38 = v35;
  ExpressibleByJSON.init(tryDeserializing:using:)(v37, v33, v31);
  v39 = v60;
  JSONObject.subscript.getter(0x6C696843756E656DLL, 0xEC0000006E657264);
  v40 = v66;
  v32(v66, v35, v36);
  v41 = type metadata accessor for LegacyActionMenu.Child(0);
  v42 = sub_F1C0(&qword_3C14E8, (void (*)(uint64_t))type metadata accessor for LegacyActionMenu.Child, (uint64_t)&protocol conformance descriptor for LegacyActionMenu.Child);
  v43 = v68;
  v44 = Array<A>.init(deserializing:using:)(v39, v40, v41, v42);
  if (v43)
  {
    swift_bridgeObjectRelease(v61);
    swift_bridgeObjectRelease(v65);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v38, v36);
    v64(a1, v69);
    return sub_59040(v30);
  }
  else
  {
    v46 = v44;
    v47 = v58;
    v48 = *(int *)(v58 + 24);
    v49 = v36;
    v68 = v30;
    v50 = v57;
    v51 = (uint64_t)v57 + v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))((char *)v57 + v48, 1, 1, v31);
    v52 = v65;
    *v50 = v56;
    v50[1] = v52;
    v53 = v61;
    v50[2] = v55;
    v50[3] = v53;
    sub_48E00(v68, v51);
    *(uint64_t *)((char *)v50 + *(int *)(v47 + 28)) = v46;
    sub_3C56C((uint64_t)v50, v59, type metadata accessor for LegacyActionMenu);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v38, v49);
    return ((uint64_t (*)(uint64_t, uint64_t))v64)(a1, v69);
  }
}

uint64_t type metadata accessor for LegacyActionMenu(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C1548, (uint64_t)&nominal type descriptor for LegacyActionMenu);
}

uint64_t type metadata accessor for LegacyActionMenu.Child(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C15E0, (uint64_t)&nominal type descriptor for LegacyActionMenu.Child);
}

uint64_t LegacyActionMenu.Child.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LegacyActionMenu.Child(0) + 20);
  return sub_14554(v3, a1);
}

uint64_t LegacyActionMenu.Child.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LegacyActionMenu.Child(0) + 20);
  return sub_48E00(a1, v3);
}

void (__swiftcall *LegacyActionMenu.Child.icon.modify())()
{
  type metadata accessor for LegacyActionMenu.Child(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t LegacyActionMenu.Child.presentation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LegacyActionMenu.Child(0) + 24));
}

uint64_t LegacyActionMenu.Child.presentation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LegacyActionMenu.Child(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

void (__swiftcall *LegacyActionMenu.Child.presentation.modify())()
{
  type metadata accessor for LegacyActionMenu.Child(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t LegacyActionMenu.Child.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LegacyActionMenu.Child(0) + 28);
  return sub_150C8(v3, a1);
}

uint64_t LegacyActionMenu.Child.action.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for LegacyActionMenu.Child(0) + 28));
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_F4D8(a1, (uint64_t)v3);
}

void (__swiftcall *LegacyActionMenu.Child.action.modify())()
{
  type metadata accessor for LegacyActionMenu.Child(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t LegacyActionMenu.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LegacyActionMenu(0) + 24);
  return sub_14554(v3, a1);
}

uint64_t LegacyActionMenu.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LegacyActionMenu(0) + 24);
  return sub_48E00(a1, v3);
}

void (__swiftcall *LegacyActionMenu.icon.modify())()
{
  type metadata accessor for LegacyActionMenu(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t LegacyActionMenu.children.getter()
{
  type metadata accessor for LegacyActionMenu(0);
  return swift_bridgeObjectRetain();
}

uint64_t LegacyActionMenu.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for LegacyActionMenu(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

void (__swiftcall *LegacyActionMenu.children.modify())()
{
  type metadata accessor for LegacyActionMenu(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t LegacyActionMenu.Child.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  unsigned __int8 v50;
  unsigned __int8 v51;

  v42 = a2;
  v40 = a3;
  v38 = type metadata accessor for LegacyActionMenu.Child(0);
  __chkstk_darwin(v38);
  v39 = (uint64_t *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for JSONContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v41 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONObject(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - v16;
  v18 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v37 = JSONObject.string.getter(v18);
  v43 = v19;
  v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v46 = v11;
  v44 = v20;
  v20((uint64_t)v17, v11);
  v21 = type metadata accessor for ArtworkModel(0);
  JSONObject.subscript.getter(0x6B726F77747261, 0xE700000000000000);
  v47 = v6;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v23 = v42;
  v22(v8, v42, v5);
  v24 = (uint64_t)v41;
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  ExpressibleByJSON.init(tryDeserializing:using:)(v14, v8, v21);
  JSONObject.subscript.getter(0xD000000000000011, 0x800000000030B110);
  v48 = v5;
  v22(v8, v23, v5);
  sub_3CFF0();
  ExpressibleByJSON.init(tryDeserializing:using:)(v14, v8, &type metadata for Link.Presentation);
  v25 = v50;
  v26 = v51;
  v27 = v45;
  static AnyActionTypes.makeInstance(byDeserializing:using:)(v49, a1, v23);
  if (v27)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v23, v48);
    v44(a1, v46);
    return sub_59040(v24);
  }
  else
  {
    v29 = v24;
    v30 = v38;
    v31 = v39;
    v32 = *(int *)(v38 + 20);
    LODWORD(v45) = v25;
    v33 = (uint64_t)v39 + v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))((char *)v39 + v32, 1, 1, v21);
    v34 = v43;
    *v31 = v37;
    v31[1] = v34;
    sub_1F267C(v29, v33);
    if (v26)
      v35 = 0;
    else
      v35 = v45;
    sub_59040(v29);
    *((_BYTE *)v31 + *(int *)(v30 + 24)) = v35;
    sub_F4D8(v49, (uint64_t)v31 + *(int *)(v30 + 28));
    sub_3C56C((uint64_t)v31, v40, type metadata accessor for LegacyActionMenu.Child);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v23, v48);
    return ((uint64_t (*)(uint64_t, uint64_t))v44)(a1, v46);
  }
}

uint64_t sub_1F2654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return LegacyActionMenu.Child.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_1F2668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return LegacyActionMenu.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_1F267C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for LegacyActionMenu(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v19 = v11[2];
        v20 = v11[3];
        sub_3D464(v19, v20, v18);
        v10[2] = v19;
        v10[3] = v20;
        *((_BYTE *)v10 + 32) = v18;
      }
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v21 = (id *)(v11 + 7);
      v22 = *((unsigned __int8 *)v11 + 64);
      if (v22 == 255)
      {
        v10[7] = *v21;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)v11 + 64));
        v10[7] = v23;
        *((_BYTE *)v10 + 64) = v22;
      }
      v24 = (id *)(v11 + 9);
      v25 = *((unsigned __int8 *)v11 + 80);
      if (v25 == 255)
      {
        v10[9] = *v24;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)v11 + 80));
        v10[9] = v26;
        *((_BYTE *)v10 + 80) = v25;
      }
      v27 = (id *)(v11 + 11);
      v28 = *((unsigned __int8 *)v11 + 96);
      if (v28 == 255)
      {
        v10[11] = *v27;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)v11 + 96));
        v10[11] = v29;
        *((_BYTE *)v10 + 96) = v28;
      }
      v30 = (id *)(v11 + 13);
      v31 = *((unsigned __int8 *)v11 + 112);
      if (v31 == 255)
      {
        v10[13] = *v30;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)v11 + 112));
        v10[13] = v32;
        *((_BYTE *)v10 + 112) = v31;
      }
      v33 = (id *)(v11 + 15);
      v34 = *((unsigned __int8 *)v11 + 128);
      if (v34 == 255)
      {
        v10[15] = *v33;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)v11 + 128));
        v10[15] = v35;
        *((_BYTE *)v10 + 128) = v34;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v36 = v12[11];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v12[12];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v44 = v12[16];
      v45 = (_QWORD *)((char *)v10 + v44);
      v46 = (_QWORD *)((char *)v11 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for LegacyActionMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LegacyActionMenu(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v16 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v17 = v10[2];
      v18 = v10[3];
      sub_3D464(v17, v18, v16);
      v9[2] = v17;
      v9[3] = v18;
      *((_BYTE *)v9 + 32) = v16;
    }
    *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
    v19 = (id *)(v10 + 7);
    v20 = *((unsigned __int8 *)v10 + 64);
    if (v20 == 255)
    {
      v9[7] = *v19;
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, *((_BYTE *)v10 + 64));
      v9[7] = v21;
      *((_BYTE *)v9 + 64) = v20;
    }
    v22 = (id *)(v10 + 9);
    v23 = *((unsigned __int8 *)v10 + 80);
    if (v23 == 255)
    {
      v9[9] = *v22;
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v24 = *v22;
      sub_3D47C(*v22, *((_BYTE *)v10 + 80));
      v9[9] = v24;
      *((_BYTE *)v9 + 80) = v23;
    }
    v25 = (id *)(v10 + 11);
    v26 = *((unsigned __int8 *)v10 + 96);
    if (v26 == 255)
    {
      v9[11] = *v25;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v27 = *v25;
      sub_3D47C(*v25, *((_BYTE *)v10 + 96));
      v9[11] = v27;
      *((_BYTE *)v9 + 96) = v26;
    }
    v28 = (id *)(v10 + 13);
    v29 = *((unsigned __int8 *)v10 + 112);
    if (v29 == 255)
    {
      v9[13] = *v28;
      *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v30 = *v28;
      sub_3D47C(*v28, *((_BYTE *)v10 + 112));
      v9[13] = v30;
      *((_BYTE *)v9 + 112) = v29;
    }
    v31 = (id *)(v10 + 15);
    v32 = *((unsigned __int8 *)v10 + 128);
    if (v32 == 255)
    {
      v9[15] = *v31;
      *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v33 = *v31;
      sub_3D47C(*v31, *((_BYTE *)v10 + 128));
      v9[15] = v33;
      *((_BYTE *)v9 + 128) = v32;
    }
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v34 = v11[11];
    v35 = (char *)v9 + v34;
    v36 = (char *)v10 + v34;
    v37 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    v38 = v11[12];
    v39 = (_QWORD *)((char *)v9 + v38);
    v40 = (_QWORD *)((char *)v10 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v42 = v11[16];
    v43 = (_QWORD *)((char *)v9 + v42);
    v44 = (_QWORD *)((char *)v10 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LegacyActionMenu(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  id *v62;
  id *v63;
  int v64;
  id v65;
  void *v66;
  char v67;
  id v68;
  char v69;
  id v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v26 = *((_OWORD *)v8 + 1);
        *(_BYTE *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_3D464(v15, v16, v14);
        *(_QWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 24) = v16;
        *(_BYTE *)(v7 + 32) = v14;
      }
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      v27 = (id *)(v8 + 56);
      v28 = v8[64];
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(v7 + 64) = v8[64];
        *(_QWORD *)(v7 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, v8[64]);
        *(_QWORD *)(v7 + 56) = v29;
        *(_BYTE *)(v7 + 64) = v28;
      }
      v31 = (id *)(v8 + 72);
      v32 = v8[80];
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v7 + 80) = v8[80];
        *(_QWORD *)(v7 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, v8[80]);
        *(_QWORD *)(v7 + 72) = v33;
        *(_BYTE *)(v7 + 80) = v32;
      }
      v35 = (id *)(v8 + 88);
      v36 = v8[96];
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v7 + 96) = v8[96];
        *(_QWORD *)(v7 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v8[96]);
        *(_QWORD *)(v7 + 88) = v37;
        *(_BYTE *)(v7 + 96) = v36;
      }
      v39 = (id *)(v8 + 104);
      v40 = v8[112];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v7 + 112) = v8[112];
        *(_QWORD *)(v7 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, v8[112]);
        *(_QWORD *)(v7 + 104) = v41;
        *(_BYTE *)(v7 + 112) = v40;
      }
      v43 = (id *)(v8 + 120);
      v44 = v8[128];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v7 + 128) = v8[128];
        *(_QWORD *)(v7 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, v8[128]);
        *(_QWORD *)(v7 + 120) = v45;
        *(_BYTE *)(v7 + 128) = v44;
      }
      *(_BYTE *)(v7 + 129) = v8[129];
      v47 = v9[11];
      v48 = v7 + v47;
      v49 = &v8[v47];
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v9[12];
      v52 = (_QWORD *)(v7 + v51);
      v53 = &v8[v51];
      *v52 = *(_QWORD *)v53;
      v52[1] = *((_QWORD *)v53 + 1);
      *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
      *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
      *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
      v54 = v9[16];
      v55 = (_QWORD *)(v7 + v54);
      v56 = &v8[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_3E4A4(v7);
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(v7 + 16);
  v19 = (__int128 *)(v8 + 16);
  v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      v61 = *v19;
      *(_BYTE *)(v7 + 32) = v8[32];
      *v18 = v61;
    }
    else
    {
      v58 = *((_QWORD *)v8 + 2);
      v59 = *((_QWORD *)v8 + 3);
      sub_3D464(v58, v59, v8[32]);
      *(_QWORD *)(v7 + 16) = v58;
      *(_QWORD *)(v7 + 24) = v59;
      *(_BYTE *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E43C(v7 + 16);
    v60 = v8[32];
    *v18 = *v19;
    *(_BYTE *)(v7 + 32) = v60;
  }
  else
  {
    v21 = *((_QWORD *)v8 + 2);
    v22 = *((_QWORD *)v8 + 3);
    sub_3D464(v21, v22, v8[32]);
    v23 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    *(_QWORD *)(v7 + 24) = v22;
    v25 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v7 + 32) = v20;
    sub_3B5BC(v23, v24, v25);
  }
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v62 = (id *)(v7 + 56);
  v63 = (id *)(v8 + 56);
  v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      v70 = *v63;
      *(_BYTE *)(v7 + 64) = v8[64];
      *v62 = v70;
    }
    else
    {
      v68 = *v63;
      sub_3D47C(*v63, v8[64]);
      *(_QWORD *)(v7 + 56) = v68;
      *(_BYTE *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_3E470(v7 + 56);
    v69 = v8[64];
    *v62 = *v63;
    *(_BYTE *)(v7 + 64) = v69;
  }
  else
  {
    v65 = *v63;
    sub_3D47C(*v63, v8[64]);
    v66 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v65;
    v67 = *(_BYTE *)(v7 + 64);
    *(_BYTE *)(v7 + 64) = v64;
    sub_3D624(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v7 + 80) = v8[80];
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_3D47C(*v72, v8[80]);
      *(_QWORD *)(v7 + 72) = v77;
      *(_BYTE *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_3E470(v7 + 72);
    v78 = v8[80];
    *v71 = *v72;
    *(_BYTE *)(v7 + 80) = v78;
  }
  else
  {
    v74 = *v72;
    sub_3D47C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(_QWORD *)(v7 + 72) = v74;
    v76 = *(_BYTE *)(v7 + 80);
    *(_BYTE *)(v7 + 80) = v73;
    sub_3D624(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v7 + 96) = v8[96];
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_3D47C(*v81, v8[96]);
      *(_QWORD *)(v7 + 88) = v86;
      *(_BYTE *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_3E470(v7 + 88);
    v87 = v8[96];
    *v80 = *v81;
    *(_BYTE *)(v7 + 96) = v87;
  }
  else
  {
    v83 = *v81;
    sub_3D47C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v83;
    v85 = *(_BYTE *)(v7 + 96);
    *(_BYTE *)(v7 + 96) = v82;
    sub_3D624(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v7 + 112) = v8[112];
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_3D47C(*v90, v8[112]);
      *(_QWORD *)(v7 + 104) = v95;
      *(_BYTE *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_3E470(v7 + 104);
    v96 = v8[112];
    *v89 = *v90;
    *(_BYTE *)(v7 + 112) = v96;
  }
  else
  {
    v92 = *v90;
    sub_3D47C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(_QWORD *)(v7 + 104) = v92;
    v94 = *(_BYTE *)(v7 + 112);
    *(_BYTE *)(v7 + 112) = v91;
    sub_3D624(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v7 + 128) = v8[128];
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_3D47C(*v99, v8[128]);
      *(_QWORD *)(v7 + 120) = v104;
      *(_BYTE *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_3E470(v7 + 120);
    v105 = v8[128];
    *v98 = *v99;
    *(_BYTE *)(v7 + 128) = v105;
  }
  else
  {
    v101 = *v99;
    sub_3D47C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(_QWORD *)(v7 + 120) = v101;
    v103 = *(_BYTE *)(v7 + 128);
    *(_BYTE *)(v7 + 128) = v100;
    sub_3D624(v102, v103);
  }
  *(_BYTE *)(v7 + 129) = v8[129];
  v107 = v9[11];
  v108 = v7 + v107;
  v109 = &v8[v107];
  v110 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = v9[12];
  v112 = (_QWORD *)(v7 + v111);
  v113 = &v8[v111];
  *v112 = *(_QWORD *)v113;
  v112[1] = *((_QWORD *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
  *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
  *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
  v114 = v9[16];
  v115 = (_QWORD *)(v7 + v114);
  v116 = &v8[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for LegacyActionMenu(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v14 = v10[11];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for LegacyActionMenu(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int v30;
  int v31;
  void *v32;
  _QWORD *v33;
  int v34;
  int v35;
  void *v36;
  _QWORD *v37;
  int v38;
  int v39;
  void *v40;
  _QWORD *v41;
  int v42;
  int v43;
  void *v44;
  _QWORD *v45;
  int v46;
  int v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_3E4A4(v9);
      goto LABEL_6;
    }
    v23 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v23;
    swift_bridgeObjectRelease();
    v24 = v10 + 16;
    v25 = *(unsigned __int8 *)(v9 + 32);
    if (v25 != 255)
    {
      v26 = v10[32];
      if (v26 != 255)
      {
        v27 = *(_QWORD *)(v9 + 16);
        v28 = *(_QWORD *)(v9 + 24);
        *(_OWORD *)(v9 + 16) = *v24;
        *(_BYTE *)(v9 + 32) = v26;
        sub_3B5BC(v27, v28, v25);
        goto LABEL_13;
      }
      sub_3E43C(v9 + 16);
    }
    *(_OWORD *)(v9 + 16) = *v24;
    *(_BYTE *)(v9 + 32) = v10[32];
LABEL_13:
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
    v29 = v10 + 56;
    v30 = *(unsigned __int8 *)(v9 + 64);
    if (v30 != 255)
    {
      v31 = v10[64];
      if (v31 != 255)
      {
        v32 = *(void **)(v9 + 56);
        *(_QWORD *)(v9 + 56) = *v29;
        *(_BYTE *)(v9 + 64) = v31;
        sub_3D624(v32, v30);
        goto LABEL_18;
      }
      sub_3E470(v9 + 56);
    }
    *(_QWORD *)(v9 + 56) = *v29;
    *(_BYTE *)(v9 + 64) = v10[64];
LABEL_18:
    v33 = v10 + 72;
    v34 = *(unsigned __int8 *)(v9 + 80);
    if (v34 != 255)
    {
      v35 = v10[80];
      if (v35 != 255)
      {
        v36 = *(void **)(v9 + 72);
        *(_QWORD *)(v9 + 72) = *v33;
        *(_BYTE *)(v9 + 80) = v35;
        sub_3D624(v36, v34);
        goto LABEL_23;
      }
      sub_3E470(v9 + 72);
    }
    *(_QWORD *)(v9 + 72) = *v33;
    *(_BYTE *)(v9 + 80) = v10[80];
LABEL_23:
    v37 = v10 + 88;
    v38 = *(unsigned __int8 *)(v9 + 96);
    if (v38 != 255)
    {
      v39 = v10[96];
      if (v39 != 255)
      {
        v40 = *(void **)(v9 + 88);
        *(_QWORD *)(v9 + 88) = *v37;
        *(_BYTE *)(v9 + 96) = v39;
        sub_3D624(v40, v38);
        goto LABEL_28;
      }
      sub_3E470(v9 + 88);
    }
    *(_QWORD *)(v9 + 88) = *v37;
    *(_BYTE *)(v9 + 96) = v10[96];
LABEL_28:
    v41 = v10 + 104;
    v42 = *(unsigned __int8 *)(v9 + 112);
    if (v42 != 255)
    {
      v43 = v10[112];
      if (v43 != 255)
      {
        v44 = *(void **)(v9 + 104);
        *(_QWORD *)(v9 + 104) = *v41;
        *(_BYTE *)(v9 + 112) = v43;
        sub_3D624(v44, v42);
        goto LABEL_33;
      }
      sub_3E470(v9 + 104);
    }
    *(_QWORD *)(v9 + 104) = *v41;
    *(_BYTE *)(v9 + 112) = v10[112];
LABEL_33:
    v45 = v10 + 120;
    v46 = *(unsigned __int8 *)(v9 + 128);
    if (v46 != 255)
    {
      v47 = v10[128];
      if (v47 != 255)
      {
        v48 = *(void **)(v9 + 120);
        *(_QWORD *)(v9 + 120) = *v45;
        *(_BYTE *)(v9 + 128) = v47;
        sub_3D624(v48, v46);
LABEL_38:
        *(_BYTE *)(v9 + 129) = v10[129];
        v49 = v11[11];
        v50 = v9 + v49;
        v51 = &v10[v49];
        v52 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
        v53 = v11[12];
        v54 = (_QWORD *)(v9 + v53);
        v55 = &v10[v53];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        *v54 = v57;
        v54[1] = v56;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
        *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
        *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
        v58 = v11[16];
        v59 = (_QWORD *)(v9 + v58);
        v60 = &v10[v58];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        *v59 = v62;
        v59[1] = v61;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      sub_3E470(v9 + 120);
    }
    *(_QWORD *)(v9 + 120) = *v45;
    *(_BYTE *)(v9 + 128) = v10[128];
    goto LABEL_38;
  }
  if (v15)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  *(_BYTE *)(v9 + 32) = v10[32];
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);
  *(_BYTE *)(v9 + 64) = v10[64];
  *(_OWORD *)(v9 + 113) = *(_OWORD *)(v10 + 113);
  *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  *(_BYTE *)(v9 + 129) = v10[129];
  v17 = v11[11];
  v18 = v9 + v17;
  v19 = &v10[v17];
  v20 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_OWORD *)(v9 + v11[12]) = *(_OWORD *)&v10[v11[12]];
  *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
  *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
  *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
  *(_OWORD *)(v9 + v11[16]) = *(_OWORD *)&v10[v11[16]];
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyActionMenu(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F3C20);
}

uint64_t sub_1F3C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F3CB0);
}

uint64_t sub_1F3CB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_1F3D30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2FF428;
  v4[1] = &unk_2FF428;
  sub_5971C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for LegacyActionMenu.Child(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v48;
  __int128 v49;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ArtworkModel(0);
    v12 = *((_QWORD *)v11 - 1);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = v10[1];
      *v9 = *v10;
      v9[1] = v16;
      v17 = *((unsigned __int8 *)v10 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
      }
      else
      {
        v18 = v10[2];
        v19 = v10[3];
        sub_3D464(v18, v19, v17);
        v9[2] = v18;
        v9[3] = v19;
        *((_BYTE *)v9 + 32) = v17;
      }
      *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
      v20 = (id *)(v10 + 7);
      v21 = *((unsigned __int8 *)v10 + 64);
      if (v21 == 255)
      {
        v9[7] = *v20;
        *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
      }
      else
      {
        v22 = *v20;
        sub_3D47C(*v20, *((_BYTE *)v10 + 64));
        v9[7] = v22;
        *((_BYTE *)v9 + 64) = v21;
      }
      v23 = (id *)(v10 + 9);
      v24 = *((unsigned __int8 *)v10 + 80);
      if (v24 == 255)
      {
        v9[9] = *v23;
        *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
      }
      else
      {
        v25 = *v23;
        sub_3D47C(*v23, *((_BYTE *)v10 + 80));
        v9[9] = v25;
        *((_BYTE *)v9 + 80) = v24;
      }
      v26 = (id *)(v10 + 11);
      v27 = *((unsigned __int8 *)v10 + 96);
      if (v27 == 255)
      {
        v9[11] = *v26;
        *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
      }
      else
      {
        v28 = *v26;
        sub_3D47C(*v26, *((_BYTE *)v10 + 96));
        v9[11] = v28;
        *((_BYTE *)v9 + 96) = v27;
      }
      v29 = (id *)(v10 + 13);
      v30 = *((unsigned __int8 *)v10 + 112);
      if (v30 == 255)
      {
        v9[13] = *v29;
        *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
      }
      else
      {
        v31 = *v29;
        sub_3D47C(*v29, *((_BYTE *)v10 + 112));
        v9[13] = v31;
        *((_BYTE *)v9 + 112) = v30;
      }
      v32 = (id *)(v10 + 15);
      v33 = *((unsigned __int8 *)v10 + 128);
      if (v33 == 255)
      {
        v9[15] = *v32;
        *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
      }
      else
      {
        v34 = *v32;
        sub_3D47C(*v32, *((_BYTE *)v10 + 128));
        v9[15] = v34;
        *((_BYTE *)v9 + 128) = v33;
      }
      *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
      v35 = v11[11];
      v36 = (char *)v9 + v35;
      v37 = (char *)v10 + v35;
      v38 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      v39 = v11[12];
      v40 = (_QWORD *)((char *)v9 + v39);
      v41 = (_QWORD *)((char *)v10 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
      *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
      *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
      v43 = v11[16];
      v44 = (_QWORD *)((char *)v9 + v43);
      v45 = (_QWORD *)((char *)v10 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(v9, 0, 1, v11);
    }
    v48 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v49 = *(_OWORD *)((char *)a2 + v48 + 24);
    *(_OWORD *)((char *)v4 + v48 + 24) = v49;
    (**(void (***)(void))(v49 - 8))();
  }
  return v4;
}

uint64_t destroy for LegacyActionMenu.Child(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(a2 + 28)));
}

_QWORD *initializeWithCopy for LegacyActionMenu.Child(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, int *);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  int v19;
  id v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v46;
  __int128 v47;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v15 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain();
    if (v15 == 255)
    {
      *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
      *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    }
    else
    {
      v16 = v9[2];
      v17 = v9[3];
      sub_3D464(v16, v17, v15);
      v8[2] = v16;
      v8[3] = v17;
      *((_BYTE *)v8 + 32) = v15;
    }
    *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
    v18 = (id *)(v9 + 7);
    v19 = *((unsigned __int8 *)v9 + 64);
    if (v19 == 255)
    {
      v8[7] = *v18;
      *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    }
    else
    {
      v20 = *v18;
      sub_3D47C(*v18, *((_BYTE *)v9 + 64));
      v8[7] = v20;
      *((_BYTE *)v8 + 64) = v19;
    }
    v21 = (id *)(v9 + 9);
    v22 = *((unsigned __int8 *)v9 + 80);
    if (v22 == 255)
    {
      v8[9] = *v21;
      *((_BYTE *)v8 + 80) = *((_BYTE *)v9 + 80);
    }
    else
    {
      v23 = *v21;
      sub_3D47C(*v21, *((_BYTE *)v9 + 80));
      v8[9] = v23;
      *((_BYTE *)v8 + 80) = v22;
    }
    v24 = (id *)(v9 + 11);
    v25 = *((unsigned __int8 *)v9 + 96);
    if (v25 == 255)
    {
      v8[11] = *v24;
      *((_BYTE *)v8 + 96) = *((_BYTE *)v9 + 96);
    }
    else
    {
      v26 = *v24;
      sub_3D47C(*v24, *((_BYTE *)v9 + 96));
      v8[11] = v26;
      *((_BYTE *)v8 + 96) = v25;
    }
    v27 = (id *)(v9 + 13);
    v28 = *((unsigned __int8 *)v9 + 112);
    if (v28 == 255)
    {
      v8[13] = *v27;
      *((_BYTE *)v8 + 112) = *((_BYTE *)v9 + 112);
    }
    else
    {
      v29 = *v27;
      sub_3D47C(*v27, *((_BYTE *)v9 + 112));
      v8[13] = v29;
      *((_BYTE *)v8 + 112) = v28;
    }
    v30 = (id *)(v9 + 15);
    v31 = *((unsigned __int8 *)v9 + 128);
    if (v31 == 255)
    {
      v8[15] = *v30;
      *((_BYTE *)v8 + 128) = *((_BYTE *)v9 + 128);
    }
    else
    {
      v32 = *v30;
      sub_3D47C(*v30, *((_BYTE *)v9 + 128));
      v8[15] = v32;
      *((_BYTE *)v8 + 128) = v31;
    }
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v33 = v10[11];
    v34 = (char *)v8 + v33;
    v35 = (char *)v9 + v33;
    v36 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
    v37 = v10[12];
    v38 = (_QWORD *)((char *)v8 + v37);
    v39 = (_QWORD *)((char *)v9 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v41 = v10[16];
    v42 = (_QWORD *)((char *)v8 + v41);
    v43 = (_QWORD *)((char *)v9 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(v8, 0, 1, v10);
  }
  v46 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v47 = *(_OWORD *)((char *)a2 + v46 + 24);
  *(_OWORD *)((char *)a1 + v46 + 24) = v47;
  (**(void (***)(void))(v47 - 8))();
  return a1;
}

_QWORD *assignWithCopy for LegacyActionMenu.Child(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  id *v62;
  id *v63;
  int v64;
  id v65;
  void *v66;
  char v67;
  id v68;
  char v69;
  id v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v26 = *((_OWORD *)v8 + 1);
        *(_BYTE *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_3D464(v15, v16, v14);
        *(_QWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 24) = v16;
        *(_BYTE *)(v7 + 32) = v14;
      }
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      v27 = (id *)(v8 + 56);
      v28 = v8[64];
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(v7 + 64) = v8[64];
        *(_QWORD *)(v7 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, v8[64]);
        *(_QWORD *)(v7 + 56) = v29;
        *(_BYTE *)(v7 + 64) = v28;
      }
      v31 = (id *)(v8 + 72);
      v32 = v8[80];
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v7 + 80) = v8[80];
        *(_QWORD *)(v7 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, v8[80]);
        *(_QWORD *)(v7 + 72) = v33;
        *(_BYTE *)(v7 + 80) = v32;
      }
      v35 = (id *)(v8 + 88);
      v36 = v8[96];
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v7 + 96) = v8[96];
        *(_QWORD *)(v7 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v8[96]);
        *(_QWORD *)(v7 + 88) = v37;
        *(_BYTE *)(v7 + 96) = v36;
      }
      v39 = (id *)(v8 + 104);
      v40 = v8[112];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v7 + 112) = v8[112];
        *(_QWORD *)(v7 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, v8[112]);
        *(_QWORD *)(v7 + 104) = v41;
        *(_BYTE *)(v7 + 112) = v40;
      }
      v43 = (id *)(v8 + 120);
      v44 = v8[128];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v7 + 128) = v8[128];
        *(_QWORD *)(v7 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, v8[128]);
        *(_QWORD *)(v7 + 120) = v45;
        *(_BYTE *)(v7 + 128) = v44;
      }
      *(_BYTE *)(v7 + 129) = v8[129];
      v47 = v9[11];
      v48 = v7 + v47;
      v49 = &v8[v47];
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v9[12];
      v52 = (_QWORD *)(v7 + v51);
      v53 = &v8[v51];
      *v52 = *(_QWORD *)v53;
      v52[1] = *((_QWORD *)v53 + 1);
      *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
      *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
      *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
      v54 = v9[16];
      v55 = (_QWORD *)(v7 + v54);
      v56 = &v8[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_3E4A4(v7);
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(v7 + 16);
  v19 = (__int128 *)(v8 + 16);
  v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      v61 = *v19;
      *(_BYTE *)(v7 + 32) = v8[32];
      *v18 = v61;
    }
    else
    {
      v58 = *((_QWORD *)v8 + 2);
      v59 = *((_QWORD *)v8 + 3);
      sub_3D464(v58, v59, v8[32]);
      *(_QWORD *)(v7 + 16) = v58;
      *(_QWORD *)(v7 + 24) = v59;
      *(_BYTE *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E43C(v7 + 16);
    v60 = v8[32];
    *v18 = *v19;
    *(_BYTE *)(v7 + 32) = v60;
  }
  else
  {
    v21 = *((_QWORD *)v8 + 2);
    v22 = *((_QWORD *)v8 + 3);
    sub_3D464(v21, v22, v8[32]);
    v23 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    *(_QWORD *)(v7 + 24) = v22;
    v25 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v7 + 32) = v20;
    sub_3B5BC(v23, v24, v25);
  }
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v62 = (id *)(v7 + 56);
  v63 = (id *)(v8 + 56);
  v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      v70 = *v63;
      *(_BYTE *)(v7 + 64) = v8[64];
      *v62 = v70;
    }
    else
    {
      v68 = *v63;
      sub_3D47C(*v63, v8[64]);
      *(_QWORD *)(v7 + 56) = v68;
      *(_BYTE *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_3E470(v7 + 56);
    v69 = v8[64];
    *v62 = *v63;
    *(_BYTE *)(v7 + 64) = v69;
  }
  else
  {
    v65 = *v63;
    sub_3D47C(*v63, v8[64]);
    v66 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v65;
    v67 = *(_BYTE *)(v7 + 64);
    *(_BYTE *)(v7 + 64) = v64;
    sub_3D624(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v7 + 80) = v8[80];
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_3D47C(*v72, v8[80]);
      *(_QWORD *)(v7 + 72) = v77;
      *(_BYTE *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_3E470(v7 + 72);
    v78 = v8[80];
    *v71 = *v72;
    *(_BYTE *)(v7 + 80) = v78;
  }
  else
  {
    v74 = *v72;
    sub_3D47C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(_QWORD *)(v7 + 72) = v74;
    v76 = *(_BYTE *)(v7 + 80);
    *(_BYTE *)(v7 + 80) = v73;
    sub_3D624(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v7 + 96) = v8[96];
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_3D47C(*v81, v8[96]);
      *(_QWORD *)(v7 + 88) = v86;
      *(_BYTE *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_3E470(v7 + 88);
    v87 = v8[96];
    *v80 = *v81;
    *(_BYTE *)(v7 + 96) = v87;
  }
  else
  {
    v83 = *v81;
    sub_3D47C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v83;
    v85 = *(_BYTE *)(v7 + 96);
    *(_BYTE *)(v7 + 96) = v82;
    sub_3D624(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v7 + 112) = v8[112];
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_3D47C(*v90, v8[112]);
      *(_QWORD *)(v7 + 104) = v95;
      *(_BYTE *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_3E470(v7 + 104);
    v96 = v8[112];
    *v89 = *v90;
    *(_BYTE *)(v7 + 112) = v96;
  }
  else
  {
    v92 = *v90;
    sub_3D47C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(_QWORD *)(v7 + 104) = v92;
    v94 = *(_BYTE *)(v7 + 112);
    *(_BYTE *)(v7 + 112) = v91;
    sub_3D624(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v7 + 128) = v8[128];
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_3D47C(*v99, v8[128]);
      *(_QWORD *)(v7 + 120) = v104;
      *(_BYTE *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_3E470(v7 + 120);
    v105 = v8[128];
    *v98 = *v99;
    *(_BYTE *)(v7 + 128) = v105;
  }
  else
  {
    v101 = *v99;
    sub_3D47C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(_QWORD *)(v7 + 120) = v101;
    v103 = *(_BYTE *)(v7 + 128);
    *(_BYTE *)(v7 + 128) = v100;
    sub_3D624(v102, v103);
  }
  *(_BYTE *)(v7 + 129) = v8[129];
  v107 = v9[11];
  v108 = v7 + v107;
  v109 = &v8[v107];
  v110 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = v9[12];
  v112 = (_QWORD *)(v7 + v111);
  v113 = &v8[v111];
  *v112 = *(_QWORD *)v113;
  v112[1] = *((_QWORD *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
  *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
  *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
  v114 = v9[16];
  v115 = (_QWORD *)(v7 + v114);
  v116 = &v8[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  return a1;
}

_OWORD *initializeWithTake for LegacyActionMenu.Child(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
    *((_BYTE *)v7 + 64) = *((_BYTE *)v8 + 64);
    *(_OWORD *)((char *)v7 + 113) = *(_OWORD *)((char *)v8 + 113);
    *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
    *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
    *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
    *((_BYTE *)v7 + 129) = *((_BYTE *)v8 + 129);
    v13 = v9[11];
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)((char *)v7 + v9[12]) = *(_OWORD *)((char *)v8 + v9[12]);
    *((_BYTE *)v7 + v9[13]) = *((_BYTE *)v8 + v9[13]);
    *((_BYTE *)v7 + v9[14]) = *((_BYTE *)v8 + v9[14]);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    *(_OWORD *)((char *)v7 + v9[16]) = *(_OWORD *)((char *)v8 + v9[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  return a1;
}

_QWORD *assignWithTake for LegacyActionMenu.Child(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, int *);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v26;
  _OWORD *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int v33;
  int v34;
  void *v35;
  _QWORD *v36;
  int v37;
  int v38;
  void *v39;
  _QWORD *v40;
  int v41;
  int v42;
  void *v43;
  _QWORD *v44;
  int v45;
  int v46;
  void *v47;
  _QWORD *v48;
  int v49;
  int v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_3E4A4(v8);
      goto LABEL_6;
    }
    v26 = *((_QWORD *)v9 + 1);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v26;
    swift_bridgeObjectRelease();
    v27 = v9 + 16;
    v28 = *(unsigned __int8 *)(v8 + 32);
    if (v28 != 255)
    {
      v29 = v9[32];
      if (v29 != 255)
      {
        v30 = *(_QWORD *)(v8 + 16);
        v31 = *(_QWORD *)(v8 + 24);
        *(_OWORD *)(v8 + 16) = *v27;
        *(_BYTE *)(v8 + 32) = v29;
        sub_3B5BC(v30, v31, v28);
        goto LABEL_13;
      }
      sub_3E43C(v8 + 16);
    }
    *(_OWORD *)(v8 + 16) = *v27;
    *(_BYTE *)(v8 + 32) = v9[32];
LABEL_13:
    *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
    v32 = v9 + 56;
    v33 = *(unsigned __int8 *)(v8 + 64);
    if (v33 != 255)
    {
      v34 = v9[64];
      if (v34 != 255)
      {
        v35 = *(void **)(v8 + 56);
        *(_QWORD *)(v8 + 56) = *v32;
        *(_BYTE *)(v8 + 64) = v34;
        sub_3D624(v35, v33);
        goto LABEL_18;
      }
      sub_3E470(v8 + 56);
    }
    *(_QWORD *)(v8 + 56) = *v32;
    *(_BYTE *)(v8 + 64) = v9[64];
LABEL_18:
    v36 = v9 + 72;
    v37 = *(unsigned __int8 *)(v8 + 80);
    if (v37 != 255)
    {
      v38 = v9[80];
      if (v38 != 255)
      {
        v39 = *(void **)(v8 + 72);
        *(_QWORD *)(v8 + 72) = *v36;
        *(_BYTE *)(v8 + 80) = v38;
        sub_3D624(v39, v37);
        goto LABEL_23;
      }
      sub_3E470(v8 + 72);
    }
    *(_QWORD *)(v8 + 72) = *v36;
    *(_BYTE *)(v8 + 80) = v9[80];
LABEL_23:
    v40 = v9 + 88;
    v41 = *(unsigned __int8 *)(v8 + 96);
    if (v41 != 255)
    {
      v42 = v9[96];
      if (v42 != 255)
      {
        v43 = *(void **)(v8 + 88);
        *(_QWORD *)(v8 + 88) = *v40;
        *(_BYTE *)(v8 + 96) = v42;
        sub_3D624(v43, v41);
        goto LABEL_28;
      }
      sub_3E470(v8 + 88);
    }
    *(_QWORD *)(v8 + 88) = *v40;
    *(_BYTE *)(v8 + 96) = v9[96];
LABEL_28:
    v44 = v9 + 104;
    v45 = *(unsigned __int8 *)(v8 + 112);
    if (v45 != 255)
    {
      v46 = v9[112];
      if (v46 != 255)
      {
        v47 = *(void **)(v8 + 104);
        *(_QWORD *)(v8 + 104) = *v44;
        *(_BYTE *)(v8 + 112) = v46;
        sub_3D624(v47, v45);
        goto LABEL_33;
      }
      sub_3E470(v8 + 104);
    }
    *(_QWORD *)(v8 + 104) = *v44;
    *(_BYTE *)(v8 + 112) = v9[112];
LABEL_33:
    v48 = v9 + 120;
    v49 = *(unsigned __int8 *)(v8 + 128);
    if (v49 != 255)
    {
      v50 = v9[128];
      if (v50 != 255)
      {
        v51 = *(void **)(v8 + 120);
        *(_QWORD *)(v8 + 120) = *v48;
        *(_BYTE *)(v8 + 128) = v50;
        sub_3D624(v51, v49);
LABEL_38:
        *(_BYTE *)(v8 + 129) = v9[129];
        v52 = v10[11];
        v53 = v8 + v52;
        v54 = &v9[v52];
        v55 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
        v56 = v10[12];
        v57 = (_QWORD *)(v8 + v56);
        v58 = &v9[v56];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        *v57 = v60;
        v57[1] = v59;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v8 + v10[13]) = v9[v10[13]];
        *(_BYTE *)(v8 + v10[14]) = v9[v10[14]];
        *(_BYTE *)(v8 + v10[15]) = v9[v10[15]];
        v61 = v10[16];
        v62 = (_QWORD *)(v8 + v61);
        v63 = &v9[v61];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        *v62 = v65;
        v62[1] = v64;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      sub_3E470(v8 + 120);
    }
    *(_QWORD *)(v8 + 120) = *v48;
    *(_BYTE *)(v8 + 128) = v9[128];
    goto LABEL_38;
  }
  if (v14)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  *(_BYTE *)(v8 + 32) = v9[32];
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 56) = *((_QWORD *)v9 + 7);
  *(_BYTE *)(v8 + 64) = v9[64];
  *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 129) = v9[129];
  v16 = v10[11];
  v17 = v8 + v16;
  v18 = &v9[v16];
  v19 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(v8 + v10[12]) = *(_OWORD *)&v9[v10[12]];
  *(_BYTE *)(v8 + v10[13]) = v9[v10[13]];
  *(_BYTE *)(v8 + v10[14]) = v9[v10[14]];
  *(_BYTE *)(v8 + v10[15]) = v9[v10[15]];
  *(_OWORD *)(v8 + v10[16]) = *(_OWORD *)&v9[v10[16]];
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v21 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v21));
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyActionMenu.Child(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1F531C);
}

uint64_t sub_1F531C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyActionMenu.Child(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1F53B0);
}

uint64_t sub_1F53B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  return result;
}

void sub_1F5434(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2FF428;
  sub_5971C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[3] = "(";
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

unint64_t static FindOrCreateEpisodeOfferContentIDsIntent.kind.getter()
{
  return 0xD000000000000020;
}

void sub_1F54DC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000020;
  a1[1] = 0x8000000000313430;
}

ValueMetadata *type metadata accessor for FindOrCreateEpisodeOfferContentIDsIntent()
{
  return &type metadata for FindOrCreateEpisodeOfferContentIDsIntent;
}

unint64_t static EpisodeUpsellActionIntent.kind.getter()
{
  return 0xD000000000000019;
}

void sub_1F5528(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000000002FF4E0;
}

uint64_t sub_1F5548@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375888, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_1F5598@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_3758C0, v3);
  result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_1F55EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1F5738();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F5614(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1F5738();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t EpisodeUpsellActionIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1620);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1F5738();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for EpisodeUpsellActionIntent.CodingKeys, &type metadata for EpisodeUpsellActionIntent.CodingKeys, v10, v8, v9);
  v13 = v7;
  sub_13E9C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1F5738()
{
  unint64_t result;

  result = qword_3C1628;
  if (!qword_3C1628)
  {
    result = swift_getWitnessTable(&unk_2FF6FC);
    atomic_store(result, (unint64_t *)&qword_3C1628);
  }
  return result;
}

uint64_t sub_1F577C(_QWORD *a1)
{
  return EpisodeUpsellActionIntent.encode(to:)(a1);
}

uint64_t sub_1F5790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1F5970();
  return CustomJSValueConvertible<>.jsRepresentation(in:)(a1, a2, a3, v6);
}

ValueMetadata *type metadata accessor for EpisodeUpsellActionIntent()
{
  return &type metadata for EpisodeUpsellActionIntent;
}

uint64_t storeEnumTagSinglePayload for EpisodeUpsellActionIntent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1F583C + 4 * asc_2FF4F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1F585C + 4 * byte_2FF4F5[v4]))();
}

_BYTE *sub_1F583C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1F585C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1F5864(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1F586C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1F5874(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1F587C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUpsellActionIntent.CodingKeys()
{
  return &type metadata for EpisodeUpsellActionIntent.CodingKeys;
}

unint64_t sub_1F589C()
{
  unint64_t result;

  result = qword_3C1630;
  if (!qword_3C1630)
  {
    result = swift_getWitnessTable(&unk_2FF6D4);
    atomic_store(result, (unint64_t *)&qword_3C1630);
  }
  return result;
}

unint64_t sub_1F58E4()
{
  unint64_t result;

  result = qword_3C1638;
  if (!qword_3C1638)
  {
    result = swift_getWitnessTable(&unk_2FF60C);
    atomic_store(result, (unint64_t *)&qword_3C1638);
  }
  return result;
}

unint64_t sub_1F592C()
{
  unint64_t result;

  result = qword_3C1640;
  if (!qword_3C1640)
  {
    result = swift_getWitnessTable(&unk_2FF634);
    atomic_store(result, (unint64_t *)&qword_3C1640);
  }
  return result;
}

unint64_t sub_1F5970()
{
  unint64_t result;

  result = qword_3C1648;
  if (!qword_3C1648)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeUpsellActionIntent);
    atomic_store(result, (unint64_t *)&qword_3C1648);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkBootstrap()
{
  return &type metadata for ArtworkBootstrap;
}

uint64_t sub_1F59C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  void *v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF730);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA928);
  v8 = *(_QWORD *)(v20 - 8);
  v9 = __chkstk_darwin(v20);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AssetDownloaders(0, v9);
  swift_retain();
  v13 = BaseObjectGraph.inject<A>(_:)(&v21, v12, v12);
  v14 = v21;
  AssetDownloaders.storeArtworkSource.getter(v13);
  v15 = sub_19F0C8();
  AssetSource.eraseToAnyAssetSource()(v4, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = type metadata accessor for AssetCaches(0);
  BaseObjectGraph.inject<A>(_:)(a2, v16, v16);
  sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v17 = static OS_dispatch_queue.uiAssetPreparationQueue.getter();
  swift_release(a1);

  v18 = type metadata accessor for StoreImageProvider(0);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(&a2[*(int *)(v18 + 20)], v11, v20);
  *(_QWORD *)&a2[*(int *)(v18 + 24)] = v17;
  return result;
}

uint64_t sub_1F5B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  void *v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF708);
  v12 = sub_327F8(0, &qword_3BF718, MTImageStore_ptr);
  v13 = &protocol witness table for MTImageStore;
  v11[0] = objc_msgSend((id)swift_getObjCClassFromMetadata(v12), "defaultStore");
  v1 = BaseObjectGraph.satisfying<A>(_:with:)(v0, v11, v0);
  __swift_destroy_boxed_opaque_existential_1(v11);
  v2 = type metadata accessor for LibraryImageProvider(0);
  v3 = BaseObjectGraph.satisfying<A>(_:with:)(v2, sub_1F5CB0, 0, v2);
  swift_release(v1);
  v4 = type metadata accessor for ArtworkLoader();
  v5 = BaseObjectGraph.satisfying<A>(_:with:)(v4, sub_1F5CE0, 0, v4);
  swift_release(v3);
  v6 = type metadata accessor for CompositeImageProvider(0);
  v7 = BaseObjectGraph.satisfying<A>(_:with:)(v6, sub_1F5DF4, 0, v6);
  swift_release(v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF700);
  v9 = BaseObjectGraph.satisfying<A>(_:with:)(v8, sub_1F5E24, 0, v8);
  swift_release(v7);
  return v9;
}

uint64_t sub_1F5CB0(uint64_t a1)
{
  uint64_t v1;

  v1 = swift_retain(a1);
  return LibraryImageProvider.init(asPartOf:)(v1);
}

uint64_t sub_1F5CE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  _BYTE v9[40];
  _QWORD v10[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF708);
  BaseObjectGraph.inject<A>(_:)(v10, v2, v2);
  sub_150C8((uint64_t)v10, (uint64_t)v9);
  v3 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setName:", v4);

  v5 = type metadata accessor for ArtworkLoader();
  swift_allocObject(v5, 129, 7);
  v6 = sub_1A8210((uint64_t)v3, 0);

  swift_beginAccess(v6 + 24, v8, 33, 0);
  sub_19F080((uint64_t)v9, v6 + 24);
  swift_endAccess(v8);
  result = __swift_destroy_boxed_opaque_existential_1(v10);
  *a1 = v6;
  return result;
}

uint64_t sub_1F5DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = swift_retain();
  return CompositeImageProvider.init(asPartOf:)(v2, a1);
}

uint64_t sub_1F5E24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for StoreLibraryMultiplexingImageProvider(0);
  swift_retain();
  v5 = sub_878F4();
  result = swift_release(a1);
  a2[3] = v4;
  a2[4] = (uint64_t)&protocol witness table for StoreLibraryMultiplexingImageProvider;
  *a2 = v5;
  return result;
}

uint64_t sub_1F5E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF700);
  v1 = type metadata accessor for StoreImageProvider(0);
  v5[3] = v1;
  v5[4] = sub_F1C0((unint64_t *)&unk_3BF720, (void (*)(uint64_t))type metadata accessor for StoreImageProvider, (uint64_t)&protocol conformance descriptor for StoreImageProvider);
  __swift_allocate_boxed_opaque_existential_2Tm(v5);
  v2 = sub_F1C0(&qword_3B4FE8, (void (*)(uint64_t))type metadata accessor for StoreImageProvider, (uint64_t)&protocol conformance descriptor for StoreImageProvider);
  BaseObjectGraph.inject<A>(_:)(v1, v1, v2);
  v3 = BaseObjectGraph.satisfying<A>(_:with:)(v0, v5, v0);
  __swift_destroy_boxed_opaque_existential_1(v5);
  return v3;
}

uint64_t sub_1F5F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  void *v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF6F0);
  v10 = type metadata accessor for ThumbnailImageResizer(0);
  v11 = &protocol witness table for ThumbnailImageResizer;
  __swift_allocate_boxed_opaque_existential_2Tm(v9);
  ThumbnailImageResizer.init()();
  v1 = BaseObjectGraph.satisfying<A>(_:with:)(v0, v9, v0);
  __swift_destroy_boxed_opaque_existential_1(v9);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5008);
  v10 = type metadata accessor for UniformBucketingStrategy(0);
  v11 = (void *)sub_F1C0((unint64_t *)&unk_3BF750, (void (*)(uint64_t))&type metadata accessor for UniformBucketingStrategy, (uint64_t)&protocol conformance descriptor for UniformBucketingStrategy);
  __swift_allocate_boxed_opaque_existential_2Tm(v9);
  static UniformBucketingStrategy.uniform3000MaxStrategy.getter();
  v3 = BaseObjectGraph.satisfying<A>(_:with:)(v2, v9, v2);
  swift_release(v1);
  __swift_destroy_boxed_opaque_existential_1(v9);
  v4 = type metadata accessor for StoreImageProvider(0);
  v5 = BaseObjectGraph.satisfying<A>(_:with:)(v4, sub_1F59C4, 0, v4);
  swift_release(v3);
  v6 = objc_msgSend((id)objc_opt_self(PFClientUtil), "supportsLocalLibrary");
  v7 = BaseObjectGraph.conditionalIf(_:do:else:)(v6, sub_1F5B60, 0, sub_1F5E90, 0);
  swift_release(v5);
  return v7;
}

int64_t sub_1F60C0(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

_QWORD *Shelf.__allocating_init(deserializing:using:)(char *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  void (*v98)(uint64_t *, _QWORD, _QWORD *);
  uint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, char *, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(_QWORD, _QWORD, _QWORD);
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  void (*v127)(char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char v178;
  char *v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  void (*v191)(char *, uint64_t);
  void (*v192)(uint64_t, uint64_t);
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t *v197;
  char *v198;
  void (*v199)(char *, uint64_t);
  uint64_t v200;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  _QWORD *v233;
  Class v234;
  char *v235;
  __int128 v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;

  v235 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v3);
  v226 = (uint64_t)&v192 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1668);
  v6 = __chkstk_darwin(v5);
  v219 = (uint64_t)&v192 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v227 = (uint64_t)&v192 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  v10 = __chkstk_darwin(v9);
  v220 = (uint64_t)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v225 = (uint64_t)&v192 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v14 = __chkstk_darwin(v13);
  v224 = (uint64_t)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v230 = (uint64_t)&v192 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v17);
  v205 = (uint64_t)&v192 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for JSONArray(0);
  v206 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v198 = (char *)&v192 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = (_QWORD *)type metadata accessor for LegacyActionMenu(0);
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = *(v202 - 1);
  v20 = __chkstk_darwin(v202);
  v197 = (unint64_t *)((char *)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v196 = (uint64_t)&v192 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  v24 = __chkstk_darwin(v23);
  v222 = (uint64_t)&v192 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v195 = (uint64_t)&v192 - v27;
  __chkstk_darwin(v26);
  v229 = (uint64_t)&v192 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1670);
  v30 = __chkstk_darwin(v29);
  v200 = (uint64_t)&v192 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v223 = (uint64_t)&v192 - v32;
  v239 = type metadata accessor for JSONContext(0);
  v33 = *(_QWORD *)(v239 - 8);
  v34 = __chkstk_darwin(v239);
  v209 = (void (**)(uint64_t, uint64_t))((char *)&v192 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = __chkstk_darwin(v34);
  v221 = (uint64_t)&v192 - v37;
  __chkstk_darwin(v36);
  v231 = (char *)&v192 - v38;
  v39 = type metadata accessor for JSONObject(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = __chkstk_darwin(v39);
  v218 = (char *)&v192 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v217 = (char *)&v192 - v44;
  v45 = __chkstk_darwin(v43);
  v216 = (char *)&v192 - v46;
  v47 = __chkstk_darwin(v45);
  v215 = (char *)&v192 - v48;
  v49 = __chkstk_darwin(v47);
  v214 = (char *)&v192 - v50;
  v51 = __chkstk_darwin(v49);
  v213 = (char *)&v192 - v52;
  v53 = __chkstk_darwin(v51);
  v212 = (uint64_t)&v192 - v54;
  v55 = __chkstk_darwin(v53);
  v211 = (uint64_t)&v192 - v56;
  v57 = __chkstk_darwin(v55);
  v210 = (uint64_t)&v192 - v58;
  v59 = __chkstk_darwin(v57);
  v204 = (uint64_t)&v192 - v60;
  v61 = __chkstk_darwin(v59);
  v203 = (uint64_t)&v192 - v62;
  v63 = __chkstk_darwin(v61);
  v65 = (char *)&v192 - v64;
  v66 = __chkstk_darwin(v63);
  v208 = (uint64_t)&v192 - v67;
  v68 = __chkstk_darwin(v66);
  v70 = (char *)&v192 - v69;
  __chkstk_darwin(v68);
  v72 = (char *)&v192 - v71;
  v73 = JSONObject.subscript.getter(0x54746E65746E6F63, 0xEB00000000657079);
  v74 = JSONObject.string.getter(v73);
  v76 = v75;
  v77 = *(void (**)(char *, uint64_t))(v40 + 8);
  v77(v72, v39);
  if (!v76)
  {
    v85 = (_QWORD *)type metadata accessor for JSONError(0);
    v87 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v85, v87, 0, 0);
    *v88 = 0x54746E65746E6F63;
    v88[1] = 0xEB00000000657079;
    v88[2] = v234;
    v89 = (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD *))(*(v85 - 1) + 104))(v88, enum case for JSONError.missingProperty(_:), v85);
    swift_willThrow(v89);
    v90 = a1;
    v91 = v39;
LABEL_7:
    v77(v90, v91);
    v82 = v235;
    goto LABEL_8;
  }
  v232 = a1;
  v233 = (_QWORD *)v39;
  swift_bridgeObjectRetain(v76);
  v78 = sub_1FC860(v74, v76);
  if ((v79 & 1) != 0)
  {
    v85 = (_QWORD *)type metadata accessor for JSONError(0);
    v92 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v85, v92, 0, 0);
    v94 = v93;
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2CF0);
    v96 = swift_allocObject(v95, 40, 7);
    *(_OWORD *)(v96 + 16) = xmmword_2EA0D0;
    *(_QWORD *)(v96 + 32) = swift_allocError(v85, v92, 0, 0);
    *v97 = v74;
    v97[1] = v76;
    v97[2] = (uint64_t)&type metadata for ShelfContentType;
    v98 = *(void (**)(uint64_t *, _QWORD, _QWORD *))(*(v85 - 1) + 104);
    v98(v97, enum case for JSONError.unknownCase(_:), v85);
    *v94 = 0x54746E65746E6F63;
    v94[1] = 0xEB00000000657079;
    v94[2] = v234;
    v94[3] = v96;
    v99 = ((uint64_t (*)(_QWORD *, _QWORD, _QWORD *))v98)(v94, enum case for JSONError.malformedProperty(_:), v85);
    swift_willThrow(v99);
    v90 = v232;
    v91 = (uint64_t)v233;
    goto LABEL_7;
  }
  v80 = v78;
  v199 = v77;
  swift_bridgeObjectRelease();
  v81 = v232;
  JSONObject.subscript.getter(0x736D657469, 0xE500000000000000);
  v82 = v235;
  v83 = v228;
  v84 = sub_1FA210((uint64_t)v70, v80, v235);
  if (v83)
  {
    v85 = v233;
    v86 = v199;
    v199(v81, (uint64_t)v233);
    v86(v70, (uint64_t)v85);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v82, v239);
    return v85;
  }
  v101 = (uint64_t)v84;
  v228 = 0;
  v199(v70, (uint64_t)v233);
  v194 = v80;
  *(_QWORD *)&v236 = v80;
  if (qword_3B00B0 != -1)
    swift_once(&qword_3B00B0, sub_BD8D8);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7090);
  v103 = __swift_project_value_buffer(v102, (uint64_t)qword_3F3588);
  v104 = v221;
  JSONContext.addingValue<A>(_:forProperty:)(&v236, v103, &type metadata for ShelfContentType);
  v193 = v101;
  *(_QWORD *)&v236 = v101;
  v105 = v231;
  if (qword_3B00B8 != -1)
    swift_once(&qword_3B00B8, sub_BD944);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7080);
  v107 = __swift_project_value_buffer(v106, (uint64_t)qword_3F35A0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7088);
  JSONContext.addingValue<A>(_:forProperty:)(&v236, v107, v108);
  v109 = v239;
  v192 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v192(v104, v239);
  v110 = v208;
  JSONObject.subscript.getter(0xD000000000000012, 0x8000000000313460);
  v111 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 16);
  v112 = v105;
  v113 = v109;
  v111(v104, v112, v109);
  sub_F1C0(&qword_3C1678, (void (*)(uint64_t))type metadata accessor for LegacyActionMenu, (uint64_t)&protocol conformance descriptor for LegacyActionMenu);
  v114 = v223;
  v115 = (void (*)(_QWORD, _QWORD, _QWORD))v202;
  ExpressibleByJSON.init(tryDeserializing:using:)(v110, v104, v202);
  v116 = v114;
  v117 = v200;
  sub_267BC(v116, v200, &qword_3C1670);
  v118 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0
                                                             + 48))(v117, 1, v115);
  v202 = v111;
  if (v118 == 1)
  {
    sub_1459C(v117, &qword_3C1670);
    v119 = type metadata accessor for ActionMenu(0);
    JSONObject.subscript.getter(0xD000000000000010, 0x8000000000313480);
    v111(v104, v231, v113);
    v120 = (uint64_t)v231;
    sub_F1C0(&qword_3C1680, (void (*)(uint64_t))type metadata accessor for ActionMenu, (uint64_t)&protocol conformance descriptor for ActionMenu);
    ExpressibleByJSON.init(tryDeserializing:using:)(v110, v104, v119);
  }
  else
  {
    v121 = v117;
    v122 = v196;
    sub_1FDFC4(v121, v196);
    v123 = v197;
    sub_1FE008(v122, (uint64_t)v197);
    v124 = v195;
    ActionMenu.init(from:)(v123, v195);
    sub_145D8(v122, type metadata accessor for LegacyActionMenu);
    v125 = type metadata accessor for ActionMenu(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v124, 0, 1, v125);
    sub_1FE04C(v124, v229);
    v120 = (uint64_t)v231;
  }
  JSONObject.subscript.getter(0x63416C6C41656573, 0xEC0000006E6F6974);
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v110, v120);
  v126 = v233;
  v127 = v199;
  v199((char *)v110, (uint64_t)v233);
  v128 = JSONObject.subscript.getter(0xD000000000000011, 0x800000000030AED0);
  v129 = v205;
  JSONObject.array.getter(v128);
  v130 = v65;
  v131 = v129;
  v127(v130, (uint64_t)v126);
  v132 = v206;
  v133 = v129;
  v134 = v207;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48))(v133, 1, v207) == 1)
  {
    sub_1459C(v131, &qword_3B4F30);
    v205 = 0;
  }
  else
  {
    v135 = v198;
    v136 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 32))(v198, v131, v134);
    __chkstk_darwin(v136);
    type metadata accessor for HeaderButtonItem(0);
    v137 = v228;
    v205 = JSONArray.compactMap<A>(_:)(sub_1FDFAC);
    v228 = v137;
    (*(void (**)(char *, uint64_t))(v132 + 8))(v135, v134);
  }
  v138 = v203;
  v139 = JSONObject.subscript.getter(0x4372655073776F72, 0xED00006E6D756C6FLL);
  v140 = JSONObject.int.getter(v139);
  v142 = v141;
  v199((char *)v138, (uint64_t)v126);
  if ((v142 & 1) != 0 || v140 <= 0)
  {
    if (v194 - 1 > 0xF)
      v140 = 1;
    else
      v140 = qword_2FFAC0[v194 - 1];
  }
  v206 = v140;
  v143 = type metadata accessor for ArtworkModel(0);
  JSONObject.subscript.getter(0x7241726564616568, 0xED00006B726F7774);
  v144 = v221;
  v145 = v239;
  v146 = (void (*)(uint64_t, char *, uint64_t))v202;
  ((void (*)(uint64_t, char *, uint64_t))v202)(v221, v82, v239);
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  ExpressibleByJSON.init(tryDeserializing:using:)(v110, v144, v143);
  v147 = type metadata accessor for ImpressionMetrics(0);
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
  v146(v144, v82, v145);
  ExpressibleByJSON.init(tryDeserializing:using:)(v110, v144, v147);
  v148 = v204;
  JSONObject.subscript.getter(0x756F72676B636162, 0xEF726F6C6F43646ELL);
  v149 = (uint64_t)v209;
  v146((uint64_t)v209, v82, v145);
  v150 = v228;
  v151 = sub_449EC(v148, v149);
  if (v150)
  {
    swift_errorRelease(v150);
    v209 = 0;
    v228 = 0;
    LODWORD(v207) = 255;
  }
  else
  {
    LODWORD(v207) = v152;
    v209 = v151;
    v228 = 0;
  }
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1688);
  JSONObject.subscript.getter(0x497365766C656873, 0xED0000746E65746ELL);
  ((void (*)(uint64_t, char *, uint64_t))v202)(v144, v82, v239);
  sub_32914(&qword_3C1690, &qword_3C1688, (uint64_t)&protocol conformance descriptor for AnyIntentModel<A>);
  v154 = v227;
  ExpressibleByJSON.init(tryDeserializing:using:)(v110, v144, v153);
  v155 = v210;
  v156 = JSONObject.subscript.getter(25705, 0xE200000000000000);
  v221 = JSONObject.string.getter(v156);
  v208 = v157;
  v158 = v233;
  v159 = v199;
  v199((char *)v155, (uint64_t)v233);
  v160 = v211;
  v161 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v210 = JSONObject.string.getter(v161);
  v204 = v162;
  v159((char *)v160, (uint64_t)v158);
  v163 = v212;
  v164 = JSONObject.subscript.getter(0x656C746974627573, 0xE800000000000000);
  v211 = JSONObject.string.getter(v164);
  v203 = v165;
  v159((char *)v163, (uint64_t)v158);
  v166 = v213;
  v167 = JSONObject.subscript.getter(0xD000000000000012, 0x80000000003134A0);
  v212 = JSONObject.string.getter(v167);
  v202 = v168;
  v159(v166, (uint64_t)v158);
  v169 = v214;
  v170 = JSONObject.subscript.getter(0xD000000000000018, 0x80000000003134C0);
  LODWORD(v213) = JSONObject.BOOL.getter(v170);
  v159(v169, (uint64_t)v158);
  sub_267BC(v229, v222, (uint64_t *)&unk_3BF7E0);
  v171 = v215;
  v172 = JSONObject.subscript.getter(0x6F7A69726F487369, 0xEC0000006C61746ELL);
  v173 = JSONObject.BOOL.getter(v172);
  v159(v171, (uint64_t)v158);
  v174 = v216;
  v175 = JSONObject.subscript.getter(7107189, 0xE300000000000000);
  JSONObject.url.getter(v175);
  v159(v174, (uint64_t)v158);
  v176 = v217;
  v177 = JSONObject.subscript.getter(0xD000000000000010, 0x80000000003134E0);
  v178 = JSONObject.BOOL.getter(v177);
  v159(v176, (uint64_t)v158);
  v179 = v218;
  v180 = JSONObject.subscript.getter(0x6D6F724665646968, 0xEF79616C50726143);
  v181 = JSONObject.BOOL.getter(v180);
  v159(v179, (uint64_t)v158);
  sub_267BC(v230, v224, &qword_3BEB70);
  v182 = v154;
  v183 = v219;
  sub_267BC(v182, v219, &qword_3C1668);
  v184 = *(_QWORD *)(v153 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v183, 1, v153) == 1)
  {
    sub_1459C(v183, &qword_3C1668);
    v236 = 0u;
    v237 = 0u;
    v238 = 0;
  }
  else
  {
    *((_QWORD *)&v237 + 1) = v153;
    v238 = sub_32914(&qword_3C1698, &qword_3C1688, (uint64_t)&protocol conformance descriptor for AnyIntentModel<A>);
    v185 = __swift_allocate_boxed_opaque_existential_2Tm(&v236);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v184 + 32))(v185, v183, v153);
  }
  v186 = v213 & 1;
  v187 = v225;
  v188 = v220;
  sub_267BC(v225, v220, (uint64_t *)&unk_3B8790);
  v189 = objc_allocWithZone(v234);
  v85 = Shelf.init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(v221, v208, v194, v210, v204, v211, v203, v212, (uint64_t)v202, v186, v222, Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0, v205, v173 & 1, v193, v226, (uint64_t)v209, v207, v206,
          v178 & 1,
          v181 & 1,
          v224,
          (uint64_t)&v236,
          v188);
  v199(v232, (uint64_t)v233);
  sub_1459C(v227, &qword_3C1668);
  sub_1459C(v187, (uint64_t *)&unk_3B8790);
  sub_1459C(v230, &qword_3BEB70);
  sub_1459C(v229, (uint64_t *)&unk_3BF7E0);
  sub_1459C(v223, &qword_3C1670);
  v190 = v239;
  v191 = (void (*)(char *, uint64_t))v192;
  v192((uint64_t)v231, v239);
  v191(v235, v190);
  return v85;
}

id ShelfContentTypeSet.__allocating_init(_:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

BOOL sub_1F7620(Swift::UInt a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13);
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1F770C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20);
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1F7840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t ShelfContentType.string.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[3];

  result = 0x74616D726F666E69;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x65646F73697065;
      break;
    case 2:
      result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      result = 0x5365646F73697065;
      break;
    case 5:
    case 24:
    case 53:
    case 54:
      result = 0xD000000000000011;
      break;
    case 6:
      result = 0xD000000000000012;
      break;
    case 7:
      result = 0x6867696C68676968;
      break;
    case 8:
      result = 0xD00000000000001BLL;
      break;
    case 9:
      result = 0xD000000000000010;
      break;
    case 10:
      v6 = 0x4C6C6C616D73;
      goto LABEL_29;
    case 11:
      result = 0x6F4C6D756964656DLL;
      break;
    case 12:
      v6 = 0x4C656772616CLL;
LABEL_29:
      result = v6 & 0xFFFFFFFFFFFFLL | 0x636F000000000000;
      break;
    case 13:
      result = 0xD000000000000010;
      break;
    case 14:
      result = 0x656C626174696465;
      break;
    case 15:
      result = 0xD000000000000013;
      break;
    case 16:
      result = 0x6E6F69746361;
      break;
    case 17:
      result = 0x7374736163646F70;
      break;
    case 18:
      result = 0x656C626174696465;
      break;
    case 19:
      result = 0x6B726F77747261;
      break;
    case 20:
      result = 0x7061726761726170;
      break;
    case 21:
      result = 0x6169726F74696465;
      break;
    case 22:
      result = 0x65736163776F6873;
      break;
    case 23:
      result = 0x6B63697262;
      break;
    case 25:
      result = 0xD000000000000014;
      break;
    case 26:
      result = 0x4865646F73697065;
      break;
    case 27:
      result = 0x73676E69746172;
      break;
    case 28:
      result = 0x7461526F54706174;
      break;
    case 29:
      result = 0x73776569766572;
      break;
    case 30:
      result = 0x6341776569766572;
      break;
    case 31:
      result = 0x6E6F73726570;
      break;
    case 32:
      result = 0x656C746974;
      break;
    case 33:
      result = 0x7473694C6B6E696CLL;
      break;
    case 34:
      result = 0xD000000000000016;
      break;
    case 35:
      result = 0x614C686372616573;
      break;
    case 36:
      result = 0x6F77737265776F70;
      break;
    case 37:
      result = 0xD000000000000010;
      break;
    case 38:
      result = 0x6C656E6E616863;
      break;
    case 39:
      result = 0x4F6C656E6E616863;
      break;
    case 40:
      result = 0x486C656E6E616863;
      break;
    case 41:
      result = 0x61426C6C65737075;
      break;
    case 42:
      result = 0xD000000000000013;
      break;
    case 43:
      result = 0xD000000000000018;
      break;
    case 44:
      result = 0x6C6562616CLL;
      break;
    case 45:
      result = 0x4865646F73697065;
      break;
    case 46:
      result = 0x6F726548776F6873;
      break;
    case 47:
      result = 0x616553646578696DLL;
      break;
    case 48:
      result = 0xD000000000000015;
      break;
    case 49:
      result = 0x7045686372616573;
      break;
    case 50:
      result = 0x6853686372616573;
      break;
    case 51:
      result = 0x6843686372616573;
      break;
    case 52:
      result = 0x6948686372616573;
      break;
    case 55:
      result = 0x676E6964616F6CLL;
      break;
    default:
      v7[1] = v1;
      v7[2] = v2;
      v7[0] = a1;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ShelfContentType, v7, &type metadata for ShelfContentType, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

id Shelf.__allocating_init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int128 a11, uint64_t a12, char a13, __int128 a14, uint64_t a15, char a16, uint64_t a17, char a18, char a19, __int128 a20,uint64_t a21)
{
  objc_class *v21;
  id v22;

  v22 = objc_allocWithZone(v21);
  return Shelf.init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, *((uint64_t *)&a11 + 1), a12, a13, a14, *((uint64_t *)&a14 + 1), a15, a16, a17,
           a18,
           a19,
           a20,
           *((uint64_t *)&a20 + 1),
           a21);
}

uint64_t ShelfContentType.init(string:)(uint64_t a1, unint64_t a2)
{
  return sub_1FC860(a1, a2);
}

BOOL ShelfContentType.isCompatible(with:)(Swift::UInt a1, char a2, unint64_t a3)
{
  Swift::Int v5;
  BOOL v6;

  if ((a2 & 1) != 0)
    return 0;
  v5 = sub_B2B78((uint64_t)&off_372B40);
  if (a3 <= 0x27 && ((1 << a3) & 0xC000003C00) != 0)
  {
    v6 = sub_1F7620(a1, v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    return a3 == a1;
  }
}

char *sub_1F80E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *result;
  char *v121;
  char **v122;
  uint64_t *v123;
  void (*v124)(uint64_t);
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char **v151;
  unint64_t *v152;
  void (*v153)(uint64_t);
  void *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  void (*v162)(uint64_t);
  char **v163;
  unint64_t *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t, uint64_t);
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char v190;
  char *v191;
  char *v192;
  char v193;
  char **v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *boxed_opaque_existential_2Tm;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  char *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  _QWORD *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;

  v275 = a2;
  v274 = a1;
  v270 = a4;
  v5 = type metadata accessor for JSONContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  v272 = v5;
  v273 = v6;
  v7 = __chkstk_darwin(v5);
  v263 = (char *)&v240 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v262 = (char *)&v240 - v10;
  v11 = __chkstk_darwin(v9);
  v261 = (char *)&v240 - v12;
  v13 = __chkstk_darwin(v11);
  v260 = (char *)&v240 - v14;
  v15 = __chkstk_darwin(v13);
  v259 = (char *)&v240 - v16;
  v17 = __chkstk_darwin(v15);
  v258 = (char *)&v240 - v18;
  v19 = __chkstk_darwin(v17);
  v265 = (char *)&v240 - v20;
  v21 = __chkstk_darwin(v19);
  v266 = (char *)&v240 - v22;
  v23 = __chkstk_darwin(v21);
  v264 = (char *)&v240 - v24;
  v25 = __chkstk_darwin(v23);
  v257 = (char *)&v240 - v26;
  v27 = __chkstk_darwin(v25);
  v255 = (char *)&v240 - v28;
  v29 = __chkstk_darwin(v27);
  v256 = (char *)&v240 - v30;
  v31 = __chkstk_darwin(v29);
  v254 = (char *)&v240 - v32;
  v33 = __chkstk_darwin(v31);
  v253 = (char *)&v240 - v34;
  v35 = __chkstk_darwin(v33);
  v252 = (char *)&v240 - v36;
  v37 = __chkstk_darwin(v35);
  v251 = (char *)&v240 - v38;
  v39 = __chkstk_darwin(v37);
  v250 = (char *)&v240 - v40;
  v41 = __chkstk_darwin(v39);
  v248 = (char *)&v240 - v42;
  v43 = __chkstk_darwin(v41);
  v247 = (char *)&v240 - v44;
  v45 = __chkstk_darwin(v43);
  v246 = (char *)&v240 - v46;
  v47 = __chkstk_darwin(v45);
  v249 = (char *)&v240 - v48;
  v49 = __chkstk_darwin(v47);
  v268 = (char *)&v240 - v50;
  v51 = __chkstk_darwin(v49);
  v245 = (char *)&v240 - v52;
  v53 = __chkstk_darwin(v51);
  v267 = (char *)&v240 - v54;
  __chkstk_darwin(v53);
  v269 = (char *)&v240 - v55;
  v271 = type metadata accessor for JSONObject(0);
  v56 = __chkstk_darwin(v271);
  v57 = __chkstk_darwin(v56);
  v59 = (char *)&v240 - v58;
  __chkstk_darwin(v57);
  v61 = __chkstk_darwin((char *)&v240 - v60);
  v62 = __chkstk_darwin(v61);
  v63 = __chkstk_darwin(v62);
  v64 = __chkstk_darwin(v63);
  v65 = __chkstk_darwin(v64);
  v66 = __chkstk_darwin(v65);
  v67 = __chkstk_darwin(v66);
  v68 = __chkstk_darwin(v67);
  v244 = (char *)&v240 - v69;
  v70 = __chkstk_darwin(v68);
  v243 = (char *)&v240 - v71;
  v72 = __chkstk_darwin(v70);
  v242 = (char *)&v240 - v73;
  v74 = __chkstk_darwin(v72);
  v240 = (char *)&v240 - v75;
  v76 = __chkstk_darwin(v74);
  v241 = (char *)&v240 - v77;
  v78 = __chkstk_darwin(v76);
  v79 = __chkstk_darwin(v78);
  v81 = (char *)&v240 - v80;
  v82 = __chkstk_darwin(v79);
  v84 = (void (*)(char *, uint64_t, uint64_t))((char *)&v240 - v83);
  v85 = __chkstk_darwin(v82);
  v87 = (char *)&v240 - v86;
  v88 = __chkstk_darwin(v85);
  v90 = (char *)&v240 - v89;
  v91 = __chkstk_darwin(v88);
  v93 = (char *)&v240 - v92;
  v94 = __chkstk_darwin(v91);
  v96 = (char *)&v240 - v95;
  v97 = __chkstk_darwin(v94);
  v99 = (char *)&v240 - v98;
  v100 = __chkstk_darwin(v97);
  v102 = (char *)&v240 - v101;
  v103 = __chkstk_darwin(v100);
  v115 = a3;
  v116 = (char *)&v240 - v111;
  switch(v115)
  {
    case 0:
      v195 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v109, v274, v271);
      v196 = (uint64_t)v257;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v257, v275, v272);
      v197 = type metadata accessor for Information(0);
      v127 = v270;
      v270[3] = v197;
      v127[4] = sub_F1C0(&qword_3BEF78, (void (*)(uint64_t))type metadata accessor for Information, (uint64_t)&protocol conformance descriptor for Information);
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v127);
      v129 = v276;
      result = (char *)Information.init(deserializing:using:)(v195, v196, boxed_opaque_existential_2Tm);
      goto LABEL_6;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 45:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))((char *)&v240 - v111, v274, v271);
      v117 = (uint64_t)v269;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v269, v275, v272);
      v118 = type metadata accessor for LegacyEpisodeLockup(0);
      swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
      v119 = v276;
      result = (char *)LegacyEpisodeLockup.init(deserializing:using:)((uint64_t)v116, v117);
      if (v119)
        return result;
      v121 = result;
      v122 = (char **)v270;
      v270[3] = v118;
      v123 = &qword_3B2E38;
      v124 = (void (*)(uint64_t))type metadata accessor for LegacyEpisodeLockup;
      goto LABEL_54;
    case 7:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v81, v274, v271);
      v199 = (uint64_t)v250;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v250, v275, v272);
      v200 = v276;
      result = (char *)sub_BECE4(v81, v199);
      if (v200)
        return result;
      v160 = result;
      v201 = type metadata accessor for HighlightItem(0);
      v162 = (void (*)(uint64_t))type metadata accessor for HighlightItem;
      v163 = (char **)v270;
      v270[3] = v201;
      v164 = (unint64_t *)&unk_3B7108;
      v165 = &protocol conformance descriptor for HighlightItem;
      goto LABEL_52;
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 31:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v102, v274, v271);
      v130 = (uint64_t)v267;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v267, v275, v272);
      v131 = type metadata accessor for LegacyLockup(0);
      swift_allocObject(v131, *(unsigned int *)(v131 + 48), *(unsigned __int16 *)(v131 + 52));
      v132 = v276;
      result = LegacyLockup.init(deserializing:using:)((uint64_t)v102, v130);
      if (v132)
        return result;
      v121 = result;
      v122 = (char **)v270;
      v270[3] = v131;
      v123 = &qword_3B1DA0;
      v124 = (void (*)(uint64_t))type metadata accessor for LegacyLockup;
      goto LABEL_54;
    case 16:
    case 17:
    case 18:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v96, v274, v271);
      v125 = (uint64_t)v268;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v268, v275, v272);
      v126 = type metadata accessor for Link(0);
      v127 = v270;
      v270[3] = v126;
      v127[4] = sub_F1C0(&qword_3C1848, (void (*)(uint64_t))type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
      v128 = __swift_allocate_boxed_opaque_existential_2Tm(v127);
      v129 = v276;
      result = (char *)Link.init(deserializing:using:)((uint64_t)v96, v125, (uint64_t)v128);
      goto LABEL_6;
    case 19:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v93, v274, v271);
      v202 = v249;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v249, v275, v272);
      v203 = type metadata accessor for ArtworkModel(0);
      v127 = v270;
      v270[3] = v203;
      v127[4] = sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
      __swift_allocate_boxed_opaque_existential_2Tm(v127);
      v129 = v276;
      result = (char *)ArtworkModel.init(deserializing:using:)(v93, v202);
LABEL_6:
      if (v129)
        return (char *)__swift_deallocate_boxed_opaque_existential_2(v127);
      return result;
    case 20:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v90, v274, v271);
      v204 = (uint64_t)v246;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v246, v275, v272);
      v205 = v90;
      goto LABEL_37;
    case 21:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v87, v274, v271);
      v172 = (uint64_t)v247;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v247, v275, v272);
      v173 = v276;
      result = (char *)sub_D2DE0(v87, v172);
      if (v173)
        return result;
      v160 = result;
      v174 = type metadata accessor for EditorialCard(0);
      v162 = (void (*)(uint64_t))type metadata accessor for EditorialCard;
      v163 = (char **)v270;
      v270[3] = v174;
      v164 = (unint64_t *)&unk_3B7C48;
      v165 = &protocol conformance descriptor for EditorialCard;
      goto LABEL_52;
    case 22:
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v112 + 16))(v84, v274, v271);
      v175 = (uint64_t)v248;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v248, v275, v272);
      v176 = v276;
      result = (char *)sub_FAD68(v84, v175);
      if (v176)
        return result;
      v160 = result;
      v177 = type metadata accessor for Showcase(0);
      v162 = (void (*)(uint64_t))type metadata accessor for Showcase;
      v163 = (char **)v270;
      v270[3] = v177;
      v164 = (unint64_t *)&unk_3B9670;
      v165 = &protocol conformance descriptor for Showcase;
      goto LABEL_52;
    case 23:
      v157 = v105;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v105, v274, v271);
      v158 = (uint64_t)v251;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v251, v275, v272);
      v159 = v276;
      result = (char *)sub_1C040C(v157, v158);
      if (v159)
        return result;
      v160 = result;
      v161 = type metadata accessor for Brick(0);
      v162 = (void (*)(uint64_t))type metadata accessor for Brick;
      v163 = (char **)v270;
      v270[3] = v161;
      v164 = (unint64_t *)&unk_3C0738;
      v165 = &protocol conformance descriptor for Brick;
      goto LABEL_52;
    case 24:
      v166 = v112;
      v167 = type metadata accessor for ShowHeader(0);
      v168 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
      v169 = v241;
      v168(v241, v274, v271);
      v170 = (uint64_t)v252;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v252, v275, v272);
      v171 = v276;
      result = (char *)ShowHeader.__allocating_init(deserializing:using:)(v169, v170);
      if (v171)
        return result;
      v150 = result;
      v151 = (char **)v270;
      v270[3] = v167;
      v152 = (unint64_t *)&unk_3C1840;
      v153 = (void (*)(uint64_t))type metadata accessor for ShowHeader;
      v154 = &protocol conformance descriptor for ShowHeader;
      goto LABEL_27;
    case 25:
    case 26:
      v145 = v112;
      v146 = v110;
      v147 = type metadata accessor for EpisodeHeader(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v146, v274, v271);
      v148 = (uint64_t)v264;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v264, v275, v272);
      v149 = v276;
      result = (char *)EpisodeHeader.__allocating_init(deserializing:using:)(v146, v148);
      if (v149)
        return result;
      v150 = result;
      v151 = (char **)v270;
      v270[3] = v147;
      v152 = (unint64_t *)&unk_3C1828;
      v153 = (void (*)(uint64_t))type metadata accessor for EpisodeHeader;
      v154 = &protocol conformance descriptor for EpisodeHeader;
      goto LABEL_27;
    case 27:
      v214 = (uint64_t)v240;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v240, v274, v271);
      v215 = (uint64_t)v253;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v253, v275, v272);
      v216 = v276;
      result = (char *)sub_8FD28(v214, v215);
      if (v216)
        return result;
      v160 = result;
      v217 = type metadata accessor for Ratings(0);
      v162 = (void (*)(uint64_t))type metadata accessor for Ratings;
      v163 = (char **)v270;
      v270[3] = v217;
      v164 = (unint64_t *)&unk_3BED10;
      v165 = &protocol conformance descriptor for Ratings;
      goto LABEL_52;
    case 28:
      v218 = (uint64_t)v242;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v242, v274, v271);
      v219 = (uint64_t)v254;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v254, v275, v272);
      v220 = v276;
      result = (char *)sub_90508(v218, v219);
      if (v220)
        return result;
      v160 = result;
      v221 = type metadata accessor for TapToRate(0);
      v162 = (void (*)(uint64_t))type metadata accessor for TapToRate;
      v163 = (char **)v270;
      v270[3] = v221;
      v164 = (unint64_t *)&unk_3C1838;
      v165 = &protocol conformance descriptor for TapToRate;
      goto LABEL_52;
    case 29:
      v222 = v243;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v243, v274, v271);
      v223 = (uint64_t)v256;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v256, v275, v272);
      v224 = type metadata accessor for Review(0);
      swift_allocObject(v224, *(unsigned int *)(v224 + 48), *(unsigned __int16 *)(v224 + 52));
      v225 = v276;
      result = (char *)Review.init(deserializing:using:)(v222, v223);
      if (v225)
        return result;
      v121 = result;
      v122 = (char **)v270;
      v270[3] = v224;
      v123 = (uint64_t *)&qword_3B54B8;
      v124 = (void (*)(uint64_t))type metadata accessor for Review;
      v226 = &protocol conformance descriptor for Review;
      goto LABEL_55;
    case 30:
      v232 = v244;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v244, v274, v271);
      v233 = (uint64_t)v255;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v255, v275, v272);
      v234 = v276;
      result = (char *)sub_8FAD4(v232, v233);
      if (v234)
        return result;
      v160 = result;
      v235 = type metadata accessor for ReviewActions(0);
      v162 = (void (*)(uint64_t))type metadata accessor for ReviewActions;
      v163 = (char **)v270;
      v270[3] = v235;
      v164 = (unint64_t *)&unk_3C1830;
      v165 = &protocol conformance descriptor for ReviewActions;
      goto LABEL_52;
    case 32:
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v99, v274, v271);
      v204 = (uint64_t)v245;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v245, v275, v272);
      v205 = v99;
LABEL_37:
      v206 = v276;
      result = (char *)sub_F81EC(v205, v204);
      if (v206)
        return result;
      v160 = result;
      v207 = type metadata accessor for Paragraph(0);
      v162 = (void (*)(uint64_t))type metadata accessor for Paragraph;
      v163 = (char **)v270;
      v270[3] = v207;
      v164 = (unint64_t *)&unk_3B67B0;
      v165 = &protocol conformance descriptor for Paragraph;
      goto LABEL_52;
    case 38:
    case 39:
      v133 = *(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16);
      v134 = v114;
      v135 = v104;
      v136 = v274;
      v137 = v271;
      v274 = v112;
      v133(v114, v136, v271);
      v138 = v272;
      v139 = *(void (**)(char *, uint64_t, uint64_t))(v273 + 16);
      v140 = v266;
      v139(v266, v275, v272);
      v141 = type metadata accessor for LegacyChannelLockup(0);
      swift_allocObject(v141, *(unsigned int *)(v141 + 48), *(unsigned __int16 *)(v141 + 52));
      v133(v135, v134, v137);
      v142 = (uint64_t)v265;
      v139(v265, (uint64_t)v140, v138);
      v143 = v276;
      v144 = LegacyLockup.init(deserializing:using:)(v135, v142);
      if (v143)
      {
        (*(void (**)(char *, uint64_t))(v273 + 8))(v140, v138);
        return (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v274 + 8))(v134, v137);
      }
      else
      {
        v121 = v144;
        (*(void (**)(char *, uint64_t))(v273 + 8))(v140, v138);
        (*(void (**)(uint64_t, uint64_t))(v274 + 8))(v134, v137);
        v122 = (char **)v270;
        v270[3] = v141;
        v123 = &qword_3B2E30;
        v124 = (void (*)(uint64_t))type metadata accessor for LegacyChannelLockup;
LABEL_54:
        v226 = &protocol conformance descriptor for LegacyLockup;
LABEL_55:
        result = (char *)sub_F1C0((unint64_t *)v123, v124, (uint64_t)v226);
        v122[4] = result;
        *v122 = v121;
      }
      return result;
    case 40:
      v178 = v112;
      v179 = v108;
      v180 = type metadata accessor for ChannelHeader(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v178 + 16))(v179, v274, v271);
      v181 = (uint64_t)v258;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v258, v275, v272);
      v182 = v276;
      result = (char *)ChannelHeader.__allocating_init(deserializing:using:)(v179, v181);
      if (v182)
        return result;
      v150 = result;
      v151 = (char **)v270;
      v270[3] = v180;
      v152 = (unint64_t *)&unk_3C1820;
      v153 = (void (*)(uint64_t))type metadata accessor for ChannelHeader;
      v154 = &protocol conformance descriptor for ChannelHeader;
      goto LABEL_27;
    case 41:
      v183 = v112;
      v184 = v107;
      v185 = type metadata accessor for UpsellBanner(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v184, v274, v271);
      v186 = (uint64_t)v259;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v259, v275, v272);
      v187 = v276;
      result = (char *)UpsellBanner.__allocating_init(deserializing:using:)(v184, v186);
      if (v187)
        return result;
      v150 = result;
      v151 = (char **)v270;
      v270[3] = v185;
      v152 = &qword_3C01A8;
      v153 = (void (*)(uint64_t))type metadata accessor for UpsellBanner;
      v154 = &protocol conformance descriptor for UpsellBanner;
LABEL_27:
      result = (char *)sub_F1C0(v152, v153, (uint64_t)v154);
      v151[4] = result;
      *v151 = v150;
      break;
    case 42:
      v236 = v106;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v106, v274, v271);
      v237 = (uint64_t)v260;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v260, v275, v272);
      v238 = v276;
      result = (char *)sub_22005C(v236, v237);
      if (v238)
        return result;
      v160 = result;
      v239 = type metadata accessor for EpisodeUpsellBannerModel(0);
      v162 = (void (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerModel;
      v163 = (char **)v270;
      v270[3] = v239;
      v164 = (unint64_t *)&unk_3C1818;
      v165 = &protocol conformance descriptor for EpisodeUpsellBannerModel;
LABEL_52:
      result = (char *)sub_F1C0(v164, v162, (uint64_t)v165);
      v163[4] = result;
      *v163 = v160;
      break;
    case 43:
      v155 = (char *)v103;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v103, v274, v271);
      v156 = (uint64_t)v261;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v261, v275, v272);
      goto LABEL_29;
    case 44:
      v155 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v59, v274, v271);
      v156 = (uint64_t)v262;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v262, v275, v272);
LABEL_29:
      v188 = v276;
      result = (char *)sub_3F1E4(v155, v156);
      if (!v188)
      {
        v191 = result;
        v192 = v189;
        v193 = v190;
        v194 = (char **)v270;
        v270[3] = &type metadata for Label;
        result = (char *)sub_3F474();
        v194[4] = result;
        *v194 = v191;
        v194[1] = v192;
        *((_BYTE *)v194 + 16) = v193 & 1;
      }
      break;
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 53:
    case 54:
      result = (char *)sub_1F94B8(v274, v275, v270);
      break;
    case 52:
      v208 = v113;
      v209 = v112;
      v210 = type metadata accessor for SearchHint(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v208, v274, v271);
      v211 = v263;
      (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v263, v275, v272);
      v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1808);
      v213 = v270;
      v270[3] = v212;
      v213[4] = sub_205CFC();
      __swift_allocate_boxed_opaque_existential_2Tm(v213);
      sub_F1C0(&qword_3B5C78, (void (*)(uint64_t))type metadata accessor for SearchHint, (uint64_t)&protocol conformance descriptor for SearchHint);
      result = (char *)ExpressibleByJSON.init(tryDeserializing:using:)(v208, v211, v210);
      break;
    case 55:
      v227 = type metadata accessor for EmptyModel(0);
      v228 = v270;
      v270[3] = v227;
      v228[4] = sub_F1C0(&qword_3C1800, (void (*)(uint64_t))type metadata accessor for EmptyModel, (uint64_t)&protocol conformance descriptor for EmptyModel);
      v229 = __swift_allocate_boxed_opaque_existential_2Tm(v228);
      v230 = (char *)v229 + *(int *)(v227 + 20);
      v231 = type metadata accessor for ImpressionMetrics(0);
      result = (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 56))(v230, 1, 1, v231);
      *v229 = 0x676E6964616F6CLL;
      v229[1] = 0xE700000000000000;
      break;
    default:
      v277 = v115;
      result = (char *)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ShelfContentType, &v277, &type metadata for ShelfContentType, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

_QWORD *sub_1F94B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *boxed_opaque_existential_2Tm;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23[3];
  _BYTE v24[40];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  if (qword_3B01C0 != -1)
    swift_once(&qword_3B01C0, sub_1F96D8);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1850);
  __swift_project_value_buffer(v7, (uint64_t)qword_3C1650);
  v8 = sub_32914(&qword_3C1858, &qword_3C1850, (uint64_t)&protocol conformance descriptor for ComponentTypes<A>);
  v9 = sub_205D78();
  v10 = sub_205DBC();
  result = JSONTypeCluster<>.makeInstance(byDeserializing:using:)(v28, a1, a2, v7, v8, v9, v10);
  if (!v3)
  {
    sub_150C8((uint64_t)v28, (uint64_t)v24);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1870);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1878);
    if ((swift_dynamicCast(v23, v24, v12, v13, 6) & 1) != 0)
    {
      sub_205E00(v23, &v25);
      v14 = v26;
      v15 = v27;
      v16 = __swift_project_boxed_opaque_existential_1(&v25, v26);
      a3[3] = v14;
      a3[4] = v15;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(boxed_opaque_existential_2Tm, v16, v14);
      __swift_destroy_boxed_opaque_existential_1(v28);
      v18 = &v25;
    }
    else
    {
      memset(v23, 0, sizeof(v23));
      sub_1459C((uint64_t)v23, &qword_3C1880);
      v19 = type metadata accessor for JSONError(0);
      v20 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      swift_allocError(v19, v20, 0, 0);
      *v21 = v12;
      v21[1] = (uint64_t)_swiftEmptyArrayStorage;
      v22 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, enum case for JSONError.malformedDocument(_:), v19);
      swift_willThrow(v22);
      v18 = (__int128 *)v28;
    }
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1(v18);
  }
  return result;
}

uint64_t sub_1F96D8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1850);
  __swift_allocate_value_buffer(v0, qword_3C1650);
  __swift_project_value_buffer(v0, (uint64_t)qword_3C1650);
  v1 = sub_205E18();
  v2 = sub_205D78();
  v3 = sub_205DBC();
  return ComponentTypes.init(_:)(&type metadata for ComponentKinds, v1, &type metadata for ComponentKinds, v2, v3);
}

unint64_t ShelfContentType.init(rawValue:)(unint64_t a1)
{
  return sub_1FE094(a1);
}

unint64_t sub_1F9774@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1FE094(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t ShelfContentTypeSet.contents.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents));
}

id ShelfContentTypeSet.init(_:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ShelfContentTypeSet();
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t sub_1F9850()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents);
  v2 = sub_1FE0C4();
  return Set.hashValue.getter(v1, &type metadata for ShelfContentType, v2);
}

uint64_t sub_1F9888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  char *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_267BC(a1, (uint64_t)v7, (uint64_t *)&unk_3BC540);
  if (!v8)
  {
    sub_1459C((uint64_t)v7, (uint64_t *)&unk_3BC540);
    goto LABEL_5;
  }
  v2 = type metadata accessor for ShelfContentTypeSet();
  if ((swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_5:
    v4 = 0;
    return v4 & 1;
  }
  v3 = v6;
  v4 = sub_1F992C(*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents), *(_QWORD *)&v6[OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents]);

  return v4 & 1;
}

Swift::Int sub_1F992C(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    Hasher.init(_seed:)(v21);
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_1F9BA8()
{
  return sub_1F9C4C((uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&Set.debugDescription.getter);
}

id sub_1F9BC0(char *a1, uint64_t a2, void (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  uint64_t v5;
  unint64_t v6;
  char *v7;
  NSString v8;

  v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents];
  v6 = sub_1FE0C4();
  v7 = a1;
  a3(v5, &type metadata for ShelfContentType, v6);

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1F9C40()
{
  return sub_1F9C4C((uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&Set.description.getter);
}

uint64_t sub_1F9C4C(uint64_t (*a1)(uint64_t, ValueMetadata *, unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit19ShelfContentTypeSet_contents);
  v3 = sub_1FE0C4();
  return a1(v2, &type metadata for ShelfContentType, v3);
}

void ShelfContentTypeSet.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.ShelfContentTypeSet", 28, "init()", 6, 0);
  __break(1u);
}

id ShelfContentTypeSet.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfContentTypeSet();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t static Shelf.parentShelfItemsMarker.getter()
{
  return 0xD000000000000010;
}

uint64_t Shelf.id.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit5Shelf_id);
}

uint64_t Shelf.contentType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_contentType);
}

uint64_t Shelf.title.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit5Shelf_title);
}

uint64_t Shelf.subtitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle);
}

uint64_t Shelf.displaySubtitleAsEyebrow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_displaySubtitleAsEyebrow);
}

uint64_t Shelf.subtitleSymbolName.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName);
}

uint64_t Shelf.titleContextMenu.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_titleContextMenu, a1, (uint64_t *)&unk_3BF7E0);
}

uint64_t Shelf.seeAllAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_seeAllAction));
}

uint64_t Shelf.headerButtonItems.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_headerButtonItems));
}

uint64_t Shelf.isHorizontal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_isHorizontal);
}

uint64_t Shelf.items.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_items));
}

uint64_t Shelf.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_url, a1, &qword_3B4370);
}

void *Shelf.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor);
  sub_C5CB0(v1, *(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor + 8));
  return v1;
}

uint64_t Shelf.rowsPerColumn.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_rowsPerColumn);
}

__n128 Shelf.shelvesIntent.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent + 24))
  {
    sub_150C8(v2, a1);
  }
  else
  {
    result = *(__n128 *)v2;
    v4 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v2 + 32);
  }
  return result;
}

uint64_t Shelf.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

uint64_t Shelf.mergeWhenFetched.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_mergeWhenFetched);
}

uint64_t Shelf.hideFromCarPlay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit5Shelf_hideFromCarPlay);
}

uint64_t Shelf.headerArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_headerArtwork, a1, &qword_3BEB70);
}

id Shelf.init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  _BYTE *v24;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  id v35;
  objc_class *ObjectType;
  objc_super v43;

  ObjectType = (objc_class *)swift_getObjectType();
  v28 = &v24[OBJC_IVAR____TtC8ShelfKit5Shelf_id];
  *v28 = a1;
  v28[1] = a2;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_contentType] = a3;
  v29 = &v24[OBJC_IVAR____TtC8ShelfKit5Shelf_title];
  *v29 = a4;
  v29[1] = a5;
  v30 = &v24[OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle];
  *v30 = a6;
  v30[1] = a7;
  v31 = &v24[OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName];
  *v31 = a8;
  v31[1] = a9;
  v24[OBJC_IVAR____TtC8ShelfKit5Shelf_displaySubtitleAsEyebrow] = a10;
  sub_267BC(a11, (uint64_t)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_titleContextMenu], (uint64_t *)&unk_3BF7E0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_seeAllAction] = a12;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_headerButtonItems] = a13;
  v24[OBJC_IVAR____TtC8ShelfKit5Shelf_isHorizontal] = a14;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_items] = a15;
  sub_267BC(a16, (uint64_t)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_url], &qword_3B4370);
  v32 = &v24[OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor];
  *(_QWORD *)v32 = a17;
  v32[8] = a18;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_rowsPerColumn] = a19;
  v24[OBJC_IVAR____TtC8ShelfKit5Shelf_mergeWhenFetched] = a20;
  v24[OBJC_IVAR____TtC8ShelfKit5Shelf_hideFromCarPlay] = a21;
  sub_267BC(a22, (uint64_t)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_headerArtwork], &qword_3BEB70);
  v33 = (uint64_t)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent];
  if (*(_QWORD *)(a23 + 24))
  {
    sub_150C8(a23, v33);
  }
  else
  {
    v34 = *(_OWORD *)(a23 + 16);
    *(_OWORD *)v33 = *(_OWORD *)a23;
    *(_OWORD *)(v33 + 16) = v34;
    *(_QWORD *)(v33 + 32) = *(_QWORD *)(a23 + 32);
  }
  sub_267BC(a24, (uint64_t)&v24[OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics], (uint64_t *)&unk_3B8790);
  v43.receiver = v24;
  v43.super_class = ObjectType;
  v35 = objc_msgSendSuper2(&v43, "init");
  sub_1459C(a24, (uint64_t *)&unk_3B8790);
  if (*(_QWORD *)(a23 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a23);
  sub_1459C(a22, &qword_3BEB70);
  sub_1459C(a16, &qword_3B4370);
  sub_1459C(a11, (uint64_t *)&unk_3BF7E0);
  return v35;
}

char *sub_1FA210(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBEE8);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  __chkstk_darwin(v5);
  v45 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONError(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v48 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for JSONArray(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  JSONObject.array.getter(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
  {
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    __chkstk_darwin(v21);
    *(&v45 - 2) = (char *)a2;
    *(&v45 - 1) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B0948);
    v12 = (char *)JSONArray.compactMap<A>(_:)(sub_205CE4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    return v12;
  }
  v18 = sub_1459C((uint64_t)v12, &qword_3B4F30);
  v19 = JSONObject.string.getter(v18);
  if (!v20)
    goto LABEL_15;
  if (v19 == 0xD000000000000010 && v20 == 0x800000000030DD10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000010, 0x800000000030DD10, 0);
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_15:
    v29 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v7, v29, 0, 0);
    v31 = v30;
    v32 = type metadata accessor for Shelf(0);
    *v31 = 0x736D657469;
    v31[1] = 0xE500000000000000;
    v31[2] = v32;
    v33 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v31, enum case for JSONError.missingProperty(_:), v7);
    swift_willThrow(v33);
    return v12;
  }
LABEL_8:
  if (qword_3B00B8 != -1)
    swift_once(&qword_3B00B8, sub_BD944);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7080);
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_3F35A0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7088);
  JSONContext.subscript.getter(&v52, v24, v25);
  v12 = v52;
  if (!v52)
  {
    v26 = v48;
    goto LABEL_17;
  }
  v26 = v48;
  if (qword_3B00B0 != -1)
    swift_once(&qword_3B00B0, sub_BD8D8);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7090);
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_3F3588);
  JSONContext.subscript.getter(&v52, v28, &type metadata for ShelfContentType);
  if (!ShelfContentType.isCompatible(with:)((Swift::UInt)v52, v53, a2))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    v34 = type metadata accessor for Shelf(0);
    *v26 = 0xD000000000000010;
    v26[1] = 0x800000000030DD10;
    v26[2] = v34;
    v26[3] = _swiftEmptyArrayStorage;
    v35 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v26, enum case for JSONError.malformedProperty(_:), v7);
    v36 = v45;
    static JSONContext.initFailureObserver.getter(v35);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBEF0);
    JSONContext.subscript.getter(&v52, v36, v37);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v47);
    sub_267BC((uint64_t)&v52, (uint64_t)v49, &qword_3BBEF8);
    v38 = v50;
    if (v50)
    {
      v39 = v7;
      v40 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      v41 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      v42 = swift_allocError(v7, v41, 0, 0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v8 + 16))(v43, v26, v39);
      dispatch thunk of JSONInitFailureObserver.tryingToInitialize(_:didFailWith:)(v34, v42, v38, v40);
      sub_1459C((uint64_t)&v52, &qword_3BBEF8);
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v26, v39);
      swift_errorRelease(v42);
      __swift_destroy_boxed_opaque_existential_1(v49);
    }
    else
    {
      sub_1459C((uint64_t)&v52, &qword_3BBEF8);
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v26, v7);
      sub_1459C((uint64_t)v49, &qword_3BBEF8);
    }
    return (char *)_swiftEmptyArrayStorage;
  }
  return v12;
}

uint64_t sub_1FA770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v7 = type metadata accessor for JSONContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONObject(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  HeaderButtonItem.init(deserializing:using:)(v13, (uint64_t)v10, a3);
  if (v3)
  {
    swift_errorRelease(v3);
    v15 = type metadata accessor for HeaderButtonItem(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  else
  {
    v17 = type metadata accessor for HeaderButtonItem(0);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 0, 1, v17);
  }
}

id Shelf.__allocating_init(merging:with:)(_BYTE *a1, _BYTE *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return Shelf.init(merging:with:)(a1, a2);
}

id Shelf.init(merging:with:)(_BYTE *a1, _BYTE *a2)
{
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int v24;
  void *v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __int128 v31;
  __int128 v32;
  objc_class *v34;
  objc_super v35;
  uint64_t v36;

  ObjectType = swift_getObjectType();
  v6 = ObjectType;
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_contentType];
  if (v7 == *(_QWORD *)&a2[OBJC_IVAR____TtC8ShelfKit5Shelf_contentType])
  {
    v34 = (objc_class *)ObjectType;
    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_id + 8];
    v9 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit5Shelf_id);
    *v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_id];
    v9[1] = v8;
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit5Shelf_contentType) = v7;
    v36 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_items];
    swift_bridgeObjectRetain();
    v10 = v2;
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    sub_1E4080(v11);
    *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_items) = v36;
    v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_title + 8];
    v13 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_title);
    *v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_title];
    v13[1] = v12;
    sub_267BC((uint64_t)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_titleContextMenu], (uint64_t)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_titleContextMenu, (uint64_t *)&unk_3BF7E0);
    v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle + 8];
    v15 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle);
    *v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_subtitle];
    v15[1] = v14;
    v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName + 8];
    v17 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName);
    *v17 = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_subtitleSymbolName];
    v17[1] = v16;
    *((_BYTE *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_displaySubtitleAsEyebrow) = a1[OBJC_IVAR____TtC8ShelfKit5Shelf_displaySubtitleAsEyebrow];
    v18 = OBJC_IVAR____TtC8ShelfKit5Shelf_seeAllAction;
    v19 = *(_QWORD *)&a2[OBJC_IVAR____TtC8ShelfKit5Shelf_seeAllAction];
    if (!v19)
      v19 = swift_retain();
    *(_QWORD *)((char *)v10 + v18) = v19;
    v20 = OBJC_IVAR____TtC8ShelfKit5Shelf_headerButtonItems;
    v21 = *(_QWORD *)&a2[OBJC_IVAR____TtC8ShelfKit5Shelf_headerButtonItems];
    if (!v21)
      v21 = swift_bridgeObjectRetain();
    *(_QWORD *)((char *)v10 + v20) = v21;
    *((_BYTE *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_isHorizontal) = a1[OBJC_IVAR____TtC8ShelfKit5Shelf_isHorizontal];
    sub_267BC((uint64_t)&a2[OBJC_IVAR____TtC8ShelfKit5Shelf_url], (uint64_t)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_url, &qword_3B4370);
    *((_BYTE *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_mergeWhenFetched) = a2[OBJC_IVAR____TtC8ShelfKit5Shelf_mergeWhenFetched];
    *((_BYTE *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_hideFromCarPlay) = a2[OBJC_IVAR____TtC8ShelfKit5Shelf_hideFromCarPlay];
    v22 = OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor;
    v23 = *(void **)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor];
    v24 = a1[OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor + 8];
    v25 = v23;
    v26 = a1[OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor + 8];
    if (v24 == 255)
    {
      v25 = *(void **)&a2[OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor];
      v26 = a2[OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor + 8];
      sub_C5CB0(v25, v26);
      v22 = OBJC_IVAR____TtC8ShelfKit5Shelf_backgroundColor;
    }
    v27 = (char *)v10 + v22;
    *(_QWORD *)v27 = v25;
    v27[8] = v26;
    *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_rowsPerColumn) = *(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_rowsPerColumn];
    sub_267BC((uint64_t)&a2[OBJC_IVAR____TtC8ShelfKit5Shelf_headerArtwork], (uint64_t)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_headerArtwork, &qword_3BEB70);
    sub_267BC((uint64_t)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics], (uint64_t)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics, (uint64_t *)&unk_3B8790);
    v28 = (uint64_t)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent];
    v29 = (uint64_t)v10 + OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent;
    if (*(_QWORD *)&a1[OBJC_IVAR____TtC8ShelfKit5Shelf_shelvesIntent + 24])
    {
      sub_150C8(v28, v29);
    }
    else
    {
      v31 = *(_OWORD *)v28;
      v32 = *(_OWORD *)(v28 + 16);
      *(_QWORD *)(v29 + 32) = *(_QWORD *)(v28 + 32);
      *(_OWORD *)v29 = v31;
      *(_OWORD *)(v29 + 16) = v32;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_C5CB0(v23, v24);

    v35.receiver = v10;
    v35.super_class = v34;
    v30 = objc_msgSendSuper2(&v35, "init");

  }
  else
  {

    swift_deallocPartialClassInstance(v2, v6, *(unsigned int *)&stru_20.segname[(swift_isaMask & *v2) + 8], *(unsigned __int16 *)&stru_20.segname[(swift_isaMask & *v2) + 12]);
    return 0;
  }
  return v30;
}

void Shelf.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.Shelf", 14, "init()", 6, 0);
  __break(1u);
}

_QWORD *sub_1FADC0@<X0>(char *a1@<X0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;

  result = Shelf.__allocating_init(deserializing:using:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1FADE8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit5Shelf_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

id Shelf.__allocating_init(contentType:seeAllContentType:title:allItems:maxItems:isHorizontal:preferredNumberOfRows:horizontalLayoutFollowsVerticalLayoutRules:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, int64_t a7, int a8, unsigned __int8 a9, unint64_t a10, unsigned __int8 a11)
{
  objc_class *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  int64_t v76;
  int64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  char *v98;
  Class v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  char *v110;
  int v111;
  int64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE v118[17];
  __int128 v119;
  uint64_t v120;
  Swift::String v121;

  v111 = a8;
  v112 = a7;
  v102 = a6;
  v115 = a4;
  v116 = a5;
  v114 = a9;
  v15 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v15);
  v110 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v107);
  v106 = (uint64_t *)((char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v105);
  v104 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PageMetrics(0);
  __chkstk_darwin(v19);
  v103 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4720);
  __chkstk_darwin(v21);
  v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v24);
  v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v27);
  v29 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v30);
  v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  __chkstk_darwin(v33);
  v113 = (uint64_t)&v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v95 - v36;
  v100 = a1;
  if ((a3 & 1) != 0)
    a2 = a1;
  v38 = type metadata accessor for ActionMenu(0);
  v108 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
  v109 = v38;
  v108(v37, 1, 1);
  v39 = type metadata accessor for URL(0);
  v117 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v117(v32, 1, 1, v39);
  v40 = type metadata accessor for ArtworkModel(0);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v41(v29, 1, 1, v40);
  v42 = type metadata accessor for ImpressionMetrics(0);
  *(_OWORD *)&v118[1] = 0u;
  v119 = 0u;
  v120 = 0;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v96 = v42;
  v95 = v43;
  ((void (*)(char *, uint64_t, uint64_t))v43)(v26, 1, 1);
  v99 = v11;
  v44 = objc_allocWithZone(v11);
  v45 = swift_bridgeObjectRetain();
  v98 = v26;
  v94 = (uint64_t)v26;
  v46 = v45;
  v101 = v32;
  v47 = Shelf.init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(0, 0, a2, 0, 0, 0, 0, 0, 0, 0, (uint64_t)v37, 0, 0, 0, v45, (uint64_t)v32, 3, 2, 1,
          0,
          0,
          (uint64_t)v29,
          (uint64_t)&v118[1],
          v94);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
  v49 = swift_allocObject(v48, 40, 7);
  *(_OWORD *)(v49 + 16) = xmmword_2EF430;
  *(_QWORD *)(v49 + 32) = v47;
  *(_QWORD *)&v118[1] = v49;
  specialized Array._endMutation()(v49);
  v50 = *(_QWORD *)&v118[1];
  v51 = type metadata accessor for JSONObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v23, 1, 1, v51);
  v52 = v40;
  v97 = v41;
  v41(v29, 1, 1, v40);
  v53 = v116;
  swift_bridgeObjectRetain();
  v54 = v47;
  v55 = (uint64_t)v103;
  static PageMetrics.notInstrumented.getter(v54);
  v56 = (uint64_t)v104;
  swift_storeEnumTagMultiPayload(v104, v105, 19);
  v57 = type metadata accessor for Page(0);
  swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
  v118[1] = 1;
  v103 = v29;
  v58 = Page.init(shelves:title:selectedFilterActionId:filterActions:headerBackgroundColor:headerButtonItems:presentationOptions:pageContext:nextPage:isIncomplete:isExplicit:uber:showAdamId:channelAdamId:mapiInLibrary:pageMetrics:)(v50, v115, v53, 0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x100000000, (uint64_t)_swiftEmptyArrayStorage, 0, v56, (uint64_t)v23, 0, 0, (uint64_t)v29, 0, 1, 0, 1, 2,
          v55);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B6F78);
  v60 = (uint64_t)v106;
  v61 = (char *)v106 + *(int *)(v59 + 48);
  *v106 = v58;
  v105 = v39;
  v117(v61, 1, 1, v39);
  swift_storeEnumTagMultiPayload(v60, v107, 3);
  v62 = (void *)objc_opt_self(NSBundle);
  swift_retain();
  v63 = objc_msgSend(v62, "mainBundle");
  v121._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0x535F4E4F49544341;
  v64._object = (void *)0xEE004C4C415F4545;
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  v121._countAndFlagsBits = 0;
  v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v121);

  *(_WORD *)v118 = 0;
  v67 = (uint64_t)v110;
  static ActionMetrics.notInstrumented.getter(v68);
  v69 = type metadata accessor for FlowAction(0);
  v70 = swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
  v71 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v60, 0, 0, v66._countAndFlagsBits, (uint64_t)v66._object, &v118[1], 0, 48, v118, v67);
  v72 = v71;
  if ((v111 & 1) != 0)
    v112 = *(_QWORD *)(v46 + 16);
  v73 = a10;
  v74 = *(_QWORD *)(v46 + 16);
  if ((v114 & 1) != 0)
  {
    v75 = v74 >> 3;
    if (v74 >> 3 >= a10)
      v75 = a10;
    if (v75 <= 1)
      v73 = 1;
    else
      v73 = v75;
    if (12 * v73 >= v74)
      v70 = *(_QWORD *)(v46 + 16);
    else
      v70 = 12 * v73;
    v76 = v112;
    if (v74 <= 8 * v73 || (a11 & (v112 == v74)) != 0)
    {
      swift_release(v71);
      v72 = 0;
      if ((a11 & 1) == 0)
        goto LABEL_23;
    }
    else if ((a11 & 1) == 0)
    {
      goto LABEL_23;
    }
  }
  else
  {
    v76 = v112;
    if (v112 == v74)
    {
      swift_release(v71);
      v72 = 0;
      v70 = v76;
      goto LABEL_23;
    }
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v108)(v113, 1, 1, v109);
  if ((v76 & 0x8000000000000000) == 0)
    goto LABEL_24;
  __break(1u);
LABEL_23:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v108)(v113, 1, 1, v109);
  v76 = v70;
LABEL_24:
  v112 = v58;
  v77 = sub_1F60C0(v76, v46);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  if ((v82 & 1) != 0)
  {
    v39 = (uint64_t)v54;
    v85 = type metadata accessor for __ContiguousArrayStorageBase(0);
    swift_unknownObjectRetain_n(v77, 2);
    swift_retain();
    v86 = (_QWORD *)swift_dynamicCastClass(v77, v85);
    if (!v86)
    {
      swift_unknownObjectRelease(v77);
      v86 = _swiftEmptyArrayStorage;
    }
    v87 = v86[2];
    v88 = swift_release(v86);
    if (__OFSUB__(v83 >> 1, v81))
      goto LABEL_36;
    v88 = v77;
    if (v87 != (v83 >> 1) - v81)
      goto LABEL_37;
    v79 = (_QWORD *)swift_dynamicCastClass(v77, v85);
    v84 = v52;
    v54 = (id)v39;
    if (!v79)
    {
      swift_unknownObjectRelease(v77);
      v79 = _swiftEmptyArrayStorage;
    }
    goto LABEL_33;
  }
  swift_retain();
  v84 = v52;
  while (1)
  {
    v79 = sub_1FBDDC(v77, (uint64_t)v79, v81, v83);
LABEL_33:
    swift_unknownObjectRelease(v77);
    v83 = (unint64_t)v101;
    v88 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v117)(v101, 1, 1, v105);
    if ((v73 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_unknownObjectRelease(v88);
    v84 = v52;
    v54 = (id)v39;
  }
  v89 = (uint64_t)v103;
  v97(v103, 1, 1, v84);
  v120 = 0;
  *(_OWORD *)&v118[1] = 0u;
  v119 = 0u;
  v90 = (uint64_t)v98;
  v95(v98, 1, 1, v96);
  v91 = objc_allocWithZone(v99);
  v92 = Shelf.init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)(0, 0, v100, v115, v116, 0, 0, 0, 0, 0, v113, v72, 0, v114 & 1, (uint64_t)v79, v83, 3, 2, v73,
          0,
          0,
          v89,
          (uint64_t)&v118[1],
          v90);
  swift_release(v112);

  swift_release(v72);
  return v92;
}

uint64_t sub_1FB750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  uint64_t v34;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBEE8);
  v9 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONError(0);
  v34 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a4;
  result = (uint64_t)sub_1F80E0(a1, a3, a2, a4);
  if (v4)
  {
    v16 = type metadata accessor for Shelf(0);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2CF0);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_2EA0D0;
    *(_QWORD *)(v18 + 32) = v4;
    *v14 = 0x736D657469;
    v14[1] = 0xE500000000000000;
    v14[2] = v16;
    v14[3] = v18;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v34 + 104))(v14, enum case for JSONError.malformedProperty(_:), v12);
    v19 = swift_errorRetain(v4);
    static JSONContext.initFailureObserver.getter(v19);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBEF0);
    JSONContext.subscript.getter(v33, v11, v20);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v28);
    sub_267BC((uint64_t)v33, (uint64_t)v30, &qword_3BBEF8);
    v21 = v31;
    if (v31)
    {
      v22 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      v23 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
      v24 = swift_allocError(v12, v23, 0, 0);
      v25 = v34;
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v34 + 16))(v26, v14, v12);
      dispatch thunk of JSONInitFailureObserver.tryingToInitialize(_:didFailWith:)(v16, v24, v21, v22);
      swift_errorRelease(v4);
      sub_1459C((uint64_t)v33, &qword_3BBEF8);
      (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v14, v12);
      swift_errorRelease(v24);
      result = __swift_destroy_boxed_opaque_existential_1(v30);
    }
    else
    {
      swift_errorRelease(v4);
      sub_1459C((uint64_t)v33, &qword_3BBEF8);
      (*(void (**)(_QWORD *, uint64_t))(v34 + 8))(v14, v12);
      result = sub_1459C((uint64_t)v30, &qword_3BBEF8);
    }
    v27 = v29;
    v29[4] = 0;
    *v27 = 0u;
    v27[1] = 0u;
  }
  return result;
}

_QWORD *sub_1FBA0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return _swiftEmptyArrayStorage;
  if (v5 > 0)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A48);
    v9 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(unsigned __int8 *)(v9 + 80);
    v12 = (v11 + 32) & ~v11;
    v13 = (_QWORD *)swift_allocObject(v8, v12 + v10 * v5, v11 | 7);
    v14 = _swift_stdlib_malloc_size(v13);
    if (!v10)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v14 - v12 == 0x8000000000000000 && v10 == -1)
      goto LABEL_23;
    v13[2] = v5;
    v13[3] = 2 * ((uint64_t)(v14 - v12) / v10);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
  v13 = _swiftEmptyArrayStorage;
  if (v4 == a3)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_10:
  if (v5 < 0)
  {
LABEL_24:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_25;
  }
  v16 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
  v17 = (char *)v13 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v18 = *(_QWORD *)(v16 + 72);
  v19 = a2 + v18 * a3;
  v20 = v18 * v5;
  v21 = &v17[v20];
  v22 = v19 + v20;
  if (v19 >= (unint64_t)v21 || (unint64_t)v17 >= v22)
  {
    swift_arrayInitWithCopy(v17);
    return v13;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_1FBBD4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = _swift_stdlib_malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    sub_1FC220((unint64_t)(v4 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for LegacyLockup, &qword_3B79E0, &qword_3B09E8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41DC4);
    v1 = v7;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v8 = v1;
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease();
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1FBCE8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = _swift_stdlib_malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1FC4C0((unint64_t)(v4 + 4), v2, v1);
    v1 = v7;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v8 = v1;
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease();
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1FBDDC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  size_t v10;
  unint64_t v11;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_16;
  if (!v5)
    return _swiftEmptyArrayStorage;
  if (v5 > 0)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0940);
    v9 = (_QWORD *)swift_allocObject(v8, 40 * v5 + 32, 7);
    v10 = _swift_stdlib_malloc_size(v9);
    v9[2] = v5;
    v9[3] = 2 * ((uint64_t)(v10 - 32) / 40);
    if (v4 != a3)
      goto LABEL_5;
    goto LABEL_15;
  }
  v9 = _swiftEmptyArrayStorage;
  if (v4 == a3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  if (v5 < 0)
  {
LABEL_17:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_18;
  }
  v11 = a2 + 40 * a3;
  if (v11 >= (unint64_t)&v9[5 * v5 + 4] || (unint64_t)(v9 + 4) >= v11 + 40 * v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B0948);
    swift_arrayInitWithCopy(v9 + 4);
    return v9;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_18:
  __break(1u);
  return result;
}

_QWORD *sub_1FBF74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = _swift_stdlib_malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    type metadata accessor for LibraryEpisodeLockup(0);
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1FC0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A68);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 3);
  v7 = sub_1FC6CC(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain();
  sub_15498(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_1FC1D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FC220(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for AnyCancellable, &qword_3C1890, &qword_3B2088, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41D70);
}

uint64_t sub_1FC1FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FC220(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for LibraryShowLockup, &qword_3B7A80, &qword_3B09F8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41DC4);
}

uint64_t sub_1FC220(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_32914(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          swift_retain(*v24);
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1FC430(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FC220(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for LibraryEpisodeLockup, &qword_3BF800, &qword_3B0A08, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41DC4);
}

uint64_t sub_1FC454(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FC220(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for LegacyChannelLockup, &qword_3B7B40, &qword_3B0A18, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41DC4);
}

uint64_t sub_1FC478(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FC220(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for LegacyLockup, &qword_3B79E0, &qword_3B09E8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41DC4);
}

uint64_t sub_1FC49C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FC220(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for LegacyEpisodeLockup, &qword_3B7BF8, &qword_3B0A28, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_41DC4);
}

uint64_t sub_1FC4C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_32914(&qword_3C17F8, &qword_3C17F0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_3C17F0);
          v13 = sub_41E18(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10D2E0();
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1FC6CC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1FC860(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char v58;

  if (a1 == 0x74616D726F666E69 && a2 == 0xEB000000006E6F69)
  {
    v5 = 0xEB000000006E6F69;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74616D726F666E69, 0xEB000000006E6F69, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65646F73697065 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65646F73697065, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000012)
  {
    v8 = 0x80000000003135C0;
    if (a2 == 0x80000000003135C0)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000000003135C0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0x5365646F73697065 && a2 == 0xED000068736F6F77)
  {
    v9 = 0xED000068736F6F77;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5365646F73697065, 0xED000068736F6F77, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x5365646F73697065 && a2 == 0xED00006863726165)
  {
    v10 = 0xED00006863726165;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5365646F73697065, 0xED00006863726165, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0xD000000000000011)
  {
    v11 = 0x80000000003135A0;
    if (a2 == 0x80000000003135A0)
      goto LABEL_36;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000000003135A0, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_36:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if (a1 == 0xD000000000000012)
  {
    v12 = 0x8000000000313580;
    if (a2 == 0x8000000000313580)
      goto LABEL_41;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000000313580, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_41:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if (a1 == 0x6867696C68676968 && a2 == 0xED00006D65744974)
  {
    v13 = 0xED00006D65744974;
LABEL_47:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6867696C68676968, 0xED00006D65744974, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_47;
  }
  if (a1 == 0x636F4C6C6C616D73 && a2 == 0xEB0000000070756BLL)
  {
    v14 = 0xEB0000000070756BLL;
LABEL_53:
    swift_bridgeObjectRelease(v14);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636F4C6C6C616D73, 0xEB0000000070756BLL, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_53;
  }
  if (a1 == 0x6F4C6D756964656DLL && a2 == 0xEC00000070756B63)
  {
    v15 = 0xEC00000070756B63;
LABEL_59:
    swift_bridgeObjectRelease(v15);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F4C6D756964656DLL, 0xEC00000070756B63, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_59;
  }
  if (a1 == 0x636F4C656772616CLL && a2 == 0xEB0000000070756BLL)
  {
    v16 = 0xEB0000000070756BLL;
LABEL_65:
    swift_bridgeObjectRelease(v16);
    return 12;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636F4C656772616CLL, 0xEB0000000070756BLL, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_65;
  }
  if (a1 == 0xD000000000000010)
  {
    v17 = 0x8000000000313520;
    if (a2 == 0x8000000000313520)
      goto LABEL_70;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000000313520, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
LABEL_70:
    swift_bridgeObjectRelease(v17);
    return 13;
  }
  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    v18 = 0xE600000000000000;
LABEL_76:
    swift_bridgeObjectRelease(v18);
    return 16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69746361, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
    goto LABEL_76;
  }
  if (a1 == 0x7374736163646F70 && a2 == 0xEE006E6F69746341)
  {
    v19 = 0xEE006E6F69746341;
LABEL_82:
    swift_bridgeObjectRelease(v19);
    return 17;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7374736163646F70, 0xEE006E6F69746341, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_82;
  }
  if (a1 == 0x656C626174696465 && a2 == 0xEE006E6F69746341)
  {
    v20 = 0xEE006E6F69746341;
LABEL_88:
    swift_bridgeObjectRelease(v20);
    return 18;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C626174696465, 0xEE006E6F69746341, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_88;
  }
  if (a1 == 0xD000000000000013)
  {
    v21 = 0x8000000000313500;
    if (a2 == 0x8000000000313500)
      goto LABEL_93;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000000313500, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
LABEL_93:
    swift_bridgeObjectRelease(v21);
    return 15;
  }
  if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000)
  {
    v22 = 0xE700000000000000;
LABEL_99:
    swift_bridgeObjectRelease(v22);
    return 19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6B726F77747261, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
    goto LABEL_99;
  }
  if (a1 == 0x7061726761726170 && a2 == 0xE900000000000068)
  {
    v23 = 0xE900000000000068;
LABEL_105:
    swift_bridgeObjectRelease(v23);
    return 20;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7061726761726170, 0xE900000000000068, a1, a2, 0) & 1) != 0)
  {
    v23 = a2;
    goto LABEL_105;
  }
  if (a1 == 0x6169726F74696465 && a2 == 0xED0000647261436CLL)
  {
    v24 = 0xED0000647261436CLL;
LABEL_111:
    swift_bridgeObjectRelease(v24);
    return 21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6169726F74696465, 0xED0000647261436CLL, a1, a2, 0) & 1) != 0)
  {
    v24 = a2;
    goto LABEL_111;
  }
  if (a1 == 0x65736163776F6873 && a2 == 0xE800000000000000)
  {
    v25 = 0xE800000000000000;
LABEL_117:
    swift_bridgeObjectRelease(v25);
    return 22;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736163776F6873, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v25 = a2;
    goto LABEL_117;
  }
  if (a1 == 0x6B63697262 && a2 == 0xE500000000000000)
  {
    v26 = 0xE500000000000000;
LABEL_123:
    swift_bridgeObjectRelease(v26);
    return 23;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6B63697262, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v26 = a2;
    goto LABEL_123;
  }
  if (a1 == 0xD000000000000011)
  {
    v27 = 0x8000000000309590;
    if (a2 == 0x8000000000309590)
      goto LABEL_128;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000000309590, a1, a2, 0) & 1) != 0)
  {
    v27 = a2;
LABEL_128:
    swift_bridgeObjectRelease(v27);
    return 24;
  }
  if (a1 == 0x4865646F73697065 && a2 == 0xED00007265646165)
  {
    v28 = 0xED00007265646165;
LABEL_134:
    swift_bridgeObjectRelease(v28);
    return 26;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4865646F73697065, 0xED00007265646165, a1, a2, 0) & 1) != 0)
  {
    v28 = a2;
    goto LABEL_134;
  }
  if (a1 == 0x73676E69746172 && a2 == 0xE700000000000000)
  {
    v29 = 0xE700000000000000;
LABEL_140:
    swift_bridgeObjectRelease(v29);
    return 27;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73676E69746172, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v29 = a2;
    goto LABEL_140;
  }
  if (a1 == 0x7461526F54706174 && a2 == 0xE900000000000065)
  {
    v30 = 0xE900000000000065;
LABEL_146:
    swift_bridgeObjectRelease(v30);
    return 28;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461526F54706174, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v30 = a2;
    goto LABEL_146;
  }
  if (a1 == 0x73776569766572 && a2 == 0xE700000000000000)
  {
    v31 = 0xE700000000000000;
LABEL_152:
    swift_bridgeObjectRelease(v31);
    return 29;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73776569766572, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v31 = a2;
    goto LABEL_152;
  }
  if (a1 == 0x6341776569766572 && a2 == 0xED0000736E6F6974)
  {
    v32 = 0xED0000736E6F6974;
LABEL_158:
    swift_bridgeObjectRelease(v32);
    return 30;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6341776569766572, 0xED0000736E6F6974, a1, a2, 0) & 1) != 0)
  {
    v32 = a2;
    goto LABEL_158;
  }
  if (a1 == 0x657370696C6C65 && a2 == 0xE700000000000000)
  {
    v33 = 0xE700000000000000;
LABEL_164:
    swift_bridgeObjectRelease(v33);
    return 31;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657370696C6C65, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v33 = a2;
    goto LABEL_164;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v34 = 0xE500000000000000;
LABEL_170:
    swift_bridgeObjectRelease(v34);
    return 32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v34 = a2;
    goto LABEL_170;
  }
  if (a1 == 0x7473694C6B6E696CLL && a2 == 0xEE00656E696C6E49)
  {
    v35 = 0xEE00656E696C6E49;
LABEL_176:
    swift_bridgeObjectRelease(v35);
    return 33;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7473694C6B6E696CLL, 0xEE00656E696C6E49, a1, a2, 0) & 1) != 0)
  {
    v35 = a2;
    goto LABEL_176;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000000309410)
  {
    v36 = 0x8000000000309410;
LABEL_182:
    swift_bridgeObjectRelease(v36);
    return 34;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000000309410, a1, a2, 0) & 1) != 0)
  {
    v36 = a2;
    goto LABEL_182;
  }
  if (a1 == 0x614C686372616573 && a2 == 0xED0000676E69646ELL)
  {
    v37 = 0xED0000676E69646ELL;
LABEL_188:
    swift_bridgeObjectRelease(v37);
    return 35;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614C686372616573, 0xED0000676E69646ELL, a1, a2, 0) & 1) != 0)
  {
    v37 = a2;
    goto LABEL_188;
  }
  if (a1 == 0x6F77737265776F70 && a2 == 0xEB0000000068736FLL)
  {
    v38 = 0xEB0000000068736FLL;
LABEL_194:
    swift_bridgeObjectRelease(v38);
    return 36;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F77737265776F70, 0xEB0000000068736FLL, a1, a2, 0) & 1) != 0)
  {
    v38 = a2;
    goto LABEL_194;
  }
  if (a1 == 0xD000000000000010)
  {
    v39 = 0x8000000000309500;
    if (a2 == 0x8000000000309500)
      goto LABEL_199;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000000309500, a1, a2, 0) & 1) != 0)
  {
    v39 = a2;
LABEL_199:
    swift_bridgeObjectRelease(v39);
    return 37;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x80000000003095B0)
  {
    v40 = 0x80000000003095B0;
LABEL_205:
    swift_bridgeObjectRelease(v40);
    return 25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000000003095B0, a1, a2, 0) & 1) != 0)
  {
    v40 = a2;
    goto LABEL_205;
  }
  if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    v41 = 0xE700000000000000;
LABEL_211:
    swift_bridgeObjectRelease(v41);
    return 38;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C656E6E616863, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v41 = a2;
    goto LABEL_211;
  }
  if (a1 == 0x4F6C656E6E616863 && a2 == 0xEE006C616E696472)
  {
    v42 = 0xEE006C616E696472;
LABEL_217:
    swift_bridgeObjectRelease(v42);
    return 39;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4F6C656E6E616863, 0xEE006C616E696472, a1, a2, 0) & 1) != 0)
  {
    v42 = a2;
    goto LABEL_217;
  }
  if (a1 == 0x486C656E6E616863 && a2 == 0xED00007265646165)
  {
    v43 = 0xED00007265646165;
LABEL_223:
    swift_bridgeObjectRelease(v43);
    return 40;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x486C656E6E616863, 0xED00007265646165, a1, a2, 0) & 1) != 0)
  {
    v43 = a2;
    goto LABEL_223;
  }
  if (a1 == 0x61426C6C65737075 && a2 == 0xEC00000072656E6ELL)
  {
    v44 = 0xEC00000072656E6ELL;
LABEL_229:
    swift_bridgeObjectRelease(v44);
    return 41;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61426C6C65737075, 0xEC00000072656E6ELL, a1, a2, 0) & 1) != 0)
  {
    v44 = a2;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000013)
  {
    v45 = 0x8000000000309660;
    if (a2 == 0x8000000000309660)
      goto LABEL_234;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000000309660, a1, a2, 0) & 1) != 0)
  {
    v45 = a2;
LABEL_234:
    swift_bridgeObjectRelease(v45);
    return 42;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x8000000000309680)
  {
    v46 = 0x8000000000309680;
LABEL_240:
    swift_bridgeObjectRelease(v46);
    return 43;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x8000000000309680, a1, a2, 0) & 1) != 0)
  {
    v46 = a2;
    goto LABEL_240;
  }
  if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    v47 = 0xE500000000000000;
LABEL_246:
    swift_bridgeObjectRelease(v47);
    return 44;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6562616CLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v47 = a2;
    goto LABEL_246;
  }
  if (a1 == 0x4865646F73697065 && a2 == 0xEB000000006F7265)
  {
    v48 = 0xEB000000006F7265;
LABEL_252:
    swift_bridgeObjectRelease(v48);
    return 45;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4865646F73697065, 0xEB000000006F7265, a1, a2, 0) & 1) != 0)
  {
    v48 = a2;
    goto LABEL_252;
  }
  if (a1 == 0x6F726548776F6873 && a2 == 0xE800000000000000)
  {
    v49 = 0xE800000000000000;
LABEL_258:
    swift_bridgeObjectRelease(v49);
    return 46;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F726548776F6873, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v49 = a2;
    goto LABEL_258;
  }
  if (a1 == 0x616553646578696DLL && a2 == 0xEB00000000686372)
  {
    v50 = 0xEB00000000686372;
LABEL_264:
    swift_bridgeObjectRelease(v50);
    return 47;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x616553646578696DLL, 0xEB00000000686372, a1, a2, 0) & 1) != 0)
  {
    v50 = a2;
    goto LABEL_264;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x80000000003096C0)
  {
    v51 = 0x80000000003096C0;
LABEL_270:
    swift_bridgeObjectRelease(v51);
    return 48;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000000003096C0, a1, a2, 0) & 1) != 0)
  {
    v51 = a2;
    goto LABEL_270;
  }
  if (a1 == 0x7045686372616573 && a2 == 0xED000065646F7369)
  {
    v52 = 0xED000065646F7369;
LABEL_276:
    swift_bridgeObjectRelease(v52);
    return 49;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7045686372616573, 0xED000065646F7369, a1, a2, 0) & 1) != 0)
  {
    v52 = a2;
    goto LABEL_276;
  }
  if (a1 == 0x6853686372616573 && a2 == 0xEA0000000000776FLL)
  {
    v53 = 0xEA0000000000776FLL;
LABEL_282:
    swift_bridgeObjectRelease(v53);
    return 50;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6853686372616573, 0xEA0000000000776FLL, a1, a2, 0) & 1) != 0)
  {
    v53 = a2;
    goto LABEL_282;
  }
  if (a1 == 0x6843686372616573 && a2 == 0xED00006C656E6E61)
  {
    v54 = 0xED00006C656E6E61;
LABEL_288:
    swift_bridgeObjectRelease(v54);
    return 51;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6843686372616573, 0xED00006C656E6E61, a1, a2, 0) & 1) != 0)
  {
    v54 = a2;
    goto LABEL_288;
  }
  if (a1 == 0xD000000000000011)
  {
    v55 = 0x8000000000309700;
    if (a2 == 0x8000000000309700)
      goto LABEL_293;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000000309700, a1, a2, 0) & 1) != 0)
  {
    v55 = a2;
LABEL_293:
    swift_bridgeObjectRelease(v55);
    return 53;
  }
  if (a1 == 0xD000000000000011)
  {
    v56 = 0x8000000000309740;
    if (a2 == 0x8000000000309740)
      goto LABEL_298;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000000309740, a1, a2, 0) & 1) != 0)
  {
    v56 = a2;
LABEL_298:
    swift_bridgeObjectRelease(v56);
    return 54;
  }
  if (a1 == 0x6948686372616573 && a2 == 0xEA0000000000746ELL)
  {
    v57 = 0xEA0000000000746ELL;
LABEL_304:
    swift_bridgeObjectRelease(v57);
    return 52;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6948686372616573, 0xEA0000000000746ELL, a1, a2, 0) & 1) != 0)
  {
    v57 = a2;
    goto LABEL_304;
  }
  if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 55;
  }
  else
  {
    v58 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676E6964616F6CLL, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v58 & 1) != 0)
      return 55;
    else
      return 0;
  }
}

uint64_t sub_1FDFAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1FA770(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1FDFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LegacyActionMenu(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1FE008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LegacyActionMenu(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1FE04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1FE094(unint64_t result)
{
  if (result > 0x37)
    return 0;
  return result;
}

uint64_t type metadata accessor for ShelfContentTypeSet()
{
  return objc_opt_self(_TtC8ShelfKit19ShelfContentTypeSet);
}

unint64_t sub_1FE0C4()
{
  unint64_t result;

  result = qword_3C16A8;
  if (!qword_3C16A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShelfContentType);
    atomic_store(result, (unint64_t *)&qword_3C16A8);
  }
  return result;
}

unint64_t sub_1FE10C()
{
  unint64_t result;

  result = qword_3C16E0;
  if (!qword_3C16E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShelfContentType);
    atomic_store(result, (unint64_t *)&qword_3C16E0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ShelfError(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD, _QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  unsigned int (*v35)(_QWORD *, uint64_t, uint64_t);
  uint64_t v36;
  int *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(_QWORD *, uint64_t, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  int *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id *v57;
  int v58;
  id v59;
  id *v60;
  int v61;
  id v62;
  id *v63;
  int v64;
  id v65;
  id *v66;
  int v67;
  id v68;
  id *v69;
  int v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(char *, _QWORD, uint64_t, int *);
  void (*v85)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  id *v106;
  int v107;
  id v108;
  id *v109;
  int v110;
  id v111;
  id *v112;
  int v113;
  id v114;
  id *v115;
  int v116;
  id v117;
  id *v118;
  int v119;
  id v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  void (*v132)(_QWORD *, _QWORD, uint64_t, int *);
  _QWORD *v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  int *v137;
  uint64_t v138;
  unsigned int (*v139)(_QWORD *, uint64_t, int *);
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  id *v145;
  int v146;
  id v147;
  id *v148;
  int v149;
  id v150;
  id *v151;
  int v152;
  id v153;
  id *v154;
  int v155;
  id v156;
  id *v157;
  int v158;
  id v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  void (*v172)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int (*v178)(_QWORD, _QWORD, _QWORD);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  unsigned int (*v202)(char *, uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  char *v208;
  _QWORD *v209;
  uint64_t v210;
  _QWORD *v211;
  unsigned int (*v212)(_QWORD *, uint64_t, uint64_t);
  uint64_t v213;
  _QWORD *v214;
  int *v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int (*v224)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  uint64_t v232;
  id *v233;
  int v234;
  id v235;
  id *v236;
  int v237;
  id v238;
  id *v239;
  int v240;
  id v241;
  id *v242;
  int v243;
  id v244;
  id *v245;
  int v246;
  id v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  _QWORD *v258;
  uint64_t v259;
  void (*v260)(char *, _QWORD, uint64_t, int *);
  void (*v261)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  _QWORD *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  int v280;
  uint64_t v281;
  uint64_t v282;
  id *v283;
  int v284;
  id v285;
  id *v286;
  int v287;
  id v288;
  id *v289;
  int v290;
  id v291;
  id *v292;
  int v293;
  id v294;
  id *v295;
  int v296;
  id v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  _QWORD *v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  _QWORD *v307;
  uint64_t v308;
  void (*v309)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v310;
  _QWORD *v311;
  _QWORD *v312;
  uint64_t v313;
  uint64_t v314;
  unsigned int (*v315)(_QWORD *, uint64_t, uint64_t);
  uint64_t v316;
  char *v317;
  int *v318;
  uint64_t v319;
  int v320;
  uint64_t v321;
  uint64_t v322;
  int *v323;
  id *v324;
  int v325;
  id v326;
  id *v327;
  int v328;
  id v329;
  id *v330;
  int v331;
  id v332;
  id *v333;
  int v334;
  id v335;
  id *v336;
  int v337;
  id v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  _QWORD *v344;
  _QWORD *v345;
  uint64_t v346;
  uint64_t v347;
  _QWORD *v348;
  _QWORD *v349;
  uint64_t v350;
  void (*v351)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  __int128 v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v365;
  int *v367;
  _QWORD *v368;
  uint64_t v369;
  char *v370;
  unsigned int (*v371)(_QWORD *, uint64_t, int *);
  _QWORD *v372;
  _QWORD *v373;
  _QWORD *v374;
  _QWORD *v375;
  uint64_t v376;
  char *v377;
  char *v378;
  _QWORD *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  _QWORD *v384;
  unsigned int (*v385)(_QWORD *, uint64_t, uint64_t);
  int *v386;
  _QWORD *v387;
  _QWORD *__dst;
  _QWORD *__dsta;
  void (**__dstb)(void *, const void *, _QWORD);
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  _QWORD *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  int *v400;
  int *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unsigned int (*v405)(_QWORD, _QWORD, _QWORD);
  _QWORD *v406;
  uint64_t v407;
  _QWORD *v408;
  unsigned int (*v409)(char *, uint64_t, uint64_t);
  unsigned int (*v410)(char *, uint64_t, int *);
  char *v411;
  int *v412;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = a3;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v17 = *a2;
        *(_QWORD *)a1 = *a2;
        v18 = v17;
        v13 = a1;
        v14 = v7;
        v15 = 2;
        goto LABEL_178;
      case 1:
        v19 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v19;
        v20 = (int *)type metadata accessor for ModernShelf(0);
        v21 = v20[5];
        v22 = &a1[v21];
        v23 = (char **)((char *)a2 + v21);
        v24 = type metadata accessor for Header(0);
        v402 = *(_QWORD *)(v24 - 8);
        v25 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v402 + 48);
        swift_bridgeObjectRetain();
        v410 = v25;
        v412 = (int *)v24;
        if (v25(v23, 1, v24))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          v394 = v7;
          v400 = v20;
          v27 = v23[1];
          *(_QWORD *)v22 = *v23;
          *((_QWORD *)v22 + 1) = v27;
          v28 = v23[3];
          *((_QWORD *)v22 + 2) = v23[2];
          *((_QWORD *)v22 + 3) = v28;
          v29 = v23[5];
          *((_QWORD *)v22 + 4) = v23[4];
          *((_QWORD *)v22 + 5) = v29;
          *((_WORD *)v22 + 24) = *((_WORD *)v23 + 24);
          v30 = *(int *)(v24 + 36);
          v406 = v23;
          v408 = v22;
          v31 = &v22[v30];
          v32 = (_QWORD *)((char *)v23 + v30);
          v33 = type metadata accessor for ActionMenu(0);
          v34 = *(_QWORD **)(v33 - 8);
          v35 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v34[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v35(v32, 1, v33))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
            v37 = v412;
            v39 = v406;
            v38 = v408;
            v7 = v394;
          }
          else
          {
            __dst = v34;
            v391 = v31;
            v40 = v32[1];
            *(_QWORD *)v31 = *v32;
            *((_QWORD *)v31 + 1) = v40;
            v41 = v32[3];
            *((_QWORD *)v31 + 2) = v32[2];
            *((_QWORD *)v31 + 3) = v41;
            v42 = v32[5];
            *((_QWORD *)v31 + 4) = v32[4];
            *((_QWORD *)v31 + 5) = v42;
            v403 = v33;
            v43 = *(int *)(v33 + 28);
            v44 = &v31[v43];
            v384 = v32;
            v45 = (_QWORD *)((char *)v32 + v43);
            v46 = type metadata accessor for ArtworkModel(0);
            v47 = *(_QWORD *)(v46 - 8);
            v48 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v47 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v48(v45, 1, v46))
            {
              v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
              v37 = v412;
              v50 = __dst;
              v51 = v391;
              v39 = v406;
              v7 = v394;
            }
            else
            {
              v381 = v47;
              v52 = (int *)v46;
              v53 = v45[1];
              *(_QWORD *)v44 = *v45;
              *((_QWORD *)v44 + 1) = v53;
              v54 = *((unsigned __int8 *)v45 + 32);
              swift_bridgeObjectRetain();
              v39 = v406;
              v7 = v394;
              if (v54 == 255)
              {
                *((_OWORD *)v44 + 1) = *((_OWORD *)v45 + 1);
                v44[32] = *((_BYTE *)v45 + 32);
              }
              else
              {
                v55 = v45[2];
                v56 = v45[3];
                sub_3D464(v55, v56, v54);
                *((_QWORD *)v44 + 2) = v55;
                *((_QWORD *)v44 + 3) = v56;
                v44[32] = v54;
              }
              *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 5);
              v57 = (id *)(v45 + 7);
              v58 = *((unsigned __int8 *)v45 + 64);
              if (v58 == 255)
              {
                *((_QWORD *)v44 + 7) = *v57;
                v44[64] = *((_BYTE *)v45 + 64);
              }
              else
              {
                v59 = *v57;
                sub_3D47C(*v57, *((_BYTE *)v45 + 64));
                *((_QWORD *)v44 + 7) = v59;
                v44[64] = v58;
              }
              v60 = (id *)(v45 + 9);
              v61 = *((unsigned __int8 *)v45 + 80);
              if (v61 == 255)
              {
                *((_QWORD *)v44 + 9) = *v60;
                v44[80] = *((_BYTE *)v45 + 80);
              }
              else
              {
                v62 = *v60;
                sub_3D47C(*v60, *((_BYTE *)v45 + 80));
                *((_QWORD *)v44 + 9) = v62;
                v44[80] = v61;
              }
              v63 = (id *)(v45 + 11);
              v64 = *((unsigned __int8 *)v45 + 96);
              if (v64 == 255)
              {
                *((_QWORD *)v44 + 11) = *v63;
                v44[96] = *((_BYTE *)v45 + 96);
              }
              else
              {
                v65 = *v63;
                sub_3D47C(*v63, *((_BYTE *)v45 + 96));
                *((_QWORD *)v44 + 11) = v65;
                v44[96] = v64;
              }
              v66 = (id *)(v45 + 13);
              v67 = *((unsigned __int8 *)v45 + 112);
              if (v67 == 255)
              {
                *((_QWORD *)v44 + 13) = *v66;
                v44[112] = *((_BYTE *)v45 + 112);
              }
              else
              {
                v68 = *v66;
                sub_3D47C(*v66, *((_BYTE *)v45 + 112));
                *((_QWORD *)v44 + 13) = v68;
                v44[112] = v67;
              }
              v69 = (id *)(v45 + 15);
              v70 = *((unsigned __int8 *)v45 + 128);
              if (v70 == 255)
              {
                *((_QWORD *)v44 + 15) = *v69;
                v44[128] = *((_BYTE *)v45 + 128);
              }
              else
              {
                v71 = *v69;
                sub_3D47C(*v69, *((_BYTE *)v45 + 128));
                *((_QWORD *)v44 + 15) = v71;
                v44[128] = v70;
              }
              v44[129] = *((_BYTE *)v45 + 129);
              v72 = v52[11];
              v73 = &v44[v72];
              v74 = (char *)v45 + v72;
              v75 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
              v76 = v52[12];
              v77 = &v44[v76];
              v78 = (_QWORD *)((char *)v45 + v76);
              v79 = v78[1];
              *(_QWORD *)v77 = *v78;
              *((_QWORD *)v77 + 1) = v79;
              v44[v52[13]] = *((_BYTE *)v45 + v52[13]);
              v44[v52[14]] = *((_BYTE *)v45 + v52[14]);
              v44[v52[15]] = *((_BYTE *)v45 + v52[15]);
              v80 = v52[16];
              v81 = &v44[v80];
              v82 = (_QWORD *)((char *)v45 + v80);
              v83 = v82[1];
              *(_QWORD *)v81 = *v82;
              *((_QWORD *)v81 + 1) = v83;
              v84 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v381 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v84(v44, 0, 1, v52);
              v37 = v412;
              v50 = __dst;
              v51 = v391;
            }
            *(_QWORD *)((char *)v51 + *(int *)(v403 + 32)) = *(_QWORD *)((char *)v384 + *(int *)(v403 + 32));
            v85 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v50[7];
            swift_bridgeObjectRetain();
            v85(v51, 0, 1, v403);
            v33 = v403;
            v38 = v408;
          }
          v86 = v37[10];
          v87 = (_QWORD *)((char *)v38 + v86);
          v88 = (_QWORD *)((char *)v39 + v86);
          v89 = type metadata accessor for Header.PrimaryAction(0);
          v90 = *(_QWORD *)(v89 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
          {
            v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload(v88, v89) == 1)
            {
              v392 = v90;
              v92 = v88[1];
              *v87 = *v88;
              v87[1] = v92;
              v93 = v88[3];
              v87[2] = v88[2];
              v87[3] = v93;
              v94 = v87;
              v95 = v88[5];
              v94[4] = v88[4];
              v94[5] = v95;
              v404 = v33;
              v96 = *(int *)(v33 + 28);
              v395 = v94;
              __dsta = (_QWORD *)((char *)v94 + v96);
              v97 = (_QWORD *)((char *)v88 + v96);
              v98 = type metadata accessor for ArtworkModel(0);
              v382 = *(_QWORD *)(v98 - 8);
              v385 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v382 + 48);
              v99 = v97;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v385(v97, 1, v98))
              {
                v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
                memcpy(__dsta, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
                v87 = v395;
              }
              else
              {
                v386 = (int *)v98;
                v102 = v97[1];
                *__dsta = *v97;
                __dsta[1] = v102;
                v103 = *((unsigned __int8 *)v97 + 32);
                swift_bridgeObjectRetain();
                if (v103 == 255)
                {
                  *((_OWORD *)__dsta + 1) = *((_OWORD *)v97 + 1);
                  *((_BYTE *)__dsta + 32) = *((_BYTE *)v97 + 32);
                }
                else
                {
                  v104 = v97[2];
                  v105 = v97[3];
                  sub_3D464(v104, v105, v103);
                  __dsta[2] = v104;
                  __dsta[3] = v105;
                  v99 = v97;
                  *((_BYTE *)__dsta + 32) = v103;
                }
                v87 = v395;
                *(_OWORD *)(__dsta + 5) = *(_OWORD *)(v99 + 5);
                v106 = (id *)(v99 + 7);
                v107 = *((unsigned __int8 *)v99 + 64);
                if (v107 == 255)
                {
                  __dsta[7] = *v106;
                  *((_BYTE *)__dsta + 64) = *((_BYTE *)v99 + 64);
                }
                else
                {
                  v108 = *v106;
                  sub_3D47C(*v106, *((_BYTE *)v99 + 64));
                  __dsta[7] = v108;
                  *((_BYTE *)__dsta + 64) = v107;
                }
                v109 = (id *)(v99 + 9);
                v110 = *((unsigned __int8 *)v99 + 80);
                if (v110 == 255)
                {
                  __dsta[9] = *v109;
                  *((_BYTE *)__dsta + 80) = *((_BYTE *)v99 + 80);
                }
                else
                {
                  v111 = *v109;
                  sub_3D47C(*v109, *((_BYTE *)v99 + 80));
                  __dsta[9] = v111;
                  *((_BYTE *)__dsta + 80) = v110;
                }
                v112 = (id *)(v99 + 11);
                v113 = *((unsigned __int8 *)v99 + 96);
                if (v113 == 255)
                {
                  __dsta[11] = *v112;
                  *((_BYTE *)__dsta + 96) = *((_BYTE *)v99 + 96);
                }
                else
                {
                  v114 = *v112;
                  sub_3D47C(*v112, *((_BYTE *)v99 + 96));
                  __dsta[11] = v114;
                  *((_BYTE *)__dsta + 96) = v113;
                }
                v115 = (id *)(v99 + 13);
                v116 = *((unsigned __int8 *)v99 + 112);
                if (v116 == 255)
                {
                  __dsta[13] = *v115;
                  *((_BYTE *)__dsta + 112) = *((_BYTE *)v99 + 112);
                }
                else
                {
                  v117 = *v115;
                  sub_3D47C(*v115, *((_BYTE *)v99 + 112));
                  __dsta[13] = v117;
                  *((_BYTE *)__dsta + 112) = v116;
                }
                v118 = (id *)(v99 + 15);
                v119 = *((unsigned __int8 *)v99 + 128);
                if (v119 == 255)
                {
                  __dsta[15] = *v118;
                  *((_BYTE *)__dsta + 128) = *((_BYTE *)v99 + 128);
                }
                else
                {
                  v120 = *v118;
                  sub_3D47C(*v118, *((_BYTE *)v99 + 128));
                  __dsta[15] = v120;
                  *((_BYTE *)__dsta + 128) = v119;
                }
                *((_BYTE *)__dsta + 129) = *((_BYTE *)v99 + 129);
                v121 = v386[11];
                v122 = (char *)__dsta + v121;
                v396 = (char *)v99 + v121;
                v123 = type metadata accessor for ArtworkCrop(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v122, v396, v123);
                v124 = v386[12];
                v125 = (_QWORD *)((char *)__dsta + v124);
                v126 = (_QWORD *)((char *)v99 + v124);
                v127 = v126[1];
                *v125 = *v126;
                v125[1] = v127;
                *((_BYTE *)__dsta + v386[13]) = *((_BYTE *)v99 + v386[13]);
                *((_BYTE *)__dsta + v386[14]) = *((_BYTE *)v99 + v386[14]);
                *((_BYTE *)__dsta + v386[15]) = *((_BYTE *)v99 + v386[15]);
                v128 = v386[16];
                v129 = (_QWORD *)((char *)__dsta + v128);
                v130 = (_QWORD *)((char *)v99 + v128);
                v131 = v130[1];
                *v129 = *v130;
                v129[1] = v131;
                v132 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v382 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v132(__dsta, 0, 1, v386);
              }
              *(_QWORD *)((char *)v87 + *(int *)(v404 + 32)) = *(_QWORD *)((char *)v88 + *(int *)(v404 + 32));
              swift_bridgeObjectRetain();
              v101 = 1;
              v37 = v412;
              v90 = v392;
              v39 = v406;
            }
            else
            {
              *v87 = *v88;
              swift_retain();
              v101 = 0;
            }
            swift_storeEnumTagMultiPayload(v87, v89, v101);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          v133 = v408;
          *(_QWORD *)((char *)v408 + v37[11]) = *(_QWORD *)((char *)v39 + v37[11]);
          v134 = v37[12];
          v135 = (_QWORD *)((char *)v408 + v134);
          v136 = (_QWORD *)((char *)v39 + v134);
          v137 = (int *)type metadata accessor for ArtworkModel(0);
          v138 = *((_QWORD *)v137 - 1);
          v139 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v138 + 48);
          swift_bridgeObjectRetain();
          if (v139(v136, 1, v137))
          {
            v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
          }
          else
          {
            v141 = v136[1];
            *v135 = *v136;
            v135[1] = v141;
            v142 = *((unsigned __int8 *)v136 + 32);
            swift_bridgeObjectRetain();
            if (v142 == 255)
            {
              *((_OWORD *)v135 + 1) = *((_OWORD *)v136 + 1);
              *((_BYTE *)v135 + 32) = *((_BYTE *)v136 + 32);
            }
            else
            {
              v143 = v136[2];
              v144 = v136[3];
              sub_3D464(v143, v144, v142);
              v135[2] = v143;
              v135[3] = v144;
              *((_BYTE *)v135 + 32) = v142;
            }
            *(_OWORD *)(v135 + 5) = *(_OWORD *)(v136 + 5);
            v145 = (id *)(v136 + 7);
            v146 = *((unsigned __int8 *)v136 + 64);
            if (v146 == 255)
            {
              v135[7] = *v145;
              *((_BYTE *)v135 + 64) = *((_BYTE *)v136 + 64);
            }
            else
            {
              v147 = *v145;
              sub_3D47C(*v145, *((_BYTE *)v136 + 64));
              v135[7] = v147;
              *((_BYTE *)v135 + 64) = v146;
            }
            v133 = v408;
            v148 = (id *)(v136 + 9);
            v149 = *((unsigned __int8 *)v136 + 80);
            if (v149 == 255)
            {
              v135[9] = *v148;
              *((_BYTE *)v135 + 80) = *((_BYTE *)v136 + 80);
            }
            else
            {
              v150 = *v148;
              sub_3D47C(*v148, *((_BYTE *)v136 + 80));
              v135[9] = v150;
              *((_BYTE *)v135 + 80) = v149;
            }
            v151 = (id *)(v136 + 11);
            v152 = *((unsigned __int8 *)v136 + 96);
            if (v152 == 255)
            {
              v135[11] = *v151;
              *((_BYTE *)v135 + 96) = *((_BYTE *)v136 + 96);
            }
            else
            {
              v153 = *v151;
              sub_3D47C(*v151, *((_BYTE *)v136 + 96));
              v135[11] = v153;
              *((_BYTE *)v135 + 96) = v152;
            }
            v154 = (id *)(v136 + 13);
            v155 = *((unsigned __int8 *)v136 + 112);
            if (v155 == 255)
            {
              v135[13] = *v154;
              *((_BYTE *)v135 + 112) = *((_BYTE *)v136 + 112);
            }
            else
            {
              v156 = *v154;
              sub_3D47C(*v154, *((_BYTE *)v136 + 112));
              v135[13] = v156;
              *((_BYTE *)v135 + 112) = v155;
            }
            v157 = (id *)(v136 + 15);
            v158 = *((unsigned __int8 *)v136 + 128);
            if (v158 == 255)
            {
              v135[15] = *v157;
              *((_BYTE *)v135 + 128) = *((_BYTE *)v136 + 128);
            }
            else
            {
              v159 = *v157;
              sub_3D47C(*v157, *((_BYTE *)v136 + 128));
              v135[15] = v159;
              *((_BYTE *)v135 + 128) = v158;
            }
            *((_BYTE *)v135 + 129) = *((_BYTE *)v136 + 129);
            v160 = v137[11];
            v161 = (char *)v135 + v160;
            v162 = (char *)v136 + v160;
            v163 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v161, v162, v163);
            v164 = v137[12];
            v165 = (_QWORD *)((char *)v135 + v164);
            v166 = (_QWORD *)((char *)v136 + v164);
            v167 = v166[1];
            *v165 = *v166;
            v165[1] = v167;
            *((_BYTE *)v135 + v137[13]) = *((_BYTE *)v136 + v137[13]);
            *((_BYTE *)v135 + v137[14]) = *((_BYTE *)v136 + v137[14]);
            *((_BYTE *)v135 + v137[15]) = *((_BYTE *)v136 + v137[15]);
            v168 = v137[16];
            v169 = (_QWORD *)((char *)v135 + v168);
            v170 = (_QWORD *)((char *)v136 + v168);
            v171 = v170[1];
            *v169 = *v170;
            v169[1] = v171;
            v172 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v138 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v172(v135, 0, 1, v137);
          }
          v20 = v400;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v402 + 56))(v133, 0, 1, v412);
        }
        *(_OWORD *)&a1[v20[6]] = *(_OWORD *)((char *)a2 + v20[6]);
        *(_QWORD *)&a1[v20[7]] = *(char **)((char *)a2 + v20[7]);
        a1[v20[8]] = *((_BYTE *)a2 + v20[8]);
        v173 = v20[9];
        v174 = &a1[v173];
        v175 = (char *)a2 + v173;
        v176 = type metadata accessor for URL(0);
        v177 = *(_QWORD *)(v176 - 8);
        v178 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v177 + 48);
        v179 = v176;
        swift_bridgeObjectRetain();
        v405 = v178;
        if (v178(v175, 1, v179))
        {
          v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
          memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v174, v175, v179);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v179);
        }
        a1[v20[10]] = *((_BYTE *)a2 + v20[10]);
        a1[v20[11]] = *((_BYTE *)a2 + v20[11]);
        v181 = v20[12];
        v182 = &a1[v181];
        v183 = (char *)a2 + v181;
        v184 = *(uint64_t *)((char *)a2 + v181 + 24);
        if (v184)
        {
          v185 = *((_QWORD *)v183 + 4);
          *((_QWORD *)v182 + 3) = v184;
          *((_QWORD *)v182 + 4) = v185;
          (**(void (***)(void))(v184 - 8))();
        }
        else
        {
          v186 = *((_OWORD *)v183 + 1);
          *(_OWORD *)v182 = *(_OWORD *)v183;
          *((_OWORD *)v182 + 1) = v186;
          *((_QWORD *)v182 + 4) = *((_QWORD *)v183 + 4);
        }
        v187 = v20[13];
        v188 = &a1[v187];
        v189 = (char *)a2 + v187;
        v190 = type metadata accessor for ImpressionMetrics(0);
        v191 = *(_QWORD *)(v190 - 8);
        v409 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v191 + 48);
        v393 = v177;
        v407 = v190;
        __dstb = (void (**)(void *, const void *, _QWORD))v191;
        if (v409(v189, 1, v190))
        {
          v192 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
          memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v188, v189, v190);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
        }
        v193 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
        v194 = &a1[v193];
        v195 = (char *)a2 + v193;
        v196 = *(uint64_t *)((char *)a2 + v193 + 8);
        *(_QWORD *)v194 = *(char **)((char *)a2 + v193);
        *((_QWORD *)v194 + 1) = v196;
        v197 = v20[5];
        v198 = &v194[v197];
        v199 = &v195[v197];
        swift_bridgeObjectRetain();
        if (v410(v199, 1, v412))
        {
          v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
          memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
          v201 = v407;
          v202 = v405;
        }
        else
        {
          v378 = v194;
          v383 = v179;
          v397 = v7;
          v401 = v20;
          v203 = *((_QWORD *)v199 + 1);
          *(_QWORD *)v198 = *(_QWORD *)v199;
          *((_QWORD *)v198 + 1) = v203;
          v204 = *((_QWORD *)v199 + 3);
          *((_QWORD *)v198 + 2) = *((_QWORD *)v199 + 2);
          *((_QWORD *)v198 + 3) = v204;
          v205 = *((_QWORD *)v199 + 5);
          *((_QWORD *)v198 + 4) = *((_QWORD *)v199 + 4);
          *((_QWORD *)v198 + 5) = v205;
          *((_WORD *)v198 + 24) = *((_WORD *)v199 + 24);
          v206 = v412[9];
          v411 = v198;
          v207 = v199;
          v208 = &v198[v206];
          v387 = v207;
          v209 = (_QWORD *)((char *)v207 + v206);
          v210 = type metadata accessor for ActionMenu(0);
          v211 = *(_QWORD **)(v210 - 8);
          v212 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v211[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v376 = v210;
          if (v212(v209, 1, v210))
          {
            v213 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
            memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
            v214 = v411;
            v215 = v412;
            v216 = v387;
            v7 = v397;
            v194 = v378;
          }
          else
          {
            v217 = v209[1];
            *(_QWORD *)v208 = *v209;
            *((_QWORD *)v208 + 1) = v217;
            v218 = v209[3];
            *((_QWORD *)v208 + 2) = v209[2];
            *((_QWORD *)v208 + 3) = v218;
            v219 = v209[5];
            *((_QWORD *)v208 + 4) = v209[4];
            *((_QWORD *)v208 + 5) = v219;
            v220 = *(int *)(v210 + 28);
            v370 = &v208[v220];
            v372 = v211;
            v374 = v209;
            v221 = (_QWORD *)((char *)v209 + v220);
            v222 = type metadata accessor for ArtworkModel(0);
            v223 = *(_QWORD *)(v222 - 8);
            v224 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v223 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v225 = v208;
            if (v224(v221, 1, v222))
            {
              v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v370, v221, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
              v215 = v412;
              v227 = v376;
              v216 = v387;
              v7 = v397;
              v228 = v372;
              v194 = v378;
            }
            else
            {
              v367 = (int *)v222;
              v229 = v221[1];
              *(_QWORD *)v370 = *v221;
              *((_QWORD *)v370 + 1) = v229;
              v230 = *((unsigned __int8 *)v221 + 32);
              swift_bridgeObjectRetain();
              v216 = v387;
              v7 = v397;
              v194 = v378;
              v368 = v225;
              if (v230 == 255)
              {
                *((_OWORD *)v370 + 1) = *((_OWORD *)v221 + 1);
                v370[32] = *((_BYTE *)v221 + 32);
              }
              else
              {
                v231 = v221[2];
                v232 = v221[3];
                sub_3D464(v231, v232, v230);
                *((_QWORD *)v370 + 2) = v231;
                *((_QWORD *)v370 + 3) = v232;
                v370[32] = v230;
              }
              *(_OWORD *)(v370 + 40) = *(_OWORD *)(v221 + 5);
              v233 = (id *)(v221 + 7);
              v234 = *((unsigned __int8 *)v221 + 64);
              if (v234 == 255)
              {
                *((_QWORD *)v370 + 7) = *v233;
                v370[64] = *((_BYTE *)v221 + 64);
              }
              else
              {
                v235 = *v233;
                sub_3D47C(*v233, *((_BYTE *)v221 + 64));
                *((_QWORD *)v370 + 7) = v235;
                v370[64] = v234;
              }
              v236 = (id *)(v221 + 9);
              v237 = *((unsigned __int8 *)v221 + 80);
              if (v237 == 255)
              {
                *((_QWORD *)v370 + 9) = *v236;
                v370[80] = *((_BYTE *)v221 + 80);
              }
              else
              {
                v238 = *v236;
                sub_3D47C(*v236, *((_BYTE *)v221 + 80));
                *((_QWORD *)v370 + 9) = v238;
                v370[80] = v237;
              }
              v239 = (id *)(v221 + 11);
              v240 = *((unsigned __int8 *)v221 + 96);
              if (v240 == 255)
              {
                *((_QWORD *)v370 + 11) = *v239;
                v370[96] = *((_BYTE *)v221 + 96);
              }
              else
              {
                v241 = *v239;
                sub_3D47C(*v239, *((_BYTE *)v221 + 96));
                *((_QWORD *)v370 + 11) = v241;
                v370[96] = v240;
              }
              v242 = (id *)(v221 + 13);
              v243 = *((unsigned __int8 *)v221 + 112);
              if (v243 == 255)
              {
                *((_QWORD *)v370 + 13) = *v242;
                v370[112] = *((_BYTE *)v221 + 112);
              }
              else
              {
                v244 = *v242;
                sub_3D47C(*v242, *((_BYTE *)v221 + 112));
                *((_QWORD *)v370 + 13) = v244;
                v370[112] = v243;
              }
              v245 = (id *)(v221 + 15);
              v246 = *((unsigned __int8 *)v221 + 128);
              if (v246 == 255)
              {
                *((_QWORD *)v370 + 15) = *v245;
                v370[128] = *((_BYTE *)v221 + 128);
              }
              else
              {
                v247 = *v245;
                sub_3D47C(*v245, *((_BYTE *)v221 + 128));
                *((_QWORD *)v370 + 15) = v247;
                v370[128] = v246;
              }
              v370[129] = *((_BYTE *)v221 + 129);
              v248 = v367[11];
              v249 = &v370[v248];
              v250 = (char *)v221 + v248;
              v251 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 16))(v249, v250, v251);
              v252 = v367[12];
              v253 = &v370[v252];
              v254 = (_QWORD *)((char *)v221 + v252);
              v255 = v254[1];
              *(_QWORD *)v253 = *v254;
              *((_QWORD *)v253 + 1) = v255;
              v370[v367[13]] = *((_BYTE *)v221 + v367[13]);
              v370[v367[14]] = *((_BYTE *)v221 + v367[14]);
              v370[v367[15]] = *((_BYTE *)v221 + v367[15]);
              v256 = v367[16];
              v257 = &v370[v256];
              v258 = (_QWORD *)((char *)v221 + v256);
              v259 = v258[1];
              *(_QWORD *)v257 = *v258;
              *((_QWORD *)v257 + 1) = v259;
              v260 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v223 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v260(v370, 0, 1, v367);
              v215 = v412;
              v228 = v372;
              v225 = v368;
              v227 = v376;
            }
            *(_QWORD *)((char *)v225 + *(int *)(v227 + 32)) = *(_QWORD *)((char *)v374 + *(int *)(v227 + 32));
            v261 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v228[7];
            swift_bridgeObjectRetain();
            v261(v225, 0, 1, v227);
            v214 = v411;
          }
          v262 = v215[10];
          v263 = (_QWORD *)((char *)v214 + v262);
          v264 = (_QWORD *)((char *)v216 + v262);
          v265 = type metadata accessor for Header.PrimaryAction(0);
          v266 = *(_QWORD *)(v265 - 8);
          v377 = v195;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v266 + 48))(v264, 1, v265))
          {
            v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
            memcpy(v263, v264, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
            v20 = v401;
            v268 = v387;
          }
          else
          {
            v398 = v266;
            if (swift_getEnumCaseMultiPayload(v264, v265) == 1)
            {
              v269 = v263;
              v270 = v264[1];
              *v269 = *v264;
              v269[1] = v270;
              v271 = v264[3];
              v269[2] = v264[2];
              v269[3] = v271;
              v272 = v264[5];
              v269[4] = v264[4];
              v269[5] = v272;
              v273 = *(int *)(v376 + 28);
              v375 = v269;
              v373 = (_QWORD *)((char *)v269 + v273);
              v379 = (_QWORD *)((char *)v264 + v273);
              v274 = (int *)type metadata accessor for ArtworkModel(0);
              v369 = *((_QWORD *)v274 - 1);
              v371 = *(void **)(v369 + 48);
              swift_bridgeObjectRetain();
              v275 = v379;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (((unsigned int (*)(_QWORD *, uint64_t, int *))v371)(v379, 1, v274))
              {
                v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
                memcpy(v373, v379, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
                v268 = v387;
              }
              else
              {
                v279 = v379[1];
                *v373 = *v379;
                v373[1] = v279;
                v280 = *((unsigned __int8 *)v379 + 32);
                swift_bridgeObjectRetain();
                if (v280 == 255)
                {
                  *((_OWORD *)v373 + 1) = *((_OWORD *)v379 + 1);
                  *((_BYTE *)v373 + 32) = *((_BYTE *)v379 + 32);
                }
                else
                {
                  v281 = v379[2];
                  v282 = v379[3];
                  sub_3D464(v281, v282, v280);
                  v373[2] = v281;
                  v373[3] = v282;
                  v275 = v379;
                  *((_BYTE *)v373 + 32) = v280;
                }
                *(_OWORD *)(v373 + 5) = *(_OWORD *)(v275 + 5);
                v283 = (id *)(v275 + 7);
                v284 = *((unsigned __int8 *)v275 + 64);
                v268 = v387;
                if (v284 == 255)
                {
                  v373[7] = *v283;
                  *((_BYTE *)v373 + 64) = *((_BYTE *)v275 + 64);
                }
                else
                {
                  v285 = *v283;
                  sub_3D47C(*v283, v284);
                  v373[7] = v285;
                  v275 = v379;
                  *((_BYTE *)v373 + 64) = v284;
                }
                v286 = (id *)(v275 + 9);
                v287 = *((unsigned __int8 *)v275 + 80);
                if (v287 == 255)
                {
                  v373[9] = *v286;
                  *((_BYTE *)v373 + 80) = *((_BYTE *)v275 + 80);
                }
                else
                {
                  v288 = *v286;
                  sub_3D47C(*v286, v287);
                  v373[9] = v288;
                  v275 = v379;
                  *((_BYTE *)v373 + 80) = v287;
                }
                v289 = (id *)(v275 + 11);
                v290 = *((unsigned __int8 *)v275 + 96);
                if (v290 == 255)
                {
                  v373[11] = *v289;
                  *((_BYTE *)v373 + 96) = *((_BYTE *)v275 + 96);
                }
                else
                {
                  v291 = *v289;
                  sub_3D47C(*v289, v290);
                  v373[11] = v291;
                  v275 = v379;
                  *((_BYTE *)v373 + 96) = v290;
                }
                v292 = (id *)(v275 + 13);
                v293 = *((unsigned __int8 *)v275 + 112);
                if (v293 == 255)
                {
                  v373[13] = *v292;
                  *((_BYTE *)v373 + 112) = *((_BYTE *)v275 + 112);
                }
                else
                {
                  v294 = *v292;
                  sub_3D47C(*v292, v293);
                  v373[13] = v294;
                  v275 = v379;
                  *((_BYTE *)v373 + 112) = v293;
                }
                v295 = (id *)(v275 + 15);
                v296 = *((unsigned __int8 *)v275 + 128);
                if (v296 == 255)
                {
                  v373[15] = *v295;
                  *((_BYTE *)v373 + 128) = *((_BYTE *)v275 + 128);
                }
                else
                {
                  v297 = *v295;
                  sub_3D47C(*v295, v296);
                  v373[15] = v297;
                  v275 = v379;
                  *((_BYTE *)v373 + 128) = v296;
                }
                *((_BYTE *)v373 + 129) = *((_BYTE *)v275 + 129);
                v298 = v274[11];
                v299 = (char *)v373 + v298;
                v380 = (char *)v275 + v298;
                v300 = type metadata accessor for ArtworkCrop(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 16))(v299, v380, v300);
                v301 = v274[12];
                v302 = (_QWORD *)((char *)v373 + v301);
                v303 = (_QWORD *)((char *)v275 + v301);
                v304 = v303[1];
                *v302 = *v303;
                v302[1] = v304;
                *((_BYTE *)v373 + v274[13]) = *((_BYTE *)v275 + v274[13]);
                *((_BYTE *)v373 + v274[14]) = *((_BYTE *)v275 + v274[14]);
                *((_BYTE *)v373 + v274[15]) = *((_BYTE *)v275 + v274[15]);
                v305 = v274[16];
                v306 = (_QWORD *)((char *)v373 + v305);
                v307 = (_QWORD *)((char *)v275 + v305);
                v308 = v307[1];
                *v306 = *v307;
                v306[1] = v308;
                v309 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v369 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v309(v373, 0, 1, v274);
              }
              v263 = v375;
              *(_QWORD *)((char *)v375 + *(int *)(v376 + 32)) = *(_QWORD *)((char *)v264 + *(int *)(v376 + 32));
              swift_bridgeObjectRetain();
              v277 = 1;
              v214 = v411;
              v215 = v412;
              v278 = v398;
            }
            else
            {
              *v263 = *v264;
              swift_retain();
              v277 = 0;
              v278 = v266;
              v268 = v387;
            }
            swift_storeEnumTagMultiPayload(v263, v265, v277);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v278 + 56))(v263, 0, 1, v265);
            v20 = v401;
          }
          *(_QWORD *)((char *)v214 + v215[11]) = *(_QWORD *)((char *)v268 + v215[11]);
          v310 = v215[12];
          v311 = (_QWORD *)((char *)v214 + v310);
          v312 = (_QWORD *)((char *)v268 + v310);
          v313 = type metadata accessor for ArtworkModel(0);
          v314 = *(_QWORD *)(v313 - 8);
          v315 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v314 + 48);
          swift_bridgeObjectRetain();
          if (v315(v312, 1, v313))
          {
            v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
            v317 = v411;
            v318 = v412;
            v179 = v383;
            v201 = v407;
            v202 = v405;
            v195 = v377;
          }
          else
          {
            v399 = v314;
            v319 = v312[1];
            *v311 = *v312;
            v311[1] = v319;
            v320 = *((unsigned __int8 *)v312 + 32);
            swift_bridgeObjectRetain();
            if (v320 == 255)
            {
              *((_OWORD *)v311 + 1) = *((_OWORD *)v312 + 1);
              *((_BYTE *)v311 + 32) = *((_BYTE *)v312 + 32);
            }
            else
            {
              v322 = v312[2];
              v321 = v312[3];
              sub_3D464(v322, v321, v320);
              v311[2] = v322;
              v311[3] = v321;
              *((_BYTE *)v311 + 32) = v320;
            }
            v323 = (int *)v313;
            *(_OWORD *)(v311 + 5) = *(_OWORD *)(v312 + 5);
            v324 = (id *)(v312 + 7);
            v325 = *((unsigned __int8 *)v312 + 64);
            v195 = v377;
            if (v325 == 255)
            {
              v311[7] = *v324;
              *((_BYTE *)v311 + 64) = *((_BYTE *)v312 + 64);
            }
            else
            {
              v326 = *v324;
              sub_3D47C(*v324, *((_BYTE *)v312 + 64));
              v311[7] = v326;
              *((_BYTE *)v311 + 64) = v325;
            }
            v327 = (id *)(v312 + 9);
            v328 = *((unsigned __int8 *)v312 + 80);
            if (v328 == 255)
            {
              v311[9] = *v327;
              *((_BYTE *)v311 + 80) = *((_BYTE *)v312 + 80);
            }
            else
            {
              v329 = *v327;
              sub_3D47C(*v327, *((_BYTE *)v312 + 80));
              v311[9] = v329;
              *((_BYTE *)v311 + 80) = v328;
            }
            v330 = (id *)(v312 + 11);
            v331 = *((unsigned __int8 *)v312 + 96);
            if (v331 == 255)
            {
              v311[11] = *v330;
              *((_BYTE *)v311 + 96) = *((_BYTE *)v312 + 96);
            }
            else
            {
              v332 = *v330;
              sub_3D47C(*v330, *((_BYTE *)v312 + 96));
              v311[11] = v332;
              *((_BYTE *)v311 + 96) = v331;
            }
            v333 = (id *)(v312 + 13);
            v334 = *((unsigned __int8 *)v312 + 112);
            if (v334 == 255)
            {
              v311[13] = *v333;
              *((_BYTE *)v311 + 112) = *((_BYTE *)v312 + 112);
            }
            else
            {
              v335 = *v333;
              sub_3D47C(*v333, *((_BYTE *)v312 + 112));
              v311[13] = v335;
              *((_BYTE *)v311 + 112) = v334;
            }
            v336 = (id *)(v312 + 15);
            v337 = *((unsigned __int8 *)v312 + 128);
            if (v337 == 255)
            {
              v311[15] = *v336;
              *((_BYTE *)v311 + 128) = *((_BYTE *)v312 + 128);
            }
            else
            {
              v338 = *v336;
              sub_3D47C(*v336, *((_BYTE *)v312 + 128));
              v311[15] = v338;
              *((_BYTE *)v311 + 128) = v337;
            }
            *((_BYTE *)v311 + 129) = *((_BYTE *)v312 + 129);
            v339 = v323[11];
            v340 = (char *)v311 + v339;
            v341 = (char *)v312 + v339;
            v342 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v340, v341, v342);
            v343 = v323[12];
            v344 = (_QWORD *)((char *)v311 + v343);
            v345 = (_QWORD *)((char *)v312 + v343);
            v346 = v345[1];
            *v344 = *v345;
            v344[1] = v346;
            *((_BYTE *)v311 + v323[13]) = *((_BYTE *)v312 + v323[13]);
            *((_BYTE *)v311 + v323[14]) = *((_BYTE *)v312 + v323[14]);
            *((_BYTE *)v311 + v323[15]) = *((_BYTE *)v312 + v323[15]);
            v347 = v323[16];
            v348 = (_QWORD *)((char *)v311 + v347);
            v349 = (_QWORD *)((char *)v312 + v347);
            v350 = v349[1];
            *v348 = *v349;
            v348[1] = v350;
            v351 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v399 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v351(v311, 0, 1, v323);
            v20 = v401;
            v317 = v411;
            v318 = v412;
            v179 = v383;
            v201 = v407;
            v202 = v405;
          }
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v402 + 56))(v317, 0, 1, v318);
        }
        *(_OWORD *)&v194[v20[6]] = *(_OWORD *)&v195[v20[6]];
        *(_QWORD *)&v194[v20[7]] = *(_QWORD *)&v195[v20[7]];
        v194[v20[8]] = v195[v20[8]];
        v352 = v20[9];
        v353 = &v194[v352];
        v354 = &v195[v352];
        swift_bridgeObjectRetain();
        if (v202(v354, 1, v179))
        {
          v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
          memcpy(v353, v354, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v393 + 16))(v353, v354, v179);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v393 + 56))(v353, 0, 1, v179);
        }
        v194[v20[10]] = v195[v20[10]];
        v194[v20[11]] = v195[v20[11]];
        v356 = v20[12];
        v357 = &v194[v356];
        v358 = &v195[v356];
        v359 = *(_QWORD *)&v195[v356 + 24];
        if (v359)
        {
          v360 = *((_QWORD *)v358 + 4);
          *((_QWORD *)v357 + 3) = v359;
          *((_QWORD *)v357 + 4) = v360;
          (**(void (***)(void))(v359 - 8))();
        }
        else
        {
          v361 = *((_OWORD *)v358 + 1);
          *(_OWORD *)v357 = *(_OWORD *)v358;
          *((_OWORD *)v357 + 1) = v361;
          *((_QWORD *)v357 + 4) = *((_QWORD *)v358 + 4);
        }
        v362 = v20[13];
        v363 = &v194[v362];
        v364 = &v195[v362];
        if (v409(&v195[v362], 1, v201))
        {
          v365 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
          memcpy(v363, v364, *(_QWORD *)(*(_QWORD *)(v365 - 8) + 64));
        }
        else
        {
          __dstb[2](v363, v364, v201);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v363, 0, 1, v201);
        }
        v13 = a1;
        v14 = v7;
        v15 = 1;
        goto LABEL_178;
      case 0:
        v9 = *a2;
        v10 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v10;
        v11 = v9;
        v12 = v10;
        v13 = a1;
        v14 = v7;
        v15 = 0;
LABEL_178:
        swift_storeEnumTagMultiPayload(v13, v14, v15);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void destroy for ShelfError(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  id v4;
  int *v5;
  uint64_t v6;
  int *v7;
  unsigned int (*v8)(uint64_t, uint64_t, int *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unsigned int (*v91)(uint64_t, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v4 = *(id *)a1;
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      v5 = (int *)type metadata accessor for ModernShelf(0);
      v6 = a1 + v5[5];
      v7 = (int *)type metadata accessor for Header(0);
      v8 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48);
      if (!v8(v6, 1, v7))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v6 + v7[9];
        v10 = type metadata accessor for ActionMenu(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v9 + *(int *)(v10 + 28);
          v12 = type metadata accessor for ArtworkModel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
          {
            swift_bridgeObjectRelease();
            v13 = *(unsigned __int8 *)(v11 + 32);
            if (v13 != 255)
              sub_3B5BC(*(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), v13);
            v14 = *(unsigned __int8 *)(v11 + 64);
            if (v14 != 255)
              sub_3D624(*(id *)(v11 + 56), v14);
            v15 = *(unsigned __int8 *)(v11 + 80);
            if (v15 != 255)
              sub_3D624(*(id *)(v11 + 72), v15);
            v16 = *(unsigned __int8 *)(v11 + 96);
            if (v16 != 255)
              sub_3D624(*(id *)(v11 + 88), v16);
            v17 = *(unsigned __int8 *)(v11 + 112);
            if (v17 != 255)
              sub_3D624(*(id *)(v11 + 104), v17);
            v18 = *(unsigned __int8 *)(v11 + 128);
            if (v18 != 255)
              sub_3D624(*(id *)(v11 + 120), v18);
            v19 = v11 + *(int *)(v12 + 44);
            v20 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        v21 = (_QWORD *)(v6 + v7[10]);
        v22 = type metadata accessor for Header.PrimaryAction(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
        {
          if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v23 = (char *)v21 + *(int *)(v10 + 28);
            v24 = type metadata accessor for ArtworkModel(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
            {
              swift_bridgeObjectRelease();
              v25 = v23[32];
              if (v25 != 255)
                sub_3B5BC(*((_QWORD *)v23 + 2), *((_QWORD *)v23 + 3), v25);
              v26 = v23[64];
              if (v26 != 255)
                sub_3D624(*((id *)v23 + 7), v26);
              v27 = v23[80];
              if (v27 != 255)
                sub_3D624(*((id *)v23 + 9), v27);
              v28 = v23[96];
              if (v28 != 255)
                sub_3D624(*((id *)v23 + 11), v28);
              v29 = v23[112];
              if (v29 != 255)
                sub_3D624(*((id *)v23 + 13), v29);
              v30 = v23[128];
              if (v30 != 255)
                sub_3D624(*((id *)v23 + 15), v30);
              v31 = &v23[*(int *)(v24 + 44)];
              v32 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release(*v21);
          }
        }
        swift_bridgeObjectRelease();
        v33 = v6 + v7[12];
        v34 = type metadata accessor for ArtworkModel(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
        {
          swift_bridgeObjectRelease();
          v35 = *(unsigned __int8 *)(v33 + 32);
          if (v35 != 255)
            sub_3B5BC(*(_QWORD *)(v33 + 16), *(_QWORD *)(v33 + 24), v35);
          v36 = *(unsigned __int8 *)(v33 + 64);
          if (v36 != 255)
            sub_3D624(*(id *)(v33 + 56), v36);
          v37 = *(unsigned __int8 *)(v33 + 80);
          if (v37 != 255)
            sub_3D624(*(id *)(v33 + 72), v37);
          v38 = *(unsigned __int8 *)(v33 + 96);
          if (v38 != 255)
            sub_3D624(*(id *)(v33 + 88), v38);
          v39 = *(unsigned __int8 *)(v33 + 112);
          if (v39 != 255)
            sub_3D624(*(id *)(v33 + 104), v39);
          v40 = *(unsigned __int8 *)(v33 + 128);
          if (v40 != 255)
            sub_3D624(*(id *)(v33 + 120), v40);
          v41 = v33 + *(int *)(v34 + 44);
          v42 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      v43 = a1 + v5[9];
      v44 = type metadata accessor for URL(0);
      v45 = *(_QWORD *)(v44 - 8);
      v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
      if (!v95(v43, 1, v44))
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
      v46 = (_QWORD *)(a1 + v5[12]);
      if (v46[3])
        __swift_destroy_boxed_opaque_existential_1(v46);
      v47 = a1 + v5[13];
      v48 = type metadata accessor for ImpressionMetrics(0);
      v49 = *(_QWORD *)(v48 - 8);
      v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      if (!v50(v47, 1, v48))
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
      v94 = v49;
      v51 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
      swift_bridgeObjectRelease();
      v52 = v51 + v5[5];
      if (!v8(v52, 1, v7))
      {
        v93 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = v52 + v7[9];
        v54 = type metadata accessor for ActionMenu(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v53, 1, v54))
        {
          v91 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v55 = v53 + *(int *)(v54 + 28);
          v56 = v54;
          v57 = type metadata accessor for ArtworkModel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v55, 1, v57))
          {
            v90 = v56;
            swift_bridgeObjectRelease();
            v58 = *(unsigned __int8 *)(v55 + 32);
            if (v58 != 255)
              sub_3B5BC(*(_QWORD *)(v55 + 16), *(_QWORD *)(v55 + 24), v58);
            v59 = *(unsigned __int8 *)(v55 + 64);
            if (v59 != 255)
              sub_3D624(*(id *)(v55 + 56), v59);
            v60 = *(unsigned __int8 *)(v55 + 80);
            if (v60 != 255)
              sub_3D624(*(id *)(v55 + 72), v60);
            v61 = *(unsigned __int8 *)(v55 + 96);
            if (v61 != 255)
              sub_3D624(*(id *)(v55 + 88), v61);
            v62 = *(unsigned __int8 *)(v55 + 112);
            if (v62 != 255)
              sub_3D624(*(id *)(v55 + 104), v62);
            v63 = *(unsigned __int8 *)(v55 + 128);
            if (v63 != 255)
              sub_3D624(*(id *)(v55 + 120), v63);
            v64 = v55 + *(int *)(v57 + 44);
            v65 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v56 = v90;
          }
          swift_bridgeObjectRelease();
          v54 = v56;
          v50 = v91;
        }
        v66 = (_QWORD *)(v52 + v7[10]);
        v67 = type metadata accessor for Header.PrimaryAction(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v66, 1, v67))
        {
          if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v92 = (char *)v66 + *(int *)(v54 + 28);
            v68 = type metadata accessor for ArtworkModel(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v92, 1, v68))
            {
              swift_bridgeObjectRelease();
              v69 = v92[32];
              if (v69 != 255)
                sub_3B5BC(*((_QWORD *)v92 + 2), *((_QWORD *)v92 + 3), v69);
              v70 = v92[64];
              if (v70 != 255)
                sub_3D624(*((id *)v92 + 7), v70);
              v71 = v92[80];
              if (v71 != 255)
                sub_3D624(*((id *)v92 + 9), v71);
              v72 = v92[96];
              if (v72 != 255)
                sub_3D624(*((id *)v92 + 11), v72);
              v73 = v92[112];
              if (v73 != 255)
                sub_3D624(*((id *)v92 + 13), v73);
              v74 = v92[128];
              if (v74 != 255)
                sub_3D624(*((id *)v92 + 15), v74);
              v89 = &v92[*(int *)(v68 + 44)];
              v75 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v89, v75);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release(*v66);
          }
        }
        swift_bridgeObjectRelease();
        v76 = v52 + v7[12];
        v77 = type metadata accessor for ArtworkModel(0);
        v45 = v93;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77))
        {
          swift_bridgeObjectRelease();
          v78 = *(unsigned __int8 *)(v76 + 32);
          if (v78 != 255)
            sub_3B5BC(*(_QWORD *)(v76 + 16), *(_QWORD *)(v76 + 24), v78);
          v79 = *(unsigned __int8 *)(v76 + 64);
          if (v79 != 255)
            sub_3D624(*(id *)(v76 + 56), v79);
          v80 = *(unsigned __int8 *)(v76 + 80);
          if (v80 != 255)
            sub_3D624(*(id *)(v76 + 72), v80);
          v81 = *(unsigned __int8 *)(v76 + 96);
          if (v81 != 255)
            sub_3D624(*(id *)(v76 + 88), v81);
          v82 = *(unsigned __int8 *)(v76 + 112);
          if (v82 != 255)
            sub_3D624(*(id *)(v76 + 104), v82);
          v83 = *(unsigned __int8 *)(v76 + 128);
          if (v83 != 255)
            sub_3D624(*(id *)(v76 + 120), v83);
          v84 = v76 + *(int *)(v77 + 44);
          v85 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v84, v85);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      v86 = v51 + v5[9];
      if (!v95(v86, 1, v44))
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v86, v44);
      v87 = (_QWORD *)(v51 + v5[12]);
      if (v87[3])
        __swift_destroy_boxed_opaque_existential_1(v87);
      v88 = v51 + v5[13];
      if (!v50(v88, 1, v48))
        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v88, v48);
      break;
    case 0:

      v4 = *(id *)(a1 + 8);
LABEL_6:

      break;
  }
}

_QWORD *initializeWithCopy for ShelfError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, int *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  unsigned int (*v46)(_QWORD *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  id *v52;
  int v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  id *v58;
  int v59;
  id v60;
  id *v61;
  int v62;
  id v63;
  id *v64;
  int v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v79)(_QWORD *, _QWORD, uint64_t, uint64_t);
  int *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  int v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  id *v108;
  int v109;
  id v110;
  id *v111;
  int v112;
  id v113;
  id *v114;
  int v115;
  id v116;
  id *v117;
  int v118;
  id v119;
  id *v120;
  int v121;
  id v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  void (*v136)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  int *v140;
  uint64_t v141;
  unsigned int (*v142)(_QWORD *, uint64_t, int *);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  id *v149;
  int v150;
  id v151;
  id *v152;
  int v153;
  id v154;
  id *v155;
  int v156;
  id v157;
  id *v158;
  int v159;
  id v160;
  id *v161;
  int v162;
  id v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  void (*v176)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int *v197;
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  char *v204;
  uint64_t v205;
  unsigned int (*v206)(char *, uint64_t, uint64_t);
  uint64_t v207;
  unsigned int (*v208)(char *, uint64_t, uint64_t);
  int *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  unsigned int (*v218)(char *, uint64_t, uint64_t);
  uint64_t v219;
  int *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  char *v227;
  int *v228;
  uint64_t v229;
  unsigned int (*v230)(char *, uint64_t, int *);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  uint64_t v236;
  id *v237;
  int v238;
  id v239;
  id *v240;
  int v241;
  id v242;
  id *v243;
  int v244;
  id v245;
  id *v246;
  int v247;
  id v248;
  id *v249;
  int v250;
  id v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  _QWORD *v261;
  char *v262;
  uint64_t v263;
  void (*v264)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v265)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v266;
  _QWORD *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  id *v285;
  int v286;
  id v287;
  id *v288;
  int v289;
  id v290;
  id *v291;
  int v292;
  id v293;
  id *v294;
  int v295;
  id v296;
  id *v297;
  int v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  _QWORD *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  _QWORD *v311;
  char *v312;
  int *v313;
  uint64_t v314;
  unsigned int (*v315)(char *, uint64_t, int *);
  uint64_t v316;
  _QWORD *v317;
  int *v318;
  uint64_t v319;
  int v320;
  uint64_t v321;
  uint64_t v322;
  id *v323;
  int v324;
  id v325;
  id *v326;
  int v327;
  id v328;
  id *v329;
  int v330;
  id v331;
  id *v332;
  int v333;
  id v334;
  id *v335;
  int v336;
  id v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  char *v348;
  uint64_t v349;
  void (*v350)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  __int128 v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  int *v366;
  uint64_t v367;
  uint64_t v368;
  _QWORD *v369;
  unsigned int (*v370)(char *, uint64_t, uint64_t);
  char *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  void (*v375)(_QWORD *, _QWORD, uint64_t, int *);
  char *v376;
  _QWORD *v377;
  uint64_t v378;
  char *v379;
  _QWORD *v380;
  uint64_t v381;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  _QWORD *__dstc;
  int *v386;
  _QWORD *v387;
  char *v388;
  _QWORD *v389;
  uint64_t v390;
  _QWORD *v391;
  uint64_t v392;
  _QWORD *v393;
  uint64_t v394;
  uint64_t v395;
  _QWORD *v396;
  uint64_t v397;
  unsigned int (*v398)(char *, uint64_t, uint64_t);
  uint64_t v399;
  uint64_t v400;
  unsigned int (*v401)(char *, uint64_t, uint64_t);
  _QWORD *v402;
  uint64_t v403;
  unsigned int (*v404)(char *, uint64_t, int *);
  uint64_t v405;
  uint64_t v406;
  _QWORD *v407;
  uint64_t v408;
  int *v409;
  int *v410;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v14 = (void *)*a2;
      *a1 = *a2;
      v15 = v14;
      v11 = a1;
      v12 = a3;
      v13 = 2;
      goto LABEL_176;
    case 1:
      v406 = a3;
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      v17 = (int *)type metadata accessor for ModernShelf(0);
      v18 = v17[5];
      v19 = (_QWORD *)((char *)a1 + v18);
      v20 = (_QWORD *)((char *)a2 + v18);
      v21 = type metadata accessor for Header(0);
      v395 = *(_QWORD *)(v21 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, int *))(v395 + 48);
      swift_bridgeObjectRetain();
      v410 = (int *)v21;
      v404 = v22;
      v409 = v17;
      if (v22((char *)v20, 1, (int *)v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v24 = v20[1];
        *v19 = *v20;
        v19[1] = v24;
        v25 = v20[3];
        v19[2] = v20[2];
        v19[3] = v25;
        v26 = v20[5];
        v19[4] = v20[4];
        v19[5] = v26;
        *((_WORD *)v19 + 24) = *((_WORD *)v20 + 24);
        v27 = *(int *)(v21 + 36);
        v28 = (_QWORD *)((char *)v19 + v27);
        v407 = v20;
        v29 = (_QWORD *)((char *)v20 + v27);
        v30 = type metadata accessor for ActionMenu(0);
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48);
        v33 = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v402 = v19;
        if (v32(v29, 1, v33))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          v17 = v409;
          v35 = v410;
          v36 = v407;
        }
        else
        {
          v389 = v29;
          v392 = v31;
          v37 = v29[1];
          *v28 = *v29;
          v28[1] = v37;
          v38 = v33;
          v39 = v29[3];
          v28[2] = v29[2];
          v28[3] = v39;
          v40 = v29[5];
          v28[4] = v29[4];
          v28[5] = v40;
          v396 = v28;
          v399 = v38;
          v41 = *(int *)(v38 + 28);
          v42 = (_QWORD *)((char *)v28 + v41);
          v43 = (_QWORD *)((char *)v29 + v41);
          v44 = type metadata accessor for ArtworkModel(0);
          v45 = *(_QWORD **)(v44 - 8);
          v46 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v45[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v46(v43, 1, v44))
          {
            v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
            v17 = v409;
            v35 = v410;
            v19 = v402;
            v36 = v407;
          }
          else
          {
            __dst = v45;
            v386 = (int *)v44;
            v48 = v43[1];
            *v42 = *v43;
            v42[1] = v48;
            v49 = *((unsigned __int8 *)v43 + 32);
            swift_bridgeObjectRetain();
            v17 = v409;
            v35 = v410;
            v36 = v407;
            if (v49 == 255)
            {
              *((_OWORD *)v42 + 1) = *((_OWORD *)v43 + 1);
              *((_BYTE *)v42 + 32) = *((_BYTE *)v43 + 32);
            }
            else
            {
              v50 = v43[2];
              v51 = v43[3];
              sub_3D464(v50, v51, v49);
              v42[2] = v50;
              v42[3] = v51;
              *((_BYTE *)v42 + 32) = v49;
            }
            v19 = v402;
            *(_OWORD *)(v42 + 5) = *(_OWORD *)(v43 + 5);
            v52 = (id *)(v43 + 7);
            v53 = *((unsigned __int8 *)v43 + 64);
            if (v53 == 255)
            {
              v42[7] = *v52;
              *((_BYTE *)v42 + 64) = *((_BYTE *)v43 + 64);
            }
            else
            {
              v54 = *v52;
              sub_3D47C(*v52, *((_BYTE *)v43 + 64));
              v42[7] = v54;
              *((_BYTE *)v42 + 64) = v53;
            }
            v55 = (id *)(v43 + 9);
            v56 = *((unsigned __int8 *)v43 + 80);
            if (v56 == 255)
            {
              v42[9] = *v55;
              *((_BYTE *)v42 + 80) = *((_BYTE *)v43 + 80);
            }
            else
            {
              v57 = *v55;
              sub_3D47C(*v55, *((_BYTE *)v43 + 80));
              v42[9] = v57;
              *((_BYTE *)v42 + 80) = v56;
            }
            v58 = (id *)(v43 + 11);
            v59 = *((unsigned __int8 *)v43 + 96);
            if (v59 == 255)
            {
              v42[11] = *v58;
              *((_BYTE *)v42 + 96) = *((_BYTE *)v43 + 96);
            }
            else
            {
              v60 = *v58;
              sub_3D47C(*v58, *((_BYTE *)v43 + 96));
              v42[11] = v60;
              *((_BYTE *)v42 + 96) = v59;
            }
            v61 = (id *)(v43 + 13);
            v62 = *((unsigned __int8 *)v43 + 112);
            if (v62 == 255)
            {
              v42[13] = *v61;
              *((_BYTE *)v42 + 112) = *((_BYTE *)v43 + 112);
            }
            else
            {
              v63 = *v61;
              sub_3D47C(*v61, *((_BYTE *)v43 + 112));
              v42[13] = v63;
              *((_BYTE *)v42 + 112) = v62;
            }
            v64 = (id *)(v43 + 15);
            v65 = *((unsigned __int8 *)v43 + 128);
            if (v65 == 255)
            {
              v42[15] = *v64;
              *((_BYTE *)v42 + 128) = *((_BYTE *)v43 + 128);
            }
            else
            {
              v66 = *v64;
              sub_3D47C(*v64, *((_BYTE *)v43 + 128));
              v42[15] = v66;
              *((_BYTE *)v42 + 128) = v65;
            }
            *((_BYTE *)v42 + 129) = *((_BYTE *)v43 + 129);
            v67 = v386[11];
            v68 = (char *)v42 + v67;
            v379 = (char *)v43 + v67;
            v69 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v68, v379, v69);
            v70 = v386[12];
            v71 = (_QWORD *)((char *)v42 + v70);
            v72 = (_QWORD *)((char *)v43 + v70);
            v73 = v72[1];
            *v71 = *v72;
            v71[1] = v73;
            *((_BYTE *)v42 + v386[13]) = *((_BYTE *)v43 + v386[13]);
            *((_BYTE *)v42 + v386[14]) = *((_BYTE *)v43 + v386[14]);
            *((_BYTE *)v42 + v386[15]) = *((_BYTE *)v43 + v386[15]);
            v74 = v386[16];
            v75 = (_QWORD *)((char *)v42 + v74);
            v76 = (_QWORD *)((char *)v43 + v74);
            v77 = v76[1];
            *v75 = *v76;
            v75[1] = v77;
            v78 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dst[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v78(v42, 0, 1, v386);
          }
          v33 = v399;
          *(_QWORD *)((char *)v396 + *(int *)(v399 + 32)) = *(_QWORD *)((char *)v389 + *(int *)(v399 + 32));
          v79 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v392 + 56);
          swift_bridgeObjectRetain();
          v79(v396, 0, 1, v399);
        }
        v80 = v35;
        v81 = v35[10];
        v82 = (_QWORD *)((char *)v19 + v81);
        v83 = (_QWORD *)((char *)v36 + v81);
        v84 = type metadata accessor for Header.PrimaryAction(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
        {
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          v87 = v80;
          v88 = v407;
        }
        else
        {
          v397 = v85;
          if (swift_getEnumCaseMultiPayload(v83, v84) == 1)
          {
            v390 = v84;
            v393 = v82;
            v89 = v83[1];
            *v82 = *v83;
            v82[1] = v89;
            v90 = v33;
            v91 = v83[3];
            v82[2] = v83[2];
            v82[3] = v91;
            v92 = v83[5];
            v82[4] = v83[4];
            v82[5] = v92;
            v400 = v90;
            v93 = *(int *)(v90 + 28);
            __dsta = (_QWORD *)((char *)v82 + v93);
            v387 = v83;
            v94 = (_QWORD *)((char *)v83 + v93);
            v95 = type metadata accessor for ArtworkModel(0);
            v96 = *(_QWORD *)(v95 - 8);
            v97 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v96 + 48);
            swift_bridgeObjectRetain();
            v98 = v94;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v97(v94, 1, v95))
            {
              v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(__dsta, v94, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
              v87 = v410;
              v19 = v402;
            }
            else
            {
              v102 = (int *)v95;
              v103 = v94[1];
              *__dsta = *v94;
              __dsta[1] = v103;
              v104 = *((unsigned __int8 *)v94 + 32);
              swift_bridgeObjectRetain();
              if (v104 == 255)
              {
                *((_OWORD *)__dsta + 1) = *((_OWORD *)v98 + 1);
                *((_BYTE *)__dsta + 32) = *((_BYTE *)v98 + 32);
              }
              else
              {
                v105 = v98;
                v106 = v98[2];
                v107 = v98[3];
                sub_3D464(v106, v107, v104);
                __dsta[2] = v106;
                __dsta[3] = v107;
                v98 = v105;
                *((_BYTE *)__dsta + 32) = v104;
              }
              v87 = v410;
              v19 = v402;
              *(_OWORD *)(__dsta + 5) = *(_OWORD *)(v98 + 5);
              v108 = (id *)(v98 + 7);
              v109 = *((unsigned __int8 *)v98 + 64);
              if (v109 == 255)
              {
                __dsta[7] = *v108;
                *((_BYTE *)__dsta + 64) = *((_BYTE *)v98 + 64);
              }
              else
              {
                v110 = *v108;
                sub_3D47C(*v108, *((_BYTE *)v98 + 64));
                __dsta[7] = v110;
                *((_BYTE *)__dsta + 64) = v109;
              }
              v111 = (id *)(v98 + 9);
              v112 = *((unsigned __int8 *)v98 + 80);
              if (v112 == 255)
              {
                __dsta[9] = *v111;
                *((_BYTE *)__dsta + 80) = *((_BYTE *)v98 + 80);
              }
              else
              {
                v113 = *v111;
                sub_3D47C(*v111, *((_BYTE *)v98 + 80));
                __dsta[9] = v113;
                *((_BYTE *)__dsta + 80) = v112;
              }
              v114 = (id *)(v98 + 11);
              v115 = *((unsigned __int8 *)v98 + 96);
              if (v115 == 255)
              {
                __dsta[11] = *v114;
                *((_BYTE *)__dsta + 96) = *((_BYTE *)v98 + 96);
              }
              else
              {
                v116 = *v114;
                sub_3D47C(*v114, *((_BYTE *)v98 + 96));
                __dsta[11] = v116;
                *((_BYTE *)__dsta + 96) = v115;
              }
              v117 = (id *)(v98 + 13);
              v118 = *((unsigned __int8 *)v98 + 112);
              if (v118 == 255)
              {
                __dsta[13] = *v117;
                *((_BYTE *)__dsta + 112) = *((_BYTE *)v98 + 112);
              }
              else
              {
                v119 = *v117;
                sub_3D47C(*v117, *((_BYTE *)v98 + 112));
                __dsta[13] = v119;
                *((_BYTE *)__dsta + 112) = v118;
              }
              v120 = (id *)(v98 + 15);
              v121 = *((unsigned __int8 *)v98 + 128);
              if (v121 == 255)
              {
                __dsta[15] = *v120;
                *((_BYTE *)__dsta + 128) = *((_BYTE *)v98 + 128);
              }
              else
              {
                v122 = *v120;
                sub_3D47C(*v120, *((_BYTE *)v98 + 128));
                __dsta[15] = v122;
                *((_BYTE *)__dsta + 128) = v121;
              }
              *((_BYTE *)__dsta + 129) = *((_BYTE *)v98 + 129);
              v123 = v102[11];
              v124 = (char *)__dsta + v123;
              v125 = v98;
              v126 = (char *)v98 + v123;
              v127 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v124, v126, v127);
              v128 = v102[12];
              v129 = (_QWORD *)((char *)__dsta + v128);
              v130 = (_QWORD *)((char *)v125 + v128);
              v131 = v130[1];
              *v129 = *v130;
              v129[1] = v131;
              *((_BYTE *)__dsta + v102[13]) = *((_BYTE *)v125 + v102[13]);
              *((_BYTE *)__dsta + v102[14]) = *((_BYTE *)v125 + v102[14]);
              *((_BYTE *)__dsta + v102[15]) = *((_BYTE *)v125 + v102[15]);
              v132 = v102[16];
              v133 = (_QWORD *)((char *)__dsta + v132);
              v134 = (_QWORD *)((char *)v125 + v132);
              v135 = v134[1];
              *v133 = *v134;
              v133[1] = v135;
              v136 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v96 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v136(__dsta, 0, 1, v102);
            }
            v82 = v393;
            *(_QWORD *)((char *)v393 + *(int *)(v400 + 32)) = *(_QWORD *)((char *)v387 + *(int *)(v400 + 32));
            swift_bridgeObjectRetain();
            v100 = 1;
            v101 = v397;
            v88 = v407;
            v84 = v390;
          }
          else
          {
            *v82 = *v83;
            swift_retain();
            v100 = 0;
            v101 = v85;
            v87 = v80;
            v88 = v407;
          }
          swift_storeEnumTagMultiPayload(v82, v84, v100);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v82, 0, 1, v84);
        }
        *(_QWORD *)((char *)v19 + v87[11]) = *(_QWORD *)((char *)v88 + v87[11]);
        v137 = v87[12];
        v138 = (_QWORD *)((char *)v19 + v137);
        v139 = (_QWORD *)((char *)v88 + v137);
        v140 = (int *)type metadata accessor for ArtworkModel(0);
        v141 = *((_QWORD *)v140 - 1);
        v142 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v141 + 48);
        swift_bridgeObjectRetain();
        if (v142(v139, 1, v140))
        {
          v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        }
        else
        {
          v144 = v141;
          v145 = v139[1];
          *v138 = *v139;
          v138[1] = v145;
          v146 = *((unsigned __int8 *)v139 + 32);
          swift_bridgeObjectRetain();
          if (v146 == 255)
          {
            *((_OWORD *)v138 + 1) = *((_OWORD *)v139 + 1);
            *((_BYTE *)v138 + 32) = *((_BYTE *)v139 + 32);
          }
          else
          {
            v147 = v139[2];
            v148 = v139[3];
            sub_3D464(v147, v148, v146);
            v138[2] = v147;
            v138[3] = v148;
            *((_BYTE *)v138 + 32) = v146;
          }
          *(_OWORD *)(v138 + 5) = *(_OWORD *)(v139 + 5);
          v149 = (id *)(v139 + 7);
          v150 = *((unsigned __int8 *)v139 + 64);
          if (v150 == 255)
          {
            v138[7] = *v149;
            *((_BYTE *)v138 + 64) = *((_BYTE *)v139 + 64);
          }
          else
          {
            v151 = *v149;
            sub_3D47C(*v149, *((_BYTE *)v139 + 64));
            v138[7] = v151;
            *((_BYTE *)v138 + 64) = v150;
          }
          v152 = (id *)(v139 + 9);
          v153 = *((unsigned __int8 *)v139 + 80);
          if (v153 == 255)
          {
            v138[9] = *v152;
            *((_BYTE *)v138 + 80) = *((_BYTE *)v139 + 80);
          }
          else
          {
            v154 = *v152;
            sub_3D47C(*v152, *((_BYTE *)v139 + 80));
            v138[9] = v154;
            *((_BYTE *)v138 + 80) = v153;
          }
          v155 = (id *)(v139 + 11);
          v156 = *((unsigned __int8 *)v139 + 96);
          if (v156 == 255)
          {
            v138[11] = *v155;
            *((_BYTE *)v138 + 96) = *((_BYTE *)v139 + 96);
          }
          else
          {
            v157 = *v155;
            sub_3D47C(*v155, *((_BYTE *)v139 + 96));
            v138[11] = v157;
            *((_BYTE *)v138 + 96) = v156;
          }
          v158 = (id *)(v139 + 13);
          v159 = *((unsigned __int8 *)v139 + 112);
          if (v159 == 255)
          {
            v138[13] = *v158;
            *((_BYTE *)v138 + 112) = *((_BYTE *)v139 + 112);
          }
          else
          {
            v160 = *v158;
            sub_3D47C(*v158, *((_BYTE *)v139 + 112));
            v138[13] = v160;
            *((_BYTE *)v138 + 112) = v159;
          }
          v161 = (id *)(v139 + 15);
          v162 = *((unsigned __int8 *)v139 + 128);
          if (v162 == 255)
          {
            v138[15] = *v161;
            *((_BYTE *)v138 + 128) = *((_BYTE *)v139 + 128);
          }
          else
          {
            v163 = *v161;
            sub_3D47C(*v161, *((_BYTE *)v139 + 128));
            v138[15] = v163;
            *((_BYTE *)v138 + 128) = v162;
          }
          *((_BYTE *)v138 + 129) = *((_BYTE *)v139 + 129);
          v164 = v140[11];
          v165 = (char *)v138 + v164;
          v166 = (char *)v139 + v164;
          v167 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v165, v166, v167);
          v168 = v140[12];
          v169 = (_QWORD *)((char *)v138 + v168);
          v170 = (_QWORD *)((char *)v139 + v168);
          v171 = v170[1];
          *v169 = *v170;
          v169[1] = v171;
          *((_BYTE *)v138 + v140[13]) = *((_BYTE *)v139 + v140[13]);
          *((_BYTE *)v138 + v140[14]) = *((_BYTE *)v139 + v140[14]);
          *((_BYTE *)v138 + v140[15]) = *((_BYTE *)v139 + v140[15]);
          v172 = v140[16];
          v173 = (_QWORD *)((char *)v138 + v172);
          v174 = (_QWORD *)((char *)v139 + v172);
          v175 = v174[1];
          *v173 = *v174;
          v173[1] = v175;
          v176 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v144 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v176(v138, 0, 1, v140);
          v87 = v410;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v395 + 56))(v402, 0, 1, v87);
      }
      *(_OWORD *)((char *)a1 + v17[6]) = *(_OWORD *)((char *)a2 + v17[6]);
      *(_QWORD *)((char *)a1 + v17[7]) = *(_QWORD *)((char *)a2 + v17[7]);
      *((_BYTE *)a1 + v17[8]) = *((_BYTE *)a2 + v17[8]);
      v177 = v17[9];
      v178 = (char *)a1 + v177;
      v179 = (char *)a2 + v177;
      v180 = type metadata accessor for URL(0);
      v181 = *(_QWORD *)(v180 - 8);
      v182 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v181 + 48);
      swift_bridgeObjectRetain();
      v401 = (unsigned int (*)(char *, uint64_t, uint64_t))v182;
      if (v182(v179, 1, v180))
      {
        v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v178, v179, v180);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
      }
      *((_BYTE *)a1 + v17[10]) = *((_BYTE *)a2 + v17[10]);
      *((_BYTE *)a1 + v17[11]) = *((_BYTE *)a2 + v17[11]);
      v184 = v17[12];
      v185 = (char *)a1 + v184;
      v186 = (char *)a2 + v184;
      v187 = *(_QWORD *)((char *)a2 + v184 + 24);
      if (v187)
      {
        v188 = *((_QWORD *)v186 + 4);
        *((_QWORD *)v185 + 3) = v187;
        *((_QWORD *)v185 + 4) = v188;
        (**(void (***)(void))(v187 - 8))();
      }
      else
      {
        v189 = *((_OWORD *)v186 + 1);
        *(_OWORD *)v185 = *(_OWORD *)v186;
        *((_OWORD *)v185 + 1) = v189;
        *((_QWORD *)v185 + 4) = *((_QWORD *)v186 + 4);
      }
      v190 = v17;
      v191 = v17[13];
      v192 = (char *)a1 + v191;
      v193 = (char *)a2 + v191;
      v194 = type metadata accessor for ImpressionMetrics(0);
      v195 = *(_QWORD *)(v194 - 8);
      v398 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48);
      v394 = v181;
      v408 = v194;
      v403 = v195;
      if (v398(v193, 1, v194))
      {
        v196 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
        memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
      }
      v197 = v190;
      v198 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
      v199 = (_QWORD *)((char *)a1 + v198);
      v200 = (char *)a2 + v198;
      v201 = *(_QWORD *)((char *)a2 + v198 + 8);
      *v199 = *(_QWORD *)((char *)a2 + v198);
      v199[1] = v201;
      v202 = v197[5];
      v203 = (_QWORD *)((char *)v199 + v202);
      v204 = &v200[v202];
      swift_bridgeObjectRetain();
      if (v404(v204, 1, v410))
      {
        v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
        memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
        v206 = v401;
        v207 = v403;
        v208 = v398;
        v209 = v409;
      }
      else
      {
        v380 = v199;
        __dstb = v204;
        v388 = v200;
        v405 = v180;
        v210 = *((_QWORD *)v204 + 1);
        *v203 = *(_QWORD *)v204;
        v203[1] = v210;
        v211 = *((_QWORD *)v204 + 3);
        v203[2] = *((_QWORD *)v204 + 2);
        v203[3] = v211;
        v212 = *((_QWORD *)v204 + 5);
        v203[4] = *((_QWORD *)v204 + 4);
        v203[5] = v212;
        *((_WORD *)v203 + 24) = *((_WORD *)v204 + 24);
        v213 = v410[9];
        v214 = (_QWORD *)((char *)v203 + v213);
        v215 = &v204[v213];
        v216 = type metadata accessor for ActionMenu(0);
        v217 = *(_QWORD *)(v216 - 8);
        v218 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v391 = v203;
        v378 = v216;
        if (v218(v215, 1, v216))
        {
          v219 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
          memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
          v209 = v409;
          v220 = v410;
          v180 = v405;
          v199 = v380;
          v221 = __dstb;
        }
        else
        {
          v372 = v217;
          v376 = (char *)v214;
          v222 = *((_QWORD *)v215 + 1);
          *v214 = *(_QWORD *)v215;
          v214[1] = v222;
          v223 = *((_QWORD *)v215 + 3);
          v214[2] = *((_QWORD *)v215 + 2);
          v214[3] = v223;
          v224 = *((_QWORD *)v215 + 5);
          v214[4] = *((_QWORD *)v215 + 4);
          v214[5] = v224;
          v225 = *(int *)(v216 + 28);
          v226 = (_QWORD *)((char *)v214 + v225);
          v369 = v215;
          v227 = &v215[v225];
          v228 = (int *)type metadata accessor for ArtworkModel(0);
          v229 = *((_QWORD *)v228 - 1);
          v230 = *(unsigned int (**)(char *, uint64_t, int *))(v229 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v230(v227, 1, v228))
          {
            v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
            v180 = v405;
            v203 = v391;
            v209 = v409;
            v199 = v380;
            v221 = __dstb;
            v232 = v372;
          }
          else
          {
            v367 = v229;
            v233 = *((_QWORD *)v227 + 1);
            *v226 = *(_QWORD *)v227;
            v226[1] = v233;
            v234 = v227[32];
            swift_bridgeObjectRetain();
            v199 = v380;
            if (v234 == 255)
            {
              *((_OWORD *)v226 + 1) = *((_OWORD *)v227 + 1);
              *((_BYTE *)v226 + 32) = v227[32];
            }
            else
            {
              v235 = *((_QWORD *)v227 + 2);
              v236 = *((_QWORD *)v227 + 3);
              sub_3D464(v235, v236, v234);
              v226[2] = v235;
              v226[3] = v236;
              *((_BYTE *)v226 + 32) = v234;
            }
            v203 = v391;
            v209 = v409;
            *(_OWORD *)(v226 + 5) = *(_OWORD *)(v227 + 40);
            v237 = (id *)(v227 + 56);
            v238 = v227[64];
            if (v238 == 255)
            {
              v226[7] = *v237;
              *((_BYTE *)v226 + 64) = v227[64];
            }
            else
            {
              v239 = *v237;
              sub_3D47C(*v237, v227[64]);
              v226[7] = v239;
              *((_BYTE *)v226 + 64) = v238;
            }
            v240 = (id *)(v227 + 72);
            v241 = v227[80];
            if (v241 == 255)
            {
              v226[9] = *v240;
              *((_BYTE *)v226 + 80) = v227[80];
            }
            else
            {
              v242 = *v240;
              sub_3D47C(*v240, v227[80]);
              v226[9] = v242;
              *((_BYTE *)v226 + 80) = v241;
            }
            v243 = (id *)(v227 + 88);
            v244 = v227[96];
            if (v244 == 255)
            {
              v226[11] = *v243;
              *((_BYTE *)v226 + 96) = v227[96];
            }
            else
            {
              v245 = *v243;
              sub_3D47C(*v243, v227[96]);
              v226[11] = v245;
              *((_BYTE *)v226 + 96) = v244;
            }
            v246 = (id *)(v227 + 104);
            v247 = v227[112];
            if (v247 == 255)
            {
              v226[13] = *v246;
              *((_BYTE *)v226 + 112) = v227[112];
            }
            else
            {
              v248 = *v246;
              sub_3D47C(*v246, v227[112]);
              v226[13] = v248;
              *((_BYTE *)v226 + 112) = v247;
            }
            v249 = (id *)(v227 + 120);
            v250 = v227[128];
            if (v250 == 255)
            {
              v226[15] = *v249;
              *((_BYTE *)v226 + 128) = v227[128];
            }
            else
            {
              v251 = *v249;
              sub_3D47C(*v249, v227[128]);
              v226[15] = v251;
              *((_BYTE *)v226 + 128) = v250;
            }
            v180 = v405;
            *((_BYTE *)v226 + 129) = v227[129];
            v252 = v228[11];
            v253 = (char *)v226 + v252;
            v254 = &v227[v252];
            v255 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 16))(v253, v254, v255);
            v256 = v228[12];
            v257 = (_QWORD *)((char *)v226 + v256);
            v258 = &v227[v256];
            v259 = *((_QWORD *)v258 + 1);
            *v257 = *(_QWORD *)v258;
            v257[1] = v259;
            *((_BYTE *)v226 + v228[13]) = v227[v228[13]];
            *((_BYTE *)v226 + v228[14]) = v227[v228[14]];
            *((_BYTE *)v226 + v228[15]) = v227[v228[15]];
            v260 = v228[16];
            v261 = (_QWORD *)((char *)v226 + v260);
            v262 = &v227[v260];
            v263 = *((_QWORD *)v262 + 1);
            *v261 = *(_QWORD *)v262;
            v261[1] = v263;
            v264 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v367 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v264(v226, 0, 1, v228);
            v232 = v372;
            v221 = __dstb;
          }
          *(_QWORD *)&v376[*(int *)(v378 + 32)] = *(_QWORD *)((char *)v369 + *(int *)(v378 + 32));
          v265 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v232 + 56);
          swift_bridgeObjectRetain();
          v265(v376, 0, 1, v378);
          v220 = v410;
        }
        v266 = v220[10];
        v267 = (_QWORD *)((char *)v203 + v266);
        v268 = &v221[v266];
        v269 = type metadata accessor for Header.PrimaryAction(0);
        v270 = *(_QWORD *)(v269 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v270 + 48))(v268, 1, v269))
        {
          v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
          memcpy(v267, v268, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(v268, v269) == 1)
          {
            v272 = *((_QWORD *)v268 + 1);
            *v267 = *(_QWORD *)v268;
            v267[1] = v272;
            v273 = *((_QWORD *)v268 + 3);
            v267[2] = *((_QWORD *)v268 + 2);
            v267[3] = v273;
            v274 = v267;
            v275 = *((_QWORD *)v268 + 5);
            v274[4] = *((_QWORD *)v268 + 4);
            v274[5] = v275;
            v276 = *(int *)(v378 + 28);
            v381 = v270;
            __dstc = v274;
            v373 = &v268[v276];
            v377 = (_QWORD *)((char *)v274 + v276);
            v277 = type metadata accessor for ArtworkModel(0);
            v368 = *(_QWORD *)(v277 - 8);
            v370 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v368 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v278 = v373;
            swift_bridgeObjectRetain();
            if (v370(v373, 1, v277))
            {
              v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v377, v373, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
              v180 = v405;
            }
            else
            {
              v281 = *((_QWORD *)v373 + 1);
              *v377 = *(_QWORD *)v373;
              v377[1] = v281;
              v282 = v373[32];
              swift_bridgeObjectRetain();
              v366 = (int *)v277;
              if (v282 == 255)
              {
                *((_OWORD *)v377 + 1) = *((_OWORD *)v373 + 1);
                *((_BYTE *)v377 + 32) = v373[32];
              }
              else
              {
                v283 = *((_QWORD *)v373 + 2);
                v284 = *((_QWORD *)v373 + 3);
                sub_3D464(v283, v284, v282);
                v377[2] = v283;
                v377[3] = v284;
                v278 = v373;
                *((_BYTE *)v377 + 32) = v282;
              }
              *(_OWORD *)(v377 + 5) = *(_OWORD *)(v278 + 40);
              v285 = (id *)(v278 + 56);
              v286 = v278[64];
              if (v286 == 255)
              {
                v377[7] = *v285;
                *((_BYTE *)v377 + 64) = v278[64];
              }
              else
              {
                v287 = *v285;
                sub_3D47C(*v285, v278[64]);
                v377[7] = v287;
                *((_BYTE *)v377 + 64) = v286;
              }
              v288 = (id *)(v278 + 72);
              v289 = v278[80];
              if (v289 == 255)
              {
                v377[9] = *v288;
                *((_BYTE *)v377 + 80) = v278[80];
              }
              else
              {
                v290 = *v288;
                sub_3D47C(*v288, v278[80]);
                v377[9] = v290;
                *((_BYTE *)v377 + 80) = v289;
              }
              v291 = (id *)(v278 + 88);
              v292 = v278[96];
              if (v292 == 255)
              {
                v377[11] = *v291;
                *((_BYTE *)v377 + 96) = v278[96];
              }
              else
              {
                v293 = *v291;
                sub_3D47C(*v291, v278[96]);
                v377[11] = v293;
                *((_BYTE *)v377 + 96) = v292;
              }
              v294 = (id *)(v278 + 104);
              v295 = v278[112];
              if (v295 == 255)
              {
                v377[13] = *v294;
                *((_BYTE *)v377 + 112) = v278[112];
              }
              else
              {
                v296 = *v294;
                sub_3D47C(*v294, v278[112]);
                v377[13] = v296;
                *((_BYTE *)v377 + 112) = v295;
              }
              v297 = (id *)(v278 + 120);
              v298 = v278[128];
              if (v298 == 255)
              {
                v377[15] = *v297;
                *((_BYTE *)v377 + 128) = v278[128];
              }
              else
              {
                v299 = *v297;
                sub_3D47C(*v297, v278[128]);
                v377[15] = v299;
                *((_BYTE *)v377 + 128) = v298;
              }
              v180 = v405;
              *((_BYTE *)v377 + 129) = v278[129];
              v300 = v366[11];
              v371 = &v278[v300];
              v374 = (char *)v377 + v300;
              v301 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(v374, v371, v301);
              v302 = v366[12];
              v303 = (_QWORD *)((char *)v377 + v302);
              v304 = &v278[v302];
              v305 = *((_QWORD *)v304 + 1);
              *v303 = *(_QWORD *)v304;
              v303[1] = v305;
              *((_BYTE *)v377 + v366[13]) = v278[v366[13]];
              *((_BYTE *)v377 + v366[14]) = v278[v366[14]];
              *((_BYTE *)v377 + v366[15]) = v278[v366[15]];
              v306 = v366[16];
              v307 = (_QWORD *)((char *)v377 + v306);
              v308 = &v278[v306];
              v309 = *((_QWORD *)v308 + 1);
              *v307 = *(_QWORD *)v308;
              v307[1] = v309;
              v375 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v368 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v375(v377, 0, 1, v366);
            }
            v267 = __dstc;
            *(_QWORD *)((char *)__dstc + *(int *)(v378 + 32)) = *(_QWORD *)&v268[*(int *)(v378 + 32)];
            swift_bridgeObjectRetain();
            v280 = 1;
            v203 = v391;
            v270 = v381;
          }
          else
          {
            *v267 = *(_QWORD *)v268;
            swift_retain();
            v280 = 0;
          }
          swift_storeEnumTagMultiPayload(v267, v269, v280);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v270 + 56))(v267, 0, 1, v269);
        }
        *(_QWORD *)((char *)v203 + v410[11]) = *(_QWORD *)&v221[v410[11]];
        v310 = v410[12];
        v311 = (_QWORD *)((char *)v203 + v310);
        v312 = &v221[v310];
        v313 = (int *)type metadata accessor for ArtworkModel(0);
        v314 = *((_QWORD *)v313 - 1);
        v315 = *(unsigned int (**)(char *, uint64_t, int *))(v314 + 48);
        swift_bridgeObjectRetain();
        if (v315(v312, 1, v313))
        {
          v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
          v206 = v401;
          v207 = v403;
          v208 = v398;
          v317 = v391;
          v318 = v410;
        }
        else
        {
          v319 = *((_QWORD *)v312 + 1);
          *v311 = *(_QWORD *)v312;
          v311[1] = v319;
          v320 = v312[32];
          swift_bridgeObjectRetain();
          if (v320 == 255)
          {
            *((_OWORD *)v311 + 1) = *((_OWORD *)v312 + 1);
            *((_BYTE *)v311 + 32) = v312[32];
          }
          else
          {
            v321 = *((_QWORD *)v312 + 2);
            v322 = *((_QWORD *)v312 + 3);
            sub_3D464(v321, v322, v320);
            v311[2] = v321;
            v311[3] = v322;
            *((_BYTE *)v311 + 32) = v320;
          }
          *(_OWORD *)(v311 + 5) = *(_OWORD *)(v312 + 40);
          v323 = (id *)(v312 + 56);
          v324 = v312[64];
          v318 = v410;
          if (v324 == 255)
          {
            v311[7] = *v323;
            *((_BYTE *)v311 + 64) = v312[64];
          }
          else
          {
            v325 = *v323;
            sub_3D47C(*v323, v312[64]);
            v311[7] = v325;
            *((_BYTE *)v311 + 64) = v324;
          }
          v326 = (id *)(v312 + 72);
          v327 = v312[80];
          if (v327 == 255)
          {
            v311[9] = *v326;
            *((_BYTE *)v311 + 80) = v312[80];
          }
          else
          {
            v328 = *v326;
            sub_3D47C(*v326, v312[80]);
            v311[9] = v328;
            *((_BYTE *)v311 + 80) = v327;
          }
          v329 = (id *)(v312 + 88);
          v330 = v312[96];
          if (v330 == 255)
          {
            v311[11] = *v329;
            *((_BYTE *)v311 + 96) = v312[96];
          }
          else
          {
            v331 = *v329;
            sub_3D47C(*v329, v312[96]);
            v311[11] = v331;
            *((_BYTE *)v311 + 96) = v330;
          }
          v332 = (id *)(v312 + 104);
          v333 = v312[112];
          if (v333 == 255)
          {
            v311[13] = *v332;
            *((_BYTE *)v311 + 112) = v312[112];
          }
          else
          {
            v334 = *v332;
            sub_3D47C(*v332, v312[112]);
            v311[13] = v334;
            *((_BYTE *)v311 + 112) = v333;
          }
          v335 = (id *)(v312 + 120);
          v336 = v312[128];
          if (v336 == 255)
          {
            v311[15] = *v335;
            *((_BYTE *)v311 + 128) = v312[128];
          }
          else
          {
            v337 = *v335;
            sub_3D47C(*v335, v312[128]);
            v311[15] = v337;
            *((_BYTE *)v311 + 128) = v336;
          }
          *((_BYTE *)v311 + 129) = v312[129];
          v338 = v313[11];
          v339 = (char *)v311 + v338;
          v340 = &v312[v338];
          v341 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v339, v340, v341);
          v342 = v313[12];
          v343 = (_QWORD *)((char *)v311 + v342);
          v344 = &v312[v342];
          v345 = *((_QWORD *)v344 + 1);
          *v343 = *(_QWORD *)v344;
          v343[1] = v345;
          *((_BYTE *)v311 + v313[13]) = v312[v313[13]];
          *((_BYTE *)v311 + v313[14]) = v312[v313[14]];
          *((_BYTE *)v311 + v313[15]) = v312[v313[15]];
          v346 = v313[16];
          v347 = (_QWORD *)((char *)v311 + v346);
          v348 = &v312[v346];
          v349 = *((_QWORD *)v348 + 1);
          *v347 = *(_QWORD *)v348;
          v347[1] = v349;
          v350 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v314 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v350(v311, 0, 1, v313);
          v207 = v403;
          v180 = v405;
          v208 = v398;
          v206 = v401;
          v317 = v391;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v395 + 56))(v317, 0, 1, v318);
        v200 = v388;
      }
      *(_OWORD *)((char *)v199 + v209[6]) = *(_OWORD *)&v200[v209[6]];
      *(_QWORD *)((char *)v199 + v209[7]) = *(_QWORD *)&v200[v209[7]];
      *((_BYTE *)v199 + v209[8]) = v200[v209[8]];
      v351 = v209[9];
      v352 = (char *)v199 + v351;
      v353 = &v200[v351];
      swift_bridgeObjectRetain();
      if (v206(v353, 1, v180))
      {
        v354 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v352, v353, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v394 + 16))(v352, v353, v180);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v394 + 56))(v352, 0, 1, v180);
      }
      *((_BYTE *)v199 + v209[10]) = v200[v209[10]];
      *((_BYTE *)v199 + v209[11]) = v200[v209[11]];
      v355 = v209[12];
      v356 = (char *)v199 + v355;
      v357 = &v200[v355];
      v358 = *(_QWORD *)&v200[v355 + 24];
      if (v358)
      {
        v359 = *((_QWORD *)v357 + 4);
        *((_QWORD *)v356 + 3) = v358;
        *((_QWORD *)v356 + 4) = v359;
        (**(void (***)(void))(v358 - 8))();
      }
      else
      {
        v360 = *((_OWORD *)v357 + 1);
        *(_OWORD *)v356 = *(_OWORD *)v357;
        *((_OWORD *)v356 + 1) = v360;
        *((_QWORD *)v356 + 4) = *((_QWORD *)v357 + 4);
      }
      v361 = v209[13];
      v362 = (char *)v199 + v361;
      v363 = &v200[v361];
      if (v208(&v200[v361], 1, v408))
      {
        v364 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
        memcpy(v362, v363, *(_QWORD *)(*(_QWORD *)(v364 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v362, v363, v408);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v362, 0, 1, v408);
      }
      v12 = v406;
      v11 = a1;
      v13 = 1;
      goto LABEL_176;
    case 0:
      v7 = (void *)*a2;
      v8 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = v7;
      v10 = v8;
      v11 = a1;
      v12 = a3;
      v13 = 0;
LABEL_176:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for ShelfError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, int *);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned int (*v28)(_QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  id *v46;
  int v47;
  id v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  id v53;
  id *v54;
  int v55;
  id v56;
  id v57;
  id *v58;
  int v59;
  id v60;
  id v61;
  id *v62;
  int v63;
  id v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  void (*v76)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v77)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  id *v95;
  int v96;
  id v97;
  id v98;
  id *v99;
  int v100;
  id v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  id v106;
  id *v107;
  int v108;
  id v109;
  id v110;
  id *v111;
  int v112;
  id v113;
  id v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  void (*v124)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  int *v128;
  uint64_t v129;
  unsigned int (*v130)(_QWORD *, uint64_t, int *);
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  id *v136;
  int v137;
  id v138;
  id v139;
  id *v140;
  int v141;
  id v142;
  id v143;
  id *v144;
  int v145;
  id v146;
  id v147;
  id *v148;
  int v149;
  id v150;
  id v151;
  id *v152;
  int v153;
  id v154;
  id v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  void (*v166)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  unsigned int (*v172)(char *, uint64_t, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  int *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  unsigned int (*v189)(char *, uint64_t, int *);
  uint64_t v190;
  _QWORD *v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  char *v195;
  uint64_t v196;
  unsigned int (*v197)(char *, uint64_t, uint64_t);
  uint64_t v198;
  unsigned int (*v199)(char *, uint64_t, uint64_t);
  uint64_t v200;
  _QWORD *v201;
  char *v202;
  uint64_t v203;
  _QWORD *v204;
  unsigned int (*v205)(char *, uint64_t, uint64_t);
  uint64_t v206;
  int *v207;
  _QWORD *v208;
  uint64_t v209;
  _QWORD *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  unsigned int (*v214)(char *, uint64_t, uint64_t);
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  _QWORD *v218;
  int *v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  id *v224;
  int v225;
  id v226;
  id v227;
  id *v228;
  int v229;
  id v230;
  id v231;
  id *v232;
  int v233;
  id v234;
  id v235;
  id *v236;
  int v237;
  id v238;
  id v239;
  id *v240;
  int v241;
  id v242;
  id v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  char *v250;
  uint64_t v251;
  _QWORD *v252;
  char *v253;
  void (*v254)(_QWORD *, _QWORD, uint64_t, int *);
  void (*v255)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v256;
  _QWORD *v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  int *v271;
  _QWORD *v272;
  uint64_t v273;
  uint64_t v274;
  __int128 v275;
  id *v276;
  int v277;
  id v278;
  id v279;
  id *v280;
  int v281;
  id v282;
  id v283;
  id *v284;
  int v285;
  id v286;
  id v287;
  id *v288;
  int v289;
  id v290;
  id v291;
  id *v292;
  int v293;
  id v294;
  id v295;
  uint64_t v296;
  char *v297;
  _QWORD *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  _QWORD *v303;
  uint64_t v304;
  _QWORD *v305;
  _QWORD *v306;
  void (*v307)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  int *v311;
  uint64_t v312;
  unsigned int (*v313)(_QWORD *, uint64_t, int *);
  uint64_t v314;
  int *v315;
  _QWORD *v316;
  int v317;
  uint64_t v318;
  uint64_t v319;
  __int128 v320;
  id *v321;
  int v322;
  id v323;
  id v324;
  id *v325;
  int v326;
  id v327;
  id v328;
  id *v329;
  int v330;
  id v331;
  id v332;
  id *v333;
  int v334;
  id v335;
  id v336;
  id *v337;
  int v338;
  id v339;
  id v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  _QWORD *v346;
  _QWORD *v347;
  uint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  void (*v351)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  __int128 v360;
  __int128 v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v365;
  uint64_t v367;
  _QWORD *v368;
  unsigned int (*v369)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v370;
  _QWORD *v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  _QWORD *v376;
  _QWORD *v377;
  int *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  _QWORD *v384;
  unsigned int (*v385)(_QWORD *, uint64_t, uint64_t);
  int *v386;
  _QWORD *v387;
  _QWORD *__dst;
  _QWORD *__dsta;
  void (**__dstb)(void *, const void *, _QWORD);
  int *v391;
  uint64_t v392;
  int *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  _QWORD *v399;
  _QWORD *v400;
  unsigned int (*v401)(char *, uint64_t, uint64_t);
  uint64_t v402;
  unsigned int (*v403)(char *, uint64_t, uint64_t);
  _QWORD *v404;
  uint64_t v405;
  uint64_t v406;
  _QWORD *v407;
  uint64_t v408;
  unsigned int (*v409)(char *, uint64_t, int *);
  char *v410;
  int *v411;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for ShelfError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v14 = (void *)*a2;
        *a1 = *a2;
        v15 = v14;
        v11 = a1;
        v12 = a3;
        v13 = 2;
        goto LABEL_177;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        v16 = (int *)type metadata accessor for ModernShelf(0);
        v17 = v16[5];
        v18 = (_QWORD *)((char *)a1 + v17);
        v19 = (_QWORD *)((char *)a2 + v17);
        v20 = type metadata accessor for Header(0);
        v398 = *(_QWORD *)(v20 - 8);
        v21 = *(unsigned int (**)(char *, uint64_t, int *))(v398 + 48);
        swift_bridgeObjectRetain();
        v409 = v21;
        v411 = (int *)v20;
        if (v21((char *)v19, 1, (int *)v20))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v391 = v16;
          v396 = a3;
          *v18 = *v19;
          v18[1] = v19[1];
          v18[2] = v19[2];
          v18[3] = v19[3];
          v18[4] = v19[4];
          v18[5] = v19[5];
          *((_BYTE *)v18 + 48) = *((_BYTE *)v19 + 48);
          *((_BYTE *)v18 + 49) = *((_BYTE *)v19 + 49);
          v23 = *(int *)(v20 + 36);
          v407 = v18;
          v24 = (_QWORD *)((char *)v18 + v23);
          v404 = v19;
          v25 = (_QWORD *)((char *)v19 + v23);
          v26 = type metadata accessor for ActionMenu(0);
          v27 = *(_QWORD **)(v26 - 8);
          v28 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v27[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v402 = v26;
          if (v28(v25, 1, v26))
          {
            v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
            v30 = v407;
            v31 = v404;
            v16 = v391;
          }
          else
          {
            v384 = v24;
            __dst = v27;
            *v24 = *v25;
            v24[1] = v25[1];
            v24[2] = v25[2];
            v24[3] = v25[3];
            v24[4] = v25[4];
            v24[5] = v25[5];
            v32 = *(int *)(v26 + 28);
            v33 = (_QWORD *)((char *)v24 + v32);
            v399 = v25;
            v34 = (_QWORD *)((char *)v25 + v32);
            v35 = type metadata accessor for ArtworkModel(0);
            v36 = *(_QWORD *)(v35 - 8);
            v37 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v37(v34, 1, v35))
            {
              v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
              v39 = v402;
              v31 = v404;
              v41 = v384;
              v40 = __dst;
              v30 = v407;
              v16 = v391;
            }
            else
            {
              v378 = (int *)v35;
              v381 = v36;
              *v33 = *v34;
              v33[1] = v34[1];
              v42 = *((unsigned __int8 *)v34 + 32);
              swift_bridgeObjectRetain();
              v31 = v404;
              v16 = v391;
              if (v42 == 255)
              {
                v45 = *((_OWORD *)v34 + 1);
                *((_BYTE *)v33 + 32) = *((_BYTE *)v34 + 32);
                *((_OWORD *)v33 + 1) = v45;
              }
              else
              {
                v43 = v34[2];
                v44 = v34[3];
                sub_3D464(v43, v44, v42);
                v33[2] = v43;
                v33[3] = v44;
                *((_BYTE *)v33 + 32) = v42;
              }
              v41 = v384;
              v33[5] = v34[5];
              v33[6] = v34[6];
              v46 = (id *)(v34 + 7);
              v47 = *((unsigned __int8 *)v34 + 64);
              if (v47 == 255)
              {
                v49 = *v46;
                *((_BYTE *)v33 + 64) = *((_BYTE *)v34 + 64);
                v33[7] = v49;
              }
              else
              {
                v48 = *v46;
                sub_3D47C(*v46, *((_BYTE *)v34 + 64));
                v33[7] = v48;
                *((_BYTE *)v33 + 64) = v47;
              }
              v50 = (id *)(v34 + 9);
              v51 = *((unsigned __int8 *)v34 + 80);
              if (v51 == 255)
              {
                v53 = *v50;
                *((_BYTE *)v33 + 80) = *((_BYTE *)v34 + 80);
                v33[9] = v53;
              }
              else
              {
                v52 = *v50;
                sub_3D47C(*v50, *((_BYTE *)v34 + 80));
                v33[9] = v52;
                *((_BYTE *)v33 + 80) = v51;
              }
              v54 = (id *)(v34 + 11);
              v55 = *((unsigned __int8 *)v34 + 96);
              if (v55 == 255)
              {
                v57 = *v54;
                *((_BYTE *)v33 + 96) = *((_BYTE *)v34 + 96);
                v33[11] = v57;
              }
              else
              {
                v56 = *v54;
                sub_3D47C(*v54, *((_BYTE *)v34 + 96));
                v33[11] = v56;
                *((_BYTE *)v33 + 96) = v55;
              }
              v58 = (id *)(v34 + 13);
              v59 = *((unsigned __int8 *)v34 + 112);
              if (v59 == 255)
              {
                v61 = *v58;
                *((_BYTE *)v33 + 112) = *((_BYTE *)v34 + 112);
                v33[13] = v61;
              }
              else
              {
                v60 = *v58;
                sub_3D47C(*v58, *((_BYTE *)v34 + 112));
                v33[13] = v60;
                *((_BYTE *)v33 + 112) = v59;
              }
              v62 = (id *)(v34 + 15);
              v63 = *((unsigned __int8 *)v34 + 128);
              if (v63 == 255)
              {
                v65 = *v62;
                *((_BYTE *)v33 + 128) = *((_BYTE *)v34 + 128);
                v33[15] = v65;
              }
              else
              {
                v64 = *v62;
                sub_3D47C(*v62, *((_BYTE *)v34 + 128));
                v33[15] = v64;
                *((_BYTE *)v33 + 128) = v63;
              }
              *((_BYTE *)v33 + 129) = *((_BYTE *)v34 + 129);
              v66 = v378[11];
              v67 = (char *)v33 + v66;
              v68 = (char *)v34 + v66;
              v69 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
              v70 = v378[12];
              v71 = (_QWORD *)((char *)v33 + v70);
              v72 = (_QWORD *)((char *)v34 + v70);
              *v71 = *v72;
              v71[1] = v72[1];
              *((_BYTE *)v33 + v378[13]) = *((_BYTE *)v34 + v378[13]);
              *((_BYTE *)v33 + v378[14]) = *((_BYTE *)v34 + v378[14]);
              *((_BYTE *)v33 + v378[15]) = *((_BYTE *)v34 + v378[15]);
              v73 = v378[16];
              v74 = (_QWORD *)((char *)v33 + v73);
              v75 = (_QWORD *)((char *)v34 + v73);
              *v74 = *v75;
              v74[1] = v75[1];
              v76 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v381 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v76(v33, 0, 1, v378);
              v40 = __dst;
              v30 = v407;
              v39 = v402;
            }
            *(_QWORD *)((char *)v41 + *(int *)(v39 + 32)) = *(_QWORD *)((char *)v399 + *(int *)(v39 + 32));
            v77 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v40[7];
            swift_bridgeObjectRetain();
            v77(v41, 0, 1, v39);
          }
          v78 = v411[10];
          v79 = (_QWORD *)((char *)v30 + v78);
          v80 = (_QWORD *)((char *)v31 + v78);
          v81 = type metadata accessor for Header.PrimaryAction(0);
          v82 = *(_QWORD *)(v81 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
          {
            v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload(v80, v81) == 1)
            {
              v392 = v82;
              *v79 = *v80;
              v79[1] = v80[1];
              v79[2] = v80[2];
              v79[3] = v80[3];
              v79[4] = v80[4];
              v79[5] = v80[5];
              v84 = *(int *)(v402 + 28);
              v400 = v79;
              __dsta = (_QWORD *)((char *)v79 + v84);
              v85 = (_QWORD *)((char *)v80 + v84);
              v86 = type metadata accessor for ArtworkModel(0);
              v382 = *(_QWORD *)(v86 - 8);
              v385 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v382 + 48);
              swift_bridgeObjectRetain();
              v87 = v85;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v385(v85, 1, v86))
              {
                v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
                memcpy(__dsta, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
                v31 = v404;
              }
              else
              {
                v386 = (int *)v86;
                *__dsta = *v85;
                __dsta[1] = v85[1];
                v90 = *((unsigned __int8 *)v85 + 32);
                swift_bridgeObjectRetain();
                if (v90 == 255)
                {
                  v94 = *((_OWORD *)v87 + 1);
                  *((_BYTE *)__dsta + 32) = *((_BYTE *)v87 + 32);
                  *((_OWORD *)__dsta + 1) = v94;
                }
                else
                {
                  v91 = v87;
                  v92 = v87[2];
                  v93 = v87[3];
                  sub_3D464(v92, v93, v90);
                  __dsta[2] = v92;
                  __dsta[3] = v93;
                  v87 = v91;
                  *((_BYTE *)__dsta + 32) = v90;
                }
                v31 = v404;
                __dsta[5] = v87[5];
                __dsta[6] = v87[6];
                v95 = (id *)(v87 + 7);
                v96 = *((unsigned __int8 *)v87 + 64);
                if (v96 == 255)
                {
                  v98 = *v95;
                  *((_BYTE *)__dsta + 64) = *((_BYTE *)v87 + 64);
                  __dsta[7] = v98;
                }
                else
                {
                  v97 = *v95;
                  sub_3D47C(*v95, *((_BYTE *)v87 + 64));
                  __dsta[7] = v97;
                  *((_BYTE *)__dsta + 64) = v96;
                }
                v99 = (id *)(v87 + 9);
                v100 = *((unsigned __int8 *)v87 + 80);
                if (v100 == 255)
                {
                  v102 = *v99;
                  *((_BYTE *)__dsta + 80) = *((_BYTE *)v87 + 80);
                  __dsta[9] = v102;
                }
                else
                {
                  v101 = *v99;
                  sub_3D47C(*v99, *((_BYTE *)v87 + 80));
                  __dsta[9] = v101;
                  *((_BYTE *)__dsta + 80) = v100;
                }
                v103 = (id *)(v87 + 11);
                v104 = *((unsigned __int8 *)v87 + 96);
                if (v104 == 255)
                {
                  v106 = *v103;
                  *((_BYTE *)__dsta + 96) = *((_BYTE *)v87 + 96);
                  __dsta[11] = v106;
                }
                else
                {
                  v105 = *v103;
                  sub_3D47C(*v103, *((_BYTE *)v87 + 96));
                  __dsta[11] = v105;
                  *((_BYTE *)__dsta + 96) = v104;
                }
                v107 = (id *)(v87 + 13);
                v108 = *((unsigned __int8 *)v87 + 112);
                if (v108 == 255)
                {
                  v110 = *v107;
                  *((_BYTE *)__dsta + 112) = *((_BYTE *)v87 + 112);
                  __dsta[13] = v110;
                }
                else
                {
                  v109 = *v107;
                  sub_3D47C(*v107, *((_BYTE *)v87 + 112));
                  __dsta[13] = v109;
                  *((_BYTE *)__dsta + 112) = v108;
                }
                v111 = (id *)(v87 + 15);
                v112 = *((unsigned __int8 *)v87 + 128);
                if (v112 == 255)
                {
                  v114 = *v111;
                  *((_BYTE *)__dsta + 128) = *((_BYTE *)v87 + 128);
                  __dsta[15] = v114;
                }
                else
                {
                  v113 = *v111;
                  sub_3D47C(*v111, *((_BYTE *)v87 + 128));
                  __dsta[15] = v113;
                  *((_BYTE *)__dsta + 128) = v112;
                }
                *((_BYTE *)__dsta + 129) = *((_BYTE *)v87 + 129);
                v115 = v386[11];
                v116 = (char *)__dsta + v115;
                v379 = (char *)v87 + v115;
                v117 = type metadata accessor for ArtworkCrop(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16))(v116, v379, v117);
                v118 = v386[12];
                v119 = (_QWORD *)((char *)__dsta + v118);
                v120 = (_QWORD *)((char *)v87 + v118);
                *v119 = *v120;
                v119[1] = v120[1];
                *((_BYTE *)__dsta + v386[13]) = *((_BYTE *)v87 + v386[13]);
                *((_BYTE *)__dsta + v386[14]) = *((_BYTE *)v87 + v386[14]);
                *((_BYTE *)__dsta + v386[15]) = *((_BYTE *)v87 + v386[15]);
                v121 = v386[16];
                v122 = (_QWORD *)((char *)__dsta + v121);
                v123 = (_QWORD *)((char *)v87 + v121);
                *v122 = *v123;
                v122[1] = v123[1];
                v124 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v382 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v124(__dsta, 0, 1, v386);
              }
              v79 = v400;
              *(_QWORD *)((char *)v400 + *(int *)(v402 + 32)) = *(_QWORD *)((char *)v80 + *(int *)(v402 + 32));
              swift_bridgeObjectRetain();
              v89 = 1;
              v82 = v392;
              v30 = v407;
            }
            else
            {
              *v79 = *v80;
              swift_retain();
              v89 = 0;
            }
            swift_storeEnumTagMultiPayload(v79, v81, v89);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
          }
          *(_QWORD *)((char *)v30 + v411[11]) = *(_QWORD *)((char *)v31 + v411[11]);
          v125 = v411[12];
          v126 = (_QWORD *)((char *)v30 + v125);
          v127 = (_QWORD *)((char *)v31 + v125);
          v128 = (int *)type metadata accessor for ArtworkModel(0);
          v129 = *((_QWORD *)v128 - 1);
          v130 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v129 + 48);
          swift_bridgeObjectRetain();
          if (v130(v127, 1, v128))
          {
            v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
          }
          else
          {
            v405 = v129;
            *v126 = *v127;
            v126[1] = v127[1];
            v132 = *((unsigned __int8 *)v127 + 32);
            swift_bridgeObjectRetain();
            if (v132 == 255)
            {
              v135 = *((_OWORD *)v127 + 1);
              *((_BYTE *)v126 + 32) = *((_BYTE *)v127 + 32);
              *((_OWORD *)v126 + 1) = v135;
            }
            else
            {
              v133 = v127[2];
              v134 = v127[3];
              sub_3D464(v133, v134, v132);
              v126[2] = v133;
              v126[3] = v134;
              *((_BYTE *)v126 + 32) = v132;
            }
            v126[5] = v127[5];
            v126[6] = v127[6];
            v136 = (id *)(v127 + 7);
            v137 = *((unsigned __int8 *)v127 + 64);
            if (v137 == 255)
            {
              v139 = *v136;
              *((_BYTE *)v126 + 64) = *((_BYTE *)v127 + 64);
              v126[7] = v139;
            }
            else
            {
              v138 = *v136;
              sub_3D47C(*v136, *((_BYTE *)v127 + 64));
              v126[7] = v138;
              *((_BYTE *)v126 + 64) = v137;
            }
            v140 = (id *)(v127 + 9);
            v141 = *((unsigned __int8 *)v127 + 80);
            if (v141 == 255)
            {
              v143 = *v140;
              *((_BYTE *)v126 + 80) = *((_BYTE *)v127 + 80);
              v126[9] = v143;
            }
            else
            {
              v142 = *v140;
              sub_3D47C(*v140, *((_BYTE *)v127 + 80));
              v126[9] = v142;
              *((_BYTE *)v126 + 80) = v141;
            }
            v144 = (id *)(v127 + 11);
            v145 = *((unsigned __int8 *)v127 + 96);
            if (v145 == 255)
            {
              v147 = *v144;
              *((_BYTE *)v126 + 96) = *((_BYTE *)v127 + 96);
              v126[11] = v147;
            }
            else
            {
              v146 = *v144;
              sub_3D47C(*v144, *((_BYTE *)v127 + 96));
              v126[11] = v146;
              *((_BYTE *)v126 + 96) = v145;
            }
            v148 = (id *)(v127 + 13);
            v149 = *((unsigned __int8 *)v127 + 112);
            if (v149 == 255)
            {
              v151 = *v148;
              *((_BYTE *)v126 + 112) = *((_BYTE *)v127 + 112);
              v126[13] = v151;
            }
            else
            {
              v150 = *v148;
              sub_3D47C(*v148, *((_BYTE *)v127 + 112));
              v126[13] = v150;
              *((_BYTE *)v126 + 112) = v149;
            }
            v152 = (id *)(v127 + 15);
            v153 = *((unsigned __int8 *)v127 + 128);
            if (v153 == 255)
            {
              v155 = *v152;
              *((_BYTE *)v126 + 128) = *((_BYTE *)v127 + 128);
              v126[15] = v155;
            }
            else
            {
              v154 = *v152;
              sub_3D47C(*v152, *((_BYTE *)v127 + 128));
              v126[15] = v154;
              *((_BYTE *)v126 + 128) = v153;
            }
            *((_BYTE *)v126 + 129) = *((_BYTE *)v127 + 129);
            v156 = v128[11];
            v157 = (char *)v126 + v156;
            v158 = (char *)v127 + v156;
            v159 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
            v160 = v128[12];
            v161 = (_QWORD *)((char *)v126 + v160);
            v162 = (_QWORD *)((char *)v127 + v160);
            *v161 = *v162;
            v161[1] = v162[1];
            *((_BYTE *)v126 + v128[13]) = *((_BYTE *)v127 + v128[13]);
            *((_BYTE *)v126 + v128[14]) = *((_BYTE *)v127 + v128[14]);
            *((_BYTE *)v126 + v128[15]) = *((_BYTE *)v127 + v128[15]);
            v163 = v128[16];
            v164 = (_QWORD *)((char *)v126 + v163);
            v165 = (_QWORD *)((char *)v127 + v163);
            *v164 = *v165;
            v164[1] = v165[1];
            v166 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v405 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v166(v126, 0, 1, v128);
          }
          a3 = v396;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v398 + 56))(v30, 0, 1, v411);
        }
        *(_OWORD *)((char *)a1 + v16[6]) = *(_OWORD *)((char *)a2 + v16[6]);
        *(_QWORD *)((char *)a1 + v16[7]) = *(_QWORD *)((char *)a2 + v16[7]);
        *((_BYTE *)a1 + v16[8]) = *((_BYTE *)a2 + v16[8]);
        v167 = v16[9];
        v168 = (char *)a1 + v167;
        v169 = (char *)a2 + v167;
        v170 = type metadata accessor for URL(0);
        v171 = *(_QWORD *)(v170 - 8);
        v172 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48);
        v173 = v170;
        swift_bridgeObjectRetain();
        v403 = v172;
        if (v172(v169, 1, v173))
        {
          v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
          memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v168, v169, v173);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v173);
        }
        *((_BYTE *)a1 + v16[10]) = *((_BYTE *)a2 + v16[10]);
        *((_BYTE *)a1 + v16[11]) = *((_BYTE *)a2 + v16[11]);
        v175 = v16[12];
        v176 = (char *)a1 + v175;
        v177 = (char *)a2 + v175;
        v178 = *(_QWORD *)((char *)a2 + v175 + 24);
        if (v178)
        {
          *((_QWORD *)v176 + 3) = v178;
          *((_QWORD *)v176 + 4) = *((_QWORD *)v177 + 4);
          (**(void (***)(void))(v178 - 8))();
        }
        else
        {
          v179 = *(_OWORD *)v177;
          v180 = *((_OWORD *)v177 + 1);
          *((_QWORD *)v176 + 4) = *((_QWORD *)v177 + 4);
          *(_OWORD *)v176 = v179;
          *((_OWORD *)v176 + 1) = v180;
        }
        v181 = v16;
        v182 = v16[13];
        v183 = (char *)a1 + v182;
        v184 = (char *)a2 + v182;
        v185 = type metadata accessor for ImpressionMetrics(0);
        v186 = *(_QWORD *)(v185 - 8);
        v401 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48);
        __dstb = (void (**)(void *, const void *, _QWORD))v171;
        v408 = v185;
        v406 = v186;
        if (v401(v184, 1, v185))
        {
          v187 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
          memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v183, v184, v185);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v186 + 56))(v183, 0, 1, v185);
        }
        v188 = v181;
        v189 = v409;
        v190 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
        v191 = (_QWORD *)((char *)a1 + v190);
        v192 = (char *)a2 + v190;
        *v191 = *(_QWORD *)((char *)a2 + v190);
        v191[1] = *(_QWORD *)((char *)a2 + v190 + 8);
        v193 = v181[5];
        v194 = (_QWORD *)((char *)v191 + v193);
        v410 = v192;
        v195 = &v192[v193];
        swift_bridgeObjectRetain();
        if (v189(v195, 1, v411))
        {
          v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
          v197 = v403;
          v198 = v406;
          v199 = v401;
        }
        else
        {
          v376 = v191;
          v380 = v173;
          v393 = v181;
          *v194 = *(_QWORD *)v195;
          v194[1] = *((_QWORD *)v195 + 1);
          v194[2] = *((_QWORD *)v195 + 2);
          v194[3] = *((_QWORD *)v195 + 3);
          v194[4] = *((_QWORD *)v195 + 4);
          v194[5] = *((_QWORD *)v195 + 5);
          *((_BYTE *)v194 + 48) = v195[48];
          *((_BYTE *)v194 + 49) = v195[49];
          v200 = v411[9];
          v383 = v195;
          v387 = v194;
          v201 = (_QWORD *)((char *)v194 + v200);
          v202 = &v195[v200];
          v203 = type metadata accessor for ActionMenu(0);
          v204 = *(_QWORD **)(v203 - 8);
          v205 = (unsigned int (*)(char *, uint64_t, uint64_t))v204[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v397 = a3;
          if (v205(v202, 1, v203))
          {
            v206 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
            memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
            v207 = v411;
            v208 = v383;
            v188 = v393;
            v191 = v376;
          }
          else
          {
            v368 = v201;
            v370 = v204;
            *v201 = *(_QWORD *)v202;
            v201[1] = *((_QWORD *)v202 + 1);
            v201[2] = *((_QWORD *)v202 + 2);
            v201[3] = *((_QWORD *)v202 + 3);
            v201[4] = *((_QWORD *)v202 + 4);
            v201[5] = *((_QWORD *)v202 + 5);
            v372 = v202;
            v374 = v203;
            v209 = *(int *)(v203 + 28);
            v210 = (_QWORD *)((char *)v201 + v209);
            v211 = &v202[v209];
            v212 = type metadata accessor for ArtworkModel(0);
            v213 = *(_QWORD *)(v212 - 8);
            v214 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v213 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v214(v211, 1, v212))
            {
              v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
              v207 = v411;
              v217 = v368;
              v216 = v204;
              v188 = v393;
              v218 = v372;
              v208 = v383;
              v191 = v376;
            }
            else
            {
              v367 = v213;
              v219 = (int *)v212;
              *v210 = *(_QWORD *)v211;
              v210[1] = *((_QWORD *)v211 + 1);
              v220 = v211[32];
              swift_bridgeObjectRetain();
              v188 = v393;
              v208 = v383;
              v191 = v376;
              if (v220 == 255)
              {
                v223 = *((_OWORD *)v211 + 1);
                *((_BYTE *)v210 + 32) = v211[32];
                *((_OWORD *)v210 + 1) = v223;
              }
              else
              {
                v221 = *((_QWORD *)v211 + 2);
                v222 = *((_QWORD *)v211 + 3);
                sub_3D464(v221, v222, v220);
                v210[2] = v221;
                v210[3] = v222;
                *((_BYTE *)v210 + 32) = v220;
              }
              v210[5] = *((_QWORD *)v211 + 5);
              v210[6] = *((_QWORD *)v211 + 6);
              v224 = (id *)(v211 + 56);
              v225 = v211[64];
              if (v225 == 255)
              {
                v227 = *v224;
                *((_BYTE *)v210 + 64) = v211[64];
                v210[7] = v227;
              }
              else
              {
                v226 = *v224;
                sub_3D47C(*v224, v211[64]);
                v210[7] = v226;
                *((_BYTE *)v210 + 64) = v225;
              }
              v228 = (id *)(v211 + 72);
              v229 = v211[80];
              if (v229 == 255)
              {
                v231 = *v228;
                *((_BYTE *)v210 + 80) = v211[80];
                v210[9] = v231;
              }
              else
              {
                v230 = *v228;
                sub_3D47C(*v228, v211[80]);
                v210[9] = v230;
                *((_BYTE *)v210 + 80) = v229;
              }
              v232 = (id *)(v211 + 88);
              v233 = v211[96];
              if (v233 == 255)
              {
                v235 = *v232;
                *((_BYTE *)v210 + 96) = v211[96];
                v210[11] = v235;
              }
              else
              {
                v234 = *v232;
                sub_3D47C(*v232, v211[96]);
                v210[11] = v234;
                *((_BYTE *)v210 + 96) = v233;
              }
              v236 = (id *)(v211 + 104);
              v237 = v211[112];
              if (v237 == 255)
              {
                v239 = *v236;
                *((_BYTE *)v210 + 112) = v211[112];
                v210[13] = v239;
              }
              else
              {
                v238 = *v236;
                sub_3D47C(*v236, v211[112]);
                v210[13] = v238;
                *((_BYTE *)v210 + 112) = v237;
              }
              v240 = (id *)(v211 + 120);
              v241 = v211[128];
              if (v241 == 255)
              {
                v243 = *v240;
                *((_BYTE *)v210 + 128) = v211[128];
                v210[15] = v243;
              }
              else
              {
                v242 = *v240;
                sub_3D47C(*v240, v211[128]);
                v210[15] = v242;
                *((_BYTE *)v210 + 128) = v241;
              }
              v207 = v411;
              *((_BYTE *)v210 + 129) = v211[129];
              v244 = v219[11];
              v245 = (char *)v210 + v244;
              v246 = &v211[v244];
              v247 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(v245, v246, v247);
              v248 = v219[12];
              v249 = (_QWORD *)((char *)v210 + v248);
              v250 = &v211[v248];
              *v249 = *(_QWORD *)v250;
              v249[1] = *((_QWORD *)v250 + 1);
              *((_BYTE *)v210 + v219[13]) = v211[v219[13]];
              *((_BYTE *)v210 + v219[14]) = v211[v219[14]];
              *((_BYTE *)v210 + v219[15]) = v211[v219[15]];
              v251 = v219[16];
              v252 = (_QWORD *)((char *)v210 + v251);
              v253 = &v211[v251];
              *v252 = *(_QWORD *)v253;
              v252[1] = *((_QWORD *)v253 + 1);
              v254 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v367 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v254(v210, 0, 1, v219);
              v217 = v368;
              v216 = v370;
              v218 = v372;
            }
            v203 = v374;
            *(_QWORD *)((char *)v217 + *(int *)(v374 + 32)) = *(_QWORD *)((char *)v218 + *(int *)(v374 + 32));
            v255 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v216[7];
            swift_bridgeObjectRetain();
            v255(v217, 0, 1, v374);
            v194 = v387;
          }
          v256 = v207[10];
          v257 = (_QWORD *)((char *)v194 + v256);
          v258 = (_QWORD *)((char *)v208 + v256);
          v259 = type metadata accessor for Header.PrimaryAction(0);
          v260 = *(_QWORD *)(v259 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v260 + 48))(v258, 1, v259))
          {
            v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
            memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
            a3 = v397;
            v262 = v383;
          }
          else
          {
            v394 = v260;
            if (swift_getEnumCaseMultiPayload(v258, v259) == 1)
            {
              *v257 = *v258;
              v257[1] = v258[1];
              v257[2] = v258[2];
              v257[3] = v258[3];
              v257[4] = v258[4];
              v257[5] = v258[5];
              v373 = v259;
              v375 = v203;
              v263 = *(int *)(v203 + 28);
              v377 = v257;
              v371 = (_QWORD *)((char *)v257 + v263);
              v264 = (_QWORD *)((char *)v258 + v263);
              v265 = type metadata accessor for ArtworkModel(0);
              v266 = *(_QWORD *)(v265 - 8);
              v369 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v266 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v267 = v264;
              swift_bridgeObjectRetain();
              if (v369(v264, 1, v265))
              {
                v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
                memcpy(v371, v264, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
                v207 = v411;
              }
              else
              {
                *v371 = *v264;
                v371[1] = v264[1];
                v270 = *((unsigned __int8 *)v264 + 32);
                swift_bridgeObjectRetain();
                v271 = (int *)v265;
                if (v270 == 255)
                {
                  v275 = *((_OWORD *)v267 + 1);
                  *((_BYTE *)v371 + 32) = *((_BYTE *)v267 + 32);
                  *((_OWORD *)v371 + 1) = v275;
                }
                else
                {
                  v272 = v267;
                  v273 = v267[2];
                  v274 = v267[3];
                  sub_3D464(v273, v274, v270);
                  v371[2] = v273;
                  v371[3] = v274;
                  v267 = v272;
                  *((_BYTE *)v371 + 32) = v270;
                }
                v371[5] = v267[5];
                v371[6] = v267[6];
                v276 = (id *)(v267 + 7);
                v277 = *((unsigned __int8 *)v267 + 64);
                if (v277 == 255)
                {
                  v279 = *v276;
                  *((_BYTE *)v371 + 64) = *((_BYTE *)v267 + 64);
                  v371[7] = v279;
                }
                else
                {
                  v278 = *v276;
                  sub_3D47C(*v276, *((_BYTE *)v267 + 64));
                  v371[7] = v278;
                  *((_BYTE *)v371 + 64) = v277;
                }
                v280 = (id *)(v267 + 9);
                v281 = *((unsigned __int8 *)v267 + 80);
                if (v281 == 255)
                {
                  v283 = *v280;
                  *((_BYTE *)v371 + 80) = *((_BYTE *)v267 + 80);
                  v371[9] = v283;
                }
                else
                {
                  v282 = *v280;
                  sub_3D47C(*v280, *((_BYTE *)v267 + 80));
                  v371[9] = v282;
                  *((_BYTE *)v371 + 80) = v281;
                }
                v284 = (id *)(v267 + 11);
                v285 = *((unsigned __int8 *)v267 + 96);
                if (v285 == 255)
                {
                  v287 = *v284;
                  *((_BYTE *)v371 + 96) = *((_BYTE *)v267 + 96);
                  v371[11] = v287;
                }
                else
                {
                  v286 = *v284;
                  sub_3D47C(*v284, *((_BYTE *)v267 + 96));
                  v371[11] = v286;
                  *((_BYTE *)v371 + 96) = v285;
                }
                v288 = (id *)(v267 + 13);
                v289 = *((unsigned __int8 *)v267 + 112);
                if (v289 == 255)
                {
                  v291 = *v288;
                  *((_BYTE *)v371 + 112) = *((_BYTE *)v267 + 112);
                  v371[13] = v291;
                }
                else
                {
                  v290 = *v288;
                  sub_3D47C(*v288, *((_BYTE *)v267 + 112));
                  v371[13] = v290;
                  *((_BYTE *)v371 + 112) = v289;
                }
                v292 = (id *)(v267 + 15);
                v293 = *((unsigned __int8 *)v267 + 128);
                if (v293 == 255)
                {
                  v295 = *v292;
                  *((_BYTE *)v371 + 128) = *((_BYTE *)v267 + 128);
                  v371[15] = v295;
                }
                else
                {
                  v294 = *v292;
                  sub_3D47C(*v292, *((_BYTE *)v267 + 128));
                  v371[15] = v294;
                  *((_BYTE *)v371 + 128) = v293;
                }
                v207 = v411;
                *((_BYTE *)v371 + 129) = *((_BYTE *)v267 + 129);
                v296 = v271[11];
                v297 = (char *)v371 + v296;
                v298 = v267;
                v299 = (char *)v267 + v296;
                v300 = type metadata accessor for ArtworkCrop(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 16))(v297, v299, v300);
                v301 = v271[12];
                v302 = (_QWORD *)((char *)v371 + v301);
                v303 = (_QWORD *)((char *)v298 + v301);
                *v302 = *v303;
                v302[1] = v303[1];
                *((_BYTE *)v371 + v271[13]) = *((_BYTE *)v298 + v271[13]);
                *((_BYTE *)v371 + v271[14]) = *((_BYTE *)v298 + v271[14]);
                *((_BYTE *)v371 + v271[15]) = *((_BYTE *)v298 + v271[15]);
                v304 = v271[16];
                v305 = (_QWORD *)((char *)v371 + v304);
                v306 = (_QWORD *)((char *)v298 + v304);
                *v305 = *v306;
                v305[1] = v306[1];
                v307 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v266 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v307(v371, 0, 1, v271);
              }
              v257 = v377;
              *(_QWORD *)((char *)v377 + *(int *)(v375 + 32)) = *(_QWORD *)((char *)v258 + *(int *)(v375 + 32));
              swift_bridgeObjectRetain();
              v269 = 1;
              v262 = v383;
              v194 = v387;
              v260 = v394;
              v259 = v373;
            }
            else
            {
              *v257 = *v258;
              swift_retain();
              v269 = 0;
              v262 = v383;
            }
            swift_storeEnumTagMultiPayload(v257, v259, v269);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v260 + 56))(v257, 0, 1, v259);
            a3 = v397;
          }
          *(_QWORD *)((char *)v194 + v207[11]) = *(_QWORD *)((char *)v262 + v207[11]);
          v308 = v207[12];
          v309 = (_QWORD *)((char *)v194 + v308);
          v310 = (_QWORD *)((char *)v262 + v308);
          v311 = (int *)type metadata accessor for ArtworkModel(0);
          v312 = *((_QWORD *)v311 - 1);
          v313 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v312 + 48);
          swift_bridgeObjectRetain();
          if (v313(v310, 1, v311))
          {
            v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v314 - 8) + 64));
            v315 = v411;
            v173 = v380;
            v197 = v403;
            v198 = v406;
            v199 = v401;
            v316 = v387;
          }
          else
          {
            v395 = v312;
            *v309 = *v310;
            v309[1] = v310[1];
            v317 = *((unsigned __int8 *)v310 + 32);
            swift_bridgeObjectRetain();
            if (v317 == 255)
            {
              v320 = *((_OWORD *)v310 + 1);
              *((_BYTE *)v309 + 32) = *((_BYTE *)v310 + 32);
              *((_OWORD *)v309 + 1) = v320;
            }
            else
            {
              v318 = v310[2];
              v319 = v310[3];
              sub_3D464(v318, v319, v317);
              v309[2] = v318;
              v309[3] = v319;
              *((_BYTE *)v309 + 32) = v317;
            }
            v316 = v387;
            v309[5] = v310[5];
            v309[6] = v310[6];
            v321 = (id *)(v310 + 7);
            v322 = *((unsigned __int8 *)v310 + 64);
            a3 = v397;
            if (v322 == 255)
            {
              v324 = *v321;
              *((_BYTE *)v309 + 64) = *((_BYTE *)v310 + 64);
              v309[7] = v324;
            }
            else
            {
              v323 = *v321;
              sub_3D47C(*v321, *((_BYTE *)v310 + 64));
              v309[7] = v323;
              *((_BYTE *)v309 + 64) = v322;
            }
            v325 = (id *)(v310 + 9);
            v326 = *((unsigned __int8 *)v310 + 80);
            if (v326 == 255)
            {
              v328 = *v325;
              *((_BYTE *)v309 + 80) = *((_BYTE *)v310 + 80);
              v309[9] = v328;
            }
            else
            {
              v327 = *v325;
              sub_3D47C(*v325, *((_BYTE *)v310 + 80));
              v309[9] = v327;
              *((_BYTE *)v309 + 80) = v326;
            }
            v329 = (id *)(v310 + 11);
            v330 = *((unsigned __int8 *)v310 + 96);
            if (v330 == 255)
            {
              v332 = *v329;
              *((_BYTE *)v309 + 96) = *((_BYTE *)v310 + 96);
              v309[11] = v332;
            }
            else
            {
              v331 = *v329;
              sub_3D47C(*v329, *((_BYTE *)v310 + 96));
              v309[11] = v331;
              *((_BYTE *)v309 + 96) = v330;
            }
            v333 = (id *)(v310 + 13);
            v334 = *((unsigned __int8 *)v310 + 112);
            if (v334 == 255)
            {
              v336 = *v333;
              *((_BYTE *)v309 + 112) = *((_BYTE *)v310 + 112);
              v309[13] = v336;
            }
            else
            {
              v335 = *v333;
              sub_3D47C(*v333, *((_BYTE *)v310 + 112));
              v309[13] = v335;
              *((_BYTE *)v309 + 112) = v334;
            }
            v337 = (id *)(v310 + 15);
            v338 = *((unsigned __int8 *)v310 + 128);
            if (v338 == 255)
            {
              v340 = *v337;
              *((_BYTE *)v309 + 128) = *((_BYTE *)v310 + 128);
              v309[15] = v340;
            }
            else
            {
              v339 = *v337;
              sub_3D47C(*v337, *((_BYTE *)v310 + 128));
              v309[15] = v339;
              *((_BYTE *)v309 + 128) = v338;
            }
            *((_BYTE *)v309 + 129) = *((_BYTE *)v310 + 129);
            v341 = v311[11];
            v342 = (char *)v309 + v341;
            v343 = (char *)v310 + v341;
            v344 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v342, v343, v344);
            v345 = v311[12];
            v346 = (_QWORD *)((char *)v309 + v345);
            v347 = (_QWORD *)((char *)v310 + v345);
            *v346 = *v347;
            v346[1] = v347[1];
            *((_BYTE *)v309 + v311[13]) = *((_BYTE *)v310 + v311[13]);
            *((_BYTE *)v309 + v311[14]) = *((_BYTE *)v310 + v311[14]);
            *((_BYTE *)v309 + v311[15]) = *((_BYTE *)v310 + v311[15]);
            v348 = v311[16];
            v349 = (_QWORD *)((char *)v309 + v348);
            v350 = (_QWORD *)((char *)v310 + v348);
            *v349 = *v350;
            v349[1] = v350[1];
            v351 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v395 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v351(v309, 0, 1, v311);
            v315 = v411;
            v173 = v380;
            v197 = v403;
            v198 = v406;
            v199 = v401;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v398 + 56))(v316, 0, 1, v315);
        }
        *(_OWORD *)((char *)v191 + v188[6]) = *(_OWORD *)&v410[v188[6]];
        *(_QWORD *)((char *)v191 + v188[7]) = *(_QWORD *)&v410[v188[7]];
        *((_BYTE *)v191 + v188[8]) = v410[v188[8]];
        v352 = v188[9];
        v353 = (char *)v191 + v352;
        v354 = &v410[v352];
        swift_bridgeObjectRetain();
        if (v197(v354, 1, v173))
        {
          v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
          memcpy(v353, v354, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
        }
        else
        {
          __dstb[2](v353, v354, v173);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v353, 0, 1, v173);
        }
        *((_BYTE *)v191 + v188[10]) = v410[v188[10]];
        *((_BYTE *)v191 + v188[11]) = v410[v188[11]];
        v356 = v188[12];
        v357 = (char *)v191 + v356;
        v358 = &v410[v356];
        v359 = *(_QWORD *)&v410[v356 + 24];
        if (v359)
        {
          *((_QWORD *)v357 + 3) = v359;
          *((_QWORD *)v357 + 4) = *((_QWORD *)v358 + 4);
          (**(void (***)(void))(v359 - 8))();
        }
        else
        {
          v360 = *(_OWORD *)v358;
          v361 = *((_OWORD *)v358 + 1);
          *((_QWORD *)v357 + 4) = *((_QWORD *)v358 + 4);
          *(_OWORD *)v357 = v360;
          *((_OWORD *)v357 + 1) = v361;
        }
        v362 = v188[13];
        v363 = (char *)v191 + v362;
        v364 = &v410[v362];
        if (v199(&v410[v362], 1, v408))
        {
          v365 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
          memcpy(v363, v364, *(_QWORD *)(*(_QWORD *)(v365 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v363, v364, v408);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v363, 0, 1, v408);
        }
        v11 = a1;
        v12 = a3;
        v13 = 1;
        goto LABEL_177;
      case 0:
        v7 = (void *)*a2;
        *a1 = *a2;
        v8 = (void *)a2[1];
        a1[1] = v8;
        v9 = v7;
        v10 = v8;
        v11 = a1;
        v12 = a3;
        v13 = 0;
LABEL_177:
        swift_storeEnumTagMultiPayload(v11, v12, v13);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

